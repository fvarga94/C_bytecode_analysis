set_diff_option	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,0:CALL,1:DO,0:FOR,0	33
0x400205f	              0x55	                                push rbp	      1134	diff.c	FUNCTION_20
0x4002060	          0x4889e5	                            mov rbp, rsp	      1134	diff.c	FUNCTION_20
0x4002063	        0x4883ec20	                           sub rsp, 0x20	      1134	diff.c	FUNCTION_20
0x4002067	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1134	diff.c	FUNCTION_20
0x400206b	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1134	diff.c	FUNCTION_20
0x400206e	    0x488b05000000	            mov rax, qword [0x04002075] 	      1135	diff.c	FUNCTION_20
0x4002075	        0x488945f8	                mov qword [rbp - 8], rax	      1135	diff.c	FUNCTION_20
0x4002079	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1137	diff.c	FUNCTION_20
0x400207d	    0x488905000000	            mov qword [0x04002084], rax 	      1137	diff.c	FUNCTION_20
0x4002084	    0x488b05000000	            mov rax, qword [0x0400208b] 	      1138	diff.c	FUNCTION_20
0x400208b	        0x488b4008	                mov rax, qword [rax + 8]	      1138	diff.c	FUNCTION_20
0x400208f	    0x488905000000	            mov qword [0x04002096], rax 	      1138	diff.c	FUNCTION_20
0x4002096	    0x8b0500000000	            mov eax, dword [0x0400209c] 	      1139	diff.c	FUNCTION_20
0x400209c	          0x83c001	                              add eax, 1	      1139	diff.c	FUNCTION_20
0x400209f	    0x890500000000	            mov dword [0x040020a5], eax 	      1139	diff.c	FUNCTION_20
0x40020a5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1140	diff.c	FUNCTION_20	CALL_1
0x40020a8	            0x4898	                                    cdqe	      1140	diff.c	FUNCTION_20	CALL_1
0x40020aa	      0xb904000000	                              mov ecx, 4	      1140	diff.c	FUNCTION_20	CALL_1
0x40020af	      0xba00000000	                              mov edx, 0	      1140	diff.c	FUNCTION_20	CALL_1
0x40020b4	          0x4889c6	                            mov rsi, rax	      1140	diff.c	FUNCTION_20	CALL_1
0x40020b7	      0xbf00000000	                              mov edi, 0	      1140	diff.c	FUNCTION_20	CALL_1
0x40020bc	      0xe800000000	                          call 0x40020c1	      1140	diff.c	FUNCTION_20	CALL_1
0x40020c1	    0x8b0500000000	            mov eax, dword [0x040020c7] 	      1141	diff.c	FUNCTION_20
0x40020c7	          0x83e801	                              sub eax, 1	      1141	diff.c	FUNCTION_20
0x40020ca	    0x890500000000	            mov dword [0x040020d0], eax 	      1141	diff.c	FUNCTION_20
0x40020d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1142	diff.c	FUNCTION_20
0x40020d4	    0x488905000000	            mov qword [0x040020db], rax 	      1142	diff.c	FUNCTION_20
0x40020db	    0x488b05000000	            mov rax, qword [0x040020e2] 	      1143	diff.c	FUNCTION_20
0x40020e2	        0x488b4008	                mov rax, qword [rax + 8]	      1143	diff.c	FUNCTION_20
0x40020e6	    0x488905000000	            mov qword [0x040020ed], rax 	      1143	diff.c	FUNCTION_20
0x40020ed	              0x90	                                     nop	      1144	diff.c	FUNCTION_20
0x40020ee	              0xc9	                                   leave	      1144	diff.c	FUNCTION_20
0x40020ef	              0xc3	                                     ret	      1144	diff.c	FUNCTION_20
nv_diffgetput	WHILE,0:SWITCH,0:ELSE,2:functions,0:IF,2:CALL,2:DO,0:FOR,0	44
0x40045fd	              0x55	                                push rbp	      2140	diff.c	FUNCTION_37
0x40045fe	          0x4889e5	                            mov rbp, rsp	      2140	diff.c	FUNCTION_37
0x4004601	    0x4881ecf00000	                           sub rsp, 0xf0	      2140	diff.c	FUNCTION_37
0x4004608	    0x89bd1cffffff	             mov dword [rbp - 0xe4], edi	      2140	diff.c	FUNCTION_37
0x400460e	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	      2140	diff.c	FUNCTION_37
0x4004615	    0x64488b042528	                mov rax, qword fs:[0x28]	      2140	diff.c	FUNCTION_37
0x400461e	        0x488945f8	                mov qword [rbp - 8], rax	      2140	diff.c	FUNCTION_37
0x4004622	            0x31c0	                            xor eax, eax	      2140	diff.c	FUNCTION_37
0x4004624	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      2144	diff.c	FUNCTION_37	IF_1
0x400462c	            0x750d	                           jne 0x400463b	      2144	diff.c	FUNCTION_37	IF_1
0x400462e	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      2145	diff.c	FUNCTION_37	IF_1
0x4004639	            0xeb30	                           jmp 0x400466b	      2145	diff.c	FUNCTION_37	IF_1
0x400463b	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4004642	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4004646	          0x4889d1	                            mov rcx, rdx	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4004649	      0xba00000000	                              mov edx, 0	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x400464e	      0xbe1e000000	                           mov esi, 0x1e	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4004653	          0x4889c7	                            mov rdi, rax	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4004656	      0xb800000000	                              mov eax, 0	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x400465b	      0xe800000000	                          call 0x4004660	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4004660	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2149	diff.c	FUNCTION_37	ELSE_1
0x4004664	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2149	diff.c	FUNCTION_37	ELSE_1
0x400466b	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2151	diff.c	FUNCTION_37	IF_2
0x4004672	            0x740c	                            je 0x4004680	      2151	diff.c	FUNCTION_37	IF_2
0x4004674	    0xc78540ffffff	           mov dword [rbp - 0xc0], 0x72 	      2152	diff.c	FUNCTION_37	IF_2
0x400467e	            0xeb0a	                           jmp 0x400468a	      2152	diff.c	FUNCTION_37	IF_2
0x4004680	    0xc78540ffffff	           mov dword [rbp - 0xc0], 0x6f 	      2154	diff.c	FUNCTION_37	ELSE_2
0x400468a	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      2155	diff.c	FUNCTION_37
0x4004694	    0x488b05000000	            mov rax, qword [0x0400469b] 	      2156	diff.c	FUNCTION_37
0x400469b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2156	diff.c	FUNCTION_37
0x400469f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2156	diff.c	FUNCTION_37
0x40046a6	    0x488b05000000	            mov rax, qword [0x040046ad] 	      2157	diff.c	FUNCTION_37
0x40046ad	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2157	diff.c	FUNCTION_37
0x40046b1	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2157	diff.c	FUNCTION_37
0x40046b8	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      2158	diff.c	FUNCTION_37	CALL_2
0x40046bf	          0x4889c7	                            mov rdi, rax	      2158	diff.c	FUNCTION_37	CALL_2
0x40046c2	      0xe800000000	                          call 0x40046c7	      2158	diff.c	FUNCTION_37	CALL_2
0x40046c7	              0x90	                                     nop	      2159	diff.c	FUNCTION_37
0x40046c8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2159	diff.c	FUNCTION_37
0x40046cc	    0x644833042528	                xor rax, qword fs:[0x28]	      2159	diff.c	FUNCTION_37
0x40046d5	            0x7405	                            je 0x40046dc	      2159	diff.c	FUNCTION_37
0x40046d7	      0xe800000000	                          call 0x40046dc	      2159	diff.c	FUNCTION_37
0x40046dc	              0xc9	                                   leave	      2159	diff.c	FUNCTION_37
0x40046dd	              0xc3	                                     ret	      2159	diff.c	FUNCTION_37
diff_check_fill	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,2:CALL,1:DO,0:FOR,0	24
0x4003725	              0x55	                                push rbp	      1720	diff.c	FUNCTION_30
0x4003726	          0x4889e5	                            mov rbp, rsp	      1720	diff.c	FUNCTION_30
0x4003729	        0x4883ec20	                           sub rsp, 0x20	      1720	diff.c	FUNCTION_30
0x400372d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1720	diff.c	FUNCTION_30
0x4003731	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1720	diff.c	FUNCTION_30
0x4003735	    0x8b0500000000	            mov eax, dword [0x0400373b] 	      1724	diff.c	FUNCTION_30	IF_1
0x400373b	          0x83e001	                              and eax, 1	      1724	diff.c	FUNCTION_30	IF_1
0x400373e	            0x85c0	                           test eax, eax	      1724	diff.c	FUNCTION_30	IF_1
0x4003740	            0x7507	                           jne 0x4003749	      1724	diff.c	FUNCTION_30	IF_1
0x4003742	      0xb800000000	                              mov eax, 0	      1725	diff.c	FUNCTION_30	IF_1
0x4003747	            0xeb26	                           jmp 0x400376f	      1725	diff.c	FUNCTION_30	IF_1
0x4003749	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1726	diff.c	FUNCTION_30	CALL_1
0x400374d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1726	diff.c	FUNCTION_30	CALL_1
0x4003751	          0x4889d6	                            mov rsi, rdx	      1726	diff.c	FUNCTION_30	CALL_1
0x4003754	          0x4889c7	                            mov rdi, rax	      1726	diff.c	FUNCTION_30	CALL_1
0x4003757	      0xe800000000	                          call 0x400375c	      1726	diff.c	FUNCTION_30	CALL_1
0x400375c	          0x8945fc	                mov dword [rbp - 4], eax	      1726	diff.c	FUNCTION_30	CALL_1
0x400375f	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1727	diff.c	FUNCTION_30	IF_2
0x4003763	            0x7f07	                            jg 0x400376c	      1727	diff.c	FUNCTION_30	IF_2
0x4003765	      0xb800000000	                              mov eax, 0	      1728	diff.c	FUNCTION_30	IF_2
0x400376a	            0xeb03	                           jmp 0x400376f	      1728	diff.c	FUNCTION_30	IF_2
0x400376c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1729	diff.c	FUNCTION_30
0x400376f	              0xc9	                                   leave	      1730	diff.c	FUNCTION_30
0x4003770	              0xc3	                                     ret	      1730	diff.c	FUNCTION_30
diff_get_corresponding_line	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,1:CALL,1:DO,0:FOR,0	21
0x4005906	              0x55	                                push rbp	      2637	diff.c	FUNCTION_43
0x4005907	          0x4889e5	                            mov rbp, rsp	      2637	diff.c	FUNCTION_43
0x400590a	        0x4883ec20	                           sub rsp, 0x20	      2637	diff.c	FUNCTION_43
0x400590e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2637	diff.c	FUNCTION_43
0x4005912	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2637	diff.c	FUNCTION_43
0x4005916	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2638	diff.c	FUNCTION_43	CALL_1
0x400591a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2638	diff.c	FUNCTION_43	CALL_1
0x400591e	          0x4889d6	                            mov rsi, rdx	      2638	diff.c	FUNCTION_43	CALL_1
0x4005921	          0x4889c7	                            mov rdi, rax	      2638	diff.c	FUNCTION_43	CALL_1
0x4005924	      0xe870fdffff	call sym.diff_get_corresponding_line_int	      2638	diff.c	FUNCTION_43	CALL_1
0x4005929	        0x488945f8	                mov qword [rbp - 8], rax	      2638	diff.c	FUNCTION_43	CALL_1
0x400592d	    0x488b05000000	            mov rax, qword [0x04005934] 	      2641	diff.c	FUNCTION_43	IF_1
0x4005934	          0x488b00	                    mov rax, qword [rax]	      2641	diff.c	FUNCTION_43	IF_1
0x4005937	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2641	diff.c	FUNCTION_43	IF_1
0x400593b	            0x7d0c	                           jge 0x4005949	      2641	diff.c	FUNCTION_43	IF_1
0x400593d	    0x488b05000000	            mov rax, qword [0x04005944] 	      2642	diff.c	FUNCTION_43	IF_1
0x4005944	          0x488b00	                    mov rax, qword [rax]	      2642	diff.c	FUNCTION_43	IF_1
0x4005947	            0xeb04	                           jmp 0x400594d	      2642	diff.c	FUNCTION_43	IF_1
0x4005949	        0x488b45f8	                mov rax, qword [rbp - 8]	      2643	diff.c	FUNCTION_43
0x400594d	              0xc9	                                   leave	      2644	diff.c	FUNCTION_43
0x400594e	              0xc3	                                     ret	      2644	diff.c	FUNCTION_43
diff_find_change	WHILE,4:SWITCH,0:ELSE,2:functions,0:IF,14:CALL,20:DO,0:FOR,2	408
0x4003f19	              0x55	                                push rbp	      1964	diff.c	FUNCTION_35
0x4003f1a	          0x4889e5	                            mov rbp, rsp	      1964	diff.c	FUNCTION_35
0x4003f1d	        0x4883c480	             add rsp, 0xffffffffffffff80	      1964	diff.c	FUNCTION_35
0x4003f21	        0x48897d98	             mov qword [rbp - 0x68], rdi	      1964	diff.c	FUNCTION_35
0x4003f25	        0x48897590	             mov qword [rbp - 0x70], rsi	      1964	diff.c	FUNCTION_35
0x4003f29	        0x48895588	             mov qword [rbp - 0x78], rdx	      1964	diff.c	FUNCTION_35
0x4003f2d	        0x48894d80	             mov qword [rbp - 0x80], rcx	      1964	diff.c	FUNCTION_35
0x4003f31	    0x64488b042528	                mov rax, qword fs:[0x28]	      1964	diff.c	FUNCTION_35
0x4003f3a	        0x488945f8	                mov qword [rbp - 8], rax	      1964	diff.c	FUNCTION_35
0x4003f3e	            0x31c0	                            xor eax, eax	      1964	diff.c	FUNCTION_35
0x4003f40	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      1973	diff.c	FUNCTION_35
0x4003f47	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1978	diff.c	FUNCTION_35	CALL_2
0x4003f4b	        0x488b4008	                mov rax, qword [rax + 8]	      1978	diff.c	FUNCTION_35	CALL_2
0x4003f4f	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1978	diff.c	FUNCTION_35	CALL_2
0x4003f53	      0xba00000000	                              mov edx, 0	      1978	diff.c	FUNCTION_35	CALL_2
0x4003f58	          0x4889ce	                            mov rsi, rcx	      1978	diff.c	FUNCTION_35	CALL_2
0x4003f5b	          0x4889c7	                            mov rdi, rax	      1978	diff.c	FUNCTION_35	CALL_2
0x4003f5e	      0xe800000000	                          call 0x4003f63	      1978	diff.c	FUNCTION_35	CALL_2
0x4003f63	          0x4889c7	                            mov rdi, rax	      1978	diff.c	FUNCTION_35	CALL_2
0x4003f66	      0xe800000000	                          call 0x4003f6b	      1978	diff.c	FUNCTION_35	CALL_2
0x4003f6b	        0x488945d8	             mov qword [rbp - 0x28], rax	      1978	diff.c	FUNCTION_35	CALL_2
0x4003f6f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1979	diff.c	FUNCTION_35	IF_1
0x4003f74	            0x750a	                           jne 0x4003f80	      1979	diff.c	FUNCTION_35	IF_1
0x4003f76	      0xb800000000	                              mov eax, 0	      1980	diff.c	FUNCTION_35	IF_1
0x4003f7b	      0xe9fb040000	                           jmp 0x400447b	      1980	diff.c	FUNCTION_35	IF_1
0x4003f80	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1982	diff.c	FUNCTION_35	CALL_3
0x4003f84	        0x488b4008	                mov rax, qword [rax + 8]	      1982	diff.c	FUNCTION_35	CALL_3
0x4003f88	          0x4889c7	                            mov rdi, rax	      1982	diff.c	FUNCTION_35	CALL_3
0x4003f8b	      0xe80ac3ffff	                   call sym.diff_buf_idx	      1982	diff.c	FUNCTION_35	CALL_3
0x4003f90	          0x8945c8	             mov dword [rbp - 0x38], eax	      1982	diff.c	FUNCTION_35	CALL_3
0x4003f93	        0x837dc808	               cmp dword [rbp - 0x38], 8	      1983	diff.c	FUNCTION_35	IF_2
0x4003f97	            0x7516	                           jne 0x4003faf	      1983	diff.c	FUNCTION_35	IF_2
0x4003f99	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1985	diff.c	FUNCTION_35	IF_2	CALL_4
0x4003f9d	          0x4889c7	                            mov rdi, rax	      1985	diff.c	FUNCTION_35	IF_2	CALL_4
0x4003fa0	      0xe800000000	                          call 0x4003fa5	      1985	diff.c	FUNCTION_35	IF_2	CALL_4
0x4003fa5	      0xb800000000	                              mov eax, 0	      1986	diff.c	FUNCTION_35	IF_2
0x4003faa	      0xe9cc040000	                           jmp 0x400447b	      1986	diff.c	FUNCTION_35	IF_2
0x4003faf	    0x488b05000000	            mov rax, qword [0x04003fb6] 	      1990	diff.c	FUNCTION_35	FOR_1
0x4003fb6	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1990	diff.c	FUNCTION_35	FOR_1
0x4003fba	        0x488945d0	             mov qword [rbp - 0x30], rax	      1990	diff.c	FUNCTION_35	FOR_1
0x4003fbe	            0xeb36	                           jmp 0x4003ff6	      1990	diff.c	FUNCTION_35	FOR_1
0x4003fc0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003fc4	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003fc7	          0x4863d2	                         movsxd rdx, edx	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003fca	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003fcf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003fd3	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003fd6	          0x4863c9	                         movsxd rcx, ecx	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003fd9	        0x4883c108	                              add rcx, 8	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003fdd	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003fe2	          0x4801d0	                            add rax, rdx	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003fe5	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003fe9	            0x7d14	                           jge 0x4003fff	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4003feb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1990	diff.c	FUNCTION_35	FOR_1
0x4003fef	          0x488b00	                    mov rax, qword [rax]	      1990	diff.c	FUNCTION_35	FOR_1
0x4003ff2	        0x488945d0	             mov qword [rbp - 0x30], rax	      1990	diff.c	FUNCTION_35	FOR_1
0x4003ff6	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1990	diff.c	FUNCTION_35	FOR_1
0x4003ffb	            0x75c3	                           jne 0x4003fc0	      1990	diff.c	FUNCTION_35	FOR_1
0x4003ffd	            0xeb01	                           jmp 0x4004000	      1990	diff.c	FUNCTION_35	FOR_1
0x4003fff	              0x90	                                     nop	      1992	diff.c	FUNCTION_35	FOR_1	IF_3
0x4004000	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x4004005	            0x741a	                            je 0x4004021	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x4004007	    0x488b05000000	            mov rax, qword [0x0400400e] 	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x400400e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x4004012	          0x4889d6	                            mov rsi, rdx	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x4004015	          0x4889c7	                            mov rdi, rax	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x4004018	      0xe845cfffff	              call sym.diff_check_sanity	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x400401d	            0x85c0	                           test eax, eax	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x400401f	            0x7516	                           jne 0x4004037	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x4004021	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1995	diff.c	FUNCTION_35	IF_4	CALL_6
0x4004025	          0x4889c7	                            mov rdi, rax	      1995	diff.c	FUNCTION_35	IF_4	CALL_6
0x4004028	      0xe800000000	                          call 0x400402d	      1995	diff.c	FUNCTION_35	IF_4	CALL_6
0x400402d	      0xb800000000	                              mov eax, 0	      1996	diff.c	FUNCTION_35	IF_4
0x4004032	      0xe944040000	                           jmp 0x400447b	      1996	diff.c	FUNCTION_35	IF_4
0x4004037	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1999	diff.c	FUNCTION_35
0x400403b	            0x89c1	                            mov ecx, eax	      1999	diff.c	FUNCTION_35
0x400403d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1999	diff.c	FUNCTION_35
0x4004041	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1999	diff.c	FUNCTION_35
0x4004044	          0x4863d2	                         movsxd rdx, edx	      1999	diff.c	FUNCTION_35
0x4004047	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1999	diff.c	FUNCTION_35
0x400404c	            0x29c1	                            sub ecx, eax	      1999	diff.c	FUNCTION_35
0x400404e	            0x89c8	                            mov eax, ecx	      1999	diff.c	FUNCTION_35
0x4004050	          0x8945cc	             mov dword [rbp - 0x34], eax	      1999	diff.c	FUNCTION_35
0x4004053	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      2001	diff.c	FUNCTION_35	FOR_2
0x400405a	      0xe903040000	                           jmp 0x4004462	      2001	diff.c	FUNCTION_35	FOR_2
0x400405f	    0x488b05000000	            mov rax, qword [0x04004066] 	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4004066	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4004069	          0x4863d2	                         movsxd rdx, edx	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x400406c	        0x4883c20c	                            add rdx, 0xc	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4004070	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4004074	          0x4885c0	                           test rax, rax	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4004077	     0xf84e1030000	                            je 0x400445e	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x400407d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4004080	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4004083	     0xf84d5030000	                            je 0x400445e	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4004089	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x400408c	          0x4863d0	                         movsxd rdx, eax	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x400408f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4004093	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4004096	          0x4863c9	                         movsxd rcx, ecx	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4004099	        0x4883c108	                              add rcx, 8	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x400409d	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x40040a2	          0x4839c2	                            cmp rdx, rax	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x40040a5	     0xf8db2030000	                           jge 0x400445d	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x40040ab	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      2007	diff.c	FUNCTION_35	FOR_2	IF_5
0x40040b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2009	diff.c	FUNCTION_35	FOR_2	IF_5
0x40040b6	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2009	diff.c	FUNCTION_35	FOR_2	IF_5
0x40040b9	          0x4863d2	                         movsxd rdx, edx	      2009	diff.c	FUNCTION_35	FOR_2	IF_5
0x40040bc	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2009	diff.c	FUNCTION_35	FOR_2	IF_5
0x40040c1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040c4	            0x4898	                                    cdqe	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040c6	        0x488d0c02	                    lea rcx, [rdx + rax]	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040ca	    0x488b05000000	            mov rax, qword [0x040040d1] 	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040d1	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040d4	          0x4863d2	                         movsxd rdx, edx	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040d7	        0x4883c20c	                            add rdx, 0xc	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040db	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040df	      0xba00000000	                              mov edx, 0	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040e4	          0x4889ce	                            mov rsi, rcx	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040e7	          0x4889c7	                            mov rdi, rax	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040ea	      0xe800000000	                          call 0x40040ef	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040ef	        0x488945e0	             mov qword [rbp - 0x20], rax	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40040f3	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x40040fa	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x40040fd	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x4004100	      0xe9e8000000	                           jmp 0x40041ed	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4004105	    0x8b0500000000	            mov eax, dword [0x0400410b] 	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x400410b	          0x83e004	                              and eax, 4	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x400410e	            0x85c0	                           test eax, eax	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x4004110	     0xf849c000000	                            je 0x40041b2	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x4004116	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4004119	          0x4863d0	                         movsxd rdx, eax	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x400411c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4004120	          0x4801d0	                            add rax, rdx	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4004123	           0xfb600	                   movzx eax, byte [rax]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4004126	            0x3c20	                            cmp al, 0x20	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4004128	            0x7414	                            je 0x400413e	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x400412a	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x400412d	          0x4863d0	                         movsxd rdx, eax	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4004130	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4004134	          0x4801d0	                            add rax, rdx	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4004137	           0xfb600	                   movzx eax, byte [rax]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x400413a	            0x3c09	                               cmp al, 9	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x400413c	            0x7574	                           jne 0x40041b2	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x400413e	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4004141	          0x4863d0	                         movsxd rdx, eax	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4004144	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4004148	          0x4801d0	                            add rax, rdx	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x400414b	           0xfb600	                   movzx eax, byte [rax]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x400414e	            0x3c20	                            cmp al, 0x20	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4004150	            0x7414	                            je 0x4004166	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4004152	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4004155	          0x4863d0	                         movsxd rdx, eax	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4004158	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x400415c	          0x4801d0	                            add rax, rdx	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x400415f	           0xfb600	                   movzx eax, byte [rax]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4004162	            0x3c09	                               cmp al, 9	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4004164	            0x754c	                           jne 0x40041b2	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4004166	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4004169	          0x4863d0	                         movsxd rdx, eax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x400416c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4004170	          0x4801d0	                            add rax, rdx	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4004173	          0x4889c7	                            mov rdi, rax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4004176	      0xe800000000	                          call 0x400417b	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x400417b	          0x4889c2	                            mov rdx, rax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x400417e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4004182	          0x4829c2	                            sub rdx, rax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4004185	          0x4889d0	                            mov rax, rdx	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4004188	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x400418b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x400418e	          0x4863d0	                         movsxd rdx, eax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4004191	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4004195	          0x4801d0	                            add rax, rdx	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4004198	          0x4889c7	                            mov rdi, rax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x400419b	      0xe800000000	                          call 0x40041a0	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x40041a0	          0x4889c2	                            mov rdx, rax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x40041a3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x40041a7	          0x4829c2	                            sub rdx, rax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x40041aa	          0x4889d0	                            mov rax, rdx	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x40041ad	          0x8945b8	             mov dword [rbp - 0x48], eax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x40041b0	            0xeb3b	                           jmp 0x40041ed	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x40041b2	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041b5	          0x4863d0	                         movsxd rdx, eax	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041b8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041bc	        0x488d3402	                    lea rsi, [rdx + rax]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041c0	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041c3	          0x4863d0	                         movsxd rdx, eax	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041ca	        0x488d0c02	                    lea rcx, [rdx + rax]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041ce	        0x488d45ac	                   lea rax, [rbp - 0x54]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041d2	          0x4889c2	                            mov rdx, rax	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041d5	          0x4889cf	                            mov rdi, rcx	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041d8	      0xe8a8f2ffff	                call sym.diff_equal_char	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041dd	            0x85c0	                           test eax, eax	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041df	            0x7426	                            je 0x4004207	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x40041e1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2027	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x40041e4	           0x145b4	             add dword [rbp - 0x4c], eax	      2027	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x40041e7	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2028	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x40041ea	           0x145b8	             add dword [rbp - 0x48], eax	      2028	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x40041ed	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x40041f0	          0x4863d0	                         movsxd rdx, eax	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x40041f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x40041f7	          0x4801d0	                            add rax, rdx	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x40041fa	           0xfb600	                   movzx eax, byte [rax]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x40041fd	            0x84c0	                             test al, al	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x40041ff	     0xf8500ffffff	                           jne 0x4004105	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4004205	            0xeb01	                           jmp 0x4004208	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4004207	              0x90	                                     nop	      2026	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8
0x4004208	    0x8b0500000000	            mov eax, dword [0x0400420e] 	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400420e	            0x85c0	                           test eax, eax	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004210	            0x7446	                            je 0x4004258	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004212	    0x488b05000000	            mov rax, qword [0x04004219] 	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004219	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400421c	          0x4863ca	                         movsxd rcx, edx	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400421f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004223	          0x4801d1	                            add rcx, rdx	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004226	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400422a	          0x4889ce	                            mov rsi, rcx	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400422d	          0x4889d7	                            mov rdi, rdx	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004230	            0xffd0	                                call rax	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004232	          0x2945b4	             sub dword [rbp - 0x4c], eax	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004235	    0x488b05000000	            mov rax, qword [0x0400423c] 	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400423c	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400423f	          0x4863ca	                         movsxd rcx, edx	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004242	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004246	          0x4801d1	                            add rcx, rdx	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004249	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400424d	          0x4889ce	                            mov rsi, rcx	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004250	          0x4889d7	                            mov rdi, rdx	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004253	            0xffd0	                                call rax	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004255	          0x2945b8	             sub dword [rbp - 0x48], eax	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4004258	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x400425c	            0x8b00	                    mov eax, dword [rax]	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x400425e	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4004261	            0x7e09	                           jle 0x400426c	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4004263	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2041	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4004267	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2041	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x400426a	            0x8910	                    mov dword [rax], edx	      2041	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x400426c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x400426f	          0x4863d0	                         movsxd rdx, eax	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4004272	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4004276	          0x4801d0	                            add rax, rdx	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4004279	           0xfb600	                   movzx eax, byte [rax]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x400427c	            0x84c0	                             test al, al	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x400427e	            0x7518	                           jne 0x4004298	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4004280	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4004283	          0x4863d0	                         movsxd rdx, eax	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4004286	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x400428a	          0x4801d0	                            add rax, rdx	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x400428d	           0xfb600	                   movzx eax, byte [rax]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4004290	            0x84c0	                             test al, al	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4004292	     0xf84c6010000	                            je 0x400445e	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4004298	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x400429c	          0x4889c7	                            mov rdi, rax	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x400429f	      0xe800000000	                          call 0x40042a4	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x40042a4	          0x8945bc	             mov dword [rbp - 0x44], eax	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x40042a7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x40042ab	          0x4889c7	                            mov rdi, rax	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x40042ae	      0xe800000000	                          call 0x40042b3	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x40042b3	          0x8945c0	             mov dword [rbp - 0x40], eax	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x40042b6	      0xe966010000	                           jmp 0x4004421	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40042bb	    0x8b0500000000	            mov eax, dword [0x040042c1] 	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x40042c1	          0x83e004	                              and eax, 4	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x40042c4	            0x85c0	                           test eax, eax	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x40042c6	     0xf84cc000000	                            je 0x4004398	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x40042cc	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042cf	          0x4863d0	                         movsxd rdx, eax	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042d6	          0x4801d0	                            add rax, rdx	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042d9	           0xfb600	                   movzx eax, byte [rax]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042dc	            0x3c20	                            cmp al, 0x20	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042de	            0x7418	                            je 0x40042f8	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042e0	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042e3	          0x4863d0	                         movsxd rdx, eax	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042ea	          0x4801d0	                            add rax, rdx	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042ed	           0xfb600	                   movzx eax, byte [rax]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042f0	            0x3c09	                               cmp al, 9	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042f2	     0xf85a0000000	                           jne 0x4004398	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x40042f8	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40042fb	          0x4863d0	                         movsxd rdx, eax	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40042fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4004302	          0x4801d0	                            add rax, rdx	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4004305	           0xfb600	                   movzx eax, byte [rax]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4004308	            0x3c20	                            cmp al, 0x20	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x400430a	            0x741a	                            je 0x4004326	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x400430c	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x400430f	          0x4863d0	                         movsxd rdx, eax	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4004312	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4004316	          0x4801d0	                            add rax, rdx	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4004319	           0xfb600	                   movzx eax, byte [rax]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x400431c	            0x3c09	                               cmp al, 9	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x400431e	            0x7578	                           jne 0x4004398	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4004320	            0xeb04	                           jmp 0x4004326	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x4004322	        0x836dbc01	               sub dword [rbp - 0x44], 1	      2057	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x4004326	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x400432a	            0x8b00	                    mov eax, dword [rax]	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x400432c	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x400432f	            0x7f2e	                            jg 0x400435f	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x4004331	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4004334	          0x4863d0	                         movsxd rdx, eax	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4004337	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x400433b	          0x4801d0	                            add rax, rdx	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x400433e	           0xfb600	                   movzx eax, byte [rax]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4004341	            0x3c20	                            cmp al, 0x20	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4004343	            0x74dd	                            je 0x4004322	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4004345	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4004348	          0x4863d0	                         movsxd rdx, eax	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x400434b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x400434f	          0x4801d0	                            add rax, rdx	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4004352	           0xfb600	                   movzx eax, byte [rax]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4004355	            0x3c09	                               cmp al, 9	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4004357	            0x74c9	                            je 0x4004322	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4004359	            0xeb04	                           jmp 0x400435f	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x400435b	        0x836dc001	               sub dword [rbp - 0x40], 1	      2060	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x400435f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4004362	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4004365	     0xf8cb6000000	                            jl 0x4004421	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x400436b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400436e	          0x4863d0	                         movsxd rdx, eax	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4004371	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4004375	          0x4801d0	                            add rax, rdx	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4004378	           0xfb600	                   movzx eax, byte [rax]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400437b	            0x3c20	                            cmp al, 0x20	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400437d	            0x74dc	                            je 0x400435b	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400437f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4004382	          0x4863d0	                         movsxd rdx, eax	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4004385	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4004389	          0x4801d0	                            add rax, rdx	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400438c	           0xfb600	                   movzx eax, byte [rax]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400438f	            0x3c09	                               cmp al, 9	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4004391	            0x74c8	                            je 0x400435b	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4004393	      0xe989000000	                           jmp 0x4004421	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x4004398	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400439b	          0x4863d0	                         movsxd rdx, eax	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400439e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043a2	          0x4801d0	                            add rax, rdx	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043a5	        0x488945e8	             mov qword [rbp - 0x18], rax	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043a9	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043ac	          0x4863d0	                         movsxd rdx, eax	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043af	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043b3	          0x4801d0	                            add rax, rdx	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043b6	        0x488945f0	             mov qword [rbp - 0x10], rax	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043ba	    0x488b05000000	            mov rax, qword [0x040043c1] 	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043c1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043c5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043c9	          0x4889ce	                            mov rsi, rcx	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043cc	          0x4889d7	                            mov rdi, rdx	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043cf	            0xffd0	                                call rax	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043d1	            0x4898	                                    cdqe	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043d3	          0x48f7d8	                                 neg rax	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043d6	        0x480145e8	            add qword [rbp - 0x18], rax 	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043da	    0x488b05000000	            mov rax, qword [0x040043e1] 	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043e1	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043e5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043e9	          0x4889ce	                            mov rsi, rcx	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043ec	          0x4889d7	                            mov rdi, rdx	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043ef	            0xffd0	                                call rax	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043f1	            0x4898	                                    cdqe	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043f3	          0x48f7d8	                                 neg rax	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043f6	        0x480145f0	            add qword [rbp - 0x10], rax 	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x40043fa	        0x488d55ac	                   lea rdx, [rbp - 0x54]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x40043fe	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4004402	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4004406	          0x4889ce	                            mov rsi, rcx	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4004409	          0x4889c7	                            mov rdi, rax	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x400440c	      0xe874f0ffff	                call sym.diff_equal_char	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4004411	            0x85c0	                           test eax, eax	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4004413	            0x7431	                            je 0x4004446	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4004415	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2072	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4004418	          0x2945bc	             sub dword [rbp - 0x44], eax	      2072	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400441b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2073	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400441e	          0x2945c0	             sub dword [rbp - 0x40], eax	      2073	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4004421	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4004425	            0x8b00	                    mov eax, dword [rax]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4004427	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x400442a	            0x7f1b	                            jg 0x4004447	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x400442c	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x400442f	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4004432	            0x7c13	                            jl 0x4004447	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4004434	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4004438	            0x780d	                            js 0x4004447	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x400443a	        0x837dc000	               cmp dword [rbp - 0x40], 0	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x400443e	     0xf8977feffff	                           jns 0x40042bb	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4004444	            0xeb01	                           jmp 0x4004447	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4004446	              0x90	                                     nop	      2071	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13
0x4004447	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x400444b	            0x8b00	                    mov eax, dword [rax]	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x400444d	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4004450	            0x7d0c	                           jge 0x400445e	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4004452	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4004456	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4004459	            0x8910	                    mov dword [rax], edx	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x400445b	            0xeb01	                           jmp 0x400445e	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x400445d	              0x90	                                     nop	      2006	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x400445e	        0x8345b001	               add dword [rbp - 0x50], 1	      2001	diff.c	FUNCTION_35	FOR_2
0x4004462	        0x837db007	               cmp dword [rbp - 0x50], 7	      2001	diff.c	FUNCTION_35	FOR_2
0x4004466	     0xf8ef3fbffff	                           jle 0x400405f	      2001	diff.c	FUNCTION_35	FOR_2
0x400446c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2081	diff.c	FUNCTION_35	CALL_20
0x4004470	          0x4889c7	                            mov rdi, rax	      2081	diff.c	FUNCTION_35	CALL_20
0x4004473	      0xe800000000	                          call 0x4004478	      2081	diff.c	FUNCTION_35	CALL_20
0x4004478	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2082	diff.c	FUNCTION_35
0x400447b	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2083	diff.c	FUNCTION_35
0x400447f	    0x644833342528	                xor rsi, qword fs:[0x28]	      2083	diff.c	FUNCTION_35
0x4004488	            0x7405	                            je 0x400448f	      2083	diff.c	FUNCTION_35
0x400448a	      0xe800000000	                          call 0x400448f	      2083	diff.c	FUNCTION_35
0x400448f	              0xc9	                                   leave	      2083	diff.c	FUNCTION_35
0x4004490	              0xc3	                                     ret	      2083	diff.c	FUNCTION_35
ex_diffgetput	WHILE,1:SWITCH,0:ELSE,12:functions,0:IF,43:CALL,45:DO,0:FOR,7	742
0x40046de	              0x55	                                push rbp	      2167	diff.c	FUNCTION_38
0x40046df	          0x4889e5	                            mov rbp, rsp	      2167	diff.c	FUNCTION_38
0x40046e2	              0x53	                                push rbx	      2167	diff.c	FUNCTION_38
0x40046e3	    0x4881ecc80000	                           sub rsp, 0xc8	      2167	diff.c	FUNCTION_38
0x40046ea	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      2167	diff.c	FUNCTION_38
0x40046f1	    0x64488b042528	                mov rax, qword fs:[0x28]	      2167	diff.c	FUNCTION_38
0x40046fa	        0x488945e8	             mov qword [rbp - 0x18], rax	      2167	diff.c	FUNCTION_38
0x40046fe	            0x31c0	                            xor eax, eax	      2167	diff.c	FUNCTION_38
0x4004700	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      2170	diff.c	FUNCTION_38
0x400470b	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      2186	diff.c	FUNCTION_38
0x4004715	    0x488b05000000	            mov rax, qword [0x0400471c] 	      2189	diff.c	FUNCTION_38	CALL_1
0x400471c	          0x4889c7	                            mov rdi, rax	      2189	diff.c	FUNCTION_38	CALL_1
0x400471f	      0xe876bbffff	                   call sym.diff_buf_idx	      2189	diff.c	FUNCTION_38	CALL_1
0x4004724	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      2189	diff.c	FUNCTION_38	CALL_1
0x400472a	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 8	      2190	diff.c	FUNCTION_38	IF_1
0x4004731	            0x7517	                           jne 0x400474a	      2190	diff.c	FUNCTION_38	IF_1
0x4004733	      0xbf00000000	                              mov edi, 0	      2192	diff.c	FUNCTION_38	IF_1	CALL_3
0x4004738	      0xe800000000	                          call 0x400473d	      2192	diff.c	FUNCTION_38	IF_1	CALL_3
0x400473d	          0x4889c7	                            mov rdi, rax	      2192	diff.c	FUNCTION_38	IF_1	CALL_3
0x4004740	      0xe800000000	                          call 0x4004745	      2192	diff.c	FUNCTION_38	IF_1	CALL_3
0x4004745	      0xe9830c0000	                           jmp 0x40053cd	      2193	diff.c	FUNCTION_38	IF_1
0x400474a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2196	diff.c	FUNCTION_38	IF_2
0x4004751	          0x488b00	                    mov rax, qword [rax]	      2196	diff.c	FUNCTION_38	IF_2
0x4004754	           0xfb600	                   movzx eax, byte [rax]	      2196	diff.c	FUNCTION_38	IF_2
0x4004757	            0x84c0	                             test al, al	      2196	diff.c	FUNCTION_38	IF_2
0x4004759	     0xf8595010000	                           jne 0x40048f4	      2196	diff.c	FUNCTION_38	IF_2
0x400475f	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      2199	diff.c	FUNCTION_38	IF_2	FOR_1
0x4004769	      0xe983000000	                           jmp 0x40047f1	      2199	diff.c	FUNCTION_38	IF_2	FOR_1
0x400476e	    0x488b05000000	            mov rax, qword [0x04004775] 	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4004775	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x400477b	          0x4863d2	                         movsxd rdx, edx	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x400477e	        0x4883c20c	                            add rdx, 0xc	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4004782	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4004786	    0x488b05000000	            mov rax, qword [0x0400478d] 	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x400478d	          0x4839c2	                            cmp rdx, rax	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4004790	            0x7458	                            je 0x40047ea	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4004792	    0x488b05000000	            mov rax, qword [0x04004799] 	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4004799	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x400479f	          0x4863d2	                         movsxd rdx, edx	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x40047a2	        0x4883c20c	                            add rdx, 0xc	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x40047a6	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x40047aa	          0x4885c0	                           test rax, rax	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x40047ad	            0x743b	                            je 0x40047ea	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x40047af	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2203	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047b6	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2203	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047b9	          0x83f872	                           cmp eax, 0x72	      2203	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047bc	            0x7540	                           jne 0x40047fe	      2203	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047be	    0x488b05000000	            mov rax, qword [0x040047c5] 	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047c5	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047cb	          0x4863d2	                         movsxd rdx, edx	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047ce	        0x4883c20c	                            add rdx, 0xc	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047d2	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047d6	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047dc	            0x85c0	                           test eax, eax	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047de	            0x751e	                           jne 0x40047fe	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x40047e0	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      2206	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x40047ea	    0x838544ffffff	               add dword [rbp - 0xbc], 1	      2199	diff.c	FUNCTION_38	IF_2	FOR_1
0x40047f1	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 7	      2199	diff.c	FUNCTION_38	IF_2	FOR_1
0x40047f8	     0xf8e70ffffff	                           jle 0x400476e	      2199	diff.c	FUNCTION_38	IF_2	FOR_1
0x40047fe	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 8	      2208	diff.c	FUNCTION_38	IF_2	IF_5
0x4004805	            0x7537	                           jne 0x400483e	      2208	diff.c	FUNCTION_38	IF_2	IF_5
0x4004807	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      2210	diff.c	FUNCTION_38	IF_2	IF_5	IF_6
0x400480e	            0x7417	                            je 0x4004827	      2210	diff.c	FUNCTION_38	IF_2	IF_5	IF_6
0x4004810	      0xbf00000000	                              mov edi, 0	      2211	diff.c	FUNCTION_38	IF_2	IF_5	CALL_5
0x4004815	      0xe800000000	                          call 0x400481a	      2211	diff.c	FUNCTION_38	IF_2	IF_5	CALL_5
0x400481a	          0x4889c7	                            mov rdi, rax	      2211	diff.c	FUNCTION_38	IF_2	IF_5	CALL_5
0x400481d	      0xe800000000	                          call 0x4004822	      2211	diff.c	FUNCTION_38	IF_2	IF_5	CALL_5
0x4004822	      0xe9a60b0000	                           jmp 0x40053cd	      2214	diff.c	FUNCTION_38	IF_2	IF_5
0x4004827	      0xbf00000000	                              mov edi, 0	      2213	diff.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x400482c	      0xe800000000	                          call 0x4004831	      2213	diff.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x4004831	          0x4889c7	                            mov rdi, rax	      2213	diff.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x4004834	      0xe800000000	                          call 0x4004839	      2213	diff.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x4004839	      0xe98f0b0000	                           jmp 0x40053cd	      2214	diff.c	FUNCTION_38	IF_2	IF_5
0x400483e	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x4004844	          0x83c001	                              add eax, 1	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x4004847	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x400484d	      0xe990000000	                           jmp 0x40048e2	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x4004852	    0x488b05000000	            mov rax, qword [0x04004859] 	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4004859	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x400485f	          0x4863d2	                         movsxd rdx, edx	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4004862	        0x4883c20c	                            add rdx, 0xc	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4004866	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x400486a	    0x488b05000000	            mov rax, qword [0x04004871] 	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4004871	          0x4839c2	                            cmp rdx, rax	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4004874	            0x7465	                            je 0x40048db	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4004876	    0x488b05000000	            mov rax, qword [0x0400487d] 	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x400487d	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4004883	          0x4863d2	                         movsxd rdx, edx	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4004886	        0x4883c20c	                            add rdx, 0xc	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x400488a	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x400488e	          0x4885c0	                           test rax, rax	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4004891	            0x7448	                            je 0x40048db	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4004893	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x400489a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x400489d	          0x83f872	                           cmp eax, 0x72	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x40048a0	            0x7522	                           jne 0x40048c4	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x40048a2	    0x488b05000000	            mov rax, qword [0x040048a9] 	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x40048a9	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x40048af	          0x4863d2	                         movsxd rdx, edx	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x40048b2	        0x4883c20c	                            add rdx, 0xc	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x40048b6	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x40048ba	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x40048c0	            0x85c0	                           test eax, eax	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x40048c2	            0x7417	                            je 0x40048db	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x40048c4	      0xbf00000000	                              mov edi, 0	      2223	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7	CALL_9
0x40048c9	      0xe800000000	                          call 0x40048ce	      2223	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7	CALL_9
0x40048ce	          0x4889c7	                            mov rdi, rax	      2223	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7	CALL_9
0x40048d1	      0xe800000000	                          call 0x40048d6	      2223	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7	CALL_9
0x40048d6	      0xe9f20a0000	                           jmp 0x40053cd	      2224	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x40048db	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x40048e2	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 7	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x40048e9	     0xf8e63ffffff	                           jle 0x4004852	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x40048ef	      0xe9a6010000	                           jmp 0x4004a9a	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x40048f4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x40048fb	          0x488b18	                    mov rbx, qword [rax]	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x40048fe	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x4004905	          0x488b00	                    mov rax, qword [rax]	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x4004908	          0x4889c7	                            mov rdi, rax	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x400490b	      0xe800000000	                          call 0x4004910	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x4004910	          0x4801d8	                            add rax, rbx	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x4004913	        0x48894598	             mov qword [rbp - 0x68], rax	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x4004917	            0xeb05	                           jmp 0x400491e	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4004919	      0x48836d9801	               sub qword [rbp - 0x68], 1	      2232	diff.c	FUNCTION_38	ELSE_2	WHILE_1
0x400491e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4004925	          0x488b00	                    mov rax, qword [rax]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4004928	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x400492c	            0x731e	                           jae 0x400494c	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x400492e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4004932	        0x4883e801	                              sub rax, 1	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4004936	           0xfb600	                   movzx eax, byte [rax]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4004939	            0x3c20	                            cmp al, 0x20	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x400493b	            0x74dc	                            je 0x4004919	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x400493d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4004941	        0x4883e801	                              sub rax, 1	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4004945	           0xfb600	                   movzx eax, byte [rax]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4004948	            0x3c09	                               cmp al, 9	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x400494a	            0x74cd	                            je 0x4004919	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x400494c	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004956	            0xeb07	                           jmp 0x400495f	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004958	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x400495f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004966	          0x488b10	                    mov rdx, qword [rax]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004969	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x400496f	            0x4898	                                    cdqe	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004971	          0x4801d0	                            add rax, rdx	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004974	           0xfb600	                   movzx eax, byte [rax]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004977	           0xfb6c0	                           movzx eax, al	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x400497a	            0x89c7	                            mov edi, eax	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x400497c	      0xe800000000	                          call 0x4004981	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004981	            0x85c0	                           test eax, eax	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004983	            0x741b	                            je 0x40049a0	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004985	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x400498c	          0x488b10	                    mov rdx, qword [rax]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x400498f	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004995	            0x4898	                                    cdqe	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4004997	          0x4801d0	                            add rax, rdx	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x400499a	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x400499e	            0x72b8	                            jb 0x4004958	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x40049a0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x40049a7	          0x488b10	                    mov rdx, qword [rax]	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x40049aa	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x40049b0	            0x4898	                                    cdqe	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x40049b2	          0x4801d0	                            add rax, rdx	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x40049b5	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x40049b9	            0x751a	                           jne 0x40049d5	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x40049bb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x40049c2	          0x488b00	                    mov rax, qword [rax]	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x40049c5	          0x4889c7	                            mov rdi, rax	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x40049c8	      0xe800000000	                          call 0x40049cd	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x40049cd	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x40049d3	            0xeb39	                           jmp 0x4004a0e	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x40049d5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x40049dc	          0x488b00	                    mov rax, qword [rax]	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x40049df	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x40049e3	    0x41b800000000	                              mov r8d, 0	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x40049e9	      0xb901000000	                              mov ecx, 1	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x40049ee	      0xba00000000	                              mov edx, 0	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x40049f3	          0x4889c7	                            mov rdi, rax	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x40049f6	      0xe800000000	                          call 0x40049fb	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x40049fb	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x4004a01	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	      2240	diff.c	FUNCTION_38	ELSE_2	ELSE_3	IF_9
0x4004a08	     0xf88bb090000	                            js 0x40053c9	      2240	diff.c	FUNCTION_38	ELSE_2	ELSE_3	IF_9
0x4004a0e	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2243	diff.c	FUNCTION_38	ELSE_2	CALL_15
0x4004a14	            0x89c7	                            mov edi, eax	      2243	diff.c	FUNCTION_38	ELSE_2	CALL_15
0x4004a16	      0xe800000000	                          call 0x4004a1b	      2243	diff.c	FUNCTION_38	ELSE_2	CALL_15
0x4004a1b	        0x488945a0	             mov qword [rbp - 0x60], rax	      2243	diff.c	FUNCTION_38	ELSE_2	CALL_15
0x4004a1f	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2244	diff.c	FUNCTION_38	ELSE_2	IF_10
0x4004a24	            0x7524	                           jne 0x4004a4a	      2244	diff.c	FUNCTION_38	ELSE_2	IF_10
0x4004a26	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x4004a2d	          0x488b18	                    mov rbx, qword [rax]	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x4004a30	      0xbf00000000	                              mov edi, 0	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x4004a35	      0xe800000000	                          call 0x4004a3a	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x4004a3a	          0x4889de	                            mov rsi, rbx	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x4004a3d	          0x4889c7	                            mov rdi, rax	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x4004a40	      0xe800000000	                          call 0x4004a45	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x4004a45	      0xe983090000	                           jmp 0x40053cd	      2247	diff.c	FUNCTION_38	ELSE_2	IF_10
0x4004a4a	    0x488b05000000	            mov rax, qword [0x04004a51] 	      2249	diff.c	FUNCTION_38	ELSE_2	IF_11
0x4004a51	        0x483945a0	            cmp qword [rbp - 0x60], rax 	      2249	diff.c	FUNCTION_38	ELSE_2	IF_11
0x4004a55	     0xf8471090000	                            je 0x40053cc	      2249	diff.c	FUNCTION_38	ELSE_2	IF_11
0x4004a5b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2251	diff.c	FUNCTION_38	ELSE_2	CALL_18
0x4004a5f	          0x4889c7	                            mov rdi, rax	      2251	diff.c	FUNCTION_38	ELSE_2	CALL_18
0x4004a62	      0xe833b8ffff	                   call sym.diff_buf_idx	      2251	diff.c	FUNCTION_38	ELSE_2	CALL_18
0x4004a67	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      2251	diff.c	FUNCTION_38	ELSE_2	CALL_18
0x4004a6d	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 8	      2252	diff.c	FUNCTION_38	ELSE_2	IF_12
0x4004a74	            0x7524	                           jne 0x4004a9a	      2252	diff.c	FUNCTION_38	ELSE_2	IF_12
0x4004a76	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4004a7d	          0x488b18	                    mov rbx, qword [rax]	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4004a80	      0xbf00000000	                              mov edi, 0	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4004a85	      0xe800000000	                          call 0x4004a8a	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4004a8a	          0x4889de	                            mov rsi, rbx	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4004a8d	          0x4889c7	                            mov rdi, rax	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4004a90	      0xe800000000	                          call 0x4004a95	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4004a95	      0xe933090000	                           jmp 0x40053cd	      2255	diff.c	FUNCTION_38	ELSE_2	IF_12
0x4004a9a	    0xc70500000000	               mov dword [0x04004aa4], 1	      2259	diff.c	FUNCTION_38
0x4004aa4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2262	diff.c	FUNCTION_38	IF_13
0x4004aab	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2262	diff.c	FUNCTION_38	IF_13
0x4004aae	            0x85c0	                           test eax, eax	      2262	diff.c	FUNCTION_38	IF_13
0x4004ab0	     0xf85ca000000	                           jne 0x4004b80	      2262	diff.c	FUNCTION_38	IF_13
0x4004ab6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2266	diff.c	FUNCTION_38	IF_13	IF_14
0x4004abd	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2266	diff.c	FUNCTION_38	IF_13	IF_14
0x4004ac0	          0x83f86f	                           cmp eax, 0x6f	      2266	diff.c	FUNCTION_38	IF_13	IF_14
0x4004ac3	     0xf858d000000	                           jne 0x4004b56	      2266	diff.c	FUNCTION_38	IF_13	IF_14
0x4004ac9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4004ad0	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4004ad4	    0x488b05000000	            mov rax, qword [0x04004adb] 	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4004adb	          0x488b00	                    mov rax, qword [rax]	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4004ade	          0x4839c2	                            cmp rdx, rax	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4004ae1	            0x7573	                           jne 0x4004b56	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4004ae3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4004aea	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4004aee	    0x488b05000000	            mov rax, qword [0x04004af5] 	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4004af5	          0x4889d6	                            mov rsi, rdx	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4004af8	          0x4889c7	                            mov rdi, rax	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4004afb	      0xe800000000	                          call 0x4004b00	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4004b00	            0x85c0	                           test eax, eax	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4004b02	            0x7552	                           jne 0x4004b56	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4004b04	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b0b	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b0f	        0x4883f801	                              cmp rax, 1	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b13	            0x7425	                            je 0x4004b3a	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b15	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b1c	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b20	        0x488d50ff	                      lea rdx, [rax - 1]	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b24	    0x488b05000000	            mov rax, qword [0x04004b2b] 	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b2b	          0x4889d6	                            mov rsi, rdx	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b2e	          0x4889c7	                            mov rdi, rax	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b31	      0xe800000000	                          call 0x4004b36	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b36	            0x85c0	                           test eax, eax	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b38	            0x751c	                           jne 0x4004b56	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004b3a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4004b41	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4004b45	        0x488d5001	                      lea rdx, [rax + 1]	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4004b49	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4004b50	        0x48895048	             mov qword [rax + 0x48], rdx	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4004b54	            0xeb2a	                           jmp 0x4004b80	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4004b56	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2271	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4004b5d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2271	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4004b61	          0x4885c0	                           test rax, rax	      2271	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4004b64	            0x7e1a	                           jle 0x4004b80	      2271	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4004b66	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2272	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4004b6d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2272	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4004b71	        0x488d50ff	                      lea rdx, [rax - 1]	      2272	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4004b75	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2272	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4004b7c	        0x48895040	             mov qword [rax + 0x40], rdx	      2272	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4004b80	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2275	diff.c	FUNCTION_38	IF_16
0x4004b87	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2275	diff.c	FUNCTION_38	IF_16
0x4004b8a	          0x83f86f	                           cmp eax, 0x6f	      2275	diff.c	FUNCTION_38	IF_16
0x4004b8d	            0x751a	                           jne 0x4004ba9	      2275	diff.c	FUNCTION_38	IF_16
0x4004b8f	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2277	diff.c	FUNCTION_38	IF_16
0x4004b95	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      2277	diff.c	FUNCTION_38	IF_16
0x4004b9b	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2278	diff.c	FUNCTION_38	IF_16
0x4004ba1	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      2278	diff.c	FUNCTION_38	IF_16
0x4004ba7	            0xeb3f	                           jmp 0x4004be8	      2278	diff.c	FUNCTION_38	IF_16
0x4004ba9	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2282	diff.c	FUNCTION_38	ELSE_5
0x4004baf	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      2282	diff.c	FUNCTION_38	ELSE_5
0x4004bb5	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2283	diff.c	FUNCTION_38	ELSE_5
0x4004bbb	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      2283	diff.c	FUNCTION_38	ELSE_5
0x4004bc1	    0x488b05000000	            mov rax, qword [0x04004bc8] 	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4004bc8	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4004bce	          0x4863d2	                         movsxd rdx, edx	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4004bd1	        0x4883c20c	                            add rdx, 0xc	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4004bd5	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4004bd9	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4004bdd	          0x4889d6	                            mov rsi, rdx	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4004be0	          0x4889c7	                            mov rdi, rax	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4004be3	      0xe800000000	                          call 0x4004be8	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4004be8	    0x488b05000000	            mov rax, qword [0x04004bef] 	      2293	diff.c	FUNCTION_38	IF_17
0x4004bef	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      2293	diff.c	FUNCTION_38	IF_17
0x4004bf5	            0x85c0	                           test eax, eax	      2293	diff.c	FUNCTION_38	IF_17
0x4004bf7	            0x7538	                           jne 0x4004c31	      2293	diff.c	FUNCTION_38	IF_17
0x4004bf9	      0xbf00000000	                              mov edi, 0	      2295	diff.c	FUNCTION_38	IF_17	CALL_24
0x4004bfe	      0xe800000000	                          call 0x4004c03	      2295	diff.c	FUNCTION_38	IF_17	CALL_24
0x4004c03	    0x488b05000000	            mov rax, qword [0x04004c0a] 	      2296	diff.c	FUNCTION_38	IF_17	IF_18	CALL_25
0x4004c0a	          0x4889c7	                            mov rdi, rax	      2296	diff.c	FUNCTION_38	IF_17	IF_18	CALL_25
0x4004c0d	      0xe888b6ffff	                   call sym.diff_buf_idx	      2296	diff.c	FUNCTION_38	IF_17	IF_18	CALL_25
0x4004c12	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      2296	diff.c	FUNCTION_38	IF_17	IF_18	CALL_25
0x4004c18	            0x7417	                            je 0x4004c31	      2296	diff.c	FUNCTION_38	IF_17	IF_18	CALL_25
0x4004c1a	      0xbf00000000	                              mov edi, 0	      2298	diff.c	FUNCTION_38	IF_17	IF_18	CALL_27
0x4004c1f	      0xe800000000	                          call 0x4004c24	      2298	diff.c	FUNCTION_38	IF_17	IF_18	CALL_27
0x4004c24	          0x4889c7	                            mov rdi, rax	      2298	diff.c	FUNCTION_38	IF_17	IF_18	CALL_27
0x4004c27	      0xe800000000	                          call 0x4004c2c	      2298	diff.c	FUNCTION_38	IF_17	IF_18	CALL_27
0x4004c2c	      0xe99c070000	                           jmp 0x40053cd	      2299	diff.c	FUNCTION_38	IF_17	IF_18
0x4004c31	    0x48c745880000	               mov qword [rbp - 0x78], 0	      2303	diff.c	FUNCTION_38
0x4004c39	    0x488b05000000	            mov rax, qword [0x04004c40] 	      2304	diff.c	FUNCTION_38	FOR_4
0x4004c40	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2304	diff.c	FUNCTION_38	FOR_4
0x4004c44	        0x48894580	             mov qword [rbp - 0x80], rax	      2304	diff.c	FUNCTION_38	FOR_4
0x4004c48	      0xe91f070000	                           jmp 0x400536c	      2304	diff.c	FUNCTION_38	FOR_4
0x4004c4d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4004c51	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4004c57	          0x4863d2	                         movsxd rdx, edx	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4004c5a	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4004c5f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4004c66	        0x488b4848	            mov rcx, qword [rax + 0x48] 	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4004c6a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4004c71	          0x4801c8	                            add rax, rcx	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4004c74	          0x4839c2	                            cmp rdx, rax	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4004c77	     0xf8ffc060000	                            jg 0x4005379	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4004c7d	    0x48c745900000	               mov qword [rbp - 0x70], 0	      2309	diff.c	FUNCTION_38	FOR_4
0x4004c85	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2310	diff.c	FUNCTION_38	FOR_4
0x4004c89	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      2310	diff.c	FUNCTION_38	FOR_4
0x4004c8f	          0x4863d2	                         movsxd rdx, edx	      2310	diff.c	FUNCTION_38	FOR_4
0x4004c92	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2310	diff.c	FUNCTION_38	FOR_4
0x4004c97	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2310	diff.c	FUNCTION_38	FOR_4
0x4004c9e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2311	diff.c	FUNCTION_38	FOR_4
0x4004ca2	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      2311	diff.c	FUNCTION_38	FOR_4
0x4004ca8	          0x4863d2	                         movsxd rdx, edx	      2311	diff.c	FUNCTION_38	FOR_4
0x4004cab	        0x4883c208	                              add rdx, 8	      2311	diff.c	FUNCTION_38	FOR_4
0x4004caf	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2311	diff.c	FUNCTION_38	FOR_4
0x4004cb4	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      2311	diff.c	FUNCTION_38	FOR_4
0x4004cba	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004cbe	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004cc4	          0x4863d2	                         movsxd rdx, edx	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004cc7	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004ccc	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004cd0	    0x8b8d68ffffff	             mov ecx, dword [rbp - 0x98]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004cd6	          0x4863c9	                         movsxd rcx, ecx	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004cd9	        0x4883c108	                              add rcx, 8	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004cdd	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004ce2	        0x488d0c02	                    lea rcx, [rdx + rax]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004ce6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004ced	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004cf1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004cf8	          0x4801d0	                            add rax, rdx	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004cfb	          0x4839c1	                            cmp rcx, rax	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004cfe	     0xf8e4e060000	                           jle 0x4005352	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004d04	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4004d0a	          0x4863d0	                         movsxd rdx, eax	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4004d0d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4004d14	          0x4801c2	                            add rdx, rax	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4004d17	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4004d1e	        0x4883e801	                              sub rax, 1	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4004d22	          0x4889d6	                            mov rsi, rdx	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4004d25	          0x4889c7	                            mov rdi, rax	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4004d28	      0xe800000000	                          call 0x4004d2d	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4004d2d	            0x85c0	                           test eax, eax	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4004d2f	     0xf841d060000	                            je 0x4005352	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4004d35	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      2316	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004d3f	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2317	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004d49	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2318	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d50	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2318	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d53	            0x85c0	                           test eax, eax	      2318	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d55	     0xf8e9e010000	                           jle 0x4004ef9	      2318	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d5b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d62	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d66	            0x89c2	                            mov edx, eax	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d68	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d6f	          0x8d0c02	                    lea ecx, [rdx + rax]	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d72	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d76	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d7c	          0x4863d2	                         movsxd rdx, edx	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d7f	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d84	            0x29c1	                            sub ecx, eax	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d86	            0x89c8	                            mov eax, ecx	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d88	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004d8e	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2322	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22
0x4004d95	            0x7e46	                           jle 0x4004ddd	      2322	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22
0x4004d97	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2325	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4004d9d	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      2325	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4004da3	            0x7e1b	                           jle 0x4004dc0	      2325	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4004da5	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2327	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4004dab	            0x4898	                                    cdqe	      2327	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4004dad	    0x48018570ffff	            add qword [rbp - 0x90], rax 	      2327	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4004db4	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      2328	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4004dbe	            0xeb27	                           jmp 0x4004de7	      2328	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4004dc0	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2332	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4004dc6	    0x298540ffffff	             sub dword [rbp - 0xc0], eax	      2332	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4004dcc	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2333	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4004dd2	            0x4898	                                    cdqe	      2333	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4004dd4	    0x48018570ffff	            add qword [rbp - 0x90], rax 	      2333	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4004ddb	            0xeb0a	                           jmp 0x4004de7	      2333	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4004ddd	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      2337	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	ELSE_7
0x4004de7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004deb	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004df1	          0x4863d2	                         movsxd rdx, edx	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004df4	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004df9	            0x89c1	                            mov ecx, eax	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004dfb	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004dff	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e05	          0x4863d2	                         movsxd rdx, edx	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e08	        0x4883c208	                              add rdx, 8	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e0c	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e11	          0x8d1401	                    lea edx, [rcx + rax]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e14	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2340	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e1b	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2340	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e1f	            0x89c1	                            mov ecx, eax	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e21	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e28	             0x1c8	                            add eax, ecx	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e2a	            0x29c2	                            sub edx, eax	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e2c	            0x89d0	                            mov eax, edx	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e2e	          0x83e801	                              sub eax, 1	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e31	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4004e37	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2341	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24
0x4004e3e	     0xf8eab000000	                           jle 0x4004eef	      2341	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24
0x4004e44	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2344	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e4a	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	      2344	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e50	            0x754c	                           jne 0x4004e9e	      2344	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e52	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e56	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e5c	          0x4863d2	                         movsxd rdx, edx	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e5f	        0x4883c208	                              add rdx, 8	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e63	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e68	            0x89c2	                            mov edx, eax	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e6a	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e70	            0x29c2	                            sub edx, eax	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e72	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e78	            0x29c2	                            sub edx, eax	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e7a	            0x89d0	                            mov eax, edx	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e7c	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4004e82	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2347	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4004e88	    0x3b8550ffffff	             cmp eax, dword [rbp - 0xb0]	      2347	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4004e8e	            0x7e69	                           jle 0x4004ef9	      2347	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4004e90	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2348	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4004e96	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      2348	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4004e9c	            0xeb5b	                           jmp 0x4004ef9	      2348	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4004e9e	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2352	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004ea4	    0x298540ffffff	             sub dword [rbp - 0xc0], eax	      2352	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004eaa	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004eae	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004eb4	          0x4863d2	                         movsxd rdx, edx	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004eb7	        0x4883c208	                              add rdx, 8	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004ebb	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004ec0	            0x89c2	                            mov edx, eax	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004ec2	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004ec8	            0x29c2	                            sub edx, eax	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004eca	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004ed0	            0x29c2	                            sub edx, eax	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004ed2	            0x89d0	                            mov eax, edx	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004ed4	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4004eda	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2354	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8	IF_27
0x4004ee1	            0x7916	                           jns 0x4004ef9	      2354	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8	IF_27
0x4004ee3	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2355	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8	IF_27
0x4004eed	            0xeb0a	                           jmp 0x4004ef9	      2355	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8	IF_27
0x4004eef	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2359	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	ELSE_9
0x4004ef9	    0x488b05000000	            mov rax, qword [0x04004f00] 	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f00	          0x488b00	                    mov rax, qword [rax]	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f03	        0x4883f801	                              cmp rax, 1	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f07	            0x7518	                           jne 0x4004f21	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f09	      0xbf01000000	                              mov edi, 1	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f0e	      0xe800000000	                          call 0x4004f13	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f13	           0xfb600	                   movzx eax, byte [rax]	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f16	            0x84c0	                             test al, al	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f18	            0x7507	                           jne 0x4004f21	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f1a	      0xb801000000	                              mov eax, 1	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f1f	            0xeb05	                           jmp 0x4004f26	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f21	      0xb800000000	                              mov eax, 0	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f26	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4004f2c	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      2363	diff.c	FUNCTION_38	FOR_4	IF_20
0x4004f36	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f40	            0xeb3c	                           jmp 0x4004f7e	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f42	    0x488b05000000	            mov rax, qword [0x04004f49] 	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f49	          0x488b00	                    mov rax, qword [rax]	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f4c	        0x4883f801	                              cmp rax, 1	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f50	           0xf94c0	                                 sete al	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f53	           0xfb6c0	                           movzx eax, al	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f56	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f5c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2368	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5	CALL_30
0x4004f63	      0xbe00000000	                              mov esi, 0	      2368	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5	CALL_30
0x4004f68	          0x4889c7	                            mov rdi, rax	      2368	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5	CALL_30
0x4004f6b	      0xe800000000	                          call 0x4004f70	      2368	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5	CALL_30
0x4004f70	    0x83ad54ffffff	               sub dword [rbp - 0xac], 1	      2369	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f77	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f7e	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f84	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f8a	            0x7cb6	                            jl 0x4004f42	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4004f8c	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004f96	      0xe909010000	                           jmp 0x40050a4	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004f9b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004f9f	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004fa5	          0x4863d2	                         movsxd rdx, edx	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004fa8	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004fad	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004fb3	            0x4898	                                    cdqe	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004fb5	          0x4801c2	                            add rdx, rax	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004fb8	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004fbe	            0x4898	                                    cdqe	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004fc0	          0x4801d0	                            add rax, rdx	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004fc3	        0x488945a8	             mov qword [rbp - 0x58], rax	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4004fc7	    0x488b05000000	            mov rax, qword [0x04004fce] 	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4004fce	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4004fd4	          0x4863d2	                         movsxd rdx, edx	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4004fd7	        0x4883c20c	                            add rdx, 0xc	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4004fdb	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4004fdf	          0x488b00	                    mov rax, qword [rax]	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4004fe2	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4004fe6	     0xf8cfb000000	                            jl 0x40050e7	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4004fec	    0x488b05000000	            mov rax, qword [0x04004ff3] 	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4004ff3	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4004ff9	          0x4863d2	                         movsxd rdx, edx	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4004ffc	        0x4883c20c	                            add rdx, 0xc	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4005000	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4005004	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4005008	      0xba00000000	                              mov edx, 0	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x400500d	          0x4889ce	                            mov rsi, rcx	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4005010	          0x4889c7	                            mov rdi, rax	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4005013	      0xe800000000	                          call 0x4005018	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4005018	          0x4889c7	                            mov rdi, rax	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x400501b	      0xe800000000	                          call 0x4005020	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4005020	        0x48894598	             mov qword [rbp - 0x68], rax	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4005024	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2380	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29
0x4005029	            0x7472	                            je 0x400509d	      2380	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29
0x400502b	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x4005031	          0x4863d0	                         movsxd rdx, eax	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x4005034	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x400503b	          0x4801d0	                            add rax, rdx	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x400503e	        0x488d78ff	                      lea rdi, [rax - 1]	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x4005042	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x4005046	      0xb900000000	                              mov ecx, 0	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x400504b	      0xba00000000	                              mov edx, 0	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x4005050	          0x4889c6	                            mov rsi, rax	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x4005053	      0xe800000000	                          call 0x4005058	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x4005058	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2383	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_34
0x400505c	          0x4889c7	                            mov rdi, rax	      2383	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_34
0x400505f	      0xe800000000	                          call 0x4005064	      2383	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_34
0x4005064	    0x838554ffffff	               add dword [rbp - 0xac], 1	      2384	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29
0x400506b	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x4005072	            0x7429	                            je 0x400509d	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x4005074	    0x488b05000000	            mov rax, qword [0x0400507b] 	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x400507b	          0x488b00	                    mov rax, qword [rax]	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x400507e	        0x4883f802	                              cmp rax, 2	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x4005082	            0x7519	                           jne 0x400509d	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x4005084	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      2389	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x400508e	      0xbe00000000	                              mov esi, 0	      2390	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30	CALL_35
0x4005093	      0xbf02000000	                              mov edi, 2	      2390	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30	CALL_35
0x4005098	      0xe800000000	                          call 0x400509d	      2390	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30	CALL_35
0x400509d	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050a4	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050aa	          0x4863d0	                         movsxd rdx, eax	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050ad	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050b1	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050b7	          0x4863c9	                         movsxd rcx, ecx	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050ba	        0x4883c108	                              add rcx, 8	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050be	      0x488b4cc808	       mov rcx, qword [rax + rcx*8 + 8] 	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050c3	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050c9	            0x4898	                                    cdqe	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050cb	          0x4829c1	                            sub rcx, rax	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050ce	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050d4	            0x4898	                                    cdqe	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050d6	          0x4829c1	                            sub rcx, rax	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050d9	          0x4889c8	                            mov rax, rcx	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050dc	          0x4839c2	                            cmp rdx, rax	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050df	     0xf8cb6feffff	                            jl 0x4004f9b	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050e5	            0xeb01	                           jmp 0x40050e8	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x40050e7	              0x90	                                     nop	      2377	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x40050e8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x40050ec	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x40050f2	          0x4863d2	                         movsxd rdx, edx	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x40050f5	        0x4883c208	                              add rdx, 8	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x40050f9	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x40050fe	            0x89c2	                            mov edx, eax	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x4005100	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x4005106	             0x1d0	                            add eax, edx	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x4005108	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x400510e	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x4005114	          0x4863d0	                         movsxd rdx, eax	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x4005117	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x400511b	    0x8b8d4cffffff	             mov ecx, dword [rbp - 0xb4]	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x4005121	          0x4863c9	                         movsxd rcx, ecx	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x4005124	        0x4883c108	                              add rcx, 8	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x4005128	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x400512d	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2397	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31
0x4005134	     0xf85c2000000	                           jne 0x40051fc	      2397	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31
0x400513a	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2397	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31
0x4005141	     0xf85b5000000	                           jne 0x40051fc	      2397	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31
0x4005147	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x4005151	            0xeb5e	                           jmp 0x40051b1	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x4005153	    0x488b05000000	            mov rax, qword [0x0400515a] 	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x400515a	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x4005160	          0x4863d2	                         movsxd rdx, edx	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x4005163	        0x4883c20c	                            add rdx, 0xc	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x4005167	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x400516b	          0x4885c0	                           test rax, rax	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x400516e	            0x743a	                            je 0x40051aa	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x4005170	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x4005176	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x400517c	            0x742c	                            je 0x40051aa	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x400517e	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2403	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x4005184	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      2403	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x400518a	            0x741e	                            je 0x40051aa	      2403	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x400518c	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x4005192	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x4005198	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x400519c	            0x89ce	                            mov esi, ecx	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x400519e	          0x4889c7	                            mov rdi, rax	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x40051a1	      0xe876e1ffff	               call sym.diff_equal_entry	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x40051a6	            0x85c0	                           test eax, eax	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x40051a8	            0x7412	                            je 0x40051bc	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x40051aa	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x40051b1	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 7	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x40051b8	            0x7e99	                           jle 0x4005153	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x40051ba	            0xeb01	                           jmp 0x40051bd	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x40051bc	              0x90	                                     nop	      2405	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x40051bd	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 8	      2406	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x40051c4	            0x7536	                           jne 0x40051fc	      2406	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x40051c6	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2409	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x40051ca	        0x48894590	             mov qword [rbp - 0x70], rax	      2409	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x40051ce	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2410	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x40051d2	          0x488b00	                    mov rax, qword [rax]	      2410	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x40051d5	        0x48894580	             mov qword [rbp - 0x80], rax	      2410	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x40051d9	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      2411	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x40051de	            0x7511	                           jne 0x40051f1	      2411	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x40051e0	    0x488b05000000	            mov rax, qword [0x040051e7] 	      2412	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x40051e7	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2412	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x40051eb	        0x48895058	             mov qword [rax + 0x58], rdx	      2412	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x40051ef	            0xeb0b	                           jmp 0x40051fc	      2412	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x40051f1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2414	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	ELSE_10
0x40051f5	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2414	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	ELSE_10
0x40051f9	          0x488910	                    mov qword [rax], rdx	      2414	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	ELSE_10
0x40051fc	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      2419	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35
0x4005203	     0xf84ad000000	                            je 0x40052b6	      2419	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35
0x4005209	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x400520f	          0x4863d0	                         movsxd rdx, eax	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x4005212	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x4005218	          0x4863c8	                         movsxd rcx, eax	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x400521b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x4005222	          0x4801c8	                            add rax, rcx	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x4005225	        0x488d70ff	                      lea rsi, [rax - 1]	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x4005229	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x4005230	          0x4889d1	                            mov rcx, rdx	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x4005233	      0xbaffffff7f	                     mov edx, 0x7fffffff	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x4005238	          0x4889c7	                            mov rdi, rax	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x400523b	      0xe800000000	                          call 0x4005240	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x4005240	    0x488b05000000	            mov rax, qword [0x04005247] 	      2422	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36
0x4005247	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2422	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36
0x400524b	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      2422	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36
0x4005252	            0x7c62	                            jl 0x40052b6	      2422	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36
0x4005254	    0x488b05000000	            mov rax, qword [0x0400525b] 	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x400525b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x400525f	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x4005265	          0x4863ca	                         movsxd rcx, edx	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x4005268	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x400526f	          0x4801ca	                            add rdx, rcx	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x4005272	          0x4839d0	                            cmp rax, rdx	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x4005275	            0x7c24	                            jl 0x400529b	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x4005277	    0x488b05000000	            mov rax, qword [0x0400527e] 	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x400527e	    0x488b15000000	            mov rdx, qword [0x04005285] 	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x4005285	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x4005289	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x400528f	          0x4863d2	                         movsxd rdx, edx	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x4005292	          0x4801ca	                            add rdx, rcx	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x4005295	        0x48895038	             mov qword [rax + 0x38], rdx	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x4005299	            0xeb1b	                           jmp 0x40052b6	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x400529b	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      2428	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	ELSE_11	IF_38
0x40052a2	            0x7912	                           jns 0x40052b6	      2428	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	ELSE_11	IF_38
0x40052a4	    0x488b05000000	            mov rax, qword [0x040052ab] 	      2429	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	ELSE_11	IF_38
0x40052ab	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      2429	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	ELSE_11	IF_38
0x40052b2	        0x48895038	             mov qword [rax + 0x38], rdx	      2429	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	ELSE_11	IF_38
0x40052b6	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052bc	          0x4863d0	                         movsxd rdx, eax	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052bf	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052c5	          0x4863c8	                         movsxd rcx, eax	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052c8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052cf	        0x488d3401	                    lea rsi, [rcx + rax]	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052d3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052da	          0x4889d1	                            mov rcx, rdx	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052dd	          0x4889f2	                            mov rdx, rsi	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052e0	      0xbe00000000	                              mov esi, 0	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052e5	          0x4889c7	                            mov rdi, rax	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052e8	      0xe800000000	                          call 0x40052ed	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x40052ed	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      2434	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39
0x40052f2	            0x7422	                            je 0x4005316	      2434	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39
0x40052f4	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      2438	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_39
0x40052fa	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2438	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_39
0x40052fe	            0x89d6	                            mov esi, edx	      2438	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_39
0x4005300	          0x4889c7	                            mov rdi, rax	      2438	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_39
0x4005303	      0xe8e3000000	               call sym.diff_fold_update	      2438	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_39
0x4005308	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2440	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_40
0x400530c	          0x4889c7	                            mov rdi, rax	      2440	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_40
0x400530f	      0xe800000000	                          call 0x4005314	      2440	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_40
0x4005314	            0xeb1f	                           jmp 0x4005335	      2440	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_40
0x4005316	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x400531c	          0x4863d0	                         movsxd rdx, eax	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x400531f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x4005323	    0x8b8d4cffffff	             mov ecx, dword [rbp - 0xb4]	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x4005329	          0x4863c9	                         movsxd rcx, ecx	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x400532c	        0x4883c108	                              add rcx, 8	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x4005330	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x4005335	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2447	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x400533b	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      2447	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x4005341	            0x750f	                           jne 0x4005352	      2447	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x4005343	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2448	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x4005349	            0x4898	                                    cdqe	      2448	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x400534b	    0x48018578ffff	            add qword [rbp - 0x88], rax 	      2448	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x4005352	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      2452	diff.c	FUNCTION_38	FOR_4	IF_41
0x4005357	            0x7513	                           jne 0x400536c	      2452	diff.c	FUNCTION_38	FOR_4	IF_41
0x4005359	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2454	diff.c	FUNCTION_38	FOR_4	IF_41
0x400535d	        0x48894588	             mov qword [rbp - 0x78], rax	      2454	diff.c	FUNCTION_38	FOR_4	IF_41
0x4005361	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2455	diff.c	FUNCTION_38	FOR_4	IF_41
0x4005365	          0x488b00	                    mov rax, qword [rax]	      2455	diff.c	FUNCTION_38	FOR_4	IF_41
0x4005368	        0x48894580	             mov qword [rbp - 0x80], rax	      2455	diff.c	FUNCTION_38	FOR_4	IF_41
0x400536c	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2304	diff.c	FUNCTION_38	FOR_4
0x4005371	     0xf85d6f8ffff	                           jne 0x4004c4d	      2304	diff.c	FUNCTION_38	FOR_4
0x4005377	            0xeb01	                           jmp 0x400537a	      2304	diff.c	FUNCTION_38	FOR_4
0x4005379	              0x90	                                     nop	      2307	diff.c	FUNCTION_38	FOR_4	IF_19
0x400537a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2460	diff.c	FUNCTION_38	IF_42
0x4005381	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2460	diff.c	FUNCTION_38	IF_42
0x4005384	          0x83f86f	                           cmp eax, 0x6f	      2460	diff.c	FUNCTION_38	IF_42
0x4005387	            0x7420	                            je 0x40053a9	      2460	diff.c	FUNCTION_38	IF_42
0x4005389	    0x8b0500000000	            mov eax, dword [0x0400538f] 	      2465	diff.c	FUNCTION_38	IF_42	IF_43
0x400538f	            0x85c0	                           test eax, eax	      2465	diff.c	FUNCTION_38	IF_42	IF_43
0x4005391	            0x740a	                            je 0x400539d	      2465	diff.c	FUNCTION_38	IF_42	IF_43
0x4005393	      0xbf00000000	                              mov edi, 0	      2466	diff.c	FUNCTION_38	IF_42	CALL_41
0x4005398	      0xe800000000	                          call 0x400539d	      2466	diff.c	FUNCTION_38	IF_42	CALL_41
0x400539d	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2467	diff.c	FUNCTION_38	IF_42	CALL_42
0x40053a1	          0x4889c7	                            mov rdi, rax	      2467	diff.c	FUNCTION_38	IF_42	CALL_42
0x40053a4	      0xe800000000	                          call 0x40053a9	      2467	diff.c	FUNCTION_38	IF_42	CALL_42
0x40053a9	    0xc70500000000	               mov dword [0x040053b3], 0	      2470	diff.c	FUNCTION_38
0x40053b3	      0xe800000000	                          call 0x40053b8	      2474	diff.c	FUNCTION_38	CALL_43
0x40053b8	      0xe800000000	                          call 0x40053bd	      2475	diff.c	FUNCTION_38	CALL_44
0x40053bd	      0xbf00000000	                              mov edi, 0	      2478	diff.c	FUNCTION_38	CALL_45
0x40053c2	      0xe822bcffff	                    call sym.diff_redraw	      2478	diff.c	FUNCTION_38	CALL_45
0x40053c7	            0xeb04	                           jmp 0x40053cd	      2478	diff.c	FUNCTION_38	CALL_45
0x40053c9	              0x90	                                     nop	      2241	diff.c	FUNCTION_38	ELSE_2	ELSE_3	IF_9
0x40053ca	            0xeb01	                           jmp 0x40053cd	      2241	diff.c	FUNCTION_38	ELSE_2	ELSE_3	IF_9
0x40053cc	              0x90	                                     nop	      2250	diff.c	FUNCTION_38	ELSE_2	IF_11
0x40053cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2479	diff.c	FUNCTION_38
0x40053d1	    0x644833042528	                xor rax, qword fs:[0x28]	      2479	diff.c	FUNCTION_38
0x40053da	            0x7405	                            je 0x40053e1	      2479	diff.c	FUNCTION_38
0x40053dc	      0xe800000000	                          call 0x40053e1	      2479	diff.c	FUNCTION_38
0x40053e1	    0x4881c4c80000	                           add rsp, 0xc8	      2479	diff.c	FUNCTION_38
0x40053e8	              0x5b	                                 pop rbx	      2479	diff.c	FUNCTION_38
0x40053e9	              0x5d	                                 pop rbp	      2479	diff.c	FUNCTION_38
0x40053ea	              0xc3	                                     ret	      2479	diff.c	FUNCTION_38
diff_mode_buf	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,1:CALL,2:DO,0:FOR,0	24
0x40054a8	              0x55	                                push rbp	      2506	diff.c	FUNCTION_40
0x40054a9	          0x4889e5	                            mov rbp, rsp	      2506	diff.c	FUNCTION_40
0x40054ac	        0x4883ec18	                           sub rsp, 0x18	      2506	diff.c	FUNCTION_40
0x40054b0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2506	diff.c	FUNCTION_40
0x40054b4	    0x488b05000000	            mov rax, qword [0x040054bb] 	      2509	diff.c	FUNCTION_40	CALL_1
0x40054bb	        0x488945f8	                mov qword [rbp - 8], rax	      2509	diff.c	FUNCTION_40	CALL_1
0x40054bf	            0xeb2a	                           jmp 0x40054eb	      2509	diff.c	FUNCTION_40	CALL_1
0x40054c1	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x40054c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x40054c9	          0x4889d6	                            mov rsi, rdx	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x40054cc	          0x4889c7	                            mov rdi, rax	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x40054cf	      0xe804aeffff	                call sym.diff_buf_idx_tp	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x40054d4	          0x83f808	                              cmp eax, 8	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x40054d7	            0x7407	                            je 0x40054e0	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x40054d9	      0xb801000000	                              mov eax, 1	      2511	diff.c	FUNCTION_40	IF_1
0x40054de	            0xeb17	                           jmp 0x40054f7	      2511	diff.c	FUNCTION_40	IF_1
0x40054e0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2509	diff.c	FUNCTION_40	CALL_1
0x40054e4	          0x488b00	                    mov rax, qword [rax]	      2509	diff.c	FUNCTION_40	CALL_1
0x40054e7	        0x488945f8	                mov qword [rbp - 8], rax	      2509	diff.c	FUNCTION_40	CALL_1
0x40054eb	      0x48837df800	                  cmp qword [rbp - 8], 0	      2509	diff.c	FUNCTION_40	CALL_1
0x40054f0	            0x75cf	                           jne 0x40054c1	      2509	diff.c	FUNCTION_40	CALL_1
0x40054f2	      0xb800000000	                              mov eax, 0	      2512	diff.c	FUNCTION_40
0x40054f7	              0xc9	                                   leave	      2513	diff.c	FUNCTION_40
0x40054f8	              0xc3	                                     ret	      2513	diff.c	FUNCTION_40
diff_invalidate	WHILE,0:SWITCH,0:ELSE,0:functions,1:IF,0:CALL,0:DO,0:FOR,0	30
0x4000317	              0x55	                                push rbp	       195	diff.c	FUNCTION_7
0x4000318	          0x4889e5	                            mov rbp, rsp	       195	diff.c	FUNCTION_7
0x400031b	        0x4883ec20	                           sub rsp, 0x20	       195	diff.c	FUNCTION_7
0x400031f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       195	diff.c	FUNCTION_7
0x4000323	    0x488b05000000	            mov rax, qword [0x0400032a] 	       199	diff.c	FUNCTION_7
0x400032a	        0x488945f8	                mov qword [rbp - 8], rax	       199	diff.c	FUNCTION_7
0x400032e	            0xeb4c	                           jmp 0x400037c	       199	diff.c	FUNCTION_7
0x4000330	        0x488b55f8	                mov rdx, qword [rbp - 8]	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x4000334	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x4000338	          0x4889d6	                            mov rsi, rdx	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x400033b	          0x4889c7	                            mov rdi, rax	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x400033e	      0xe895ffffff	                call sym.diff_buf_idx_tp	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x4000343	          0x8945f4	              mov dword [rbp - 0xc], eax	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x4000346	        0x837df408	                cmp dword [rbp - 0xc], 8	       202	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x400034a	            0x7425	                            je 0x4000371	       202	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x400034c	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x4000350	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       204	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x400035a	    0x488b05000000	            mov rax, qword [0x04000361] 	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x4000361	        0x483945f8	                cmp qword [rbp - 8], rax	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x4000365	            0x750a	                           jne 0x4000371	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x4000367	      0xbf01000000	                              mov edi, 1	       206	diff.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_2
0x400036c	      0xe8780c0000	                    call sym.diff_redraw	       206	diff.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_2
0x4000371	        0x488b45f8	                mov rax, qword [rbp - 8]	       199	diff.c	FUNCTION_7
0x4000375	          0x488b00	                    mov rax, qword [rax]	       199	diff.c	FUNCTION_7
0x4000378	        0x488945f8	                mov qword [rbp - 8], rax	       199	diff.c	FUNCTION_7
0x400037c	      0x48837df800	                  cmp qword [rbp - 8], 0	       199	diff.c	FUNCTION_7
0x4000381	            0x75ad	                           jne 0x4000330	       199	diff.c	FUNCTION_7
0x4000383	              0x90	                                     nop	       209	diff.c	FUNCTION_7
0x4000384	              0xc9	                                   leave	       209	diff.c	FUNCTION_7
0x4000385	              0xc3	                                     ret	       209	diff.c	FUNCTION_7
diff_alloc_new	WHILE,0:SWITCH,0:ELSE,1:functions,0:IF,2:CALL,1:DO,0:FOR,0	26
0x4000c7a	              0x55	                                push rbp	       494	diff.c	FUNCTION_10
0x4000c7b	          0x4889e5	                            mov rbp, rsp	       494	diff.c	FUNCTION_10
0x4000c7e	        0x4883ec30	                           sub rsp, 0x30	       494	diff.c	FUNCTION_10
0x4000c82	        0x48897de8	             mov qword [rbp - 0x18], rdi	       494	diff.c	FUNCTION_10
0x4000c86	        0x488975e0	             mov qword [rbp - 0x20], rsi	       494	diff.c	FUNCTION_10
0x4000c8a	        0x488955d8	             mov qword [rbp - 0x28], rdx	       494	diff.c	FUNCTION_10
0x4000c8e	      0xbf88000000	                           mov edi, 0x88	       497	diff.c	FUNCTION_10	CALL_1
0x4000c93	      0xe800000000	                          call 0x4000c98	       497	diff.c	FUNCTION_10	CALL_1
0x4000c98	        0x488945f8	                mov qword [rbp - 8], rax	       497	diff.c	FUNCTION_10	CALL_1
0x4000c9c	      0x48837df800	                  cmp qword [rbp - 8], 0	       498	diff.c	FUNCTION_10	IF_1
0x4000ca1	            0x742b	                            je 0x4000cce	       498	diff.c	FUNCTION_10	IF_1
0x4000ca3	        0x488b45f8	                mov rax, qword [rbp - 8]	       500	diff.c	FUNCTION_10	IF_1
0x4000ca7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       500	diff.c	FUNCTION_10	IF_1
0x4000cab	          0x488910	                    mov qword [rax], rdx	       500	diff.c	FUNCTION_10	IF_1
0x4000cae	      0x48837de000	               cmp qword [rbp - 0x20], 0	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4000cb3	            0x750e	                           jne 0x4000cc3	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4000cb5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x4000cb9	        0x488b55f8	                mov rdx, qword [rbp - 8]	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x4000cbd	        0x48895058	             mov qword [rax + 0x58], rdx	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x4000cc1	            0xeb0b	                           jmp 0x4000cce	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x4000cc3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x4000cc7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x4000ccb	          0x488910	                    mov qword [rax], rdx	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x4000cce	        0x488b45f8	                mov rax, qword [rbp - 8]	       506	diff.c	FUNCTION_10	ELSE_1
0x4000cd2	              0xc9	                                   leave	       507	diff.c	FUNCTION_10	ELSE_1
0x4000cd3	              0xc3	                                     ret	       507	diff.c	FUNCTION_10	ELSE_1
ex_diffthis	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,0:CALL,1:DO,0:FOR,0	11
0x400203c	              0x55	                                push rbp	      1127	diff.c	FUNCTION_19
0x400203d	          0x4889e5	                            mov rbp, rsp	      1127	diff.c	FUNCTION_19
0x4002040	        0x4883ec10	                           sub rsp, 0x10	      1127	diff.c	FUNCTION_19
0x4002044	        0x48897df8	                mov qword [rbp - 8], rdi	      1127	diff.c	FUNCTION_19
0x4002048	    0x488b05000000	            mov rax, qword [0x0400204f] 	      1129	diff.c	FUNCTION_19	CALL_1
0x400204f	      0xbe01000000	                              mov esi, 1	      1129	diff.c	FUNCTION_19	CALL_1
0x4002054	          0x4889c7	                            mov rdi, rax	      1129	diff.c	FUNCTION_19	CALL_1
0x4002057	      0xe800000000	                          call 0x400205c	      1129	diff.c	FUNCTION_19	CALL_1
0x400205c	              0x90	                                     nop	      1130	diff.c	FUNCTION_19
0x400205d	              0xc9	                                   leave	      1130	diff.c	FUNCTION_19
0x400205e	              0xc3	                                     ret	      1130	diff.c	FUNCTION_19
diff_get_corresponding_line_int	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,7:CALL,3:DO,0:FOR,1	171
0x4005699	              0x55	                                push rbp	      2580	diff.c	FUNCTION_42
0x400569a	          0x4889e5	                            mov rbp, rsp	      2580	diff.c	FUNCTION_42
0x400569d	        0x4883ec30	                           sub rsp, 0x30	      2580	diff.c	FUNCTION_42
0x40056a1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2580	diff.c	FUNCTION_42
0x40056a5	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2580	diff.c	FUNCTION_42
0x40056a9	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2584	diff.c	FUNCTION_42
0x40056b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2586	diff.c	FUNCTION_42	CALL_1
0x40056b4	          0x4889c7	                            mov rdi, rax	      2586	diff.c	FUNCTION_42	CALL_1
0x40056b7	      0xe8deabffff	                   call sym.diff_buf_idx	      2586	diff.c	FUNCTION_42	CALL_1
0x40056bc	          0x8945f0	             mov dword [rbp - 0x10], eax	      2586	diff.c	FUNCTION_42	CALL_1
0x40056bf	    0x488b05000000	            mov rax, qword [0x040056c6] 	      2587	diff.c	FUNCTION_42	CALL_2
0x40056c6	          0x4889c7	                            mov rdi, rax	      2587	diff.c	FUNCTION_42	CALL_2
0x40056c9	      0xe8ccabffff	                   call sym.diff_buf_idx	      2587	diff.c	FUNCTION_42	CALL_2
0x40056ce	          0x8945f4	              mov dword [rbp - 0xc], eax	      2587	diff.c	FUNCTION_42	CALL_2
0x40056d1	        0x837df008	               cmp dword [rbp - 0x10], 8	      2588	diff.c	FUNCTION_42	IF_1
0x40056d5	            0x7416	                            je 0x40056ed	      2588	diff.c	FUNCTION_42	IF_1
0x40056d7	        0x837df408	                cmp dword [rbp - 0xc], 8	      2588	diff.c	FUNCTION_42	IF_1
0x40056db	            0x7410	                            je 0x40056ed	      2588	diff.c	FUNCTION_42	IF_1
0x40056dd	    0x488b05000000	            mov rax, qword [0x040056e4] 	      2588	diff.c	FUNCTION_42	IF_1
0x40056e4	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2588	diff.c	FUNCTION_42	IF_1
0x40056e8	          0x4885c0	                           test rax, rax	      2588	diff.c	FUNCTION_42	IF_1
0x40056eb	            0x7509	                           jne 0x40056f6	      2588	diff.c	FUNCTION_42	IF_1
0x40056ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2589	diff.c	FUNCTION_42	IF_1
0x40056f1	      0xe90e020000	                           jmp 0x4005904	      2589	diff.c	FUNCTION_42	IF_1
0x40056f6	    0x488b05000000	            mov rax, qword [0x040056fd] 	      2591	diff.c	FUNCTION_42	IF_2
0x40056fd	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2591	diff.c	FUNCTION_42	IF_2
0x4005703	            0x85c0	                           test eax, eax	      2591	diff.c	FUNCTION_42	IF_2
0x4005705	            0x740a	                            je 0x4005711	      2591	diff.c	FUNCTION_42	IF_2
0x4005707	      0xbf00000000	                              mov edi, 0	      2592	diff.c	FUNCTION_42	CALL_3
0x400570c	      0xe800000000	                          call 0x4005711	      2592	diff.c	FUNCTION_42	CALL_3
0x4005711	    0x488b05000000	            mov rax, qword [0x04005718] 	      2594	diff.c	FUNCTION_42	IF_3
0x4005718	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2594	diff.c	FUNCTION_42	IF_3
0x400571c	          0x4885c0	                           test rax, rax	      2594	diff.c	FUNCTION_42	IF_3
0x400571f	            0x7509	                           jne 0x400572a	      2594	diff.c	FUNCTION_42	IF_3
0x4005721	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2595	diff.c	FUNCTION_42	IF_3
0x4005725	      0xe9da010000	                           jmp 0x4005904	      2595	diff.c	FUNCTION_42	IF_3
0x400572a	    0x488b05000000	            mov rax, qword [0x04005731] 	      2597	diff.c	FUNCTION_42	FOR_1
0x4005731	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2597	diff.c	FUNCTION_42	FOR_1
0x4005735	        0x488945f8	                mov qword [rbp - 8], rax	      2597	diff.c	FUNCTION_42	FOR_1
0x4005739	      0xe9ac010000	                           jmp 0x40058ea	      2597	diff.c	FUNCTION_42	FOR_1
0x400573e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4005742	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4005745	          0x4863d2	                         movsxd rdx, edx	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4005748	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x400574d	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4005751	            0x7e14	                           jle 0x4005767	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4005753	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x4005756	            0x4898	                                    cdqe	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x4005758	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x400575c	          0x4829c2	                            sub rdx, rax	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x400575f	          0x4889d0	                            mov rax, rdx	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x4005762	      0xe99d010000	                           jmp 0x4005904	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x4005767	        0x488b45f8	                mov rax, qword [rbp - 8]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x400576b	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x400576e	          0x4863d2	                         movsxd rdx, edx	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4005771	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4005776	        0x488b45f8	                mov rax, qword [rbp - 8]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x400577a	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x400577d	          0x4863c9	                         movsxd rcx, ecx	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4005780	        0x4883c108	                              add rcx, 8	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4005784	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4005789	          0x4801d0	                            add rax, rdx	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x400578c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4005790	            0x7e6c	                           jle 0x40057fe	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4005792	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x4005796	            0x89c1	                            mov ecx, eax	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x4005798	        0x488b45f8	                mov rax, qword [rbp - 8]	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x400579c	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x400579f	          0x4863d2	                         movsxd rdx, edx	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057a2	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057a7	            0x29c1	                            sub ecx, eax	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057a9	            0x89c8	                            mov eax, ecx	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057ab	          0x8945ec	             mov dword [rbp - 0x14], eax	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057ae	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057b1	          0x4863d0	                         movsxd rdx, eax	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057b8	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057bb	          0x4863c9	                         movsxd rcx, ecx	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057be	        0x4883c108	                              add rcx, 8	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057c2	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057c7	          0x4839c2	                            cmp rdx, rax	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057ca	            0x7e16	                           jle 0x40057e2	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057d0	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057d3	          0x4863d2	                         movsxd rdx, edx	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057d6	        0x4883c208	                              add rdx, 8	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057da	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057df	          0x8945ec	             mov dword [rbp - 0x14], eax	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40057e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057e6	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057e9	          0x4863d2	                         movsxd rdx, edx	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057ec	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057f1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057f4	            0x4898	                                    cdqe	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057f6	          0x4801d0	                            add rax, rdx	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057f9	      0xe906010000	                           jmp 0x4005904	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x40057fe	        0x488b45f8	                mov rax, qword [rbp - 8]	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005802	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005805	          0x4863d2	                         movsxd rdx, edx	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005808	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x400580d	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005811	            0x7579	                           jne 0x400588c	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005813	        0x488b45f8	                mov rax, qword [rbp - 8]	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005817	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x400581a	          0x4863d2	                         movsxd rdx, edx	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x400581d	        0x4883c208	                              add rdx, 8	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005821	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005826	          0x4885c0	                           test rax, rax	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005829	            0x7561	                           jne 0x400588c	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x400582b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x400582f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005832	          0x4863d2	                         movsxd rdx, edx	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005835	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x400583a	    0x488b05000000	            mov rax, qword [0x04005841] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005841	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005845	          0x4839c2	                            cmp rdx, rax	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005848	            0x7f42	                            jg 0x400588c	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x400584a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x400584e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005851	          0x4863d2	                         movsxd rdx, edx	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005854	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005859	        0x488b45f8	                mov rax, qword [rbp - 8]	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x400585d	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005860	          0x4863c9	                         movsxd rcx, ecx	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005863	        0x4883c108	                              add rcx, 8	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005867	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x400586c	          0x4801c2	                            add rdx, rax	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x400586f	    0x488b05000000	            mov rax, qword [0x04005876] 	      2614	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005876	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2614	diff.c	FUNCTION_42	FOR_1	IF_7
0x400587a	          0x4839c2	                            cmp rdx, rax	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x400587d	            0x7e0d	                           jle 0x400588c	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x400587f	    0x488b05000000	            mov rax, qword [0x04005886] 	      2622	diff.c	FUNCTION_42	FOR_1	IF_7
0x4005886	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2622	diff.c	FUNCTION_42	FOR_1	IF_7
0x400588a	            0xeb78	                           jmp 0x4005904	      2622	diff.c	FUNCTION_42	FOR_1	IF_7
0x400588c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2623	diff.c	FUNCTION_42	FOR_1
0x4005890	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2623	diff.c	FUNCTION_42	FOR_1
0x4005893	          0x4863d2	                         movsxd rdx, edx	      2623	diff.c	FUNCTION_42	FOR_1
0x4005896	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2623	diff.c	FUNCTION_42	FOR_1
0x400589b	            0x89c1	                            mov ecx, eax	      2623	diff.c	FUNCTION_42	FOR_1
0x400589d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2623	diff.c	FUNCTION_42	FOR_1
0x40058a1	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2623	diff.c	FUNCTION_42	FOR_1
0x40058a4	          0x4863d2	                         movsxd rdx, edx	      2623	diff.c	FUNCTION_42	FOR_1
0x40058a7	        0x4883c208	                              add rdx, 8	      2623	diff.c	FUNCTION_42	FOR_1
0x40058ab	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2623	diff.c	FUNCTION_42	FOR_1
0x40058b0	             0x1c1	                            add ecx, eax	      2623	diff.c	FUNCTION_42	FOR_1
0x40058b2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2624	diff.c	FUNCTION_42	FOR_1
0x40058b6	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2624	diff.c	FUNCTION_42	FOR_1
0x40058b9	          0x4863d2	                         movsxd rdx, edx	      2624	diff.c	FUNCTION_42	FOR_1
0x40058bc	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2624	diff.c	FUNCTION_42	FOR_1
0x40058c1	            0x89c6	                            mov esi, eax	      2623	diff.c	FUNCTION_42	FOR_1
0x40058c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2624	diff.c	FUNCTION_42	FOR_1
0x40058c7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2624	diff.c	FUNCTION_42	FOR_1
0x40058ca	          0x4863d2	                         movsxd rdx, edx	      2624	diff.c	FUNCTION_42	FOR_1
0x40058cd	        0x4883c208	                              add rdx, 8	      2624	diff.c	FUNCTION_42	FOR_1
0x40058d1	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2624	diff.c	FUNCTION_42	FOR_1
0x40058d6	             0x1f0	                            add eax, esi	      2623	diff.c	FUNCTION_42	FOR_1
0x40058d8	            0x29c1	                            sub ecx, eax	      2623	diff.c	FUNCTION_42	FOR_1
0x40058da	            0x89c8	                            mov eax, ecx	      2623	diff.c	FUNCTION_42	FOR_1
0x40058dc	          0x8945ec	             mov dword [rbp - 0x14], eax	      2623	diff.c	FUNCTION_42	FOR_1
0x40058df	        0x488b45f8	                mov rax, qword [rbp - 8]	      2597	diff.c	FUNCTION_42	FOR_1
0x40058e3	          0x488b00	                    mov rax, qword [rax]	      2597	diff.c	FUNCTION_42	FOR_1
0x40058e6	        0x488945f8	                mov qword [rbp - 8], rax	      2597	diff.c	FUNCTION_42	FOR_1
0x40058ea	      0x48837df800	                  cmp qword [rbp - 8], 0	      2597	diff.c	FUNCTION_42	FOR_1
0x40058ef	     0xf8549feffff	                           jne 0x400573e	      2597	diff.c	FUNCTION_42	FOR_1
0x40058f5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2628	diff.c	FUNCTION_42
0x40058f8	            0x4898	                                    cdqe	      2628	diff.c	FUNCTION_42
0x40058fa	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2628	diff.c	FUNCTION_42
0x40058fe	          0x4829c2	                            sub rdx, rax	      2628	diff.c	FUNCTION_42
0x4005901	          0x4889d0	                            mov rax, rdx	      2628	diff.c	FUNCTION_42
0x4005904	              0xc9	                                   leave	      2629	diff.c	FUNCTION_42
0x4005905	              0xc3	                                     ret	      2629	diff.c	FUNCTION_42
diff_check_sanity	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,2:CALL,0:DO,0:FOR,1	40
0x4000f62	              0x55	                                push rbp	       591	diff.c	FUNCTION_12
0x4000f63	          0x4889e5	                            mov rbp, rsp	       591	diff.c	FUNCTION_12
0x4000f66	        0x48897de8	             mov qword [rbp - 0x18], rdi	       591	diff.c	FUNCTION_12
0x4000f6a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       591	diff.c	FUNCTION_12
0x4000f6e	    0xc745fc000000	                  mov dword [rbp - 4], 0	       594	diff.c	FUNCTION_12	FOR_1
0x4000f75	            0xeb65	                           jmp 0x4000fdc	       594	diff.c	FUNCTION_12	FOR_1
0x4000f77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4000f7b	          0x8b55fc	                mov edx, dword [rbp - 4]	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4000f7e	          0x4863d2	                         movsxd rdx, edx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4000f81	        0x4883c20c	                            add rdx, 0xc	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4000f85	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4000f89	          0x4885c0	                           test rax, rax	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4000f8c	            0x744a	                            je 0x4000fd8	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4000f8e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000f92	          0x8b55fc	                mov edx, dword [rbp - 4]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000f95	          0x4863d2	                         movsxd rdx, edx	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000f98	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000f9d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fa1	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fa4	          0x4863c9	                         movsxd rcx, ecx	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fa7	        0x4883c108	                              add rcx, 8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fab	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fb0	          0x4801d0	                            add rax, rdx	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fb3	        0x488d48ff	                      lea rcx, [rax - 1]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fbb	          0x8b55fc	                mov edx, dword [rbp - 4]	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fbe	          0x4863d2	                         movsxd rdx, edx	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fc1	        0x4883c20c	                            add rdx, 0xc	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fc5	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fc9	          0x488b00	                    mov rax, qword [rax]	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fcc	          0x4839c1	                            cmp rcx, rax	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fcf	            0x7e07	                           jle 0x4000fd8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fd1	      0xb800000000	                              mov eax, 0	       598	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fd6	            0xeb0f	                           jmp 0x4000fe7	       598	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000fd8	        0x8345fc01	                  add dword [rbp - 4], 1	       594	diff.c	FUNCTION_12	FOR_1
0x4000fdc	        0x837dfc07	                  cmp dword [rbp - 4], 7	       594	diff.c	FUNCTION_12	FOR_1
0x4000fe0	            0x7e95	                           jle 0x4000f77	       594	diff.c	FUNCTION_12	FOR_1
0x4000fe2	      0xb801000000	                              mov eax, 1	       599	diff.c	FUNCTION_12
0x4000fe7	              0x5d	                                 pop rbp	       600	diff.c	FUNCTION_12
0x4000fe8	              0xc3	                                     ret	       600	diff.c	FUNCTION_12
diff_buf_delete	WHILE,0:SWITCH,0:ELSE,0:functions,1:IF,0:CALL,0:DO,0:FOR,0	35
0x4000040	              0x55	                                push rbp	        65	diff.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        65	diff.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	        65	diff.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	        65	diff.c	FUNCTION_1
0x400004c	    0x488b05000000	            mov rax, qword [0x04000053] 	        69	diff.c	FUNCTION_1
0x4000053	        0x488945f8	                mov qword [rbp - 8], rax	        69	diff.c	FUNCTION_1
0x4000057	            0xeb62	                           jmp 0x40000bb	        69	diff.c	FUNCTION_1
0x4000059	        0x488b55f8	                mov rdx, qword [rbp - 8]	        71	diff.c	CALL_1
0x400005d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	diff.c	CALL_1
0x4000061	          0x4889d6	                            mov rsi, rdx	        71	diff.c	CALL_1
0x4000064	          0x4889c7	                            mov rdi, rax	        71	diff.c	CALL_1
0x4000067	      0xe86c020000	                call sym.diff_buf_idx_tp	        71	diff.c	CALL_1
0x400006c	          0x8945f4	              mov dword [rbp - 0xc], eax	        71	diff.c	CALL_1
0x400006f	        0x837df408	                cmp dword [rbp - 0xc], 8	        72	diff.c	IF_1
0x4000073	            0x743b	                            je 0x40000b0	        72	diff.c	IF_1
0x4000075	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	diff.c	IF_1
0x4000079	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        74	diff.c	IF_1
0x400007c	          0x4863d2	                         movsxd rdx, edx	        74	diff.c	IF_1
0x400007f	        0x4883c20c	                            add rdx, 0xc	        74	diff.c	IF_1
0x4000083	    0x48c704d00000	              mov qword [rax + rdx*8], 0	        74	diff.c	IF_1
0x400008b	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	diff.c	IF_1
0x400008f	    0xc780a0000000	               mov dword [rax + 0xa0], 1	        75	diff.c	IF_1
0x4000099	    0x488b05000000	            mov rax, qword [0x040000a0] 	        76	diff.c	IF_1	IF_2
0x40000a0	        0x483945f8	                cmp qword [rbp - 8], rax	        76	diff.c	IF_1	IF_2
0x40000a4	            0x750a	                           jne 0x40000b0	        76	diff.c	IF_1	IF_2
0x40000a6	      0xbf01000000	                              mov edi, 1	        77	diff.c	IF_1	CALL_2
0x40000ab	      0xe8390f0000	                    call sym.diff_redraw	        77	diff.c	IF_1	CALL_2
0x40000b0	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	diff.c	FUNCTION_1
0x40000b4	          0x488b00	                    mov rax, qword [rax]	        69	diff.c	FUNCTION_1
0x40000b7	        0x488945f8	                mov qword [rbp - 8], rax	        69	diff.c	FUNCTION_1
0x40000bb	      0x48837df800	                  cmp qword [rbp - 8], 0	        69	diff.c	FUNCTION_1
0x40000c0	            0x7597	                           jne 0x4000059	        69	diff.c	FUNCTION_1
0x40000c2	              0x90	                                     nop	        80	diff.c	FUNCTION_1
0x40000c3	              0xc9	                                   leave	        80	diff.c	FUNCTION_1
0x40000c4	              0xc3	                                     ret	        80	diff.c	FUNCTION_1
diff_redraw	WHILE,0:SWITCH,0:ELSE,1:functions,0:IF,5:CALL,6:DO,0:FOR,0	73
0x4000fe9	              0x55	                                push rbp	       608	diff.c	FUNCTION_13
0x4000fea	          0x4889e5	                            mov rbp, rsp	       608	diff.c	FUNCTION_13
0x4000fed	        0x4883ec20	                           sub rsp, 0x20	       608	diff.c	FUNCTION_13
0x4000ff1	          0x897dec	             mov dword [rbp - 0x14], edi	       608	diff.c	FUNCTION_13
0x4000ff4	    0x488b05000000	            mov rax, qword [0x04000ffb] 	       612	diff.c	FUNCTION_13	CALL_1
0x4000ffb	        0x488945f8	                mov qword [rbp - 8], rax	       612	diff.c	FUNCTION_13	CALL_1
0x4000fff	      0xe9e9000000	                           jmp 0x40010ed	       612	diff.c	FUNCTION_13	CALL_1
0x4001004	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	diff.c	FUNCTION_13	IF_1
0x4001008	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	       613	diff.c	FUNCTION_13	IF_1
0x400100e	            0x85c0	                           test eax, eax	       613	diff.c	FUNCTION_13	IF_1
0x4001010	     0xf84cb000000	                            je 0x40010e1	       613	diff.c	FUNCTION_13	IF_1
0x4001016	        0x488b45f8	                mov rax, qword [rbp - 8]	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0x400101a	      0xbe23000000	                           mov esi, 0x23	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0x400101f	          0x4889c7	                            mov rdi, rax	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0x4001022	      0xe800000000	                          call 0x4001027	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0x4001027	        0x837dec00	               cmp dword [rbp - 0x14], 0	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x400102b	            0x741c	                            je 0x4001049	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x400102d	        0x488b45f8	                mov rax, qword [rbp - 8]	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x4001031	          0x4889c7	                            mov rdi, rax	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x4001034	      0xe800000000	                          call 0x4001039	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x4001039	            0x85c0	                           test eax, eax	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x400103b	            0x740c	                            je 0x4001049	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x400103d	        0x488b45f8	                mov rax, qword [rbp - 8]	       618	diff.c	FUNCTION_13	IF_1	CALL_4
0x4001041	          0x4889c7	                            mov rdi, rax	       618	diff.c	FUNCTION_13	IF_1	CALL_4
0x4001044	      0xe800000000	                          call 0x4001049	       618	diff.c	FUNCTION_13	IF_1	CALL_4
0x4001049	        0x488b45f8	                mov rax, qword [rbp - 8]	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x400104d	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x4001051	        0x488b45f8	                mov rax, qword [rbp - 8]	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x4001055	          0x4889d6	                            mov rsi, rdx	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x4001058	          0x4889c7	                            mov rdi, rax	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x400105b	      0xe800000000	                          call 0x4001060	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x4001060	          0x8945f4	              mov dword [rbp - 0xc], eax	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x4001063	    0x488b05000000	            mov rax, qword [0x0400106a] 	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x400106a	        0x483945f8	                cmp qword [rbp - 8], rax	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x400106e	            0x740e	                            je 0x400107e	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4001070	        0x488b45f8	                mov rax, qword [rbp - 8]	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4001074	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x400107a	            0x85c0	                           test eax, eax	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x400107c	            0x7f06	                            jg 0x4001084	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x400107e	        0x837df400	                cmp dword [rbp - 0xc], 0	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4001082	            0x7e5d	                           jle 0x40010e1	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4001084	        0x488b45f8	                mov rax, qword [rbp - 8]	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4001088	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x400108e	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4001091	            0x7e1b	                           jle 0x40010ae	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4001093	      0xb800000000	                              mov eax, 0	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4001098	        0x837df400	                cmp dword [rbp - 0xc], 0	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x400109c	         0xf4945f4	           cmovns eax, dword [rbp - 0xc]	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x40010a0	            0x89c2	                            mov edx, eax	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x40010a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x40010a6	    0x899084000000	             mov dword [rax + 0x84], edx	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x40010ac	            0xeb22	                           jmp 0x40010d0	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x40010ae	        0x837df400	                cmp dword [rbp - 0xc], 0	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x40010b2	            0x7e1c	                           jle 0x40010d0	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x40010b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x40010b8	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x40010be	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x40010c1	            0x7d0d	                           jge 0x40010d0	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x40010c3	        0x488b45f8	                mov rax, qword [rbp - 8]	       628	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x40010c7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       628	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x40010ca	    0x899084000000	             mov dword [rax + 0x84], edx	       628	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x40010d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x40010d4	      0xbe00000000	                              mov esi, 0	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x40010d9	          0x4889c7	                            mov rdi, rax	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x40010dc	      0xe800000000	                          call 0x40010e1	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x40010e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	diff.c	FUNCTION_13	CALL_1
0x40010e5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       612	diff.c	FUNCTION_13	CALL_1
0x40010e9	        0x488945f8	                mov qword [rbp - 8], rax	       612	diff.c	FUNCTION_13	CALL_1
0x40010ed	      0x48837df800	                  cmp qword [rbp - 8], 0	       612	diff.c	FUNCTION_13	CALL_1
0x40010f2	     0xf850cffffff	                           jne 0x4001004	       612	diff.c	FUNCTION_13	CALL_1
0x40010f8	              0x90	                                     nop	       632	diff.c	FUNCTION_13
0x40010f9	              0xc9	                                   leave	       632	diff.c	FUNCTION_13
0x40010fa	              0xc3	                                     ret	       632	diff.c	FUNCTION_13
diff_write	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,0:CALL,3:DO,0:FOR,0	39
0x40010fb	              0x55	                                push rbp	       641	diff.c	FUNCTION_14
0x40010fc	          0x4889e5	                            mov rbp, rsp	       641	diff.c	FUNCTION_14
0x40010ff	        0x4883ec20	                           sub rsp, 0x20	       641	diff.c	FUNCTION_14
0x4001103	        0x48897de8	             mov qword [rbp - 0x18], rdi	       641	diff.c	FUNCTION_14
0x4001107	        0x488975e0	             mov qword [rbp - 0x20], rsi	       641	diff.c	FUNCTION_14
0x400110b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	diff.c	FUNCTION_14
0x400110f	    0x488b80901400	          mov rax, qword [rax + 0x1490] 	       645	diff.c	FUNCTION_14
0x4001116	        0x488945f8	                mov qword [rbp - 8], rax	       645	diff.c	FUNCTION_14
0x400111a	      0xbf00000000	                              mov edi, 0	       646	diff.c	FUNCTION_14	CALL_1
0x400111f	      0xe800000000	                          call 0x4001124	       646	diff.c	FUNCTION_14	CALL_1
0x4001124	          0x4889c2	                            mov rdx, rax	       646	diff.c	FUNCTION_14	CALL_1
0x4001127	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       646	diff.c	FUNCTION_14	CALL_1
0x400112b	    0x488990901400	          mov qword [rax + 0x1490], rdx 	       646	diff.c	FUNCTION_14	CALL_1
0x4001132	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       647	diff.c	FUNCTION_14	CALL_2
0x4001136	          0x488b10	                    mov rdx, qword [rax]	       647	diff.c	FUNCTION_14	CALL_2
0x4001139	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       647	diff.c	FUNCTION_14	CALL_2
0x400113d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       647	diff.c	FUNCTION_14	CALL_2
0x4001141	            0x6a01	                                  push 1	       647	diff.c	FUNCTION_14	CALL_2
0x4001143	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x4001145	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x4001147	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x4001149	    0x41b900000000	                              mov r9d, 0	       647	diff.c	FUNCTION_14	CALL_2
0x400114f	          0x4989d0	                             mov r8, rdx	       647	diff.c	FUNCTION_14	CALL_2
0x4001152	      0xb901000000	                              mov ecx, 1	       647	diff.c	FUNCTION_14	CALL_2
0x4001157	      0xba00000000	                              mov edx, 0	       647	diff.c	FUNCTION_14	CALL_2
0x400115c	          0x4889c7	                            mov rdi, rax	       647	diff.c	FUNCTION_14	CALL_2
0x400115f	      0xe800000000	                          call 0x4001164	       647	diff.c	FUNCTION_14	CALL_2
0x4001164	        0x4883c420	                           add rsp, 0x20	       647	diff.c	FUNCTION_14	CALL_2
0x4001168	          0x8945f4	              mov dword [rbp - 0xc], eax	       647	diff.c	FUNCTION_14	CALL_2
0x400116b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       649	diff.c	FUNCTION_14	CALL_3
0x400116f	    0x488b80901400	          mov rax, qword [rax + 0x1490] 	       649	diff.c	FUNCTION_14	CALL_3
0x4001176	          0x4889c7	                            mov rdi, rax	       649	diff.c	FUNCTION_14	CALL_3
0x4001179	      0xe800000000	                          call 0x400117e	       649	diff.c	FUNCTION_14	CALL_3
0x400117e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	diff.c	FUNCTION_14
0x4001182	        0x488b55f8	                mov rdx, qword [rbp - 8]	       650	diff.c	FUNCTION_14
0x4001186	    0x488990901400	          mov qword [rax + 0x1490], rdx 	       650	diff.c	FUNCTION_14
0x400118d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       651	diff.c	FUNCTION_14
0x4001190	              0xc9	                                   leave	       652	diff.c	FUNCTION_14
0x4001191	              0xc3	                                     ret	       652	diff.c	FUNCTION_14
diff_move_to	WHILE,1:SWITCH,0:ELSE,0:functions,0:IF,8:CALL,3:DO,0:FOR,1	105
0x40054f9	              0x55	                                push rbp	      2521	diff.c	FUNCTION_41
0x40054fa	          0x4889e5	                            mov rbp, rsp	      2521	diff.c	FUNCTION_41
0x40054fd	        0x4883ec30	                           sub rsp, 0x30	      2521	diff.c	FUNCTION_41
0x4005501	          0x897ddc	             mov dword [rbp - 0x24], edi	      2521	diff.c	FUNCTION_41
0x4005504	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2521	diff.c	FUNCTION_41
0x4005508	    0x488b05000000	            mov rax, qword [0x0400550f] 	      2523	diff.c	FUNCTION_41
0x400550f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2523	diff.c	FUNCTION_41
0x4005513	        0x488945f0	             mov qword [rbp - 0x10], rax	      2523	diff.c	FUNCTION_41
0x4005517	    0x488b05000000	            mov rax, qword [0x0400551e] 	      2526	diff.c	FUNCTION_41	CALL_1
0x400551e	          0x4889c7	                            mov rdi, rax	      2526	diff.c	FUNCTION_41	CALL_1
0x4005521	      0xe874adffff	                   call sym.diff_buf_idx	      2526	diff.c	FUNCTION_41	CALL_1
0x4005526	          0x8945ec	             mov dword [rbp - 0x14], eax	      2526	diff.c	FUNCTION_41	CALL_1
0x4005529	        0x837dec08	               cmp dword [rbp - 0x14], 8	      2527	diff.c	FUNCTION_41	IF_1
0x400552d	            0x7410	                            je 0x400553f	      2527	diff.c	FUNCTION_41	IF_1
0x400552f	    0x488b05000000	            mov rax, qword [0x04005536] 	      2527	diff.c	FUNCTION_41	IF_1
0x4005536	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2527	diff.c	FUNCTION_41	IF_1
0x400553a	          0x4885c0	                           test rax, rax	      2527	diff.c	FUNCTION_41	IF_1
0x400553d	            0x750a	                           jne 0x4005549	      2527	diff.c	FUNCTION_41	IF_1
0x400553f	      0xb800000000	                              mov eax, 0	      2528	diff.c	FUNCTION_41	IF_1
0x4005544	      0xe94e010000	                           jmp 0x4005697	      2528	diff.c	FUNCTION_41	IF_1
0x4005549	    0x488b05000000	            mov rax, qword [0x04005550] 	      2530	diff.c	FUNCTION_41	IF_2
0x4005550	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2530	diff.c	FUNCTION_41	IF_2
0x4005556	            0x85c0	                           test eax, eax	      2530	diff.c	FUNCTION_41	IF_2
0x4005558	            0x740a	                            je 0x4005564	      2530	diff.c	FUNCTION_41	IF_2
0x400555a	      0xbf00000000	                              mov edi, 0	      2531	diff.c	FUNCTION_41	CALL_2
0x400555f	      0xe800000000	                          call 0x4005564	      2531	diff.c	FUNCTION_41	CALL_2
0x4005564	    0x488b05000000	            mov rax, qword [0x0400556b] 	      2533	diff.c	FUNCTION_41	IF_3
0x400556b	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2533	diff.c	FUNCTION_41	IF_3
0x400556f	          0x4885c0	                           test rax, rax	      2533	diff.c	FUNCTION_41	IF_3
0x4005572	     0xf85af000000	                           jne 0x4005627	      2533	diff.c	FUNCTION_41	IF_3
0x4005578	      0xb800000000	                              mov eax, 0	      2534	diff.c	FUNCTION_41	IF_3
0x400557d	      0xe915010000	                           jmp 0x4005697	      2534	diff.c	FUNCTION_41	IF_3
0x4005582	        0x837ddcff	cmp dword [rbp - 0x24], 0xffffffffffffffff	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4005586	            0x7520	                           jne 0x40055a8	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4005588	    0x488b05000000	            mov rax, qword [0x0400558f] 	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x400558f	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4005593	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4005596	          0x4863d2	                         movsxd rdx, edx	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4005599	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x400559e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x40055a2	     0xf8d91000000	                           jge 0x4005639	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x40055a8	    0x488b05000000	            mov rax, qword [0x040055af] 	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x40055af	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x40055b3	        0x488945f8	                mov qword [rbp - 8], rax	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x40055b7	      0x48837df800	                  cmp qword [rbp - 8], 0	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x40055bc	            0x7502	                           jne 0x40055c0	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x40055be	            0xeb67	                           jmp 0x4005627	      2545	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x40055c0	        0x837ddc01	               cmp dword [rbp - 0x24], 1	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055c4	            0x7515	                           jne 0x40055db	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055c6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055ca	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055cd	          0x4863d2	                         movsxd rdx, edx	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055d0	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055d5	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055d9	            0x7f2a	                            jg 0x4005605	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055db	        0x837ddcff	cmp dword [rbp - 0x24], 0xffffffffffffffff	      2547	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055df	            0x7539	                           jne 0x400561a	      2547	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055e5	          0x488b00	                    mov rax, qword [rax]	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055e8	          0x4885c0	                           test rax, rax	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055eb	            0x7418	                            je 0x4005605	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055f1	          0x488b00	                    mov rax, qword [rax]	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055f4	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055f7	          0x4863d2	                         movsxd rdx, edx	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055fa	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x40055ff	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4005603	            0x7c15	                            jl 0x400561a	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4005605	        0x488b45f8	                mov rax, qword [rbp - 8]	      2551	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4005609	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2551	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x400560c	          0x4863d2	                         movsxd rdx, edx	      2551	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x400560f	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2551	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4005614	        0x488945f0	             mov qword [rbp - 0x10], rax	      2551	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4005618	            0xeb0d	                           jmp 0x4005627	      2552	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x400561a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x400561e	          0x488b00	                    mov rax, qword [rax]	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x4005621	        0x488945f8	                mov qword [rbp - 8], rax	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x4005625	            0xeb90	                           jmp 0x40055b7	      2554	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x4005627	      0x48836dd001	               sub qword [rbp - 0x30], 1	      2536	diff.c	FUNCTION_41	WHILE_1
0x400562c	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2536	diff.c	FUNCTION_41	WHILE_1
0x4005631	     0xf894bffffff	                           jns 0x4005582	      2536	diff.c	FUNCTION_41	WHILE_1
0x4005637	            0xeb01	                           jmp 0x400563a	      2536	diff.c	FUNCTION_41	WHILE_1
0x4005639	              0x90	                                     nop	      2540	diff.c	FUNCTION_41	WHILE_1	IF_4
0x400563a	    0x488b05000000	            mov rax, qword [0x04005641] 	      2558	diff.c	FUNCTION_41	IF_7
0x4005641	          0x488b00	                    mov rax, qword [rax]	      2558	diff.c	FUNCTION_41	IF_7
0x4005644	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2558	diff.c	FUNCTION_41	IF_7
0x4005648	            0x7d0e	                           jge 0x4005658	      2558	diff.c	FUNCTION_41	IF_7
0x400564a	    0x488b05000000	            mov rax, qword [0x04005651] 	      2559	diff.c	FUNCTION_41	IF_7
0x4005651	          0x488b00	                    mov rax, qword [rax]	      2559	diff.c	FUNCTION_41	IF_7
0x4005654	        0x488945f0	             mov qword [rbp - 0x10], rax	      2559	diff.c	FUNCTION_41	IF_7
0x4005658	    0x488b05000000	            mov rax, qword [0x0400565f] 	      2562	diff.c	FUNCTION_41	IF_8
0x400565f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2562	diff.c	FUNCTION_41	IF_8
0x4005663	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2562	diff.c	FUNCTION_41	IF_8
0x4005667	            0x7507	                           jne 0x4005670	      2562	diff.c	FUNCTION_41	IF_8
0x4005669	      0xb800000000	                              mov eax, 0	      2563	diff.c	FUNCTION_41	IF_8
0x400566e	            0xeb27	                           jmp 0x4005697	      2563	diff.c	FUNCTION_41	IF_8
0x4005670	      0xe800000000	                          call 0x4005675	      2565	diff.c	FUNCTION_41	CALL_3
0x4005675	    0x488b05000000	            mov rax, qword [0x0400567c] 	      2566	diff.c	FUNCTION_41
0x400567c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2566	diff.c	FUNCTION_41
0x4005680	        0x48895038	             mov qword [rax + 0x38], rdx	      2566	diff.c	FUNCTION_41
0x4005684	    0x488b05000000	            mov rax, qword [0x0400568b] 	      2567	diff.c	FUNCTION_41
0x400568b	    0xc74040000000	               mov dword [rax + 0x40], 0	      2567	diff.c	FUNCTION_41
0x4005692	      0xb801000000	                              mov eax, 1	      2569	diff.c	FUNCTION_41
0x4005697	              0xc9	                                   leave	      2570	diff.c	FUNCTION_41
0x4005698	              0xc3	                                     ret	      2570	diff.c	FUNCTION_41
ex_diffoff	WHILE,0:SWITCH,0:ELSE,0:functions,1:IF,2:CALL,3:DO,0:FOR,0	144
0x4002363	              0x55	                                push rbp	      1217	diff.c	FUNCTION_22
0x4002364	          0x4889e5	                            mov rbp, rsp	      1217	diff.c	FUNCTION_22
0x4002367	        0x4883ec20	                           sub rsp, 0x20	      1217	diff.c	FUNCTION_22
0x400236b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1217	diff.c	FUNCTION_22
0x400236f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1219	diff.c	FUNCTION_22
0x4002376	    0x488b05000000	            mov rax, qword [0x0400237d] 	      1221	diff.c	FUNCTION_22
0x400237d	        0x488945f8	                mov qword [rbp - 8], rax	      1221	diff.c	FUNCTION_22
0x4002381	      0xe9e4010000	                           jmp 0x400256a	      1221	diff.c	FUNCTION_22
0x4002386	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400238a	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400238d	            0x85c0	                           test eax, eax	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400238f	            0x7411	                            je 0x40023a2	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002391	        0x488b45f8	                mov rax, qword [rbp - 8]	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002395	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400239b	            0x85c0	                           test eax, eax	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400239d	           0xf95c0	                                setne al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x40023a0	            0xeb0e	                           jmp 0x40023b0	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x40023a2	    0x488b05000000	            mov rax, qword [0x040023a9] 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x40023a9	        0x483945f8	                cmp qword [rbp - 8], rax	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x40023ad	           0xf94c0	                                 sete al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x40023b0	            0x84c0	                             test al, al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x40023b2	     0xf8499010000	                            je 0x4002551	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x40023b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x40023bc	      0xbe00000000	                              mov esi, 0	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x40023c1	          0x4889c7	                            mov rdi, rax	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x40023c4	      0xe896fcffff	                call sym.set_diff_option	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x40023c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x40023cd	    0x8b808c020000	           mov eax, dword [rax + 0x28c] 	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x40023d3	            0x85c0	                           test eax, eax	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x40023d5	     0xf8450010000	                            je 0x400252b	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x40023db	        0x488b45f8	                mov rax, qword [rbp - 8]	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40023df	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40023e5	            0x85c0	                           test eax, eax	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40023e7	            0x7414	                            je 0x40023fd	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40023e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40023ed	    0x8b9090020000	           mov edx, dword [rax + 0x290] 	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40023f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40023f7	    0x899088020000	            mov dword [rax + 0x288], edx	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40023fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x4002401	    0x8b80b0020000	           mov eax, dword [rax + 0x2b0] 	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x4002407	            0x85c0	                           test eax, eax	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x4002409	            0x7414	                            je 0x400241f	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x400240b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x400240f	    0x8b90b4020000	           mov edx, dword [rax + 0x2b4] 	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x4002415	        0x488b45f8	                mov rax, qword [rbp - 8]	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x4002419	    0x8990b0020000	            mov dword [rax + 0x2b0], edx	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x400241f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x4002423	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x4002429	            0x85c0	                           test eax, eax	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x400242b	            0x7514	                           jne 0x4002441	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x400242d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x4002431	    0x8b9098020000	           mov edx, dword [rax + 0x298] 	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x4002437	        0x488b45f8	                mov rax, qword [rbp - 8]	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x400243b	    0x899094020000	            mov dword [rax + 0x294], edx	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x4002441	        0x488b45f8	                mov rax, qword [rbp - 8]	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x4002445	    0x488b80f80100	           mov rax, qword [rax + 0x1f8] 	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x400244c	          0x4889c7	                            mov rdi, rax	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x400244f	      0xe800000000	                          call 0x4002454	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x4002454	        0x488b45f8	                mov rax, qword [rbp - 8]	      1242	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x4002458	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      1242	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x400245f	           0xfb600	                   movzx eax, byte [rax]	      1242	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x4002462	            0x84c0	                             test al, al	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002464	            0x740d	                            je 0x4002473	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002466	        0x488b45f8	                mov rax, qword [rbp - 8]	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x400246a	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002471	            0xeb05	                           jmp 0x4002478	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002473	      0xb800000000	                              mov eax, 0	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002478	          0x4889c7	                            mov rdi, rax	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x400247b	      0xe800000000	                          call 0x4002480	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002480	          0x4889c2	                            mov rdx, rax	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002483	        0x488b45f8	                mov rax, qword [rbp - 8]	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002487	    0x488990f80100	            mov qword [rax + 0x1f8], rdx	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x400248e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4002492	    0x488b90c80100	           mov rdx, qword [rax + 0x1c8] 	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4002499	    0x8b0500000000	            mov eax, dword [0x0400249f] 	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x400249f	            0x4898	                                    cdqe	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x40024a1	          0x4839c2	                            cmp rdx, rax	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x40024a4	            0x7518	                           jne 0x40024be	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x40024a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x40024aa	    0x8b80d0010000	           mov eax, dword [rax + 0x1d0] 	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x40024b0	          0x4863d0	                         movsxd rdx, eax	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x40024b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x40024b7	    0x488990c80100	            mov qword [rax + 0x1c8], rdx	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x40024be	        0x488b45f8	                mov rax, qword [rbp - 8]	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40024c2	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40024c9	          0x4885c0	                           test rax, rax	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40024cc	            0x7518	                           jne 0x40024e6	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40024ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40024d2	    0x8b80f0010000	           mov eax, dword [rax + 0x1f0] 	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40024d8	          0x4863d0	                         movsxd rdx, eax	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40024db	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40024df	    0x488990e80100	            mov qword [rax + 0x1e8], rdx	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40024e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x40024ea	    0x8b80d4010000	           mov eax, dword [rax + 0x1d4] 	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x40024f0	            0x85c0	                           test eax, eax	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x40024f2	            0x742b	                            je 0x400251f	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x40024f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x40024f8	          0x4889c7	                            mov rdi, rax	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x40024fb	      0xe800000000	                          call 0x4002500	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x4002500	            0x85c0	                           test eax, eax	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4002502	            0x750c	                           jne 0x4002510	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4002504	        0x488b45f8	                mov rax, qword [rbp - 8]	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4002508	    0x8b80d8010000	           mov eax, dword [rax + 0x1d8] 	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400250e	            0xeb05	                           jmp 0x4002515	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4002510	      0xb800000000	                              mov eax, 0	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4002515	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x4002519	    0x8982d4010000	            mov dword [rdx + 0x1d4], eax	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x400251f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x4002523	          0x4889c7	                            mov rdi, rax	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x4002526	      0xe800000000	                          call 0x400252b	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x400252b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1259	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400252f	    0xc78084000000	               mov dword [rax + 0x84], 0	      1259	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002539	        0x488b45f8	                mov rax, qword [rbp - 8]	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x400253d	          0x4889c7	                            mov rdi, rax	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x4002540	      0xe800000000	                          call 0x4002545	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x4002545	        0x488b45f8	                mov rax, qword [rbp - 8]	      1266	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_7
0x4002549	          0x4889c7	                            mov rdi, rax	      1266	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_7
0x400254c	      0xe800000000	                          call 0x4002551	      1266	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_7
0x4002551	        0x488b45f8	                mov rax, qword [rbp - 8]	      1268	diff.c	FUNCTION_22	FUNCTION_1
0x4002555	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1268	diff.c	FUNCTION_22	FUNCTION_1
0x400255b	           0x945f4	               or dword [rbp - 0xc], eax	      1268	diff.c	FUNCTION_22	FUNCTION_1
0x400255e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1221	diff.c	FUNCTION_22
0x4002562	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1221	diff.c	FUNCTION_22
0x4002566	        0x488945f8	                mov qword [rbp - 8], rax	      1221	diff.c	FUNCTION_22
0x400256a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1221	diff.c	FUNCTION_22
0x400256f	     0xf8511feffff	                           jne 0x4002386	      1221	diff.c	FUNCTION_22
0x4002575	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1272	diff.c	FUNCTION_22	IF_1
0x4002579	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1272	diff.c	FUNCTION_22	IF_1
0x400257c	            0x85c0	                           test eax, eax	      1272	diff.c	FUNCTION_22	IF_1
0x400257e	            0x7405	                            je 0x4002585	      1272	diff.c	FUNCTION_22	IF_1
0x4002580	      0xe8a9dcffff	                 call sym.diff_buf_clear	      1273	diff.c	FUNCTION_22	CALL_1
0x4002585	        0x837df400	                cmp dword [rbp - 0xc], 0	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x4002589	            0x7523	                           jne 0x40025ae	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x400258b	    0x488b05000000	            mov rax, qword [0x04002592] 	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x4002592	      0xbe68000000	                           mov esi, 0x68	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x4002597	          0x4889c7	                            mov rdi, rax	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x400259a	      0xe800000000	                          call 0x400259f	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x400259f	          0x4885c0	                           test rax, rax	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40025a2	            0x740a	                            je 0x40025ae	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40025a4	      0xbf00000000	                              mov edi, 0	      1277	diff.c	FUNCTION_22	CALL_3
0x40025a9	      0xe800000000	                          call 0x40025ae	      1277	diff.c	FUNCTION_22	CALL_3
0x40025ae	              0x90	                                     nop	      1278	diff.c	FUNCTION_22
0x40025af	              0xc9	                                   leave	      1278	diff.c	FUNCTION_22
0x40025b0	              0xc3	                                     ret	      1278	diff.c	FUNCTION_22
diff_win_options	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,8:CALL,11:DO,0:FOR,0	136
0x40020f0	              0x55	                                push rbp	      1153	diff.c	FUNCTION_21
0x40020f1	          0x4889e5	                            mov rbp, rsp	      1153	diff.c	FUNCTION_21
0x40020f4	        0x4883ec20	                           sub rsp, 0x20	      1153	diff.c	FUNCTION_21
0x40020f8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1153	diff.c	FUNCTION_21
0x40020fc	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1153	diff.c	FUNCTION_21
0x40020ff	    0x488b05000000	            mov rax, qword [0x04002106] 	      1155	diff.c	FUNCTION_21
0x4002106	        0x488945f8	                mov qword [rbp - 8], rax	      1155	diff.c	FUNCTION_21
0x400210a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1158	diff.c	FUNCTION_21
0x400210e	    0x488905000000	            mov qword [0x04002115], rax 	      1158	diff.c	FUNCTION_21
0x4002115	      0xe800000000	                          call 0x400211a	      1159	diff.c	FUNCTION_21	CALL_1
0x400211a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1160	diff.c	FUNCTION_21
0x400211e	    0x488905000000	            mov qword [0x04002125], rax 	      1160	diff.c	FUNCTION_21
0x4002125	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1164	diff.c	FUNCTION_21	IF_1
0x4002129	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1164	diff.c	FUNCTION_21	IF_1
0x400212f	            0x85c0	                           test eax, eax	      1164	diff.c	FUNCTION_21	IF_1
0x4002131	            0x7514	                           jne 0x4002147	      1164	diff.c	FUNCTION_21	IF_1
0x4002133	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1165	diff.c	FUNCTION_21	IF_1
0x4002137	    0x8b9088020000	           mov edx, dword [rax + 0x288] 	      1165	diff.c	FUNCTION_21	IF_1
0x400213d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1165	diff.c	FUNCTION_21	IF_1
0x4002141	    0x899090020000	            mov dword [rax + 0x290], edx	      1165	diff.c	FUNCTION_21	IF_1
0x4002147	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1166	diff.c	FUNCTION_21
0x400214b	    0xc78088020000	              mov dword [rax + 0x288], 1	      1166	diff.c	FUNCTION_21
0x4002155	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1167	diff.c	FUNCTION_21	IF_2
0x4002159	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1167	diff.c	FUNCTION_21	IF_2
0x400215f	            0x85c0	                           test eax, eax	      1167	diff.c	FUNCTION_21	IF_2
0x4002161	            0x7514	                           jne 0x4002177	      1167	diff.c	FUNCTION_21	IF_2
0x4002163	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1168	diff.c	FUNCTION_21	IF_2
0x4002167	    0x8b90b0020000	           mov edx, dword [rax + 0x2b0] 	      1168	diff.c	FUNCTION_21	IF_2
0x400216d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1168	diff.c	FUNCTION_21	IF_2
0x4002171	    0x8990b4020000	            mov dword [rax + 0x2b4], edx	      1168	diff.c	FUNCTION_21	IF_2
0x4002177	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1169	diff.c	FUNCTION_21
0x400217b	    0xc780b0020000	              mov dword [rax + 0x2b0], 1	      1169	diff.c	FUNCTION_21
0x4002185	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1170	diff.c	FUNCTION_21	IF_3
0x4002189	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1170	diff.c	FUNCTION_21	IF_3
0x400218f	            0x85c0	                           test eax, eax	      1170	diff.c	FUNCTION_21	IF_3
0x4002191	            0x7514	                           jne 0x40021a7	      1170	diff.c	FUNCTION_21	IF_3
0x4002193	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1171	diff.c	FUNCTION_21	IF_3
0x4002197	    0x8b9094020000	           mov edx, dword [rax + 0x294] 	      1171	diff.c	FUNCTION_21	IF_3
0x400219d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1171	diff.c	FUNCTION_21	IF_3
0x40021a1	    0x899098020000	            mov dword [rax + 0x298], edx	      1171	diff.c	FUNCTION_21	IF_3
0x40021a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1172	diff.c	FUNCTION_21
0x40021ab	    0xc78094020000	              mov dword [rax + 0x294], 0	      1172	diff.c	FUNCTION_21
0x40021b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1174	diff.c	FUNCTION_21
0x40021b9	    0x488905000000	            mov qword [0x040021c0], rax 	      1174	diff.c	FUNCTION_21
0x40021c0	    0x488b05000000	            mov rax, qword [0x040021c7] 	      1175	diff.c	FUNCTION_21
0x40021c7	        0x488b4008	                mov rax, qword [rax + 8]	      1175	diff.c	FUNCTION_21
0x40021cb	    0x488905000000	            mov qword [0x040021d2], rax 	      1175	diff.c	FUNCTION_21
0x40021d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1176	diff.c	FUNCTION_21	IF_4
0x40021d6	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1176	diff.c	FUNCTION_21	IF_4
0x40021dc	            0x85c0	                           test eax, eax	      1176	diff.c	FUNCTION_21	IF_4
0x40021de	            0x7542	                           jne 0x4002222	      1176	diff.c	FUNCTION_21	IF_4
0x40021e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x40021e4	    0x8b808c020000	           mov eax, dword [rax + 0x28c] 	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x40021ea	            0x85c0	                           test eax, eax	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x40021ec	            0x7413	                            je 0x4002201	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x40021ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x40021f2	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x40021f9	          0x4889c7	                            mov rdi, rax	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x40021fc	      0xe800000000	                          call 0x4002201	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x4002201	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x4002205	    0x488b80f80100	           mov rax, qword [rax + 0x1f8] 	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x400220c	          0x4889c7	                            mov rdi, rax	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x400220f	      0xe800000000	                          call 0x4002214	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x4002214	          0x4889c2	                            mov rdx, rax	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x4002217	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x400221b	    0x488990000200	            mov qword [rax + 0x200], rdx	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x4002222	    0x41b800000000	                              mov r8d, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x4002228	      0xb905000000	                              mov ecx, 5	      1182	diff.c	FUNCTION_21	CALL_4
0x400222d	      0xba00000000	                              mov edx, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x4002232	      0xbeffffffff	                     mov esi, 0xffffffff	      1182	diff.c	FUNCTION_21	CALL_4
0x4002237	      0xbf00000000	                              mov edi, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x400223c	      0xe800000000	                          call 0x4002241	      1182	diff.c	FUNCTION_21	CALL_4
0x4002241	        0x488b45f8	                mov rax, qword [rbp - 8]	      1184	diff.c	FUNCTION_21
0x4002245	    0x488905000000	            mov qword [0x0400224c], rax 	      1184	diff.c	FUNCTION_21
0x400224c	    0x488b05000000	            mov rax, qword [0x04002253] 	      1185	diff.c	FUNCTION_21
0x4002253	        0x488b4008	                mov rax, qword [rax + 8]	      1185	diff.c	FUNCTION_21
0x4002257	    0x488905000000	            mov qword [0x0400225e], rax 	      1185	diff.c	FUNCTION_21
0x400225e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1186	diff.c	FUNCTION_21	IF_6
0x4002262	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1186	diff.c	FUNCTION_21	IF_6
0x4002268	            0x85c0	                           test eax, eax	      1186	diff.c	FUNCTION_21	IF_6
0x400226a	            0x7542	                           jne 0x40022ae	      1186	diff.c	FUNCTION_21	IF_6
0x400226c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1188	diff.c	FUNCTION_21	IF_6
0x4002270	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      1188	diff.c	FUNCTION_21	IF_6
0x4002277	            0x89c2	                            mov edx, eax	      1188	diff.c	FUNCTION_21	IF_6
0x4002279	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1188	diff.c	FUNCTION_21	IF_6
0x400227d	    0x8990d0010000	            mov dword [rax + 0x1d0], edx	      1188	diff.c	FUNCTION_21	IF_6
0x4002283	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1189	diff.c	FUNCTION_21	IF_6
0x4002287	    0x8b90d4010000	           mov edx, dword [rax + 0x1d4] 	      1189	diff.c	FUNCTION_21	IF_6
0x400228d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1189	diff.c	FUNCTION_21	IF_6
0x4002291	    0x8990d8010000	            mov dword [rax + 0x1d8], edx	      1189	diff.c	FUNCTION_21	IF_6
0x4002297	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1190	diff.c	FUNCTION_21	IF_6
0x400229b	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1190	diff.c	FUNCTION_21	IF_6
0x40022a2	            0x89c2	                            mov edx, eax	      1190	diff.c	FUNCTION_21	IF_6
0x40022a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1190	diff.c	FUNCTION_21	IF_6
0x40022a8	    0x8990f0010000	            mov dword [rax + 0x1f0], edx	      1190	diff.c	FUNCTION_21	IF_6
0x40022ae	    0x8b0500000000	            mov eax, dword [0x040022b4] 	      1192	diff.c	FUNCTION_21
0x40022b4	          0x4863d0	                         movsxd rdx, eax	      1192	diff.c	FUNCTION_21
0x40022b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1192	diff.c	FUNCTION_21
0x40022bb	    0x488990c80100	            mov qword [rax + 0x1c8], rdx	      1192	diff.c	FUNCTION_21
0x40022c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1193	diff.c	FUNCTION_21
0x40022c6	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      1193	diff.c	FUNCTION_21
0x40022d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1194	diff.c	FUNCTION_21
0x40022d4	    0x48c780e80100	              mov qword [rax + 0x1e8], 0	      1194	diff.c	FUNCTION_21
0x40022df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	diff.c	FUNCTION_21	CALL_5
0x40022e3	          0x4889c7	                            mov rdi, rax	      1195	diff.c	FUNCTION_21	CALL_5
0x40022e6	      0xe800000000	                          call 0x40022eb	      1195	diff.c	FUNCTION_21	CALL_5
0x40022eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1197	diff.c	FUNCTION_21	CALL_6
0x40022ef	          0x4889c7	                            mov rdi, rax	      1197	diff.c	FUNCTION_21	CALL_6
0x40022f2	      0xe800000000	                          call 0x40022f7	      1197	diff.c	FUNCTION_21	CALL_6
0x40022f7	    0x488b05000000	            mov rax, qword [0x040022fe] 	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x40022fe	      0xbe68000000	                           mov esi, 0x68	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4002303	          0x4889c7	                            mov rdi, rax	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4002306	      0xe800000000	                          call 0x400230b	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x400230b	          0x4885c0	                           test rax, rax	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x400230e	            0x750a	                           jne 0x400231a	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4002310	      0xbf00000000	                              mov edi, 0	      1200	diff.c	FUNCTION_21	CALL_8
0x4002315	      0xe800000000	                          call 0x400231a	      1200	diff.c	FUNCTION_21	CALL_8
0x400231a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1202	diff.c	FUNCTION_21
0x400231e	    0xc7808c020000	              mov dword [rax + 0x28c], 1	      1202	diff.c	FUNCTION_21
0x4002328	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1204	diff.c	FUNCTION_21	CALL_9
0x400232c	      0xbe01000000	                              mov esi, 1	      1204	diff.c	FUNCTION_21	CALL_9
0x4002331	          0x4889c7	                            mov rdi, rax	      1204	diff.c	FUNCTION_21	CALL_9
0x4002334	      0xe826fdffff	                call sym.set_diff_option	      1204	diff.c	FUNCTION_21	CALL_9
0x4002339	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1206	diff.c	FUNCTION_21	IF_8
0x400233d	            0x7410	                            je 0x400234f	      1206	diff.c	FUNCTION_21	IF_8
0x400233f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1207	diff.c	FUNCTION_21	CALL_10
0x4002343	        0x488b4008	                mov rax, qword [rax + 8]	      1207	diff.c	FUNCTION_21	CALL_10
0x4002347	          0x4889c7	                            mov rdi, rax	      1207	diff.c	FUNCTION_21	CALL_10
0x400234a	      0xe800000000	                          call 0x400234f	      1207	diff.c	FUNCTION_21	CALL_10
0x400234f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1208	diff.c	FUNCTION_21	CALL_11
0x4002353	      0xbe28000000	                           mov esi, 0x28	      1208	diff.c	FUNCTION_21	CALL_11
0x4002358	          0x4889c7	                            mov rdi, rax	      1208	diff.c	FUNCTION_21	CALL_11
0x400235b	      0xe800000000	                          call 0x4002360	      1208	diff.c	FUNCTION_21	CALL_11
0x4002360	              0x90	                                     nop	      1209	diff.c	FUNCTION_21
0x4002361	              0xc9	                                   leave	      1209	diff.c	FUNCTION_21
0x4002362	              0xc3	                                     ret	      1209	diff.c	FUNCTION_21
diff_buf_idx	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,1:CALL,0:DO,0:FOR,1	20
0x400029a	              0x55	                                push rbp	       165	diff.c	FUNCTION_5
0x400029b	          0x4889e5	                            mov rbp, rsp	       165	diff.c	FUNCTION_5
0x400029e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       165	diff.c	FUNCTION_5
0x40002a2	    0xc745fc000000	                  mov dword [rbp - 4], 0	       168	diff.c	FUNCTION_5	FOR_1
0x40002a9	            0xeb1f	                           jmp 0x40002ca	       168	diff.c	FUNCTION_5	FOR_1
0x40002ab	    0x488b05000000	            mov rax, qword [0x040002b2] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40002b2	          0x8b55fc	                mov edx, dword [rbp - 4]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40002b5	          0x4863d2	                         movsxd rdx, edx	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40002b8	        0x4883c20c	                            add rdx, 0xc	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40002bc	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40002c0	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40002c4	            0x740c	                            je 0x40002d2	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40002c6	        0x8345fc01	                  add dword [rbp - 4], 1	       168	diff.c	FUNCTION_5	FOR_1
0x40002ca	        0x837dfc07	                  cmp dword [rbp - 4], 7	       168	diff.c	FUNCTION_5	FOR_1
0x40002ce	            0x7edb	                           jle 0x40002ab	       168	diff.c	FUNCTION_5	FOR_1
0x40002d0	            0xeb01	                           jmp 0x40002d3	       168	diff.c	FUNCTION_5	FOR_1
0x40002d2	              0x90	                                     nop	       170	diff.c	FUNCTION_5	FOR_1	IF_1
0x40002d3	          0x8b45fc	                mov eax, dword [rbp - 4]	       171	diff.c	FUNCTION_5
0x40002d6	              0x5d	                                 pop rbp	       172	diff.c	FUNCTION_5
0x40002d7	              0xc3	                                     ret	       172	diff.c	FUNCTION_5
diffopt_horizontal	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,0:CALL,0:DO,0:FOR,0	9
0x4003eeb	              0x55	                                push rbp	      1941	diff.c	FUNCTION_33
0x4003eec	          0x4889e5	                            mov rbp, rsp	      1941	diff.c	FUNCTION_33
0x4003eef	    0x8b0500000000	            mov eax, dword [0x04003ef5] 	      1942	diff.c	FUNCTION_33
0x4003ef5	          0x83e008	                              and eax, 8	      1942	diff.c	FUNCTION_33
0x4003ef8	            0x85c0	                           test eax, eax	      1942	diff.c	FUNCTION_33
0x4003efa	           0xf95c0	                                setne al	      1942	diff.c	FUNCTION_33
0x4003efd	           0xfb6c0	                           movzx eax, al	      1942	diff.c	FUNCTION_33
0x4003f00	              0x5d	                                 pop rbp	      1943	diff.c	FUNCTION_33
0x4003f01	              0xc3	                                     ret	      1943	diff.c	FUNCTION_33
diff_fold_update	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,1:CALL,2:DO,0:FOR,1	52
0x40053eb	              0x55	                                push rbp	      2489	diff.c	FUNCTION_39
0x40053ec	          0x4889e5	                            mov rbp, rsp	      2489	diff.c	FUNCTION_39
0x40053ef	        0x4883ec20	                           sub rsp, 0x20	      2489	diff.c	FUNCTION_39
0x40053f3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2489	diff.c	FUNCTION_39
0x40053f7	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2489	diff.c	FUNCTION_39
0x40053fa	    0x488b05000000	            mov rax, qword [0x04005401] 	      2493	diff.c	FUNCTION_39	CALL_1
0x4005401	        0x488945f8	                mov qword [rbp - 8], rax	      2493	diff.c	FUNCTION_39	CALL_1
0x4005405	      0xe990000000	                           jmp 0x400549a	      2493	diff.c	FUNCTION_39	CALL_1
0x400540a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2494	diff.c	FUNCTION_39	FOR_1
0x4005411	            0xeb75	                           jmp 0x4005488	      2494	diff.c	FUNCTION_39	FOR_1
0x4005413	    0x488b05000000	            mov rax, qword [0x0400541a] 	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x400541a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x400541d	          0x4863d2	                         movsxd rdx, edx	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005420	        0x4883c20c	                            add rdx, 0xc	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005424	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005428	        0x488b45f8	                mov rax, qword [rbp - 8]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x400542c	        0x488b4008	                mov rax, qword [rax + 8]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005430	          0x4839c2	                            cmp rdx, rax	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005433	            0x754f	                           jne 0x4005484	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005435	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005438	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x400543b	            0x7447	                            je 0x4005484	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x400543d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005441	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005444	          0x4863d2	                         movsxd rdx, edx	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005447	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x400544c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005450	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005453	          0x4863c9	                         movsxd rcx, ecx	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x4005456	        0x4883c108	                              add rcx, 8	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x400545a	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x400545f	        0x488d3402	                    lea rsi, [rdx + rax]	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4005463	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4005467	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x400546a	          0x4863d2	                         movsxd rdx, edx	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x400546d	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4005472	        0x488b45f8	                mov rax, qword [rbp - 8]	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4005476	          0x4889f2	                            mov rdx, rsi	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4005479	          0x4889ce	                            mov rsi, rcx	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x400547c	          0x4889c7	                            mov rdi, rax	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x400547f	      0xe800000000	                          call 0x4005484	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4005484	        0x8345f401	                add dword [rbp - 0xc], 1	      2494	diff.c	FUNCTION_39	FOR_1
0x4005488	        0x837df407	                cmp dword [rbp - 0xc], 7	      2494	diff.c	FUNCTION_39	FOR_1
0x400548c	            0x7e85	                           jle 0x4005413	      2494	diff.c	FUNCTION_39	FOR_1
0x400548e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2493	diff.c	FUNCTION_39	CALL_1
0x4005492	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2493	diff.c	FUNCTION_39	CALL_1
0x4005496	        0x488945f8	                mov qword [rbp - 8], rax	      2493	diff.c	FUNCTION_39	CALL_1
0x400549a	      0x48837df800	                  cmp qword [rbp - 8], 0	      2493	diff.c	FUNCTION_39	CALL_1
0x400549f	     0xf8565ffffff	                           jne 0x400540a	      2493	diff.c	FUNCTION_39	CALL_1
0x40054a5	              0x90	                                     nop	      2498	diff.c	FUNCTION_39
0x40054a6	              0xc9	                                   leave	      2498	diff.c	FUNCTION_39
0x40054a7	              0xc3	                                     ret	      2498	diff.c	FUNCTION_39
diff_set_topline	WHILE,0:SWITCH,0:ELSE,5:functions,0:IF,16:CALL,7:DO,0:FOR,2	310
0x4003771	              0x55	                                push rbp	      1738	diff.c	FUNCTION_31
0x4003772	          0x4889e5	                            mov rbp, rsp	      1738	diff.c	FUNCTION_31
0x4003775	        0x4883ec40	                           sub rsp, 0x40	      1738	diff.c	FUNCTION_31
0x4003779	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1738	diff.c	FUNCTION_31
0x400377d	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1738	diff.c	FUNCTION_31
0x4003781	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1739	diff.c	FUNCTION_31
0x4003785	        0x488b4008	                mov rax, qword [rax + 8]	      1739	diff.c	FUNCTION_31
0x4003789	        0x488945f0	             mov qword [rbp - 0x10], rax	      1739	diff.c	FUNCTION_31
0x400378d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1740	diff.c	FUNCTION_31
0x4003791	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1740	diff.c	FUNCTION_31
0x4003795	        0x488945f8	                mov qword [rbp - 8], rax	      1740	diff.c	FUNCTION_31
0x4003799	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1747	diff.c	FUNCTION_31	CALL_1
0x400379d	          0x4889c7	                            mov rdi, rax	      1747	diff.c	FUNCTION_31	CALL_1
0x40037a0	      0xe8f5caffff	                   call sym.diff_buf_idx	      1747	diff.c	FUNCTION_31	CALL_1
0x40037a5	          0x8945e0	             mov dword [rbp - 0x20], eax	      1747	diff.c	FUNCTION_31	CALL_1
0x40037a8	        0x837de008	               cmp dword [rbp - 0x20], 8	      1748	diff.c	FUNCTION_31	IF_1
0x40037ac	     0xf8460040000	                            je 0x4003c12	      1748	diff.c	FUNCTION_31	IF_1
0x40037b2	    0x488b05000000	            mov rax, qword [0x040037b9] 	      1751	diff.c	FUNCTION_31	IF_2
0x40037b9	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1751	diff.c	FUNCTION_31	IF_2
0x40037bf	            0x85c0	                           test eax, eax	      1751	diff.c	FUNCTION_31	IF_2
0x40037c1	            0x740a	                            je 0x40037cd	      1751	diff.c	FUNCTION_31	IF_2
0x40037c3	      0xbf00000000	                              mov edi, 0	      1752	diff.c	FUNCTION_31	CALL_2
0x40037c8	      0xe800000000	                          call 0x40037cd	      1752	diff.c	FUNCTION_31	CALL_2
0x40037cd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1754	diff.c	FUNCTION_31
0x40037d1	    0xc78084000000	               mov dword [rax + 0x84], 0	      1754	diff.c	FUNCTION_31
0x40037db	    0x488b05000000	            mov rax, qword [0x040037e2] 	      1757	diff.c	FUNCTION_31	FOR_1
0x40037e2	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1757	diff.c	FUNCTION_31	FOR_1
0x40037e6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1757	diff.c	FUNCTION_31	FOR_1
0x40037ea	            0xeb36	                           jmp 0x4003822	      1757	diff.c	FUNCTION_31	FOR_1
0x40037ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40037f0	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40037f3	          0x4863d2	                         movsxd rdx, edx	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40037f6	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40037fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40037ff	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x4003802	          0x4863c9	                         movsxd rcx, ecx	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x4003805	        0x4883c108	                              add rcx, 8	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x4003809	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x400380e	          0x4801d0	                            add rax, rdx	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x4003811	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x4003815	            0x7d14	                           jge 0x400382b	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x4003817	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1757	diff.c	FUNCTION_31	FOR_1
0x400381b	          0x488b00	                    mov rax, qword [rax]	      1757	diff.c	FUNCTION_31	FOR_1
0x400381e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1757	diff.c	FUNCTION_31	FOR_1
0x4003822	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1757	diff.c	FUNCTION_31	FOR_1
0x4003827	            0x75c3	                           jne 0x40037ec	      1757	diff.c	FUNCTION_31	FOR_1
0x4003829	            0xeb01	                           jmp 0x400382c	      1757	diff.c	FUNCTION_31	FOR_1
0x400382b	              0x90	                                     nop	      1759	diff.c	FUNCTION_31	FOR_1	IF_3
0x400382c	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1760	diff.c	FUNCTION_31	IF_4
0x4003831	            0x7526	                           jne 0x4003859	      1760	diff.c	FUNCTION_31	IF_4
0x4003833	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1764	diff.c	FUNCTION_31	IF_4
0x4003837	        0x488b4008	                mov rax, qword [rax + 8]	      1764	diff.c	FUNCTION_31	IF_4
0x400383b	          0x488b10	                    mov rdx, qword [rax]	      1764	diff.c	FUNCTION_31	IF_4
0x400383e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1765	diff.c	FUNCTION_31	IF_4
0x4003842	          0x488b00	                    mov rax, qword [rax]	      1765	diff.c	FUNCTION_31	IF_4
0x4003845	        0x482b45f8	                sub rax, qword [rbp - 8]	      1765	diff.c	FUNCTION_31	IF_4
0x4003849	          0x4829c2	                            sub rdx, rax	      1765	diff.c	FUNCTION_31	IF_4
0x400384c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1764	diff.c	FUNCTION_31	IF_4
0x4003850	        0x48895078	             mov qword [rax + 0x78], rdx	      1764	diff.c	FUNCTION_31	IF_4
0x4003854	      0xe9f3020000	                           jmp 0x4003b4c	      1764	diff.c	FUNCTION_31	IF_4
0x4003859	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x400385d	        0x488b4008	                mov rax, qword [rax + 8]	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x4003861	          0x4889c7	                            mov rdi, rax	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x4003864	      0xe831caffff	                   call sym.diff_buf_idx	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x4003869	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x400386c	        0x837de408	               cmp dword [rbp - 0x1c], 8	      1771	diff.c	FUNCTION_31	ELSE_1	IF_5
0x4003870	     0xf849f030000	                            je 0x4003c15	      1771	diff.c	FUNCTION_31	ELSE_1	IF_5
0x4003876	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1774	diff.c	FUNCTION_31	ELSE_1
0x400387a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1774	diff.c	FUNCTION_31	ELSE_1
0x400387d	          0x4863d2	                         movsxd rdx, edx	      1774	diff.c	FUNCTION_31	ELSE_1
0x4003880	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      1774	diff.c	FUNCTION_31	ELSE_1
0x4003885	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1774	diff.c	FUNCTION_31	ELSE_1
0x4003889	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1774	diff.c	FUNCTION_31	ELSE_1
0x400388c	          0x4863d2	                         movsxd rdx, edx	      1774	diff.c	FUNCTION_31	ELSE_1
0x400388f	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1774	diff.c	FUNCTION_31	ELSE_1
0x4003894	          0x4829c1	                            sub rcx, rax	      1774	diff.c	FUNCTION_31	ELSE_1
0x4003897	          0x4889ca	                            mov rdx, rcx	      1774	diff.c	FUNCTION_31	ELSE_1
0x400389a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1774	diff.c	FUNCTION_31	ELSE_1
0x400389e	          0x4801c2	                            add rdx, rax	      1774	diff.c	FUNCTION_31	ELSE_1
0x40038a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1774	diff.c	FUNCTION_31	ELSE_1
0x40038a5	        0x48895078	             mov qword [rax + 0x78], rdx	      1774	diff.c	FUNCTION_31	ELSE_1
0x40038a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40038ad	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40038b0	          0x4863d2	                         movsxd rdx, edx	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40038b3	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40038b8	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40038bc	     0xf8f8a020000	                            jg 0x4003b4c	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40038c2	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1779	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40038c9	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x40038d0	            0xeb52	                           jmp 0x4003924	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x40038d2	    0x488b05000000	            mov rax, qword [0x040038d9] 	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038d9	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038dc	          0x4863d2	                         movsxd rdx, edx	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038df	        0x4883c20c	                            add rdx, 0xc	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038e3	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038e7	          0x4885c0	                           test rax, rax	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038ea	            0x7434	                            je 0x4003920	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038ec	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038ef	          0x4863d0	                         movsxd rdx, eax	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038f6	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038f9	          0x4863c9	                         movsxd rcx, ecx	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40038fc	        0x4883c108	                              add rcx, 8	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4003900	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4003905	          0x4839c2	                            cmp rdx, rax	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4003908	            0x7d16	                           jge 0x4003920	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400390a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400390e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4003911	          0x4863d2	                         movsxd rdx, edx	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4003914	        0x4883c208	                              add rdx, 8	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4003918	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400391d	          0x8945d8	             mov dword [rbp - 0x28], eax	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4003920	        0x8345dc01	               add dword [rbp - 0x24], 1	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x4003924	        0x837ddc07	               cmp dword [rbp - 0x24], 7	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x4003928	            0x7ea8	                           jle 0x40038d2	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x400392a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x400392e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003931	          0x4863d2	                         movsxd rdx, edx	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003934	        0x4883c208	                              add rdx, 8	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003938	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x400393d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003941	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003944	          0x4863c9	                         movsxd rcx, ecx	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003947	        0x4883c108	                              add rcx, 8	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x400394b	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003950	          0x4839c2	                            cmp rdx, rax	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003953	            0x7519	                           jne 0x400396e	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003955	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003959	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x400395f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003963	    0x899084000000	             mov dword [rax + 0x84], edx	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4003969	      0xe9de010000	                           jmp 0x4003b4c	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x400396e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x4003972	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x4003975	          0x4863d2	                         movsxd rdx, edx	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x4003978	        0x4883c208	                              add rdx, 8	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x400397c	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x4003981	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x4003985	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x4003988	          0x4863c9	                         movsxd rcx, ecx	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x400398b	        0x4883c108	                              add rcx, 8	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x400398f	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x4003994	          0x4839c2	                            cmp rdx, rax	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x4003997	     0xf8ed4000000	                           jle 0x4003a71	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x400399d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039a1	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039a4	          0x4863d2	                         movsxd rdx, edx	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039a7	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039b0	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039b3	          0x4863c9	                         movsxd rcx, ecx	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039b6	        0x4883c108	                              add rcx, 8	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039ba	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039bf	          0x4801d0	                            add rax, rdx	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039c2	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039c6	     0xf8580010000	                           jne 0x4003b4c	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40039cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039d0	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039d6	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039d9	            0x29c2	                            sub edx, eax	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039db	            0x89d0	                            mov eax, edx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039dd	          0x4863d0	                         movsxd rdx, eax	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039e4	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039e7	          0x4863c9	                         movsxd rcx, ecx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039ea	        0x4883c108	                              add rcx, 8	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039ee	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039f3	          0x4839c2	                            cmp rdx, rax	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039f6	            0x7c46	                            jl 0x4003a3e	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039fc	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40039ff	          0x4863d2	                         movsxd rdx, edx	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a02	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a0b	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a0e	          0x4863c9	                         movsxd rcx, ecx	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a11	        0x4883c108	                              add rcx, 8	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a15	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a1a	          0x4801c2	                            add rdx, rax	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a1d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a21	        0x48895078	             mov qword [rax + 0x78], rdx	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a25	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a29	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a2f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a33	    0x899084000000	             mov dword [rax + 0x84], edx	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a39	      0xe90e010000	                           jmp 0x4003b4c	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4003a3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a42	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a45	          0x4863d2	                         movsxd rdx, edx	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a48	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a4d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a50	            0x4898	                                    cdqe	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a52	          0x4801c2	                            add rdx, rax	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a55	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a59	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a5f	            0x4898	                                    cdqe	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a61	          0x4829c2	                            sub rdx, rax	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a64	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a68	        0x48895078	             mov qword [rax + 0x78], rdx	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a6c	      0xe9db000000	                           jmp 0x4003b4c	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4003a71	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a75	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a79	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a7d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a80	          0x4863d2	                         movsxd rdx, edx	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a83	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a8c	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a8f	          0x4863f6	                         movsxd rsi, esi	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a92	        0x4883c608	                              add rsi, 8	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a96	      0x488b44f008	       mov rax, qword [rax + rsi*8 + 8] 	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a9b	          0x4801d0	                            add rax, rdx	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003a9e	          0x4839c1	                            cmp rcx, rax	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003aa1	     0xf8ca5000000	                            jl 0x4003b4c	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003aa7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003aab	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003aae	          0x4863d2	                         movsxd rdx, edx	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003ab1	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003ab6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003aba	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003abd	          0x4863c9	                         movsxd rcx, ecx	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003ac0	        0x4883c108	                              add rcx, 8	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003ac4	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003ac9	          0x4801c2	                            add rdx, rax	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003acc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003ad0	        0x48895078	             mov qword [rax + 0x78], rdx	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4003ad4	    0x8b0500000000	            mov eax, dword [0x04003ada] 	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x4003ada	          0x83e001	                              and eax, 1	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x4003add	            0x85c0	                           test eax, eax	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x4003adf	            0x746b	                            je 0x4003b4c	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x4003ae1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003ae5	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003ae8	          0x4863d2	                         movsxd rdx, edx	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003aeb	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003af0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003af4	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003af7	          0x4863c9	                         movsxd rcx, ecx	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003afa	        0x4883c108	                              add rcx, 8	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003afe	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003b03	          0x4801d0	                            add rax, rdx	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003b06	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003b0a	            0x7516	                           jne 0x4003b22	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003b0c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003b10	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003b16	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003b1a	    0x899084000000	             mov dword [rax + 0x84], edx	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003b20	            0xeb2a	                           jmp 0x4003b4c	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4003b22	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b26	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b29	          0x4863d2	                         movsxd rdx, edx	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b2c	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b31	            0x89c2	                            mov edx, eax	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b33	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b36	             0x1c2	                            add edx, eax	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b38	        0x488b45f8	                mov rax, qword [rbp - 8]	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b3c	            0x29c2	                            sub edx, eax	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b3e	            0x89d0	                            mov eax, edx	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b40	            0x89c2	                            mov edx, eax	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b42	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b46	    0x899084000000	             mov dword [rax + 0x84], edx	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4003b4c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1830	diff.c	FUNCTION_31	ELSE_5
0x4003b50	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      1830	diff.c	FUNCTION_31	ELSE_5
0x4003b5a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b5e	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b62	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b66	        0x488b4008	                mov rax, qword [rax + 8]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b6a	          0x488b00	                    mov rax, qword [rax]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b6d	          0x4839c2	                            cmp rdx, rax	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b70	            0x7e21	                           jle 0x4003b93	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b72	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b76	        0x488b4008	                mov rax, qword [rax + 8]	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b7a	          0x488b10	                    mov rdx, qword [rax]	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b7d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b81	        0x48895078	             mov qword [rax + 0x78], rdx	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b85	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1834	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b89	    0xc7808c000000	               mov dword [rax + 0x8c], 1	      1834	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4003b93	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1836	diff.c	FUNCTION_31	IF_16
0x4003b97	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1836	diff.c	FUNCTION_31	IF_16
0x4003b9b	          0x4885c0	                           test rax, rax	      1836	diff.c	FUNCTION_31	IF_16
0x4003b9e	            0x7f1a	                            jg 0x4003bba	      1836	diff.c	FUNCTION_31	IF_16
0x4003ba0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1838	diff.c	FUNCTION_31	IF_16
0x4003ba4	    0x48c740780100	               mov qword [rax + 0x78], 1	      1838	diff.c	FUNCTION_31	IF_16
0x4003bac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1839	diff.c	FUNCTION_31	IF_16
0x4003bb0	    0xc78084000000	               mov dword [rax + 0x84], 0	      1839	diff.c	FUNCTION_31	IF_16
0x4003bba	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1843	diff.c	FUNCTION_31	CALL_4
0x4003bbe	          0x4889c7	                            mov rdi, rax	      1843	diff.c	FUNCTION_31	CALL_4
0x4003bc1	      0xe800000000	                          call 0x4003bc6	      1843	diff.c	FUNCTION_31	CALL_4
0x4003bc6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1844	diff.c	FUNCTION_31	CALL_5
0x4003bca	          0x4889c7	                            mov rdi, rax	      1844	diff.c	FUNCTION_31	CALL_5
0x4003bcd	      0xe800000000	                          call 0x4003bd2	      1844	diff.c	FUNCTION_31	CALL_5
0x4003bd2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1846	diff.c	FUNCTION_31	CALL_6
0x4003bd6	      0xbe00000000	                              mov esi, 0	      1846	diff.c	FUNCTION_31	CALL_6
0x4003bdb	          0x4889c7	                            mov rdi, rax	      1846	diff.c	FUNCTION_31	CALL_6
0x4003bde	      0xe800000000	                          call 0x4003be3	      1846	diff.c	FUNCTION_31	CALL_6
0x4003be3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1848	diff.c	FUNCTION_31	CALL_7
0x4003be7	        0x488d5078	                   lea rdx, [rax + 0x78]	      1848	diff.c	FUNCTION_31	CALL_7
0x4003beb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1848	diff.c	FUNCTION_31	CALL_7
0x4003bef	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      1848	diff.c	FUNCTION_31	CALL_7
0x4003bf3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1848	diff.c	FUNCTION_31	CALL_7
0x4003bf7	    0x41b900000000	                              mov r9d, 0	      1848	diff.c	FUNCTION_31	CALL_7
0x4003bfd	    0x41b801000000	                              mov r8d, 1	      1848	diff.c	FUNCTION_31	CALL_7
0x4003c03	      0xb900000000	                              mov ecx, 0	      1848	diff.c	FUNCTION_31	CALL_7
0x4003c08	          0x4889c7	                            mov rdi, rax	      1848	diff.c	FUNCTION_31	CALL_7
0x4003c0b	      0xe800000000	                          call 0x4003c10	      1848	diff.c	FUNCTION_31	CALL_7
0x4003c10	            0xeb04	                           jmp 0x4003c16	      1848	diff.c	FUNCTION_31	CALL_7
0x4003c12	              0x90	                                     nop	      1749	diff.c	FUNCTION_31	IF_1
0x4003c13	            0xeb01	                           jmp 0x4003c16	      1749	diff.c	FUNCTION_31	IF_1
0x4003c15	              0x90	                                     nop	      1772	diff.c	FUNCTION_31	ELSE_1	IF_5
0x4003c16	              0xc9	                                   leave	      1851	diff.c	FUNCTION_31
0x4003c17	              0xc3	                                     ret	      1851	diff.c	FUNCTION_31
diff_equal_entry	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,4:CALL,6:DO,0:FOR,1	96
0x400331c	              0x55	                                push rbp	      1615	diff.c	FUNCTION_27
0x400331d	          0x4889e5	                            mov rbp, rsp	      1615	diff.c	FUNCTION_27
0x4003320	        0x4883ec20	                           sub rsp, 0x20	      1615	diff.c	FUNCTION_27
0x4003324	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1615	diff.c	FUNCTION_27
0x4003328	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1615	diff.c	FUNCTION_27
0x400332b	          0x8955e0	             mov dword [rbp - 0x20], edx	      1615	diff.c	FUNCTION_27
0x400332e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1620	diff.c	FUNCTION_27	IF_1
0x4003332	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1620	diff.c	FUNCTION_27	IF_1
0x4003335	          0x4863d2	                         movsxd rdx, edx	      1620	diff.c	FUNCTION_27	IF_1
0x4003338	        0x4883c208	                              add rdx, 8	      1620	diff.c	FUNCTION_27	IF_1
0x400333c	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1620	diff.c	FUNCTION_27	IF_1
0x4003341	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1620	diff.c	FUNCTION_27	IF_1
0x4003345	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1620	diff.c	FUNCTION_27	IF_1
0x4003348	          0x4863c9	                         movsxd rcx, ecx	      1620	diff.c	FUNCTION_27	IF_1
0x400334b	        0x4883c108	                              add rcx, 8	      1620	diff.c	FUNCTION_27	IF_1
0x400334f	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1620	diff.c	FUNCTION_27	IF_1
0x4003354	          0x4839c2	                            cmp rdx, rax	      1620	diff.c	FUNCTION_27	IF_1
0x4003357	            0x740a	                            je 0x4003363	      1620	diff.c	FUNCTION_27	IF_1
0x4003359	      0xb800000000	                              mov eax, 0	      1621	diff.c	FUNCTION_27	IF_1
0x400335e	      0xe920010000	                           jmp 0x4003483	      1621	diff.c	FUNCTION_27	IF_1
0x4003363	    0x488b05000000	            mov rax, qword [0x0400336a] 	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x400336a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x400336e	          0x4889d6	                            mov rsi, rdx	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x4003371	          0x4889c7	                            mov rdi, rax	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x4003374	      0xe8e9dbffff	              call sym.diff_check_sanity	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x4003379	            0x85c0	                           test eax, eax	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x400337b	            0x750a	                           jne 0x4003387	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x400337d	      0xb800000000	                              mov eax, 0	      1623	diff.c	FUNCTION_27	IF_2
0x4003382	      0xe9fc000000	                           jmp 0x4003483	      1623	diff.c	FUNCTION_27	IF_2
0x4003387	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1624	diff.c	FUNCTION_27	FOR_1
0x400338e	      0xe9c9000000	                           jmp 0x400345c	      1624	diff.c	FUNCTION_27	FOR_1
0x4003393	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1627	diff.c	FUNCTION_27	FOR_1
0x4003397	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1627	diff.c	FUNCTION_27	FOR_1
0x400339a	          0x4863d2	                         movsxd rdx, edx	      1627	diff.c	FUNCTION_27	FOR_1
0x400339d	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1627	diff.c	FUNCTION_27	FOR_1
0x40033a2	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033a5	            0x4898	                                    cdqe	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033a7	        0x488d0c02	                    lea rcx, [rdx + rax]	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033ab	    0x488b05000000	            mov rax, qword [0x040033b2] 	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033b2	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033b5	          0x4863d2	                         movsxd rdx, edx	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033b8	        0x4883c20c	                            add rdx, 0xc	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033bc	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033c0	      0xba00000000	                              mov edx, 0	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033c5	          0x4889ce	                            mov rsi, rcx	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033c8	          0x4889c7	                            mov rdi, rax	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033cb	      0xe800000000	                          call 0x40033d0	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033d0	          0x4889c7	                            mov rdi, rax	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033d3	      0xe800000000	                          call 0x40033d8	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033d8	        0x488945f8	                mov qword [rbp - 8], rax	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40033dc	      0x48837df800	                  cmp qword [rbp - 8], 0	      1628	diff.c	FUNCTION_27	FOR_1	IF_3
0x40033e1	            0x750a	                           jne 0x40033ed	      1628	diff.c	FUNCTION_27	FOR_1	IF_3
0x40033e3	      0xb800000000	                              mov eax, 0	      1629	diff.c	FUNCTION_27	FOR_1	IF_3
0x40033e8	      0xe996000000	                           jmp 0x4003483	      1629	diff.c	FUNCTION_27	FOR_1	IF_3
0x40033ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1631	diff.c	FUNCTION_27	FOR_1
0x40033f1	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1631	diff.c	FUNCTION_27	FOR_1
0x40033f4	          0x4863d2	                         movsxd rdx, edx	      1631	diff.c	FUNCTION_27	FOR_1
0x40033f7	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1631	diff.c	FUNCTION_27	FOR_1
0x40033fc	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x40033ff	            0x4898	                                    cdqe	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4003401	        0x488d0c02	                    lea rcx, [rdx + rax]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4003405	    0x488b05000000	            mov rax, qword [0x0400340c] 	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400340c	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400340f	          0x4863d2	                         movsxd rdx, edx	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4003412	        0x4883c20c	                            add rdx, 0xc	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4003416	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400341a	      0xba00000000	                              mov edx, 0	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400341f	          0x4889ce	                            mov rsi, rcx	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4003422	          0x4889c7	                            mov rdi, rax	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4003425	      0xe800000000	                          call 0x400342a	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400342a	          0x4889c2	                            mov rdx, rax	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400342d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4003431	          0x4889d6	                            mov rsi, rdx	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4003434	          0x4889c7	                            mov rdi, rax	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4003437	      0xe86c010000	                       call sym.diff_cmp	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400343c	          0x8945f4	              mov dword [rbp - 0xc], eax	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400343f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1632	diff.c	FUNCTION_27	FOR_1	CALL_6
0x4003443	          0x4889c7	                            mov rdi, rax	      1632	diff.c	FUNCTION_27	FOR_1	CALL_6
0x4003446	      0xe800000000	                          call 0x400344b	      1632	diff.c	FUNCTION_27	FOR_1	CALL_6
0x400344b	        0x837df400	                cmp dword [rbp - 0xc], 0	      1633	diff.c	FUNCTION_27	FOR_1	IF_4
0x400344f	            0x7407	                            je 0x4003458	      1633	diff.c	FUNCTION_27	FOR_1	IF_4
0x4003451	      0xb800000000	                              mov eax, 0	      1634	diff.c	FUNCTION_27	FOR_1	IF_4
0x4003456	            0xeb2b	                           jmp 0x4003483	      1634	diff.c	FUNCTION_27	FOR_1	IF_4
0x4003458	        0x8345f001	               add dword [rbp - 0x10], 1	      1624	diff.c	FUNCTION_27	FOR_1
0x400345c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1624	diff.c	FUNCTION_27	FOR_1
0x400345f	          0x4863d0	                         movsxd rdx, eax	      1624	diff.c	FUNCTION_27	FOR_1
0x4003462	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1624	diff.c	FUNCTION_27	FOR_1
0x4003466	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1624	diff.c	FUNCTION_27	FOR_1
0x4003469	          0x4863c9	                         movsxd rcx, ecx	      1624	diff.c	FUNCTION_27	FOR_1
0x400346c	        0x4883c108	                              add rcx, 8	      1624	diff.c	FUNCTION_27	FOR_1
0x4003470	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1624	diff.c	FUNCTION_27	FOR_1
0x4003475	          0x4839c2	                            cmp rdx, rax	      1624	diff.c	FUNCTION_27	FOR_1
0x4003478	     0xf8c15ffffff	                            jl 0x4003393	      1624	diff.c	FUNCTION_27	FOR_1
0x400347e	      0xb801000000	                              mov eax, 1	      1636	diff.c	FUNCTION_27
0x4003483	              0xc9	                                   leave	      1637	diff.c	FUNCTION_27
0x4003484	              0xc3	                                     ret	      1637	diff.c	FUNCTION_27
diff_clear	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,0:CALL,1:DO,0:FOR,1	23
0x4002f83	              0x55	                                push rbp	      1500	diff.c	FUNCTION_25
0x4002f84	          0x4889e5	                            mov rbp, rsp	      1500	diff.c	FUNCTION_25
0x4002f87	        0x4883ec20	                           sub rsp, 0x20	      1500	diff.c	FUNCTION_25
0x4002f8b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1500	diff.c	FUNCTION_25
0x4002f8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1503	diff.c	FUNCTION_25	FOR_1
0x4002f93	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1503	diff.c	FUNCTION_25	FOR_1
0x4002f97	        0x488945f0	             mov qword [rbp - 0x10], rax	      1503	diff.c	FUNCTION_25	FOR_1
0x4002f9b	            0xeb1f	                           jmp 0x4002fbc	      1503	diff.c	FUNCTION_25	FOR_1
0x4002f9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1505	diff.c	FUNCTION_25	FOR_1
0x4002fa1	          0x488b00	                    mov rax, qword [rax]	      1505	diff.c	FUNCTION_25	FOR_1
0x4002fa4	        0x488945f8	                mov qword [rbp - 8], rax	      1505	diff.c	FUNCTION_25	FOR_1
0x4002fa8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1506	diff.c	FUNCTION_25	FOR_1	CALL_1
0x4002fac	          0x4889c7	                            mov rdi, rax	      1506	diff.c	FUNCTION_25	FOR_1	CALL_1
0x4002faf	      0xe800000000	                          call 0x4002fb4	      1506	diff.c	FUNCTION_25	FOR_1	CALL_1
0x4002fb4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1503	diff.c	FUNCTION_25	FOR_1
0x4002fb8	        0x488945f0	             mov qword [rbp - 0x10], rax	      1503	diff.c	FUNCTION_25	FOR_1
0x4002fbc	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1503	diff.c	FUNCTION_25	FOR_1
0x4002fc1	            0x75da	                           jne 0x4002f9d	      1503	diff.c	FUNCTION_25	FOR_1
0x4002fc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1508	diff.c	FUNCTION_25
0x4002fc7	    0x48c740580000	               mov qword [rax + 0x58], 0	      1508	diff.c	FUNCTION_25
0x4002fcf	              0x90	                                     nop	      1509	diff.c	FUNCTION_25
0x4002fd0	              0xc9	                                   leave	      1509	diff.c	FUNCTION_25
0x4002fd1	              0xc3	                                     ret	      1509	diff.c	FUNCTION_25
diffopt_changed	WHILE,1:SWITCH,0:ELSE,7:functions,0:IF,12:CALL,15:DO,0:FOR,0	189
0x4003c18	              0x55	                                push rbp	      1858	diff.c	FUNCTION_32
0x4003c19	          0x4889e5	                            mov rbp, rsp	      1858	diff.c	FUNCTION_32
0x4003c1c	        0x4883ec30	                           sub rsp, 0x30	      1858	diff.c	FUNCTION_32
0x4003c20	    0x64488b042528	                mov rax, qword fs:[0x28]	      1858	diff.c	FUNCTION_32
0x4003c29	        0x488945f8	                mov qword [rbp - 8], rax	      1858	diff.c	FUNCTION_32
0x4003c2d	            0x31c0	                            xor eax, eax	      1858	diff.c	FUNCTION_32
0x4003c2f	    0xc745dc060000	               mov dword [rbp - 0x24], 6	      1860	diff.c	FUNCTION_32
0x4003c36	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1861	diff.c	FUNCTION_32
0x4003c3d	    0xc745e4020000	               mov dword [rbp - 0x1c], 2	      1862	diff.c	FUNCTION_32
0x4003c44	    0x488b05000000	            mov rax, qword [0x04003c4b] 	      1865	diff.c	FUNCTION_32
0x4003c4b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1865	diff.c	FUNCTION_32
0x4003c4f	      0xe9e6010000	                           jmp 0x4003e3a	      1866	diff.c	FUNCTION_32	WHILE_1
0x4003c54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4003c58	      0xba06000000	                              mov edx, 6	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4003c5d	      0xbe00000000	                              mov esi, 0	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4003c62	          0x4889c7	                            mov rdi, rax	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4003c65	      0xe800000000	                          call 0x4003c6a	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4003c6a	            0x85c0	                           test eax, eax	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4003c6c	            0x7515	                           jne 0x4003c83	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4003c6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4003c72	        0x4883c006	                              add rax, 6	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4003c76	        0x488945e8	             mov qword [rbp - 0x18], rax	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4003c7a	        0x834de001	                or dword [rbp - 0x20], 1	      1871	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4003c7e	      0xe980010000	                           jmp 0x4003e03	      1871	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4003c83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003c87	      0xba08000000	                              mov edx, 8	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003c8c	      0xbe00000000	                              mov esi, 0	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003c91	          0x4889c7	                            mov rdi, rax	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003c94	      0xe800000000	                          call 0x4003c99	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003c99	            0x85c0	                           test eax, eax	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003c9b	            0x7536	                           jne 0x4003cd3	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003c9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003ca1	        0x4883c008	                              add rax, 8	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003ca5	           0xfb600	                   movzx eax, byte [rax]	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003ca8	           0xfb6c0	                           movzx eax, al	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003cab	          0x83e830	                           sub eax, 0x30	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003cae	          0x83f809	                              cmp eax, 9	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003cb1	            0x7720	                            ja 0x4003cd3	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4003cb3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x4003cb7	        0x4883c008	                              add rax, 8	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x4003cbb	        0x488945e8	             mov qword [rbp - 0x18], rax	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x4003cbf	        0x488d45e8	                   lea rax, [rbp - 0x18]	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4003cc3	          0x4889c7	                            mov rdi, rax	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4003cc6	      0xe800000000	                          call 0x4003ccb	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4003ccb	          0x8945dc	             mov dword [rbp - 0x24], eax	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4003cce	      0xe930010000	                           jmp 0x4003e03	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4003cd3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003cd7	      0xba05000000	                              mov edx, 5	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003cdc	      0xbe00000000	                              mov esi, 0	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003ce1	          0x4889c7	                            mov rdi, rax	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003ce4	      0xe800000000	                          call 0x4003ce9	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003ce9	            0x85c0	                           test eax, eax	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003ceb	            0x7515	                           jne 0x4003d02	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003ced	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4003cf1	        0x4883c005	                              add rax, 5	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4003cf5	        0x488945e8	             mov qword [rbp - 0x18], rax	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4003cf9	        0x834de002	                or dword [rbp - 0x20], 2	      1881	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4003cfd	      0xe901010000	                           jmp 0x4003e03	      1881	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4003d02	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4003d06	      0xba06000000	                              mov edx, 6	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4003d0b	      0xbe00000000	                              mov esi, 0	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4003d10	          0x4889c7	                            mov rdi, rax	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4003d13	      0xe800000000	                          call 0x4003d18	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4003d18	            0x85c0	                           test eax, eax	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4003d1a	            0x7515	                           jne 0x4003d31	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4003d1c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4003d20	        0x4883c006	                              add rax, 6	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4003d24	        0x488945e8	             mov qword [rbp - 0x18], rax	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4003d28	        0x834de004	                or dword [rbp - 0x20], 4	      1886	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4003d2c	      0xe9d2000000	                           jmp 0x4003e03	      1886	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4003d31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4003d35	      0xba0a000000	                            mov edx, 0xa	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4003d3a	      0xbe00000000	                              mov esi, 0	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4003d3f	          0x4889c7	                            mov rdi, rax	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4003d42	      0xe800000000	                          call 0x4003d47	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4003d47	            0x85c0	                           test eax, eax	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4003d49	            0x7515	                           jne 0x4003d60	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4003d4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4003d4f	        0x4883c00a	                            add rax, 0xa	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4003d53	        0x488945e8	             mov qword [rbp - 0x18], rax	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4003d57	        0x834de008	                or dword [rbp - 0x20], 8	      1891	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4003d5b	      0xe9a3000000	                           jmp 0x4003e03	      1891	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4003d60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4003d64	      0xba08000000	                              mov edx, 8	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4003d69	      0xbe00000000	                              mov esi, 0	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4003d6e	          0x4889c7	                            mov rdi, rax	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4003d71	      0xe800000000	                          call 0x4003d76	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4003d76	            0x85c0	                           test eax, eax	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4003d78	            0x7512	                           jne 0x4003d8c	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4003d7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4003d7e	        0x4883c008	                              add rax, 8	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4003d82	        0x488945e8	             mov qword [rbp - 0x18], rax	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4003d86	        0x834de010	             or dword [rbp - 0x20], 0x10	      1896	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4003d8a	            0xeb77	                           jmp 0x4003e03	      1896	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4003d8c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003d90	      0xba0b000000	                            mov edx, 0xb	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003d95	      0xbe00000000	                              mov esi, 0	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003d9a	          0x4889c7	                            mov rdi, rax	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003d9d	      0xe800000000	                          call 0x4003da2	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003da2	            0x85c0	                           test eax, eax	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003da4	            0x7533	                           jne 0x4003dd9	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003da6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003daa	        0x4883c00b	                            add rax, 0xb	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003dae	           0xfb600	                   movzx eax, byte [rax]	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003db1	           0xfb6c0	                           movzx eax, al	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003db4	          0x83e830	                           sub eax, 0x30	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003db7	          0x83f809	                              cmp eax, 9	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003dba	            0x771d	                            ja 0x4003dd9	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4003dbc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x4003dc0	        0x4883c00b	                            add rax, 0xb	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x4003dc4	        0x488945e8	             mov qword [rbp - 0x18], rax	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x4003dc8	        0x488d45e8	                   lea rax, [rbp - 0x18]	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4003dcc	          0x4889c7	                            mov rdi, rax	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4003dcf	      0xe800000000	                          call 0x4003dd4	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4003dd4	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4003dd7	            0xeb2a	                           jmp 0x4003e03	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4003dd9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4003ddd	      0xba09000000	                              mov edx, 9	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4003de2	      0xbe00000000	                              mov esi, 0	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4003de7	          0x4889c7	                            mov rdi, rax	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4003dea	      0xe800000000	                          call 0x4003def	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4003def	            0x85c0	                           test eax, eax	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4003df1	            0x7510	                           jne 0x4003e03	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4003df3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4003df7	        0x4883c009	                              add rax, 9	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4003dfb	        0x488945e8	             mov qword [rbp - 0x18], rax	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4003dff	        0x834de020	             or dword [rbp - 0x20], 0x20	      1906	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4003e03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4003e07	           0xfb600	                   movzx eax, byte [rax]	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4003e0a	            0x3c2c	                            cmp al, 0x2c	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4003e0c	            0x7415	                            je 0x4003e23	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4003e0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4003e12	           0xfb600	                   movzx eax, byte [rax]	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4003e15	            0x84c0	                             test al, al	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4003e17	            0x740a	                            je 0x4003e23	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4003e19	      0xb800000000	                              mov eax, 0	      1909	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4003e1e	      0xe9b2000000	                           jmp 0x4003ed5	      1909	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4003e23	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4003e27	           0xfb600	                   movzx eax, byte [rax]	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4003e2a	            0x3c2c	                            cmp al, 0x2c	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4003e2c	            0x750c	                           jne 0x4003e3a	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4003e2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4003e32	        0x4883c001	                              add rax, 1	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4003e36	        0x488945e8	             mov qword [rbp - 0x18], rax	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4003e3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1866	diff.c	FUNCTION_32	WHILE_1
0x4003e3e	           0xfb600	                   movzx eax, byte [rax]	      1866	diff.c	FUNCTION_32	WHILE_1
0x4003e41	            0x84c0	                             test al, al	      1866	diff.c	FUNCTION_32	WHILE_1
0x4003e43	     0xf850bfeffff	                           jne 0x4003c54	      1866	diff.c	FUNCTION_32	WHILE_1
0x4003e49	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1915	diff.c	FUNCTION_32	IF_11
0x4003e4c	          0x83e008	                              and eax, 8	      1915	diff.c	FUNCTION_32	IF_11
0x4003e4f	            0x85c0	                           test eax, eax	      1915	diff.c	FUNCTION_32	IF_11
0x4003e51	            0x7411	                            je 0x4003e64	      1915	diff.c	FUNCTION_32	IF_11
0x4003e53	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1915	diff.c	FUNCTION_32	IF_11
0x4003e56	          0x83e010	                           and eax, 0x10	      1915	diff.c	FUNCTION_32	IF_11
0x4003e59	            0x85c0	                           test eax, eax	      1915	diff.c	FUNCTION_32	IF_11
0x4003e5b	            0x7407	                            je 0x4003e64	      1915	diff.c	FUNCTION_32	IF_11
0x4003e5d	      0xb800000000	                              mov eax, 0	      1916	diff.c	FUNCTION_32	IF_11
0x4003e62	            0xeb71	                           jmp 0x4003ed5	      1916	diff.c	FUNCTION_32	IF_11
0x4003e64	    0x8b0500000000	            mov eax, dword [0x04003e6a] 	      1919	diff.c	FUNCTION_32	IF_12
0x4003e6a	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      1919	diff.c	FUNCTION_32	IF_12
0x4003e6d	            0x742d	                            je 0x4003e9c	      1919	diff.c	FUNCTION_32	IF_12
0x4003e6f	    0x488b05000000	            mov rax, qword [0x04003e76] 	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4003e76	        0x488945f0	             mov qword [rbp - 0x10], rax	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4003e7a	            0xeb19	                           jmp 0x4003e95	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4003e7c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1921	diff.c	FUNCTION_32	IF_12
0x4003e80	    0xc780a0000000	               mov dword [rax + 0xa0], 1	      1921	diff.c	FUNCTION_32	IF_12
0x4003e8a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4003e8e	          0x488b00	                    mov rax, qword [rax]	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4003e91	        0x488945f0	             mov qword [rbp - 0x10], rax	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4003e95	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4003e9a	            0x75e0	                           jne 0x4003e7c	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4003e9c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1923	diff.c	FUNCTION_32
0x4003e9f	    0x890500000000	            mov dword [0x04003ea5], eax 	      1923	diff.c	FUNCTION_32
0x4003ea5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1924	diff.c	FUNCTION_32
0x4003ea8	    0x890500000000	            mov dword [0x04003eae], eax 	      1924	diff.c	FUNCTION_32
0x4003eae	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1925	diff.c	FUNCTION_32
0x4003eb1	    0x890500000000	            mov dword [0x04003eb7], eax 	      1925	diff.c	FUNCTION_32
0x4003eb7	      0xbf01000000	                              mov edi, 1	      1927	diff.c	FUNCTION_32	CALL_14
0x4003ebc	      0xe828d1ffff	                    call sym.diff_redraw	      1927	diff.c	FUNCTION_32	CALL_14
0x4003ec1	      0xbe00000000	                              mov esi, 0	      1931	diff.c	FUNCTION_32	CALL_15
0x4003ec6	      0xbf00000000	                              mov edi, 0	      1931	diff.c	FUNCTION_32	CALL_15
0x4003ecb	      0xe800000000	                          call 0x4003ed0	      1931	diff.c	FUNCTION_32	CALL_15
0x4003ed0	      0xb801000000	                              mov eax, 1	      1933	diff.c	FUNCTION_32
0x4003ed5	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1934	diff.c	FUNCTION_32
0x4003ed9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1934	diff.c	FUNCTION_32
0x4003ee2	            0x7405	                            je 0x4003ee9	      1934	diff.c	FUNCTION_32
0x4003ee4	      0xe800000000	                          call 0x4003ee9	      1934	diff.c	FUNCTION_32
0x4003ee9	              0xc9	                                   leave	      1934	diff.c	FUNCTION_32
0x4003eea	              0xc3	                                     ret	      1934	diff.c	FUNCTION_32
diff_copy_entry	WHILE,0:SWITCH,0:ELSE,1:functions,0:IF,1:CALL,0:DO,0:FOR,0	56
0x4002ebd	              0x55	                                push rbp	      1483	diff.c	FUNCTION_24
0x4002ebe	          0x4889e5	                            mov rbp, rsp	      1483	diff.c	FUNCTION_24
0x4002ec1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1483	diff.c	FUNCTION_24
0x4002ec5	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1483	diff.c	FUNCTION_24
0x4002ec9	          0x8955dc	             mov dword [rbp - 0x24], edx	      1483	diff.c	FUNCTION_24
0x4002ecc	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1483	diff.c	FUNCTION_24
0x4002ecf	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1486	diff.c	FUNCTION_24	IF_1
0x4002ed4	            0x750a	                           jne 0x4002ee0	      1486	diff.c	FUNCTION_24	IF_1
0x4002ed6	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1487	diff.c	FUNCTION_24	IF_1
0x4002ede	            0xeb55	                           jmp 0x4002f35	      1487	diff.c	FUNCTION_24	IF_1
0x4002ee0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002ee4	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002ee7	          0x4863d2	                         movsxd rdx, edx	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002eea	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002eef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002ef3	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002ef6	          0x4863c9	                         movsxd rcx, ecx	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002ef9	        0x4883c108	                              add rcx, 8	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002efd	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002f02	        0x488d3402	                    lea rsi, [rdx + rax]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002f06	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1490	diff.c	FUNCTION_24	ELSE_1
0x4002f0a	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1490	diff.c	FUNCTION_24	ELSE_1
0x4002f0d	          0x4863d2	                         movsxd rdx, edx	      1490	diff.c	FUNCTION_24	ELSE_1
0x4002f10	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1490	diff.c	FUNCTION_24	ELSE_1
0x4002f15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1490	diff.c	FUNCTION_24	ELSE_1
0x4002f19	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      1490	diff.c	FUNCTION_24	ELSE_1
0x4002f1c	          0x4863c9	                         movsxd rcx, ecx	      1490	diff.c	FUNCTION_24	ELSE_1
0x4002f1f	        0x4883c108	                              add rcx, 8	      1490	diff.c	FUNCTION_24	ELSE_1
0x4002f23	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1490	diff.c	FUNCTION_24	ELSE_1
0x4002f28	          0x4801d0	                            add rax, rdx	      1490	diff.c	FUNCTION_24	ELSE_1
0x4002f2b	          0x4829c6	                            sub rsi, rax	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002f2e	          0x4889f0	                            mov rax, rsi	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002f31	        0x488945f8	                mov qword [rbp - 8], rax	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002f35	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1491	diff.c	FUNCTION_24
0x4002f39	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1491	diff.c	FUNCTION_24
0x4002f3c	          0x4863d2	                         movsxd rdx, edx	      1491	diff.c	FUNCTION_24
0x4002f3f	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1491	diff.c	FUNCTION_24
0x4002f44	        0x482b45f8	                sub rax, qword [rbp - 8]	      1491	diff.c	FUNCTION_24
0x4002f48	          0x4889c1	                            mov rcx, rax	      1491	diff.c	FUNCTION_24
0x4002f4b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1491	diff.c	FUNCTION_24
0x4002f4f	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1491	diff.c	FUNCTION_24
0x4002f52	          0x4863d2	                         movsxd rdx, edx	      1491	diff.c	FUNCTION_24
0x4002f55	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1491	diff.c	FUNCTION_24
0x4002f5a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1492	diff.c	FUNCTION_24
0x4002f5e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1492	diff.c	FUNCTION_24
0x4002f61	          0x4863d2	                         movsxd rdx, edx	      1492	diff.c	FUNCTION_24
0x4002f64	        0x4883c208	                              add rdx, 8	      1492	diff.c	FUNCTION_24
0x4002f68	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1492	diff.c	FUNCTION_24
0x4002f6d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1492	diff.c	FUNCTION_24
0x4002f71	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      1492	diff.c	FUNCTION_24
0x4002f74	          0x4863c9	                         movsxd rcx, ecx	      1492	diff.c	FUNCTION_24
0x4002f77	        0x4883c108	                              add rcx, 8	      1492	diff.c	FUNCTION_24
0x4002f7b	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1492	diff.c	FUNCTION_24
0x4002f80	              0x90	                                     nop	      1493	diff.c	FUNCTION_24
0x4002f81	              0x5d	                                 pop rbp	      1493	diff.c	FUNCTION_24
0x4002f82	              0xc3	                                     ret	      1493	diff.c	FUNCTION_24
diff_infold	WHILE,0:SWITCH,0:ELSE,1:functions,0:IF,8:CALL,1:DO,0:FOR,2	97
0x4004491	              0x55	                                push rbp	      2093	diff.c	FUNCTION_36
0x4004492	          0x4889e5	                            mov rbp, rsp	      2093	diff.c	FUNCTION_36
0x4004495	        0x4883ec30	                           sub rsp, 0x30	      2093	diff.c	FUNCTION_36
0x4004499	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2093	diff.c	FUNCTION_36
0x400449d	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2093	diff.c	FUNCTION_36
0x40044a1	    0xc745f0ffffff	     mov dword [rbp - 0x10], 0xffffffff 	      2095	diff.c	FUNCTION_36
0x40044a8	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2096	diff.c	FUNCTION_36
0x40044af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2100	diff.c	FUNCTION_36	IF_1
0x40044b3	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      2100	diff.c	FUNCTION_36	IF_1
0x40044b9	            0x85c0	                           test eax, eax	      2100	diff.c	FUNCTION_36	IF_1
0x40044bb	            0x750a	                           jne 0x40044c7	      2100	diff.c	FUNCTION_36	IF_1
0x40044bd	      0xb800000000	                              mov eax, 0	      2101	diff.c	FUNCTION_36	IF_1
0x40044c2	      0xe934010000	                           jmp 0x40045fb	      2101	diff.c	FUNCTION_36	IF_1
0x40044c7	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2103	diff.c	FUNCTION_36	FOR_1
0x40044ce	            0xeb4f	                           jmp 0x400451f	      2103	diff.c	FUNCTION_36	FOR_1
0x40044d0	    0x488b05000000	            mov rax, qword [0x040044d7] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044d7	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044da	          0x4863d2	                         movsxd rdx, edx	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044dd	        0x4883c20c	                            add rdx, 0xc	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044e1	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044e9	        0x488b4008	                mov rax, qword [rax + 8]	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044ed	          0x4839c2	                            cmp rdx, rax	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044f0	            0x7508	                           jne 0x40044fa	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044f2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2106	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044f5	          0x8945f0	             mov dword [rbp - 0x10], eax	      2106	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044f8	            0xeb21	                           jmp 0x400451b	      2106	diff.c	FUNCTION_36	FOR_1	IF_2
0x40044fa	    0x488b05000000	            mov rax, qword [0x04004501] 	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4004501	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4004504	          0x4863d2	                         movsxd rdx, edx	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4004507	        0x4883c20c	                            add rdx, 0xc	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x400450b	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x400450f	          0x4885c0	                           test rax, rax	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4004512	            0x7407	                            je 0x400451b	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4004514	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x400451b	        0x8345ec01	               add dword [rbp - 0x14], 1	      2103	diff.c	FUNCTION_36	FOR_1
0x400451f	        0x837dec07	               cmp dword [rbp - 0x14], 7	      2103	diff.c	FUNCTION_36	FOR_1
0x4004523	            0x7eab	                           jle 0x40044d0	      2103	diff.c	FUNCTION_36	FOR_1
0x4004525	        0x837df0ff	cmp dword [rbp - 0x10], 0xffffffffffffffff	      2112	diff.c	FUNCTION_36	IF_4
0x4004529	            0x7406	                            je 0x4004531	      2112	diff.c	FUNCTION_36	IF_4
0x400452b	        0x837df400	                cmp dword [rbp - 0xc], 0	      2112	diff.c	FUNCTION_36	IF_4
0x400452f	            0x750a	                           jne 0x400453b	      2112	diff.c	FUNCTION_36	IF_4
0x4004531	      0xb800000000	                              mov eax, 0	      2113	diff.c	FUNCTION_36	IF_4
0x4004536	      0xe9c0000000	                           jmp 0x40045fb	      2113	diff.c	FUNCTION_36	IF_4
0x400453b	    0x488b05000000	            mov rax, qword [0x04004542] 	      2115	diff.c	FUNCTION_36	IF_5
0x4004542	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2115	diff.c	FUNCTION_36	IF_5
0x4004548	            0x85c0	                           test eax, eax	      2115	diff.c	FUNCTION_36	IF_5
0x400454a	            0x740a	                            je 0x4004556	      2115	diff.c	FUNCTION_36	IF_5
0x400454c	      0xbf00000000	                              mov edi, 0	      2116	diff.c	FUNCTION_36	CALL_1
0x4004551	      0xe800000000	                          call 0x4004556	      2116	diff.c	FUNCTION_36	CALL_1
0x4004556	    0x488b05000000	            mov rax, qword [0x0400455d] 	      2119	diff.c	FUNCTION_36	IF_6
0x400455d	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2119	diff.c	FUNCTION_36	IF_6
0x4004561	          0x4885c0	                           test rax, rax	      2119	diff.c	FUNCTION_36	IF_6
0x4004564	            0x750a	                           jne 0x4004570	      2119	diff.c	FUNCTION_36	IF_6
0x4004566	      0xb801000000	                              mov eax, 1	      2120	diff.c	FUNCTION_36	IF_6
0x400456b	      0xe98b000000	                           jmp 0x40045fb	      2120	diff.c	FUNCTION_36	IF_6
0x4004570	    0x488b05000000	            mov rax, qword [0x04004577] 	      2122	diff.c	FUNCTION_36	FOR_2
0x4004577	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2122	diff.c	FUNCTION_36	FOR_2
0x400457b	        0x488945f8	                mov qword [rbp - 8], rax	      2122	diff.c	FUNCTION_36	FOR_2
0x400457f	            0xeb6b	                           jmp 0x40045ec	      2122	diff.c	FUNCTION_36	FOR_2
0x4004581	        0x488b45f8	                mov rax, qword [rbp - 8]	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4004585	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4004588	          0x4863d2	                         movsxd rdx, edx	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x400458b	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4004590	    0x8b0500000000	            mov eax, dword [0x04004596] 	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4004596	            0x4898	                                    cdqe	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4004598	          0x4829c2	                            sub rdx, rax	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x400459b	          0x4889d0	                            mov rax, rdx	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x400459e	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x40045a2	            0x7f51	                            jg 0x40045f5	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x40045a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045a8	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045ab	          0x4863d2	                         movsxd rdx, edx	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045ae	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045b7	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045ba	          0x4863c9	                         movsxd rcx, ecx	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045bd	        0x4883c108	                              add rcx, 8	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045c1	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045c6	          0x4801c2	                            add rdx, rax	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045c9	    0x8b0500000000	            mov eax, dword [0x040045cf] 	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045cf	            0x4898	                                    cdqe	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045d1	          0x4801d0	                            add rax, rdx	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045d4	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045d8	            0x7e07	                           jle 0x40045e1	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045da	      0xb800000000	                              mov eax, 0	      2129	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045df	            0xeb1a	                           jmp 0x40045fb	      2129	diff.c	FUNCTION_36	FOR_2	IF_8
0x40045e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2122	diff.c	FUNCTION_36	FOR_2
0x40045e5	          0x488b00	                    mov rax, qword [rax]	      2122	diff.c	FUNCTION_36	FOR_2
0x40045e8	        0x488945f8	                mov qword [rbp - 8], rax	      2122	diff.c	FUNCTION_36	FOR_2
0x40045ec	      0x48837df800	                  cmp qword [rbp - 8], 0	      2122	diff.c	FUNCTION_36	FOR_2
0x40045f1	            0x758e	                           jne 0x4004581	      2122	diff.c	FUNCTION_36	FOR_2
0x40045f3	            0xeb01	                           jmp 0x40045f6	      2122	diff.c	FUNCTION_36	FOR_2
0x40045f5	              0x90	                                     nop	      2126	diff.c	FUNCTION_36	FOR_2	IF_7
0x40045f6	      0xb801000000	                              mov eax, 1	      2131	diff.c	FUNCTION_36
0x40045fb	              0xc9	                                   leave	      2132	diff.c	FUNCTION_36
0x40045fc	              0xc3	                                     ret	      2132	diff.c	FUNCTION_36
diff_mark_adjust_tp	WHILE,1:SWITCH,0:ELSE,14:functions,0:IF,25:CALL,5:DO,0:FOR,5	586
0x4000404	              0x55	                                push rbp	       248	diff.c	FUNCTION_9
0x4000405	          0x4889e5	                            mov rbp, rsp	       248	diff.c	FUNCTION_9
0x4000408	        0x4883ec70	                           sub rsp, 0x70	       248	diff.c	FUNCTION_9
0x400040c	        0x48897db8	             mov qword [rbp - 0x48], rdi	       248	diff.c	FUNCTION_9
0x4000410	          0x8975b4	             mov dword [rbp - 0x4c], esi	       248	diff.c	FUNCTION_9
0x4000413	        0x488955a8	             mov qword [rbp - 0x58], rdx	       248	diff.c	FUNCTION_9
0x4000417	        0x48894da0	             mov qword [rbp - 0x60], rcx	       248	diff.c	FUNCTION_9
0x400041b	        0x4c894598	              mov qword [rbp - 0x68], r8	       248	diff.c	FUNCTION_9
0x400041f	        0x4c894d90	              mov qword [rbp - 0x70], r9	       248	diff.c	FUNCTION_9
0x4000423	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       256	diff.c	FUNCTION_9
0x4000427	        0x488945e8	             mov qword [rbp - 0x18], rax	       256	diff.c	FUNCTION_9
0x400042b	    0x48817da0ffff	     cmp qword [rbp - 0x60], 0x7fffffff 	       259	diff.c	FUNCTION_9	IF_1
0x4000433	            0x7510	                           jne 0x4000445	       259	diff.c	FUNCTION_9	IF_1
0x4000435	        0x488b4598	             mov rax, qword [rbp - 0x68]	       262	diff.c	FUNCTION_9	IF_1
0x4000439	          0x8945c4	             mov dword [rbp - 0x3c], eax	       262	diff.c	FUNCTION_9	IF_1
0x400043c	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       263	diff.c	FUNCTION_9	IF_1
0x4000443	            0xeb27	                           jmp 0x400046c	       263	diff.c	FUNCTION_9	IF_1
0x4000445	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x400044a	            0x7e10	                           jle 0x400045c	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x400044c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       268	diff.c	FUNCTION_9	ELSE_1	IF_2
0x4000450	          0x8945c4	             mov dword [rbp - 0x3c], eax	       268	diff.c	FUNCTION_9	ELSE_1	IF_2
0x4000453	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       269	diff.c	FUNCTION_9	ELSE_1	IF_2
0x400045a	            0xeb10	                           jmp 0x400046c	       269	diff.c	FUNCTION_9	ELSE_1	IF_2
0x400045c	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       274	diff.c	FUNCTION_9	ELSE_2
0x4000463	        0x488b4590	             mov rax, qword [rbp - 0x70]	       275	diff.c	FUNCTION_9	ELSE_2
0x4000467	            0xf7d8	                                 neg eax	       275	diff.c	FUNCTION_9	ELSE_2
0x4000469	          0x8945c8	             mov dword [rbp - 0x38], eax	       275	diff.c	FUNCTION_9	ELSE_2
0x400046c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       278	diff.c	FUNCTION_9
0x4000474	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       279	diff.c	FUNCTION_9
0x4000478	        0x488b4058	            mov rax, qword [rax + 0x58] 	       279	diff.c	FUNCTION_9
0x400047c	        0x488945d8	             mov qword [rbp - 0x28], rax	       279	diff.c	FUNCTION_9
0x4000480	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000485	            0x7440	                            je 0x40004c7	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000487	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400048b	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400048e	          0x4863d2	                         movsxd rdx, edx	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000491	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000496	        0x4883e801	                              sub rax, 1	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400049a	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400049e	            0x7f27	                            jg 0x40004c7	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004a0	    0x48817da0ffff	     cmp qword [rbp - 0x60], 0x7fffffff 	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004a8	     0xf858c010000	                           jne 0x400063a	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004b2	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004b5	          0x4863d2	                         movsxd rdx, edx	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004b8	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004bd	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004c1	     0xf8e73010000	                           jle 0x400063a	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004c7	      0x48837de000	               cmp qword [rbp - 0x20], 0	       287	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004cc	            0x742f	                            je 0x40004fd	       287	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004ce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004d2	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004d5	          0x4863d2	                         movsxd rdx, edx	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004d8	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004e1	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004e4	          0x4863c9	                         movsxd rcx, ecx	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004e7	        0x4883c108	                              add rcx, 8	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004eb	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004f0	          0x4801d0	                            add rax, rdx	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004f3	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004f7	     0xf8d3d010000	                           jge 0x400063a	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x40004fd	    0x8b0500000000	            mov eax, dword [0x04000503] 	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000503	            0x85c0	                           test eax, eax	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000505	     0xf852f010000	                           jne 0x400063a	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x400050b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x400050f	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x4000513	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x4000517	          0x4889ce	                            mov rsi, rcx	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x400051a	          0x4889c7	                            mov rdi, rax	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x400051d	      0xe858070000	                 call sym.diff_alloc_new	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x4000522	        0x488945f8	                mov qword [rbp - 8], rax	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x4000526	      0x48837df800	                  cmp qword [rbp - 8], 0	       292	diff.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x400052b	     0xf8446070000	                            je 0x4000c77	       292	diff.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4000531	        0x488b45f8	                mov rax, qword [rbp - 8]	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000535	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000538	          0x4863d2	                         movsxd rdx, edx	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x400053b	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x400053f	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000544	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000547	          0x4863d0	                         movsxd rdx, eax	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x400054a	        0x488b45f8	                mov rax, qword [rbp - 8]	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x400054e	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000551	          0x4863c9	                         movsxd rcx, ecx	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000554	        0x4883c108	                              add rcx, 8	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x4000558	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x400055d	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x4000564	      0xe9c7000000	                           jmp 0x4000630	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x4000569	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400056d	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4000570	          0x4863d2	                         movsxd rdx, edx	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4000573	        0x4883c20c	                            add rdx, 0xc	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4000577	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400057b	          0x4885c0	                           test rax, rax	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400057e	     0xf84a8000000	                            je 0x400062c	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4000584	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4000587	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400058a	     0xf849c000000	                            je 0x400062c	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4000590	      0x48837de000	               cmp qword [rbp - 0x20], 0	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4000595	            0x7515	                           jne 0x40005ac	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4000597	        0x488b45f8	                mov rax, qword [rbp - 8]	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x400059b	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x400059e	          0x4863d2	                         movsxd rdx, edx	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x40005a1	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x40005a5	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x40005aa	            0xeb67	                           jmp 0x4000613	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x40005ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005b0	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005b3	          0x4863d2	                         movsxd rdx, edx	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005b6	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005bb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005bf	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005c2	          0x4863c9	                         movsxd rcx, ecx	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005c5	        0x4883c108	                              add rcx, 8	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005c9	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005ce	          0x4801c2	                            add rdx, rax	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005d1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005d5	        0x488d3402	                    lea rsi, [rdx + rax]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005dd	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005e0	          0x4863d2	                         movsxd rdx, edx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005e3	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005e8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005ec	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005ef	          0x4863c9	                         movsxd rcx, ecx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005f2	        0x4883c108	                              add rcx, 8	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005f6	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005fb	          0x4801d0	                            add rax, rdx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40005fe	          0x4829c6	                            sub rsi, rax	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4000601	          0x4889f1	                            mov rcx, rsi	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4000604	        0x488b45f8	                mov rax, qword [rbp - 8]	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4000608	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x400060b	          0x4863d2	                         movsxd rdx, edx	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x400060e	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4000613	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4000616	          0x4863d0	                         movsxd rdx, eax	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4000619	        0x488b45f8	                mov rax, qword [rbp - 8]	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400061d	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4000620	          0x4863c9	                         movsxd rcx, ecx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4000623	        0x4883c108	                              add rcx, 8	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4000627	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400062c	        0x8345c001	               add dword [rbp - 0x40], 1	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x4000630	        0x837dc007	               cmp dword [rbp - 0x40], 7	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x4000634	     0xf8e2fffffff	                           jle 0x4000569	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x400063a	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x400063f	     0xf8448050000	                            je 0x4000b8d	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x4000645	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       326	diff.c	FUNCTION_9	FOR_1
0x4000649	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       326	diff.c	FUNCTION_9	FOR_1
0x400064c	          0x4863d2	                         movsxd rdx, edx	       326	diff.c	FUNCTION_9	FOR_1
0x400064f	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       326	diff.c	FUNCTION_9	FOR_1
0x4000654	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       326	diff.c	FUNCTION_9	FOR_1
0x4000658	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       326	diff.c	FUNCTION_9	FOR_1
0x400065b	          0x4863c9	                         movsxd rcx, ecx	       326	diff.c	FUNCTION_9	FOR_1
0x400065e	        0x4883c108	                              add rcx, 8	       326	diff.c	FUNCTION_9	FOR_1
0x4000662	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       326	diff.c	FUNCTION_9	FOR_1
0x4000667	          0x4801d0	                            add rax, rdx	       326	diff.c	FUNCTION_9	FOR_1
0x400066a	        0x4883e801	                              sub rax, 1	       326	diff.c	FUNCTION_9	FOR_1
0x400066e	        0x488945f0	             mov qword [rbp - 0x10], rax	       326	diff.c	FUNCTION_9	FOR_1
0x4000672	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x4000676	        0x4883e801	                              sub rax, 1	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x400067a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x400067e	     0xf8f1a040000	                            jg 0x4000a9e	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x4000684	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x4000688	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x400068b	          0x4863d2	                         movsxd rdx, edx	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x400068e	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x4000693	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x4000696	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x4000699	             0x1c8	                            add eax, ecx	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x400069b	            0x85c0	                           test eax, eax	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x400069d	           0xf95c0	                                setne al	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006a0	           0xfb6c0	                           movzx eax, al	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006a3	          0x4829c2	                            sub rdx, rax	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006a6	          0x4889d0	                            mov rax, rdx	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006a9	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006ad	            0x7e36	                           jle 0x40006e5	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006af	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x40006b4	     0xf84d6040000	                            je 0x4000b90	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x40006ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006be	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006c1	          0x4863d2	                         movsxd rdx, edx	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006c4	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006c9	        0x488b4590	             mov rax, qword [rbp - 0x70]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006cd	        0x488d0c02	                    lea rcx, [rdx + rax]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006d5	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006d8	          0x4863d2	                         movsxd rdx, edx	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006db	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006e0	      0xe9b9030000	                           jmp 0x4000a9e	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40006e5	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       341	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4
0x40006ec	        0x837dc800	               cmp dword [rbp - 0x38], 0	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x40006f0	     0xf8e1b030000	                           jle 0x4000a11	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x40006f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x40006fa	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x40006fd	          0x4863d2	                         movsxd rdx, edx	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4000700	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4000705	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4000709	     0xf8c4d010000	                            jl 0x400085c	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x400070f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4000713	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4000716	          0x4863d2	                         movsxd rdx, edx	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4000719	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x400071e	            0x89c2	                            mov edx, eax	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4000720	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4000724	            0x29c2	                            sub edx, eax	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4000726	            0x89d0	                            mov eax, edx	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4000728	          0x8945d0	             mov dword [rbp - 0x30], eax	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x400072b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x400072f	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x4000733	     0xf8fb8000000	                            jg 0x40007f1	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x4000739	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400073d	          0x488b00	                    mov rax, qword [rax]	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000740	          0x4885c0	                           test rax, rax	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000743	            0x7476	                            je 0x40007bb	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000745	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000749	          0x488b00	                    mov rax, qword [rax]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400074c	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400074f	          0x4863d2	                         movsxd rdx, edx	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000752	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000757	        0x4883e801	                              sub rax, 1	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400075b	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400075f	            0x7f5a	                            jg 0x40007bb	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000761	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000765	          0x488b00	                    mov rax, qword [rax]	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000768	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400076b	          0x4863d2	                         movsxd rdx, edx	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400076e	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000773	            0x89c2	                            mov edx, eax	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000775	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000779	            0x29c2	                            sub edx, eax	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400077b	            0x89d0	                            mov eax, edx	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400077d	          0x8945cc	             mov dword [rbp - 0x34], eax	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000780	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       358	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000783	          0x2945c8	             sub dword [rbp - 0x38], eax	       358	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000786	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000789	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400078d	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000790	          0x4863c9	                         movsxd rcx, ecx	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000793	        0x4883c108	                              add rcx, 8	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4000797	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400079c	            0x29c2	                            sub edx, eax	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400079e	            0x89d0	                            mov eax, edx	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x40007a0	          0x8945cc	             mov dword [rbp - 0x34], eax	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x40007a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x40007a7	          0x488b00	                    mov rax, qword [rax]	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x40007aa	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x40007ad	          0x4863d2	                         movsxd rdx, edx	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x40007b0	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x40007b5	        0x488945e8	             mov qword [rbp - 0x18], rax	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x40007b9	            0xeb1d	                           jmp 0x40007d8	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x40007bb	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007c2	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007c5	          0x4863c9	                         movsxd rcx, ecx	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007c8	        0x4883c108	                              add rcx, 8	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007cc	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007d1	            0x29c2	                            sub edx, eax	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007d3	            0x89d0	                            mov eax, edx	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007d5	          0x8945cc	             mov dword [rbp - 0x34], eax	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007dc	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007df	          0x4863d2	                         movsxd rdx, edx	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007e2	        0x4883c208	                              add rdx, 8	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007e6	    0x48c744d00800	          mov qword [rax + rdx*8 + 8], 0	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007ef	            0xeb53	                           jmp 0x4000844	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40007f1	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       369	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40007f4	          0x8945cc	             mov dword [rbp - 0x34], eax	       369	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40007f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40007fb	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40007fe	          0x4863d2	                         movsxd rdx, edx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000801	        0x4883c208	                              add rdx, 8	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000805	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x400080a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x400080e	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000811	          0x4863d2	                         movsxd rdx, edx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000814	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000819	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x400081d	          0x4829c2	                            sub rdx, rax	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000820	          0x4889d0	                            mov rax, rdx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000823	        0x4883c001	                              add rax, 1	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000827	          0x4829c1	                            sub rcx, rax	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x400082a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x400082e	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000831	          0x4863d2	                         movsxd rdx, edx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000834	        0x4883c208	                              add rdx, 8	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000838	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x400083d	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       371	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4000844	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x4000848	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x400084b	          0x4863d2	                         movsxd rdx, edx	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x400084e	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x4000852	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x4000857	      0xe925010000	                           jmp 0x4000981	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x400085c	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x4000863	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4000867	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x400086b	     0xf8dd8000000	                           jge 0x4000949	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4000871	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4000875	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4000878	          0x4863d2	                         movsxd rdx, edx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x400087b	        0x4883c208	                              add rdx, 8	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x400087f	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4000884	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4000888	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x400088c	        0x4883c001	                              add rax, 1	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4000890	          0x4889d1	                            mov rcx, rdx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4000893	          0x4829c1	                            sub rcx, rax	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4000896	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x400089a	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x400089d	          0x4863d2	                         movsxd rdx, edx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40008a0	        0x4883c208	                              add rdx, 8	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40008a4	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40008a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008ad	          0x488b00	                    mov rax, qword [rax]	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008b0	          0x4885c0	                           test rax, rax	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008b3	            0x747a	                            je 0x400092f	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008b9	          0x488b00	                    mov rax, qword [rax]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008bc	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008bf	          0x4863d2	                         movsxd rdx, edx	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008c2	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008c7	        0x4883e801	                              sub rax, 1	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008cb	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008cf	            0x7f5e	                            jg 0x400092f	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008d5	          0x488b00	                    mov rax, qword [rax]	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008d8	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008db	          0x4863d2	                         movsxd rdx, edx	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008de	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008e3	            0x89c2	                            mov edx, eax	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008e9	            0x29c2	                            sub edx, eax	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008eb	            0x89d0	                            mov eax, edx	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008ed	          0x83e801	                              sub eax, 1	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008f0	          0x8945cc	             mov dword [rbp - 0x34], eax	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008f7	            0x89c1	                            mov ecx, eax	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40008fd	          0x488b00	                    mov rax, qword [rax]	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4000900	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4000903	          0x4863d2	                         movsxd rdx, edx	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4000906	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400090b	            0x29c1	                            sub ecx, eax	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400090d	            0x89ca	                            mov edx, ecx	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400090f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4000912	             0x1d0	                            add eax, edx	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4000914	          0x8945c8	             mov dword [rbp - 0x38], eax	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4000917	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400091b	          0x488b00	                    mov rax, qword [rax]	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400091e	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4000921	          0x4863d2	                         movsxd rdx, edx	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4000924	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4000929	        0x488945e8	             mov qword [rbp - 0x18], rax	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400092d	            0xeb11	                           jmp 0x4000940	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400092f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x4000933	            0x89c2	                            mov edx, eax	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x4000935	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x4000939	            0x29c2	                            sub edx, eax	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x400093b	            0x89d0	                            mov eax, edx	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x400093d	          0x8945cc	             mov dword [rbp - 0x34], eax	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x4000940	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       394	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4000947	            0xeb38	                           jmp 0x4000981	       394	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4000949	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4000950	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4000954	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4000957	          0x4863d2	                         movsxd rdx, edx	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x400095a	        0x4883c208	                              add rdx, 8	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x400095e	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4000963	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4000966	            0x4898	                                    cdqe	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4000968	          0x4889d1	                            mov rcx, rdx	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x400096b	          0x4829c1	                            sub rcx, rax	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x400096e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4000972	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4000975	          0x4863d2	                         movsxd rdx, edx	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4000978	        0x4883c208	                              add rdx, 8	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x400097c	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4000981	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x4000988	            0xeb7b	                           jmp 0x4000a05	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x400098a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400098e	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4000991	          0x4863d2	                         movsxd rdx, edx	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4000994	        0x4883c20c	                            add rdx, 0xc	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4000998	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400099c	          0x4885c0	                           test rax, rax	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400099f	            0x7460	                            je 0x4000a01	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009a1	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009a4	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009a7	            0x7458	                            je 0x4000a01	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009ad	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009b0	          0x4863d2	                         movsxd rdx, edx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009b3	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009b8	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009bb	            0x4898	                                    cdqe	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009bd	          0x4889d1	                            mov rcx, rdx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009c0	          0x4829c1	                            sub rcx, rax	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009c7	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009ca	          0x4863d2	                         movsxd rdx, edx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009cd	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009d6	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009d9	          0x4863d2	                         movsxd rdx, edx	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009dc	        0x4883c208	                              add rdx, 8	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009e0	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009e5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009e8	            0x4898	                                    cdqe	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009ea	        0x488d0c02	                    lea rcx, [rdx + rax]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009f2	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009f5	          0x4863d2	                         movsxd rdx, edx	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009f8	        0x4883c208	                              add rdx, 8	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40009fc	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4000a01	        0x8345c001	               add dword [rbp - 0x40], 1	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x4000a05	        0x837dc007	               cmp dword [rbp - 0x40], 7	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x4000a09	     0xf8e7bffffff	                           jle 0x400098a	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x4000a0f	            0xeb74	                           jmp 0x4000a85	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x4000a11	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a15	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a18	          0x4863d2	                         movsxd rdx, edx	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a1b	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a20	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a24	            0x7f38	                            jg 0x4000a5e	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a2a	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a2d	          0x4863d2	                         movsxd rdx, edx	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a30	        0x4883c208	                              add rdx, 8	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a34	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a39	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a3c	            0x4898	                                    cdqe	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a3e	        0x488d0c02	                    lea rcx, [rdx + rax]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a42	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a46	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a49	          0x4863d2	                         movsxd rdx, edx	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a4c	        0x4883c208	                              add rdx, 8	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a50	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a55	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       417	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a5c	            0xeb27	                           jmp 0x4000a85	       417	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4000a5e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4000a62	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4000a65	          0x4863d2	                         movsxd rdx, edx	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4000a68	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4000a6d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4000a70	            0x4898	                                    cdqe	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4000a72	        0x488d0c02	                    lea rcx, [rdx + rax]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4000a76	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4000a7a	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4000a7d	          0x4863d2	                         movsxd rdx, edx	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4000a80	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4000a85	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       424	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_19
0x4000a89	            0x7413	                            je 0x4000a9e	       424	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_19
0x4000a8b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       428	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	CALL_2
0x4000a8f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       428	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	CALL_2
0x4000a93	          0x4889d6	                            mov rsi, rdx	       428	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	CALL_2
0x4000a96	          0x4889c7	                            mov rdi, rax	       428	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	CALL_2
0x4000a99	      0xe836020000	           call sym.diff_check_unchanged	       428	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	CALL_2
0x4000a9e	      0x48837de000	               cmp qword [rbp - 0x20], 0	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000aa3	     0xf84cc000000	                            je 0x4000b75	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000aa9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000aad	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000ab0	          0x4863d2	                         movsxd rdx, edx	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000ab3	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000ab8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000abc	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000abf	          0x4863c9	                         movsxd rcx, ecx	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000ac2	        0x4883c108	                              add rcx, 8	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000ac6	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000acb	        0x488d0c02	                    lea rcx, [rdx + rax]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000acf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       434	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000ad3	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       434	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000ad6	          0x4863d2	                         movsxd rdx, edx	       434	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000ad9	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       434	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000ade	          0x4839c1	                            cmp rcx, rax	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000ae1	     0xf858e000000	                           jne 0x4000b75	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000ae7	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0x4000aee	            0xeb58	                           jmp 0x4000b48	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0x4000af0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000af4	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000af7	          0x4863d2	                         movsxd rdx, edx	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000afa	        0x4883c20c	                            add rdx, 0xc	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000afe	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b02	          0x4885c0	                           test rax, rax	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b05	            0x743d	                            je 0x4000b44	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b07	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b0b	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b0e	          0x4863d2	                         movsxd rdx, edx	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b11	        0x4883c208	                              add rdx, 8	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b15	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b1a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b1e	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b21	          0x4863c9	                         movsxd rcx, ecx	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b24	        0x4883c108	                              add rcx, 8	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b28	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b2d	        0x488d0c02	                    lea rcx, [rdx + rax]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b31	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b35	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b38	          0x4863d2	                         movsxd rdx, edx	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b3b	        0x4883c208	                              add rdx, 8	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b3f	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4000b44	        0x8345c001	               add dword [rbp - 0x40], 1	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0x4000b48	        0x837dc007	               cmp dword [rbp - 0x40], 7	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0x4000b4c	            0x7ea2	                           jle 0x4000af0	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0x4000b4e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000b52	          0x488b10	                    mov rdx, qword [rax]	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000b55	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000b59	          0x488910	                    mov qword [rax], rdx	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000b5c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0x4000b60	          0x4889c7	                            mov rdi, rax	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0x4000b63	      0xe800000000	                          call 0x4000b68	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0x4000b68	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000b6c	          0x488b00	                    mov rax, qword [rax]	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000b6f	        0x488945d8	             mov qword [rbp - 0x28], rax	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000b73	            0xeb13	                           jmp 0x4000b88	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x4000b75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       446	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x4000b79	        0x488945e0	             mov qword [rbp - 0x20], rax	       446	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x4000b7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x4000b81	          0x488b00	                    mov rax, qword [rax]	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x4000b84	        0x488945d8	             mov qword [rbp - 0x28], rax	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x4000b88	      0xe9f3f8ffff	                           jmp 0x4000480	       449	diff.c	FUNCTION_9	FOR_1
0x4000b8d	              0x90	                                     nop	       312	diff.c	FUNCTION_9	FOR_1	IF_7
0x4000b8e	            0xeb01	                           jmp 0x4000b91	       312	diff.c	FUNCTION_9	FOR_1	IF_7
0x4000b90	              0x90	                                     nop	       336	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x4000b91	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       451	diff.c	FUNCTION_9
0x4000b99	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       452	diff.c	FUNCTION_9
0x4000b9d	        0x488b4058	            mov rax, qword [rax + 0x58] 	       452	diff.c	FUNCTION_9
0x4000ba1	        0x488945d8	             mov qword [rbp - 0x28], rax	       452	diff.c	FUNCTION_9
0x4000ba5	      0xe99f000000	                           jmp 0x4000c49	       453	diff.c	FUNCTION_9	WHILE_1
0x4000baa	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x4000bb1	            0xeb33	                           jmp 0x4000be6	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x4000bb3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bb7	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bba	          0x4863d2	                         movsxd rdx, edx	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bbd	        0x4883c20c	                            add rdx, 0xc	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bc1	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bc5	          0x4885c0	                           test rax, rax	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bc8	            0x7418	                            je 0x4000be2	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bce	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bd1	          0x4863d2	                         movsxd rdx, edx	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bd4	        0x4883c208	                              add rdx, 8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bd8	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bdd	          0x4885c0	                           test rax, rax	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000be0	            0x750c	                           jne 0x4000bee	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000be2	        0x8345c001	               add dword [rbp - 0x40], 1	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x4000be6	        0x837dc007	               cmp dword [rbp - 0x40], 7	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x4000bea	            0x7ec7	                           jle 0x4000bb3	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x4000bec	            0xeb01	                           jmp 0x4000bef	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x4000bee	              0x90	                                     nop	       458	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4000bef	        0x837dc008	               cmp dword [rbp - 0x40], 8	       459	diff.c	FUNCTION_9	WHILE_1	IF_23
0x4000bf3	            0x7541	                           jne 0x4000c36	       459	diff.c	FUNCTION_9	WHILE_1	IF_23
0x4000bf5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       461	diff.c	FUNCTION_9	WHILE_1	IF_23
0x4000bf9	          0x488b00	                    mov rax, qword [rax]	       461	diff.c	FUNCTION_9	WHILE_1	IF_23
0x4000bfc	        0x488945f8	                mov qword [rbp - 8], rax	       461	diff.c	FUNCTION_9	WHILE_1	IF_23
0x4000c00	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       462	diff.c	FUNCTION_9	WHILE_1	IF_23	CALL_4
0x4000c04	          0x4889c7	                            mov rdi, rax	       462	diff.c	FUNCTION_9	WHILE_1	IF_23	CALL_4
0x4000c07	      0xe800000000	                          call 0x4000c0c	       462	diff.c	FUNCTION_9	WHILE_1	IF_23	CALL_4
0x4000c0c	        0x488b45f8	                mov rax, qword [rbp - 8]	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0x4000c10	        0x488945d8	             mov qword [rbp - 0x28], rax	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0x4000c14	      0x48837de000	               cmp qword [rbp - 0x20], 0	       464	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x4000c19	            0x750e	                           jne 0x4000c29	       464	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x4000c1b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       465	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x4000c1f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       465	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x4000c23	        0x48895058	             mov qword [rax + 0x58], rdx	       465	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x4000c27	            0xeb20	                           jmp 0x4000c49	       465	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x4000c29	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       467	diff.c	FUNCTION_9	WHILE_1	IF_23	ELSE_13
0x4000c2d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       467	diff.c	FUNCTION_9	WHILE_1	IF_23	ELSE_13
0x4000c31	          0x488910	                    mov qword [rax], rdx	       467	diff.c	FUNCTION_9	WHILE_1	IF_23	ELSE_13
0x4000c34	            0xeb13	                           jmp 0x4000c49	       467	diff.c	FUNCTION_9	WHILE_1	IF_23	ELSE_13
0x4000c36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       472	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x4000c3a	        0x488945e0	             mov qword [rbp - 0x20], rax	       472	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x4000c3e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x4000c42	          0x488b00	                    mov rax, qword [rax]	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x4000c45	        0x488945d8	             mov qword [rbp - 0x28], rax	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x4000c49	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       453	diff.c	FUNCTION_9	WHILE_1
0x4000c4e	     0xf8556ffffff	                           jne 0x4000baa	       453	diff.c	FUNCTION_9	WHILE_1
0x4000c54	    0x488b05000000	            mov rax, qword [0x04000c5b] 	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4000c5b	        0x483945b8	            cmp qword [rbp - 0x48], rax 	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4000c5f	            0x7517	                           jne 0x4000c78	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4000c61	      0xbf01000000	                              mov edi, 1	       480	diff.c	FUNCTION_9	ELSE_13	IF_25	CALL_5
0x4000c66	      0xe87e030000	                    call sym.diff_redraw	       480	diff.c	FUNCTION_9	ELSE_13	IF_25	CALL_5
0x4000c6b	    0xc70500000000	               mov dword [0x04000c75], 1	       485	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4000c75	            0xeb01	                           jmp 0x4000c78	       485	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4000c77	              0x90	                                     nop	       293	diff.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4000c78	              0xc9	                                   leave	       487	diff.c	FUNCTION_9
0x4000c79	              0xc3	                                     ret	       487	diff.c	FUNCTION_9
ex_diffsplit	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,4:CALL,11:DO,0:FOR,0	86
0x4001ec9	              0x55	                                push rbp	      1080	diff.c	FUNCTION_18
0x4001eca	          0x4889e5	                            mov rbp, rsp	      1080	diff.c	FUNCTION_18
0x4001ecd	              0x53	                                push rbx	      1080	diff.c	FUNCTION_18
0x4001ece	        0x4883ec48	                           sub rsp, 0x48	      1080	diff.c	FUNCTION_18
0x4001ed2	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1080	diff.c	FUNCTION_18
0x4001ed6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1080	diff.c	FUNCTION_18
0x4001edf	        0x488945e8	             mov qword [rbp - 0x18], rax	      1080	diff.c	FUNCTION_18
0x4001ee3	            0x31c0	                            xor eax, eax	      1080	diff.c	FUNCTION_18
0x4001ee5	    0x488b05000000	            mov rax, qword [0x04001eec] 	      1081	diff.c	FUNCTION_18
0x4001eec	        0x488945c8	             mov qword [rbp - 0x38], rax	      1081	diff.c	FUNCTION_18
0x4001ef0	    0x488b15000000	            mov rdx, qword [0x04001ef7] 	      1084	diff.c	FUNCTION_18	CALL_1
0x4001ef7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1084	diff.c	FUNCTION_18	CALL_1
0x4001efb	          0x4889d6	                            mov rsi, rdx	      1084	diff.c	FUNCTION_18	CALL_1
0x4001efe	          0x4889c7	                            mov rdi, rax	      1084	diff.c	FUNCTION_18	CALL_1
0x4001f01	      0xe800000000	                          call 0x4001f06	      1084	diff.c	FUNCTION_18	CALL_1
0x4001f06	    0xc70500000000	               mov dword [0x04001f10], 1	      1086	diff.c	FUNCTION_18
0x4001f10	      0xe800000000	                          call 0x4001f15	      1089	diff.c	FUNCTION_18	CALL_2
0x4001f15	    0x488b05000000	            mov rax, qword [0x04001f1c] 	      1090	diff.c	FUNCTION_18	CALL_3
0x4001f1c	          0x4889c7	                            mov rdi, rax	      1090	diff.c	FUNCTION_18	CALL_3
0x4001f1f	      0xe800000000	                          call 0x4001f24	      1090	diff.c	FUNCTION_18	CALL_3
0x4001f24	    0xc70500000000	               mov dword [0x04001f2e], 0	      1093	diff.c	FUNCTION_18
0x4001f2e	    0x8b0500000000	            mov eax, dword [0x04001f34] 	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f34	          0x83e010	                           and eax, 0x10	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f37	            0x85c0	                           test eax, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f39	            0x7407	                            je 0x4001f42	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f3b	      0xb802000000	                              mov eax, 2	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f40	            0xeb05	                           jmp 0x4001f47	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f42	      0xb800000000	                              mov eax, 0	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f47	            0x89c6	                            mov esi, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f49	      0xbf00000000	                              mov edi, 0	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f4e	      0xe800000000	                          call 0x4001f53	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f53	            0x85c0	                           test eax, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f55	     0xf84c5000000	                            je 0x4002020	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4001f5b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1098	diff.c	FUNCTION_18	IF_1
0x4001f5f	    0xc740209a0100	          mov dword [rax + 0x20], 0x19a 	      1098	diff.c	FUNCTION_18	IF_1
0x4001f66	    0x488b05000000	            mov rax, qword [0x04001f6d] 	      1099	diff.c	FUNCTION_18	IF_1
0x4001f6d	    0xc780c0010000	              mov dword [rax + 0x1c0], 1	      1099	diff.c	FUNCTION_18	IF_1
0x4001f77	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4001f7b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4001f7f	          0x4889d6	                            mov rsi, rdx	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4001f82	          0x4889c7	                            mov rdi, rax	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4001f85	      0xe800000000	                          call 0x4001f8a	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4001f8a	    0x488b05000000	            mov rax, qword [0x04001f91] 	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x4001f91	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x4001f95	     0xf8485000000	                            je 0x4002020	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x4001f9b	    0x488b05000000	            mov rax, qword [0x04001fa2] 	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x4001fa2	      0xbe01000000	                              mov esi, 1	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x4001fa7	          0x4889c7	                            mov rdi, rax	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x4001faa	      0xe800000000	                          call 0x4001faf	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x4001faf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4001fb3	          0x4889c7	                            mov rdi, rax	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4001fb6	      0xe800000000	                          call 0x4001fbb	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4001fbb	            0x85c0	                           test eax, eax	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4001fbd	            0x7443	                            je 0x4002002	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4001fbf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x4001fc3	      0xbe01000000	                              mov esi, 1	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x4001fc8	          0x4889c7	                            mov rdi, rax	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x4001fcb	      0xe800000000	                          call 0x4001fd0	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x4001fd0	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x4001fd4	          0x4889c7	                            mov rdi, rax	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x4001fd7	      0xe800000000	                          call 0x4001fdc	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x4001fdc	            0x85c0	                           test eax, eax	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x4001fde	            0x7422	                            je 0x4002002	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x4001fe0	    0x488b1d000000	            mov rbx, qword [0x04001fe7] 	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4001fe7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4001feb	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4001fef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4001ff3	          0x4889d6	                            mov rsi, rdx	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4001ff6	          0x4889c7	                            mov rdi, rax	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4001ff9	      0xe800000000	                          call 0x4001ffe	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4001ffe	        0x48894338	             mov qword [rbx + 0x38], rax	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4002002	    0x488b05000000	            mov rax, qword [0x04002009] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x4002009	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x400200f	    0x488b05000000	            mov rax, qword [0x04002016] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x4002016	            0x89d6	                            mov esi, edx	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x4002018	          0x4889c7	                            mov rdi, rax	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x400201b	      0xe800000000	                          call 0x4002020	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x4002020	              0x90	                                     nop	      1120	diff.c	FUNCTION_18
0x4002021	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1120	diff.c	FUNCTION_18
0x4002025	    0x644833042528	                xor rax, qword fs:[0x28]	      1120	diff.c	FUNCTION_18
0x400202e	            0x7405	                            je 0x4002035	      1120	diff.c	FUNCTION_18
0x4002030	      0xe800000000	                          call 0x4002035	      1120	diff.c	FUNCTION_18
0x4002035	        0x4883c448	                           add rsp, 0x48	      1120	diff.c	FUNCTION_18
0x4002039	              0x5b	                                 pop rbx	      1120	diff.c	FUNCTION_18
0x400203a	              0x5d	                                 pop rbp	      1120	diff.c	FUNCTION_18
0x400203b	              0xc3	                                     ret	      1120	diff.c	FUNCTION_18
diff_read	WHILE,3:SWITCH,0:ELSE,7:functions,0:IF,21:CALL,14:DO,0:FOR,5	485
0x40025b1	              0x55	                                push rbp	      1288	diff.c	FUNCTION_23
0x40025b2	          0x4889e5	                            mov rbp, rsp	      1288	diff.c	FUNCTION_23
0x40025b5	    0x4881ece00000	                           sub rsp, 0xe0	      1288	diff.c	FUNCTION_23
0x40025bc	    0x89bd2cffffff	             mov dword [rbp - 0xd4], edi	      1288	diff.c	FUNCTION_23
0x40025c2	    0x89b528ffffff	             mov dword [rbp - 0xd8], esi	      1288	diff.c	FUNCTION_23
0x40025c8	    0x48899520ffff	             mov qword [rbp - 0xe0], rdx	      1288	diff.c	FUNCTION_23
0x40025cf	    0x64488b042528	                mov rax, qword fs:[0x28]	      1288	diff.c	FUNCTION_23
0x40025d8	        0x488945f8	                mov qword [rbp - 8], rax	      1288	diff.c	FUNCTION_23
0x40025dc	            0x31c0	                            xor eax, eax	      1288	diff.c	FUNCTION_23
0x40025de	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      1290	diff.c	FUNCTION_23
0x40025e9	    0x488b05000000	            mov rax, qword [0x040025f0] 	      1291	diff.c	FUNCTION_23
0x40025f0	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1291	diff.c	FUNCTION_23
0x40025f4	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1291	diff.c	FUNCTION_23
0x40025fb	    0xc78540ffffff	               mov dword [rbp - 0xc0], 1	      1301	diff.c	FUNCTION_23
0x4002605	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1303	diff.c	FUNCTION_23	CALL_1
0x400260c	      0xbe00000000	                              mov esi, 0	      1303	diff.c	FUNCTION_23	CALL_1
0x4002611	          0x4889c7	                            mov rdi, rax	      1303	diff.c	FUNCTION_23	CALL_1
0x4002614	      0xe800000000	                          call 0x4002619	      1303	diff.c	FUNCTION_23	CALL_1
0x4002619	        0x488945a8	             mov qword [rbp - 0x58], rax	      1303	diff.c	FUNCTION_23	CALL_1
0x400261d	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1304	diff.c	FUNCTION_23	IF_1
0x4002622	            0x7517	                           jne 0x400263b	      1304	diff.c	FUNCTION_23	IF_1
0x4002624	      0xbf00000000	                              mov edi, 0	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4002629	      0xe800000000	                          call 0x400262e	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x400262e	          0x4889c7	                            mov rdi, rax	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4002631	      0xe800000000	                          call 0x4002636	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4002636	      0xe96c080000	                           jmp 0x4002ea7	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x400263b	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x400263f	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4002643	      0xbe32000000	                           mov esi, 0x32	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4002648	          0x4889c7	                            mov rdi, rax	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x400264b	      0xe800000000	                          call 0x4002650	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4002650	            0x85c0	                           test eax, eax	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4002652	     0xf85df070000	                           jne 0x4002e37	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4002658	      0xe800000000	                          call 0x400265d	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x400265d	          0x488b00	                    mov rax, qword [rax]	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4002660	         0xfb655c0	            movzx edx, byte [rbp - 0x40]	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4002664	           0xfb6d2	                           movzx edx, dl	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4002667	          0x4801d2	                            add rdx, rdx	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x400266a	          0x4801d0	                            add rax, rdx	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x400266d	           0xfb700	                   movzx eax, word [rax]	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4002670	           0xfb7c0	                           movzx eax, ax	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4002673	      0x2500080000	                          and eax, 0x800	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4002678	            0x85c0	                           test eax, eax	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x400267a	     0xf84a5070000	                            je 0x4002e25	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4002680	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1322	diff.c	FUNCTION_23	FOR_1
0x4002684	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1322	diff.c	FUNCTION_23	FOR_1
0x400268b	    0x488d8548ffff	                   lea rax, [rbp - 0xb8]	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4002692	          0x4889c7	                            mov rdi, rax	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4002695	      0xe800000000	                          call 0x400269a	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x400269a	        0x488945b0	             mov qword [rbp - 0x50], rax	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x400269e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x40026a5	           0xfb600	                   movzx eax, byte [rax]	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x40026a8	            0x3c2c	                            cmp al, 0x2c	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x40026aa	            0x752a	                           jne 0x40026d6	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x40026ac	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x40026b3	        0x4883c001	                              add rax, 1	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x40026b7	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x40026be	    0x488d8548ffff	                   lea rax, [rbp - 0xb8]	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x40026c5	          0x4889c7	                            mov rdi, rax	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x40026c8	      0xe800000000	                          call 0x40026cd	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x40026cd	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x40026d4	            0xeb0b	                           jmp 0x40026e1	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x40026d6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1330	diff.c	FUNCTION_23	FOR_1	ELSE_1
0x40026da	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1330	diff.c	FUNCTION_23	FOR_1	ELSE_1
0x40026e1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x40026e8	           0xfb600	                   movzx eax, byte [rax]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x40026eb	            0x3c61	                            cmp al, 0x61	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x40026ed	            0x7420	                            je 0x400270f	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x40026ef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x40026f6	           0xfb600	                   movzx eax, byte [rax]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x40026f9	            0x3c63	                            cmp al, 0x63	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x40026fb	            0x7412	                            je 0x400270f	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x40026fd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4002704	           0xfb600	                   movzx eax, byte [rax]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4002707	            0x3c64	                            cmp al, 0x64	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4002709	     0xf851c070000	                           jne 0x4002e2b	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x400270f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1333	diff.c	FUNCTION_23	FOR_1
0x4002716	        0x488d5001	                      lea rdx, [rax + 1]	      1333	diff.c	FUNCTION_23	FOR_1
0x400271a	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      1333	diff.c	FUNCTION_23	FOR_1
0x4002721	           0xfb600	                   movzx eax, byte [rax]	      1333	diff.c	FUNCTION_23	FOR_1
0x4002724	           0xfb6c0	                           movzx eax, al	      1333	diff.c	FUNCTION_23	FOR_1
0x4002727	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      1333	diff.c	FUNCTION_23	FOR_1
0x400272d	    0x488d8548ffff	                   lea rax, [rbp - 0xb8]	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4002734	          0x4889c7	                            mov rdi, rax	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4002737	      0xe800000000	                          call 0x400273c	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x400273c	        0x488945b8	             mov qword [rbp - 0x48], rax	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4002740	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4002747	           0xfb600	                   movzx eax, byte [rax]	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x400274a	            0x3c2c	                            cmp al, 0x2c	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x400274c	            0x752a	                           jne 0x4002778	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x400274e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x4002755	        0x4883c001	                              add rax, 1	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x4002759	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x4002760	    0x488d8548ffff	                   lea rax, [rbp - 0xb8]	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x4002767	          0x4889c7	                            mov rdi, rax	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x400276a	      0xe800000000	                          call 0x400276f	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x400276f	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x4002776	            0xeb0b	                           jmp 0x4002783	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x4002778	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1341	diff.c	FUNCTION_23	FOR_1	ELSE_2
0x400277c	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1341	diff.c	FUNCTION_23	FOR_1	ELSE_2
0x4002783	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x400278a	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x400278e	     0xf8c9d060000	                            jl 0x4002e31	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4002794	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x400279b	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x400279f	     0xf8c8c060000	                            jl 0x4002e31	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x40027a5	    0x83bd44ffffff	           cmp dword [rbp - 0xbc], 0x61 	      1345	diff.c	FUNCTION_23	FOR_1	IF_8
0x40027ac	            0x7516	                           jne 0x40027c4	      1345	diff.c	FUNCTION_23	FOR_1	IF_8
0x40027ae	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1347	diff.c	FUNCTION_23	FOR_1	IF_8
0x40027b2	        0x4883c001	                              add rax, 1	      1347	diff.c	FUNCTION_23	FOR_1	IF_8
0x40027b6	        0x48894588	             mov qword [rbp - 0x78], rax	      1347	diff.c	FUNCTION_23	FOR_1	IF_8
0x40027ba	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1348	diff.c	FUNCTION_23	FOR_1	IF_8
0x40027c2	            0xeb1b	                           jmp 0x40027df	      1348	diff.c	FUNCTION_23	FOR_1	IF_8
0x40027c4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1352	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x40027c8	        0x48894588	             mov qword [rbp - 0x78], rax	      1352	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x40027cc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x40027d3	        0x482b45b0	             sub rax, qword [rbp - 0x50]	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x40027d7	        0x4883c001	                              add rax, 1	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x40027db	        0x48894598	             mov qword [rbp - 0x68], rax	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x40027df	    0x83bd44ffffff	           cmp dword [rbp - 0xbc], 0x64 	      1355	diff.c	FUNCTION_23	FOR_1	IF_9
0x40027e6	            0x7516	                           jne 0x40027fe	      1355	diff.c	FUNCTION_23	FOR_1	IF_9
0x40027e8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1357	diff.c	FUNCTION_23	FOR_1	IF_9
0x40027ec	        0x4883c001	                              add rax, 1	      1357	diff.c	FUNCTION_23	FOR_1	IF_9
0x40027f0	        0x48894590	             mov qword [rbp - 0x70], rax	      1357	diff.c	FUNCTION_23	FOR_1	IF_9
0x40027f4	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1358	diff.c	FUNCTION_23	FOR_1	IF_9
0x40027fc	            0xeb71	                           jmp 0x400286f	      1358	diff.c	FUNCTION_23	FOR_1	IF_9
0x40027fe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1362	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4002802	        0x48894590	             mov qword [rbp - 0x70], rax	      1362	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4002806	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x400280d	        0x482b45b8	             sub rax, qword [rbp - 0x48]	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4002811	        0x4883c001	                              add rax, 1	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4002815	        0x488945a0	             mov qword [rbp - 0x60], rax	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4002819	            0xeb54	                           jmp 0x400286f	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x400281b	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4002822	            0x7422	                            je 0x4002846	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4002824	    0x8b8d28ffffff	             mov ecx, dword [rbp - 0xd8]	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_9
0x400282a	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_9
0x4002830	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_9
0x4002837	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_9
0x400283e	          0x4889c7	                            mov rdi, rax	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_9
0x4002841	      0xe877060000	                call sym.diff_copy_entry	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_9
0x4002846	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1373	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x400284d	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1373	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4002854	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x400285b	          0x488b00	                    mov rax, qword [rax]	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x400285e	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4002865	    0xc78540ffffff	               mov dword [rbp - 0xc0], 1	      1375	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x400286f	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4002877	            0x743b	                            je 0x40028b4	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4002879	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4002880	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4002886	          0x4863d2	                         movsxd rdx, edx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4002889	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x400288e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4002895	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x400289b	          0x4863c9	                         movsxd rcx, ecx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x400289e	        0x4883c108	                              add rcx, 8	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x40028a2	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x40028a7	          0x4801d0	                            add rax, rdx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x40028aa	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x40028ae	     0xf8c67ffffff	                            jl 0x400281b	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x40028b4	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1378	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028bc	     0xf844e040000	                            je 0x4002d10	      1378	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028c2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028c9	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028cf	          0x4863d2	                         movsxd rdx, edx	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028d2	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028d7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028de	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028e4	          0x4863c9	                         movsxd rcx, ecx	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028e7	        0x4883c108	                              add rcx, 8	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028eb	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028f0	          0x4801d0	                            add rax, rdx	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028f3	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028f7	     0xf8c13040000	                            jl 0x4002d10	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40028fd	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002901	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002905	        0x488d0c02	                    lea rcx, [rdx + rax]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002909	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002910	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002916	          0x4863d2	                         movsxd rdx, edx	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002919	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x400291e	          0x4839c1	                            cmp rcx, rax	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002921	     0xf8ce9030000	                            jl 0x4002d10	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002927	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x400292e	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4002935	            0xeb3a	                           jmp 0x4002971	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4002937	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x400293b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x400293f	        0x488d0c02	                    lea rcx, [rdx + rax]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x4002943	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x400294a	          0x488b00	                    mov rax, qword [rax]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x400294d	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x4002953	          0x4863d2	                         movsxd rdx, edx	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x4002956	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x400295b	          0x4839c1	                            cmp rcx, rax	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x400295e	            0x7c22	                            jl 0x4002982	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x4002960	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4002967	          0x488b00	                    mov rax, qword [rax]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x400296a	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4002971	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4002978	          0x488b00	                    mov rax, qword [rax]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x400297b	          0x4885c0	                           test rax, rax	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x400297e	            0x75b7	                           jne 0x4002937	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4002980	            0xeb01	                           jmp 0x4002983	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4002982	              0x90	                                     nop	      1386	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x4002983	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x400298a	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002990	          0x4863d2	                         movsxd rdx, edx	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002993	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002998	        0x482b4588	             sub rax, qword [rbp - 0x78]	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x400299c	        0x48894580	             mov qword [rbp - 0x80], rax	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x40029a0	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1391	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x40029a5	     0xf8eac000000	                           jle 0x4002a57	      1391	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x40029ab	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x40029b1	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x40029b7	            0xeb55	                           jmp 0x4002a0e	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x40029b9	    0x488b05000000	            mov rax, qword [0x040029c0] 	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029c0	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029c6	          0x4863d2	                         movsxd rdx, edx	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029c9	        0x4883c20c	                            add rdx, 0xc	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029cd	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029d1	          0x4885c0	                           test rax, rax	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029d4	            0x7431	                            je 0x4002a07	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029d6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029dd	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029e3	          0x4863d2	                         movsxd rdx, edx	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029e6	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029eb	        0x482b4580	             sub rax, qword [rbp - 0x80]	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029ef	          0x4889c1	                            mov rcx, rax	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029f2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029f9	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x40029ff	          0x4863d2	                         movsxd rdx, edx	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4002a02	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4002a07	    0x83853cffffff	               add dword [rbp - 0xc4], 1	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002a0e	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002a14	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002a1a	            0x7c9d	                            jl 0x40029b9	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002a1c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a23	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a29	          0x4863d2	                         movsxd rdx, edx	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a2c	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a30	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a35	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a3c	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a42	          0x4863d2	                         movsxd rdx, edx	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a45	        0x488d4a08	                      lea rcx, [rdx + 8]	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a49	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a4d	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a52	      0xe9ff000000	                           jmp 0x4002b56	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002a57	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a5e	            0x744a	                            je 0x4002aaa	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a60	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a64	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a68	        0x488d0c02	                    lea rcx, [rdx + rax]	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a6c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a73	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a79	          0x4863d2	                         movsxd rdx, edx	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a7c	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a81	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a85	        0x482b4580	             sub rax, qword [rbp - 0x80]	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a89	          0x4889c2	                            mov rdx, rax	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a8c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a93	    0x8b8d28ffffff	             mov ecx, dword [rbp - 0xd8]	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a99	          0x4863c9	                         movsxd rcx, ecx	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002a9c	        0x4883c108	                              add rcx, 8	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002aa0	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002aa5	      0xe9ac000000	                           jmp 0x4002b56	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002aaa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002ab1	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002ab7	          0x4863d2	                         movsxd rdx, edx	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002aba	        0x4883c208	                              add rdx, 8	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002abe	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002ac3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002ac7	        0x482b4598	             sub rax, qword [rbp - 0x68]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002acb	          0x4889c6	                            mov rsi, rax	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002ace	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002ad5	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002adb	          0x4863d2	                         movsxd rdx, edx	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002ade	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002ae3	          0x4801c6	                            add rsi, rax	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002ae6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002aed	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002af3	          0x4863d2	                         movsxd rdx, edx	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002af6	        0x4883c208	                              add rdx, 8	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002afa	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002aff	        0x488d3c06	                    lea rdi, [rsi + rax]	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b03	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b0a	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b10	          0x4863d2	                         movsxd rdx, edx	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b13	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b18	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b1f	    0x8bb52cffffff	             mov esi, dword [rbp - 0xd4]	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b25	          0x4863f6	                         movsxd rsi, esi	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b28	        0x4883c608	                              add rsi, 8	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b2c	      0x488b44f008	       mov rax, qword [rax + rsi*8 + 8] 	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b31	          0x4801d0	                            add rax, rdx	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b34	          0x4829c7	                            sub rdi, rax	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b37	          0x4889f8	                            mov rax, rdi	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b3a	          0x4801c1	                            add rcx, rax	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b3d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b44	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b4a	          0x4863d2	                         movsxd rdx, edx	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b4d	        0x4883c208	                              add rdx, 8	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b51	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4002b56	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b5a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b5e	        0x488d3402	                    lea rsi, [rdx + rax]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b62	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b69	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b6f	          0x4863d2	                         movsxd rdx, edx	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b72	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b77	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b7e	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b84	          0x4863c9	                         movsxd rcx, ecx	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b87	        0x4883c108	                              add rcx, 8	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b8b	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b90	          0x4801d0	                            add rax, rdx	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b93	          0x4829c6	                            sub rsi, rax	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b96	          0x4889f0	                            mov rax, rsi	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b99	        0x48894580	             mov qword [rbp - 0x80], rax	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002b9d	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4002ba2	            0x794a	                           jns 0x4002bee	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4002ba4	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      1419	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bab	            0x7439	                            je 0x4002be6	      1419	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bad	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bb4	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bba	          0x4863d2	                         movsxd rdx, edx	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bbd	        0x4883c208	                              add rdx, 8	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bc1	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bc6	        0x482b4580	             sub rax, qword [rbp - 0x80]	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bca	          0x4889c2	                            mov rdx, rax	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bcd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bd4	    0x8b8d28ffffff	             mov ecx, dword [rbp - 0xd8]	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bda	          0x4863c9	                         movsxd rcx, ecx	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002bdd	        0x4883c108	                              add rcx, 8	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002be1	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4002be6	    0x48c745800000	               mov qword [rbp - 0x80], 0	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4002bee	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4002bf4	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4002bfa	      0xe992000000	                           jmp 0x4002c91	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4002bff	    0x488b05000000	            mov rax, qword [0x04002c06] 	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c06	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c0c	          0x4863d2	                         movsxd rdx, edx	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c0f	        0x4883c20c	                            add rdx, 0xc	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c13	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c17	          0x4885c0	                           test rax, rax	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c1a	            0x746e	                            je 0x4002c8a	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c1c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c23	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c29	          0x4863d2	                         movsxd rdx, edx	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c2c	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c31	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c38	    0x8b8d3cffffff	             mov ecx, dword [rbp - 0xc4]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c3e	          0x4863c9	                         movsxd rcx, ecx	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c41	        0x4883c108	                              add rcx, 8	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c45	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c4a	        0x488d0c02	                    lea rcx, [rdx + rax]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c4e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c55	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c5b	          0x4863d2	                         movsxd rdx, edx	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c5e	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c63	          0x4829c1	                            sub rcx, rax	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c66	          0x4889ca	                            mov rdx, rcx	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c69	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c6d	        0x488d0c02	                    lea rcx, [rdx + rax]	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c71	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c78	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c7e	          0x4863d2	                         movsxd rdx, edx	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c81	        0x4883c208	                              add rdx, 8	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c85	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002c8a	    0x83853cffffff	               add dword [rbp - 0xc4], 1	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4002c91	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4002c97	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4002c9d	     0xf8c5cffffff	                            jl 0x4002bff	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4002ca3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1429	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002caa	          0x488b00	                    mov rax, qword [rax]	      1429	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002cad	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1429	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002cb4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002cbb	          0x488b10	                    mov rdx, qword [rax]	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002cbe	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002cc5	          0x488910	                    mov qword [rax], rdx	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002cc8	            0xeb2e	                           jmp 0x4002cf8	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002cca	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1433	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002cd1	          0x488b00	                    mov rax, qword [rax]	      1433	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002cd4	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1433	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002cdb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1434	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2	CALL_10
0x4002ce2	          0x4889c7	                            mov rdi, rax	      1434	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2	CALL_10
0x4002ce5	      0xe800000000	                          call 0x4002cea	      1434	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2	CALL_10
0x4002cea	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1435	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002cf1	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1435	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002cf8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002cff	          0x488b00	                    mov rax, qword [rax]	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002d02	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002d09	            0x75bf	                           jne 0x4002cca	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002d0b	      0xe906010000	                           jmp 0x4002e16	      1378	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002d10	    0x488b05000000	            mov rax, qword [0x04002d17] 	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_11
0x4002d17	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_11
0x4002d1e	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_11
0x4002d25	          0x4889ce	                            mov rsi, rcx	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_11
0x4002d28	          0x4889c7	                            mov rdi, rax	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_11
0x4002d2b	      0xe84adfffff	                 call sym.diff_alloc_new	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_11
0x4002d30	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_11
0x4002d37	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1442	diff.c	FUNCTION_23	FOR_1	ELSE_7	IF_19
0x4002d3f	     0xf8455010000	                            je 0x4002e9a	      1442	diff.c	FUNCTION_23	FOR_1	ELSE_7	IF_19
0x4002d45	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d4c	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d52	          0x4863d2	                         movsxd rdx, edx	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d55	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d59	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d5e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d65	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d6b	          0x4863d2	                         movsxd rdx, edx	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d6e	        0x488d4a08	                      lea rcx, [rdx + 8]	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d72	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d76	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d7b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d82	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d88	          0x4863d2	                         movsxd rdx, edx	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d8b	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d8f	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d94	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002d9b	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002da1	          0x4863d2	                         movsxd rdx, edx	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002da4	        0x488d4a08	                      lea rcx, [rdx + 8]	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002da8	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002dac	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002db1	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002db7	          0x83c001	                              add eax, 1	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002dba	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002dc0	            0xeb46	                           jmp 0x4002e08	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002dc2	    0x488b05000000	            mov rax, qword [0x04002dc9] 	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002dc9	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002dcf	          0x4863d2	                         movsxd rdx, edx	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002dd2	        0x4883c20c	                            add rdx, 0xc	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002dd6	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002dda	          0x4885c0	                           test rax, rax	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002ddd	            0x7422	                            je 0x4002e01	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002ddf	    0x8b8d3cffffff	             mov ecx, dword [rbp - 0xc4]	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002de5	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002deb	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002df2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002df9	          0x4889c7	                            mov rdi, rax	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002dfc	      0xe8bc000000	                call sym.diff_copy_entry	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002e01	    0x83853cffffff	               add dword [rbp - 0xc4], 1	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002e08	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002e0e	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002e14	            0x7cac	                            jl 0x4002dc2	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002e16	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      1457	diff.c	FUNCTION_23	FOR_1
0x4002e20	      0xe916f8ffff	                           jmp 0x400263b	      1457	diff.c	FUNCTION_23	FOR_1
0x4002e25	              0x90	                                     nop	      1315	diff.c	FUNCTION_23	FOR_1	IF_3
0x4002e26	      0xe910f8ffff	                           jmp 0x400263b	      1315	diff.c	FUNCTION_23	FOR_1	IF_3
0x4002e2b	              0x90	                                     nop	      1332	diff.c	FUNCTION_23	FOR_1	IF_5
0x4002e2c	      0xe90af8ffff	                           jmp 0x400263b	      1332	diff.c	FUNCTION_23	FOR_1	IF_5
0x4002e31	              0x90	                                     nop	      1343	diff.c	FUNCTION_23	FOR_1	IF_7
0x4002e32	      0xe904f8ffff	                           jmp 0x400263b	      1458	diff.c	FUNCTION_23	FOR_1
0x4002e37	              0x90	                                     nop	      1313	diff.c	FUNCTION_23	FOR_1	IF_2
0x4002e38	            0xeb54	                           jmp 0x4002e8e	      1461	diff.c	FUNCTION_23	WHILE_3
0x4002e3a	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x4002e41	            0x7422	                            je 0x4002e65	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x4002e43	    0x8b8d28ffffff	             mov ecx, dword [rbp - 0xd8]	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_13
0x4002e49	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_13
0x4002e4f	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_13
0x4002e56	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_13
0x4002e5d	          0x4889c7	                            mov rdi, rax	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_13
0x4002e60	      0xe858000000	                call sym.diff_copy_entry	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_13
0x4002e65	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1465	diff.c	FUNCTION_23	WHILE_3
0x4002e6c	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1465	diff.c	FUNCTION_23	WHILE_3
0x4002e73	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1466	diff.c	FUNCTION_23	WHILE_3
0x4002e7a	          0x488b00	                    mov rax, qword [rax]	      1466	diff.c	FUNCTION_23	WHILE_3
0x4002e7d	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1466	diff.c	FUNCTION_23	WHILE_3
0x4002e84	    0xc78540ffffff	               mov dword [rbp - 0xc0], 1	      1467	diff.c	FUNCTION_23	WHILE_3
0x4002e8e	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1461	diff.c	FUNCTION_23	WHILE_3
0x4002e96	            0x75a2	                           jne 0x4002e3a	      1461	diff.c	FUNCTION_23	WHILE_3
0x4002e98	            0xeb01	                           jmp 0x4002e9b	      1461	diff.c	FUNCTION_23	WHILE_3
0x4002e9a	              0x90	                                     nop	      1443	diff.c	FUNCTION_23	FOR_1	ELSE_7	IF_19
0x4002e9b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1471	diff.c	FUNCTION_23	CALL_14
0x4002e9f	          0x4889c7	                            mov rdi, rax	      1471	diff.c	FUNCTION_23	CALL_14
0x4002ea2	      0xe800000000	                          call 0x4002ea7	      1471	diff.c	FUNCTION_23	CALL_14
0x4002ea7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1472	diff.c	FUNCTION_23
0x4002eab	    0x644833042528	                xor rax, qword fs:[0x28]	      1472	diff.c	FUNCTION_23
0x4002eb4	            0x7405	                            je 0x4002ebb	      1472	diff.c	FUNCTION_23
0x4002eb6	      0xe800000000	                          call 0x4002ebb	      1472	diff.c	FUNCTION_23
0x4002ebb	              0xc9	                                   leave	      1472	diff.c	FUNCTION_23
0x4002ebc	              0xc3	                                     ret	      1472	diff.c	FUNCTION_23
ex_diffpatch	WHILE,0:SWITCH,0:ELSE,4:functions,0:IF,20:CALL,56:DO,0:FOR,0	381
0x40017b6	              0x55	                                push rbp	       890	diff.c	FUNCTION_17
0x40017b7	          0x4889e5	                            mov rbp, rsp	       890	diff.c	FUNCTION_17
0x40017ba	            0x4154	                                push r12	       890	diff.c	FUNCTION_17
0x40017bc	              0x53	                                push rbx	       890	diff.c	FUNCTION_17
0x40017bd	    0x4881ec001100	                         sub rsp, 0x1100	       890	diff.c	FUNCTION_17
0x40017c4	    0x4889bdf8eeff	           mov qword [rbp - 0x1108], rdi	       890	diff.c	FUNCTION_17
0x40017cb	    0x64488b042528	                mov rax, qword fs:[0x28]	       890	diff.c	FUNCTION_17
0x40017d4	        0x488945e8	             mov qword [rbp - 0x18], rax	       890	diff.c	FUNCTION_17
0x40017d8	            0x31c0	                            xor eax, eax	       890	diff.c	FUNCTION_17
0x40017da	    0x48c78508efff	             mov qword [rbp - 0x10f8], 0	       893	diff.c	FUNCTION_17
0x40017e5	    0x488b05000000	            mov rax, qword [0x040017ec] 	       895	diff.c	FUNCTION_17
0x40017ec	    0x48898530efff	           mov qword [rbp - 0x10d0], rax	       895	diff.c	FUNCTION_17
0x40017f3	    0x48c78510efff	             mov qword [rbp - 0x10f0], 0	       896	diff.c	FUNCTION_17
0x40017fe	    0x48c78518efff	             mov qword [rbp - 0x10e8], 0	       899	diff.c	FUNCTION_17
0x4001809	    0x48c78520efff	             mov qword [rbp - 0x10e0], 0	       902	diff.c	FUNCTION_17
0x4001814	    0x8b0500000000	            mov eax, dword [0x0400181a] 	       903	diff.c	FUNCTION_17
0x400181a	    0x898504efffff	           mov dword [rbp - 0x10fc], eax	       903	diff.c	FUNCTION_17
0x4001820	    0x48c78528efff	             mov qword [rbp - 0x10d8], 0	       906	diff.c	FUNCTION_17
0x400182b	    0x8b0500000000	            mov eax, dword [0x04001831] 	       909	diff.c	FUNCTION_17	IF_1
0x4001831	            0x85c0	                           test eax, eax	       909	diff.c	FUNCTION_17	IF_1
0x4001833	            0x7479	                            je 0x40018ae	       909	diff.c	FUNCTION_17	IF_1
0x4001835	      0xbf00000000	                              mov edi, 0	       913	diff.c	FUNCTION_17	IF_1	CALL_3
0x400183a	      0xe800000000	                          call 0x400183f	       913	diff.c	FUNCTION_17	IF_1	CALL_3
0x400183f	          0x4989c4	                            mov r12, rax	       913	diff.c	FUNCTION_17	IF_1	CALL_3
0x4001842	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x4001849	          0x488b18	                    mov rbx, qword [rax]	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x400184c	      0xbf00000000	                              mov edi, 0	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x4001851	      0xe800000000	                          call 0x4001856	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x4001856	        0x4883ec08	                              sub rsp, 8	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x400185a	            0x6a00	                                  push 0	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x400185c	          0x4d89e1	                             mov r9, r12	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x400185f	    0x41b800000000	                              mov r8d, 0	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x4001865	      0xb900000000	                              mov ecx, 0	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x400186a	          0x4889da	                            mov rdx, rbx	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x400186d	          0x4889c6	                            mov rsi, rax	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x4001870	      0xbf00000000	                              mov edi, 0	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x4001875	      0xe800000000	                          call 0x400187a	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x400187a	        0x4883c410	                           add rsp, 0x10	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x400187e	    0x48898520efff	           mov qword [rbp - 0x10e0], rax	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x4001885	    0x4883bd20efff	             cmp qword [rbp - 0x10e0], 0	       914	diff.c	FUNCTION_17	IF_1	IF_2
0x400188d	     0xf8418060000	                            je 0x4001eab	       914	diff.c	FUNCTION_17	IF_1	IF_2
0x4001893	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	       916	diff.c	FUNCTION_17	IF_1
0x400189a	    0x488b9520efff	           mov rdx, qword [rbp - 0x10e0]	       916	diff.c	FUNCTION_17	IF_1
0x40018a1	          0x488910	                    mov qword [rax], rdx	       916	diff.c	FUNCTION_17	IF_1
0x40018a4	    0xc70500000000	               mov dword [0x040018ae], 0	       917	diff.c	FUNCTION_17	IF_1
0x40018ae	      0xbe00000000	                              mov esi, 0	       922	diff.c	FUNCTION_17	CALL_4
0x40018b3	      0xbf6f000000	                           mov edi, 0x6f	       922	diff.c	FUNCTION_17	CALL_4
0x40018b8	      0xe800000000	                          call 0x40018bd	       922	diff.c	FUNCTION_17	CALL_4
0x40018bd	    0x48898538efff	           mov qword [rbp - 0x10c8], rax	       922	diff.c	FUNCTION_17	CALL_4
0x40018c4	      0xbe00000000	                              mov esi, 0	       923	diff.c	FUNCTION_17	CALL_5
0x40018c9	      0xbf6e000000	                           mov edi, 0x6e	       923	diff.c	FUNCTION_17	CALL_5
0x40018ce	      0xe800000000	                          call 0x40018d3	       923	diff.c	FUNCTION_17	CALL_5
0x40018d3	    0x48898540efff	           mov qword [rbp - 0x10c0], rax	       923	diff.c	FUNCTION_17	CALL_5
0x40018da	    0x4883bd38efff	             cmp qword [rbp - 0x10c8], 0	       924	diff.c	FUNCTION_17	IF_3
0x40018e2	     0xf841a050000	                            je 0x4001e02	       924	diff.c	FUNCTION_17	IF_3
0x40018e8	    0x4883bd40efff	             cmp qword [rbp - 0x10c0], 0	       924	diff.c	FUNCTION_17	IF_3
0x40018f0	     0xf840c050000	                            je 0x4001e02	       924	diff.c	FUNCTION_17	IF_3
0x40018f6	    0x488b05000000	            mov rax, qword [0x040018fd] 	       929	diff.c	FUNCTION_17	IF_4
0x40018fd	          0x488b10	                    mov rdx, qword [rax]	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x4001900	    0x488b05000000	            mov rax, qword [0x04001907] 	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x4001907	    0x488bb538efff	           mov rsi, qword [rbp - 0x10c8]	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x400190e	            0x6a01	                                  push 1	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x4001910	            0x6a00	                                  push 0	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x4001912	            0x6a00	                                  push 0	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x4001914	            0x6a00	                                  push 0	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x4001916	    0x41b900000000	                              mov r9d, 0	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x400191c	          0x4989d0	                             mov r8, rdx	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x400191f	      0xb901000000	                              mov ecx, 1	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x4001924	      0xba00000000	                              mov edx, 0	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x4001929	          0x4889c7	                            mov rdi, rax	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x400192c	      0xe800000000	                          call 0x4001931	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x4001931	        0x4883c420	                           add rsp, 0x20	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x4001935	            0x85c0	                           test eax, eax	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x4001937	     0xf84be040000	                            je 0x4001dfb	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x400193d	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	       935	diff.c	FUNCTION_17	CALL_7
0x4001944	          0x488b00	                    mov rax, qword [rax]	       935	diff.c	FUNCTION_17	CALL_7
0x4001947	      0xbe00000000	                              mov esi, 0	       935	diff.c	FUNCTION_17	CALL_7
0x400194c	          0x4889c7	                            mov rdi, rax	       935	diff.c	FUNCTION_17	CALL_7
0x400194f	      0xe800000000	                          call 0x4001954	       935	diff.c	FUNCTION_17	CALL_7
0x4001954	    0x48898518efff	           mov qword [rbp - 0x10e8], rax	       935	diff.c	FUNCTION_17	CALL_7
0x400195b	    0x4883bd18efff	             cmp qword [rbp - 0x10e8], 0	       937	diff.c	FUNCTION_17	CALL_8
0x4001963	            0x750c	                           jne 0x4001971	       937	diff.c	FUNCTION_17	CALL_8
0x4001965	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	       937	diff.c	FUNCTION_17	CALL_8
0x400196c	          0x488b00	                    mov rax, qword [rax]	       937	diff.c	FUNCTION_17	CALL_8
0x400196f	            0xeb07	                           jmp 0x4001978	       937	diff.c	FUNCTION_17	CALL_8
0x4001971	    0x488b8518efff	           mov rax, qword [rbp - 0x10e8]	       937	diff.c	FUNCTION_17	CALL_8
0x4001978	      0xba01000000	                              mov edx, 1	       937	diff.c	FUNCTION_17	CALL_8
0x400197d	      0xbe01000000	                              mov esi, 1	       937	diff.c	FUNCTION_17	CALL_8
0x4001982	          0x4889c7	                            mov rdi, rax	       937	diff.c	FUNCTION_17	CALL_8
0x4001985	      0xe800000000	                          call 0x400198a	       937	diff.c	FUNCTION_17	CALL_8
0x400198a	    0x48898528efff	           mov qword [rbp - 0x10d8], rax	       937	diff.c	FUNCTION_17	CALL_8
0x4001991	    0x4883bd28efff	             cmp qword [rbp - 0x10d8], 0	       942	diff.c	FUNCTION_17	IF_5
0x4001999	     0xf845f040000	                            je 0x4001dfe	       942	diff.c	FUNCTION_17	IF_5
0x400199f	    0x488b8538efff	           mov rax, qword [rbp - 0x10c8]	       944	diff.c	FUNCTION_17	CALL_11
0x40019a6	          0x4889c7	                            mov rdi, rax	       944	diff.c	FUNCTION_17	CALL_11
0x40019a9	      0xe800000000	                          call 0x40019ae	       944	diff.c	FUNCTION_17	CALL_11
0x40019ae	          0x4889c3	                            mov rbx, rax	       944	diff.c	FUNCTION_17	CALL_11
0x40019b1	    0x488b8528efff	           mov rax, qword [rbp - 0x10d8]	       944	diff.c	FUNCTION_17	CALL_11
0x40019b8	          0x4889c7	                            mov rdi, rax	       944	diff.c	FUNCTION_17	CALL_11
0x40019bb	      0xe800000000	                          call 0x40019c0	       944	diff.c	FUNCTION_17	CALL_11
0x40019c0	          0x4801c3	                            add rbx, rax	       944	diff.c	FUNCTION_17	CALL_11
0x40019c3	    0x488b8540efff	           mov rax, qword [rbp - 0x10c0]	       944	diff.c	FUNCTION_17	CALL_11
0x40019ca	          0x4889c7	                            mov rdi, rax	       944	diff.c	FUNCTION_17	CALL_11
0x40019cd	      0xe800000000	                          call 0x40019d2	       944	diff.c	FUNCTION_17	CALL_11
0x40019d2	          0x4801d8	                            add rax, rbx	       944	diff.c	FUNCTION_17	CALL_11
0x40019d5	        0x4883c010	                           add rax, 0x10	       944	diff.c	FUNCTION_17	CALL_11
0x40019d9	    0x48898548efff	           mov qword [rbp - 0x10b8], rax	       944	diff.c	FUNCTION_17	CALL_11
0x40019e0	    0x488b8548efff	           mov rax, qword [rbp - 0x10b8]	       945	diff.c	FUNCTION_17	CALL_12
0x40019e7	            0x89c7	                            mov edi, eax	       945	diff.c	FUNCTION_17	CALL_12
0x40019e9	      0xe800000000	                          call 0x40019ee	       945	diff.c	FUNCTION_17	CALL_12
0x40019ee	    0x48898508efff	           mov qword [rbp - 0x10f8], rax	       945	diff.c	FUNCTION_17	CALL_12
0x40019f5	    0x4883bd08efff	             cmp qword [rbp - 0x10f8], 0	       946	diff.c	FUNCTION_17	IF_6
0x40019fd	     0xf84fe030000	                            je 0x4001e01	       946	diff.c	FUNCTION_17	IF_6
0x4001a03	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x4001a0a	      0xbe00100000	                         mov esi, 0x1000	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x4001a0f	          0x4889c7	                            mov rdi, rax	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x4001a12	      0xe800000000	                          call 0x4001a17	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x4001a17	          0x83f801	                              cmp eax, 1	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x4001a1a	            0x7513	                           jne 0x4001a2f	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x4001a1c	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x4001a23	          0x4889c7	                            mov rdi, rax	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x4001a26	      0xe800000000	                          call 0x4001a2b	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x4001a2b	            0x85c0	                           test eax, eax	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x4001a2d	            0x7409	                            je 0x4001a38	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x4001a2f	    0xc685e0efffff	              mov byte [rbp - 0x1020], 0	       956	diff.c	FUNCTION_17	IF_7
0x4001a36	            0xeb3d	                           jmp 0x4001a75	       956	diff.c	FUNCTION_17	IF_7
0x4001a38	    0x488b05000000	            mov rax, qword [0x04001a3f] 	       960	diff.c	FUNCTION_17	ELSE_1	IF_8
0x4001a3f	          0x4885c0	                           test rax, rax	       960	diff.c	FUNCTION_17	ELSE_1	IF_8
0x4001a42	            0x7417	                            je 0x4001a5b	       960	diff.c	FUNCTION_17	ELSE_1	IF_8
0x4001a44	    0x488b05000000	            mov rax, qword [0x04001a4b] 	       961	diff.c	FUNCTION_17	ELSE_1	CALL_15
0x4001a4b	          0x4889c7	                            mov rdi, rax	       961	diff.c	FUNCTION_17	ELSE_1	CALL_15
0x4001a4e	      0xe800000000	                          call 0x4001a53	       961	diff.c	FUNCTION_17	ELSE_1	CALL_15
0x4001a53	    0x890500000000	            mov dword [0x04001a59], eax 	       961	diff.c	FUNCTION_17	ELSE_1	CALL_15
0x4001a59	            0xeb10	                           jmp 0x4001a6b	       961	diff.c	FUNCTION_17	ELSE_1	CALL_15
0x4001a5b	      0xbf00000000	                              mov edi, 0	       964	diff.c	FUNCTION_17	ELSE_1	CALL_16
0x4001a60	      0xe800000000	                          call 0x4001a65	       964	diff.c	FUNCTION_17	ELSE_1	CALL_16
0x4001a65	    0x890500000000	            mov dword [0x04001a6b], eax 	       964	diff.c	FUNCTION_17	ELSE_1	CALL_16
0x4001a6b	      0xbf01000000	                              mov edi, 1	       965	diff.c	FUNCTION_17	ELSE_1	CALL_17
0x4001a70	      0xe800000000	                          call 0x4001a75	       965	diff.c	FUNCTION_17	ELSE_1	CALL_17
0x4001a75	    0x488b05000000	            mov rax, qword [0x04001a7c] 	       970	diff.c	FUNCTION_17	IF_9
0x4001a7c	           0xfb600	                   movzx eax, byte [rax]	       970	diff.c	FUNCTION_17	IF_9
0x4001a7f	            0x84c0	                             test al, al	       970	diff.c	FUNCTION_17	IF_9
0x4001a81	            0x7438	                            je 0x4001abb	       970	diff.c	FUNCTION_17	IF_9
0x4001a83	    0x4883bd18efff	             cmp qword [rbp - 0x10e8], 0	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001a8b	            0x750c	                           jne 0x4001a99	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001a8d	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001a94	          0x488b00	                    mov rax, qword [rax]	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001a97	            0xeb07	                           jmp 0x4001aa0	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001a99	    0x488b8518efff	           mov rax, qword [rbp - 0x10e8]	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001aa0	    0x488b9540efff	           mov rdx, qword [rbp - 0x10c0]	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001aa7	    0x488b8d38efff	           mov rcx, qword [rbp - 0x10c8]	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001aae	          0x4889c6	                            mov rsi, rax	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001ab1	          0x4889cf	                            mov rdi, rcx	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001ab4	      0xe800000000	                          call 0x4001ab9	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001ab9	            0xeb5c	                           jmp 0x4001b17	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x4001abb	    0x488bbd28efff	           mov rdi, qword [rbp - 0x10d8]	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001ac2	    0x488b8d38efff	           mov rcx, qword [rbp - 0x10c8]	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001ac9	    0x488b9540efff	           mov rdx, qword [rbp - 0x10c0]	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001ad0	    0x488bb548efff	           mov rsi, qword [rbp - 0x10b8]	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001ad7	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001ade	          0x4989f9	                             mov r9, rdi	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001ae1	          0x4989c8	                             mov r8, rcx	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001ae4	          0x4889d1	                            mov rcx, rdx	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001ae7	      0xba00000000	                              mov edx, 0	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001aec	          0x4889c7	                            mov rdi, rax	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001aef	      0xb800000000	                              mov eax, 0	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001af4	      0xe800000000	                          call 0x4001af9	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x4001af9	      0xe800000000	                          call 0x4001afe	       984	diff.c	FUNCTION_17	ELSE_3	CALL_20
0x4001afe	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	       985	diff.c	FUNCTION_17	ELSE_3	CALL_21
0x4001b05	      0xbe05000000	                              mov esi, 5	       985	diff.c	FUNCTION_17	ELSE_3	CALL_21
0x4001b0a	          0x4889c7	                            mov rdi, rax	       985	diff.c	FUNCTION_17	ELSE_3	CALL_21
0x4001b0d	      0xe800000000	                          call 0x4001b12	       985	diff.c	FUNCTION_17	ELSE_3	CALL_21
0x4001b12	      0xe800000000	                          call 0x4001b17	       986	diff.c	FUNCTION_17	ELSE_3	CALL_22
0x4001b17	     0xfb685e0efff	          movzx eax, byte [rbp - 0x1020]	       990	diff.c	FUNCTION_17	IF_10
0x4001b1e	            0x84c0	                             test al, al	       990	diff.c	FUNCTION_17	IF_10
0x4001b20	            0x742f	                            je 0x4001b51	       990	diff.c	FUNCTION_17	IF_10
0x4001b22	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       992	diff.c	FUNCTION_17	IF_10	IF_11	CALL_23
0x4001b29	          0x4889c7	                            mov rdi, rax	       992	diff.c	FUNCTION_17	IF_10	IF_11	CALL_23
0x4001b2c	      0xe800000000	                          call 0x4001b31	       992	diff.c	FUNCTION_17	IF_10	IF_11	CALL_23
0x4001b31	            0x85c0	                           test eax, eax	       992	diff.c	FUNCTION_17	IF_10	IF_11	CALL_23
0x4001b33	            0x7412	                            je 0x4001b47	       992	diff.c	FUNCTION_17	IF_10	IF_11	CALL_23
0x4001b35	      0xbf00000000	                              mov edi, 0	       993	diff.c	FUNCTION_17	IF_10	CALL_25
0x4001b3a	      0xe800000000	                          call 0x4001b3f	       993	diff.c	FUNCTION_17	IF_10	CALL_25
0x4001b3f	          0x4889c7	                            mov rdi, rax	       993	diff.c	FUNCTION_17	IF_10	CALL_25
0x4001b42	      0xe800000000	                          call 0x4001b47	       993	diff.c	FUNCTION_17	IF_10	CALL_25
0x4001b47	      0xbf01000000	                              mov edi, 1	       994	diff.c	FUNCTION_17	IF_10	CALL_26
0x4001b4c	      0xe800000000	                          call 0x4001b51	       994	diff.c	FUNCTION_17	IF_10	CALL_26
0x4001b51	      0xbf32000000	                           mov edi, 0x32	       999	diff.c	FUNCTION_17	CALL_27
0x4001b56	      0xe800000000	                          call 0x4001b5b	       999	diff.c	FUNCTION_17	CALL_27
0x4001b5b	    0x488b9540efff	           mov rdx, qword [rbp - 0x10c0]	      1002	diff.c	FUNCTION_17	CALL_28
0x4001b62	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1002	diff.c	FUNCTION_17	CALL_28
0x4001b69	          0x4889d6	                            mov rsi, rdx	      1002	diff.c	FUNCTION_17	CALL_28
0x4001b6c	          0x4889c7	                            mov rdi, rax	      1002	diff.c	FUNCTION_17	CALL_28
0x4001b6f	      0xe800000000	                          call 0x4001b74	      1002	diff.c	FUNCTION_17	CALL_28
0x4001b74	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1003	diff.c	FUNCTION_17	CALL_29
0x4001b7b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1003	diff.c	FUNCTION_17	CALL_29
0x4001b82	          0x4889c2	                            mov rdx, rax	      1003	diff.c	FUNCTION_17	CALL_29
0x4001b85	      0xb800000000	                              mov eax, 0	      1003	diff.c	FUNCTION_17	CALL_29
0x4001b8a	          0x4889d7	                            mov rdi, rdx	      1003	diff.c	FUNCTION_17	CALL_29
0x4001b8d	            0xf2ae	              repne scasb al, byte [rdi]	      1003	diff.c	FUNCTION_17	CALL_29
0x4001b8f	          0x4889c8	                            mov rax, rcx	      1003	diff.c	FUNCTION_17	CALL_29
0x4001b92	          0x48f7d0	                                 not rax	      1003	diff.c	FUNCTION_17	CALL_29
0x4001b95	        0x488d50ff	                      lea rdx, [rax - 1]	      1003	diff.c	FUNCTION_17	CALL_29
0x4001b99	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1003	diff.c	FUNCTION_17	CALL_29
0x4001ba0	          0x4801d0	                            add rax, rdx	      1003	diff.c	FUNCTION_17	CALL_29
0x4001ba3	    0xc7002e6f7269	            mov dword [rax], 0x69726f2e 	      1003	diff.c	FUNCTION_17	CALL_29
0x4001ba9	    0x66c740046700	                mov word [rax + 4], 0x67	      1003	diff.c	FUNCTION_17	CALL_29
0x4001baf	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1004	diff.c	FUNCTION_17	CALL_30
0x4001bb6	          0x4889c7	                            mov rdi, rax	      1004	diff.c	FUNCTION_17	CALL_30
0x4001bb9	      0xe800000000	                          call 0x4001bbe	      1004	diff.c	FUNCTION_17	CALL_30
0x4001bbe	    0x488b9540efff	           mov rdx, qword [rbp - 0x10c0]	      1005	diff.c	FUNCTION_17	CALL_31
0x4001bc5	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1005	diff.c	FUNCTION_17	CALL_31
0x4001bcc	          0x4889d6	                            mov rsi, rdx	      1005	diff.c	FUNCTION_17	CALL_31
0x4001bcf	          0x4889c7	                            mov rdi, rax	      1005	diff.c	FUNCTION_17	CALL_31
0x4001bd2	      0xe800000000	                          call 0x4001bd7	      1005	diff.c	FUNCTION_17	CALL_31
0x4001bd7	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1006	diff.c	FUNCTION_17	CALL_32
0x4001bde	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1006	diff.c	FUNCTION_17	CALL_32
0x4001be5	          0x4889c2	                            mov rdx, rax	      1006	diff.c	FUNCTION_17	CALL_32
0x4001be8	      0xb800000000	                              mov eax, 0	      1006	diff.c	FUNCTION_17	CALL_32
0x4001bed	          0x4889d7	                            mov rdi, rdx	      1006	diff.c	FUNCTION_17	CALL_32
0x4001bf0	            0xf2ae	              repne scasb al, byte [rdi]	      1006	diff.c	FUNCTION_17	CALL_32
0x4001bf2	          0x4889c8	                            mov rax, rcx	      1006	diff.c	FUNCTION_17	CALL_32
0x4001bf5	          0x48f7d0	                                 not rax	      1006	diff.c	FUNCTION_17	CALL_32
0x4001bf8	        0x488d50ff	                      lea rdx, [rax - 1]	      1006	diff.c	FUNCTION_17	CALL_32
0x4001bfc	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1006	diff.c	FUNCTION_17	CALL_32
0x4001c03	          0x4801d0	                            add rax, rdx	      1006	diff.c	FUNCTION_17	CALL_32
0x4001c06	    0xc7002e72656a	            mov dword [rax], 0x6a65722e 	      1006	diff.c	FUNCTION_17	CALL_32
0x4001c0c	        0xc6400400	                   mov byte [rax + 4], 0	      1006	diff.c	FUNCTION_17	CALL_32
0x4001c10	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1007	diff.c	FUNCTION_17	CALL_33
0x4001c17	          0x4889c7	                            mov rdi, rax	      1007	diff.c	FUNCTION_17	CALL_33
0x4001c1a	      0xe800000000	                          call 0x4001c1f	      1007	diff.c	FUNCTION_17	CALL_33
0x4001c1f	    0x488d9550efff	                 lea rdx, [rbp - 0x10b0]	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x4001c26	    0x488b8540efff	           mov rax, qword [rbp - 0x10c0]	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x4001c2d	          0x4889d6	                            mov rsi, rdx	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x4001c30	          0x4889c7	                            mov rdi, rax	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x4001c33	      0xe800000000	                          call 0x4001c38	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x4001c38	            0x85c0	                           test eax, eax	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x4001c3a	            0x780c	                            js 0x4001c48	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x4001c3c	    0x488b8580efff	           mov rax, qword [rbp - 0x1080]	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x4001c43	          0x4885c0	                           test rax, rax	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x4001c46	            0x7517	                           jne 0x4001c5f	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x4001c48	      0xbf00000000	                              mov edi, 0	      1011	diff.c	FUNCTION_17	CALL_36
0x4001c4d	      0xe800000000	                          call 0x4001c52	      1011	diff.c	FUNCTION_17	CALL_36
0x4001c52	          0x4889c7	                            mov rdi, rax	      1011	diff.c	FUNCTION_17	CALL_36
0x4001c55	      0xe800000000	                          call 0x4001c5a	      1011	diff.c	FUNCTION_17	CALL_36
0x4001c5a	      0xe9a3010000	                           jmp 0x4001e02	      1011	diff.c	FUNCTION_17	CALL_36
0x4001c5f	    0x488b05000000	            mov rax, qword [0x04001c66] 	      1014	diff.c	FUNCTION_17	ELSE_4	IF_13
0x4001c66	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1014	diff.c	FUNCTION_17	ELSE_4	IF_13
0x4001c6d	          0x4885c0	                           test rax, rax	      1014	diff.c	FUNCTION_17	ELSE_4	IF_13
0x4001c70	            0x747d	                            je 0x4001cef	      1014	diff.c	FUNCTION_17	ELSE_4	IF_13
0x4001c72	    0x488b05000000	            mov rax, qword [0x04001c79] 	      1017	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_38
0x4001c79	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1017	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_38
0x4001c80	          0x4889c7	                            mov rdi, rax	      1017	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_38
0x4001c83	      0xe800000000	                          call 0x4001c88	      1017	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_38
0x4001c88	          0x83c004	                              add eax, 4	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x4001c8b	            0x89c2	                            mov edx, eax	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x4001c8d	    0x488b05000000	            mov rax, qword [0x04001c94] 	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x4001c94	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x4001c9b	            0x89d6	                            mov esi, edx	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x4001c9d	          0x4889c7	                            mov rdi, rax	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x4001ca0	      0xe800000000	                          call 0x4001ca5	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x4001ca5	    0x48898510efff	           mov qword [rbp - 0x10f0], rax	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x4001cac	    0x4883bd10efff	             cmp qword [rbp - 0x10f0], 0	      1018	diff.c	FUNCTION_17	ELSE_4	IF_13	IF_14
0x4001cb4	            0x7439	                            je 0x4001cef	      1018	diff.c	FUNCTION_17	ELSE_4	IF_13	IF_14
0x4001cb6	    0x488b8510efff	           mov rax, qword [rbp - 0x10f0]	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001cbd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001cc4	          0x4889c2	                            mov rdx, rax	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001cc7	      0xb800000000	                              mov eax, 0	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001ccc	          0x4889d7	                            mov rdi, rdx	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001ccf	            0xf2ae	              repne scasb al, byte [rdi]	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001cd1	          0x4889c8	                            mov rax, rcx	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001cd4	          0x48f7d0	                                 not rax	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001cd7	        0x488d50ff	                      lea rdx, [rax - 1]	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001cdb	    0x488b8510efff	           mov rax, qword [rbp - 0x10f0]	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001ce2	          0x4801d0	                            add rax, rdx	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001ce5	    0xc7002e6e6577	            mov dword [rax], 0x77656e2e 	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001ceb	        0xc6400400	                   mov byte [rax + 4], 0	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x4001cef	    0xc70500000000	               mov dword [0x04001cf9], 1	      1023	diff.c	FUNCTION_17	ELSE_4
0x4001cf9	    0xc70500000000	               mov dword [0x04001d03], 0	      1026	diff.c	FUNCTION_17	ELSE_4
0x4001d03	    0x8b0500000000	            mov eax, dword [0x04001d09] 	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d09	          0x83e010	                           and eax, 0x10	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d0c	            0x85c0	                           test eax, eax	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d0e	            0x7407	                            je 0x4001d17	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d10	      0xb802000000	                              mov eax, 2	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d15	            0xeb05	                           jmp 0x4001d1c	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d17	      0xb800000000	                              mov eax, 0	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d1c	            0x89c6	                            mov esi, eax	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d1e	      0xbf00000000	                              mov edi, 0	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d23	      0xe800000000	                          call 0x4001d28	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d28	            0x85c0	                           test eax, eax	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d2a	     0xf84d2000000	                            je 0x4001e02	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x4001d30	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	      1031	diff.c	FUNCTION_17	ELSE_4	IF_15
0x4001d37	    0xc740209a0100	          mov dword [rax + 0x20], 0x19a 	      1031	diff.c	FUNCTION_17	ELSE_4	IF_15
0x4001d3e	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	      1032	diff.c	FUNCTION_17	ELSE_4	IF_15
0x4001d45	    0x488b9540efff	           mov rdx, qword [rbp - 0x10c0]	      1032	diff.c	FUNCTION_17	ELSE_4	IF_15
0x4001d4c	          0x488910	                    mov qword [rax], rdx	      1032	diff.c	FUNCTION_17	ELSE_4	IF_15
0x4001d4f	    0x488b9530efff	           mov rdx, qword [rbp - 0x10d0]	      1033	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_41
0x4001d56	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	      1033	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_41
0x4001d5d	          0x4889d6	                            mov rsi, rdx	      1033	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_41
0x4001d60	          0x4889c7	                            mov rdi, rax	      1033	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_41
0x4001d63	      0xe800000000	                          call 0x4001d68	      1033	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_41
0x4001d68	    0x488b05000000	            mov rax, qword [0x04001d6f] 	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x4001d6f	    0x483b8530efff	           cmp rax, qword [rbp - 0x10d0]	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x4001d76	     0xf8486000000	                            je 0x4001e02	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x4001d7c	    0x488b8530efff	           mov rax, qword [rbp - 0x10d0]	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x4001d83	          0x4889c7	                            mov rdi, rax	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x4001d86	      0xe800000000	                          call 0x4001d8b	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x4001d8b	            0x85c0	                           test eax, eax	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x4001d8d	            0x7473	                            je 0x4001e02	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x4001d8f	    0x488b05000000	            mov rax, qword [0x04001d96] 	      1039	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_43
0x4001d96	      0xbe01000000	                              mov esi, 1	      1039	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_43
0x4001d9b	          0x4889c7	                            mov rdi, rax	      1039	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_43
0x4001d9e	      0xe800000000	                          call 0x4001da3	      1039	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_43
0x4001da3	    0x488b8530efff	           mov rax, qword [rbp - 0x10d0]	      1040	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_44
0x4001daa	      0xbe01000000	                              mov esi, 1	      1040	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_44
0x4001daf	          0x4889c7	                            mov rdi, rax	      1040	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_44
0x4001db2	      0xe800000000	                          call 0x4001db7	      1040	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_44
0x4001db7	    0x4883bd10efff	             cmp qword [rbp - 0x10f0], 0	      1042	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17
0x4001dbf	            0x7441	                            je 0x4001e02	      1042	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17
0x4001dc1	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	      1045	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17
0x4001dc8	    0x488b9510efff	           mov rdx, qword [rbp - 0x10f0]	      1045	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17
0x4001dcf	          0x488910	                    mov qword [rax], rdx	      1045	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17
0x4001dd2	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	      1046	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_45
0x4001dd9	          0x4889c7	                            mov rdi, rax	      1046	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_45
0x4001ddc	      0xe800000000	                          call 0x4001de1	      1046	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_45
0x4001de1	      0xbf00000000	                              mov edi, 0	      1049	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	IF_18	CALL_46
0x4001de6	      0xe800000000	                          call 0x4001deb	      1049	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	IF_18	CALL_46
0x4001deb	            0x85c0	                           test eax, eax	      1049	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	IF_18	CALL_46
0x4001ded	            0x7413	                            je 0x4001e02	      1049	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	IF_18	CALL_46
0x4001def	      0xbf00000000	                              mov edi, 0	      1050	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_47
0x4001df4	      0xe800000000	                          call 0x4001df9	      1050	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_47
0x4001df9	            0xeb07	                           jmp 0x4001e02	      1050	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_47
0x4001dfb	              0x90	                                     nop	       931	diff.c	FUNCTION_17	IF_4
0x4001dfc	            0xeb04	                           jmp 0x4001e02	       931	diff.c	FUNCTION_17	IF_4
0x4001dfe	              0x90	                                     nop	       943	diff.c	FUNCTION_17	IF_5
0x4001dff	            0xeb01	                           jmp 0x4001e02	       943	diff.c	FUNCTION_17	IF_5
0x4001e01	              0x90	                                     nop	       947	diff.c	FUNCTION_17	IF_6
0x4001e02	    0x4883bd38efff	             cmp qword [rbp - 0x10c8], 0	      1057	diff.c	FUNCTION_17	IF_19
0x4001e0a	            0x740f	                            je 0x4001e1b	      1057	diff.c	FUNCTION_17	IF_19
0x4001e0c	    0x488b8538efff	           mov rax, qword [rbp - 0x10c8]	      1058	diff.c	FUNCTION_17	CALL_48
0x4001e13	          0x4889c7	                            mov rdi, rax	      1058	diff.c	FUNCTION_17	CALL_48
0x4001e16	      0xe800000000	                          call 0x4001e1b	      1058	diff.c	FUNCTION_17	CALL_48
0x4001e1b	    0x488b8538efff	           mov rax, qword [rbp - 0x10c8]	      1059	diff.c	FUNCTION_17	CALL_49
0x4001e22	          0x4889c7	                            mov rdi, rax	      1059	diff.c	FUNCTION_17	CALL_49
0x4001e25	      0xe800000000	                          call 0x4001e2a	      1059	diff.c	FUNCTION_17	CALL_49
0x4001e2a	    0x4883bd40efff	             cmp qword [rbp - 0x10c0], 0	      1060	diff.c	FUNCTION_17	IF_20
0x4001e32	            0x740f	                            je 0x4001e43	      1060	diff.c	FUNCTION_17	IF_20
0x4001e34	    0x488b8540efff	           mov rax, qword [rbp - 0x10c0]	      1061	diff.c	FUNCTION_17	CALL_50
0x4001e3b	          0x4889c7	                            mov rdi, rax	      1061	diff.c	FUNCTION_17	CALL_50
0x4001e3e	      0xe800000000	                          call 0x4001e43	      1061	diff.c	FUNCTION_17	CALL_50
0x4001e43	    0x488b8540efff	           mov rax, qword [rbp - 0x10c0]	      1062	diff.c	FUNCTION_17	CALL_51
0x4001e4a	          0x4889c7	                            mov rdi, rax	      1062	diff.c	FUNCTION_17	CALL_51
0x4001e4d	      0xe800000000	                          call 0x4001e52	      1062	diff.c	FUNCTION_17	CALL_51
0x4001e52	    0x488b8510efff	           mov rax, qword [rbp - 0x10f0]	      1063	diff.c	FUNCTION_17	CALL_52
0x4001e59	          0x4889c7	                            mov rdi, rax	      1063	diff.c	FUNCTION_17	CALL_52
0x4001e5c	      0xe800000000	                          call 0x4001e61	      1063	diff.c	FUNCTION_17	CALL_52
0x4001e61	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1064	diff.c	FUNCTION_17	CALL_53
0x4001e68	          0x4889c7	                            mov rdi, rax	      1064	diff.c	FUNCTION_17	CALL_53
0x4001e6b	      0xe800000000	                          call 0x4001e70	      1064	diff.c	FUNCTION_17	CALL_53
0x4001e70	    0x488b8518efff	           mov rax, qword [rbp - 0x10e8]	      1066	diff.c	FUNCTION_17	CALL_54
0x4001e77	          0x4889c7	                            mov rdi, rax	      1066	diff.c	FUNCTION_17	CALL_54
0x4001e7a	      0xe800000000	                          call 0x4001e7f	      1066	diff.c	FUNCTION_17	CALL_54
0x4001e7f	    0x488b8528efff	           mov rax, qword [rbp - 0x10d8]	      1068	diff.c	FUNCTION_17	CALL_55
0x4001e86	          0x4889c7	                            mov rdi, rax	      1068	diff.c	FUNCTION_17	CALL_55
0x4001e89	      0xe800000000	                          call 0x4001e8e	      1068	diff.c	FUNCTION_17	CALL_55
0x4001e8e	    0x488b8520efff	           mov rax, qword [rbp - 0x10e0]	      1070	diff.c	FUNCTION_17	CALL_56
0x4001e95	          0x4889c7	                            mov rdi, rax	      1070	diff.c	FUNCTION_17	CALL_56
0x4001e98	      0xe800000000	                          call 0x4001e9d	      1070	diff.c	FUNCTION_17	CALL_56
0x4001e9d	    0x8b8504efffff	           mov eax, dword [rbp - 0x10fc]	      1071	diff.c	FUNCTION_17
0x4001ea3	    0x890500000000	            mov dword [0x04001ea9], eax 	      1071	diff.c	FUNCTION_17
0x4001ea9	            0xeb01	                           jmp 0x4001eac	      1071	diff.c	FUNCTION_17
0x4001eab	              0x90	                                     nop	       915	diff.c	FUNCTION_17	IF_1	IF_2
0x4001eac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1073	diff.c	FUNCTION_17
0x4001eb0	    0x644833042528	                xor rax, qword fs:[0x28]	      1073	diff.c	FUNCTION_17
0x4001eb9	            0x7405	                            je 0x4001ec0	      1073	diff.c	FUNCTION_17
0x4001ebb	      0xe800000000	                          call 0x4001ec0	      1073	diff.c	FUNCTION_17
0x4001ec0	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      1073	diff.c	FUNCTION_17
0x4001ec4	              0x5b	                                 pop rbx	      1073	diff.c	FUNCTION_17
0x4001ec5	            0x415c	                                 pop r12	      1073	diff.c	FUNCTION_17
0x4001ec7	              0x5d	                                 pop rbp	      1073	diff.c	FUNCTION_17
0x4001ec8	              0xc3	                                     ret	      1073	diff.c	FUNCTION_17
diff_buf_idx_tp	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,1:CALL,0:DO,0:FOR,1	21
0x40002d8	              0x55	                                push rbp	       180	diff.c	FUNCTION_6
0x40002d9	          0x4889e5	                            mov rbp, rsp	       180	diff.c	FUNCTION_6
0x40002dc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       180	diff.c	FUNCTION_6
0x40002e0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       180	diff.c	FUNCTION_6
0x40002e4	    0xc745fc000000	                  mov dword [rbp - 4], 0	       183	diff.c	FUNCTION_6	FOR_1
0x40002eb	            0xeb1c	                           jmp 0x4000309	       183	diff.c	FUNCTION_6	FOR_1
0x40002ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40002f1	          0x8b55fc	                mov edx, dword [rbp - 4]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40002f4	          0x4863d2	                         movsxd rdx, edx	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40002f7	        0x4883c20c	                            add rdx, 0xc	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40002fb	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40002ff	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4000303	            0x740c	                            je 0x4000311	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4000305	        0x8345fc01	                  add dword [rbp - 4], 1	       183	diff.c	FUNCTION_6	FOR_1
0x4000309	        0x837dfc07	                  cmp dword [rbp - 4], 7	       183	diff.c	FUNCTION_6	FOR_1
0x400030d	            0x7ede	                           jle 0x40002ed	       183	diff.c	FUNCTION_6	FOR_1
0x400030f	            0xeb01	                           jmp 0x4000312	       183	diff.c	FUNCTION_6	FOR_1
0x4000311	              0x90	                                     nop	       185	diff.c	FUNCTION_6	FOR_1	IF_1
0x4000312	          0x8b45fc	                mov eax, dword [rbp - 4]	       186	diff.c	FUNCTION_6
0x4000315	              0x5d	                                 pop rbp	       187	diff.c	FUNCTION_6
0x4000316	              0xc3	                                     ret	       187	diff.c	FUNCTION_6
diff_check	WHILE,0:SWITCH,0:ELSE,1:functions,0:IF,17:CALL,4:DO,0:FOR,4	223
0x4002fd2	              0x55	                                push rbp	      1522	diff.c	FUNCTION_26
0x4002fd3	          0x4889e5	                            mov rbp, rsp	      1522	diff.c	FUNCTION_26
0x4002fd6	        0x4883ec40	                           sub rsp, 0x40	      1522	diff.c	FUNCTION_26
0x4002fda	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1522	diff.c	FUNCTION_26
0x4002fde	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1522	diff.c	FUNCTION_26
0x4002fe2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1527	diff.c	FUNCTION_26
0x4002fe6	        0x488b4008	                mov rax, qword [rax + 8]	      1527	diff.c	FUNCTION_26
0x4002fea	        0x488945f8	                mov qword [rbp - 8], rax	      1527	diff.c	FUNCTION_26
0x4002fee	    0x488b05000000	            mov rax, qword [0x04002ff5] 	      1530	diff.c	FUNCTION_26	IF_1
0x4002ff5	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1530	diff.c	FUNCTION_26	IF_1
0x4002ffb	            0x85c0	                           test eax, eax	      1530	diff.c	FUNCTION_26	IF_1
0x4002ffd	            0x740a	                            je 0x4003009	      1530	diff.c	FUNCTION_26	IF_1
0x4002fff	      0xbf00000000	                              mov edi, 0	      1531	diff.c	FUNCTION_26	CALL_1
0x4003004	      0xe800000000	                          call 0x4003009	      1531	diff.c	FUNCTION_26	CALL_1
0x4003009	    0x488b05000000	            mov rax, qword [0x04003010] 	      1533	diff.c	FUNCTION_26	IF_2
0x4003010	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1533	diff.c	FUNCTION_26	IF_2
0x4003014	          0x4885c0	                           test rax, rax	      1533	diff.c	FUNCTION_26	IF_2
0x4003017	            0x740e	                            je 0x4003027	      1533	diff.c	FUNCTION_26	IF_2
0x4003019	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1533	diff.c	FUNCTION_26	IF_2
0x400301d	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1533	diff.c	FUNCTION_26	IF_2
0x4003023	            0x85c0	                           test eax, eax	      1533	diff.c	FUNCTION_26	IF_2
0x4003025	            0x750a	                           jne 0x4003031	      1533	diff.c	FUNCTION_26	IF_2
0x4003027	      0xb800000000	                              mov eax, 0	      1534	diff.c	FUNCTION_26	IF_2
0x400302c	      0xe9e9020000	                           jmp 0x400331a	      1534	diff.c	FUNCTION_26	IF_2
0x4003031	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1537	diff.c	FUNCTION_26	IF_3
0x4003036	            0x7e11	                           jle 0x4003049	      1537	diff.c	FUNCTION_26	IF_3
0x4003038	        0x488b45f8	                mov rax, qword [rbp - 8]	      1537	diff.c	FUNCTION_26	IF_3
0x400303c	          0x488b00	                    mov rax, qword [rax]	      1537	diff.c	FUNCTION_26	IF_3
0x400303f	        0x4883c001	                              add rax, 1	      1537	diff.c	FUNCTION_26	IF_3
0x4003043	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1537	diff.c	FUNCTION_26	IF_3
0x4003047	            0x7d0a	                           jge 0x4003053	      1537	diff.c	FUNCTION_26	IF_3
0x4003049	      0xb800000000	                              mov eax, 0	      1538	diff.c	FUNCTION_26	IF_3
0x400304e	      0xe9c7020000	                           jmp 0x400331a	      1538	diff.c	FUNCTION_26	IF_3
0x4003053	        0x488b45f8	                mov rax, qword [rbp - 8]	      1540	diff.c	FUNCTION_26	CALL_2
0x4003057	          0x4889c7	                            mov rdi, rax	      1540	diff.c	FUNCTION_26	CALL_2
0x400305a	      0xe83bd2ffff	                   call sym.diff_buf_idx	      1540	diff.c	FUNCTION_26	CALL_2
0x400305f	          0x8945ec	             mov dword [rbp - 0x14], eax	      1540	diff.c	FUNCTION_26	CALL_2
0x4003062	        0x837dec08	               cmp dword [rbp - 0x14], 8	      1541	diff.c	FUNCTION_26	IF_4
0x4003066	            0x750a	                           jne 0x4003072	      1541	diff.c	FUNCTION_26	IF_4
0x4003068	      0xb800000000	                              mov eax, 0	      1542	diff.c	FUNCTION_26	IF_4
0x400306d	      0xe9a8020000	                           jmp 0x400331a	      1542	diff.c	FUNCTION_26	IF_4
0x4003072	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4003076	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400307a	    0x41b900000000	                              mov r9d, 0	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4003080	    0x41b801000000	                              mov r8d, 1	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4003086	      0xb900000000	                              mov ecx, 0	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400308b	      0xba00000000	                              mov edx, 0	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4003090	          0x4889c7	                            mov rdi, rax	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4003093	      0xe800000000	                          call 0x4003098	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4003098	            0x85c0	                           test eax, eax	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400309a	            0x740a	                            je 0x40030a6	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400309c	      0xb800000000	                              mov eax, 0	      1547	diff.c	FUNCTION_26	IF_5
0x40030a1	      0xe974020000	                           jmp 0x400331a	      1547	diff.c	FUNCTION_26	IF_5
0x40030a6	    0x488b05000000	            mov rax, qword [0x040030ad] 	      1551	diff.c	FUNCTION_26	FOR_1
0x40030ad	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1551	diff.c	FUNCTION_26	FOR_1
0x40030b1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1551	diff.c	FUNCTION_26	FOR_1
0x40030b5	            0xeb36	                           jmp 0x40030ed	      1551	diff.c	FUNCTION_26	FOR_1
0x40030b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030bb	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030be	          0x4863d2	                         movsxd rdx, edx	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030c1	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030ca	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030cd	          0x4863c9	                         movsxd rcx, ecx	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030d0	        0x4883c108	                              add rcx, 8	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030d4	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030d9	          0x4801d0	                            add rax, rdx	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030dc	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030e0	            0x7d14	                           jge 0x40030f6	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030e2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1551	diff.c	FUNCTION_26	FOR_1
0x40030e6	          0x488b00	                    mov rax, qword [rax]	      1551	diff.c	FUNCTION_26	FOR_1
0x40030e9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1551	diff.c	FUNCTION_26	FOR_1
0x40030ed	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1551	diff.c	FUNCTION_26	FOR_1
0x40030f2	            0x75c3	                           jne 0x40030b7	      1551	diff.c	FUNCTION_26	FOR_1
0x40030f4	            0xeb01	                           jmp 0x40030f7	      1551	diff.c	FUNCTION_26	FOR_1
0x40030f6	              0x90	                                     nop	      1553	diff.c	FUNCTION_26	FOR_1	IF_6
0x40030f7	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1554	diff.c	FUNCTION_26	IF_7
0x40030fc	            0x7415	                            je 0x4003113	      1554	diff.c	FUNCTION_26	IF_7
0x40030fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1554	diff.c	FUNCTION_26	IF_7
0x4003102	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1554	diff.c	FUNCTION_26	IF_7
0x4003105	          0x4863d2	                         movsxd rdx, edx	      1554	diff.c	FUNCTION_26	IF_7
0x4003108	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1554	diff.c	FUNCTION_26	IF_7
0x400310d	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1554	diff.c	FUNCTION_26	IF_7
0x4003111	            0x7e0a	                           jle 0x400311d	      1554	diff.c	FUNCTION_26	IF_7
0x4003113	      0xb800000000	                              mov eax, 0	      1555	diff.c	FUNCTION_26	IF_7
0x4003118	      0xe9fd010000	                           jmp 0x400331a	      1555	diff.c	FUNCTION_26	IF_7
0x400311d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1557	diff.c	FUNCTION_26	IF_8
0x4003121	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1557	diff.c	FUNCTION_26	IF_8
0x4003124	          0x4863d2	                         movsxd rdx, edx	      1557	diff.c	FUNCTION_26	IF_8
0x4003127	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1557	diff.c	FUNCTION_26	IF_8
0x400312c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1557	diff.c	FUNCTION_26	IF_8
0x4003130	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1557	diff.c	FUNCTION_26	IF_8
0x4003133	          0x4863c9	                         movsxd rcx, ecx	      1557	diff.c	FUNCTION_26	IF_8
0x4003136	        0x4883c108	                              add rcx, 8	      1557	diff.c	FUNCTION_26	IF_8
0x400313a	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1557	diff.c	FUNCTION_26	IF_8
0x400313f	          0x4801d0	                            add rax, rdx	      1557	diff.c	FUNCTION_26	IF_8
0x4003142	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1557	diff.c	FUNCTION_26	IF_8
0x4003146	     0xf8e36010000	                           jle 0x4003282	      1557	diff.c	FUNCTION_26	IF_8
0x400314c	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1559	diff.c	FUNCTION_26	IF_8
0x4003153	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1564	diff.c	FUNCTION_26	IF_8
0x400315a	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x4003161	      0xe983000000	                           jmp 0x40031e9	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x4003166	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4003169	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400316c	            0x7477	                            je 0x40031e5	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400316e	    0x488b05000000	            mov rax, qword [0x04003175] 	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4003175	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4003178	          0x4863d2	                         movsxd rdx, edx	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400317b	        0x4883c20c	                            add rdx, 0xc	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400317f	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4003183	          0x4885c0	                           test rax, rax	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4003186	            0x745d	                            je 0x40031e5	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4003188	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x400318c	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x400318f	          0x4863d2	                         movsxd rdx, edx	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4003192	        0x4883c208	                              add rdx, 8	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4003196	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x400319b	          0x4885c0	                           test rax, rax	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x400319e	            0x7509	                           jne 0x40031a9	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40031a0	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      1569	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40031a7	            0xeb3c	                           jmp 0x40031e5	      1569	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40031a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031ad	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031b0	          0x4863d2	                         movsxd rdx, edx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031b3	        0x4883c208	                              add rdx, 8	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031b7	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031c0	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031c3	          0x4863c9	                         movsxd rcx, ecx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031c6	        0x4883c108	                              add rcx, 8	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031ca	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031cf	          0x4839c2	                            cmp rdx, rax	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031d2	            0x740a	                            je 0x40031de	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031d4	      0xb8ffffffff	                     mov eax, 0xffffffff	      1573	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031d9	      0xe93c010000	                           jmp 0x400331a	      1573	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40031de	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x40031e5	        0x8345e001	               add dword [rbp - 0x20], 1	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x40031e9	        0x837de007	               cmp dword [rbp - 0x20], 7	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x40031ed	     0xf8e73ffffff	                           jle 0x4003166	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x40031f3	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x40031f7	            0x746f	                            je 0x4003268	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x40031f9	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x4003200	            0xeb60	                           jmp 0x4003262	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x4003202	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4003205	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4003208	            0x7454	                            je 0x400325e	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400320a	    0x488b05000000	            mov rax, qword [0x04003211] 	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4003211	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4003214	          0x4863d2	                         movsxd rdx, edx	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4003217	        0x4883c20c	                            add rdx, 0xc	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400321b	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400321f	          0x4885c0	                           test rax, rax	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4003222	            0x743a	                            je 0x400325e	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4003224	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4003228	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400322b	          0x4863d2	                         movsxd rdx, edx	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400322e	        0x4883c208	                              add rdx, 8	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4003232	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4003237	          0x4885c0	                           test rax, rax	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400323a	            0x7422	                            je 0x400325e	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400323c	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400323f	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4003242	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4003246	            0x89ce	                            mov esi, ecx	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4003248	          0x4889c7	                            mov rdi, rax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400324b	      0xe8cc000000	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4003250	            0x85c0	                           test eax, eax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4003252	            0x750a	                           jne 0x400325e	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4003254	      0xb8ffffffff	                     mov eax, 0xffffffff	      1585	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14
0x4003259	      0xe9bc000000	                           jmp 0x400331a	      1585	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14
0x400325e	        0x8345e001	               add dword [rbp - 0x20], 1	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x4003262	        0x837de007	               cmp dword [rbp - 0x20], 7	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x4003266	            0x7e9a	                           jle 0x4003202	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x4003268	        0x837de800	               cmp dword [rbp - 0x18], 0	      1592	diff.c	FUNCTION_26	IF_8	IF_15
0x400326c	            0x750a	                           jne 0x4003278	      1592	diff.c	FUNCTION_26	IF_8	IF_15
0x400326e	      0xb800000000	                              mov eax, 0	      1593	diff.c	FUNCTION_26	IF_8	IF_15
0x4003273	      0xe9a2000000	                           jmp 0x400331a	      1593	diff.c	FUNCTION_26	IF_8	IF_15
0x4003278	      0xb8feffffff	                     mov eax, 0xfffffffe	      1594	diff.c	FUNCTION_26	IF_8
0x400327d	      0xe998000000	                           jmp 0x400331a	      1594	diff.c	FUNCTION_26	IF_8
0x4003282	    0x8b0500000000	            mov eax, dword [0x04003288] 	      1598	diff.c	FUNCTION_26	IF_16
0x4003288	          0x83e001	                              and eax, 1	      1598	diff.c	FUNCTION_26	IF_16
0x400328b	            0x85c0	                           test eax, eax	      1598	diff.c	FUNCTION_26	IF_16
0x400328d	            0x750a	                           jne 0x4003299	      1598	diff.c	FUNCTION_26	IF_16
0x400328f	      0xb800000000	                              mov eax, 0	      1599	diff.c	FUNCTION_26	IF_16
0x4003294	      0xe981000000	                           jmp 0x400331a	      1599	diff.c	FUNCTION_26	IF_16
0x4003299	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1603	diff.c	FUNCTION_26
0x40032a0	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1604	diff.c	FUNCTION_26	FOR_4
0x40032a7	            0xeb51	                           jmp 0x40032fa	      1604	diff.c	FUNCTION_26	FOR_4
0x40032a9	    0x488b05000000	            mov rax, qword [0x040032b0] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032b0	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032b3	          0x4863d2	                         movsxd rdx, edx	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032b6	        0x4883c20c	                            add rdx, 0xc	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032ba	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032be	          0x4885c0	                           test rax, rax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032c1	            0x7433	                            je 0x40032f6	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032c7	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032ca	          0x4863d2	                         movsxd rdx, edx	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032cd	        0x4883c208	                              add rdx, 8	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032d1	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032d6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032d9	            0x4898	                                    cdqe	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032db	          0x4839c2	                            cmp rdx, rax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032de	            0x7e16	                           jle 0x40032f6	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032e4	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032e7	          0x4863d2	                         movsxd rdx, edx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032ea	        0x4883c208	                              add rdx, 8	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032ee	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032f3	          0x8945dc	             mov dword [rbp - 0x24], eax	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40032f6	        0x8345e001	               add dword [rbp - 0x20], 1	      1604	diff.c	FUNCTION_26	FOR_4
0x40032fa	        0x837de007	               cmp dword [rbp - 0x20], 7	      1604	diff.c	FUNCTION_26	FOR_4
0x40032fe	            0x7ea9	                           jle 0x40032a9	      1604	diff.c	FUNCTION_26	FOR_4
0x4003300	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1607	diff.c	FUNCTION_26
0x4003303	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1607	diff.c	FUNCTION_26
0x4003307	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1607	diff.c	FUNCTION_26
0x400330a	          0x4863c9	                         movsxd rcx, ecx	      1607	diff.c	FUNCTION_26
0x400330d	        0x4883c108	                              add rcx, 8	      1607	diff.c	FUNCTION_26
0x4003311	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1607	diff.c	FUNCTION_26
0x4003316	            0x29c2	                            sub edx, eax	      1607	diff.c	FUNCTION_26
0x4003318	            0x89d0	                            mov eax, edx	      1607	diff.c	FUNCTION_26
0x400331a	              0xc9	                                   leave	      1608	diff.c	FUNCTION_26
0x400331b	              0xc3	                                     ret	      1608	diff.c	FUNCTION_26
diff_equal_char	WHILE,0:SWITCH,0:ELSE,1:functions,0:IF,4:CALL,7:DO,0:FOR,0	89
0x4003485	              0x55	                                push rbp	      1645	diff.c	FUNCTION_28
0x4003486	          0x4889e5	                            mov rbp, rsp	      1645	diff.c	FUNCTION_28
0x4003489	              0x53	                                push rbx	      1645	diff.c	FUNCTION_28
0x400348a	        0x4883ec38	                           sub rsp, 0x38	      1645	diff.c	FUNCTION_28
0x400348e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1645	diff.c	FUNCTION_28
0x4003492	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1645	diff.c	FUNCTION_28
0x4003496	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1645	diff.c	FUNCTION_28
0x400349a	    0x488b05000000	            mov rax, qword [0x040034a1] 	      1647	diff.c	FUNCTION_28
0x40034a1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1647	diff.c	FUNCTION_28
0x40034a5	          0x4889d7	                            mov rdi, rdx	      1647	diff.c	FUNCTION_28
0x40034a8	            0xffd0	                                call rax	      1647	diff.c	FUNCTION_28
0x40034aa	          0x8945ec	             mov dword [rbp - 0x14], eax	      1647	diff.c	FUNCTION_28
0x40034ad	    0x488b05000000	            mov rax, qword [0x040034b4] 	      1649	diff.c	FUNCTION_28	IF_1
0x40034b4	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1649	diff.c	FUNCTION_28	IF_1
0x40034b8	          0x4889d7	                            mov rdi, rdx	      1649	diff.c	FUNCTION_28	IF_1
0x40034bb	            0xffd0	                                call rax	      1649	diff.c	FUNCTION_28	IF_1
0x40034bd	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1649	diff.c	FUNCTION_28	IF_1
0x40034c0	            0x740a	                            je 0x40034cc	      1649	diff.c	FUNCTION_28	IF_1
0x40034c2	      0xb800000000	                              mov eax, 0	      1650	diff.c	FUNCTION_28	IF_1
0x40034c7	      0xe9d5000000	                           jmp 0x40035a1	      1650	diff.c	FUNCTION_28	IF_1
0x40034cc	        0x837dec01	               cmp dword [rbp - 0x14], 1	      1651	diff.c	FUNCTION_28	IF_2
0x40034d0	            0x7e72	                           jle 0x4003544	      1651	diff.c	FUNCTION_28	IF_2
0x40034d2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40034d5	          0x4863d0	                         movsxd rdx, eax	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40034d8	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40034dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40034e0	          0x4889ce	                            mov rsi, rcx	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40034e3	          0x4889c7	                            mov rdi, rax	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40034e6	      0xe800000000	                          call 0x40034eb	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40034eb	            0x85c0	                           test eax, eax	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40034ed	            0x744a	                            je 0x4003539	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40034ef	    0x8b0500000000	            mov eax, dword [0x040034f5] 	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x40034f5	            0x85c0	                           test eax, eax	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x40034f7	            0x7439	                            je 0x4003532	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x40034f9	    0x8b0500000000	            mov eax, dword [0x040034ff] 	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x40034ff	          0x83e002	                              and eax, 2	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x4003502	            0x85c0	                           test eax, eax	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x4003504	            0x742c	                            je 0x4003532	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x4003506	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x400350a	          0x4889c7	                            mov rdi, rax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x400350d	      0xe800000000	                          call 0x4003512	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x4003512	            0x89c7	                            mov edi, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x4003514	      0xe800000000	                          call 0x4003519	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x4003519	            0x89c3	                            mov ebx, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x400351b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x400351f	          0x4889c7	                            mov rdi, rax	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x4003522	      0xe800000000	                          call 0x4003527	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x4003527	            0x89c7	                            mov edi, eax	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x4003529	      0xe800000000	                          call 0x400352e	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x400352e	            0x39c3	                            cmp ebx, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x4003530	            0x7407	                            je 0x4003539	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x4003532	      0xb800000000	                              mov eax, 0	      1658	diff.c	FUNCTION_28	IF_2	IF_3
0x4003537	            0xeb68	                           jmp 0x40035a1	      1658	diff.c	FUNCTION_28	IF_2	IF_3
0x4003539	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1659	diff.c	FUNCTION_28	IF_2
0x400353d	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1659	diff.c	FUNCTION_28	IF_2
0x4003540	            0x8910	                    mov dword [rax], edx	      1659	diff.c	FUNCTION_28	IF_2
0x4003542	            0xeb58	                           jmp 0x400359c	      1659	diff.c	FUNCTION_28	IF_2
0x4003544	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4003548	           0xfb610	                   movzx edx, byte [rax]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x400354b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x400354f	           0xfb600	                   movzx eax, byte [rax]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4003552	            0x38c2	                              cmp dl, al	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4003554	            0x743c	                            je 0x4003592	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4003556	    0x8b0500000000	            mov eax, dword [0x0400355c] 	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x400355c	          0x83e002	                              and eax, 2	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x400355f	            0x85c0	                           test eax, eax	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4003561	            0x7428	                            je 0x400358b	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4003563	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4003567	           0xfb600	                   movzx eax, byte [rax]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x400356a	           0xfb6c0	                           movzx eax, al	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x400356d	            0x89c7	                            mov edi, eax	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x400356f	      0xe800000000	                          call 0x4003574	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4003574	            0x89c3	                            mov ebx, eax	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4003576	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x400357a	           0xfb600	                   movzx eax, byte [rax]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x400357d	           0xfb6c0	                           movzx eax, al	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4003580	            0x89c7	                            mov edi, eax	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4003582	      0xe800000000	                          call 0x4003587	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4003587	            0x39c3	                            cmp ebx, eax	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4003589	            0x7407	                            je 0x4003592	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x400358b	      0xb800000000	                              mov eax, 0	      1667	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4003590	            0xeb0f	                           jmp 0x40035a1	      1667	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4003592	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1668	diff.c	FUNCTION_28	ELSE_1
0x4003596	    0xc70001000000	                      mov dword [rax], 1	      1668	diff.c	FUNCTION_28	ELSE_1
0x400359c	      0xb801000000	                              mov eax, 1	      1670	diff.c	FUNCTION_28
0x40035a1	        0x4883c438	                           add rsp, 0x38	      1671	diff.c	FUNCTION_28
0x40035a5	              0x5b	                                 pop rbx	      1671	diff.c	FUNCTION_28
0x40035a6	              0x5d	                                 pop rbp	      1671	diff.c	FUNCTION_28
0x40035a7	              0xc3	                                     ret	      1671	diff.c	FUNCTION_28
diff_buf_add	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,2:CALL,4:DO,0:FOR,1	41
0x4000192	              0x55	                                push rbp	       124	diff.c	FUNCTION_3
0x4000193	          0x4889e5	                            mov rbp, rsp	       124	diff.c	FUNCTION_3
0x4000196	        0x4883ec20	                           sub rsp, 0x20	       124	diff.c	FUNCTION_3
0x400019a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       124	diff.c	FUNCTION_3
0x400019e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x40001a2	          0x4889c7	                            mov rdi, rax	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x40001a5	      0xe8f0000000	                   call sym.diff_buf_idx	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x40001aa	          0x83f808	                              cmp eax, 8	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x40001ad	            0x757c	                           jne 0x400022b	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x40001af	    0xc745fc000000	                  mov dword [rbp - 4], 0	       130	diff.c	FUNCTION_3	FOR_1
0x40001b6	            0xeb54	                           jmp 0x400020c	       130	diff.c	FUNCTION_3	FOR_1
0x40001b8	    0x488b05000000	            mov rax, qword [0x040001bf] 	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001bf	          0x8b55fc	                mov edx, dword [rbp - 4]	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001c2	          0x4863d2	                         movsxd rdx, edx	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001c5	        0x4883c20c	                            add rdx, 0xc	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001c9	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001cd	          0x4885c0	                           test rax, rax	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001d0	            0x7536	                           jne 0x4000208	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001d2	    0x488b05000000	            mov rax, qword [0x040001d9] 	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001d9	          0x8b55fc	                mov edx, dword [rbp - 4]	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001dc	          0x4863d2	                         movsxd rdx, edx	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001df	        0x488d4a0c	                    lea rcx, [rdx + 0xc]	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001e3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001e7	        0x488914c8	            mov qword [rax + rcx*8], rdx	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001eb	    0x488b05000000	            mov rax, qword [0x040001f2] 	       134	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001f2	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       134	diff.c	FUNCTION_3	FOR_1	IF_2
0x40001fc	      0xbf01000000	                              mov edi, 1	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x4000201	      0xe8e30d0000	                    call sym.diff_redraw	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x4000206	            0xeb24	                           jmp 0x400022c	       136	diff.c	FUNCTION_3	FOR_1	IF_2
0x4000208	        0x8345fc01	                  add dword [rbp - 4], 1	       130	diff.c	FUNCTION_3	FOR_1
0x400020c	        0x837dfc07	                  cmp dword [rbp - 4], 7	       130	diff.c	FUNCTION_3	FOR_1
0x4000210	            0x7ea6	                           jle 0x40001b8	       130	diff.c	FUNCTION_3	FOR_1
0x4000212	      0xbf00000000	                              mov edi, 0	       139	diff.c	FUNCTION_3	CALL_4
0x4000217	      0xe800000000	                          call 0x400021c	       139	diff.c	FUNCTION_3	CALL_4
0x400021c	      0xbe08000000	                              mov esi, 8	       139	diff.c	FUNCTION_3	CALL_4
0x4000221	          0x4889c7	                            mov rdi, rax	       139	diff.c	FUNCTION_3	CALL_4
0x4000224	      0xe800000000	                          call 0x4000229	       139	diff.c	FUNCTION_3	CALL_4
0x4000229	            0xeb01	                           jmp 0x400022c	       139	diff.c	FUNCTION_3	CALL_4
0x400022b	              0x90	                                     nop	       128	diff.c	FUNCTION_3	IF_1
0x400022c	              0xc9	                                   leave	       140	diff.c	FUNCTION_3
0x400022d	              0xc3	                                     ret	       140	diff.c	FUNCTION_3
diffopt_hiddenoff	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,0:CALL,0:DO,0:FOR,0	9
0x4003f02	              0x55	                                push rbp	      1950	diff.c	FUNCTION_34
0x4003f03	          0x4889e5	                            mov rbp, rsp	      1950	diff.c	FUNCTION_34
0x4003f06	    0x8b0500000000	            mov eax, dword [0x04003f0c] 	      1951	diff.c	FUNCTION_34
0x4003f0c	          0x83e020	                           and eax, 0x20	      1951	diff.c	FUNCTION_34
0x4003f0f	            0x85c0	                           test eax, eax	      1951	diff.c	FUNCTION_34
0x4003f11	           0xf95c0	                                setne al	      1951	diff.c	FUNCTION_34
0x4003f14	           0xfb6c0	                           movzx eax, al	      1951	diff.c	FUNCTION_34
0x4003f17	              0x5d	                                 pop rbp	      1952	diff.c	FUNCTION_34
0x4003f18	              0xc3	                                     ret	      1952	diff.c	FUNCTION_34
ex_diffupdate	WHILE,0:SWITCH,0:ELSE,3:functions,0:IF,24:CALL,34:DO,0:FOR,6	299
0x4001192	              0x55	                                push rbp	       663	diff.c	FUNCTION_15
0x4001193	          0x4889e5	                            mov rbp, rsp	       663	diff.c	FUNCTION_15
0x4001196	    0x4881ec900000	                           sub rsp, 0x90	       663	diff.c	FUNCTION_15
0x400119d	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       663	diff.c	FUNCTION_15
0x40011a4	    0x64488b042528	                mov rax, qword fs:[0x28]	       663	diff.c	FUNCTION_15
0x40011ad	        0x488945f8	                mov qword [rbp - 8], rax	       663	diff.c	FUNCTION_15
0x40011b1	            0x31c0	                            xor eax, eax	       663	diff.c	FUNCTION_15
0x40011b3	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       672	diff.c	FUNCTION_15
0x40011ba	    0x488b05000000	            mov rax, qword [0x040011c1] 	       675	diff.c	FUNCTION_15	CALL_1
0x40011c1	          0x4889c7	                            mov rdi, rax	       675	diff.c	FUNCTION_15	CALL_1
0x40011c4	      0xe800000000	                          call 0x40011c9	       675	diff.c	FUNCTION_15	CALL_1
0x40011c9	    0x488b05000000	            mov rax, qword [0x040011d0] 	       676	diff.c	FUNCTION_15
0x40011d0	    0xc780a0000000	               mov dword [rax + 0xa0], 0	       676	diff.c	FUNCTION_15
0x40011da	    0xc74588000000	               mov dword [rbp - 0x78], 0	       679	diff.c	FUNCTION_15	FOR_1
0x40011e1	            0xeb1e	                           jmp 0x4001201	       679	diff.c	FUNCTION_15	FOR_1
0x40011e3	    0x488b05000000	            mov rax, qword [0x040011ea] 	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40011ea	          0x8b5588	             mov edx, dword [rbp - 0x78]	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40011ed	          0x4863d2	                         movsxd rdx, edx	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40011f0	        0x4883c20c	                            add rdx, 0xc	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40011f4	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40011f8	          0x4885c0	                           test rax, rax	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40011fb	            0x750c	                           jne 0x4001209	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40011fd	        0x83458801	               add dword [rbp - 0x78], 1	       679	diff.c	FUNCTION_15	FOR_1
0x4001201	        0x837d8807	               cmp dword [rbp - 0x78], 7	       679	diff.c	FUNCTION_15	FOR_1
0x4001205	            0x7edc	                           jle 0x40011e3	       679	diff.c	FUNCTION_15	FOR_1
0x4001207	            0xeb01	                           jmp 0x400120a	       679	diff.c	FUNCTION_15	FOR_1
0x4001209	              0x90	                                     nop	       681	diff.c	FUNCTION_15	FOR_1	IF_1
0x400120a	        0x837d8808	               cmp dword [rbp - 0x78], 8	       682	diff.c	FUNCTION_15	IF_2
0x400120e	     0xf8402040000	                            je 0x4001616	       682	diff.c	FUNCTION_15	IF_2
0x4001214	          0x8b4588	             mov eax, dword [rbp - 0x78]	       686	diff.c	FUNCTION_15	FOR_2
0x4001217	          0x83c001	                              add eax, 1	       686	diff.c	FUNCTION_15	FOR_2
0x400121a	          0x89458c	             mov dword [rbp - 0x74], eax	       686	diff.c	FUNCTION_15	FOR_2
0x400121d	            0xeb1e	                           jmp 0x400123d	       686	diff.c	FUNCTION_15	FOR_2
0x400121f	    0x488b05000000	            mov rax, qword [0x04001226] 	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001226	          0x8b558c	             mov edx, dword [rbp - 0x74]	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001229	          0x4863d2	                         movsxd rdx, edx	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400122c	        0x4883c20c	                            add rdx, 0xc	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001230	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001234	          0x4885c0	                           test rax, rax	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001237	            0x750c	                           jne 0x4001245	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001239	        0x83458c01	               add dword [rbp - 0x74], 1	       686	diff.c	FUNCTION_15	FOR_2
0x400123d	        0x837d8c07	               cmp dword [rbp - 0x74], 7	       686	diff.c	FUNCTION_15	FOR_2
0x4001241	            0x7edc	                           jle 0x400121f	       686	diff.c	FUNCTION_15	FOR_2
0x4001243	            0xeb01	                           jmp 0x4001246	       686	diff.c	FUNCTION_15	FOR_2
0x4001245	              0x90	                                     nop	       688	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001246	        0x837d8c08	               cmp dword [rbp - 0x74], 8	       689	diff.c	FUNCTION_15	IF_4
0x400124a	     0xf84c9030000	                            je 0x4001619	       689	diff.c	FUNCTION_15	IF_4
0x4001250	      0xbe01000000	                              mov esi, 1	       693	diff.c	FUNCTION_15	CALL_2
0x4001255	      0xbf6f000000	                           mov edi, 0x6f	       693	diff.c	FUNCTION_15	CALL_2
0x400125a	      0xe800000000	                          call 0x400125f	       693	diff.c	FUNCTION_15	CALL_2
0x400125f	        0x48894598	             mov qword [rbp - 0x68], rax	       693	diff.c	FUNCTION_15	CALL_2
0x4001263	      0xbe01000000	                              mov esi, 1	       694	diff.c	FUNCTION_15	CALL_3
0x4001268	      0xbf6e000000	                           mov edi, 0x6e	       694	diff.c	FUNCTION_15	CALL_3
0x400126d	      0xe800000000	                          call 0x4001272	       694	diff.c	FUNCTION_15	CALL_3
0x4001272	        0x488945a0	             mov qword [rbp - 0x60], rax	       694	diff.c	FUNCTION_15	CALL_3
0x4001276	      0xbe01000000	                              mov esi, 1	       695	diff.c	FUNCTION_15	CALL_4
0x400127b	      0xbf64000000	                           mov edi, 0x64	       695	diff.c	FUNCTION_15	CALL_4
0x4001280	      0xe800000000	                          call 0x4001285	       695	diff.c	FUNCTION_15	CALL_4
0x4001285	        0x488945a8	             mov qword [rbp - 0x58], rax	       695	diff.c	FUNCTION_15	CALL_4
0x4001289	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       696	diff.c	FUNCTION_15	IF_5
0x400128e	     0xf845c030000	                            je 0x40015f0	       696	diff.c	FUNCTION_15	IF_5
0x4001294	      0x48837da000	               cmp qword [rbp - 0x60], 0	       696	diff.c	FUNCTION_15	IF_5
0x4001299	     0xf8451030000	                            je 0x40015f0	       696	diff.c	FUNCTION_15	IF_5
0x400129f	      0x48837da800	               cmp qword [rbp - 0x58], 0	       696	diff.c	FUNCTION_15	IF_5
0x40012a4	     0xf8446030000	                            je 0x40015f0	       696	diff.c	FUNCTION_15	IF_5
0x40012aa	    0xc74590000000	               mov dword [rbp - 0x70], 0	       707	diff.c	FUNCTION_15	FOR_3
0x40012b1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40012b5	      0xbe00000000	                              mov esi, 0	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40012ba	          0x4889c7	                            mov rdi, rax	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40012bd	      0xe800000000	                          call 0x40012c2	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40012c2	        0x488945b0	             mov qword [rbp - 0x50], rax	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40012c6	      0x48837db000	               cmp qword [rbp - 0x50], 0	       709	diff.c	FUNCTION_15	FOR_3	IF_6
0x40012cb	            0x750c	                           jne 0x40012d9	       709	diff.c	FUNCTION_15	FOR_3	IF_6
0x40012cd	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       710	diff.c	FUNCTION_15	FOR_3	IF_6
0x40012d4	      0xe939010000	                           jmp 0x4001412	       710	diff.c	FUNCTION_15	FOR_3	IF_6
0x40012d9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x40012dd	          0x4889c1	                            mov rcx, rax	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x40012e0	      0xba01000000	                              mov edx, 1	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x40012e5	      0xbe06000000	                              mov esi, 6	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x40012ea	      0xbf00000000	                              mov edi, 0	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x40012ef	      0xe800000000	                          call 0x40012f4	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x40012f4	        0x4883f801	                              cmp rax, 1	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x40012f8	            0x7407	                            je 0x4001301	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x40012fa	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       714	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7
0x4001301	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x4001305	          0x4889c7	                            mov rdi, rax	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x4001308	      0xe800000000	                          call 0x400130d	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x400130d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001311	      0xbe00000000	                              mov esi, 0	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001316	          0x4889c7	                            mov rdi, rax	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001319	      0xe800000000	                          call 0x400131e	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x400131e	        0x488945b0	             mov qword [rbp - 0x50], rax	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001322	      0x48837db000	               cmp qword [rbp - 0x50], 0	       717	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x4001327	            0x750c	                           jne 0x4001335	       717	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x4001329	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       718	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x4001330	      0xe9d1000000	                           jmp 0x4001406	       718	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x4001335	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001339	          0x4889c1	                            mov rcx, rax	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x400133c	      0xba01000000	                              mov edx, 1	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001341	      0xbe06000000	                              mov esi, 6	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001346	      0xbf00000000	                              mov edi, 0	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x400134b	      0xe800000000	                          call 0x4001350	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001350	        0x4883f801	                              cmp rax, 1	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001354	            0x7407	                            je 0x400135d	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001356	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       722	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9
0x400135d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x4001361	          0x4889c7	                            mov rdi, rax	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x4001364	      0xe800000000	                          call 0x4001369	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x4001369	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x400136d	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001371	        0x488b4598	             mov rax, qword [rbp - 0x68]	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001375	          0x4889ce	                            mov rsi, rcx	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001378	          0x4889c7	                            mov rdi, rax	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x400137b	      0xe8b0020000	                      call sym.diff_file	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001380	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001384	      0xbe00000000	                              mov esi, 0	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001389	          0x4889c7	                            mov rdi, rax	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x400138c	      0xe800000000	                          call 0x4001391	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001391	        0x488945b0	             mov qword [rbp - 0x50], rax	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001395	      0x48837db000	               cmp qword [rbp - 0x50], 0	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x400139a	            0x7509	                           jne 0x40013a5	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x400139c	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       727	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x40013a3	            0xeb49	                           jmp 0x40013ee	       727	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x40013a5	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40013a9	        0x488d45c0	                   lea rax, [rbp - 0x40]	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40013ad	      0xbe32000000	                           mov esi, 0x32	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40013b2	          0x4889c7	                            mov rdi, rax	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40013b5	      0xe800000000	                          call 0x40013ba	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40013ba	            0x85c0	                           test eax, eax	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40013bc	            0x7523	                           jne 0x40013e1	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40013be	        0x488d45c0	                   lea rax, [rbp - 0x40]	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x40013c2	      0xba03000000	                              mov edx, 3	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x40013c7	      0xbe00000000	                              mov esi, 0	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x40013cc	          0x4889c7	                            mov rdi, rax	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x40013cf	      0xe800000000	                          call 0x40013d4	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x40013d4	            0x85c0	                           test eax, eax	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x40013d6	            0x75cd	                           jne 0x40013a5	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x40013d8	    0xc74590010000	               mov dword [rbp - 0x70], 1	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x40013df	            0xebc4	                           jmp 0x40013a5	       739	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4
0x40013e1	              0x90	                                     nop	       736	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40013e2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_14
0x40013e6	          0x4889c7	                            mov rdi, rax	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_14
0x40013e9	      0xe800000000	                          call 0x40013ee	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_14
0x40013ee	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_15
0x40013f2	          0x4889c7	                            mov rdi, rax	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_15
0x40013f5	      0xe800000000	                          call 0x40013fa	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_15
0x40013fa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x40013fe	          0x4889c7	                            mov rdi, rax	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x4001401	      0xe800000000	                          call 0x4001406	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x4001406	        0x488b4598	             mov rax, qword [rbp - 0x68]	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_17
0x400140a	          0x4889c7	                            mov rdi, rax	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_17
0x400140d	      0xe800000000	                          call 0x4001412	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_17
0x4001412	    0x488b05000000	            mov rax, qword [0x04001419] 	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x4001419	           0xfb600	                   movzx eax, byte [rax]	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x400141c	            0x84c0	                             test al, al	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x400141e	            0x751f	                           jne 0x400143f	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x4001420	    0x8b0500000000	            mov eax, dword [0x04001426] 	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x4001426	          0x83f802	                              cmp eax, 2	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x4001429	            0x7517	                           jne 0x4001442	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x400142b	          0x8b4590	             mov eax, dword [rbp - 0x70]	       773	diff.c	FUNCTION_15	FOR_3
0x400142e	    0x890500000000	            mov dword [0x04001434], eax 	       773	diff.c	FUNCTION_15	FOR_3
0x4001434	        0x837d9000	               cmp dword [rbp - 0x70], 0	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x4001438	            0x750b	                           jne 0x4001445	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x400143a	      0xe96bfeffff	                           jmp 0x40012aa	       778	diff.c	FUNCTION_15	FOR_3
0x400143f	              0x90	                                     nop	       751	diff.c	FUNCTION_15	FOR_3	IF_13
0x4001440	            0xeb04	                           jmp 0x4001446	       751	diff.c	FUNCTION_15	FOR_3	IF_13
0x4001442	              0x90	                                     nop	       772	diff.c	FUNCTION_15	FOR_3	IF_16
0x4001443	            0xeb01	                           jmp 0x4001446	       772	diff.c	FUNCTION_15	FOR_3	IF_16
0x4001445	              0x90	                                     nop	       777	diff.c	FUNCTION_15	FOR_3	IF_17
0x4001446	        0x837d9000	               cmp dword [rbp - 0x70], 0	       779	diff.c	FUNCTION_15	IF_18
0x400144a	            0x7539	                           jne 0x4001485	       779	diff.c	FUNCTION_15	IF_18
0x400144c	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       781	diff.c	FUNCTION_15	IF_18	IF_19
0x4001450	            0x7412	                            je 0x4001464	       781	diff.c	FUNCTION_15	IF_18	IF_19
0x4001452	      0xbf00000000	                              mov edi, 0	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x4001457	      0xe800000000	                          call 0x400145c	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x400145c	          0x4889c7	                            mov rdi, rax	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x400145f	      0xe800000000	                          call 0x4001464	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x4001464	      0xbf00000000	                              mov edi, 0	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001469	      0xe800000000	                          call 0x400146e	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x400146e	          0x4889c7	                            mov rdi, rax	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001471	      0xe800000000	                          call 0x4001476	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001476	    0xc70500000000	               mov dword [0x04001480], 2	       784	diff.c	FUNCTION_15	IF_18
0x4001480	      0xe96b010000	                           jmp 0x40015f0	       788	diff.c	FUNCTION_15	IF_18
0x4001485	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       792	diff.c	FUNCTION_15	IF_20
0x400148d	            0x745a	                            je 0x40014e9	       792	diff.c	FUNCTION_15	IF_20
0x400148f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       792	diff.c	FUNCTION_15	IF_20
0x4001496	          0x8b4034	            mov eax, dword [rax + 0x34] 	       792	diff.c	FUNCTION_15	IF_20
0x4001499	            0x85c0	                           test eax, eax	       792	diff.c	FUNCTION_15	IF_20
0x400149b	            0x744c	                            je 0x40014e9	       792	diff.c	FUNCTION_15	IF_20
0x400149d	          0x8b4588	             mov eax, dword [rbp - 0x78]	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014a0	          0x89458c	             mov dword [rbp - 0x74], eax	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014a3	            0xeb3e	                           jmp 0x40014e3	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014a5	    0x488b05000000	            mov rax, qword [0x040014ac] 	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014ac	          0x8b558c	             mov edx, dword [rbp - 0x74]	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014af	          0x4863d2	                         movsxd rdx, edx	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014b2	        0x4883c20c	                            add rdx, 0xc	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014b6	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014ba	        0x488945b8	             mov qword [rbp - 0x48], rax	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014be	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x40014c2	          0x4889c7	                            mov rdi, rax	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x40014c5	      0xe800000000	                          call 0x40014ca	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x40014ca	            0x85c0	                           test eax, eax	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x40014cc	            0x7411	                            je 0x40014df	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x40014ce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x40014d2	      0xbe00000000	                              mov esi, 0	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x40014d7	          0x4889c7	                            mov rdi, rax	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x40014da	      0xe800000000	                          call 0x40014df	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x40014df	        0x83458c01	               add dword [rbp - 0x74], 1	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014e3	        0x837d8c07	               cmp dword [rbp - 0x74], 7	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014e7	            0x7ebc	                           jle 0x40014a5	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x40014e9	    0x488b05000000	            mov rax, qword [0x040014f0] 	       801	diff.c	FUNCTION_15
0x40014f0	          0x8b5588	             mov edx, dword [rbp - 0x78]	       801	diff.c	FUNCTION_15
0x40014f3	          0x4863d2	                         movsxd rdx, edx	       801	diff.c	FUNCTION_15
0x40014f6	        0x4883c20c	                            add rdx, 0xc	       801	diff.c	FUNCTION_15
0x40014fa	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       801	diff.c	FUNCTION_15
0x40014fe	        0x488945b8	             mov qword [rbp - 0x48], rax	       801	diff.c	FUNCTION_15
0x4001502	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001506	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x400150a	          0x4889d6	                            mov rsi, rdx	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x400150d	          0x4889c7	                            mov rdi, rax	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001510	      0xe8e6fbffff	                     call sym.diff_write	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001515	            0x85c0	                           test eax, eax	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001517	     0xf84d2000000	                            je 0x40015ef	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x400151d	          0x8b4588	             mov eax, dword [rbp - 0x78]	       806	diff.c	FUNCTION_15	FOR_6
0x4001520	          0x83c001	                              add eax, 1	       806	diff.c	FUNCTION_15	FOR_6
0x4001523	          0x89458c	             mov dword [rbp - 0x74], eax	       806	diff.c	FUNCTION_15	FOR_6
0x4001526	      0xe990000000	                           jmp 0x40015bb	       806	diff.c	FUNCTION_15	FOR_6
0x400152b	    0x488b05000000	            mov rax, qword [0x04001532] 	       808	diff.c	FUNCTION_15	FOR_6
0x4001532	          0x8b558c	             mov edx, dword [rbp - 0x74]	       808	diff.c	FUNCTION_15	FOR_6
0x4001535	          0x4863d2	                         movsxd rdx, edx	       808	diff.c	FUNCTION_15	FOR_6
0x4001538	        0x4883c20c	                            add rdx, 0xc	       808	diff.c	FUNCTION_15	FOR_6
0x400153c	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       808	diff.c	FUNCTION_15	FOR_6
0x4001540	        0x488945b8	             mov qword [rbp - 0x48], rax	       808	diff.c	FUNCTION_15	FOR_6
0x4001544	      0x48837db800	               cmp qword [rbp - 0x48], 0	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001549	            0x7468	                            je 0x40015b3	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x400154b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x400154f	        0x488b4008	                mov rax, qword [rax + 8]	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001553	          0x4885c0	                           test rax, rax	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001556	            0x745b	                            je 0x40015b3	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001558	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x400155c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4001560	          0x4889d6	                            mov rsi, rdx	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4001563	          0x4889c7	                            mov rdi, rax	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4001566	      0xe890fbffff	                     call sym.diff_write	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x400156b	            0x85c0	                           test eax, eax	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x400156d	            0x7447	                            je 0x40015b6	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x400156f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001573	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001577	        0x488b4598	             mov rax, qword [rbp - 0x68]	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x400157b	          0x4889ce	                            mov rsi, rcx	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x400157e	          0x4889c7	                            mov rdi, rax	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001581	      0xe8aa000000	                      call sym.diff_file	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001586	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       816	diff.c	FUNCTION_15	FOR_6	CALL_27
0x400158a	          0x8b4d8c	             mov ecx, dword [rbp - 0x74]	       816	diff.c	FUNCTION_15	FOR_6	CALL_27
0x400158d	          0x8b4588	             mov eax, dword [rbp - 0x78]	       816	diff.c	FUNCTION_15	FOR_6	CALL_27
0x4001590	            0x89ce	                            mov esi, ecx	       816	diff.c	FUNCTION_15	FOR_6	CALL_27
0x4001592	            0x89c7	                            mov edi, eax	       816	diff.c	FUNCTION_15	FOR_6	CALL_27
0x4001594	      0xe818100000	                      call sym.diff_read	       816	diff.c	FUNCTION_15	FOR_6	CALL_27
0x4001599	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       817	diff.c	FUNCTION_15	FOR_6	CALL_28
0x400159d	          0x4889c7	                            mov rdi, rax	       817	diff.c	FUNCTION_15	FOR_6	CALL_28
0x40015a0	      0xe800000000	                          call 0x40015a5	       817	diff.c	FUNCTION_15	FOR_6	CALL_28
0x40015a5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x40015a9	          0x4889c7	                            mov rdi, rax	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x40015ac	      0xe800000000	                          call 0x40015b1	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x40015b1	            0xeb04	                           jmp 0x40015b7	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x40015b3	              0x90	                                     nop	       810	diff.c	FUNCTION_15	FOR_6	IF_23
0x40015b4	            0xeb01	                           jmp 0x40015b7	       810	diff.c	FUNCTION_15	FOR_6	IF_23
0x40015b6	              0x90	                                     nop	       812	diff.c	FUNCTION_15	FOR_6	IF_24
0x40015b7	        0x83458c01	               add dword [rbp - 0x74], 1	       806	diff.c	FUNCTION_15	FOR_6
0x40015bb	        0x837d8c07	               cmp dword [rbp - 0x74], 7	       806	diff.c	FUNCTION_15	FOR_6
0x40015bf	     0xf8e66ffffff	                           jle 0x400152b	       806	diff.c	FUNCTION_15	FOR_6
0x40015c5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       820	diff.c	FUNCTION_15	CALL_30
0x40015c9	          0x4889c7	                            mov rdi, rax	       820	diff.c	FUNCTION_15	CALL_30
0x40015cc	      0xe800000000	                          call 0x40015d1	       820	diff.c	FUNCTION_15	CALL_30
0x40015d1	    0x488b05000000	            mov rax, qword [0x040015d8] 	       823	diff.c	FUNCTION_15
0x40015d8	    0x48c780b80000	               mov qword [rax + 0xb8], 0	       823	diff.c	FUNCTION_15
0x40015e3	      0xbf01000000	                              mov edi, 1	       825	diff.c	FUNCTION_15	CALL_31
0x40015e8	      0xe8fcf9ffff	                    call sym.diff_redraw	       825	diff.c	FUNCTION_15	CALL_31
0x40015ed	            0xeb01	                           jmp 0x40015f0	       825	diff.c	FUNCTION_15	CALL_31
0x40015ef	              0x90	                                     nop	       803	diff.c	FUNCTION_15	IF_22
0x40015f0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       828	diff.c	FUNCTION_15	CALL_32
0x40015f4	          0x4889c7	                            mov rdi, rax	       828	diff.c	FUNCTION_15	CALL_32
0x40015f7	      0xe800000000	                          call 0x40015fc	       828	diff.c	FUNCTION_15	CALL_32
0x40015fc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       829	diff.c	FUNCTION_15	CALL_33
0x4001600	          0x4889c7	                            mov rdi, rax	       829	diff.c	FUNCTION_15	CALL_33
0x4001603	      0xe800000000	                          call 0x4001608	       829	diff.c	FUNCTION_15	CALL_33
0x4001608	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       830	diff.c	FUNCTION_15	CALL_34
0x400160c	          0x4889c7	                            mov rdi, rax	       830	diff.c	FUNCTION_15	CALL_34
0x400160f	      0xe800000000	                          call 0x4001614	       830	diff.c	FUNCTION_15	CALL_34
0x4001614	            0xeb04	                           jmp 0x400161a	       830	diff.c	FUNCTION_15	CALL_34
0x4001616	              0x90	                                     nop	       683	diff.c	FUNCTION_15	IF_2
0x4001617	            0xeb01	                           jmp 0x400161a	       683	diff.c	FUNCTION_15	IF_2
0x4001619	              0x90	                                     nop	       690	diff.c	FUNCTION_15	IF_4
0x400161a	        0x488b45f8	                mov rax, qword [rbp - 8]	       831	diff.c	FUNCTION_15
0x400161e	    0x644833042528	                xor rax, qword fs:[0x28]	       831	diff.c	FUNCTION_15
0x4001627	            0x7405	                            je 0x400162e	       831	diff.c	FUNCTION_15
0x4001629	      0xe800000000	                          call 0x400162e	       831	diff.c	FUNCTION_15
0x400162e	              0xc9	                                   leave	       831	diff.c	FUNCTION_15
0x400162f	              0xc3	                                     ret	       831	diff.c	FUNCTION_15
diff_mark_adjust	WHILE,0:SWITCH,0:ELSE,0:functions,1:IF,0:CALL,0:DO,0:FOR,0	36
0x4000386	              0x55	                                push rbp	       220	diff.c	FUNCTION_8
0x4000387	          0x4889e5	                            mov rbp, rsp	       220	diff.c	FUNCTION_8
0x400038a	        0x4883ec30	                           sub rsp, 0x30	       220	diff.c	FUNCTION_8
0x400038e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       220	diff.c	FUNCTION_8
0x4000392	        0x488975e0	             mov qword [rbp - 0x20], rsi	       220	diff.c	FUNCTION_8
0x4000396	        0x488955d8	             mov qword [rbp - 0x28], rdx	       220	diff.c	FUNCTION_8
0x400039a	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       220	diff.c	FUNCTION_8
0x400039e	    0x488b05000000	            mov rax, qword [0x040003a5] 	       225	diff.c	FUNCTION_8
0x40003a5	        0x488945f8	                mov qword [rbp - 8], rax	       225	diff.c	FUNCTION_8
0x40003a9	            0xeb4f	                           jmp 0x40003fa	       225	diff.c	FUNCTION_8
0x40003ab	    0x488b05000000	            mov rax, qword [0x040003b2] 	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x40003b2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x40003b6	          0x4889d6	                            mov rsi, rdx	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x40003b9	          0x4889c7	                            mov rdi, rax	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x40003bc	      0xe817ffffff	                call sym.diff_buf_idx_tp	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x40003c1	          0x8945f4	              mov dword [rbp - 0xc], eax	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x40003c4	        0x837df408	                cmp dword [rbp - 0xc], 8	       228	diff.c	FUNCTION_8	FUNCTION_1	IF_1
0x40003c8	            0x7425	                            je 0x40003ef	       228	diff.c	FUNCTION_8	FUNCTION_1	IF_1
0x40003ca	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x40003ce	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x40003d2	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x40003d6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x40003da	          0x8b75f4	              mov esi, dword [rbp - 0xc]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x40003dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x40003e1	          0x4d89c1	                              mov r9, r8	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x40003e4	          0x4989f8	                             mov r8, rdi	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x40003e7	          0x4889c7	                            mov rdi, rax	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x40003ea	      0xe815000000	            call sym.diff_mark_adjust_tp	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x40003ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       225	diff.c	FUNCTION_8
0x40003f3	          0x488b00	                    mov rax, qword [rax]	       225	diff.c	FUNCTION_8
0x40003f6	        0x488945f8	                mov qword [rbp - 8], rax	       225	diff.c	FUNCTION_8
0x40003fa	      0x48837df800	                  cmp qword [rbp - 8], 0	       225	diff.c	FUNCTION_8
0x40003ff	            0x75aa	                           jne 0x40003ab	       225	diff.c	FUNCTION_8
0x4000401	              0x90	                                     nop	       231	diff.c	FUNCTION_8
0x4000402	              0xc9	                                   leave	       231	diff.c	FUNCTION_8
0x4000403	              0xc3	                                     ret	       231	diff.c	FUNCTION_8
diff_check_unchanged	WHILE,1:SWITCH,0:ELSE,0:functions,0:IF,13:CALL,6:DO,0:FOR,4	185
0x4000cd4	              0x55	                                push rbp	       517	diff.c	ELSE_1	FUNCTION_11
0x4000cd5	          0x4889e5	                            mov rbp, rsp	       517	diff.c	ELSE_1	FUNCTION_11
0x4000cd8	        0x4883ec30	                           sub rsp, 0x30	       517	diff.c	ELSE_1	FUNCTION_11
0x4000cdc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       517	diff.c	ELSE_1	FUNCTION_11
0x4000ce0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       517	diff.c	ELSE_1	FUNCTION_11
0x4000ce4	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       522	diff.c	ELSE_1	FUNCTION_11
0x4000ceb	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4000cf2	            0xeb1b	                           jmp 0x4000d0f	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4000cf4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x4000cf8	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x4000cfb	          0x4863d2	                         movsxd rdx, edx	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x4000cfe	        0x4883c20c	                            add rdx, 0xc	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x4000d02	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x4000d06	          0x4885c0	                           test rax, rax	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x4000d09	            0x750c	                           jne 0x4000d17	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x4000d0b	        0x8345e401	               add dword [rbp - 0x1c], 1	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4000d0f	        0x837de407	               cmp dword [rbp - 0x1c], 7	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4000d13	            0x7edf	                           jle 0x4000cf4	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4000d15	            0xeb01	                           jmp 0x4000d18	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4000d17	              0x90	                                     nop	       528	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x4000d18	        0x837de408	               cmp dword [rbp - 0x1c], 8	       529	diff.c	ELSE_1	FUNCTION_11	IF_2
0x4000d1c	     0xf8434020000	                            je 0x4000f56	       529	diff.c	ELSE_1	FUNCTION_11	IF_2
0x4000d22	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4000d26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4000d2a	          0x4889d6	                            mov rsi, rdx	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4000d2d	          0x4889c7	                            mov rdi, rax	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4000d30	      0xe82d020000	              call sym.diff_check_sanity	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4000d35	            0x85c0	                           test eax, eax	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4000d37	     0xf841c020000	                            je 0x4000f59	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4000d3d	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       536	diff.c	ELSE_1	FUNCTION_11
0x4000d44	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       537	diff.c	ELSE_1	FUNCTION_11
0x4000d4b	      0xe9d5010000	                           jmp 0x4000f25	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000d50	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       545	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4000d54	            0x7519	                           jne 0x4000d6f	       545	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4000d56	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4000d5a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4000d5d	          0x4863d2	                         movsxd rdx, edx	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4000d60	        0x4883c208	                              add rdx, 8	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4000d64	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4000d69	          0x83e801	                              sub eax, 1	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4000d6c	          0x8945ec	             mov dword [rbp - 0x14], eax	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4000d6f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       548	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000d73	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       548	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000d76	          0x4863d2	                         movsxd rdx, edx	       548	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000d79	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       548	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000d7e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000d81	            0x4898	                                    cdqe	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000d83	        0x488d0c02	                    lea rcx, [rdx + rax]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000d87	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000d8b	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000d8e	          0x4863d2	                         movsxd rdx, edx	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000d91	        0x4883c20c	                            add rdx, 0xc	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000d95	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000d99	      0xba00000000	                              mov edx, 0	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000d9e	          0x4889ce	                            mov rsi, rcx	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000da1	          0x4889c7	                            mov rdi, rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000da4	      0xe800000000	                          call 0x4000da9	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000da9	          0x4889c7	                            mov rdi, rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000dac	      0xe800000000	                          call 0x4000db1	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000db1	        0x488945f8	                mov qword [rbp - 8], rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4000db5	      0x48837df800	                  cmp qword [rbp - 8], 0	       549	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0x4000dba	     0xf849c010000	                            je 0x4000f5c	       549	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0x4000dc0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4000dc3	          0x83c001	                              add eax, 1	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4000dc6	          0x8945e8	             mov dword [rbp - 0x18], eax	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4000dc9	      0xe9b9000000	                           jmp 0x4000e87	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4000dce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4000dd2	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4000dd5	          0x4863d2	                         movsxd rdx, edx	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4000dd8	        0x4883c20c	                            add rdx, 0xc	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4000ddc	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4000de0	          0x4885c0	                           test rax, rax	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4000de3	     0xf8499000000	                            je 0x4000e82	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4000de9	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       555	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4000ded	            0x7519	                           jne 0x4000e08	       555	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4000def	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4000df3	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4000df6	          0x4863d2	                         movsxd rdx, edx	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4000df9	        0x4883c208	                              add rdx, 8	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4000dfd	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4000e02	          0x83e801	                              sub eax, 1	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4000e05	          0x8945f0	             mov dword [rbp - 0x10], eax	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4000e08	        0x837df000	               cmp dword [rbp - 0x10], 0	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4000e0c	     0xf8882000000	                            js 0x4000e94	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4000e12	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4000e15	          0x4863d0	                         movsxd rdx, eax	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4000e18	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4000e1c	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4000e1f	          0x4863c9	                         movsxd rcx, ecx	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4000e22	        0x4883c108	                              add rcx, 8	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4000e26	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4000e2b	          0x4839c2	                            cmp rdx, rax	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4000e2e	            0x7d64	                           jge 0x4000e94	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4000e30	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       561	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9
0x4000e34	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       561	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9
0x4000e37	          0x4863d2	                         movsxd rdx, edx	       561	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9
0x4000e3a	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       561	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9
0x4000e3f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e42	            0x4898	                                    cdqe	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e44	        0x488d0c02	                    lea rcx, [rdx + rax]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e48	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e4c	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e4f	          0x4863d2	                         movsxd rdx, edx	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e52	        0x4883c20c	                            add rdx, 0xc	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e56	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e5a	      0xba00000000	                              mov edx, 0	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e5f	          0x4889ce	                            mov rsi, rcx	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e62	          0x4889c7	                            mov rdi, rax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e65	      0xe800000000	                          call 0x4000e6a	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e6a	          0x4889c2	                            mov rdx, rax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e6d	        0x488b45f8	                mov rax, qword [rbp - 8]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e71	          0x4889d6	                            mov rsi, rdx	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e74	          0x4889c7	                            mov rdi, rax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e77	      0xe82c270000	                       call sym.diff_cmp	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e7c	            0x85c0	                           test eax, eax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e7e	            0x7513	                           jne 0x4000e93	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e80	            0xeb01	                           jmp 0x4000e83	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4000e82	              0x90	                                     nop	       554	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4000e83	        0x8345e801	               add dword [rbp - 0x18], 1	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4000e87	        0x837de807	               cmp dword [rbp - 0x18], 7	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4000e8b	     0xf8e3dffffff	                           jle 0x4000dce	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4000e91	            0xeb01	                           jmp 0x4000e94	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4000e93	              0x90	                                     nop	       562	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9
0x4000e94	        0x488b45f8	                mov rax, qword [rbp - 8]	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4000e98	          0x4889c7	                            mov rdi, rax	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4000e9b	      0xe800000000	                          call 0x4000ea0	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4000ea0	        0x837de808	               cmp dword [rbp - 0x18], 8	       567	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_10
0x4000ea4	     0xf8599000000	                           jne 0x4000f43	       567	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_10
0x4000eaa	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4000ead	          0x8945e8	             mov dword [rbp - 0x18], eax	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4000eb0	            0xeb6d	                           jmp 0x4000f1f	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4000eb2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000eb6	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000eb9	          0x4863d2	                         movsxd rdx, edx	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000ebc	        0x4883c20c	                            add rdx, 0xc	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000ec0	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000ec4	          0x4885c0	                           test rax, rax	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000ec7	            0x7452	                            je 0x4000f1b	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000ec9	        0x837df401	                cmp dword [rbp - 0xc], 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4000ecd	            0x7522	                           jne 0x4000ef1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4000ecf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4000ed3	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4000ed6	          0x4863d2	                         movsxd rdx, edx	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4000ed9	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4000ede	        0x488d4801	                      lea rcx, [rax + 1]	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4000ee2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4000ee6	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4000ee9	          0x4863d2	                         movsxd rdx, edx	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4000eec	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4000ef1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000ef5	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000ef8	          0x4863d2	                         movsxd rdx, edx	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000efb	        0x4883c208	                              add rdx, 8	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000eff	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000f04	        0x488d48ff	                      lea rcx, [rax - 1]	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000f08	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000f0c	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000f0f	          0x4863d2	                         movsxd rdx, edx	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000f12	        0x4883c208	                              add rdx, 8	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000f16	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4000f1b	        0x8345e801	               add dword [rbp - 0x18], 1	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4000f1f	        0x837de807	               cmp dword [rbp - 0x18], 7	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4000f23	            0x7e8d	                           jle 0x4000eb2	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4000f25	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000f29	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000f2c	          0x4863d2	                         movsxd rdx, edx	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000f2f	        0x4883c208	                              add rdx, 8	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000f33	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000f38	          0x4885c0	                           test rax, rax	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000f3b	     0xf8f0ffeffff	                            jg 0x4000d50	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000f41	            0xeb01	                           jmp 0x4000f44	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4000f43	              0x90	                                     nop	       568	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_10
0x4000f44	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x4000f48	            0x7415	                            je 0x4000f5f	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x4000f4a	    0xc745f4ffffff	      mov dword [rbp - 0xc], 0xffffffff 	       581	diff.c	ELSE_1	FUNCTION_11	FOR_2
0x4000f51	      0xe9f5fdffff	                           jmp 0x4000d4b	       582	diff.c	ELSE_1	FUNCTION_11	FOR_2
0x4000f56	              0x90	                                     nop	       530	diff.c	ELSE_1	FUNCTION_11	IF_2
0x4000f57	            0xeb07	                           jmp 0x4000f60	       530	diff.c	ELSE_1	FUNCTION_11	IF_2
0x4000f59	              0x90	                                     nop	       533	diff.c	ELSE_1	FUNCTION_11	IF_3
0x4000f5a	            0xeb04	                           jmp 0x4000f60	       533	diff.c	ELSE_1	FUNCTION_11	IF_3
0x4000f5c	              0x90	                                     nop	       550	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0x4000f5d	            0xeb01	                           jmp 0x4000f60	       550	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0x4000f5f	              0x90	                                     nop	       580	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x4000f60	              0xc9	                                   leave	       583	diff.c	ELSE_1	FUNCTION_11
0x4000f61	              0xc3	                                     ret	       583	diff.c	ELSE_1	FUNCTION_11
diff_cmp	WHILE,1:SWITCH,0:ELSE,1:functions,0:IF,5:CALL,9:DO,0:FOR,0	112
0x40035a8	              0x55	                                push rbp	      1679	diff.c	FUNCTION_29
0x40035a9	          0x4889e5	                            mov rbp, rsp	      1679	diff.c	FUNCTION_29
0x40035ac	        0x4883ec30	                           sub rsp, 0x30	      1679	diff.c	FUNCTION_29
0x40035b0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1679	diff.c	FUNCTION_29
0x40035b4	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1679	diff.c	FUNCTION_29
0x40035b8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1679	diff.c	FUNCTION_29
0x40035c1	        0x488945f8	                mov qword [rbp - 8], rax	      1679	diff.c	FUNCTION_29
0x40035c5	            0x31c0	                            xor eax, eax	      1679	diff.c	FUNCTION_29
0x40035c7	    0x8b0500000000	            mov eax, dword [0x040035cd] 	      1683	diff.c	FUNCTION_29	IF_1
0x40035cd	          0x83e006	                              and eax, 6	      1683	diff.c	FUNCTION_29	IF_1
0x40035d0	            0x85c0	                           test eax, eax	      1683	diff.c	FUNCTION_29	IF_1
0x40035d2	            0x7518	                           jne 0x40035ec	      1683	diff.c	FUNCTION_29	IF_1
0x40035d4	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1684	diff.c	FUNCTION_29	CALL_1
0x40035d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1684	diff.c	FUNCTION_29	CALL_1
0x40035dc	          0x4889d6	                            mov rsi, rdx	      1684	diff.c	FUNCTION_29	CALL_1
0x40035df	          0x4889c7	                            mov rdi, rax	      1684	diff.c	FUNCTION_29	CALL_1
0x40035e2	      0xe800000000	                          call 0x40035e7	      1684	diff.c	FUNCTION_29	CALL_1
0x40035e7	      0xe923010000	                           jmp 0x400370f	      1684	diff.c	FUNCTION_29	CALL_1
0x40035ec	    0x8b0500000000	            mov eax, dword [0x040035f2] 	      1685	diff.c	FUNCTION_29	IF_2
0x40035f2	          0x83e002	                              and eax, 2	      1685	diff.c	FUNCTION_29	IF_2
0x40035f5	            0x85c0	                           test eax, eax	      1685	diff.c	FUNCTION_29	IF_2
0x40035f7	            0x742a	                            je 0x4003623	      1685	diff.c	FUNCTION_29	IF_2
0x40035f9	    0x8b0500000000	            mov eax, dword [0x040035ff] 	      1685	diff.c	FUNCTION_29	IF_2
0x40035ff	          0x83e004	                              and eax, 4	      1685	diff.c	FUNCTION_29	IF_2
0x4003602	            0x85c0	                           test eax, eax	      1685	diff.c	FUNCTION_29	IF_2
0x4003604	            0x751d	                           jne 0x4003623	      1685	diff.c	FUNCTION_29	IF_2
0x4003606	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1686	diff.c	FUNCTION_29	CALL_2
0x400360a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1686	diff.c	FUNCTION_29	CALL_2
0x400360e	      0xbaffffff7f	                     mov edx, 0x7fffffff	      1686	diff.c	FUNCTION_29	CALL_2
0x4003613	          0x4889ce	                            mov rsi, rcx	      1686	diff.c	FUNCTION_29	CALL_2
0x4003616	          0x4889c7	                            mov rdi, rax	      1686	diff.c	FUNCTION_29	CALL_2
0x4003619	      0xe800000000	                          call 0x400361e	      1686	diff.c	FUNCTION_29	CALL_2
0x400361e	      0xe9ec000000	                           jmp 0x400370f	      1686	diff.c	FUNCTION_29	CALL_2
0x4003623	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1689	diff.c	FUNCTION_29
0x4003627	        0x488945e8	             mov qword [rbp - 0x18], rax	      1689	diff.c	FUNCTION_29
0x400362b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1690	diff.c	FUNCTION_29
0x400362f	        0x488945f0	             mov qword [rbp - 0x10], rax	      1690	diff.c	FUNCTION_29
0x4003633	            0xeb7b	                           jmp 0x40036b0	      1691	diff.c	FUNCTION_29	WHILE_1
0x4003635	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x4003639	           0xfb600	                   movzx eax, byte [rax]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x400363c	            0x3c20	                            cmp al, 0x20	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x400363e	            0x740b	                            je 0x400364b	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x4003640	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x4003644	           0xfb600	                   movzx eax, byte [rax]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x4003647	            0x3c09	                               cmp al, 9	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x4003649	            0x7538	                           jne 0x4003683	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x400364b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x400364f	           0xfb600	                   movzx eax, byte [rax]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x4003652	            0x3c20	                            cmp al, 0x20	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x4003654	            0x740b	                            je 0x4003661	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x4003656	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x400365a	           0xfb600	                   movzx eax, byte [rax]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x400365d	            0x3c09	                               cmp al, 9	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x400365f	            0x7522	                           jne 0x4003683	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x4003661	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1695	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_5
0x4003665	          0x4889c7	                            mov rdi, rax	      1695	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_5
0x4003668	      0xe800000000	                          call 0x400366d	      1695	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_5
0x400366d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1695	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_5
0x4003671	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x4003675	          0x4889c7	                            mov rdi, rax	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x4003678	      0xe800000000	                          call 0x400367d	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x400367d	        0x488945f0	             mov qword [rbp - 0x10], rax	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x4003681	            0xeb2d	                           jmp 0x40036b0	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x4003683	        0x488d55e4	                   lea rdx, [rbp - 0x1c]	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x4003687	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x400368b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x400368f	          0x4889ce	                            mov rsi, rcx	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x4003692	          0x4889c7	                            mov rdi, rax	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x4003695	      0xe8ebfdffff	                call sym.diff_equal_char	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x400369a	            0x85c0	                           test eax, eax	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x400369c	            0x742e	                            je 0x40036cc	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x400369e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1702	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x40036a1	            0x4898	                                    cdqe	      1702	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x40036a3	        0x480145e8	            add qword [rbp - 0x18], rax 	      1702	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x40036a7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1703	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x40036aa	            0x4898	                                    cdqe	      1703	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x40036ac	        0x480145f0	            add qword [rbp - 0x10], rax 	      1703	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x40036b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1691	diff.c	FUNCTION_29	WHILE_1
0x40036b4	           0xfb600	                   movzx eax, byte [rax]	      1691	diff.c	FUNCTION_29	WHILE_1
0x40036b7	            0x84c0	                             test al, al	      1691	diff.c	FUNCTION_29	WHILE_1
0x40036b9	            0x7412	                            je 0x40036cd	      1691	diff.c	FUNCTION_29	WHILE_1
0x40036bb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	diff.c	FUNCTION_29	WHILE_1
0x40036bf	           0xfb600	                   movzx eax, byte [rax]	      1691	diff.c	FUNCTION_29	WHILE_1
0x40036c2	            0x84c0	                             test al, al	      1691	diff.c	FUNCTION_29	WHILE_1
0x40036c4	     0xf856bffffff	                           jne 0x4003635	      1691	diff.c	FUNCTION_29	WHILE_1
0x40036ca	            0xeb01	                           jmp 0x40036cd	      1691	diff.c	FUNCTION_29	WHILE_1
0x40036cc	              0x90	                                     nop	      1701	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4
0x40036cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1708	diff.c	FUNCTION_29	CALL_8
0x40036d1	          0x4889c7	                            mov rdi, rax	      1708	diff.c	FUNCTION_29	CALL_8
0x40036d4	      0xe800000000	                          call 0x40036d9	      1708	diff.c	FUNCTION_29	CALL_8
0x40036d9	        0x488945e8	             mov qword [rbp - 0x18], rax	      1708	diff.c	FUNCTION_29	CALL_8
0x40036dd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1709	diff.c	FUNCTION_29	CALL_9
0x40036e1	          0x4889c7	                            mov rdi, rax	      1709	diff.c	FUNCTION_29	CALL_9
0x40036e4	      0xe800000000	                          call 0x40036e9	      1709	diff.c	FUNCTION_29	CALL_9
0x40036e9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1709	diff.c	FUNCTION_29	CALL_9
0x40036ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1710	diff.c	FUNCTION_29	IF_5
0x40036f1	           0xfb600	                   movzx eax, byte [rax]	      1710	diff.c	FUNCTION_29	IF_5
0x40036f4	            0x84c0	                             test al, al	      1710	diff.c	FUNCTION_29	IF_5
0x40036f6	            0x750b	                           jne 0x4003703	      1710	diff.c	FUNCTION_29	IF_5
0x40036f8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1710	diff.c	FUNCTION_29	IF_5
0x40036fc	           0xfb600	                   movzx eax, byte [rax]	      1710	diff.c	FUNCTION_29	IF_5
0x40036ff	            0x84c0	                             test al, al	      1710	diff.c	FUNCTION_29	IF_5
0x4003701	            0x7407	                            je 0x400370a	      1710	diff.c	FUNCTION_29	IF_5
0x4003703	      0xb801000000	                              mov eax, 1	      1711	diff.c	FUNCTION_29	IF_5
0x4003708	            0xeb05	                           jmp 0x400370f	      1711	diff.c	FUNCTION_29	IF_5
0x400370a	      0xb800000000	                              mov eax, 0	      1712	diff.c	FUNCTION_29
0x400370f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1713	diff.c	FUNCTION_29
0x4003713	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1713	diff.c	FUNCTION_29
0x400371c	            0x7405	                            je 0x4003723	      1713	diff.c	FUNCTION_29
0x400371e	      0xe800000000	                          call 0x4003723	      1713	diff.c	FUNCTION_29
0x4003723	              0xc9	                                   leave	      1713	diff.c	FUNCTION_29
0x4003724	              0xc3	                                     ret	      1713	diff.c	FUNCTION_29
diff_file	WHILE,0:SWITCH,0:ELSE,1:functions,0:IF,3:CALL,14:DO,0:FOR,0	103
0x4001630	              0x55	                                push rbp	       841	diff.c	FUNCTION_16
0x4001631	          0x4889e5	                            mov rbp, rsp	       841	diff.c	FUNCTION_16
0x4001634	              0x53	                                push rbx	       841	diff.c	FUNCTION_16
0x4001635	        0x4883ec38	                           sub rsp, 0x38	       841	diff.c	FUNCTION_16
0x4001639	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       841	diff.c	FUNCTION_16
0x400163d	        0x488975d0	             mov qword [rbp - 0x30], rsi	       841	diff.c	FUNCTION_16
0x4001641	        0x488955c8	             mov qword [rbp - 0x38], rdx	       841	diff.c	FUNCTION_16
0x4001645	    0x488b05000000	            mov rax, qword [0x0400164c] 	       846	diff.c	FUNCTION_16	IF_1
0x400164c	           0xfb600	                   movzx eax, byte [rax]	       846	diff.c	FUNCTION_16	IF_1
0x400164f	            0x84c0	                             test al, al	       846	diff.c	FUNCTION_16	IF_1
0x4001651	            0x741c	                            je 0x400166f	       846	diff.c	FUNCTION_16	IF_1
0x4001653	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       848	diff.c	FUNCTION_16	CALL_1
0x4001657	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       848	diff.c	FUNCTION_16	CALL_1
0x400165b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       848	diff.c	FUNCTION_16	CALL_1
0x400165f	          0x4889ce	                            mov rsi, rcx	       848	diff.c	FUNCTION_16	CALL_1
0x4001662	          0x4889c7	                            mov rdi, rax	       848	diff.c	FUNCTION_16	CALL_1
0x4001665	      0xe800000000	                          call 0x400166a	       848	diff.c	FUNCTION_16	CALL_1
0x400166a	      0xe940010000	                           jmp 0x40017af	       881	diff.c	FUNCTION_16
0x400166f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4001673	          0x4889c7	                            mov rdi, rax	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4001676	      0xe800000000	                          call 0x400167b	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x400167b	          0x4889c3	                            mov rbx, rax	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x400167e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4001682	          0x4889c7	                            mov rdi, rax	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4001685	      0xe800000000	                          call 0x400168a	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x400168a	          0x4801c3	                            add rbx, rax	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x400168d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x4001691	          0x4889c7	                            mov rdi, rax	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x4001694	      0xe800000000	                          call 0x4001699	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x4001699	          0x4801c3	                            add rbx, rax	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x400169c	    0x488b05000000	            mov rax, qword [0x040016a3] 	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x40016a3	          0x4889c7	                            mov rdi, rax	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x40016a6	      0xe800000000	                          call 0x40016ab	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x40016ab	          0x4801d8	                            add rax, rbx	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x40016ae	        0x4883c01b	                           add rax, 0x1b	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x40016b2	        0x488945e0	             mov qword [rbp - 0x20], rax	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x40016b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       854	diff.c	FUNCTION_16	ELSE_1	CALL_6
0x40016ba	            0x89c7	                            mov edi, eax	       854	diff.c	FUNCTION_16	ELSE_1	CALL_6
0x40016bc	      0xe800000000	                          call 0x40016c1	       854	diff.c	FUNCTION_16	ELSE_1	CALL_6
0x40016c1	        0x488945e8	             mov qword [rbp - 0x18], rax	       854	diff.c	FUNCTION_16	ELSE_1	CALL_6
0x40016c5	      0x48837de800	               cmp qword [rbp - 0x18], 0	       855	diff.c	FUNCTION_16	ELSE_1	IF_2
0x40016ca	     0xf84df000000	                            je 0x40017af	       855	diff.c	FUNCTION_16	ELSE_1	IF_2
0x40016d0	      0xbf00000000	                              mov edi, 0	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x40016d5	      0xe800000000	                          call 0x40016da	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x40016da	          0x4885c0	                           test rax, rax	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x40016dd	            0x740f	                            je 0x40016ee	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x40016df	      0xbe00000000	                              mov esi, 0	       859	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_8
0x40016e4	      0xbf00000000	                              mov edi, 0	       859	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_8
0x40016e9	      0xe800000000	                          call 0x40016ee	       859	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_8
0x40016ee	    0x8b0500000000	            mov eax, dword [0x040016f4] 	       872	diff.c	FUNCTION_16	ELSE_1	IF_2
0x40016f4	          0x83e002	                              and eax, 2	       872	diff.c	FUNCTION_16	ELSE_1	IF_2
0x40016f7	            0x85c0	                           test eax, eax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40016f9	            0x7407	                            je 0x4001702	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40016fb	      0xb900000000	                              mov ecx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001700	            0xeb05	                           jmp 0x4001707	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001702	      0xb900000000	                              mov ecx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001707	    0x8b0500000000	            mov eax, dword [0x0400170d] 	       871	diff.c	FUNCTION_16	ELSE_1	IF_2
0x400170d	          0x83e004	                              and eax, 4	       871	diff.c	FUNCTION_16	ELSE_1	IF_2
0x4001710	            0x85c0	                           test eax, eax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001712	            0x7407	                            je 0x400171b	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001714	      0xbf00000000	                              mov edi, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001719	            0xeb05	                           jmp 0x4001720	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400171b	      0xbf00000000	                              mov edi, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001720	    0x8b0500000000	            mov eax, dword [0x04001726] 	       865	diff.c	FUNCTION_16	ELSE_1	IF_2
0x4001726	            0x85c0	                           test eax, eax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001728	            0x7507	                           jne 0x4001731	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400172a	      0xba00000000	                              mov edx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400172f	            0xeb05	                           jmp 0x4001736	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001731	      0xba00000000	                              mov edx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001736	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400173a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400173e	        0x4883ec08	                              sub rsp, 8	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001742	          0xff75d0	                 push qword [rbp - 0x30]	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001745	          0xff75d8	                 push qword [rbp - 0x28]	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001748	              0x51	                                push rcx	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001749	          0x4989f9	                             mov r9, rdi	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400174c	    0x41b800000000	                              mov r8d, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001752	          0x4889d1	                            mov rcx, rdx	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001755	      0xba00000000	                              mov edx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400175a	          0x4889c7	                            mov rdi, rax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400175d	      0xb800000000	                              mov eax, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001762	      0xe800000000	                          call 0x4001767	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4001767	        0x4883c420	                           add rsp, 0x20	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400176b	    0x488b15000000	            mov rdx, qword [0x04001772] 	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x4001772	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x4001776	            0x89c6	                            mov esi, eax	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x4001778	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x400177c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x4001780	          0x4889c7	                            mov rdi, rax	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x4001783	      0xe800000000	                          call 0x4001788	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x4001788	      0xe800000000	                          call 0x400178d	       875	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_11
0x400178d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       876	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_12
0x4001791	      0xbe19000000	                           mov esi, 0x19	       876	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_12
0x4001796	          0x4889c7	                            mov rdi, rax	       876	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_12
0x4001799	      0xe800000000	                          call 0x400179e	       876	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_12
0x400179e	      0xe800000000	                          call 0x40017a3	       877	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_13
0x40017a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       878	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_14
0x40017a7	          0x4889c7	                            mov rdi, rax	       878	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_14
0x40017aa	      0xe800000000	                          call 0x40017af	       878	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_14
0x40017af	              0x90	                                     nop	       881	diff.c	FUNCTION_16
0x40017b0	        0x488b5df8	                mov rbx, qword [rbp - 8]	       881	diff.c	FUNCTION_16
0x40017b4	              0xc9	                                   leave	       881	diff.c	FUNCTION_16
0x40017b5	              0xc3	                                     ret	       881	diff.c	FUNCTION_16
diff_buf_adjust	WHILE,0:SWITCH,0:ELSE,1:functions,0:IF,4:CALL,4:DO,0:FOR,0	54
0x40000c5	              0x55	                                push rbp	        88	diff.c	FUNCTION_2
0x40000c6	          0x4889e5	                            mov rbp, rsp	        88	diff.c	FUNCTION_2
0x40000c9	        0x4883ec20	                           sub rsp, 0x20	        88	diff.c	FUNCTION_2
0x40000cd	        0x48897de8	             mov qword [rbp - 0x18], rdi	        88	diff.c	FUNCTION_2
0x40000d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        92	diff.c	FUNCTION_2	IF_1
0x40000d5	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	        92	diff.c	FUNCTION_2	IF_1
0x40000db	            0x85c0	                           test eax, eax	        92	diff.c	FUNCTION_2	IF_1
0x40000dd	     0xf859c000000	                           jne 0x400017f	        92	diff.c	FUNCTION_2	IF_1
0x40000e3	    0x488b05000000	            mov rax, qword [0x040000ea] 	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x40000ea	        0x488945f8	                mov qword [rbp - 8], rax	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x40000ee	            0xeb2f	                           jmp 0x400011f	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x40000f0	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x40000f4	        0x488b5008	                mov rdx, qword [rax + 8]	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x40000f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x40000fc	        0x488b4008	                mov rax, qword [rax + 8]	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x4000100	          0x4839c2	                            cmp rdx, rax	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x4000103	            0x750e	                           jne 0x4000113	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x4000105	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x4000109	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x400010f	            0x85c0	                           test eax, eax	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x4000111	            0x7515	                           jne 0x4000128	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x4000113	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x4000117	        0x488b4020	            mov rax, qword [rax + 0x20] 	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x400011b	        0x488945f8	                mov qword [rbp - 8], rax	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x400011f	      0x48837df800	                  cmp qword [rbp - 8], 0	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x4000124	            0x75ca	                           jne 0x40000f0	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x4000126	            0xeb01	                           jmp 0x4000129	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x4000128	              0x90	                                     nop	        98	diff.c	FUNCTION_2	IF_1	IF_2
0x4000129	      0x48837df800	                  cmp qword [rbp - 8], 0	        99	diff.c	FUNCTION_2	IF_1	IF_3
0x400012e	            0x755f	                           jne 0x400018f	        99	diff.c	FUNCTION_2	IF_1	IF_3
0x4000130	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0x4000134	        0x488b4008	                mov rax, qword [rax + 8]	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0x4000138	          0x4889c7	                            mov rdi, rax	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0x400013b	      0xe85a010000	                   call sym.diff_buf_idx	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0x4000140	          0x8945f4	              mov dword [rbp - 0xc], eax	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0x4000143	        0x837df408	                cmp dword [rbp - 0xc], 8	       102	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4000147	            0x7446	                            je 0x400018f	       102	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4000149	    0x488b05000000	            mov rax, qword [0x04000150] 	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4000150	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4000153	          0x4863d2	                         movsxd rdx, edx	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4000156	        0x4883c20c	                            add rdx, 0xc	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x400015a	    0x48c704d00000	              mov qword [rax + rdx*8], 0	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4000162	    0x488b05000000	            mov rax, qword [0x04000169] 	       105	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4000169	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       105	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4000173	      0xbf01000000	                              mov edi, 1	       106	diff.c	FUNCTION_2	IF_1	IF_3	IF_4	CALL_3
0x4000178	      0xe86c0e0000	                    call sym.diff_redraw	       106	diff.c	FUNCTION_2	IF_1	IF_3	IF_4	CALL_3
0x400017d	            0xeb10	                           jmp 0x400018f	       112	diff.c	FUNCTION_2
0x400017f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       111	diff.c	FUNCTION_2	CALL_4
0x4000183	        0x488b4008	                mov rax, qword [rax + 8]	       111	diff.c	FUNCTION_2	CALL_4
0x4000187	          0x4889c7	                            mov rdi, rax	       111	diff.c	FUNCTION_2	CALL_4
0x400018a	      0xe800000000	                          call 0x400018f	       111	diff.c	FUNCTION_2	CALL_4
0x400018f	              0x90	                                     nop	       112	diff.c	FUNCTION_2
0x4000190	              0xc9	                                   leave	       112	diff.c	FUNCTION_2
0x4000191	              0xc3	                                     ret	       112	diff.c	FUNCTION_2
diff_buf_clear	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,1:CALL,1:DO,0:FOR,1	27
0x400022e	              0x55	                                push rbp	       147	diff.c	FUNCTION_4
0x400022f	          0x4889e5	                            mov rbp, rsp	       147	diff.c	FUNCTION_4
0x4000232	        0x4883ec10	                           sub rsp, 0x10	       147	diff.c	FUNCTION_4
0x4000236	    0xc745fc000000	                  mov dword [rbp - 4], 0	       150	diff.c	FUNCTION_4	FOR_1
0x400023d	            0xeb52	                           jmp 0x4000291	       150	diff.c	FUNCTION_4	FOR_1
0x400023f	    0x488b05000000	            mov rax, qword [0x04000246] 	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000246	          0x8b55fc	                mov edx, dword [rbp - 4]	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000249	          0x4863d2	                         movsxd rdx, edx	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x400024c	        0x4883c20c	                            add rdx, 0xc	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000250	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000254	          0x4885c0	                           test rax, rax	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000257	            0x7434	                            je 0x400028d	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000259	    0x488b05000000	            mov rax, qword [0x04000260] 	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000260	          0x8b55fc	                mov edx, dword [rbp - 4]	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000263	          0x4863d2	                         movsxd rdx, edx	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000266	        0x4883c20c	                            add rdx, 0xc	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x400026a	    0x48c704d00000	              mov qword [rax + rdx*8], 0	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000272	    0x488b05000000	            mov rax, qword [0x04000279] 	       154	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000279	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       154	diff.c	FUNCTION_4	FOR_1	IF_1
0x4000283	      0xbf01000000	                              mov edi, 1	       155	diff.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x4000288	      0xe85c0d0000	                    call sym.diff_redraw	       155	diff.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x400028d	        0x8345fc01	                  add dword [rbp - 4], 1	       150	diff.c	FUNCTION_4	FOR_1
0x4000291	        0x837dfc07	                  cmp dword [rbp - 4], 7	       150	diff.c	FUNCTION_4	FOR_1
0x4000295	            0x7ea8	                           jle 0x400023f	       150	diff.c	FUNCTION_4	FOR_1
0x4000297	              0x90	                                     nop	       157	diff.c	FUNCTION_4
0x4000298	              0xc9	                                   leave	       157	diff.c	FUNCTION_4
0x4000299	              0xc3	                                     ret	       157	diff.c	FUNCTION_4
diff_lnum_win	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,6:CALL,3:DO,0:FOR,1	101
0x400594f	              0x55	                                push rbp	      2652	diff.c	FUNCTION_44
0x4005950	          0x4889e5	                            mov rbp, rsp	      2652	diff.c	FUNCTION_44
0x4005953	        0x4883ec30	                           sub rsp, 0x30	      2652	diff.c	FUNCTION_44
0x4005957	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2652	diff.c	FUNCTION_44
0x400595b	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2652	diff.c	FUNCTION_44
0x400595f	    0x488b05000000	            mov rax, qword [0x04005966] 	      2658	diff.c	FUNCTION_44	CALL_1
0x4005966	          0x4889c7	                            mov rdi, rax	      2658	diff.c	FUNCTION_44	CALL_1
0x4005969	      0xe82ca9ffff	                   call sym.diff_buf_idx	      2658	diff.c	FUNCTION_44	CALL_1
0x400596e	          0x8945e8	             mov dword [rbp - 0x18], eax	      2658	diff.c	FUNCTION_44	CALL_1
0x4005971	        0x837de808	               cmp dword [rbp - 0x18], 8	      2659	diff.c	FUNCTION_44	IF_1
0x4005975	            0x750a	                           jne 0x4005981	      2659	diff.c	FUNCTION_44	IF_1
0x4005977	      0xb800000000	                              mov eax, 0	      2660	diff.c	FUNCTION_44	IF_1
0x400597c	      0xe941010000	                           jmp 0x4005ac2	      2660	diff.c	FUNCTION_44	IF_1
0x4005981	    0x488b05000000	            mov rax, qword [0x04005988] 	      2662	diff.c	FUNCTION_44	IF_2
0x4005988	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2662	diff.c	FUNCTION_44	IF_2
0x400598e	            0x85c0	                           test eax, eax	      2662	diff.c	FUNCTION_44	IF_2
0x4005990	            0x740a	                            je 0x400599c	      2662	diff.c	FUNCTION_44	IF_2
0x4005992	      0xbf00000000	                              mov edi, 0	      2663	diff.c	FUNCTION_44	CALL_2
0x4005997	      0xe800000000	                          call 0x400599c	      2663	diff.c	FUNCTION_44	CALL_2
0x400599c	    0x488b05000000	            mov rax, qword [0x040059a3] 	      2666	diff.c	FUNCTION_44	FOR_1
0x40059a3	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2666	diff.c	FUNCTION_44	FOR_1
0x40059a7	        0x488945f0	             mov qword [rbp - 0x10], rax	      2666	diff.c	FUNCTION_44	FOR_1
0x40059ab	            0xeb36	                           jmp 0x40059e3	      2666	diff.c	FUNCTION_44	FOR_1
0x40059ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059b1	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059b4	          0x4863d2	                         movsxd rdx, edx	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059b7	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059c0	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059c3	          0x4863c9	                         movsxd rcx, ecx	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059c6	        0x4883c108	                              add rcx, 8	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059ca	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059cf	          0x4801d0	                            add rax, rdx	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059d2	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059d6	            0x7d14	                           jge 0x40059ec	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2666	diff.c	FUNCTION_44	FOR_1
0x40059dc	          0x488b00	                    mov rax, qword [rax]	      2666	diff.c	FUNCTION_44	FOR_1
0x40059df	        0x488945f0	             mov qword [rbp - 0x10], rax	      2666	diff.c	FUNCTION_44	FOR_1
0x40059e3	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2666	diff.c	FUNCTION_44	FOR_1
0x40059e8	            0x75c3	                           jne 0x40059ad	      2666	diff.c	FUNCTION_44	FOR_1
0x40059ea	            0xeb01	                           jmp 0x40059ed	      2666	diff.c	FUNCTION_44	FOR_1
0x40059ec	              0x90	                                     nop	      2668	diff.c	FUNCTION_44	FOR_1	IF_3
0x40059ed	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2671	diff.c	FUNCTION_44	IF_4
0x40059f2	            0x7524	                           jne 0x4005a18	      2671	diff.c	FUNCTION_44	IF_4
0x40059f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2672	diff.c	FUNCTION_44	IF_4
0x40059f8	        0x488b4008	                mov rax, qword [rax + 8]	      2672	diff.c	FUNCTION_44	IF_4
0x40059fc	          0x488b10	                    mov rdx, qword [rax]	      2672	diff.c	FUNCTION_44	IF_4
0x40059ff	    0x488b05000000	            mov rax, qword [0x04005a06] 	      2673	diff.c	FUNCTION_44	IF_4
0x4005a06	          0x488b00	                    mov rax, qword [rax]	      2673	diff.c	FUNCTION_44	IF_4
0x4005a09	        0x482b45d8	             sub rax, qword [rbp - 0x28]	      2673	diff.c	FUNCTION_44	IF_4
0x4005a0d	          0x4829c2	                            sub rdx, rax	      2672	diff.c	FUNCTION_44	IF_4
0x4005a10	          0x4889d0	                            mov rax, rdx	      2672	diff.c	FUNCTION_44	IF_4
0x4005a13	      0xe9aa000000	                           jmp 0x4005ac2	      2672	diff.c	FUNCTION_44	IF_4
0x4005a18	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2676	diff.c	FUNCTION_44	CALL_3
0x4005a1c	        0x488b4008	                mov rax, qword [rax + 8]	      2676	diff.c	FUNCTION_44	CALL_3
0x4005a20	          0x4889c7	                            mov rdi, rax	      2676	diff.c	FUNCTION_44	CALL_3
0x4005a23	      0xe872a8ffff	                   call sym.diff_buf_idx	      2676	diff.c	FUNCTION_44	CALL_3
0x4005a28	          0x8945ec	             mov dword [rbp - 0x14], eax	      2676	diff.c	FUNCTION_44	CALL_3
0x4005a2b	        0x837dec08	               cmp dword [rbp - 0x14], 8	      2677	diff.c	FUNCTION_44	IF_5
0x4005a2f	            0x750a	                           jne 0x4005a3b	      2677	diff.c	FUNCTION_44	IF_5
0x4005a31	      0xb800000000	                              mov eax, 0	      2678	diff.c	FUNCTION_44	IF_5
0x4005a36	      0xe987000000	                           jmp 0x4005ac2	      2678	diff.c	FUNCTION_44	IF_5
0x4005a3b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2680	diff.c	FUNCTION_44
0x4005a3f	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2680	diff.c	FUNCTION_44
0x4005a42	          0x4863d2	                         movsxd rdx, edx	      2680	diff.c	FUNCTION_44
0x4005a45	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      2680	diff.c	FUNCTION_44
0x4005a4a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2680	diff.c	FUNCTION_44
0x4005a4e	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2680	diff.c	FUNCTION_44
0x4005a51	          0x4863d2	                         movsxd rdx, edx	      2680	diff.c	FUNCTION_44
0x4005a54	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2680	diff.c	FUNCTION_44
0x4005a59	          0x4829c1	                            sub rcx, rax	      2680	diff.c	FUNCTION_44
0x4005a5c	          0x4889ca	                            mov rdx, rcx	      2680	diff.c	FUNCTION_44
0x4005a5f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2680	diff.c	FUNCTION_44
0x4005a63	          0x4801d0	                            add rax, rdx	      2680	diff.c	FUNCTION_44
0x4005a66	        0x488945f8	                mov qword [rbp - 8], rax	      2680	diff.c	FUNCTION_44
0x4005a6a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2681	diff.c	FUNCTION_44	IF_6
0x4005a6e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2681	diff.c	FUNCTION_44	IF_6
0x4005a71	          0x4863d2	                         movsxd rdx, edx	      2681	diff.c	FUNCTION_44	IF_6
0x4005a74	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2681	diff.c	FUNCTION_44	IF_6
0x4005a79	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2681	diff.c	FUNCTION_44	IF_6
0x4005a7d	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2681	diff.c	FUNCTION_44	IF_6
0x4005a80	          0x4863c9	                         movsxd rcx, ecx	      2681	diff.c	FUNCTION_44	IF_6
0x4005a83	        0x4883c108	                              add rcx, 8	      2681	diff.c	FUNCTION_44	IF_6
0x4005a87	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2681	diff.c	FUNCTION_44	IF_6
0x4005a8c	          0x4801d0	                            add rax, rdx	      2681	diff.c	FUNCTION_44	IF_6
0x4005a8f	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2681	diff.c	FUNCTION_44	IF_6
0x4005a93	            0x7d29	                           jge 0x4005abe	      2681	diff.c	FUNCTION_44	IF_6
0x4005a95	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2682	diff.c	FUNCTION_44	IF_6
0x4005a99	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2682	diff.c	FUNCTION_44	IF_6
0x4005a9c	          0x4863d2	                         movsxd rdx, edx	      2682	diff.c	FUNCTION_44	IF_6
0x4005a9f	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2682	diff.c	FUNCTION_44	IF_6
0x4005aa4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2682	diff.c	FUNCTION_44	IF_6
0x4005aa8	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2682	diff.c	FUNCTION_44	IF_6
0x4005aab	          0x4863c9	                         movsxd rcx, ecx	      2682	diff.c	FUNCTION_44	IF_6
0x4005aae	        0x4883c108	                              add rcx, 8	      2682	diff.c	FUNCTION_44	IF_6
0x4005ab2	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2682	diff.c	FUNCTION_44	IF_6
0x4005ab7	          0x4801d0	                            add rax, rdx	      2682	diff.c	FUNCTION_44	IF_6
0x4005aba	        0x488945f8	                mov qword [rbp - 8], rax	      2682	diff.c	FUNCTION_44	IF_6
0x4005abe	        0x488b45f8	                mov rax, qword [rbp - 8]	      2683	diff.c	FUNCTION_44
0x4005ac2	              0xc9	                                   leave	      2684	diff.c	FUNCTION_44
0x4005ac3	              0xc3	                                     ret	      2684	diff.c	FUNCTION_44
