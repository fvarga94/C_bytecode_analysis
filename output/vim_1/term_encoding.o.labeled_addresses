decode_usascii	ELSE,0:FOR,1:SWITCH,0:CALL,0:DO,0:functions,0:WHILE,0:IF,1	60
0x4000548	              0x55	                                push rbp	       167	encoding.c	FUNCTION_3
0x4000549	          0x4889e5	                            mov rbp, rsp	       167	encoding.c	FUNCTION_3
0x400054c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       167	encoding.c	FUNCTION_3
0x4000550	        0x488975e0	             mov qword [rbp - 0x20], rsi	       167	encoding.c	FUNCTION_3
0x4000554	        0x488955d8	             mov qword [rbp - 0x28], rdx	       167	encoding.c	FUNCTION_3
0x4000558	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       167	encoding.c	FUNCTION_3
0x400055c	        0x448945cc	             mov dword [rbp - 0x34], r8d	       167	encoding.c	FUNCTION_3
0x4000560	        0x4c894dc0	              mov qword [rbp - 0x40], r9	       167	encoding.c	FUNCTION_3
0x4000564	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       168	encoding.c	FUNCTION_3
0x4000568	          0x488b10	                    mov rdx, qword [rax]	       168	encoding.c	FUNCTION_3
0x400056b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       168	encoding.c	FUNCTION_3
0x400056f	          0x4801d0	                            add rax, rdx	       168	encoding.c	FUNCTION_3
0x4000572	           0xfb600	                   movzx eax, byte [rax]	       168	encoding.c	FUNCTION_3
0x4000575	           0xfbec0	                           movsx eax, al	       168	encoding.c	FUNCTION_3
0x4000578	      0x2580000000	                           and eax, 0x80	       168	encoding.c	FUNCTION_3
0x400057d	          0x8945fc	                mov dword [rbp - 4], eax	       168	encoding.c	FUNCTION_3
0x4000580	            0xeb65	                           jmp 0x40005e7	       170	encoding.c	FUNCTION_3	FOR_1
0x4000582	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       171	encoding.c	FUNCTION_3	FOR_1
0x4000586	          0x488b10	                    mov rdx, qword [rax]	       171	encoding.c	FUNCTION_3	FOR_1
0x4000589	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       171	encoding.c	FUNCTION_3	FOR_1
0x400058d	          0x4801d0	                            add rax, rdx	       171	encoding.c	FUNCTION_3	FOR_1
0x4000590	           0xfb610	                   movzx edx, byte [rax]	       171	encoding.c	FUNCTION_3	FOR_1
0x4000593	          0x8b45fc	                mov eax, dword [rbp - 4]	       171	encoding.c	FUNCTION_3	FOR_1
0x4000596	            0x31d0	                            xor eax, edx	       171	encoding.c	FUNCTION_3	FOR_1
0x4000598	          0x8845fb	                  mov byte [rbp - 5], al	       171	encoding.c	FUNCTION_3	FOR_1
0x400059b	        0x807dfb1f	                cmp byte [rbp - 5], 0x1f	       173	encoding.c	FUNCTION_3	FOR_1	IF_1
0x400059f	            0x7660	                           jbe 0x4000601	       173	encoding.c	FUNCTION_3	FOR_1	IF_1
0x40005a1	        0x807dfb7f	                cmp byte [rbp - 5], 0x7f	       173	encoding.c	FUNCTION_3	FOR_1	IF_1
0x40005a5	            0x745a	                            je 0x4000601	       173	encoding.c	FUNCTION_3	FOR_1	IF_1
0x40005a7	         0xfb645fb	               movzx eax, byte [rbp - 5]	       173	encoding.c	FUNCTION_3	FOR_1	IF_1
0x40005ab	            0x84c0	                             test al, al	       173	encoding.c	FUNCTION_3	FOR_1	IF_1
0x40005ad	            0x7852	                            js 0x4000601	       173	encoding.c	FUNCTION_3	FOR_1	IF_1
0x40005af	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       176	encoding.c	FUNCTION_3	FOR_1
0x40005b3	            0x8b00	                    mov eax, dword [rax]	       176	encoding.c	FUNCTION_3	FOR_1
0x40005b5	          0x8d4801	                      lea ecx, [rax + 1]	       176	encoding.c	FUNCTION_3	FOR_1
0x40005b8	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       176	encoding.c	FUNCTION_3	FOR_1
0x40005bc	            0x890a	                    mov dword [rdx], ecx	       176	encoding.c	FUNCTION_3	FOR_1
0x40005be	            0x4898	                                    cdqe	       176	encoding.c	FUNCTION_3	FOR_1
0x40005c0	    0x488d14850000	                        lea rdx, [rax*4]	       176	encoding.c	FUNCTION_3	FOR_1
0x40005c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       176	encoding.c	FUNCTION_3	FOR_1
0x40005cc	          0x4801c2	                            add rdx, rax	       176	encoding.c	FUNCTION_3	FOR_1
0x40005cf	         0xfb645fb	               movzx eax, byte [rbp - 5]	       176	encoding.c	FUNCTION_3	FOR_1
0x40005d3	            0x8902	                    mov dword [rdx], eax	       176	encoding.c	FUNCTION_3	FOR_1
0x40005d5	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       170	encoding.c	FUNCTION_3	FOR_1
0x40005d9	          0x488b00	                    mov rax, qword [rax]	       170	encoding.c	FUNCTION_3	FOR_1
0x40005dc	        0x488d5001	                      lea rdx, [rax + 1]	       170	encoding.c	FUNCTION_3	FOR_1
0x40005e0	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       170	encoding.c	FUNCTION_3	FOR_1
0x40005e4	          0x488910	                    mov qword [rax], rdx	       170	encoding.c	FUNCTION_3	FOR_1
0x40005e7	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       170	encoding.c	FUNCTION_3	FOR_1
0x40005eb	          0x488b00	                    mov rax, qword [rax]	       170	encoding.c	FUNCTION_3	FOR_1
0x40005ee	        0x483b4518	            cmp rax, qword [rbp + 0x18] 	       170	encoding.c	FUNCTION_3	FOR_1
0x40005f2	            0x730e	                           jae 0x4000602	       170	encoding.c	FUNCTION_3	FOR_1
0x40005f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       170	encoding.c	FUNCTION_3	FOR_1
0x40005f8	            0x8b00	                    mov eax, dword [rax]	       170	encoding.c	FUNCTION_3	FOR_1
0x40005fa	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       170	encoding.c	FUNCTION_3	FOR_1
0x40005fd	            0x7c83	                            jl 0x4000582	       170	encoding.c	FUNCTION_3	FOR_1
0x40005ff	            0xeb01	                           jmp 0x4000602	       170	encoding.c	FUNCTION_3	FOR_1
0x4000601	              0x90	                                     nop	       174	encoding.c	FUNCTION_3	FOR_1	IF_1
0x4000602	              0x5d	                                 pop rbp	       178	encoding.c	FUNCTION_3
0x4000603	              0xc3	                                     ret	       178	encoding.c	FUNCTION_3
decode_table	ELSE,1:FOR,1:SWITCH,0:CALL,0:DO,0:functions,0:WHILE,0:IF,2	85
0x4000604	              0x55	                                push rbp	       193	encoding.c	FUNCTION_4
0x4000605	          0x4889e5	                            mov rbp, rsp	       193	encoding.c	FUNCTION_4
0x4000608	        0x48897de8	             mov qword [rbp - 0x18], rdi	       193	encoding.c	FUNCTION_4
0x400060c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       193	encoding.c	FUNCTION_4
0x4000610	        0x488955d8	             mov qword [rbp - 0x28], rdx	       193	encoding.c	FUNCTION_4
0x4000614	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       193	encoding.c	FUNCTION_4
0x4000618	        0x448945cc	             mov dword [rbp - 0x34], r8d	       193	encoding.c	FUNCTION_4
0x400061c	        0x4c894dc0	              mov qword [rbp - 0x40], r9	       193	encoding.c	FUNCTION_4
0x4000620	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       194	encoding.c	FUNCTION_4
0x4000624	        0x488945f8	                mov qword [rbp - 8], rax	       194	encoding.c	FUNCTION_4
0x4000628	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       195	encoding.c	FUNCTION_4
0x400062c	          0x488b10	                    mov rdx, qword [rax]	       195	encoding.c	FUNCTION_4
0x400062f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       195	encoding.c	FUNCTION_4
0x4000633	          0x4801d0	                            add rax, rdx	       195	encoding.c	FUNCTION_4
0x4000636	           0xfb600	                   movzx eax, byte [rax]	       195	encoding.c	FUNCTION_4
0x4000639	           0xfbec0	                           movsx eax, al	       195	encoding.c	FUNCTION_4
0x400063c	      0x2580000000	                           and eax, 0x80	       195	encoding.c	FUNCTION_4
0x4000641	          0x8945f4	              mov dword [rbp - 0xc], eax	       195	encoding.c	FUNCTION_4
0x4000644	      0xe9bd000000	                           jmp 0x4000706	       197	encoding.c	FUNCTION_4	FOR_1
0x4000649	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       198	encoding.c	FUNCTION_4	FOR_1
0x400064d	          0x488b10	                    mov rdx, qword [rax]	       198	encoding.c	FUNCTION_4	FOR_1
0x4000650	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       198	encoding.c	FUNCTION_4	FOR_1
0x4000654	          0x4801d0	                            add rax, rdx	       198	encoding.c	FUNCTION_4	FOR_1
0x4000657	           0xfb610	                   movzx edx, byte [rax]	       198	encoding.c	FUNCTION_4	FOR_1
0x400065a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       198	encoding.c	FUNCTION_4	FOR_1
0x400065d	            0x31d0	                            xor eax, edx	       198	encoding.c	FUNCTION_4	FOR_1
0x400065f	          0x8845f3	                mov byte [rbp - 0xd], al	       198	encoding.c	FUNCTION_4	FOR_1
0x4000662	        0x807df31f	              cmp byte [rbp - 0xd], 0x1f	       200	encoding.c	FUNCTION_4	FOR_1	IF_1
0x4000666	     0xf86b8000000	                           jbe 0x4000724	       200	encoding.c	FUNCTION_4	FOR_1	IF_1
0x400066c	        0x807df37f	              cmp byte [rbp - 0xd], 0x7f	       200	encoding.c	FUNCTION_4	FOR_1	IF_1
0x4000670	     0xf84ae000000	                            je 0x4000724	       200	encoding.c	FUNCTION_4	FOR_1	IF_1
0x4000676	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	       200	encoding.c	FUNCTION_4	FOR_1	IF_1
0x400067a	            0x84c0	                             test al, al	       200	encoding.c	FUNCTION_4	FOR_1	IF_1
0x400067c	     0xf88a2000000	                            js 0x4000724	       200	encoding.c	FUNCTION_4	FOR_1	IF_1
0x4000682	         0xfb655f3	             movzx edx, byte [rbp - 0xd]	       203	encoding.c	FUNCTION_4	FOR_1	IF_2
0x4000686	        0x488b45f8	                mov rax, qword [rbp - 8]	       203	encoding.c	FUNCTION_4	FOR_1	IF_2
0x400068a	          0x4863d2	                         movsxd rdx, edx	       203	encoding.c	FUNCTION_4	FOR_1	IF_2
0x400068d	        0x4883c204	                              add rdx, 4	       203	encoding.c	FUNCTION_4	FOR_1	IF_2
0x4000691	          0x8b0490	            mov eax, dword [rax + rdx*4]	       203	encoding.c	FUNCTION_4	FOR_1	IF_2
0x4000694	            0x85c0	                           test eax, eax	       203	encoding.c	FUNCTION_4	FOR_1	IF_2
0x4000696	            0x7436	                            je 0x40006ce	       203	encoding.c	FUNCTION_4	FOR_1	IF_2
0x4000698	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x400069c	            0x8b00	                    mov eax, dword [rax]	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x400069e	          0x8d4801	                      lea ecx, [rax + 1]	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006a1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006a5	            0x890a	                    mov dword [rdx], ecx	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006a7	            0x4898	                                    cdqe	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006a9	    0x488d14850000	                        lea rdx, [rax*4]	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006b5	          0x4801c2	                            add rdx, rax	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006b8	         0xfb64df3	             movzx ecx, byte [rbp - 0xd]	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006c0	          0x4863c9	                         movsxd rcx, ecx	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006c3	        0x4883c104	                              add rcx, 4	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006c7	          0x8b0488	            mov eax, dword [rax + rcx*4]	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006ca	            0x8902	                    mov dword [rdx], eax	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006cc	            0xeb26	                           jmp 0x40006f4	       204	encoding.c	FUNCTION_4	FOR_1	IF_2
0x40006ce	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       206	encoding.c	FUNCTION_4	FOR_1	ELSE_1
0x40006d2	            0x8b00	                    mov eax, dword [rax]	       206	encoding.c	FUNCTION_4	FOR_1	ELSE_1
0x40006d4	          0x8d4801	                      lea ecx, [rax + 1]	       206	encoding.c	FUNCTION_4	FOR_1	ELSE_1
0x40006d7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       206	encoding.c	FUNCTION_4	FOR_1	ELSE_1
0x40006db	            0x890a	                    mov dword [rdx], ecx	       206	encoding.c	FUNCTION_4	FOR_1	ELSE_1
0x40006dd	            0x4898	                                    cdqe	       206	encoding.c	FUNCTION_4	FOR_1	ELSE_1
0x40006df	    0x488d14850000	                        lea rdx, [rax*4]	       206	encoding.c	FUNCTION_4	FOR_1	ELSE_1
0x40006e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       206	encoding.c	FUNCTION_4	FOR_1	ELSE_1
0x40006eb	          0x4801c2	                            add rdx, rax	       206	encoding.c	FUNCTION_4	FOR_1	ELSE_1
0x40006ee	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	       206	encoding.c	FUNCTION_4	FOR_1	ELSE_1
0x40006f2	            0x8902	                    mov dword [rdx], eax	       206	encoding.c	FUNCTION_4	FOR_1	ELSE_1
0x40006f4	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       197	encoding.c	FUNCTION_4	FOR_1
0x40006f8	          0x488b00	                    mov rax, qword [rax]	       197	encoding.c	FUNCTION_4	FOR_1
0x40006fb	        0x488d5001	                      lea rdx, [rax + 1]	       197	encoding.c	FUNCTION_4	FOR_1
0x40006ff	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       197	encoding.c	FUNCTION_4	FOR_1
0x4000703	          0x488910	                    mov qword [rax], rdx	       197	encoding.c	FUNCTION_4	FOR_1
0x4000706	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       197	encoding.c	FUNCTION_4	FOR_1
0x400070a	          0x488b00	                    mov rax, qword [rax]	       197	encoding.c	FUNCTION_4	FOR_1
0x400070d	        0x483b4518	            cmp rax, qword [rbp + 0x18] 	       197	encoding.c	FUNCTION_4	FOR_1
0x4000711	            0x7312	                           jae 0x4000725	       197	encoding.c	FUNCTION_4	FOR_1
0x4000713	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       197	encoding.c	FUNCTION_4	FOR_1
0x4000717	            0x8b00	                    mov eax, dword [rax]	       197	encoding.c	FUNCTION_4	FOR_1
0x4000719	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       197	encoding.c	FUNCTION_4	FOR_1
0x400071c	     0xf8c27ffffff	                            jl 0x4000649	       197	encoding.c	FUNCTION_4	FOR_1
0x4000722	            0xeb01	                           jmp 0x4000725	       197	encoding.c	FUNCTION_4	FOR_1
0x4000724	              0x90	                                     nop	       201	encoding.c	FUNCTION_4	FOR_1	IF_1
0x4000725	              0x5d	                                 pop rbp	       208	encoding.c	FUNCTION_4
0x4000726	              0xc3	                                     ret	       208	encoding.c	FUNCTION_4
init_utf8	ELSE,0:FOR,0:SWITCH,0:CALL,0:DO,0:functions,0:WHILE,0:IF,0	13
0x4000040	              0x55	                                push rbp	        21	encoding.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        21	encoding.c	FUNCTION_1
0x4000044	        0x48897de8	             mov qword [rbp - 0x18], rdi	        21	encoding.c	FUNCTION_1
0x4000048	        0x488975e0	             mov qword [rbp - 0x20], rsi	        21	encoding.c	FUNCTION_1
0x400004c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        22	encoding.c	FUNCTION_1
0x4000050	        0x488945f8	                mov qword [rbp - 8], rax	        22	encoding.c	FUNCTION_1
0x4000054	        0x488b45f8	                mov rax, qword [rbp - 8]	        24	encoding.c	FUNCTION_1
0x4000058	    0xc70000000000	                      mov dword [rax], 0	        24	encoding.c	FUNCTION_1
0x400005e	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	encoding.c	FUNCTION_1
0x4000062	    0xc74004000000	                  mov dword [rax + 4], 0	        25	encoding.c	FUNCTION_1
0x4000069	              0x90	                                     nop	        26	encoding.c	FUNCTION_1
0x400006a	              0x5d	                                 pop rbp	        26	encoding.c	FUNCTION_1
0x400006b	              0xc3	                                     ret	        26	encoding.c	FUNCTION_1
decode_utf8	ELSE,9:FOR,1:SWITCH,1:CALL,5:DO,0:functions,0:WHILE,0:IF,24	352
0x400006c	              0x55	                                push rbp	        31	encoding.c	FUNCTION_2
0x400006d	          0x4889e5	                            mov rbp, rsp	        31	encoding.c	FUNCTION_2
0x4000070	        0x48897de8	             mov qword [rbp - 0x18], rdi	        31	encoding.c	FUNCTION_2
0x4000074	        0x488975e0	             mov qword [rbp - 0x20], rsi	        31	encoding.c	FUNCTION_2
0x4000078	        0x488955d8	             mov qword [rbp - 0x28], rdx	        31	encoding.c	FUNCTION_2
0x400007c	        0x48894dd0	             mov qword [rbp - 0x30], rcx	        31	encoding.c	FUNCTION_2
0x4000080	        0x448945cc	             mov dword [rbp - 0x34], r8d	        31	encoding.c	FUNCTION_2
0x4000084	        0x4c894dc0	              mov qword [rbp - 0x40], r9	        31	encoding.c	FUNCTION_2
0x4000088	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        32	encoding.c	FUNCTION_2
0x400008c	        0x488945f8	                mov qword [rbp - 8], rax	        32	encoding.c	FUNCTION_2
0x4000090	      0xe98c040000	                           jmp 0x4000521	        38	encoding.c	FUNCTION_2	FOR_1
0x4000095	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        39	encoding.c	FUNCTION_2	FOR_1
0x4000099	          0x488b10	                    mov rdx, qword [rax]	        39	encoding.c	FUNCTION_2	FOR_1
0x400009c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        39	encoding.c	FUNCTION_2	FOR_1
0x40000a0	          0x4801d0	                            add rax, rdx	        39	encoding.c	FUNCTION_2	FOR_1
0x40000a3	           0xfb600	                   movzx eax, byte [rax]	        39	encoding.c	FUNCTION_2	FOR_1
0x40000a6	          0x8845f7	                  mov byte [rbp - 9], al	        39	encoding.c	FUNCTION_2	FOR_1
0x40000a9	        0x807df71f	                cmp byte [rbp - 9], 0x1f	        45	encoding.c	FUNCTION_2	FOR_1	IF_1
0x40000ad	     0xf868c040000	                           jbe 0x400053f	        45	encoding.c	FUNCTION_2	FOR_1	IF_1
0x40000b3	        0x807df71f	                cmp byte [rbp - 9], 0x1f	        48	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x40000b7	            0x767a	                           jbe 0x4000133	        48	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x40000b9	        0x807df77e	                cmp byte [rbp - 9], 0x7e	        48	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x40000bd	            0x7774	                            ja 0x4000133	        48	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x40000bf	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000c3	            0x8b00	                    mov eax, dword [rax]	        49	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000c5	            0x85c0	                           test eax, eax	        49	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000c7	            0x743f	                            je 0x4000108	        49	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000c9	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000cd	    0xc70000000000	                      mov dword [rax], 0	        50	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        51	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000d7	            0x8b00	                    mov eax, dword [rax]	        51	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000d9	          0x8d4801	                      lea ecx, [rax + 1]	        51	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000dc	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        51	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000e0	            0x890a	                    mov dword [rdx], ecx	        51	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000e2	            0x4898	                                    cdqe	        51	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000e4	    0x488d14850000	                        lea rdx, [rax*4]	        51	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        51	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000f0	          0x4801d0	                            add rax, rdx	        51	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000f3	    0xc700fdff0000	                 mov dword [rax], 0xfffd	        51	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3
0x40000f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        52	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3	IF_4
0x40000fd	            0x8b00	                    mov eax, dword [rax]	        52	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3	IF_4
0x40000ff	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	        52	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3	IF_4
0x4000102	     0xf8d3a040000	                           jge 0x4000542	        52	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3	IF_4
0x4000108	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x400010c	            0x8b00	                    mov eax, dword [rax]	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x400010e	          0x8d4801	                      lea ecx, [rax + 1]	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x4000111	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x4000115	            0x890a	                    mov dword [rdx], ecx	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x4000117	            0x4898	                                    cdqe	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x4000119	    0x488d14850000	                        lea rdx, [rax*4]	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x4000121	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x4000125	          0x4801c2	                            add rdx, rax	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x4000128	         0xfb645f7	               movzx eax, byte [rbp - 9]	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x400012c	            0x8902	                    mov dword [rdx], eax	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x400012e	      0xe9dc030000	                           jmp 0x400050f	        55	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2
0x4000133	        0x807df77f	                cmp byte [rbp - 9], 0x7f	        61	encoding.c	FUNCTION_2	FOR_1	ELSE_2	IF_5
0x4000137	     0xf8408040000	                            je 0x4000545	        61	encoding.c	FUNCTION_2	FOR_1	ELSE_2	IF_5
0x400013d	         0xfb645f7	               movzx eax, byte [rbp - 9]	        64	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x4000141	            0x84c0	                             test al, al	        64	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x4000143	     0xf89a5010000	                           jns 0x40002ee	        64	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x4000149	        0x807df7bf	                cmp byte [rbp - 9], 0xbf	        64	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x400014d	     0xf879b010000	                            ja 0x40002ee	        64	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x4000153	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x4000157	            0x8b00	                    mov eax, dword [rax]	        65	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x4000159	            0x85c0	                           test eax, eax	        65	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x400015b	            0x752b	                           jne 0x4000188	        65	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x400015d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        66	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x4000161	            0x8b00	                    mov eax, dword [rax]	        66	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x4000163	          0x8d4801	                      lea ecx, [rax + 1]	        66	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x4000166	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        66	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x400016a	            0x890a	                    mov dword [rdx], ecx	        66	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x400016c	            0x4898	                                    cdqe	        66	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x400016e	    0x488d14850000	                        lea rdx, [rax*4]	        66	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x4000176	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        66	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x400017a	          0x4801d0	                            add rax, rdx	        66	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x400017d	    0xc700fdff0000	                 mov dword [rax], 0xfffd	        66	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x4000183	      0xe987030000	                           jmp 0x400050f	        67	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_7
0x4000188	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x400018c	          0x8b4008	                mov eax, dword [rax + 8]	        70	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x400018f	          0xc1e006	                              shl eax, 6	        70	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x4000192	            0x89c2	                            mov edx, eax	        70	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x4000194	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x4000198	          0x895008	                mov dword [rax + 8], edx	        70	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x400019b	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x400019f	          0x8b4008	                mov eax, dword [rax + 8]	        71	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x40001a2	         0xfb655f7	               movzx edx, byte [rbp - 9]	        71	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x40001a6	          0x83e23f	                           and edx, 0x3f	        71	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x40001a9	             0x9c2	                             or edx, eax	        71	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x40001ab	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x40001af	          0x895008	                mov dword [rax + 8], edx	        71	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x40001b2	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x40001b6	            0x8b00	                    mov eax, dword [rax]	        72	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x40001b8	          0x8d50ff	                      lea edx, [rax - 1]	        72	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x40001bb	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x40001bf	            0x8910	                    mov dword [rax], edx	        72	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6
0x40001c1	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40001c5	            0x8b00	                    mov eax, dword [rax]	        74	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40001c7	            0x85c0	                           test eax, eax	        74	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40001c9	     0xf8540030000	                           jne 0x400050f	        74	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40001cf	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x40001d3	          0x8b4004	                mov eax, dword [rax + 4]	        79	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x40001d6	          0x83f806	                              cmp eax, 6	        79	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x40001d9	     0xf879e000000	                            ja 0x400027d	        79	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x40001df	            0x89c0	                            mov eax, eax	        79	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x40001e1	    0x488b04c50000	                  mov rax, qword [rax*8]	        79	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x40001e9	            0xffe0	                                 jmp rax	        79	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x40001eb	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_9
0x40001ef	          0x8b4008	                mov eax, dword [rax + 8]	        81	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_9
0x40001f2	          0x83f87f	                           cmp eax, 0x7f	        81	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_9
0x40001f5	            0x7f79	                            jg 0x4000270	        81	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_9
0x40001f7	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_9
0x40001fb	    0xc74008fdff00	            mov dword [rax + 8], 0xfffd 	        81	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_9
0x4000202	            0xeb6c	                           jmp 0x4000270	        82	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x4000204	        0x488b45f8	                mov rax, qword [rbp - 8]	        84	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_10
0x4000208	          0x8b4008	                mov eax, dword [rax + 8]	        84	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_10
0x400020b	      0x3dff070000	                          cmp eax, 0x7ff	        84	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_10
0x4000210	            0x7f61	                            jg 0x4000273	        84	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_10
0x4000212	        0x488b45f8	                mov rax, qword [rbp - 8]	        84	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_10
0x4000216	    0xc74008fdff00	            mov dword [rax + 8], 0xfffd 	        84	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_10
0x400021d	            0xeb54	                           jmp 0x4000273	        85	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x400021f	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_11
0x4000223	          0x8b4008	                mov eax, dword [rax + 8]	        87	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_11
0x4000226	      0x3dffff0000	                         cmp eax, 0xffff	        87	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_11
0x400022b	            0x7f49	                            jg 0x4000276	        87	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_11
0x400022d	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_11
0x4000231	    0xc74008fdff00	            mov dword [rax + 8], 0xfffd 	        87	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_11
0x4000238	            0xeb3c	                           jmp 0x4000276	        88	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x400023a	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_12
0x400023e	          0x8b4008	                mov eax, dword [rax + 8]	        90	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_12
0x4000241	      0x3dffff1f00	                       cmp eax, 0x1fffff	        90	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_12
0x4000246	            0x7f31	                            jg 0x4000279	        90	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_12
0x4000248	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_12
0x400024c	    0xc74008fdff00	            mov dword [rax + 8], 0xfffd 	        90	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_12
0x4000253	            0xeb24	                           jmp 0x4000279	        91	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x4000255	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_13
0x4000259	          0x8b4008	                mov eax, dword [rax + 8]	        93	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_13
0x400025c	      0x3dffffff03	                      cmp eax, 0x3ffffff	        93	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_13
0x4000261	            0x7f19	                            jg 0x400027c	        93	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_13
0x4000263	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_13
0x4000267	    0xc74008fdff00	            mov dword [rax + 8], 0xfffd 	        93	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1	IF_13
0x400026e	            0xeb0c	                           jmp 0x400027c	        94	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x4000270	              0x90	                                     nop	        82	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x4000271	            0xeb0a	                           jmp 0x400027d	        82	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x4000273	              0x90	                                     nop	        85	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x4000274	            0xeb07	                           jmp 0x400027d	        85	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x4000276	              0x90	                                     nop	        88	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x4000277	            0xeb04	                           jmp 0x400027d	        88	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x4000279	              0x90	                                     nop	        91	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x400027a	            0xeb01	                           jmp 0x400027d	        91	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x400027c	              0x90	                                     nop	        94	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	SWITCH_1
0x400027d	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x4000281	          0x8b4008	                mov eax, dword [rax + 8]	        97	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x4000284	      0x3dffd70000	                         cmp eax, 0xd7ff	        97	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x4000289	            0x7e0e	                           jle 0x4000299	        97	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x400028b	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x400028f	          0x8b4008	                mov eax, dword [rax + 8]	        97	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x4000292	      0x3dffdf0000	                         cmp eax, 0xdfff	        97	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x4000297	            0x7e1c	                           jle 0x40002b5	        97	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x4000299	        0x488b45f8	                mov rax, qword [rbp - 8]	        98	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x400029d	          0x8b4008	                mov eax, dword [rax + 8]	        98	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x40002a0	      0x3dfeff0000	                         cmp eax, 0xfffe	        97	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x40002a5	            0x740e	                            je 0x40002b5	        97	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x40002a7	        0x488b45f8	                mov rax, qword [rbp - 8]	        99	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x40002ab	          0x8b4008	                mov eax, dword [rax + 8]	        99	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x40002ae	      0x3dffff0000	                         cmp eax, 0xffff	        98	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x40002b3	            0x750b	                           jne 0x40002c0	        98	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x40002b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       100	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x40002b9	    0xc74008fdff00	            mov dword [rax + 8], 0xfffd 	       100	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8	IF_14
0x40002c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002c4	            0x8b00	                    mov eax, dword [rax]	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002c6	          0x8d4801	                      lea ecx, [rax + 1]	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002c9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002cd	            0x890a	                    mov dword [rdx], ecx	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002cf	            0x4898	                                    cdqe	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002d1	    0x488d14850000	                        lea rdx, [rax*4]	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002dd	          0x4801c2	                            add rdx, rax	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002e4	          0x8b4008	                mov eax, dword [rax + 8]	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002e7	            0x8902	                    mov dword [rdx], eax	       104	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002e9	      0xe921020000	                           jmp 0x400050f	        74	encoding.c	FUNCTION_2	FOR_1	ELSE_3	IF_6	IF_8
0x40002ee	        0x807df7bf	                cmp byte [rbp - 9], 0xbf	       108	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x40002f2	            0x7660	                           jbe 0x4000354	       108	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x40002f4	        0x807df7df	                cmp byte [rbp - 9], 0xdf	       108	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x40002f8	            0x775a	                            ja 0x4000354	       108	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x40002fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       109	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x40002fe	            0x8b00	                    mov eax, dword [rax]	       109	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x4000300	            0x85c0	                           test eax, eax	       109	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x4000302	            0x7426	                            je 0x400032a	       109	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x4000304	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       110	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x4000308	            0x8b00	                    mov eax, dword [rax]	       110	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x400030a	          0x8d4801	                      lea ecx, [rax + 1]	       110	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x400030d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       110	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x4000311	            0x890a	                    mov dword [rdx], ecx	       110	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x4000313	            0x4898	                                    cdqe	       110	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x4000315	    0x488d14850000	                        lea rdx, [rax*4]	       110	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x400031d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       110	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x4000321	          0x4801d0	                            add rax, rdx	       110	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x4000324	    0xc700fdff0000	                 mov dword [rax], 0xfffd	       110	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15	IF_16
0x400032a	         0xfb645f7	               movzx eax, byte [rbp - 9]	       112	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x400032e	          0x83e01f	                           and eax, 0x1f	       112	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x4000331	            0x89c2	                            mov edx, eax	       112	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x4000333	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x4000337	          0x895008	                mov dword [rax + 8], edx	       112	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x400033a	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x400033e	    0xc74004020000	                  mov dword [rax + 4], 2	       113	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x4000345	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x4000349	    0xc70001000000	                      mov dword [rax], 1	       114	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x400034f	      0xe9bb010000	                           jmp 0x400050f	       114	encoding.c	FUNCTION_2	FOR_1	ELSE_4	IF_15
0x4000354	        0x807df7df	                cmp byte [rbp - 9], 0xdf	       117	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x4000358	            0x7660	                           jbe 0x40003ba	       117	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x400035a	        0x807df7ef	                cmp byte [rbp - 9], 0xef	       117	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x400035e	            0x775a	                            ja 0x40003ba	       117	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x4000360	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x4000364	            0x8b00	                    mov eax, dword [rax]	       118	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x4000366	            0x85c0	                           test eax, eax	       118	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x4000368	            0x7426	                            je 0x4000390	       118	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x400036a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       119	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x400036e	            0x8b00	                    mov eax, dword [rax]	       119	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x4000370	          0x8d4801	                      lea ecx, [rax + 1]	       119	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x4000373	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       119	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x4000377	            0x890a	                    mov dword [rdx], ecx	       119	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x4000379	            0x4898	                                    cdqe	       119	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x400037b	    0x488d14850000	                        lea rdx, [rax*4]	       119	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x4000383	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       119	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x4000387	          0x4801d0	                            add rax, rdx	       119	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x400038a	    0xc700fdff0000	                 mov dword [rax], 0xfffd	       119	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17	IF_18
0x4000390	         0xfb645f7	               movzx eax, byte [rbp - 9]	       121	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x4000394	          0x83e00f	                            and eax, 0xf	       121	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x4000397	            0x89c2	                            mov edx, eax	       121	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x4000399	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x400039d	          0x895008	                mov dword [rax + 8], edx	       121	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x40003a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       122	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x40003a4	    0xc74004030000	                  mov dword [rax + 4], 3	       122	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x40003ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x40003af	    0xc70002000000	                      mov dword [rax], 2	       123	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x40003b5	      0xe955010000	                           jmp 0x400050f	       123	encoding.c	FUNCTION_2	FOR_1	ELSE_5	IF_17
0x40003ba	        0x807df7ef	                cmp byte [rbp - 9], 0xef	       126	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x40003be	            0x7660	                           jbe 0x4000420	       126	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x40003c0	        0x807df7f7	                cmp byte [rbp - 9], 0xf7	       126	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x40003c4	            0x775a	                            ja 0x4000420	       126	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x40003c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       127	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003ca	            0x8b00	                    mov eax, dword [rax]	       127	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003cc	            0x85c0	                           test eax, eax	       127	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003ce	            0x7426	                            je 0x40003f6	       127	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003d0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       128	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003d4	            0x8b00	                    mov eax, dword [rax]	       128	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003d6	          0x8d4801	                      lea ecx, [rax + 1]	       128	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003d9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       128	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003dd	            0x890a	                    mov dword [rdx], ecx	       128	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003df	            0x4898	                                    cdqe	       128	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003e1	    0x488d14850000	                        lea rdx, [rax*4]	       128	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       128	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003ed	          0x4801d0	                            add rax, rdx	       128	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003f0	    0xc700fdff0000	                 mov dword [rax], 0xfffd	       128	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19	IF_20
0x40003f6	         0xfb645f7	               movzx eax, byte [rbp - 9]	       130	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x40003fa	          0x83e007	                              and eax, 7	       130	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x40003fd	            0x89c2	                            mov edx, eax	       130	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x40003ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x4000403	          0x895008	                mov dword [rax + 8], edx	       130	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x4000406	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x400040a	    0xc74004040000	                  mov dword [rax + 4], 4	       131	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x4000411	        0x488b45f8	                mov rax, qword [rbp - 8]	       132	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x4000415	    0xc70003000000	                      mov dword [rax], 3	       132	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x400041b	      0xe9ef000000	                           jmp 0x400050f	       132	encoding.c	FUNCTION_2	FOR_1	ELSE_6	IF_19
0x4000420	        0x807df7f7	                cmp byte [rbp - 9], 0xf7	       135	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x4000424	            0x7660	                           jbe 0x4000486	       135	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x4000426	        0x807df7fb	                cmp byte [rbp - 9], 0xfb	       135	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x400042a	            0x775a	                            ja 0x4000486	       135	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x400042c	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x4000430	            0x8b00	                    mov eax, dword [rax]	       136	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x4000432	            0x85c0	                           test eax, eax	       136	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x4000434	            0x7426	                            je 0x400045c	       136	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x4000436	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       137	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x400043a	            0x8b00	                    mov eax, dword [rax]	       137	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x400043c	          0x8d4801	                      lea ecx, [rax + 1]	       137	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x400043f	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       137	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x4000443	            0x890a	                    mov dword [rdx], ecx	       137	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x4000445	            0x4898	                                    cdqe	       137	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x4000447	    0x488d14850000	                        lea rdx, [rax*4]	       137	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x400044f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       137	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x4000453	          0x4801d0	                            add rax, rdx	       137	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x4000456	    0xc700fdff0000	                 mov dword [rax], 0xfffd	       137	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21	IF_22
0x400045c	         0xfb645f7	               movzx eax, byte [rbp - 9]	       139	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x4000460	          0x83e003	                              and eax, 3	       139	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x4000463	            0x89c2	                            mov edx, eax	       139	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x4000465	        0x488b45f8	                mov rax, qword [rbp - 8]	       139	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x4000469	          0x895008	                mov dword [rax + 8], edx	       139	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x400046c	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x4000470	    0xc74004050000	                  mov dword [rax + 4], 5	       140	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x4000477	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x400047b	    0xc70004000000	                      mov dword [rax], 4	       141	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x4000481	      0xe989000000	                           jmp 0x400050f	       141	encoding.c	FUNCTION_2	FOR_1	ELSE_7	IF_21
0x4000486	        0x807df7fb	                cmp byte [rbp - 9], 0xfb	       144	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x400048a	            0x765d	                           jbe 0x40004e9	       144	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x400048c	        0x807df7fd	                cmp byte [rbp - 9], 0xfd	       144	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x4000490	            0x7757	                            ja 0x40004e9	       144	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x4000492	        0x488b45f8	                mov rax, qword [rbp - 8]	       145	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x4000496	            0x8b00	                    mov eax, dword [rax]	       145	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x4000498	            0x85c0	                           test eax, eax	       145	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x400049a	            0x7426	                            je 0x40004c2	       145	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x400049c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       146	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x40004a0	            0x8b00	                    mov eax, dword [rax]	       146	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x40004a2	          0x8d4801	                      lea ecx, [rax + 1]	       146	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x40004a5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       146	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x40004a9	            0x890a	                    mov dword [rdx], ecx	       146	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x40004ab	            0x4898	                                    cdqe	       146	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x40004ad	    0x488d14850000	                        lea rdx, [rax*4]	       146	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x40004b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       146	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x40004b9	          0x4801d0	                            add rax, rdx	       146	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x40004bc	    0xc700fdff0000	                 mov dword [rax], 0xfffd	       146	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23	IF_24
0x40004c2	         0xfb645f7	               movzx eax, byte [rbp - 9]	       148	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x40004c6	          0x83e001	                              and eax, 1	       148	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x40004c9	            0x89c2	                            mov edx, eax	       148	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x40004cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x40004cf	          0x895008	                mov dword [rax + 8], edx	       148	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x40004d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       149	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x40004d6	    0xc74004060000	                  mov dword [rax + 4], 6	       149	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x40004dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       150	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x40004e1	    0xc70005000000	                      mov dword [rax], 5	       150	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x40004e7	            0xeb26	                           jmp 0x400050f	       150	encoding.c	FUNCTION_2	FOR_1	ELSE_8	IF_23
0x40004e9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       154	encoding.c	FUNCTION_2	FOR_1	ELSE_9
0x40004ed	            0x8b00	                    mov eax, dword [rax]	       154	encoding.c	FUNCTION_2	FOR_1	ELSE_9
0x40004ef	          0x8d4801	                      lea ecx, [rax + 1]	       154	encoding.c	FUNCTION_2	FOR_1	ELSE_9
0x40004f2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       154	encoding.c	FUNCTION_2	FOR_1	ELSE_9
0x40004f6	            0x890a	                    mov dword [rdx], ecx	       154	encoding.c	FUNCTION_2	FOR_1	ELSE_9
0x40004f8	            0x4898	                                    cdqe	       154	encoding.c	FUNCTION_2	FOR_1	ELSE_9
0x40004fa	    0x488d14850000	                        lea rdx, [rax*4]	       154	encoding.c	FUNCTION_2	FOR_1	ELSE_9
0x4000502	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       154	encoding.c	FUNCTION_2	FOR_1	ELSE_9
0x4000506	          0x4801d0	                            add rax, rdx	       154	encoding.c	FUNCTION_2	FOR_1	ELSE_9
0x4000509	    0xc700fdff0000	                 mov dword [rax], 0xfffd	       154	encoding.c	FUNCTION_2	FOR_1	ELSE_9
0x400050f	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        38	encoding.c	FUNCTION_2	FOR_1
0x4000513	          0x488b00	                    mov rax, qword [rax]	        38	encoding.c	FUNCTION_2	FOR_1
0x4000516	        0x488d5001	                      lea rdx, [rax + 1]	        38	encoding.c	FUNCTION_2	FOR_1
0x400051a	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        38	encoding.c	FUNCTION_2	FOR_1
0x400051e	          0x488910	                    mov qword [rax], rdx	        38	encoding.c	FUNCTION_2	FOR_1
0x4000521	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        38	encoding.c	FUNCTION_2	FOR_1
0x4000525	          0x488b00	                    mov rax, qword [rax]	        38	encoding.c	FUNCTION_2	FOR_1
0x4000528	        0x483b4518	            cmp rax, qword [rbp + 0x18] 	        38	encoding.c	FUNCTION_2	FOR_1
0x400052c	            0x7318	                           jae 0x4000546	        38	encoding.c	FUNCTION_2	FOR_1
0x400052e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        38	encoding.c	FUNCTION_2	FOR_1
0x4000532	            0x8b00	                    mov eax, dword [rax]	        38	encoding.c	FUNCTION_2	FOR_1
0x4000534	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	        38	encoding.c	FUNCTION_2	FOR_1
0x4000537	     0xf8c58fbffff	                            jl 0x4000095	        38	encoding.c	FUNCTION_2	FOR_1
0x400053d	            0xeb07	                           jmp 0x4000546	        38	encoding.c	FUNCTION_2	FOR_1
0x400053f	              0x90	                                     nop	        46	encoding.c	FUNCTION_2	FOR_1	IF_1
0x4000540	            0xeb04	                           jmp 0x4000546	        46	encoding.c	FUNCTION_2	FOR_1	IF_1
0x4000542	              0x90	                                     nop	        53	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3	IF_4
0x4000543	            0xeb01	                           jmp 0x4000546	        53	encoding.c	FUNCTION_2	FOR_1	ELSE_1	IF_2	IF_3	IF_4
0x4000545	              0x90	                                     nop	        62	encoding.c	FUNCTION_2	FOR_1	ELSE_2	IF_5
0x4000546	              0x5d	                                 pop rbp	       157	encoding.c	FUNCTION_2
0x4000547	              0xc3	                                     ret	       157	encoding.c	FUNCTION_2
vterm_lookup_encoding	ELSE,0:FOR,1:SWITCH,0:CALL,0:DO,0:functions,0:WHILE,0:IF,1	38
0x4000727	              0x55	                                push rbp	       228	encoding.c	FUNCTION_5
0x4000728	          0x4889e5	                            mov rbp, rsp	       228	encoding.c	FUNCTION_5
0x400072b	          0x897dec	             mov dword [rbp - 0x14], edi	       228	encoding.c	FUNCTION_5
0x400072e	            0x89f0	                            mov eax, esi	       228	encoding.c	FUNCTION_5
0x4000730	          0x8845e8	               mov byte [rbp - 0x18], al	       228	encoding.c	FUNCTION_5
0x4000733	    0xc745fc000000	                  mov dword [rbp - 4], 0	       230	encoding.c	FUNCTION_5	FOR_1
0x400073a	            0xeb45	                           jmp 0x4000781	       230	encoding.c	FUNCTION_5	FOR_1
0x400073c	          0x8b45fc	                mov eax, dword [rbp - 4]	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x400073f	            0x4898	                                    cdqe	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000741	        0x48c1e004	                              shl rax, 4	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000745	    0x480500000000	                              add rax, 0	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x400074b	            0x8b00	                    mov eax, dword [rax]	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x400074d	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000750	            0x752b	                           jne 0x400077d	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000752	          0x8b45fc	                mov eax, dword [rbp - 4]	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000755	            0x4898	                                    cdqe	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000757	        0x48c1e004	                              shl rax, 4	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x400075b	    0x480500000000	                              add rax, 0	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000761	           0xfb600	                   movzx eax, byte [rax]	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000764	          0x3a45e8	               cmp al, byte [rbp - 0x18]	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000767	            0x7514	                           jne 0x400077d	       231	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000769	          0x8b45fc	                mov eax, dword [rbp - 4]	       232	encoding.c	FUNCTION_5	FOR_1	IF_1
0x400076c	            0x4898	                                    cdqe	       232	encoding.c	FUNCTION_5	FOR_1	IF_1
0x400076e	        0x48c1e004	                              shl rax, 4	       232	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000772	    0x480500000000	                              add rax, 0	       232	encoding.c	FUNCTION_5	FOR_1	IF_1
0x4000778	          0x488b00	                    mov rax, qword [rax]	       232	encoding.c	FUNCTION_5	FOR_1	IF_1
0x400077b	            0xeb1f	                           jmp 0x400079c	       232	encoding.c	FUNCTION_5	FOR_1	IF_1
0x400077d	        0x8345fc01	                  add dword [rbp - 4], 1	       230	encoding.c	FUNCTION_5	FOR_1
0x4000781	          0x8b45fc	                mov eax, dword [rbp - 4]	       230	encoding.c	FUNCTION_5	FOR_1
0x4000784	            0x4898	                                    cdqe	       230	encoding.c	FUNCTION_5	FOR_1
0x4000786	        0x48c1e004	                              shl rax, 4	       230	encoding.c	FUNCTION_5	FOR_1
0x400078a	    0x480500000000	                              add rax, 0	       230	encoding.c	FUNCTION_5	FOR_1
0x4000790	           0xfb600	                   movzx eax, byte [rax]	       230	encoding.c	FUNCTION_5	FOR_1
0x4000793	            0x84c0	                             test al, al	       230	encoding.c	FUNCTION_5	FOR_1
0x4000795	            0x75a5	                           jne 0x400073c	       230	encoding.c	FUNCTION_5	FOR_1
0x4000797	      0xb800000000	                              mov eax, 0	       233	encoding.c	FUNCTION_5
0x400079c	              0x5d	                                 pop rbp	       234	encoding.c	FUNCTION_5
0x400079d	              0xc3	                                     ret	       234	encoding.c	FUNCTION_5
