output_mouse	functions,0:CALL,7:WHILE,0:IF,5:FOR,0:ELSE,0:DO,0:SWITCH,1	110
0x4000040	            0x4155	                                push r13	         6	mouse.c	FUNCTION_1
0x4000042	            0x4154	                                push r12	         6	mouse.c	FUNCTION_1
0x4000044	              0x55	                                push rbp	         6	mouse.c	FUNCTION_1
0x4000045	              0x53	                                push rbx	         6	mouse.c	FUNCTION_1
0x4000046	        0x4883ec28	                           sub rsp, 0x28	         6	mouse.c	FUNCTION_1
0x400004a	          0x4989fc	                            mov r12, rdi	         6	mouse.c	FUNCTION_1
0x400004d	          0x4489c3	                            mov ebx, r8d	         6	mouse.c	FUNCTION_1
0x4000050	          0x4489cd	                            mov ebp, r9d	         6	mouse.c	FUNCTION_1
0x4000053	    0x64488b042528	                mov rax, qword fs:[0x28]	         6	mouse.c	FUNCTION_1
0x400005c	      0x4889442418	             mov qword [rsp + 0x18], rax	         6	mouse.c	FUNCTION_1
0x4000061	            0x31c0	                            xor eax, eax	         6	mouse.c	FUNCTION_1
0x4000063	          0xc1e102	                              shl ecx, 2	         7	mouse.c	FUNCTION_1
0x4000066	          0x8b4770	            mov eax, dword [rdi + 0x70] 	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000069	          0x83f801	                              cmp eax, 1	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400006c	            0x7471	                            je 0x40000df	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400006e	          0x83f801	                              cmp eax, 1	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000071	            0x7217	                            jb 0x400008a	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000073	          0x83f802	                              cmp eax, 2	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000076	     0xf84d0000000	                            je 0x400014c	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400007c	          0x83f803	                              cmp eax, 3	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400007f	     0xf84fe000000	                            je 0x4000183	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000085	      0xe924010000	                           jmp 0x40001ae	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400008a	        0x418d4021	                    lea eax, [r8 + 0x21]	        11	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x400008e	      0x3d00010000	                          cmp eax, 0x100	        12	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x4000093	      0xb8de000000	                           mov eax, 0xde	        12	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x4000098	           0xf4dd8	                         cmovge ebx, eax	        12	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x400009b	        0x418d4121	                    lea eax, [r9 + 0x21]	        13	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x400009f	      0x3d00010000	                          cmp eax, 0x100	        14	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x40000a4	      0xb8de000000	                           mov eax, 0xde	        14	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x40000a9	           0xf4de8	                         cmovge ebp, eax	        14	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x40000ac	            0x85d2	                           test edx, edx	        17	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x40000ae	      0xb803000000	                              mov eax, 3	        17	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x40000b3	           0xf44f0	                          cmove esi, eax	        17	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x40000b6	             0x9f1	                             or ecx, esi	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000b8	          0x83c120	                           add ecx, 0x20	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000bb	        0x448d4d21	                   lea r9d, [rbp + 0x21]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000bf	        0x448d4321	                   lea r8d, [rbx + 0x21]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000c3	      0xba00000000	                              mov edx, 0	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000c8	      0xbe9b000000	                           mov esi, 0x9b	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000cd	          0x488b3f	                    mov rdi, qword [rdi]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000d0	      0xb800000000	                              mov eax, 0	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000d5	      0xe800000000	                          call 0x40000da	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000da	      0xe9cf000000	                           jmp 0x40001ae	        21	mouse.c	FUNCTION_1	SWITCH_1
0x40000df	            0x85d2	                           test edx, edx	        28	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x40000e1	      0xb803000000	                              mov eax, 3	        28	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x40000e6	           0xf44f0	                          cmove esi, eax	        28	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x40000e9	             0x9f1	                             or ecx, esi	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40000eb	          0x83c120	                           add ecx, 0x20	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40000ee	          0x4863f9	                         movsxd rdi, ecx	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40000f1	          0x4889e6	                            mov rsi, rsp	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40000f4	      0xe800000000	                          call 0x40000f9	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40000f9	          0x4c63e8	                         movsxd r13, eax	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40000fc	        0x4a8d342c	                    lea rsi, [rsp + r13]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000100	          0x8d7b21	                   lea edi, [rbx + 0x21]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000103	          0x4863ff	                         movsxd rdi, edi	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000106	      0xe800000000	                          call 0x400010b	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400010b	          0x4863d8	                         movsxd rbx, eax	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400010e	          0x4c01eb	                            add rbx, r13	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000111	        0x488d341c	                    lea rsi, [rsp + rbx]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000115	          0x8d7d21	                   lea edi, [rbp + 0x21]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000118	          0x4863ff	                         movsxd rdi, edi	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x400011b	      0xe800000000	                          call 0x4000120	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000120	            0x4898	                                    cdqe	        33	mouse.c	FUNCTION_1	SWITCH_1
0x4000122	      0x488d542420	                   lea rdx, [rsp + 0x20]	        33	mouse.c	FUNCTION_1	SWITCH_1
0x4000127	          0x4801d3	                            add rbx, rdx	        33	mouse.c	FUNCTION_1	SWITCH_1
0x400012a	      0xc64418e000	          mov byte [rax + rbx - 0x20], 0	        33	mouse.c	FUNCTION_1	SWITCH_1
0x400012f	          0x4889e1	                            mov rcx, rsp	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000132	      0xba00000000	                              mov edx, 0	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000137	      0xbe9b000000	                           mov esi, 0x9b	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x400013c	        0x498b3c24	                    mov rdi, qword [r12]	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000140	      0xb800000000	                              mov eax, 0	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000145	      0xe800000000	                          call 0x400014a	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x400014a	            0xeb62	                           jmp 0x40001ae	        37	mouse.c	FUNCTION_1	SWITCH_1
0x400014c	          0x83fa01	                              cmp edx, 1	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x400014f	            0x19c0	                            sbb eax, eax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000151	          0x83e020	                           and eax, 0x20	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000154	          0x83c04d	                           add eax, 0x4d	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000157	             0x9f1	                             or ecx, esi	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000159	        0x4883ec08	                              sub rsp, 8	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x400015d	              0x50	                                push rax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x400015e	        0x458d4901	                       lea r9d, [r9 + 1]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000162	        0x458d4001	                       lea r8d, [r8 + 1]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000166	      0xba00000000	                              mov edx, 0	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x400016b	      0xbe9b000000	                           mov esi, 0x9b	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000170	          0x488b3f	                    mov rdi, qword [rdi]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000173	      0xb800000000	                              mov eax, 0	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000178	      0xe800000000	                          call 0x400017d	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x400017d	        0x4883c410	                           add rsp, 0x10	        42	mouse.c	FUNCTION_1	SWITCH_1
0x4000181	            0xeb2b	                           jmp 0x40001ae	        42	mouse.c	FUNCTION_1	SWITCH_1
0x4000183	            0x85d2	                           test edx, edx	        46	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x4000185	      0xb803000000	                              mov eax, 3	        46	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x400018a	           0xf44f0	                          cmove esi, eax	        46	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x400018d	             0x9f1	                             or ecx, esi	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400018f	        0x458d4901	                       lea r9d, [r9 + 1]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000193	        0x458d4001	                       lea r8d, [r8 + 1]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000197	      0xba00000000	                              mov edx, 0	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400019c	      0xbe9b000000	                           mov esi, 0x9b	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40001a1	          0x488b3f	                    mov rdi, qword [rdi]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40001a4	      0xb800000000	                              mov eax, 0	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40001a9	      0xe800000000	                          call 0x40001ae	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40001ae	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        52	mouse.c	FUNCTION_1
0x40001b3	    0x644833042528	                xor rax, qword fs:[0x28]	        52	mouse.c	FUNCTION_1
0x40001bc	            0x7405	                            je 0x40001c3	        52	mouse.c	FUNCTION_1
0x40001be	      0xe800000000	                          call 0x40001c3	        52	mouse.c	FUNCTION_1
0x40001c3	        0x4883c428	                           add rsp, 0x28	        52	mouse.c	FUNCTION_1
0x40001c7	              0x5b	                                 pop rbx	        52	mouse.c	FUNCTION_1
0x40001c8	              0x5d	                                 pop rbp	        52	mouse.c	FUNCTION_1
0x40001c9	            0x415c	                                 pop r12	        52	mouse.c	FUNCTION_1
0x40001cb	            0x415d	                                 pop r13	        52	mouse.c	FUNCTION_1
0x40001cd	              0xc3	                                     ret	        52	mouse.c	FUNCTION_1
vterm_mouse_button	functions,0:CALL,2:WHILE,0:IF,6:FOR,0:ELSE,2:DO,0:SWITCH,0	41
0x4000246	        0x4883ec08	                              sub rsp, 8	        74	mouse.c	FUNCTION_3
0x400024a	          0x4189c8	                            mov r8d, ecx	        74	mouse.c	FUNCTION_3
0x400024d	    0x488bbf180100	           mov rdi, qword [rdi + 0x118] 	        75	mouse.c	FUNCTION_3
0x4000254	          0x8b4768	            mov eax, dword [rdi + 0x68] 	        77	mouse.c	FUNCTION_3
0x4000257	          0x8d4eff	                      lea ecx, [rsi - 1]	        79	mouse.c	FUNCTION_3	IF_1
0x400025a	          0x83f902	                              cmp ecx, 2	        79	mouse.c	FUNCTION_3	IF_1
0x400025d	            0x7729	                            ja 0x4000288	        79	mouse.c	FUNCTION_3	IF_1
0x400025f	            0x85d2	                           test edx, edx	        80	mouse.c	FUNCTION_3	IF_1	IF_2
0x4000261	            0x7412	                            je 0x4000275	        80	mouse.c	FUNCTION_3	IF_1	IF_2
0x4000263	    0x41b901000000	                              mov r9d, 1	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x4000269	          0x41d3e1	                             shl r9d, cl	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x400026c	          0x4109c1	                             or r9d, eax	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x400026f	        0x44894f68	             mov dword [rdi + 0x68], r9d	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x4000273	            0xeb13	                           jmp 0x4000288	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x4000275	          0x8d4eff	                      lea ecx, [rsi - 1]	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x4000278	    0x41b9feffffff	                     mov r9d, 0xfffffffe	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x400027e	          0x41d3c1	                             rol r9d, cl	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x4000281	          0x4121c1	                            and r9d, eax	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x4000284	        0x44894f68	             mov dword [rdi + 0x68], r9d	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x4000288	          0x394768	            cmp dword [rdi + 0x68], eax 	        87	mouse.c	FUNCTION_3	IF_3
0x400028b	            0x7505	                           jne 0x4000292	        87	mouse.c	FUNCTION_3	IF_3
0x400028d	          0x83fe03	                              cmp esi, 3	        87	mouse.c	FUNCTION_3	IF_3
0x4000290	            0x7e35	                           jle 0x40002c7	        87	mouse.c	FUNCTION_3	IF_3
0x4000292	        0xf6476c01	               test byte [rdi + 0x6c], 1	        89	mouse.c	FUNCTION_3	IF_4
0x4000296	            0x742f	                            je 0x40002c7	        89	mouse.c	FUNCTION_3	IF_4
0x4000298	          0x4489c1	                            mov ecx, r8d	        89	mouse.c	FUNCTION_3	IF_4
0x400029b	          0x83fe03	                              cmp esi, 3	        92	mouse.c	FUNCTION_3	IF_5
0x400029e	            0x7f12	                            jg 0x40002b2	        92	mouse.c	FUNCTION_3	IF_5
0x40002a0	          0x83ee01	                              sub esi, 1	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x40002a3	        0x448b4f64	            mov r9d, dword [rdi + 0x64] 	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x40002a7	        0x448b4760	            mov r8d, dword [rdi + 0x60] 	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x40002ab	      0xe890fdffff	                   call sym.output_mouse	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x40002b0	            0xeb15	                           jmp 0x40002c7	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x40002b2	          0x83fe05	                              cmp esi, 5	        95	mouse.c	FUNCTION_3	ELSE_2	IF_6
0x40002b5	            0x7f10	                            jg 0x40002c7	        95	mouse.c	FUNCTION_3	ELSE_2	IF_6
0x40002b7	          0x83c63c	                           add esi, 0x3c	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x40002ba	        0x448b4f64	            mov r9d, dword [rdi + 0x64] 	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x40002be	        0x448b4760	            mov r8d, dword [rdi + 0x60] 	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x40002c2	      0xe879fdffff	                   call sym.output_mouse	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x40002c7	        0x4883c408	                              add rsp, 8	        98	mouse.c	FUNCTION_3
0x40002cb	              0xc3	                                     ret	        98	mouse.c	FUNCTION_3
vterm_mouse_move	functions,0:CALL,1:WHILE,0:IF,2:FOR,0:ELSE,0:DO,0:SWITCH,0	39
0x40001ce	        0x4883ec08	                              sub rsp, 8	        55	mouse.c	FUNCTION_2
0x40001d2	    0x488bbf180100	           mov rdi, qword [rdi + 0x118] 	        56	mouse.c	FUNCTION_2
0x40001d9	          0x395760	            cmp dword [rdi + 0x60], edx 	        58	mouse.c	FUNCTION_2	IF_1
0x40001dc	            0x7505	                           jne 0x40001e3	        58	mouse.c	FUNCTION_2	IF_1
0x40001de	          0x397764	            cmp dword [rdi + 0x64], esi 	        58	mouse.c	FUNCTION_2	IF_1
0x40001e1	            0x745e	                            je 0x4000241	        58	mouse.c	FUNCTION_2	IF_1
0x40001e3	          0x895760	             mov dword [rdi + 0x60], edx	        61	mouse.c	FUNCTION_2
0x40001e6	          0x897764	             mov dword [rdi + 0x64], esi	        62	mouse.c	FUNCTION_2
0x40001e9	          0x8b476c	            mov eax, dword [rdi + 0x6c] 	        64	mouse.c	FUNCTION_2	IF_2
0x40001ec	            0xa802	                              test al, 2	        64	mouse.c	FUNCTION_2	IF_2
0x40001ee	            0x740b	                            je 0x40001fb	        64	mouse.c	FUNCTION_2	IF_2
0x40001f0	        0x448b4768	            mov r8d, dword [rdi + 0x68] 	        64	mouse.c	FUNCTION_2	IF_2
0x40001f4	          0x4585c0	                           test r8d, r8d	        64	mouse.c	FUNCTION_2	IF_2
0x40001f7	            0x7506	                           jne 0x40001ff	        64	mouse.c	FUNCTION_2	IF_2
0x40001f9	            0xeb42	                           jmp 0x400023d	        64	mouse.c	FUNCTION_2	IF_2
0x40001fb	            0xa804	                              test al, 4	        64	mouse.c	FUNCTION_2	IF_2
0x40001fd	            0x7442	                            je 0x4000241	        64	mouse.c	FUNCTION_2	IF_2
0x40001ff	        0x448b4768	            mov r8d, dword [rdi + 0x68] 	        66	mouse.c	FUNCTION_2	IF_2
0x4000203	      0xb801000000	                              mov eax, 1	        66	mouse.c	FUNCTION_2	IF_2
0x4000208	        0x41f6c001	                             test r8b, 1	        66	mouse.c	FUNCTION_2	IF_2
0x400020c	            0x751a	                           jne 0x4000228	        66	mouse.c	FUNCTION_2	IF_2
0x400020e	      0xb802000000	                              mov eax, 2	        67	mouse.c	FUNCTION_2	IF_2
0x4000213	        0x41f6c002	                             test r8b, 2	        67	mouse.c	FUNCTION_2	IF_2
0x4000217	            0x750f	                           jne 0x4000228	        67	mouse.c	FUNCTION_2	IF_2
0x4000219	        0x4183e004	                              and r8d, 4	        68	mouse.c	FUNCTION_2	IF_2
0x400021d	        0x4183f801	                              cmp r8d, 1	        68	mouse.c	FUNCTION_2	IF_2
0x4000221	            0x19c0	                            sbb eax, eax	        68	mouse.c	FUNCTION_2	IF_2
0x4000223	            0xf7d0	                                 not eax	        68	mouse.c	FUNCTION_2	IF_2
0x4000225	          0x83c004	                              add eax, 4	        68	mouse.c	FUNCTION_2	IF_2
0x4000228	          0x4189d0	                            mov r8d, edx	        68	mouse.c	FUNCTION_2	IF_2
0x400022b	          0x4189f1	                            mov r9d, esi	        68	mouse.c	FUNCTION_2	IF_2
0x400022e	          0x8d701f	                   lea esi, [rax + 0x1f]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x4000231	      0xba01000000	                              mov edx, 1	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x4000236	      0xe805feffff	                   call sym.output_mouse	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x400023b	            0xeb04	                           jmp 0x4000241	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x400023d	            0xa804	                              test al, 4	        64	mouse.c	FUNCTION_2	IF_2
0x400023f	            0x75d8	                           jne 0x4000219	        64	mouse.c	FUNCTION_2	IF_2
0x4000241	        0x4883c408	                              add rsp, 8	        71	mouse.c	FUNCTION_2
0x4000245	              0xc3	                                     ret	        71	mouse.c	FUNCTION_2
