output_mouse	FOR,0:SWITCH,1:CALL,7:DO,0:IF,5:WHILE,0:ELSE,0:functions,0	161
0x4000040	              0x55	                                push rbp	         6	mouse.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	         6	mouse.c	FUNCTION_1
0x4000044	        0x4883ec50	                           sub rsp, 0x50	         6	mouse.c	FUNCTION_1
0x4000048	        0x48897dc8	             mov qword [rbp - 0x38], rdi	         6	mouse.c	FUNCTION_1
0x400004c	          0x8975c4	             mov dword [rbp - 0x3c], esi	         6	mouse.c	FUNCTION_1
0x400004f	          0x8955c0	             mov dword [rbp - 0x40], edx	         6	mouse.c	FUNCTION_1
0x4000052	          0x894dbc	             mov dword [rbp - 0x44], ecx	         6	mouse.c	FUNCTION_1
0x4000055	        0x448945b8	             mov dword [rbp - 0x48], r8d	         6	mouse.c	FUNCTION_1
0x4000059	        0x44894db4	             mov dword [rbp - 0x4c], r9d	         6	mouse.c	FUNCTION_1
0x400005d	    0x64488b042528	                mov rax, qword fs:[0x28]	         6	mouse.c	FUNCTION_1
0x4000066	        0x488945f8	                mov qword [rbp - 8], rax	         6	mouse.c	FUNCTION_1
0x400006a	            0x31c0	                            xor eax, eax	         6	mouse.c	FUNCTION_1
0x400006c	        0xc165bc02	               shl dword [rbp - 0x44], 2	         7	mouse.c	FUNCTION_1
0x4000070	        0x488b45c8	             mov rax, qword [rbp - 0x38]	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000074	          0x8b4070	            mov eax, dword [rax + 0x70] 	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000077	          0x83f801	                              cmp eax, 1	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400007a	     0xf8491000000	                            je 0x4000111	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000080	          0x83f801	                              cmp eax, 1	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000083	            0x7217	                            jb 0x400009c	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000085	          0x83f802	                              cmp eax, 2	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000088	     0xf843f010000	                            je 0x40001cd	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400008e	          0x83f803	                              cmp eax, 3	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000091	     0xf848d010000	                            je 0x4000224	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000097	      0xe9d0010000	                           jmp 0x400026c	        52	mouse.c	FUNCTION_1
0x400009c	          0x8b45b8	             mov eax, dword [rbp - 0x48]	        11	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x400009f	          0x83c021	                           add eax, 0x21	        11	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x40000a2	      0x3dff000000	                           cmp eax, 0xff	        11	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x40000a7	            0x7e07	                           jle 0x40000b0	        11	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x40000a9	    0xc745b8de0000	           mov dword [rbp - 0x48], 0xde 	        12	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x40000b0	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        13	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x40000b3	          0x83c021	                           add eax, 0x21	        13	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x40000b6	      0x3dff000000	                           cmp eax, 0xff	        13	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x40000bb	            0x7e07	                           jle 0x40000c4	        13	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x40000bd	    0xc745b4de0000	           mov dword [rbp - 0x4c], 0xde 	        14	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x40000c4	        0x837dc000	               cmp dword [rbp - 0x40], 0	        16	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x40000c8	            0x7507	                           jne 0x40000d1	        16	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x40000ca	    0xc745c4030000	               mov dword [rbp - 0x3c], 3	        17	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x40000d1	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000d4	          0x8d7021	                   lea esi, [rax + 0x21]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000d7	          0x8b45b8	             mov eax, dword [rbp - 0x48]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000da	          0x8d4821	                   lea ecx, [rax + 0x21]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000dd	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        20	mouse.c	FUNCTION_1	SWITCH_1
0x40000e0	           0xb45bc	              or eax, dword [rbp - 0x44]	        20	mouse.c	FUNCTION_1	SWITCH_1
0x40000e3	          0x8d5020	                   lea edx, [rax + 0x20]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000e6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000ea	          0x488b00	                    mov rax, qword [rax]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000ed	          0x4189f1	                            mov r9d, esi	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000f0	          0x4189c8	                            mov r8d, ecx	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000f3	            0x89d1	                            mov ecx, edx	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000f5	      0xba00000000	                              mov edx, 0	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000fa	      0xbe9b000000	                           mov esi, 0x9b	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x40000ff	          0x4889c7	                            mov rdi, rax	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000102	      0xb800000000	                              mov eax, 0	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000107	      0xe800000000	                          call 0x400010c	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400010c	      0xe95b010000	                           jmp 0x400026c	        21	mouse.c	FUNCTION_1	SWITCH_1
0x4000111	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        25	mouse.c	FUNCTION_1	SWITCH_1
0x4000119	        0x837dc000	               cmp dword [rbp - 0x40], 0	        27	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x400011d	            0x7507	                           jne 0x4000126	        27	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x400011f	    0xc745c4030000	               mov dword [rbp - 0x3c], 3	        28	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x4000126	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x400012a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x400012e	          0x4801c2	                            add rdx, rax	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000131	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000134	           0xb45bc	              or eax, dword [rbp - 0x44]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000137	          0x83c020	                           add eax, 0x20	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x400013a	            0x4898	                                    cdqe	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x400013c	          0x4889d6	                            mov rsi, rdx	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x400013f	          0x4889c7	                            mov rdi, rax	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000142	      0xe800000000	                          call 0x4000147	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000147	            0x4898	                                    cdqe	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000149	        0x480145d8	            add qword [rbp - 0x28], rax 	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x400014d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000151	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000155	          0x4801c2	                            add rdx, rax	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000158	          0x8b45b8	             mov eax, dword [rbp - 0x48]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400015b	          0x83c021	                           add eax, 0x21	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400015e	            0x4898	                                    cdqe	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000160	          0x4889d6	                            mov rsi, rdx	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000163	          0x4889c7	                            mov rdi, rax	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000166	      0xe800000000	                          call 0x400016b	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400016b	            0x4898	                                    cdqe	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400016d	        0x480145d8	            add qword [rbp - 0x28], rax 	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000171	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000175	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000179	          0x4801c2	                            add rdx, rax	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x400017c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x400017f	          0x83c021	                           add eax, 0x21	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000182	            0x4898	                                    cdqe	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000184	          0x4889d6	                            mov rsi, rdx	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000187	          0x4889c7	                            mov rdi, rax	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x400018a	      0xe800000000	                          call 0x400018f	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x400018f	            0x4898	                                    cdqe	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000191	        0x480145d8	            add qword [rbp - 0x28], rax 	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000195	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        33	mouse.c	FUNCTION_1	SWITCH_1
0x4000199	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        33	mouse.c	FUNCTION_1	SWITCH_1
0x400019d	          0x4801d0	                            add rax, rdx	        33	mouse.c	FUNCTION_1	SWITCH_1
0x40001a0	          0xc60000	                       mov byte [rax], 0	        33	mouse.c	FUNCTION_1	SWITCH_1
0x40001a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40001a7	          0x488b00	                    mov rax, qword [rax]	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40001aa	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40001ae	          0x4889d1	                            mov rcx, rdx	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40001b1	      0xba00000000	                              mov edx, 0	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40001b6	      0xbe9b000000	                           mov esi, 0x9b	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40001bb	          0x4889c7	                            mov rdi, rax	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40001be	      0xb800000000	                              mov eax, 0	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40001c3	      0xe800000000	                          call 0x40001c8	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40001c8	      0xe99f000000	                           jmp 0x400026c	        37	mouse.c	FUNCTION_1	SWITCH_1
0x40001cd	        0x837dc000	               cmp dword [rbp - 0x40], 0	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001d1	            0x7407	                            je 0x40001da	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001d3	      0xbf4d000000	                           mov edi, 0x4d	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001d8	            0xeb05	                           jmp 0x40001df	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001da	      0xbf6d000000	                           mov edi, 0x6d	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001df	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001e2	          0x8d7001	                      lea esi, [rax + 1]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001e5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001e8	          0x8d4801	                      lea ecx, [rax + 1]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001eb	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001ee	           0xb45bc	              or eax, dword [rbp - 0x44]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001f1	            0x89c2	                            mov edx, eax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001f3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001f7	          0x488b00	                    mov rax, qword [rax]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001fa	        0x4883ec08	                              sub rsp, 8	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001fe	              0x57	                                push rdi	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001ff	          0x4189f1	                            mov r9d, esi	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000202	          0x4189c8	                            mov r8d, ecx	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000205	            0x89d1	                            mov ecx, edx	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000207	      0xba00000000	                              mov edx, 0	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x400020c	      0xbe9b000000	                           mov esi, 0x9b	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000211	          0x4889c7	                            mov rdi, rax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000214	      0xb800000000	                              mov eax, 0	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000219	      0xe800000000	                          call 0x400021e	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x400021e	        0x4883c410	                           add rsp, 0x10	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000222	            0xeb48	                           jmp 0x400026c	        42	mouse.c	FUNCTION_1	SWITCH_1
0x4000224	        0x837dc000	               cmp dword [rbp - 0x40], 0	        45	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x4000228	            0x7507	                           jne 0x4000231	        45	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x400022a	    0xc745c4030000	               mov dword [rbp - 0x3c], 3	        46	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x4000231	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000234	          0x8d7001	                      lea esi, [rax + 1]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000237	          0x8b45b8	             mov eax, dword [rbp - 0x48]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400023a	          0x8d4801	                      lea ecx, [rax + 1]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400023d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000240	           0xb45bc	              or eax, dword [rbp - 0x44]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000243	            0x89c2	                            mov edx, eax	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000245	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000249	          0x488b00	                    mov rax, qword [rax]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400024c	          0x4189f1	                            mov r9d, esi	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400024f	          0x4189c8	                            mov r8d, ecx	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000252	            0x89d1	                            mov ecx, edx	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000254	      0xba00000000	                              mov edx, 0	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000259	      0xbe9b000000	                           mov esi, 0x9b	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400025e	          0x4889c7	                            mov rdi, rax	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000261	      0xb800000000	                              mov eax, 0	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000266	      0xe800000000	                          call 0x400026b	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400026b	              0x90	                                     nop	        50	mouse.c	FUNCTION_1	SWITCH_1
0x400026c	              0x90	                                     nop	        52	mouse.c	FUNCTION_1
0x400026d	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	mouse.c	FUNCTION_1
0x4000271	    0x644833042528	                xor rax, qword fs:[0x28]	        52	mouse.c	FUNCTION_1
0x400027a	            0x7405	                            je 0x4000281	        52	mouse.c	FUNCTION_1
0x400027c	      0xe800000000	                          call 0x4000281	        52	mouse.c	FUNCTION_1
0x4000281	              0xc9	                                   leave	        52	mouse.c	FUNCTION_1
0x4000282	              0xc3	                                     ret	        52	mouse.c	FUNCTION_1
vterm_mouse_button	FOR,0:SWITCH,0:CALL,2:DO,0:IF,6:WHILE,0:ELSE,2:functions,0	91
0x4000372	              0x55	                                push rbp	        74	mouse.c	FUNCTION_3
0x4000373	          0x4889e5	                            mov rbp, rsp	        74	mouse.c	FUNCTION_3
0x4000376	        0x4883ec30	                           sub rsp, 0x30	        74	mouse.c	FUNCTION_3
0x400037a	        0x48897de8	             mov qword [rbp - 0x18], rdi	        74	mouse.c	FUNCTION_3
0x400037e	          0x8975e4	             mov dword [rbp - 0x1c], esi	        74	mouse.c	FUNCTION_3
0x4000381	          0x8955e0	             mov dword [rbp - 0x20], edx	        74	mouse.c	FUNCTION_3
0x4000384	          0x894ddc	             mov dword [rbp - 0x24], ecx	        74	mouse.c	FUNCTION_3
0x4000387	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	mouse.c	FUNCTION_3
0x400038b	    0x488b80180100	           mov rax, qword [rax + 0x118] 	        75	mouse.c	FUNCTION_3
0x4000392	        0x488945f8	                mov qword [rbp - 8], rax	        75	mouse.c	FUNCTION_3
0x4000396	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	mouse.c	FUNCTION_3
0x400039a	          0x8b4068	            mov eax, dword [rax + 0x68] 	        77	mouse.c	FUNCTION_3
0x400039d	          0x8945f4	              mov dword [rbp - 0xc], eax	        77	mouse.c	FUNCTION_3
0x40003a0	        0x837de400	               cmp dword [rbp - 0x1c], 0	        79	mouse.c	FUNCTION_3	IF_1
0x40003a4	            0x7e52	                           jle 0x40003f8	        79	mouse.c	FUNCTION_3	IF_1
0x40003a6	        0x837de403	               cmp dword [rbp - 0x1c], 3	        79	mouse.c	FUNCTION_3	IF_1
0x40003aa	            0x7f4c	                            jg 0x40003f8	        79	mouse.c	FUNCTION_3	IF_1
0x40003ac	        0x837de000	               cmp dword [rbp - 0x20], 0	        80	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003b0	            0x7423	                            je 0x40003d5	        80	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003b2	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003b6	          0x8b4068	            mov eax, dword [rax + 0x68] 	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003b9	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003bc	          0x83ea01	                              sub edx, 1	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003bf	      0xbe01000000	                              mov esi, 1	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003c4	            0x89d1	                            mov ecx, edx	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003c6	            0xd3e6	                             shl esi, cl	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003c8	            0x89f2	                            mov edx, esi	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003ca	             0x9c2	                             or edx, eax	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003cc	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003d0	          0x895068	             mov dword [rax + 0x68], edx	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003d3	            0xeb23	                           jmp 0x40003f8	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40003d5	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003d9	          0x8b4068	            mov eax, dword [rax + 0x68] 	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003dc	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003df	          0x83ea01	                              sub edx, 1	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003e2	      0xbe01000000	                              mov esi, 1	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003e7	            0x89d1	                            mov ecx, edx	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003e9	            0xd3e6	                             shl esi, cl	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003eb	            0x89f2	                            mov edx, esi	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003ed	            0xf7d2	                                 not edx	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003ef	            0x21c2	                            and edx, eax	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003f1	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003f5	          0x895068	             mov dword [rax + 0x68], edx	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x40003f8	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	mouse.c	FUNCTION_3	IF_3
0x40003fc	          0x8b4068	            mov eax, dword [rax + 0x68] 	        87	mouse.c	FUNCTION_3	IF_3
0x40003ff	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	        87	mouse.c	FUNCTION_3	IF_3
0x4000402	            0x7506	                           jne 0x400040a	        87	mouse.c	FUNCTION_3	IF_3
0x4000404	        0x837de403	               cmp dword [rbp - 0x1c], 3	        87	mouse.c	FUNCTION_3	IF_3
0x4000408	            0x7e78	                           jle 0x4000482	        87	mouse.c	FUNCTION_3	IF_3
0x400040a	        0x488b45f8	                mov rax, qword [rbp - 8]	        89	mouse.c	FUNCTION_3	IF_4
0x400040e	          0x8b406c	            mov eax, dword [rax + 0x6c] 	        89	mouse.c	FUNCTION_3	IF_4
0x4000411	          0x83e001	                              and eax, 1	        89	mouse.c	FUNCTION_3	IF_4
0x4000414	            0x85c0	                           test eax, eax	        89	mouse.c	FUNCTION_3	IF_4
0x4000416	            0x746d	                            je 0x4000485	        89	mouse.c	FUNCTION_3	IF_4
0x4000418	        0x837de403	               cmp dword [rbp - 0x1c], 3	        92	mouse.c	FUNCTION_3	IF_5
0x400041c	            0x7f2f	                            jg 0x400044d	        92	mouse.c	FUNCTION_3	IF_5
0x400041e	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x4000422	        0x448b4064	            mov r8d, dword [rax + 0x64] 	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x4000426	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x400042a	          0x8b7860	            mov edi, dword [rax + 0x60] 	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x400042d	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x4000430	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x4000433	          0x8d70ff	                      lea esi, [rax - 1]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x4000436	          0x8b55e0	             mov edx, dword [rbp - 0x20]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x4000439	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x400043d	          0x4589c1	                            mov r9d, r8d	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x4000440	          0x4189f8	                            mov r8d, edi	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x4000443	          0x4889c7	                            mov rdi, rax	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x4000446	      0xe8f5fbffff	                   call sym.output_mouse	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x400044b	            0xeb39	                           jmp 0x4000486	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x400044d	        0x837de405	               cmp dword [rbp - 0x1c], 5	        95	mouse.c	FUNCTION_3	ELSE_2	IF_6
0x4000451	            0x7f33	                            jg 0x4000486	        95	mouse.c	FUNCTION_3	ELSE_2	IF_6
0x4000453	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x4000457	        0x448b4064	            mov r8d, dword [rax + 0x64] 	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x400045b	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x400045f	          0x8b7860	            mov edi, dword [rax + 0x60] 	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x4000462	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x4000465	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x4000468	          0x8d703c	                   lea esi, [rax + 0x3c]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x400046b	          0x8b55e0	             mov edx, dword [rbp - 0x20]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x400046e	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x4000472	          0x4589c1	                            mov r9d, r8d	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x4000475	          0x4189f8	                            mov r8d, edi	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x4000478	          0x4889c7	                            mov rdi, rax	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x400047b	      0xe8c0fbffff	                   call sym.output_mouse	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x4000480	            0xeb04	                           jmp 0x4000486	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x4000482	              0x90	                                     nop	        88	mouse.c	FUNCTION_3	IF_3
0x4000483	            0xeb01	                           jmp 0x4000486	        88	mouse.c	FUNCTION_3	IF_3
0x4000485	              0x90	                                     nop	        90	mouse.c	FUNCTION_3	IF_4
0x4000486	              0xc9	                                   leave	        98	mouse.c	FUNCTION_3
0x4000487	              0xc3	                                     ret	        98	mouse.c	FUNCTION_3
vterm_mouse_move	FOR,0:SWITCH,0:CALL,1:DO,0:IF,2:WHILE,0:ELSE,0:functions,0	77
0x4000283	              0x55	                                push rbp	        55	mouse.c	FUNCTION_2
0x4000284	          0x4889e5	                            mov rbp, rsp	        55	mouse.c	FUNCTION_2
0x4000287	        0x4883ec30	                           sub rsp, 0x30	        55	mouse.c	FUNCTION_2
0x400028b	        0x48897de8	             mov qword [rbp - 0x18], rdi	        55	mouse.c	FUNCTION_2
0x400028f	          0x8975e4	             mov dword [rbp - 0x1c], esi	        55	mouse.c	FUNCTION_2
0x4000292	          0x8955e0	             mov dword [rbp - 0x20], edx	        55	mouse.c	FUNCTION_2
0x4000295	          0x894ddc	             mov dword [rbp - 0x24], ecx	        55	mouse.c	FUNCTION_2
0x4000298	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        56	mouse.c	FUNCTION_2
0x400029c	    0x488b80180100	           mov rax, qword [rax + 0x118] 	        56	mouse.c	FUNCTION_2
0x40002a3	        0x488945f8	                mov qword [rbp - 8], rax	        56	mouse.c	FUNCTION_2
0x40002a7	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	mouse.c	FUNCTION_2	IF_1
0x40002ab	          0x8b4060	            mov eax, dword [rax + 0x60] 	        58	mouse.c	FUNCTION_2	IF_1
0x40002ae	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	        58	mouse.c	FUNCTION_2	IF_1
0x40002b1	            0x7510	                           jne 0x40002c3	        58	mouse.c	FUNCTION_2	IF_1
0x40002b3	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	mouse.c	FUNCTION_2	IF_1
0x40002b7	          0x8b4064	            mov eax, dword [rax + 0x64] 	        58	mouse.c	FUNCTION_2	IF_1
0x40002ba	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        58	mouse.c	FUNCTION_2	IF_1
0x40002bd	     0xf84ac000000	                            je 0x400036f	        58	mouse.c	FUNCTION_2	IF_1
0x40002c3	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	mouse.c	FUNCTION_2
0x40002c7	          0x8b55e0	             mov edx, dword [rbp - 0x20]	        61	mouse.c	FUNCTION_2
0x40002ca	          0x895060	             mov dword [rax + 0x60], edx	        61	mouse.c	FUNCTION_2
0x40002cd	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	mouse.c	FUNCTION_2
0x40002d1	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        62	mouse.c	FUNCTION_2
0x40002d4	          0x895064	             mov dword [rax + 0x64], edx	        62	mouse.c	FUNCTION_2
0x40002d7	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	mouse.c	FUNCTION_2	IF_2
0x40002db	          0x8b406c	            mov eax, dword [rax + 0x6c] 	        64	mouse.c	FUNCTION_2	IF_2
0x40002de	          0x83e002	                              and eax, 2	        64	mouse.c	FUNCTION_2	IF_2
0x40002e1	            0x85c0	                           test eax, eax	        64	mouse.c	FUNCTION_2	IF_2
0x40002e3	            0x740b	                            je 0x40002f0	        64	mouse.c	FUNCTION_2	IF_2
0x40002e5	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	mouse.c	FUNCTION_2	IF_2
0x40002e9	          0x8b4068	            mov eax, dword [rax + 0x68] 	        64	mouse.c	FUNCTION_2	IF_2
0x40002ec	            0x85c0	                           test eax, eax	        64	mouse.c	FUNCTION_2	IF_2
0x40002ee	            0x750e	                           jne 0x40002fe	        64	mouse.c	FUNCTION_2	IF_2
0x40002f0	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	mouse.c	FUNCTION_2	IF_2
0x40002f4	          0x8b406c	            mov eax, dword [rax + 0x6c] 	        65	mouse.c	FUNCTION_2	IF_2
0x40002f7	          0x83e004	                              and eax, 4	        65	mouse.c	FUNCTION_2	IF_2
0x40002fa	            0x85c0	                           test eax, eax	        64	mouse.c	FUNCTION_2	IF_2
0x40002fc	            0x7472	                            je 0x4000370	        64	mouse.c	FUNCTION_2	IF_2
0x40002fe	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	mouse.c	FUNCTION_2	IF_2
0x4000302	          0x8b4068	            mov eax, dword [rax + 0x68] 	        66	mouse.c	FUNCTION_2	IF_2
0x4000305	          0x83e001	                              and eax, 1	        66	mouse.c	FUNCTION_2	IF_2
0x4000308	            0x85c0	                           test eax, eax	        66	mouse.c	FUNCTION_2	IF_2
0x400030a	            0x7531	                           jne 0x400033d	        66	mouse.c	FUNCTION_2	IF_2
0x400030c	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	mouse.c	FUNCTION_2	IF_2
0x4000310	          0x8b4068	            mov eax, dword [rax + 0x68] 	        67	mouse.c	FUNCTION_2	IF_2
0x4000313	          0x83e002	                              and eax, 2	        67	mouse.c	FUNCTION_2	IF_2
0x4000316	            0x85c0	                           test eax, eax	        67	mouse.c	FUNCTION_2	IF_2
0x4000318	            0x751c	                           jne 0x4000336	        67	mouse.c	FUNCTION_2	IF_2
0x400031a	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	mouse.c	FUNCTION_2	IF_2
0x400031e	          0x8b4068	            mov eax, dword [rax + 0x68] 	        68	mouse.c	FUNCTION_2	IF_2
0x4000321	          0x83e004	                              and eax, 4	        68	mouse.c	FUNCTION_2	IF_2
0x4000324	            0x85c0	                           test eax, eax	        68	mouse.c	FUNCTION_2	IF_2
0x4000326	            0x7407	                            je 0x400032f	        68	mouse.c	FUNCTION_2	IF_2
0x4000328	      0xb803000000	                              mov eax, 3	        68	mouse.c	FUNCTION_2	IF_2
0x400032d	            0xeb13	                           jmp 0x4000342	        68	mouse.c	FUNCTION_2	IF_2
0x400032f	      0xb804000000	                              mov eax, 4	        68	mouse.c	FUNCTION_2	IF_2
0x4000334	            0xeb0c	                           jmp 0x4000342	        68	mouse.c	FUNCTION_2	IF_2
0x4000336	      0xb802000000	                              mov eax, 2	        67	mouse.c	FUNCTION_2	IF_2
0x400033b	            0xeb05	                           jmp 0x4000342	        67	mouse.c	FUNCTION_2	IF_2
0x400033d	      0xb801000000	                              mov eax, 1	        66	mouse.c	FUNCTION_2	IF_2
0x4000342	          0x8945f4	              mov dword [rbp - 0xc], eax	        66	mouse.c	FUNCTION_2	IF_2
0x4000345	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x4000348	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x400034b	          0x8d701f	                   lea esi, [rax + 0x1f]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x400034e	          0x8b7de4	             mov edi, dword [rbp - 0x1c]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x4000351	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x4000354	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x4000358	          0x4189f9	                            mov r9d, edi	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x400035b	          0x4189c8	                            mov r8d, ecx	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x400035e	            0x89d1	                            mov ecx, edx	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x4000360	      0xba01000000	                              mov edx, 1	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x4000365	          0x4889c7	                            mov rdi, rax	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x4000368	      0xe8d3fcffff	                   call sym.output_mouse	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x400036d	            0xeb01	                           jmp 0x4000370	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x400036f	              0x90	                                     nop	        59	mouse.c	FUNCTION_2	IF_1
0x4000370	              0xc9	                                   leave	        71	mouse.c	FUNCTION_2
0x4000371	              0xc3	                                     ret	        71	mouse.c	FUNCTION_2
