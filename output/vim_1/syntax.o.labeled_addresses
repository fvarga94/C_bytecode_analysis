clear_keywtab	IF,1:CALL,7:FOR,2:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	42
0x400168a	            0x4156	                                push r14	      4487	syntax.c	FUNCTION_73
0x400168c	            0x4155	                                push r13	      4487	syntax.c	FUNCTION_73
0x400168e	            0x4154	                                push r12	      4487	syntax.c	FUNCTION_73
0x4001690	              0x55	                                push rbp	      4487	syntax.c	FUNCTION_73
0x4001691	              0x53	                                push rbx	      4487	syntax.c	FUNCTION_73
0x4001692	          0x4989fe	                            mov r14, rdi	      4487	syntax.c	FUNCTION_73
0x4001695	        0x488b4708	                mov rax, qword [rdi + 8]	      4493	syntax.c	FUNCTION_73
0x4001699	          0x4189c5	                           mov r13d, eax	      4493	syntax.c	FUNCTION_73
0x400169c	        0x4c8b6720	            mov r12, qword [rdi + 0x20] 	      4494	syntax.c	FUNCTION_73	FOR_1
0x40016a0	            0x85c0	                           test eax, eax	      4494	syntax.c	FUNCTION_73	FOR_1
0x40016a2	            0x7e4b	                           jle 0x40016ef	      4494	syntax.c	FUNCTION_73	FOR_1
0x40016a4	      0x498b5c2408	                mov rbx, qword [r12 + 8]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x40016a9	    0x4881fb000000	                              cmp rbx, 0	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x40016b0	            0x7434	                            je 0x40016e6	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x40016b2	          0x4885db	                           test rbx, rbx	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x40016b5	            0x742f	                            je 0x40016e6	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x40016b7	        0x4183ed01	                             sub r13d, 1	      4498	syntax.c	FUNCTION_73	FOR_1	IF_1
0x40016bb	        0x4883eb28	                           sub rbx, 0x28	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x40016bf	            0x7425	                            je 0x40016e6	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x40016c1	          0x488b2b	                    mov rbp, qword [rbx]	      4501	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x40016c4	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x40016c8	      0xe800000000	                          call 0x40016cd	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x40016cd	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x40016d1	      0xe800000000	                          call 0x40016d6	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x40016d6	          0x4889df	                            mov rdi, rbx	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_5
0x40016d9	      0xe800000000	                          call 0x40016de	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_5
0x40016de	          0x4889eb	                            mov rbx, rbp	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x40016e1	          0x4885ed	                           test rbp, rbp	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x40016e4	            0x75db	                           jne 0x40016c1	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x40016e6	        0x4983c410	                           add r12, 0x10	      4494	syntax.c	FUNCTION_73	FOR_1
0x40016ea	          0x4585ed	                         test r13d, r13d	      4494	syntax.c	FUNCTION_73	FOR_1
0x40016ed	            0x7fb5	                            jg 0x40016a4	      4494	syntax.c	FUNCTION_73	FOR_1
0x40016ef	          0x4c89f7	                            mov rdi, r14	      4508	syntax.c	FUNCTION_73	CALL_6
0x40016f2	      0xe800000000	                          call 0x40016f7	      4508	syntax.c	FUNCTION_73	CALL_6
0x40016f7	          0x4c89f7	                            mov rdi, r14	      4509	syntax.c	FUNCTION_73	CALL_7
0x40016fa	      0xe800000000	                          call 0x40016ff	      4509	syntax.c	FUNCTION_73	CALL_7
0x40016ff	              0x5b	                                 pop rbx	      4510	syntax.c	FUNCTION_73
0x4001700	              0x5d	                                 pop rbp	      4510	syntax.c	FUNCTION_73
0x4001701	            0x415c	                                 pop r12	      4510	syntax.c	FUNCTION_73
0x4001703	            0x415d	                                 pop r13	      4510	syntax.c	FUNCTION_73
0x4001705	            0x415e	                                 pop r14	      4510	syntax.c	FUNCTION_73
0x4001707	              0xc3	                                     ret	      4510	syntax.c	FUNCTION_73
limit_pos	IF,2:CALL,0:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	16
0x4000089	          0x488b17	                    mov rdx, qword [rdi]	      3174	syntax.c	FUNCTION_38	IF_1
0x400008c	          0x488b06	                    mov rax, qword [rsi]	      3174	syntax.c	FUNCTION_38	IF_1
0x400008f	          0x4839c2	                            cmp rdx, rax	      3174	syntax.c	FUNCTION_38	IF_1
0x4000092	            0x7e0f	                           jle 0x40000a3	      3174	syntax.c	FUNCTION_38	IF_1
0x4000094	          0x488b06	                    mov rax, qword [rsi]	      3175	syntax.c	FUNCTION_38	IF_1
0x4000097	        0x488b5608	                mov rdx, qword [rsi + 8]	      3175	syntax.c	FUNCTION_38	IF_1
0x400009b	          0x488907	                    mov qword [rdi], rax	      3175	syntax.c	FUNCTION_38	IF_1
0x400009e	        0x48895708	                mov qword [rdi + 8], rdx	      3175	syntax.c	FUNCTION_38	IF_1
0x40000a2	              0xc3	                                     ret	      3175	syntax.c	FUNCTION_38	IF_1
0x40000a3	          0x4839c2	                            cmp rdx, rax	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40000a6	            0x750b	                           jne 0x40000b3	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40000a8	          0x8b4608	                mov eax, dword [rsi + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40000ab	          0x394708	                cmp dword [rdi + 8], eax	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40000ae	            0x7e03	                           jle 0x40000b3	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40000b0	          0x894708	                mov dword [rdi + 8], eax	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40000b3	            0xf3c3	                                     ret	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
syn_attr2attr	IF,3:CALL,3:FOR,0:ELSE,2:SWITCH,0:WHILE,0:DO,0:functions,0	17
0x4005099	    0x833d00000000	               cmp dword [0x040050a0], 0	      9177	syntax.c	FUNCTION_138	IF_1
0x40050a0	            0x7407	                            je 0x40050a9	      9177	syntax.c	FUNCTION_138	IF_1
0x40050a2	      0xe800000000	                          call 0x40050a7	      9178	syntax.c	FUNCTION_138	CALL_1
0x40050a7	            0xeb1e	                           jmp 0x40050c7	      9178	syntax.c	FUNCTION_138	CALL_1
0x40050a9	    0x833d00000000	               cmp dword [0x040050b0], 1	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x40050b0	            0x7f09	                            jg 0x40050bb	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x40050b2	    0x833d00000000	               cmp dword [0x040050b9], 0	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x40050b9	            0x7407	                            je 0x40050c2	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x40050bb	      0xe800000000	                          call 0x40050c0	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x40050c0	            0xeb05	                           jmp 0x40050c7	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x40050c2	      0xe800000000	                          call 0x40050c7	      9184	syntax.c	FUNCTION_138	CALL_3
0x40050c7	          0x4885c0	                           test rax, rax	      9186	syntax.c	FUNCTION_138	IF_3
0x40050ca	            0x7404	                            je 0x40050d0	      9186	syntax.c	FUNCTION_138	IF_3
0x40050cc	           0xfbf00	                   movsx eax, word [rax]	      9188	syntax.c	FUNCTION_138
0x40050cf	              0xc3	                                     ret	      9188	syntax.c	FUNCTION_138
0x40050d0	      0xb800000000	                              mov eax, 0	      9187	syntax.c	FUNCTION_138	IF_3
0x40050d5	              0xc3	                                     ret	      9189	syntax.c	FUNCTION_138
syn_regexec	IF,6:CALL,5:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	81
0x40007bb	            0x4155	                                push r13	      3318	syntax.c	FUNCTION_43
0x40007bd	            0x4154	                                push r12	      3318	syntax.c	FUNCTION_43
0x40007bf	              0x55	                                push rbp	      3318	syntax.c	FUNCTION_43
0x40007c0	              0x53	                                push rbx	      3318	syntax.c	FUNCTION_43
0x40007c1	        0x4883ec38	                           sub rsp, 0x38	      3318	syntax.c	FUNCTION_43
0x40007c5	          0x4889fb	                            mov rbx, rdi	      3318	syntax.c	FUNCTION_43
0x40007c8	          0x4889f5	                            mov rbp, rsi	      3318	syntax.c	FUNCTION_43
0x40007cb	          0x4189d5	                           mov r13d, edx	      3318	syntax.c	FUNCTION_43
0x40007ce	          0x4989cc	                            mov r12, rcx	      3318	syntax.c	FUNCTION_43
0x40007d1	    0x64488b042528	                mov rax, qword fs:[0x28]	      3318	syntax.c	FUNCTION_43
0x40007da	      0x4889442428	             mov qword [rsp + 0x28], rax	      3318	syntax.c	FUNCTION_43
0x40007df	            0x31c0	                            xor eax, eax	      3318	syntax.c	FUNCTION_43
0x40007e1	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3321	syntax.c	FUNCTION_43
0x40007e9	    0x833d00000000	               cmp dword [0x040007f0], 0	      3326	syntax.c	FUNCTION_43	IF_1
0x40007f0	            0x740a	                            je 0x40007fc	      3326	syntax.c	FUNCTION_43	IF_1
0x40007f2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3327	syntax.c	FUNCTION_43	CALL_1
0x40007f7	      0xe800000000	                          call 0x40007fc	      3327	syntax.c	FUNCTION_43	CALL_1
0x40007fc	    0x488b15000000	            mov rdx, qword [0x04000803] 	      3330	syntax.c	FUNCTION_43
0x4000803	    0x488b82981500	          mov rax, qword [rdx + 0x1598] 	      3330	syntax.c	FUNCTION_43
0x400080a	    0x89834c010000	            mov dword [rbx + 0x14c], eax	      3330	syntax.c	FUNCTION_43
0x4000810	        0x4883ec08	                              sub rsp, 8	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000814	      0x488d442414	                   lea rax, [rsp + 0x14]	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000819	              0x50	                                push rax	      3331	syntax.c	FUNCTION_43	CALL_2
0x400081a	    0x4c8b0d000000	              mov r9, qword [0x04000821]	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000821	          0x4589e8	                           mov r8d, r13d	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000824	          0x4889e9	                            mov rcx, rbp	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000827	    0x488b35000000	            mov rsi, qword [0x0400082e] 	      3331	syntax.c	FUNCTION_43	CALL_2
0x400082e	          0x4889df	                            mov rdi, rbx	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000831	      0xe800000000	                          call 0x4000836	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000836	          0x4989c5	                            mov r13, rax	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000839	        0x4883c410	                           add rsp, 0x10	      3340	syntax.c	FUNCTION_43	IF_2
0x400083d	    0x833d00000000	               cmp dword [0x04000844], 0	      3340	syntax.c	FUNCTION_43	IF_2
0x4000844	            0x7458	                            je 0x400089e	      3340	syntax.c	FUNCTION_43	IF_2
0x4000846	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x400084b	      0xe800000000	                          call 0x4000850	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x4000850	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x4000855	          0x4c89e7	                            mov rdi, r12	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x4000858	      0xe800000000	                          call 0x400085d	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x400085d	      0x498d742410	                   lea rsi, [r12 + 0x10]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4000862	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4000867	      0xe800000000	                          call 0x400086c	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x400086c	            0x85c0	                           test eax, eax	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x400086e	            0x7914	                           jns 0x4000884	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4000870	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4000875	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x400087a	      0x4989442410	             mov qword [r12 + 0x10], rax	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x400087f	      0x4989542418	             mov qword [r12 + 0x18], rdx	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4000884	    0x498344242001	               add qword [r12 + 0x20], 1	      3346	syntax.c	FUNCTION_43	IF_2
0x400088a	          0x4585ed	                         test r13d, r13d	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x400088d	            0x7e59	                           jle 0x40008e8	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x400088f	    0x498344242801	               add qword [r12 + 0x28], 1	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x4000895	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3352	syntax.c	FUNCTION_43	IF_5
0x400089a	            0x7509	                           jne 0x40008a5	      3352	syntax.c	FUNCTION_43	IF_5
0x400089c	            0xeb21	                           jmp 0x40008bf	      3352	syntax.c	FUNCTION_43	IF_5
0x400089e	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3352	syntax.c	FUNCTION_43	IF_5
0x40008a3	            0x7415	                            je 0x40008ba	      3352	syntax.c	FUNCTION_43	IF_5
0x40008a5	    0x488b05000000	            mov rax, qword [0x040008ac] 	      3353	syntax.c	FUNCTION_43	IF_5
0x40008ac	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3353	syntax.c	FUNCTION_43	IF_5
0x40008b0	    0xc78054020000	              mov dword [rax + 0x254], 1	      3353	syntax.c	FUNCTION_43	IF_5
0x40008ba	          0x4585ed	                         test r13d, r13d	      3356	syntax.c	FUNCTION_43	IF_6
0x40008bd	            0x7e12	                           jle 0x40008d1	      3356	syntax.c	FUNCTION_43	IF_6
0x40008bf	        0x48016b08	                add qword [rbx + 8], rbp	      3358	syntax.c	FUNCTION_43	IF_6
0x40008c3	    0x4801aba80000	            add qword [rbx + 0xa8], rbp 	      3359	syntax.c	FUNCTION_43	IF_6
0x40008ca	      0xb801000000	                              mov eax, 1	      3360	syntax.c	FUNCTION_43	IF_6
0x40008cf	            0xeb05	                           jmp 0x40008d6	      3360	syntax.c	FUNCTION_43	IF_6
0x40008d1	      0xb800000000	                              mov eax, 0	      3362	syntax.c	FUNCTION_43
0x40008d6	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3363	syntax.c	FUNCTION_43
0x40008db	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3363	syntax.c	FUNCTION_43
0x40008e4	            0x7411	                            je 0x40008f7	      3363	syntax.c	FUNCTION_43
0x40008e6	            0xeb0a	                           jmp 0x40008f2	      3363	syntax.c	FUNCTION_43
0x40008e8	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3352	syntax.c	FUNCTION_43	IF_5
0x40008ec	            0x85c0	                           test eax, eax	      3352	syntax.c	FUNCTION_43	IF_5
0x40008ee	            0x75b5	                           jne 0x40008a5	      3352	syntax.c	FUNCTION_43	IF_5
0x40008f0	            0xebe4	                           jmp 0x40008d6	      3352	syntax.c	FUNCTION_43	IF_5
0x40008f2	      0xe800000000	                          call 0x40008f7	      3363	syntax.c	FUNCTION_43
0x40008f7	        0x4883c438	                           add rsp, 0x38	      3363	syntax.c	FUNCTION_43
0x40008fb	              0x5b	                                 pop rbx	      3363	syntax.c	FUNCTION_43
0x40008fc	              0x5d	                                 pop rbp	      3363	syntax.c	FUNCTION_43
0x40008fd	            0x415c	                                 pop r12	      3363	syntax.c	FUNCTION_43
0x40008ff	            0x415d	                                 pop r13	      3363	syntax.c	FUNCTION_43
0x4000901	              0xc3	                                     ret	      3363	syntax.c	FUNCTION_43
syn_get_final_id	IF,2:CALL,1:FOR,1:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	24
0x4007afb	    0x8b3500000000	            mov esi, dword [0x04007b01] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4007b01	            0x85ff	                           test edi, edi	      9879	syntax.c	FUNCTION_159	IF_1
0x4007b03	            0x7e32	                           jle 0x4007b37	      9879	syntax.c	FUNCTION_159	IF_1
0x4007b05	            0x39fe	                            cmp esi, edi	      9879	syntax.c	FUNCTION_159	IF_1
0x4007b07	            0x7c2e	                            jl 0x4007b37	      9879	syntax.c	FUNCTION_159	IF_1
0x4007b09	    0x4c8b05000000	              mov r8, qword [0x04007b10]	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x4007b10	      0xb964000000	                           mov ecx, 0x64	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x4007b15	          0x4863d7	                         movsxd rdx, edi	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x4007b18	        0x488d04d2	                  lea rax, [rdx + rdx*8]	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x4007b1c	        0x488d0442	                  lea rax, [rdx + rax*2]	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x4007b20	      0x418b54c0f0	      mov edx, dword [r8 + rax*8 - 0x10]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4007b25	            0x39d6	                            cmp esi, edx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4007b27	            0x7c14	                            jl 0x4007b3d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4007b29	            0x85d2	                           test edx, edx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4007b2b	            0x7410	                            je 0x4007b3d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4007b2d	            0x89d7	                            mov edi, edx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4007b2f	          0x83e901	                              sub ecx, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x4007b32	            0x75e1	                           jne 0x4007b15	      9886	syntax.c	FUNCTION_159	FOR_1
0x4007b34	            0x89d0	                            mov eax, edx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4007b36	              0xc3	                                     ret	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4007b37	      0xb800000000	                              mov eax, 0	      9880	syntax.c	FUNCTION_159	IF_1
0x4007b3c	              0xc3	                                     ret	      9880	syntax.c	FUNCTION_159	IF_1
0x4007b3d	            0x89f8	                            mov eax, edi	      9880	syntax.c	FUNCTION_159	IF_1
0x4007b3f	              0xc3	                                     ret	      9895	syntax.c	FUNCTION_159
syntax_end_parsing	IF,2:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	15
0x400358c	              0x53	                                push rbx	      1713	syntax.c	FUNCTION_22
0x400358d	          0x4889fb	                            mov rbx, rdi	      1713	syntax.c	FUNCTION_22
0x4003590	      0xe8abcaffff	           call sym.syn_stack_find_entry	      1716	syntax.c	FUNCTION_22	CALL_1
0x4003595	          0x4885c0	                           test rax, rax	      1717	syntax.c	FUNCTION_22	IF_1
0x4003598	            0x741f	                            je 0x40035b9	      1717	syntax.c	FUNCTION_22	IF_1
0x400359a	        0x483b5808	                cmp rbx, qword [rax + 8]	      1717	syntax.c	FUNCTION_22	IF_1
0x400359e	            0x7e08	                           jle 0x40035a8	      1717	syntax.c	FUNCTION_22	IF_1
0x40035a0	          0x488b00	                    mov rax, qword [rax]	      1718	syntax.c	FUNCTION_22	IF_1
0x40035a3	          0x4885c0	                           test rax, rax	      1720	syntax.c	FUNCTION_22	IF_2
0x40035a6	            0x7411	                            je 0x40035b9	      1720	syntax.c	FUNCTION_22	IF_2
0x40035a8	    0x4883b8d00000	               cmp qword [rax + 0xd0], 0	      1720	syntax.c	FUNCTION_22	IF_2
0x40035b0	            0x7407	                            je 0x40035b9	      1720	syntax.c	FUNCTION_22	IF_2
0x40035b2	    0x488998d00000	             mov qword [rax + 0xd0], rbx	      1721	syntax.c	FUNCTION_22	IF_2
0x40035b9	              0x5b	                                 pop rbx	      1722	syntax.c	FUNCTION_22
0x40035ba	              0xc3	                                     ret	      1722	syntax.c	FUNCTION_22
highlight_color	IF,17:CALL,22:FOR,0:ELSE,6:SWITCH,0:WHILE,0:DO,0:functions,0	236
0x400515b	        0x4883ec08	                              sub rsp, 8	      9362	syntax.c	FUNCTION_144
0x400515f	            0x85ff	                           test edi, edi	      9369	syntax.c	FUNCTION_144	IF_1
0x4005161	     0xf8e1e030000	                           jle 0x4005485	      9369	syntax.c	FUNCTION_144	IF_1
0x4005167	    0x3b3d00000000	            cmp edi, dword [0x0400516d] 	      9369	syntax.c	FUNCTION_144	IF_1
0x400516d	     0xf8f19030000	                            jg 0x400548c	      9369	syntax.c	FUNCTION_144	IF_1
0x4005173	           0xfb60e	                   movzx ecx, byte [rsi]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005176	          0x8d41bf	                   lea eax, [rcx - 0x41]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005179	            0x3c19	                            cmp al, 0x19	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400517b	            0x760b	                           jbe 0x4005188	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400517d	          0x80f966	                            cmp cl, 0x66	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005180	     0xf8598000000	                           jne 0x400521e	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005186	            0xeb09	                           jmp 0x4005191	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005188	          0x80f946	                            cmp cl, 0x46	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400518b	     0xf8594000000	                           jne 0x4005225	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005191	      0x440fb64601	               movzx r8d, byte [rsi + 1]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005196	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400519a	        0x4180f919	                           cmp r9b, 0x19	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400519e	            0x760b	                           jbe 0x40051ab	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40051a0	        0x4180f867	                           cmp r8b, 0x67	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40051a4	            0x750f	                           jne 0x40051b5	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40051a6	      0xe90d030000	                           jmp 0x40054b8	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40051ab	        0x4180f847	                           cmp r8b, 0x47	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40051af	     0xf840a030000	                            je 0x40054bf	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40051b5	            0x3c19	                            cmp al, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051b7	            0x7607	                           jbe 0x40051c0	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051b9	          0x80f966	                            cmp cl, 0x66	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051bc	            0x7407	                            je 0x40051c5	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051be	            0xeb5e	                           jmp 0x400521e	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051c0	          0x80f946	                            cmp cl, 0x46	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051c3	            0x7560	                           jne 0x4005225	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051c5	        0x4180f919	                           cmp r9b, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051c9	            0x7608	                           jbe 0x40051d3	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051cb	        0x4180f86f	                           cmp r8b, 0x6f	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051cf	            0x7549	                           jne 0x400521a	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051d1	            0xeb06	                           jmp 0x40051d9	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051d3	        0x4180f84f	                           cmp r8b, 0x4f	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051d7	            0x7541	                           jne 0x400521a	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051d9	      0x440fb64602	               movzx r8d, byte [rsi + 2]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40051de	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051e2	        0x4180f919	                           cmp r9b, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051e6	            0x7608	                           jbe 0x40051f0	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051e8	        0x4180f86e	                           cmp r8b, 0x6e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40051ec	            0x752c	                           jne 0x400521a	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40051ee	            0xeb06	                           jmp 0x40051f6	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40051f0	        0x4180f84e	                           cmp r8b, 0x4e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40051f4	            0x7524	                           jne 0x400521a	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40051f6	      0x440fb64603	               movzx r8d, byte [rsi + 3]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40051fb	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40051ff	        0x4180f919	                           cmp r9b, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005203	            0x760b	                           jbe 0x4005210	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005205	        0x4180f874	                           cmp r8b, 0x74	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005209	            0x750f	                           jne 0x400521a	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400520b	      0xe998020000	                           jmp 0x40054a8	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005210	        0x4180f854	                           cmp r8b, 0x54	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005214	     0xf848e020000	                            je 0x40054a8	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400521a	            0x3c19	                            cmp al, 0x19	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400521c	            0x7607	                           jbe 0x4005225	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400521e	          0x80f973	                            cmp cl, 0x73	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005221	            0x752f	                           jne 0x4005252	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005223	            0xeb05	                           jmp 0x400522a	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005225	          0x80f953	                            cmp cl, 0x53	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005228	            0x7537	                           jne 0x4005261	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400522a	      0x440fb64601	               movzx r8d, byte [rsi + 1]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400522f	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005233	        0x4180f919	                           cmp r9b, 0x19	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005237	            0x760b	                           jbe 0x4005244	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005239	        0x4180f870	                           cmp r8b, 0x70	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400523d	            0x750f	                           jne 0x400524e	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400523f	      0xe98e020000	                           jmp 0x40054d2	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005244	        0x4180f850	                           cmp r8b, 0x50	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005248	     0xf8484020000	                            je 0x40054d2	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400524e	            0x3c19	                            cmp al, 0x19	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005250	            0x760f	                           jbe 0x4005261	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005252	      0xb800000000	                              mov eax, 0	      9380	syntax.c	FUNCTION_144	ELSE_3	IF_5
0x4005257	          0x80f962	                            cmp cl, 0x62	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400525a	            0x7413	                            je 0x400526f	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400525c	      0xe97f020000	                           jmp 0x40054e0	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005261	      0xb800000000	                              mov eax, 0	      9380	syntax.c	FUNCTION_144	ELSE_3	IF_5
0x4005266	          0x80f942	                            cmp cl, 0x42	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005269	     0xf8571020000	                           jne 0x40054e0	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400526f	         0xfb64e01	               movzx ecx, byte [rsi + 1]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005273	          0x8d41bf	                   lea eax, [rcx - 0x41]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005276	            0x3c19	                            cmp al, 0x19	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005278	            0x7613	                           jbe 0x400528d	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400527a	      0xb800000000	                              mov eax, 0	      9380	syntax.c	FUNCTION_144	ELSE_3	IF_5
0x400527f	          0x80f967	                            cmp cl, 0x67	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005282	     0xf8558020000	                           jne 0x40054e0	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005288	      0xe937020000	                           jmp 0x40054c4	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400528d	      0xb800000000	                              mov eax, 0	      9380	syntax.c	FUNCTION_144	ELSE_3	IF_5
0x4005292	          0x80f947	                            cmp cl, 0x47	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005295	     0xf8545020000	                           jne 0x40054e0	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400529b	      0xe924020000	                           jmp 0x40054c4	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40052a0	          0x4863ff	                         movsxd rdi, edi	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x40052a3	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x40052a7	        0x488d0447	                  lea rax, [rdi + rax*2]	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x40052ab	        0x48c1e003	                              shl rax, 3	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x40052af	    0x480305000000	             add rax, qword [0x040052b6]	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x40052b6	        0x488b40c8	             mov rax, qword [rax - 0x38]	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x40052ba	      0xe921020000	                           jmp 0x40054e0	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x40052bf	      0xb900000000	                              mov ecx, 0	      9381	syntax.c	FUNCTION_144	IF_6
0x40052c4	            0xeb0a	                           jmp 0x40052d0	      9381	syntax.c	FUNCTION_144	IF_6
0x40052c6	      0xb901000000	                              mov ecx, 1	      9381	syntax.c	FUNCTION_144	IF_6
0x40052cb	      0xb800000000	                              mov eax, 0	      9381	syntax.c	FUNCTION_144	IF_6
0x40052d0	    0x8b1500000000	            mov edx, dword [0x040052d6] 	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x40052d6	            0x85d2	                           test edx, edx	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x40052d8	            0x750d	                           jne 0x40052e7	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x40052da	    0x833d00000000	               cmp dword [0x040052e1], 0	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x40052e1	     0xf84c4000000	                            je 0x40053ab	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x40052e7	        0x807e0223	                cmp byte [rsi + 2], 0x23	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x40052eb	     0xf85ba000000	                           jne 0x40053ab	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x40052f1	            0x85c0	                           test eax, eax	      9397	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x40052f3	            0x741c	                            je 0x4005311	      9397	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x40052f5	          0x4863ff	                         movsxd rdi, edi	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x40052f8	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x40052fc	        0x488d0447	                  lea rax, [rdi + rax*2]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x4005300	        0x48c1e003	                              shl rax, 3	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x4005304	    0x480305000000	             add rax, qword [0x0400530b]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x400530b	        0x488b78a8	             mov rdi, qword [rax - 0x58]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x400530f	            0xeb3a	                           jmp 0x400534b	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x4005311	            0x85c9	                           test ecx, ecx	      9399	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005313	            0x741c	                            je 0x4005331	      9399	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005315	          0x4863ff	                         movsxd rdi, edi	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005318	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x400531c	        0x488d0447	                  lea rax, [rdi + rax*2]	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005320	        0x48c1e003	                              shl rax, 3	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005324	    0x480305000000	             add rax, qword [0x0400532b]	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x400532b	        0x488b78b8	             mov rdi, qword [rax - 0x48]	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x400532f	            0xeb1a	                           jmp 0x400534b	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005331	          0x4863ff	                         movsxd rdi, edi	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x4005334	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x4005338	        0x488d0447	                  lea rax, [rdi + rax*2]	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x400533c	        0x48c1e003	                              shl rax, 3	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x4005340	    0x480305000000	             add rax, qword [0x04005347]	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x4005347	        0x488b78b0	             mov rdi, qword [rax - 0x50]	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x400534b	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9407	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x4005352	     0xf843b010000	                            je 0x4005493	      9407	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x4005358	            0x85d2	                           test edx, edx	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x400535a	      0xba00000000	                              mov edx, 0	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x400535f	      0xb800000000	                              mov eax, 0	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x4005364	        0x480f44c2	                          cmove rax, rdx	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x4005368	            0xffd0	                                call rax	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x400536a	           0xfb6d4	                           movzx edx, ah	        33	stdio2.h	FUNCTION_170	CALL_2
0x400536d	          0x4989d1	                             mov r9, rdx	        33	stdio2.h	FUNCTION_170	CALL_2
0x4005370	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_170	CALL_2
0x4005374	           0xfb6d0	                           movzx edx, al	        33	stdio2.h	FUNCTION_170	CALL_2
0x4005377	              0x52	                                push rdx	        33	stdio2.h	FUNCTION_170	CALL_2
0x4005378	        0x48c1e810	                           shr rax, 0x10	        33	stdio2.h	FUNCTION_170	CALL_2
0x400537c	          0x4989c0	                             mov r8, rax	        33	stdio2.h	FUNCTION_170	CALL_2
0x400537f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x4005384	      0xba0a000000	                            mov edx, 0xa	        33	stdio2.h	FUNCTION_170	CALL_2
0x4005389	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_170	CALL_2
0x400538e	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x4005393	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x4005398	      0xe800000000	                          call 0x400539d	        33	stdio2.h	FUNCTION_170	CALL_2
0x400539d	        0x4883c410	                           add rsp, 0x10	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x40053a1	      0xb800000000	                              mov eax, 0	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x40053a6	      0xe935010000	                           jmp 0x40054e0	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x40053ab	            0x85c0	                           test eax, eax	      9417	syntax.c	FUNCTION_144	IF_6	IF_12
0x40053ad	            0x741f	                            je 0x40053ce	      9417	syntax.c	FUNCTION_144	IF_6	IF_12
0x40053af	          0x4863ff	                         movsxd rdi, edi	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x40053b2	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x40053b6	        0x488d0447	                  lea rax, [rdi + rax*2]	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x40053ba	        0x48c1e003	                              shl rax, 3	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x40053be	    0x480305000000	             add rax, qword [0x040053c5]	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x40053c5	        0x488b40d8	             mov rax, qword [rax - 0x28]	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x40053c9	      0xe912010000	                           jmp 0x40054e0	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x40053ce	            0x85c9	                           test ecx, ecx	      9419	syntax.c	FUNCTION_144	IF_6	IF_13
0x40053d0	            0x741f	                            je 0x40053f1	      9419	syntax.c	FUNCTION_144	IF_6	IF_13
0x40053d2	          0x4863ff	                         movsxd rdi, edi	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x40053d5	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x40053d9	        0x488d0447	                  lea rax, [rdi + rax*2]	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x40053dd	        0x48c1e003	                              shl rax, 3	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x40053e1	    0x480305000000	             add rax, qword [0x040053e8]	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x40053e8	        0x488b40e8	             mov rax, qword [rax - 0x18]	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x40053ec	      0xe9ef000000	                           jmp 0x40054e0	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x40053f1	          0x4863ff	                         movsxd rdi, edi	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x40053f4	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x40053f8	        0x488d0447	                  lea rax, [rdi + rax*2]	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x40053fc	        0x48c1e003	                              shl rax, 3	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x4005400	    0x480305000000	             add rax, qword [0x04005407]	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x4005407	        0x488b40e0	             mov rax, qword [rax - 0x20]	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x400540b	      0xe9d0000000	                           jmp 0x40054e0	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x4005410	          0x83fa63	                           cmp edx, 0x63	      9425	syntax.c	FUNCTION_144	IF_15
0x4005413	     0xf8581000000	                           jne 0x400549a	      9425	syntax.c	FUNCTION_144	IF_15
0x4005419	            0x85c0	                           test eax, eax	      9427	syntax.c	FUNCTION_144	IF_15	IF_16
0x400541b	            0x7420	                            je 0x400543d	      9427	syntax.c	FUNCTION_144	IF_15	IF_16
0x400541d	          0x4863ff	                         movsxd rdi, edi	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x4005420	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x4005424	        0x488d0447	                  lea rax, [rdi + rax*2]	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x4005428	        0x48c1e003	                              shl rax, 3	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x400542c	    0x480305000000	             add rax, qword [0x04005433]	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x4005433	        0x448b409c	             mov r8d, dword [rax - 0x64]	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x4005437	        0x4183e801	                              sub r8d, 1	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x400543b	            0xeb1e	                           jmp 0x400545b	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x400543d	          0x4863ff	                         movsxd rdi, edi	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x4005440	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x4005444	        0x488d0447	                  lea rax, [rdi + rax*2]	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x4005448	        0x48c1e003	                              shl rax, 3	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x400544c	    0x480305000000	             add rax, qword [0x04005453]	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x4005453	        0x448b40a0	             mov r8d, dword [rax - 0x60]	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x4005457	        0x4183e801	                              sub r8d, 1	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x400545b	          0x4585c0	                           test r8d, r8d	      9431	syntax.c	FUNCTION_144	IF_15	IF_17
0x400545e	            0x7841	                            js 0x40054a1	      9431	syntax.c	FUNCTION_144	IF_15	IF_17
0x4005460	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x4005465	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_170	CALL_2
0x400546a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_170	CALL_2
0x400546f	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x4005474	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x4005479	      0xe800000000	                          call 0x400547e	        33	stdio2.h	FUNCTION_170	CALL_2
0x400547e	      0xb800000000	                              mov eax, 0	      9434	syntax.c	FUNCTION_144	IF_15
0x4005483	            0xeb5b	                           jmp 0x40054e0	      9434	syntax.c	FUNCTION_144	IF_15
0x4005485	      0xb800000000	                              mov eax, 0	      9370	syntax.c	FUNCTION_144	IF_1
0x400548a	            0xeb54	                           jmp 0x40054e0	      9370	syntax.c	FUNCTION_144	IF_1
0x400548c	      0xb800000000	                              mov eax, 0	      9370	syntax.c	FUNCTION_144	IF_1
0x4005491	            0xeb4d	                           jmp 0x40054e0	      9370	syntax.c	FUNCTION_144	IF_1
0x4005493	      0xb800000000	                              mov eax, 0	      9408	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x4005498	            0xeb46	                           jmp 0x40054e0	      9408	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x400549a	      0xb800000000	                              mov eax, 0	      9437	syntax.c	FUNCTION_144
0x400549f	            0xeb3f	                           jmp 0x40054e0	      9437	syntax.c	FUNCTION_144
0x40054a1	      0xb800000000	                              mov eax, 0	      9432	syntax.c	FUNCTION_144	IF_15	IF_17
0x40054a6	            0xeb38	                           jmp 0x40054e0	      9432	syntax.c	FUNCTION_144	IF_15	IF_17
0x40054a8	          0x83fa67	                           cmp edx, 0x67	      9381	syntax.c	FUNCTION_144	IF_6
0x40054ab	     0xf84effdffff	                            je 0x40052a0	      9381	syntax.c	FUNCTION_144	IF_6
0x40054b1	      0xb800000000	                              mov eax, 0	      9437	syntax.c	FUNCTION_144
0x40054b6	            0xeb28	                           jmp 0x40054e0	      9437	syntax.c	FUNCTION_144
0x40054b8	      0xb801000000	                              mov eax, 1	      9373	syntax.c	FUNCTION_144	IF_2
0x40054bd	            0xeb05	                           jmp 0x40054c4	      9373	syntax.c	FUNCTION_144	IF_2
0x40054bf	      0xb801000000	                              mov eax, 1	      9373	syntax.c	FUNCTION_144	IF_2
0x40054c4	          0x83fa67	                           cmp edx, 0x67	      9381	syntax.c	FUNCTION_144	IF_6
0x40054c7	     0xf8543ffffff	                           jne 0x4005410	      9381	syntax.c	FUNCTION_144	IF_6
0x40054cd	      0xe9edfdffff	                           jmp 0x40052bf	      9381	syntax.c	FUNCTION_144	IF_6
0x40054d2	          0x83fa67	                           cmp edx, 0x67	      9381	syntax.c	FUNCTION_144	IF_6
0x40054d5	     0xf84ebfdffff	                            je 0x40052c6	      9381	syntax.c	FUNCTION_144	IF_6
0x40054db	      0xb800000000	                              mov eax, 0	      9437	syntax.c	FUNCTION_144
0x40054e0	        0x4883c408	                              add rsp, 8	      9438	syntax.c	FUNCTION_144
0x40054e4	              0xc3	                                     ret	      9438	syntax.c	FUNCTION_144
syn_cterm_attr2entry	IF,1:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	10
0x4004ccd	    0x81ef00010000	                          sub edi, 0x100	      9204	syntax.c	FUNCTION_140
0x4004cd3	    0x3b3d00000000	            cmp edi, dword [0x04004cd9] 	      9205	syntax.c	FUNCTION_140	IF_1
0x4004cd9	            0x7d13	                           jge 0x4004cee	      9205	syntax.c	FUNCTION_140	IF_1
0x4004cdb	          0x4863ff	                         movsxd rdi, edi	      9207	syntax.c	FUNCTION_140	CALL_1
0x4004cde	        0x488d14bf	                  lea rdx, [rdi + rdi*4]	      9207	syntax.c	FUNCTION_140	CALL_1
0x4004ce2	    0x488b05000000	            mov rax, qword [0x04004ce9] 	      9207	syntax.c	FUNCTION_140	CALL_1
0x4004ce9	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9207	syntax.c	FUNCTION_140	CALL_1
0x4004ced	              0xc3	                                     ret	      9207	syntax.c	FUNCTION_140	CALL_1
0x4004cee	      0xb800000000	                              mov eax, 0	      9206	syntax.c	FUNCTION_140	IF_1
0x4004cf3	              0xc3	                                     ret	      9208	syntax.c	FUNCTION_140
ex_ownsyntax	IF,4:CALL,16:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	96
0x400387a	              0x55	                                push rbp	      6398	syntax.c	FUNCTION_96
0x400387b	              0x53	                                push rbx	      6398	syntax.c	FUNCTION_96
0x400387c	        0x4883ec08	                              sub rsp, 8	      6398	syntax.c	FUNCTION_96
0x4003880	          0x4889fd	                            mov rbp, rdi	      6398	syntax.c	FUNCTION_96
0x4003883	    0x488b1d000000	            mov rbx, qword [0x0400388a] 	      6402	syntax.c	FUNCTION_96	IF_1
0x400388a	        0x488b4308	                mov rax, qword [rbx + 8]	      6402	syntax.c	FUNCTION_96	IF_1
0x400388e	    0x480568170000	                         add rax, 0x1768	      6402	syntax.c	FUNCTION_96	IF_1
0x4003894	        0x48394310	            cmp qword [rbx + 0x10], rax 	      6402	syntax.c	FUNCTION_96	IF_1
0x4003898	     0xf85d6000000	                           jne 0x4003974	      6402	syntax.c	FUNCTION_96	IF_1
0x400389e	      0xbfb8040000	                          mov edi, 0x4b8	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x40038a3	      0xe800000000	                          call 0x40038a8	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x40038a8	        0x48894310	             mov qword [rbx + 0x10], rax	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x40038ac	    0x488b05000000	            mov rax, qword [0x040038b3] 	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0x40038b3	        0x488b4010	            mov rax, qword [rax + 0x10] 	        90	string3.h	FUNCTION_193	CALL_6
0x40038b7	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_193	CALL_6
0x40038be	    0x48c780b00400	              mov qword [rax + 0x4b0], 0	        90	string3.h	FUNCTION_193	CALL_6
0x40038c9	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_193	CALL_6
0x40038cd	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_193	CALL_6
0x40038d1	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_193	CALL_6
0x40038d4	    0x8d88b8040000	                  lea ecx, [rax + 0x4b8]	        90	string3.h	FUNCTION_193	CALL_6
0x40038da	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_193	CALL_6
0x40038dd	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_193	CALL_6
0x40038df	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_193	CALL_6
0x40038e4	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_193	CALL_6
0x40038e7	    0x488b05000000	            mov rax, qword [0x040038ee] 	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x40038ee	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x40038f2	      0xe800000000	                          call 0x40038f7	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x40038f7	    0x488b05000000	            mov rax, qword [0x040038fe] 	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x40038fe	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x4003902	    0x4881c7280100	                          add rdi, 0x128	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x4003909	      0xe800000000	                          call 0x400390e	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x400390e	    0x488b05000000	            mov rax, qword [0x04003915] 	      6410	syntax.c	FUNCTION_96	IF_1
0x4003915	    0xc78068020000	              mov dword [rax + 0x268], 0	      6410	syntax.c	FUNCTION_96	IF_1
0x400391f	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x4003923	    0x4881c7680400	                          add rdi, 0x468	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400392a	      0xe800000000	                          call 0x400392f	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400392f	    0x488b05000000	            mov rax, qword [0x04003936] 	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x4003936	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x400393a	    0x4881c7780400	                          add rdi, 0x478	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x4003941	      0xe800000000	                          call 0x4003946	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x4003946	    0x488b05000000	            mov rax, qword [0x0400394d] 	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x400394d	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x4003951	    0x4881c7800400	                          add rdi, 0x480	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x4003958	      0xe800000000	                          call 0x400395d	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x400395d	    0x488b05000000	            mov rax, qword [0x04003964] 	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x4003964	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x4003968	    0x4881c7b00400	                          add rdi, 0x4b0	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x400396f	      0xe800000000	                          call 0x4003974	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x4003974	      0xbf00000000	                              mov edi, 0	      6419	syntax.c	FUNCTION_96	CALL_9
0x4003979	      0xe800000000	                          call 0x400397e	      6419	syntax.c	FUNCTION_96	CALL_9
0x400397e	          0x4889c3	                            mov rbx, rax	      6419	syntax.c	FUNCTION_96	CALL_9
0x4003981	          0x4885c0	                           test rax, rax	      6420	syntax.c	FUNCTION_96	IF_2
0x4003984	            0x7475	                            je 0x40039fb	      6420	syntax.c	FUNCTION_96	IF_2
0x4003986	          0x4889c7	                            mov rdi, rax	      6421	syntax.c	FUNCTION_96	CALL_10
0x4003989	      0xe800000000	                          call 0x400398e	      6421	syntax.c	FUNCTION_96	CALL_10
0x400398e	          0x4889c3	                            mov rbx, rax	      6421	syntax.c	FUNCTION_96	CALL_10
0x4003991	    0x4c8b05000000	              mov r8, qword [0x04003998]	      6425	syntax.c	FUNCTION_96	CALL_11
0x4003998	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      6425	syntax.c	FUNCTION_96	CALL_11
0x400399f	      0xb901000000	                              mov ecx, 1	      6425	syntax.c	FUNCTION_96	CALL_11
0x40039a4	        0x488b7500	                    mov rsi, qword [rbp]	      6425	syntax.c	FUNCTION_96	CALL_11
0x40039a8	      0xbf4c000000	                           mov edi, 0x4c	      6425	syntax.c	FUNCTION_96	CALL_11
0x40039ad	      0xe800000000	                          call 0x40039b2	      6425	syntax.c	FUNCTION_96	CALL_11
0x40039b2	      0xbf00000000	                              mov edi, 0	      6428	syntax.c	FUNCTION_96	CALL_12
0x40039b7	      0xe800000000	                          call 0x40039bc	      6428	syntax.c	FUNCTION_96	CALL_12
0x40039bc	          0x4885c0	                           test rax, rax	      6429	syntax.c	FUNCTION_96	IF_3
0x40039bf	            0x740d	                            je 0x40039ce	      6429	syntax.c	FUNCTION_96	IF_3
0x40039c1	          0x4889c6	                            mov rsi, rax	      6430	syntax.c	FUNCTION_96	CALL_13
0x40039c4	      0xbf00000000	                              mov edi, 0	      6430	syntax.c	FUNCTION_96	CALL_13
0x40039c9	      0xe800000000	                          call 0x40039ce	      6430	syntax.c	FUNCTION_96	CALL_13
0x40039ce	          0x4885db	                           test rbx, rbx	      6433	syntax.c	FUNCTION_96	IF_4
0x40039d1	            0x7511	                           jne 0x40039e4	      6433	syntax.c	FUNCTION_96	IF_4
0x40039d3	      0xbe01000000	                              mov esi, 1	      6434	syntax.c	FUNCTION_96	CALL_14
0x40039d8	      0xbf00000000	                              mov edi, 0	      6434	syntax.c	FUNCTION_96	CALL_14
0x40039dd	      0xe800000000	                          call 0x40039e2	      6434	syntax.c	FUNCTION_96	CALL_14
0x40039e2	            0xeb49	                           jmp 0x4003a2d	      6434	syntax.c	FUNCTION_96	CALL_14
0x40039e4	          0x4889de	                            mov rsi, rbx	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x40039e7	      0xbf00000000	                              mov edi, 0	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x40039ec	      0xe800000000	                          call 0x40039f1	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x40039f1	          0x4889df	                            mov rdi, rbx	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0x40039f4	      0xe800000000	                          call 0x40039f9	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0x40039f9	            0xeb32	                           jmp 0x4003a2d	      6440	syntax.c	FUNCTION_96
0x40039fb	    0x4c8b05000000	              mov r8, qword [0x04003a02]	      6425	syntax.c	FUNCTION_96	CALL_11
0x4003a02	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      6425	syntax.c	FUNCTION_96	CALL_11
0x4003a09	      0xb901000000	                              mov ecx, 1	      6425	syntax.c	FUNCTION_96	CALL_11
0x4003a0e	        0x488b7500	                    mov rsi, qword [rbp]	      6425	syntax.c	FUNCTION_96	CALL_11
0x4003a12	      0xbf4c000000	                           mov edi, 0x4c	      6425	syntax.c	FUNCTION_96	CALL_11
0x4003a17	      0xe800000000	                          call 0x4003a1c	      6425	syntax.c	FUNCTION_96	CALL_11
0x4003a1c	      0xbf00000000	                              mov edi, 0	      6428	syntax.c	FUNCTION_96	CALL_12
0x4003a21	      0xe800000000	                          call 0x4003a26	      6428	syntax.c	FUNCTION_96	CALL_12
0x4003a26	          0x4885c0	                           test rax, rax	      6429	syntax.c	FUNCTION_96	IF_3
0x4003a29	            0x7596	                           jne 0x40039c1	      6429	syntax.c	FUNCTION_96	IF_3
0x4003a2b	            0xeba6	                           jmp 0x40039d3	      6429	syntax.c	FUNCTION_96	IF_3
0x4003a2d	        0x4883c408	                              add rsp, 8	      6440	syntax.c	FUNCTION_96
0x4003a31	              0x5b	                                 pop rbx	      6440	syntax.c	FUNCTION_96
0x4003a32	              0x5d	                                 pop rbp	      6440	syntax.c	FUNCTION_96
0x4003a33	              0xc3	                                     ret	      6440	syntax.c	FUNCTION_96
syn_get_foldlevel	IF,4:CALL,2:FOR,1:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	37
0x4009dc8	              0x53	                                push rbx	      6641	syntax.c	FUNCTION_106
0x4009dc9	          0x4889fb	                            mov rbx, rdi	      6641	syntax.c	FUNCTION_106
0x4009dcc	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      6646	syntax.c	FUNCTION_106	IF_1
0x4009dd0	      0xb800000000	                              mov eax, 0	      6642	syntax.c	FUNCTION_106
0x4009dd5	    0x83ba0c030000	              cmp dword [rdx + 0x30c], 0	      6646	syntax.c	FUNCTION_106	IF_1
0x4009ddc	            0x745e	                            je 0x4009e3c	      6646	syntax.c	FUNCTION_106	IF_1
0x4009dde	    0x83ba50020000	              cmp dword [rdx + 0x250], 0	      6647	syntax.c	FUNCTION_106	IF_1
0x4009de5	            0x7555	                           jne 0x4009e3c	      6647	syntax.c	FUNCTION_106	IF_1
0x4009de7	      0xe800000000	                          call 0x4009dec	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0x4009dec	    0x8b0500000000	            mov eax, dword [0x04009df2] 	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x4009df2	            0x85c0	                           test eax, eax	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x4009df4	            0x7e41	                           jle 0x4009e37	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x4009df6	    0x488b15000000	            mov rdx, qword [0x04009dfd] 	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0x4009dfd	        0x488d4a68	                   lea rcx, [rdx + 0x68]	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0x4009e01	          0x8d40ff	                      lea eax, [rax - 1]	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0x4009e04	        0x488d04c0	                  lea rax, [rax + rax*8]	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0x4009e08	        0x48c1e004	                              shl rax, 4	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0x4009e0c	    0x488db402f800	            lea rsi, [rdx + rax + 0xf8] 	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0x4009e14	      0xb800000000	                              mov eax, 0	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0x4009e19	          0x488b11	                    mov rdx, qword [rcx]	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0x4009e1c	    0x81e200200000	                         and edx, 0x2000	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0x4009e22	        0x4883fa01	                              cmp rdx, 1	      6657	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x4009e26	          0x83d8ff	             sbb eax, 0xffffffffffffffff	      6657	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x4009e29	    0x4881c1900000	                           add rcx, 0x90	      6657	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x4009e30	          0x4839f1	                            cmp rcx, rsi	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x4009e33	            0x75e4	                           jne 0x4009e19	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x4009e35	            0xeb05	                           jmp 0x4009e3c	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x4009e37	      0xb800000000	                              mov eax, 0	      6642	syntax.c	FUNCTION_106
0x4009e3c	    0x488b93100200	           mov rdx, qword [rbx + 0x210] 	      6659	syntax.c	FUNCTION_106	IF_3
0x4009e43	          0x4863c8	                         movsxd rcx, eax	      6659	syntax.c	FUNCTION_106	IF_3
0x4009e46	          0x4839d1	                            cmp rcx, rdx	      6659	syntax.c	FUNCTION_106	IF_3
0x4009e49	            0x7e0a	                           jle 0x4009e55	      6659	syntax.c	FUNCTION_106	IF_3
0x4009e4b	            0x85d2	                           test edx, edx	      6659	syntax.c	FUNCTION_106	IF_3
0x4009e4d	      0xb800000000	                              mov eax, 0	      6659	syntax.c	FUNCTION_106	IF_3
0x4009e52	           0xf49c2	                         cmovns eax, edx	      6659	syntax.c	FUNCTION_106	IF_3
0x4009e55	              0x5b	                                 pop rbx	      6666	syntax.c	FUNCTION_106
0x4009e56	              0xc3	                                     ret	      6666	syntax.c	FUNCTION_106
limit_pos_zero	IF,1:CALL,1:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	9
0x40000b5	        0x48833f00	                      cmp qword [rdi], 0	      3188	syntax.c	FUNCTION_39	IF_1
0x40000b9	            0x750f	                           jne 0x40000ca	      3188	syntax.c	FUNCTION_39	IF_1
0x40000bb	          0x488b06	                    mov rax, qword [rsi]	      3189	syntax.c	FUNCTION_39	IF_1
0x40000be	        0x488b5608	                mov rdx, qword [rsi + 8]	      3189	syntax.c	FUNCTION_39	IF_1
0x40000c2	          0x488907	                    mov qword [rdi], rax	      3189	syntax.c	FUNCTION_39	IF_1
0x40000c5	        0x48895708	                mov qword [rdi + 8], rdx	      3189	syntax.c	FUNCTION_39	IF_1
0x40000c9	              0xc3	                                     ret	      3189	syntax.c	FUNCTION_39	IF_1
0x40000ca	      0xe8baffffff	                      call sym.limit_pos	      3191	syntax.c	FUNCTION_39	CALL_1
0x40000cf	            0xf3c3	                                     ret	      3191	syntax.c	FUNCTION_39	CALL_1
syn_cmd_case	IF,5:CALL,10:FOR,0:ELSE,4:SWITCH,0:WHILE,0:DO,0:functions,0	71
0x4001b3f	              0x55	                                push rbp	      3492	syntax.c	FUNCTION_46
0x4001b40	              0x53	                                push rbx	      3492	syntax.c	FUNCTION_46
0x4001b41	        0x4883ec08	                              sub rsp, 8	      3492	syntax.c	FUNCTION_46
0x4001b45	          0x4889fb	                            mov rbx, rdi	      3492	syntax.c	FUNCTION_46
0x4001b48	          0x488b2f	                    mov rbp, qword [rdi]	      3493	syntax.c	FUNCTION_46
0x4001b4b	          0x4889ef	                            mov rdi, rbp	      3496	syntax.c	FUNCTION_46	CALL_1
0x4001b4e	      0xe800000000	                          call 0x4001b53	      3496	syntax.c	FUNCTION_46	CALL_1
0x4001b53	        0x48894308	                mov qword [rbx + 8], rax	      3496	syntax.c	FUNCTION_46	CALL_1
0x4001b57	        0x837b3000	               cmp dword [rbx + 0x30], 0	      3497	syntax.c	FUNCTION_46	IF_1
0x4001b5b	     0xf85f5000000	                           jne 0x4001c56	      3497	syntax.c	FUNCTION_46	IF_1
0x4001b61	          0x4889ef	                            mov rdi, rbp	      3500	syntax.c	FUNCTION_46	CALL_2
0x4001b64	      0xe800000000	                          call 0x4001b69	      3500	syntax.c	FUNCTION_46	CALL_2
0x4001b69	          0x4889c3	                            mov rbx, rax	      3500	syntax.c	FUNCTION_46	CALL_2
0x4001b6c	        0x807d0000	                       cmp byte [rbp], 0	      3501	syntax.c	FUNCTION_46	IF_2
0x4001b70	            0x7556	                           jne 0x4001bc8	      3501	syntax.c	FUNCTION_46	IF_2
0x4001b72	    0x488b05000000	            mov rax, qword [0x04001b79] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4001b79	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4001b7d	    0x83b858020000	              cmp dword [rax + 0x258], 0	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4001b84	            0x7421	                            je 0x4001ba7	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4001b86	      0xba05000000	                              mov edx, 5	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4001b8b	      0xbe00000000	                              mov esi, 0	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4001b90	      0xbf00000000	                              mov edi, 0	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4001b95	      0xe800000000	                          call 0x4001b9a	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4001b9a	          0x4889c7	                            mov rdi, rax	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4001b9d	      0xe800000000	                          call 0x4001ba2	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4001ba2	      0xe9af000000	                           jmp 0x4001c56	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4001ba7	      0xba05000000	                              mov edx, 5	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4001bac	      0xbe00000000	                              mov esi, 0	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4001bb1	      0xbf00000000	                              mov edi, 0	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4001bb6	      0xe800000000	                          call 0x4001bbb	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4001bbb	          0x4889c7	                            mov rdi, rax	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4001bbe	      0xe800000000	                          call 0x4001bc3	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4001bc3	      0xe98e000000	                           jmp 0x4001c56	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4001bc8	      0xba05000000	                              mov edx, 5	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4001bcd	      0xbe00000000	                              mov esi, 0	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4001bd2	          0x4889ef	                            mov rdi, rbp	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4001bd5	      0xe800000000	                          call 0x4001bda	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4001bda	            0x85c0	                           test eax, eax	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4001bdc	            0x7523	                           jne 0x4001c01	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4001bde	          0x4889d8	                            mov rax, rbx	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4001be1	          0x4829e8	                            sub rax, rbp	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4001be4	        0x4883f805	                              cmp rax, 5	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4001be8	            0x7517	                           jne 0x4001c01	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4001bea	    0x488b05000000	            mov rax, qword [0x04001bf1] 	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4001bf1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4001bf5	    0xc78058020000	              mov dword [rax + 0x258], 0	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4001bff	            0xeb55	                           jmp 0x4001c56	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4001c01	      0xba06000000	                              mov edx, 6	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4001c06	      0xbe00000000	                              mov esi, 0	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4001c0b	          0x4889ef	                            mov rdi, rbp	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4001c0e	      0xe800000000	                          call 0x4001c13	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4001c13	            0x85c0	                           test eax, eax	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4001c15	            0x7520	                           jne 0x4001c37	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4001c17	          0x4829eb	                            sub rbx, rbp	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4001c1a	        0x4883fb06	                              cmp rbx, 6	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4001c1e	            0x7517	                           jne 0x4001c37	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4001c20	    0x488b05000000	            mov rax, qword [0x04001c27] 	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4001c27	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4001c2b	    0xc78058020000	              mov dword [rax + 0x258], 1	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4001c35	            0xeb1f	                           jmp 0x4001c56	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4001c37	      0xba05000000	                              mov edx, 5	      3513	syntax.c	FUNCTION_46	CALL_10
0x4001c3c	      0xbe00000000	                              mov esi, 0	      3513	syntax.c	FUNCTION_46	CALL_10
0x4001c41	      0xbf00000000	                              mov edi, 0	      3513	syntax.c	FUNCTION_46	CALL_10
0x4001c46	      0xe800000000	                          call 0x4001c4b	      3513	syntax.c	FUNCTION_46	CALL_10
0x4001c4b	          0x4889ee	                            mov rsi, rbp	      3513	syntax.c	FUNCTION_46	CALL_10
0x4001c4e	          0x4889c7	                            mov rdi, rax	      3513	syntax.c	FUNCTION_46	CALL_10
0x4001c51	      0xe800000000	                          call 0x4001c56	      3513	syntax.c	FUNCTION_46	CALL_10
0x4001c56	        0x4883c408	                              add rsp, 8	      3514	syntax.c	FUNCTION_46
0x4001c5a	              0x5b	                                 pop rbx	      3514	syntax.c	FUNCTION_46
0x4001c5b	              0x5d	                                 pop rbp	      3514	syntax.c	FUNCTION_46
0x4001c5c	              0xc3	                                     ret	      3514	syntax.c	FUNCTION_46
get_syntax_attr	IF,4:CALL,4:FOR,0:ELSE,0:SWITCH,0:WHILE,1:DO,0:functions,0	68
0x4009ec4	          0x4885f6	                           test rsi, rsi	      1852	syntax.c	FUNCTION_27	IF_1
0x4009ec7	            0x742b	                            je 0x4009ef4	      1852	syntax.c	FUNCTION_27	IF_1
0x4009ec9	    0x488b0d000000	            mov rcx, qword [0x04009ed0] 	      1855	syntax.c	FUNCTION_27	IF_1
0x4009ed0	    0x8b815c020000	           mov eax, dword [rcx + 0x25c] 	      1855	syntax.c	FUNCTION_27	IF_1
0x4009ed6	            0x85c0	                           test eax, eax	      1857	syntax.c	FUNCTION_27	IF_1
0x4009ed8	            0x750f	                           jne 0x4009ee9	      1857	syntax.c	FUNCTION_27	IF_1
0x4009eda	    0x83b990020000	              cmp dword [rcx + 0x290], 0	      1857	syntax.c	FUNCTION_27	IF_1
0x4009ee1	           0xf94c0	                                 sete al	      1857	syntax.c	FUNCTION_27	IF_1
0x4009ee4	           0xfb6c0	                           movzx eax, al	      1857	syntax.c	FUNCTION_27	IF_1
0x4009ee7	            0xeb09	                           jmp 0x4009ef2	      1857	syntax.c	FUNCTION_27	IF_1
0x4009ee9	          0x83f801	                              cmp eax, 1	      1857	syntax.c	FUNCTION_27	IF_1
0x4009eec	           0xf94c0	                                 sete al	      1857	syntax.c	FUNCTION_27	IF_1
0x4009eef	           0xfb6c0	                           movzx eax, al	      1857	syntax.c	FUNCTION_27	IF_1
0x4009ef2	            0x8906	                    mov dword [rsi], eax	      1855	syntax.c	FUNCTION_27	IF_1
0x4009ef4	    0x488b05000000	            mov rax, qword [0x04009efb] 	      1860	syntax.c	FUNCTION_27	IF_2
0x4009efb	    0x4883b8100300	              cmp qword [rax + 0x310], 0	      1860	syntax.c	FUNCTION_27	IF_2
0x4009f03	     0xf84b5000000	                            je 0x4009fbe	      1860	syntax.c	FUNCTION_27	IF_2
0x4009f09	            0x4155	                                push r13	      1849	syntax.c	FUNCTION_27
0x4009f0b	            0x4154	                                push r12	      1849	syntax.c	FUNCTION_27
0x4009f0d	              0x55	                                push rbp	      1849	syntax.c	FUNCTION_27
0x4009f0e	              0x53	                                push rbx	      1849	syntax.c	FUNCTION_27
0x4009f0f	        0x4883ec08	                              sub rsp, 8	      1849	syntax.c	FUNCTION_27
0x4009f13	          0x4189d5	                           mov r13d, edx	      1849	syntax.c	FUNCTION_27
0x4009f16	          0x4989f4	                            mov r12, rsi	      1849	syntax.c	FUNCTION_27
0x4009f19	            0x89fb	                            mov ebx, edi	      1849	syntax.c	FUNCTION_27
0x4009f1b	    0x488b05000000	            mov rax, qword [0x04009f22] 	      1864	syntax.c	FUNCTION_27	IF_3
0x4009f22	    0x488b80981500	          mov rax, qword [rax + 0x1598] 	      1864	syntax.c	FUNCTION_27	IF_3
0x4009f29	          0x4885c0	                           test rax, rax	      1864	syntax.c	FUNCTION_27	IF_3
0x4009f2c	            0x7e38	                           jle 0x4009f66	      1864	syntax.c	FUNCTION_27	IF_3
0x4009f2e	            0x39c7	                            cmp edi, eax	      1864	syntax.c	FUNCTION_27	IF_3
0x4009f30	            0x7c34	                            jl 0x4009f66	      1864	syntax.c	FUNCTION_27	IF_3
0x4009f32	      0xe87367ffff	            call sym.clear_current_state	      1866	syntax.c	FUNCTION_27	IF_3	CALL_1
0x4009f37	    0xc70500000000	               mov dword [0x04009f41], 0	      1868	syntax.c	FUNCTION_27	IF_3
0x4009f41	    0xc70500000000	               mov dword [0x04009f4b], 0	      1869	syntax.c	FUNCTION_27	IF_3
0x4009f4b	    0xc70500000000	               mov dword [0x04009f55], 0	      1872	syntax.c	FUNCTION_27	IF_3
0x4009f55	    0xc70500000000	               mov dword [0x04009f5f], 0	      1873	syntax.c	FUNCTION_27	IF_3
0x4009f5f	      0xb800000000	                              mov eax, 0	      1875	syntax.c	FUNCTION_27	IF_3
0x4009f64	            0xeb63	                           jmp 0x4009fc9	      1875	syntax.c	FUNCTION_27	IF_3
0x4009f66	    0x833d00000000	               cmp dword [0x04009f6d], 0	      1879	syntax.c	FUNCTION_27	IF_4	CALL_2
0x4009f6d	            0x7514	                           jne 0x4009f83	      1879	syntax.c	FUNCTION_27	IF_4	CALL_2
0x4009f6f	    0xc70500000000	           mov dword [0x04009f79], 0x90 	      1740	syntax.c	FUNCTION_24
0x4009f79	    0xc70500000000	               mov dword [0x04009f83], 3	      1741	syntax.c	FUNCTION_24
0x4009f83	    0x8b0d00000000	            mov ecx, dword [0x04009f89] 	      1885	syntax.c	FUNCTION_27	WHILE_1
0x4009f89	            0x39cb	                            cmp ebx, ecx	      1885	syntax.c	FUNCTION_27	WHILE_1
0x4009f8b	            0x7c37	                            jl 0x4009fc4	      1885	syntax.c	FUNCTION_27	WHILE_1
0x4009f8d	      0xbd00000000	                              mov ebp, 0	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x4009f92	            0x39cb	                            cmp ebx, ecx	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x4009f94	            0x89e9	                            mov ecx, ebp	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x4009f96	        0x410f44cd	                         cmove ecx, r13d	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x4009f9a	          0x4c89e2	                            mov rdx, r12	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x4009f9d	      0xbe01000000	                              mov esi, 1	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x4009fa2	            0x89ef	                            mov edi, ebp	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x4009fa4	      0xe8efe3ffff	               call sym.syn_current_attr	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x4009fa9	    0x8b1500000000	            mov edx, dword [0x04009faf] 	      1889	syntax.c	FUNCTION_27	WHILE_1
0x4009faf	          0x8d4a01	                      lea ecx, [rdx + 1]	      1889	syntax.c	FUNCTION_27	WHILE_1
0x4009fb2	    0x890d00000000	            mov dword [0x04009fb8], ecx 	      1889	syntax.c	FUNCTION_27	WHILE_1
0x4009fb8	            0x39cb	                            cmp ebx, ecx	      1885	syntax.c	FUNCTION_27	WHILE_1
0x4009fba	            0x7dd6	                           jge 0x4009f92	      1885	syntax.c	FUNCTION_27	WHILE_1
0x4009fbc	            0xeb0b	                           jmp 0x4009fc9	      1885	syntax.c	FUNCTION_27	WHILE_1
0x4009fbe	      0xb800000000	                              mov eax, 0	      1861	syntax.c	FUNCTION_27	IF_2
0x4009fc3	              0xc3	                                     ret	      1893	syntax.c	FUNCTION_27
0x4009fc4	      0xb800000000	                              mov eax, 0	      1885	syntax.c	FUNCTION_27	WHILE_1
0x4009fc9	        0x4883c408	                              add rsp, 8	      1893	syntax.c	FUNCTION_27
0x4009fcd	              0x5b	                                 pop rbx	      1893	syntax.c	FUNCTION_27
0x4009fce	              0x5d	                                 pop rbp	      1893	syntax.c	FUNCTION_27
0x4009fcf	            0x415c	                                 pop r12	      1893	syntax.c	FUNCTION_27
0x4009fd1	            0x415d	                                 pop r13	      1893	syntax.c	FUNCTION_27
0x4009fd3	              0xc3	                                     ret	      1893	syntax.c	FUNCTION_27
do_highlight	IF,132:CALL,249:FOR,6:ELSE,43:SWITCH,0:WHILE,4:DO,0:functions,0	1326
0x400ba90	            0x4157	                                push r15	      7364	syntax.c	FUNCTION_116
0x400ba92	            0x4156	                                push r14	      7364	syntax.c	FUNCTION_116
0x400ba94	            0x4155	                                push r13	      7364	syntax.c	FUNCTION_116
0x400ba96	            0x4154	                                push r12	      7364	syntax.c	FUNCTION_116
0x400ba98	              0x55	                                push rbp	      7364	syntax.c	FUNCTION_116
0x400ba99	              0x53	                                push rbx	      7364	syntax.c	FUNCTION_116
0x400ba9a	    0x4881ec680100	                          sub rsp, 0x168	      7364	syntax.c	FUNCTION_116
0x400baa1	          0x4889fb	                            mov rbx, rdi	      7364	syntax.c	FUNCTION_116
0x400baa4	          0x893424	                    mov dword [rsp], esi	      7364	syntax.c	FUNCTION_116
0x400baa7	        0x89542404	                mov dword [rsp + 4], edx	      7364	syntax.c	FUNCTION_116
0x400baab	    0x64488b042528	                mov rax, qword fs:[0x28]	      7364	syntax.c	FUNCTION_116
0x400bab4	    0x488984245801	            mov qword [rsp + 0x158], rax	      7364	syntax.c	FUNCTION_116
0x400babc	            0x31c0	                            xor eax, eax	      7364	syntax.c	FUNCTION_116
0x400babe	           0xfb63f	                   movzx edi, byte [rdi]	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0x400bac1	      0xe800000000	                          call 0x400bac6	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0x400bac6	            0x85c0	                           test eax, eax	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0x400bac8	            0x744a	                            je 0x400bb14	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0x400baca	    0x833d00000000	               cmp dword [0x0400bad1], 0	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400bad1	     0xf8e09160000	                           jle 0x400d0e0	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400bad7	    0x8b0500000000	            mov eax, dword [0x0400badd] 	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400badd	            0x85c0	                           test eax, eax	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400badf	     0xf85fb150000	                           jne 0x400d0e0	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400bae5	      0xbb01000000	                              mov ebx, 1	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400baea	            0x89df	                            mov edi, ebx	      7408	syntax.c	FUNCTION_116	IF_1	CALL_2
0x400baec	      0xe885f6ffff	             call sym.highlight_list_one	      7408	syntax.c	FUNCTION_116	IF_1	CALL_2
0x400baf1	        0x4883c301	                              add rbx, 1	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400baf5	    0x486305000000	         movsxd rax, dword [0x0400bafc] 	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400bafc	          0x4839d8	                            cmp rax, rbx	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400baff	     0xf8cdb150000	                            jl 0x400d0e0	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400bb05	    0x8b0500000000	            mov eax, dword [0x0400bb0b] 	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400bb0b	            0x85c0	                           test eax, eax	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400bb0d	            0x74db	                            je 0x400baea	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400bb0f	      0xe9cc150000	                           jmp 0x400d0e0	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400bb14	          0x4889df	                            mov rdi, rbx	      7415	syntax.c	FUNCTION_116	CALL_3
0x400bb17	      0xe800000000	                          call 0x400bb1c	      7415	syntax.c	FUNCTION_116	CALL_3
0x400bb1c	          0x4989c5	                            mov r13, rax	      7415	syntax.c	FUNCTION_116	CALL_3
0x400bb1f	          0x4889c7	                            mov rdi, rax	      7416	syntax.c	FUNCTION_116	CALL_4
0x400bb22	      0xe800000000	                          call 0x400bb27	      7416	syntax.c	FUNCTION_116	CALL_4
0x400bb27	          0x4989c7	                            mov r15, rax	      7416	syntax.c	FUNCTION_116	CALL_4
0x400bb2a	          0x4d89ee	                            mov r14, r13	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb2d	          0x4929de	                            sub r14, rbx	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb30	          0x4c89f2	                            mov rdx, r14	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb33	        0x4983fe08	                              cmp r14, 8	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb37	      0xb908000000	                              mov ecx, 8	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb3c	        0x490f4ece	                         cmovle rcx, r14	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb40	      0xbf00000000	                              mov edi, 0	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb45	          0x4839c9	                            cmp rcx, rcx	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb48	          0x4889de	                            mov rsi, rbx	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb4b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb4d	           0xf97c1	                                 seta cl	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb50	           0xf92c0	                                 setb al	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb53	    0xc74424200000	               mov dword [rsp + 0x20], 0	      7379	syntax.c	FUNCTION_116
0x400bb5b	            0x38c1	                              cmp cl, al	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb5d	            0x752a	                           jne 0x400bb89	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400bb5f	          0x4c89ff	                            mov rdi, r15	      7425	syntax.c	FUNCTION_116	IF_2	CALL_6
0x400bb62	      0xe800000000	                          call 0x400bb67	      7425	syntax.c	FUNCTION_116	IF_2	CALL_6
0x400bb67	          0x4989c5	                            mov r13, rax	      7425	syntax.c	FUNCTION_116	IF_2	CALL_6
0x400bb6a	          0x4889c7	                            mov rdi, rax	      7426	syntax.c	FUNCTION_116	IF_2	CALL_7
0x400bb6d	      0xe800000000	                          call 0x400bb72	      7426	syntax.c	FUNCTION_116	IF_2	CALL_7
0x400bb72	          0x4d89ee	                            mov r14, r13	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bb75	          0x4d29fe	                            sub r14, r15	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bb78	          0x4c89f2	                            mov rdx, r14	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bb7b	          0x4c89fb	                            mov rbx, r15	      7424	syntax.c	FUNCTION_116	IF_2
0x400bb7e	          0x4989c7	                            mov r15, rax	      7426	syntax.c	FUNCTION_116	IF_2	CALL_7
0x400bb81	    0xc74424200100	               mov dword [rsp + 0x20], 1	      7423	syntax.c	FUNCTION_116	IF_2
0x400bb89	        0x4883fa06	                              cmp rdx, 6	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bb8d	      0xb906000000	                              mov ecx, 6	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bb92	        0x480f4eca	                         cmovle rcx, rdx	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bb96	      0xbf00000000	                              mov edi, 0	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bb9b	          0x4839c9	                            cmp rcx, rcx	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bb9e	          0x4889de	                            mov rsi, rbx	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bba1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bba3	        0x400f97c5	                                seta bpl	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bba7	           0xf92c0	                                 setb al	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bbaa	            0x29c5	                            sub ebp, eax	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bbac	        0x400fbeed	                          movsx ebp, bpl	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400bbb0	        0x4883fa05	                              cmp rdx, 5	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400bbb4	      0xb905000000	                              mov ecx, 5	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400bbb9	        0x480f4eca	                         cmovle rcx, rdx	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400bbbd	      0xbf00000000	                              mov edi, 0	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400bbc2	          0x4839c9	                            cmp rcx, rcx	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400bbc5	          0x4889de	                            mov rsi, rbx	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400bbc8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400bbca	        0x410f97c4	                               seta r12b	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400bbce	           0xf92c0	                                 setb al	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400bbd1	          0x4129c4	                           sub r12d, eax	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400bbd4	        0x450fbee4	                        movsx r12d, r12b	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400bbd8	            0x85ed	                           test ebp, ebp	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400bbda	            0x7451	                            je 0x400bc2d	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400bbdc	          0x4585e4	                         test r12d, r12d	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400bbdf	            0x744c	                            je 0x400bc2d	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400bbe1	        0x410fb63f	                   movzx edi, byte [r15]	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400bbe5	      0xe800000000	                          call 0x400bbea	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400bbea	            0x85c0	                           test eax, eax	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400bbec	            0x743f	                            je 0x400bc2d	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400bbee	          0x4489f6	                           mov esi, r14d	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400bbf1	          0x4889df	                            mov rdi, rbx	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400bbf4	      0xe800000000	                          call 0x400bbf9	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400bbf9	            0x85c0	                           test eax, eax	      7443	syntax.c	FUNCTION_116	IF_5	IF_6
0x400bbfb	            0x7524	                           jne 0x400bc21	      7443	syntax.c	FUNCTION_116	IF_5	IF_6
0x400bbfd	      0xba05000000	                              mov edx, 5	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400bc02	      0xbe00000000	                              mov esi, 0	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400bc07	      0xbf00000000	                              mov edi, 0	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400bc0c	      0xe800000000	                          call 0x400bc11	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400bc11	          0x4889de	                            mov rsi, rbx	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400bc14	          0x4889c7	                            mov rdi, rax	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400bc17	      0xe800000000	                          call 0x400bc1c	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400bc1c	      0xe9bf140000	                           jmp 0x400d0e0	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400bc21	            0x89c7	                            mov edi, eax	      7446	syntax.c	FUNCTION_116	IF_5	CALL_14
0x400bc23	      0xe84ef5ffff	             call sym.highlight_list_one	      7446	syntax.c	FUNCTION_116	IF_5	CALL_14
0x400bc28	      0xe9b3140000	                           jmp 0x400d0e0	      7446	syntax.c	FUNCTION_116	IF_5	CALL_14
0x400bc2d	          0x4585e4	                         test r12d, r12d	      7453	syntax.c	FUNCTION_116	IF_7
0x400bc30	     0xf85c0010000	                           jne 0x400bdf6	      7453	syntax.c	FUNCTION_116	IF_7
0x400bc36	          0x4c89ff	                            mov rdi, r15	      7462	syntax.c	FUNCTION_116	IF_7	CALL_15
0x400bc39	      0xe800000000	                          call 0x400bc3e	      7462	syntax.c	FUNCTION_116	IF_7	CALL_15
0x400bc3e	          0x4889c5	                            mov rbp, rax	      7462	syntax.c	FUNCTION_116	IF_7	CALL_15
0x400bc41	          0x4889c7	                            mov rdi, rax	      7463	syntax.c	FUNCTION_116	IF_7	CALL_16
0x400bc44	      0xe800000000	                          call 0x400bc49	      7463	syntax.c	FUNCTION_116	IF_7	CALL_16
0x400bc49	          0x4889c3	                            mov rbx, rax	      7463	syntax.c	FUNCTION_116	IF_7	CALL_16
0x400bc4c	          0x4889c7	                            mov rdi, rax	      7464	syntax.c	FUNCTION_116	IF_7	CALL_17
0x400bc4f	      0xe800000000	                          call 0x400bc54	      7464	syntax.c	FUNCTION_116	IF_7	CALL_17
0x400bc54	          0x4989c4	                            mov r12, rax	      7464	syntax.c	FUNCTION_116	IF_7	CALL_17
0x400bc57	        0x410fb63f	                   movzx edi, byte [r15]	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400bc5b	      0xe800000000	                          call 0x400bc60	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400bc60	            0x85c0	                           test eax, eax	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400bc62	            0x750c	                           jne 0x400bc70	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400bc64	           0xfb63b	                   movzx edi, byte [rbx]	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400bc67	      0xe800000000	                          call 0x400bc6c	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400bc6c	            0x85c0	                           test eax, eax	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400bc6e	            0x7424	                            je 0x400bc94	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400bc70	      0xba05000000	                              mov edx, 5	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400bc75	      0xbe00000000	                              mov esi, 0	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400bc7a	      0xbf00000000	                              mov edi, 0	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400bc7f	      0xe800000000	                          call 0x400bc84	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400bc84	          0x4c89fe	                            mov rsi, r15	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400bc87	          0x4889c7	                            mov rdi, rax	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400bc8a	      0xe800000000	                          call 0x400bc8f	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400bc8f	      0xe94c140000	                           jmp 0x400d0e0	      7470	syntax.c	FUNCTION_116	IF_7	IF_8
0x400bc94	          0x4c89e7	                            mov rdi, r12	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400bc97	      0xe800000000	                          call 0x400bc9c	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400bc9c	           0xfb638	                   movzx edi, byte [rax]	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400bc9f	      0xe800000000	                          call 0x400bca4	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400bca4	            0x85c0	                           test eax, eax	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400bca6	            0x7524	                           jne 0x400bccc	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400bca8	      0xba05000000	                              mov edx, 5	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400bcad	      0xbe00000000	                              mov esi, 0	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400bcb2	      0xbf00000000	                              mov edi, 0	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400bcb7	      0xe800000000	                          call 0x400bcbc	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400bcbc	          0x4c89fe	                            mov rsi, r15	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400bcbf	          0x4889c7	                            mov rdi, rax	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400bcc2	      0xe800000000	                          call 0x400bcc7	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400bcc7	      0xe914140000	                           jmp 0x400d0e0	      7476	syntax.c	FUNCTION_116	IF_7	IF_9
0x400bccc	          0x4889ee	                            mov rsi, rbp	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400bccf	          0x4c29fe	                            sub rsi, r15	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400bcd2	          0x4c89ff	                            mov rdi, r15	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400bcd5	      0xe800000000	                          call 0x400bcda	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400bcda	            0x89c5	                            mov ebp, eax	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400bcdc	      0xbf00000000	                              mov edi, 0	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400bce1	      0xb904000000	                              mov ecx, 4	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400bce6	          0x4889de	                            mov rsi, rbx	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400bce9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400bceb	           0xf97c2	                                 seta dl	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400bcee	           0xf92c0	                                 setb al	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400bcf1	    0x41bd00000000	                             mov r13d, 0	      7481	syntax.c	FUNCTION_116	IF_7	IF_10
0x400bcf7	            0x38c2	                              cmp dl, al	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400bcf9	            0x7411	                            je 0x400bd0c	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400bcfb	          0x4c89e6	                            mov rsi, r12	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400bcfe	          0x4829de	                            sub rsi, rbx	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400bd01	          0x4889df	                            mov rdi, rbx	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400bd04	      0xe800000000	                          call 0x400bd09	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400bd09	          0x4189c5	                           mov r13d, eax	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400bd0c	            0x85ed	                           test ebp, ebp	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd0e	     0xf8ecc130000	                           jle 0x400d0e0	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd14	      0x837c240400	                  cmp dword [rsp + 4], 0	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd19	            0x7425	                            je 0x400bd40	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd1b	          0x4863c5	                         movsxd rax, ebp	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd1e	        0x488d14c0	                  lea rdx, [rax + rax*8]	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd22	        0x488d0450	                  lea rax, [rax + rdx*2]	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd26	        0x48c1e003	                              shl rax, 3	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd2a	    0x480305000000	             add rax, qword [0x0400bd31]	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd31	        0x8378f400	                cmp dword [rax - 0xc], 0	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd35	     0xf844d120000	                            je 0x400cf88	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd3b	      0xe9a0130000	                           jmp 0x400d0e0	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0x400bd40	          0x4585ed	                         test r13d, r13d	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400bd43	     0xf8e01130000	                           jle 0x400d04a	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400bd49	        0x833c2400	                      cmp dword [rsp], 0	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400bd4d	     0xf85f7120000	                           jne 0x400d04a	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400bd53	          0x8d7dff	                      lea edi, [rbp - 1]	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0x400bd56	        0x8b5c2420	            mov ebx, dword [rsp + 0x20] 	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0x400bd5a	            0x89de	                            mov esi, ebx	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0x400bd5c	      0xe8eb46ffff	                call sym.hl_has_settings	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0x400bd61	            0x85c0	                           test eax, eax	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0x400bd63	     0xf84e1120000	                            je 0x400d04a	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0x400bd69	    0x48833d000000	               cmp qword [0x0400bd71], 0	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0x400bd71	     0xf8569130000	                           jne 0x400d0e0	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0x400bd77	            0x85db	                           test ebx, ebx	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0x400bd79	     0xf8561130000	                           jne 0x400d0e0	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0x400bd7f	      0xba05000000	                              mov edx, 5	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_32
0x400bd84	      0xbe00000000	                              mov esi, 0	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_32
0x400bd89	      0xbf00000000	                              mov edi, 0	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_32
0x400bd8e	      0xe800000000	                          call 0x400bd93	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_32
0x400bd93	          0x4889c7	                            mov rdi, rax	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_32
0x400bd96	      0xe800000000	                          call 0x400bd9b	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_32
0x400bd9b	      0xe940130000	                           jmp 0x400d0e0	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_32
0x400bda0	    0x8b3500000000	            mov esi, dword [0x0400bda6] 	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0x400bda6	    0x39b090000000	            cmp dword [rax + 0x90], esi 	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0x400bdac	            0x750a	                           jne 0x400bdb8	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0x400bdae	        0x83781000	               cmp dword [rax + 0x10], 0	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0x400bdb2	     0xf8428130000	                            je 0x400d0e0	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0x400bdb8	            0x84d2	                             test dl, dl	      7503	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400bdba	            0x7407	                            je 0x400bdc3	      7503	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400bdbc	    0x83888c000000	                or dword [rax + 0x8c], 8	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0x400bdc3	    0x4489a8880000	            mov dword [rax + 0x88], r13d	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0x400bdca	    0x8b1500000000	            mov edx, dword [0x0400bdd0] 	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0x400bdd0	    0x899090000000	             mov dword [rax + 0x90], edx	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0x400bdd6	    0xc74010000000	               mov dword [rax + 0x10], 0	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0x400bddd	      0xbf23000000	                           mov edi, 0x23	      7510	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_40
0x400bde2	      0xe800000000	                          call 0x400bde7	      7510	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_40
0x400bde7	    0xc70500000000	               mov dword [0x0400bdf1], 1	      7513	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400bdf1	      0xe9ea120000	                           jmp 0x400d0e0	      7513	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400bdf6	            0x85ed	                           test ebp, ebp	      7520	syntax.c	FUNCTION_116	IF_16
0x400bdf8	     0xf8591000000	                           jne 0x400be8f	      7520	syntax.c	FUNCTION_116	IF_16
0x400bdfe	        0x410fb63f	                   movzx edi, byte [r15]	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0x400be02	      0xe800000000	                          call 0x400be07	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0x400be07	            0x85c0	                           test eax, eax	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0x400be09	            0x746b	                            je 0x400be76	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0x400be0b	      0xbe01000000	                              mov esi, 1	      7573	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_49
0x400be10	      0xbf00000000	                              mov edi, 0	      7573	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_49
0x400be15	      0xe800000000	                          call 0x400be1a	      7573	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_49
0x400be1a	      0xe800000000	                          call 0x400be1f	      7575	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_50
0x400be1f	    0x833d00000000	               cmp dword [0x0400be26], 0	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400be26	            0x7e17	                           jle 0x400be3f	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400be28	      0xbb00000000	                              mov ebx, 0	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400be2d	            0x89df	                            mov edi, ebx	      7581	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_51
0x400be2f	      0xe8c06fffff	                call sym.highlight_clear	      7581	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_51
0x400be34	          0x83c301	                              add ebx, 1	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400be37	    0x391d00000000	            cmp dword [0x0400be3d], ebx 	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400be3d	            0x7fee	                            jg 0x400be2d	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400be3f	      0xbe01000000	                              mov esi, 1	      7582	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_52
0x400be44	      0xbf01000000	                              mov edi, 1	      7582	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_52
0x400be49	      0xe800000000	                          call 0x400be4e	      7582	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_52
0x400be4e	    0x833d00000000	               cmp dword [0x0400be55], 0	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0x400be55	            0x7509	                           jne 0x400be60	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0x400be57	    0x833d00000000	               cmp dword [0x0400be5e], 0	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0x400be5e	            0x7407	                            je 0x400be67	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0x400be60	      0xe800000000	                          call 0x400be65	      7585	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_53
0x400be65	            0xeb05	                           jmp 0x400be6c	      7585	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_53
0x400be67	      0xe800000000	                          call 0x400be6c	      7588	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_54
0x400be6c	      0xe800000000	                          call 0x400be71	      7589	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_55
0x400be71	      0xe96a120000	                           jmp 0x400d0e0	      7590	syntax.c	FUNCTION_116	IF_16	IF_17
0x400be76	          0x4c89ff	                            mov rdi, r15	      7592	syntax.c	FUNCTION_116	IF_16	CALL_56
0x400be79	      0xe800000000	                          call 0x400be7e	      7592	syntax.c	FUNCTION_116	IF_16	CALL_56
0x400be7e	          0x4989c5	                            mov r13, rax	      7592	syntax.c	FUNCTION_116	IF_16	CALL_56
0x400be81	          0x4889c7	                            mov rdi, rax	      7593	syntax.c	FUNCTION_116	IF_16	CALL_57
0x400be84	      0xe800000000	                          call 0x400be89	      7593	syntax.c	FUNCTION_116	IF_16	CALL_57
0x400be89	          0x4c89fb	                            mov rbx, r15	      7593	syntax.c	FUNCTION_116	IF_16	CALL_57
0x400be8c	          0x4989c7	                            mov r15, rax	      7593	syntax.c	FUNCTION_116	IF_16	CALL_57
0x400be8f	          0x4c89ee	                            mov rsi, r13	      7599	syntax.c	FUNCTION_116	CALL_58
0x400be92	          0x4829de	                            sub rsi, rbx	      7599	syntax.c	FUNCTION_116	CALL_58
0x400be95	          0x4889df	                            mov rdi, rbx	      7599	syntax.c	FUNCTION_116	CALL_58
0x400be98	      0xe800000000	                          call 0x400be9d	      7599	syntax.c	FUNCTION_116	CALL_58
0x400be9d	        0x89442434	             mov dword [rsp + 0x34], eax	      7599	syntax.c	FUNCTION_116	CALL_58
0x400bea1	            0x85c0	                           test eax, eax	      7600	syntax.c	FUNCTION_116	IF_21
0x400bea3	     0xf8437120000	                            je 0x400d0e0	      7600	syntax.c	FUNCTION_116	IF_21
0x400bea9	          0x83e801	                              sub eax, 1	      7602	syntax.c	FUNCTION_116
0x400beac	        0x89442424	             mov dword [rsp + 0x24], eax	      7602	syntax.c	FUNCTION_116
0x400beb0	      0x837c242000	               cmp dword [rsp + 0x20], 0	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0x400beb5	            0x7414	                            je 0x400becb	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0x400beb7	      0xbe01000000	                              mov esi, 1	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0x400bebc	            0x89c7	                            mov edi, eax	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0x400bebe	      0xe88945ffff	                call sym.hl_has_settings	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0x400bec3	            0x85c0	                           test eax, eax	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0x400bec5	     0xf8515120000	                           jne 0x400d0e0	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0x400becb	      0x4863442424	         movsxd rax, dword [rsp + 0x24] 	      7609	syntax.c	FUNCTION_116	CALL_60
0x400bed0	        0x488d14c0	                  lea rdx, [rax + rax*8]	      7609	syntax.c	FUNCTION_116	CALL_60
0x400bed4	        0x488d0450	                  lea rax, [rax + rdx*2]	      7609	syntax.c	FUNCTION_116	CALL_60
0x400bed8	        0x48c1e003	                              shl rax, 3	      7609	syntax.c	FUNCTION_116	CALL_60
0x400bedc	      0x4889442428	             mov qword [rsp + 0x28], rax	      7609	syntax.c	FUNCTION_116	CALL_60
0x400bee1	      0x4889442410	             mov qword [rsp + 0x10], rax	      7609	syntax.c	FUNCTION_116	CALL_60
0x400bee6	    0x480305000000	             add rax, qword [0x0400beed]	      7609	syntax.c	FUNCTION_116	CALL_60
0x400beed	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      7609	syntax.c	FUNCTION_116	CALL_60
0x400bef2	      0xb913000000	                           mov ecx, 0x13	      7609	syntax.c	FUNCTION_116	CALL_60
0x400bef7	          0x4889c6	                            mov rsi, rax	      7609	syntax.c	FUNCTION_116	CALL_60
0x400befa	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      7609	syntax.c	FUNCTION_116	CALL_60
0x400befd	        0x488b4008	                mov rax, qword [rax + 8]	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0x400bf01	      0xbf00000000	                              mov edi, 0	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0x400bf06	      0xb907000000	                              mov ecx, 7	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0x400bf0b	          0x4889c6	                            mov rsi, rax	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0x400bf0e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0x400bf10	           0xf97c1	                                 seta cl	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0x400bf13	           0xf92c2	                                 setb dl	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0x400bf16	            0x38d1	                              cmp cl, dl	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0x400bf18	            0x742b	                            je 0x400bf45	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0x400bf1a	      0xbf00000000	                              mov edi, 0	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0x400bf1f	      0xb909000000	                              mov ecx, 9	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0x400bf24	          0x4889c6	                            mov rsi, rax	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0x400bf27	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0x400bf29	           0xf97c2	                                 seta dl	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0x400bf2c	           0xf92c0	                                 setb al	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0x400bf2f	            0x38c2	                              cmp dl, al	      7386	syntax.c	FUNCTION_116
0x400bf31	           0xf94c0	                                 sete al	      7386	syntax.c	FUNCTION_116
0x400bf34	           0xfb6c0	                           movzx eax, al	      7386	syntax.c	FUNCTION_116
0x400bf37	        0x8944243c	             mov dword [rsp + 0x3c], eax	      7386	syntax.c	FUNCTION_116
0x400bf3b	    0xc74424380000	               mov dword [rsp + 0x38], 0	      7384	syntax.c	FUNCTION_116
0x400bf43	            0xeb10	                           jmp 0x400bf55	      7384	syntax.c	FUNCTION_116
0x400bf45	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      7386	syntax.c	FUNCTION_116
0x400bf4d	    0xc74424380100	               mov dword [rsp + 0x38], 1	      7612	syntax.c	FUNCTION_116	IF_23
0x400bf55	            0x85ed	                           test ebp, ebp	      7627	syntax.c	FUNCTION_116	IF_28
0x400bf57	     0xf845e100000	                            je 0x400cfbb	      7627	syntax.c	FUNCTION_116	IF_28
0x400bf5d	        0x833c2400	                      cmp dword [rsp], 0	      7627	syntax.c	FUNCTION_116	IF_28
0x400bf61	            0x740b	                            je 0x400bf6e	      7627	syntax.c	FUNCTION_116	IF_28
0x400bf63	      0x837c240400	                  cmp dword [rsp + 4], 0	      7627	syntax.c	FUNCTION_116	IF_28
0x400bf68	     0xf857a100000	                           jne 0x400cfe8	      7627	syntax.c	FUNCTION_116	IF_28
0x400bf6e	    0xc74424300000	               mov dword [rsp + 0x30], 0	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0x400bf76	    0x41bc00000000	                             mov r12d, 0	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0x400bf7c	    0x48c744240800	                  mov qword [rsp + 8], 0	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0x400bf85	      0xe9680e0000	                           jmp 0x400cdf2	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0x400bf8a	        0x410fb607	                   movzx eax, byte [r15]	      7638	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0x400bf8e	            0x3c3d	                            cmp al, 0x3d	      7638	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0x400bf90	            0x740d	                            je 0x400bf9f	      7638	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0x400bf92	            0xa8df	                           test al, 0xdf	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bf94	            0x744a	                            je 0x400bfe0	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bf96	          0x4c89fb	                            mov rbx, r15	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bf99	            0x3c09	                               cmp al, 9	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bf9b	            0x7526	                           jne 0x400bfc3	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bf9d	            0xeb44	                           jmp 0x400bfe3	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bf9f	      0xba05000000	                              mov edx, 5	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0x400bfa4	      0xbe00000000	                              mov esi, 0	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0x400bfa9	      0xbf00000000	                              mov edi, 0	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0x400bfae	      0xe800000000	                          call 0x400bfb3	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0x400bfb3	          0x4c89fe	                            mov rsi, r15	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0x400bfb6	          0x4889c7	                            mov rdi, rax	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0x400bfb9	      0xe800000000	                          call 0x400bfbe	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0x400bfbe	      0xe9420e0000	                           jmp 0x400ce05	      7642	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0x400bfc3	        0x4883c301	                              add rbx, 1	      7650	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2
0x400bfc7	           0xfb603	                   movzx eax, byte [rbx]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bfca	            0x3c3d	                            cmp al, 0x3d	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bfcc	            0x77f5	                            ja 0x400bfc3	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bfce	    0x48ba01020000	         movabs rdx, 0x2000000100000201 	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bfd8	        0x480fa3c2	                             bt rdx, rax	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bfdc	            0x73e5	                           jae 0x400bfc3	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bfde	            0xeb03	                           jmp 0x400bfe3	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bfe0	          0x4c89fb	                            mov rbx, r15	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0x400bfe3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7651	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400bfe8	      0xe800000000	                          call 0x400bfed	      7651	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400bfed	          0x4889de	                            mov rsi, rbx	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0x400bff0	          0x4c29fe	                            sub rsi, r15	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0x400bff3	          0x4c89ff	                            mov rdi, r15	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0x400bff6	      0xe800000000	                          call 0x400bffb	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0x400bffb	          0x4989c6	                            mov r14, rax	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0x400bffe	      0x4889442408	                mov qword [rsp + 8], rax	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0x400c003	          0x4885c0	                           test rax, rax	      7653	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_32
0x400c006	     0xf84f90d0000	                            je 0x400ce05	      7653	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_32
0x400c00c	          0x4889df	                            mov rdi, rbx	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0x400c00f	      0xe800000000	                          call 0x400c014	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0x400c014	          0x4889c3	                            mov rbx, rax	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0x400c017	      0xbf00000000	                              mov edi, 0	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0x400c01c	      0xb905000000	                              mov ecx, 5	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0x400c021	          0x4c89f6	                            mov rsi, r14	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0x400c024	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0x400c026	           0xf97c2	                                 seta dl	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0x400c029	           0xf92c0	                                 setb al	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0x400c02c	            0x38c2	                              cmp dl, al	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0x400c02e	            0x754a	                           jne 0x400c07a	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0x400c030	      0x837c240400	                  cmp dword [rsp + 4], 0	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0x400c035	            0x741f	                            je 0x400c056	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0x400c037	    0x488b05000000	            mov rax, qword [0x0400c03e] 	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0x400c03e	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0x400c043	          0x4989df	                            mov r15, rbx	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0x400c046	    0x83bc108c0000	         cmp dword [rax + rdx + 0x8c], 0	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0x400c04e	     0xf859e0d0000	                           jne 0x400cdf2	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0x400c054	            0xeb13	                           jmp 0x400c069	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0x400c056	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0x400c05b	    0x480305000000	             add rax, qword [0x0400c062]	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0x400c062	    0x83888c000000	                or dword [rax + 0x8c], 7	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0x400c069	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      7666	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_83
0x400c06d	      0xe8826dffff	                call sym.highlight_clear	      7666	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_83
0x400c072	          0x4989df	                            mov r15, rbx	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0x400c075	      0xe9780d0000	                           jmp 0x400cdf2	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0x400c07a	          0x803b3d	                    cmp byte [rbx], 0x3d	      7674	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0x400c07d	            0x7424	                            je 0x400c0a3	      7674	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0x400c07f	      0xba05000000	                              mov edx, 5	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0x400c084	      0xbe00000000	                              mov esi, 0	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0x400c089	      0xbf00000000	                              mov edi, 0	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0x400c08e	      0xe800000000	                          call 0x400c093	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0x400c093	          0x4c89fe	                            mov rsi, r15	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0x400c096	          0x4889c7	                            mov rdi, rax	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0x400c099	      0xe800000000	                          call 0x400c09e	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0x400c09e	      0xe9620d0000	                           jmp 0x400ce05	      7678	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0x400c0a3	        0x488d7b01	                      lea rdi, [rbx + 1]	      7685	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_86
0x400c0a7	      0xe800000000	                          call 0x400c0ac	      7685	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_86
0x400c0ac	          0x4889c3	                            mov rbx, rax	      7685	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_86
0x400c0af	          0x803827	                    cmp byte [rax], 0x27	      7686	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0x400c0b2	            0x753f	                           jne 0x400c0f3	      7686	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0x400c0b4	        0x4883c301	                              add rbx, 1	      7688	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0x400c0b8	      0xbe27000000	                           mov esi, 0x27	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_87
0x400c0bd	          0x4889df	                            mov rdi, rbx	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_87
0x400c0c0	      0xe800000000	                          call 0x400c0c5	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_87
0x400c0c5	      0x4889442418	             mov qword [rsp + 0x18], rax	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_87
0x400c0ca	          0x4885c0	                           test rax, rax	      7690	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38
0x400c0cd	            0x7531	                           jne 0x400c100	      7690	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38
0x400c0cf	      0xba05000000	                              mov edx, 5	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0x400c0d4	      0xbe00000000	                              mov esi, 0	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0x400c0d9	      0xbf00000000	                              mov edi, 0	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0x400c0de	      0xe800000000	                          call 0x400c0e3	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0x400c0e3	          0x4c89fe	                            mov rsi, r15	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0x400c0e6	          0x4889c7	                            mov rdi, rax	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0x400c0e9	      0xe800000000	                          call 0x400c0ee	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0x400c0ee	      0xe9120d0000	                           jmp 0x400ce05	      7694	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38
0x400c0f3	          0x4889c7	                            mov rdi, rax	      7700	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9	CALL_90
0x400c0f6	      0xe800000000	                          call 0x400c0fb	      7700	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9	CALL_90
0x400c0fb	      0x4889442418	             mov qword [rsp + 0x18], rax	      7700	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9	CALL_90
0x400c100	      0x48395c2418	            cmp qword [rsp + 0x18], rbx 	      7702	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0x400c105	            0x7524	                           jne 0x400c12b	      7702	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0x400c107	      0xba05000000	                              mov edx, 5	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0x400c10c	      0xbe00000000	                              mov esi, 0	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0x400c111	      0xbf00000000	                              mov edi, 0	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0x400c116	      0xe800000000	                          call 0x400c11b	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0x400c11b	          0x4c89fe	                            mov rsi, r15	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0x400c11e	          0x4889c7	                            mov rdi, rax	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0x400c121	      0xe800000000	                          call 0x400c126	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0x400c126	      0xe9da0c0000	                           jmp 0x400ce05	      7706	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0x400c12b	          0x4c89e7	                            mov rdi, r12	      7708	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_93
0x400c12e	      0xe800000000	                          call 0x400c133	      7708	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_93
0x400c133	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0x400c138	          0x4c89f6	                            mov rsi, r14	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0x400c13b	          0x4829de	                            sub rsi, rbx	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0x400c13e	          0x4889df	                            mov rdi, rbx	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0x400c141	      0xe800000000	                          call 0x400c146	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0x400c146	          0x4989c4	                            mov r12, rax	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0x400c149	          0x4885c0	                           test rax, rax	      7710	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_40
0x400c14c	     0xf84b30c0000	                            je 0x400ce05	      7710	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_40
0x400c152	          0x4c89f6	                            mov rsi, r14	      7716	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0x400c155	        0x41803e27	                    cmp byte [r14], 0x27	      7716	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0x400c159	           0xf94c0	                                 sete al	      7716	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0x400c15c	           0xfb6c0	                           movzx eax, al	      7716	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0x400c15f	          0x4801c6	                            add rsi, rax	      7716	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0x400c162	      0x4889742418	             mov qword [rsp + 0x18], rsi	      7716	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0x400c167	      0xbf00000000	                              mov edi, 0	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0x400c16c	      0xb905000000	                              mov ecx, 5	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0x400c171	      0x488b742408	                mov rsi, qword [rsp + 8]	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0x400c176	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0x400c178	           0xf97c2	                                 seta dl	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0x400c17b	           0xf92c0	                                 setb al	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0x400c17e	            0x38c2	                              cmp dl, al	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0x400c180	     0xf84bc000000	                            je 0x400c242	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0x400c186	      0xbf00000000	                              mov edi, 0	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0x400c18b	      0xb906000000	                              mov ecx, 6	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0x400c190	      0x488b742408	                mov rsi, qword [rsp + 8]	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0x400c195	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0x400c197	           0xf97c2	                                 seta dl	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0x400c19a	           0xf92c0	                                 setb al	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0x400c19d	            0x38c2	                              cmp dl, al	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0x400c19f	     0xf84ad000000	                            je 0x400c252	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0x400c1a5	      0x488b742408	                mov rsi, qword [rsp + 8]	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1aa	          0x803e47	                    cmp byte [rsi], 0x47	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1ad	     0xf85da010000	                           jne 0x400c38d	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1b3	        0x807e0155	                cmp byte [rsi + 1], 0x55	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1b7	     0xf85d0010000	                           jne 0x400c38d	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1bd	        0x807e0249	                cmp byte [rsi + 2], 0x49	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1c1	     0xf85c6010000	                           jne 0x400c38d	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1c7	        0x807e0300	                   cmp byte [rsi + 3], 0	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1cb	     0xf8491000000	                            je 0x400c262	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1d1	      0xe9b7010000	                           jmp 0x400c38d	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1d6	      0xbb09000000	                              mov ebx, 9	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1db	        0x44893c24	                   mov dword [rsp], r15d	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0x400c1df	    0x488b34dd0000	                  mov rsi, qword [rbx*8]	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0x400c1e7	          0x4c89f1	                            mov rcx, r14	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0x400c1ea	          0x4889f7	                            mov rdi, rsi	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0x400c1ed	          0x4489e8	                           mov eax, r13d	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0x400c1f0	            0xf2ae	              repne scasb al, byte [rdi]	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0x400c1f2	          0x48f7d1	                                 not rcx	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0x400c1f5	        0x4883e901	                              sub rcx, 1	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0x400c1f9	          0x4189cf	                           mov r15d, ecx	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0x400c1fc	          0x4863d1	                         movsxd rdx, ecx	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0x400c1ff	          0x4889ef	                            mov rdi, rbp	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0x400c202	      0xe800000000	                          call 0x400c207	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0x400c207	            0x85c0	                           test eax, eax	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0x400c209	            0x7528	                           jne 0x400c233	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0x400c20b	          0x4489fe	                           mov esi, r15d	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0x400c20e	        0x448b3c24	                   mov r15d, dword [rsp]	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0x400c212	    0x8b149d000000	                  mov edx, dword [rbx*4]	      7734	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0x400c219	         0x9542420	              or dword [rsp + 0x20], edx	      7734	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0x400c21d	          0x4101f7	                           add r15d, esi	      7735	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0x400c220	          0x4963c7	                        movsxd rax, r15d	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400c223	      0x41803c042c	              cmp byte [r12 + rax], 0x2c	      7746	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400c228	           0xf94c0	                                 sete al	      7746	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400c22b	           0xfb6c0	                           movzx eax, al	      7746	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400c22e	          0x4101c7	                           add r15d, eax	      7746	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400c231	            0xeb4a	                           jmp 0x400c27d	      7746	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400c233	        0x4883eb01	                              sub rbx, 1	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c237	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c23b	            0x75a2	                           jne 0x400c1df	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c23d	      0xe9cb0d0000	                           jmp 0x400d00d	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c242	    0xc74424200000	               mov dword [rsp + 0x20], 0	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c24a	    0x41bf00000000	                             mov r15d, 0	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c250	            0xeb1e	                           jmp 0x400c270	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c252	    0xc74424200000	               mov dword [rsp + 0x20], 0	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c25a	    0x41bf00000000	                             mov r15d, 0	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c260	            0xeb0e	                           jmp 0x400c270	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c262	    0xc74424200000	               mov dword [rsp + 0x20], 0	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c26a	    0x41bf00000000	                             mov r15d, 0	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400c270	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0x400c277	    0x41bd00000000	                             mov r13d, 0	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0x400c27d	          0x4963ef	                        movsxd rbp, r15d	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400c280	          0x4c01e5	                            add rbp, r12	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400c283	        0x807d0000	                       cmp byte [rbp], 0	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400c287	     0xf8549ffffff	                           jne 0x400c1d6	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400c28d	      0x488b442408	                mov rax, qword [rsp + 8]	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400c292	           0xfb600	                   movzx eax, byte [rax]	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400c295	            0x3c54	                            cmp al, 0x54	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400c297	            0x754e	                           jne 0x400c2e7	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400c299	      0x837c240400	                  cmp dword [rsp + 4], 0	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0x400c29e	            0x741b	                            je 0x400c2bb	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0x400c2a0	    0x488b05000000	            mov rax, qword [0x0400c2a7] 	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0x400c2a7	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0x400c2ac	    0xf684108c0000	        test byte [rax + rdx + 0x8c], 1 	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0x400c2b4	            0x7418	                            je 0x400c2ce	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0x400c2b6	      0xe9760d0000	                           jmp 0x400d031	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0x400c2bb	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0x400c2c0	    0x480305000000	             add rax, qword [0x0400c2c7]	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0x400c2c7	    0x83888c000000	                or dword [rax + 0x8c], 1	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0x400c2ce	    0x488b05000000	            mov rax, qword [0x0400c2d5] 	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0x400c2d5	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0x400c2da	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0x400c2de	        0x89741014	       mov dword [rax + rdx + 0x14], esi	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0x400c2e2	      0xe9b60a0000	                           jmp 0x400cd9d	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0x400c2e7	            0x3c43	                            cmp al, 0x43	      7759	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50
0x400c2e9	            0x7554	                           jne 0x400c33f	      7759	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50
0x400c2eb	      0x837c240400	                  cmp dword [rsp + 4], 0	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0x400c2f0	            0x741b	                            je 0x400c30d	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0x400c2f2	    0x488b05000000	            mov rax, qword [0x0400c2f9] 	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0x400c2f9	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0x400c2fe	    0xf684108c0000	        test byte [rax + rdx + 0x8c], 2 	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0x400c306	            0x7418	                            je 0x400c320	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0x400c308	      0xe9240d0000	                           jmp 0x400d031	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0x400c30d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0x400c312	    0x480305000000	             add rax, qword [0x0400c319]	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0x400c319	    0x83888c000000	                or dword [rax + 0x8c], 2	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0x400c320	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0x400c325	    0x480305000000	             add rax, qword [0x0400c32c]	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0x400c32c	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0x400c330	          0x89502c	             mov dword [rax + 0x2c], edx	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0x400c333	    0xc74030000000	               mov dword [rax + 0x30], 0	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0x400c33a	      0xe95e0a0000	                           jmp 0x400cd9d	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0x400c33f	      0x837c240400	                  cmp dword [rsp + 4], 0	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0x400c344	            0x741b	                            je 0x400c361	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0x400c346	    0x488b05000000	            mov rax, qword [0x0400c34d] 	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0x400c34d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0x400c352	    0xf684108c0000	        test byte [rax + rdx + 0x8c], 4 	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0x400c35a	            0x7418	                            je 0x400c374	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0x400c35c	      0xe9d00c0000	                           jmp 0x400d031	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0x400c361	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0x400c366	    0x480305000000	             add rax, qword [0x0400c36d]	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0x400c36d	    0x83888c000000	                or dword [rax + 0x8c], 4	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0x400c374	    0x488b05000000	            mov rax, qword [0x0400c37b] 	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0x400c37b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0x400c380	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0x400c384	        0x8974106c	       mov dword [rax + rdx + 0x6c], esi	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0x400c388	      0xe9100a0000	                           jmp 0x400cd9d	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0x400c38d	      0xbf00000000	                              mov edi, 0	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0x400c392	      0xb905000000	                              mov ecx, 5	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0x400c397	      0x488b742408	                mov rsi, qword [rsp + 8]	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0x400c39c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0x400c39e	           0xf97c2	                                 seta dl	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0x400c3a1	           0xf92c0	                                 setb al	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0x400c3a4	            0x38c2	                              cmp dl, al	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0x400c3a6	     0xf85fc000000	                           jne 0x400c4a8	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0x400c3ac	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0x400c3b1	    0x48031d000000	             add rbx, qword [0x0400c3b8]	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0x400c3b8	        0x488b6b60	            mov rbp, qword [rbx + 0x60] 	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0x400c3bc	          0x4885ed	                           test rbp, rbp	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0x400c3bf	            0x7413	                            je 0x400c3d4	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0x400c3c1	          0x4c89e6	                            mov rsi, r12	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0x400c3c4	          0x4889ef	                            mov rdi, rbp	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0x400c3c7	      0xe800000000	                          call 0x400c3cc	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0x400c3cc	            0x85c0	                           test eax, eax	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0x400c3ce	     0xf84c9090000	                            je 0x400cd9d	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0x400c3d4	    0x833d00000000	               cmp dword [0x0400c3db], 0	      7790	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0x400c3db	            0x752d	                           jne 0x400c40a	      7790	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0x400c3dd	          0x4889ef	                            mov rdi, rbp	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0x400c3e0	      0xe800000000	                          call 0x400c3e5	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0x400c3e5	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0x400c3ea	    0x48031d000000	             add rbx, qword [0x0400c3f1]	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0x400c3f1	          0x4c89e7	                            mov rdi, r12	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0x400c3f4	      0xe800000000	                          call 0x400c3f9	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0x400c3f9	        0x48894360	             mov qword [rbx + 0x60], rax	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0x400c3fd	    0xc74424300100	               mov dword [rsp + 0x30], 1	      7795	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0x400c405	      0xe993090000	                           jmp 0x400cd9d	      7795	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0x400c40a	        0x488b6b58	            mov rbp, qword [rbx + 0x58] 	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0x400c40e	    0x48c743580000	               mov qword [rbx + 0x58], 0	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0x400c416	          0x4c89e7	                            mov rdi, r12	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x400c419	      0xe8746bffff	               call sym.font_name2handle	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x400c41e	        0x48894358	             mov qword [rbx + 0x58], rax	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x400c422	    0x488b05000000	            mov rax, qword [0x0400c429] 	      8699	syntax.c	FUNCTION_129	ELSE_1	IF_8	IF_9
0x400c429	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8699	syntax.c	FUNCTION_129	ELSE_1	IF_8	IF_9
0x400c42e	    0x48837c105800	         cmp qword [rax + rdx + 0x58], 0	      8699	syntax.c	FUNCTION_129	ELSE_1	IF_8	IF_9
0x400c434	            0x7414	                            je 0x400c44a	      8699	syntax.c	FUNCTION_129	ELSE_1	IF_8	IF_9
0x400c436	      0x837c243800	               cmp dword [rsp + 0x38], 0	      8699	syntax.c	FUNCTION_129	ELSE_1	IF_8	IF_9
0x400c43b	            0x740d	                            je 0x400c44a	      8699	syntax.c	FUNCTION_129	ELSE_1	IF_8	IF_9
0x400c43d	      0xbe00000000	                              mov esi, 0	      8700	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_17
0x400c442	          0x4c89e7	                            mov rdi, r12	      8700	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_17
0x400c445	      0xe800000000	                          call 0x400c44a	      8700	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_17
0x400c44a	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0x400c44f	          0x4889d8	                            mov rax, rbx	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0x400c452	    0x480305000000	             add rax, qword [0x0400c459]	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0x400c459	      0x4883785800	               cmp qword [rax + 0x58], 0	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0x400c45e	            0x743f	                            je 0x400c49f	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0x400c460	          0x4889ef	                            mov rdi, rbp	      7833	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_133
0x400c463	      0xe800000000	                          call 0x400c468	      7833	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_133
0x400c468	    0x488b05000000	            mov rax, qword [0x0400c46f] 	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0x400c46f	      0x488b7c1860	      mov rdi, qword [rax + rbx + 0x60] 	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0x400c474	      0xe800000000	                          call 0x400c479	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0x400c479	          0x4889d8	                            mov rax, rbx	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0x400c47c	    0x480305000000	             add rax, qword [0x0400c483]	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0x400c483	          0x4889c3	                            mov rbx, rax	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0x400c486	          0x4c89e7	                            mov rdi, r12	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0x400c489	      0xe800000000	                          call 0x400c48e	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0x400c48e	        0x48894360	             mov qword [rbx + 0x60], rax	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0x400c492	    0xc74424300100	               mov dword [rsp + 0x30], 1	      7836	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400c49a	      0xe9fe080000	                           jmp 0x400cd9d	      7836	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400c49f	        0x48896858	             mov qword [rax + 0x58], rbp	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0x400c4a3	      0xe9f5080000	                           jmp 0x400cd9d	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0x400c4a8	      0xbf00000000	                              mov edi, 0	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4ad	      0xb908000000	                              mov ecx, 8	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4b2	      0x488b742408	                mov rsi, qword [rsp + 8]	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4b7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4b9	           0xf97c2	                                 seta dl	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4bc	           0xf92c0	                                 setb al	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4bf	            0x38c2	                              cmp dl, al	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4c1	            0x741f	                            je 0x400c4e2	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4c3	      0xbf00000000	                              mov edi, 0	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4c8	      0xb908000000	                              mov ecx, 8	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4cd	      0x488b742408	                mov rsi, qword [rsp + 8]	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4d2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4d4	           0xf97c2	                                 seta dl	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4d7	           0xf92c0	                                 setb al	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4da	            0x38c2	                              cmp dl, al	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4dc	     0xf8543030000	                           jne 0x400c825	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0x400c4e2	      0x837c240400	                  cmp dword [rsp + 4], 0	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0x400c4e7	            0x741b	                            je 0x400c504	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0x400c4e9	    0x488b05000000	            mov rax, qword [0x0400c4f0] 	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0x400c4f0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0x400c4f5	    0xf684108c0000	        test byte [rax + rdx + 0x8c], 2 	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0x400c4fd	            0x7418	                            je 0x400c517	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0x400c4ff	      0xe92d0b0000	                           jmp 0x400d031	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0x400c504	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0x400c509	    0x480305000000	             add rax, qword [0x0400c510]	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0x400c510	    0x83888c000000	                or dword [rax + 0x8c], 2	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0x400c517	      0x488b442408	                mov rax, qword [rsp + 8]	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0x400c51c	        0x80780546	                cmp byte [rax + 5], 0x46	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0x400c520	            0x751d	                           jne 0x400c53f	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0x400c522	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0x400c527	    0x480305000000	             add rax, qword [0x0400c52e]	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0x400c52e	        0x83783000	               cmp dword [rax + 0x30], 0	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0x400c532	            0x740b	                            je 0x400c53f	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0x400c534	        0x83602cfd	      and dword [rax + 0x2c], 0xfffffffd	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0x400c538	    0xc74030000000	               mov dword [rax + 0x30], 0	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0x400c53f	      0x410fb60424	                   movzx eax, byte [r12]	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_146
0x400c544	          0x83e830	                           sub eax, 0x30	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_146
0x400c547	          0x83f809	                              cmp eax, 9	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_146
0x400c54a	            0x7719	                            ja 0x400c565	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_146
0x400c54c	      0xba0a000000	                            mov edx, 0xa	       280	stdlib.h	FUNCTION_202	CALL_2
0x400c551	      0xbe00000000	                              mov esi, 0	       280	stdlib.h	FUNCTION_202	CALL_2
0x400c556	          0x4c89e7	                            mov rdi, r12	       280	stdlib.h	FUNCTION_202	CALL_2
0x400c559	      0xe800000000	                          call 0x400c55e	       280	stdlib.h	FUNCTION_202	CALL_2
0x400c55e	            0x89c3	                            mov ebx, eax	       280	stdlib.h	FUNCTION_202	CALL_2
0x400c560	      0xe953010000	                           jmp 0x400c6b8	       280	stdlib.h	FUNCTION_202	CALL_2
0x400c565	      0xbe00000000	                              mov esi, 0	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_148
0x400c56a	          0x4c89e7	                            mov rdi, r12	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_148
0x400c56d	      0xe800000000	                          call 0x400c572	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_148
0x400c572	            0x85c0	                           test eax, eax	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_148
0x400c574	            0x7533	                           jne 0x400c5a9	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_148
0x400c576	    0x8b1d00000000	            mov ebx, dword [0x0400c57c] 	      7862	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400c57c	            0x85db	                           test ebx, ebx	      7862	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400c57e	            0x7408	                            je 0x400c588	      7862	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400c580	          0x83eb01	                              sub ebx, 1	      7863	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400c583	      0xe930010000	                           jmp 0x400c6b8	      7863	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400c588	      0xba05000000	                              mov edx, 5	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_150
0x400c58d	      0xbe00000000	                              mov esi, 0	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_150
0x400c592	      0xbf00000000	                              mov edi, 0	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_150
0x400c597	      0xe800000000	                          call 0x400c59c	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_150
0x400c59c	          0x4889c7	                            mov rdi, rax	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_150
0x400c59f	      0xe800000000	                          call 0x400c5a4	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_150
0x400c5a4	      0xe95c080000	                           jmp 0x400ce05	      7868	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19
0x400c5a9	      0xbe00000000	                              mov esi, 0	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_151
0x400c5ae	          0x4c89e7	                            mov rdi, r12	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_151
0x400c5b1	      0xe800000000	                          call 0x400c5b6	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_151
0x400c5b6	            0x85c0	                           test eax, eax	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_151
0x400c5b8	            0x7533	                           jne 0x400c5ed	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_151
0x400c5ba	    0x8b1d00000000	            mov ebx, dword [0x0400c5c0] 	      7873	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400c5c0	            0x85db	                           test ebx, ebx	      7873	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400c5c2	            0x7e08	                           jle 0x400c5cc	      7873	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400c5c4	          0x83eb01	                              sub ebx, 1	      7874	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400c5c7	      0xe9ec000000	                           jmp 0x400c6b8	      7874	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400c5cc	      0xba05000000	                              mov edx, 5	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_153
0x400c5d1	      0xbe00000000	                              mov esi, 0	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_153
0x400c5d6	      0xbf00000000	                              mov edi, 0	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_153
0x400c5db	      0xe800000000	                          call 0x400c5e0	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_153
0x400c5e0	          0x4889c7	                            mov rdi, rax	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_153
0x400c5e3	      0xe800000000	                          call 0x400c5e8	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_153
0x400c5e8	      0xe918080000	                           jmp 0x400ce05	      7879	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21
0x400c5ed	    0xc74424440200	               mov dword [rsp + 0x44], 2	      7884	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22
0x400c5f5	      0x410fb61c24	                   movzx ebx, byte [r12]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0x400c5fa	          0x8d439f	                   lea eax, [rbx - 0x61]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0x400c5fd	            0x3c19	                            cmp al, 0x19	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0x400c5ff	            0x7605	                           jbe 0x400c606	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0x400c601	           0xfb6db	                           movzx ebx, bl	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0x400c604	            0xeb06	                           jmp 0x400c60c	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0x400c606	           0xfb6db	                           movzx ebx, bl	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0x400c609	          0x83eb20	                           sub ebx, 0x20	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0x400c60c	      0xbd1b000000	                           mov ebp, 0x1b	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0x400c611	      0x4d8d6c2401	                      lea r13, [r12 + 1]	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0x400c616	    0x488b04ed0000	                  mov rax, qword [rbp*8]	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0x400c61e	           0xfbe10	                   movsx edx, byte [rax]	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0x400c621	            0x39d3	                            cmp ebx, edx	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0x400c623	            0x7510	                           jne 0x400c635	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0x400c625	        0x488d7001	                      lea rsi, [rax + 1]	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0x400c629	          0x4c89ef	                            mov rdi, r13	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0x400c62c	      0xe800000000	                          call 0x400c631	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0x400c631	            0x85c0	                           test eax, eax	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0x400c633	            0x742e	                            je 0x400c663	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0x400c635	        0x4883ed01	                              sub rbp, 1	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0x400c639	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0x400c63d	            0x75d7	                           jne 0x400c616	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0x400c63f	      0xba05000000	                              mov edx, 5	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0x400c644	      0xbe00000000	                              mov esi, 0	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0x400c649	      0xbf00000000	                              mov edi, 0	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0x400c64e	      0xe800000000	                          call 0x400c653	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0x400c653	          0x4c89fe	                            mov rsi, r15	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0x400c656	          0x4889c7	                            mov rdi, rax	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0x400c659	      0xe800000000	                          call 0x400c65e	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0x400c65e	      0xe9a2070000	                           jmp 0x400ce05	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0x400c663	      0x488b442408	                mov rax, qword [rsp + 8]	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0x400c668	        0x80780546	                cmp byte [rax + 5], 0x46	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0x400c66c	        0x400f94c6	                                sete sil	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0x400c670	        0x400fb6f6	                          movzx esi, sil	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0x400c674	      0x488d542444	                   lea rdx, [rsp + 0x44]	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0x400c679	            0x89ef	                            mov edi, ebp	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0x400c67b	      0xe800000000	                          call 0x400c680	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0x400c680	            0x89c3	                            mov ebx, eax	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0x400c682	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      7910	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400c686	          0x83f801	                              cmp eax, 1	      7910	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400c689	            0x7519	                           jne 0x400c6a4	      7910	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400c68b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0x400c690	    0x480305000000	             add rax, qword [0x0400c697]	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0x400c697	        0x83482c02	                or dword [rax + 0x2c], 2	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0x400c69b	    0xc74030010000	               mov dword [rax + 0x30], 1	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0x400c6a2	            0xeb14	                           jmp 0x400c6b8	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0x400c6a4	            0x85c0	                           test eax, eax	      7915	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400c6a6	            0x7510	                           jne 0x400c6b8	      7915	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400c6a8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400c6ad	    0x480305000000	             add rax, qword [0x0400c6b4]	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400c6b4	        0x83602cfd	      and dword [rax + 0x2c], 0xfffffffd	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400c6b8	      0x488b442408	                mov rax, qword [rsp + 8]	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400c6bd	        0x80780546	                cmp byte [rax + 5], 0x46	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400c6c1	            0x7574	                           jne 0x400c737	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400c6c3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0x400c6c8	    0x480305000000	             add rax, qword [0x0400c6cf]	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0x400c6cf	          0x8d5301	                      lea edx, [rbx + 1]	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0x400c6d2	          0x895034	             mov dword [rax + 0x34], edx	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0x400c6d5	      0x837c243800	               cmp dword [rsp + 0x38], 0	      7924	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400c6da	     0xf84bd060000	                            je 0x400cd9d	      7924	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400c6e0	    0x891500000000	            mov dword [0x0400c6e6], edx 	      7926	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400c6e6	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0x400c6e9	          0x83e002	                              and eax, 2	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0x400c6ec	    0x890500000000	            mov dword [0x0400c6f2], eax 	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0x400c6f2	    0x833d00000000	               cmp dword [0x0400c6f9], 0	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400c6f9	     0xf859e060000	                           jne 0x400cd9d	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400c6ff	    0x833d00000000	               cmp dword [0x0400c706], 0	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400c706	     0xf8591060000	                           jne 0x400cd9d	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400c70c	    0xc70500000000	           mov dword [0x0400c716], 0x32 	      7933	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400c716	    0x833d00000000	               cmp dword [0x0400c71d], 0	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0x400c71d	     0xf847a060000	                            je 0x400cd9d	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0x400c723	            0x85db	                           test ebx, ebx	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0x400c725	     0xf8872060000	                            js 0x400cd9d	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0x400c72b	            0x89df	                            mov edi, ebx	      7935	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	CALL_165
0x400c72d	      0xe800000000	                          call 0x400c732	      7935	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	CALL_165
0x400c732	      0xe966060000	                           jmp 0x400cd9d	      7935	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	CALL_165
0x400c737	          0x8d4301	                      lea eax, [rbx + 1]	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0x400c73a	    0x488b15000000	            mov rdx, qword [0x0400c741] 	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0x400c741	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0x400c746	        0x89443238	       mov dword [rdx + rsi + 0x38], eax	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0x400c74a	      0x837c243800	               cmp dword [rsp + 0x38], 0	      7942	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0x400c74f	     0xf8448060000	                            je 0x400cd9d	      7942	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0x400c755	    0x890500000000	            mov dword [0x0400c75b], eax 	      7944	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0x400c75b	    0x833d00000000	               cmp dword [0x0400c762], 0	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400c762	     0xf8535060000	                           jne 0x400cd9d	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400c768	    0x833d00000000	               cmp dword [0x0400c76f], 0	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400c76f	     0xf8528060000	                           jne 0x400cd9d	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400c775	    0xc70500000000	           mov dword [0x0400c77f], 0x32 	      7950	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400c77f	            0x85db	                           test ebx, ebx	      7951	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80
0x400c781	     0xf8816060000	                            js 0x400cd9d	      7951	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80
0x400c787	    0x833d00000000	               cmp dword [0x0400c78e], 0	      7955	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_81
0x400c78e	            0x7407	                            je 0x400c797	      7955	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_81
0x400c790	            0x89df	                            mov edi, ebx	      7956	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	CALL_167
0x400c792	      0xe800000000	                          call 0x400c797	      7956	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	CALL_167
0x400c797	    0x833d00000000	            cmp dword [0x0400c79e], 0xf 	      7957	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400c79e	            0x7f0e	                            jg 0x400c7ae	      7957	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400c7a0	    0xf7c3fbffffff	                    test ebx, 0xfffffffb	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400c7a6	           0xf94c3	                                 sete bl	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400c7a9	           0xfb6db	                           movzx ebx, bl	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400c7ac	            0xeb1a	                           jmp 0x400c7c8	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400c7ae	          0x83fb0f	                            cmp ebx, 0xf	      7960	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400c7b1	     0xf8fe6050000	                            jg 0x400cd9d	      7960	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400c7b7	          0x83fb06	                              cmp ebx, 6	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400c7ba	           0xf9ec2	                                setle dl	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400c7bd	          0x83fb08	                              cmp ebx, 8	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400c7c0	           0xf94c0	                                 sete al	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400c7c3	             0x9c2	                             or edx, eax	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400c7c5	           0xfb6da	                           movzx ebx, dl	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400c7c8	    0x488b05000000	            mov rax, qword [0x0400c7cf] 	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400c7cf	          0x803864	                    cmp byte [rax], 0x64	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400c7d2	           0xf94c0	                                 sete al	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400c7d5	           0xfb6c0	                           movzx eax, al	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400c7d8	            0x39c3	                            cmp ebx, eax	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400c7da	     0xf84bd050000	                            je 0x400cd9d	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400c7e0	      0xbf00000000	                              mov edi, 0	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_168
0x400c7e5	      0xe800000000	                          call 0x400c7ea	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_168
0x400c7ea	            0x85c0	                           test eax, eax	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_168
0x400c7ec	     0xf85ab050000	                           jne 0x400cd9d	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_168
0x400c7f2	            0x85db	                           test ebx, ebx	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0x400c7f4	      0xba00000000	                              mov edx, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0x400c7f9	      0xb800000000	                              mov eax, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0x400c7fe	        0x480f45d0	                         cmovne rdx, rax	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0x400c802	      0xb900000000	                              mov ecx, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0x400c807	      0xbe00000000	                              mov esi, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0x400c80c	      0xbf00000000	                              mov edi, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0x400c811	      0xe800000000	                          call 0x400c816	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0x400c816	      0xbf00000000	                              mov edi, 0	      7970	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_170
0x400c81b	      0xe800000000	                          call 0x400c820	      7970	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_170
0x400c820	      0xe978050000	                           jmp 0x400cd9d	      7970	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_170
0x400c825	      0xbf00000000	                              mov edi, 0	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0x400c82a	      0xb906000000	                              mov ecx, 6	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0x400c82f	      0x488b742408	                mov rsi, qword [rsp + 8]	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0x400c834	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0x400c836	           0xf97c2	                                 seta dl	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0x400c839	           0xf92c0	                                 setb al	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0x400c83c	            0x38c2	                              cmp dl, al	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0x400c83e	     0xf85da000000	                           jne 0x400c91e	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0x400c844	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0x400c849	    0x48031d000000	             add rbx, qword [0x0400c850]	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0x400c850	      0x837c240400	                  cmp dword [rsp + 4], 0	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0x400c855	            0x740e	                            je 0x400c865	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0x400c857	    0xf6838c000000	               test byte [rbx + 0x8c], 4	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0x400c85e	            0x740c	                            je 0x400c86c	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0x400c860	      0xe9cc070000	                           jmp 0x400d031	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0x400c865	    0x838b8c000000	                or dword [rbx + 0x8c], 4	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0x400c86c	          0x4c89e7	                            mov rdi, r12	      7990	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_175
0x400c86f	      0xe800000000	                          call 0x400c874	      7990	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_175
0x400c874	          0x4889c5	                            mov rbp, rax	      7990	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_175
0x400c877	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0x400c87d	            0x752b	                           jne 0x400c8aa	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0x400c87f	      0xbe00000000	                              mov esi, 0	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0x400c884	          0x4c89e7	                            mov rdi, r12	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0x400c887	      0xe800000000	                          call 0x400c88c	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0x400c88c	            0x85c0	                           test eax, eax	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0x400c88e	            0x741a	                            je 0x400c8aa	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0x400c890	    0x833d00000000	               cmp dword [0x0400c897], 0	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0x400c897	     0xf8500050000	                           jne 0x400cd9d	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0x400c89d	    0x833d00000000	               cmp dword [0x0400c8a4], 0	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0x400c8a4	     0xf85f3040000	                           jne 0x400cd9d	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0x400c8aa	    0x488b05000000	            mov rax, qword [0x0400c8b1] 	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0x400c8b1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0x400c8b6	      0x48896c1040	       mov qword [rax + rdx + 0x40], rbp	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0x400c8bb	        0x488b6b70	            mov rbp, qword [rbx + 0x70] 	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0x400c8bf	          0x4885ed	                           test rbp, rbp	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0x400c8c2	            0x7413	                            je 0x400c8d7	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0x400c8c4	          0x4c89e6	                            mov rsi, r12	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0x400c8c7	          0x4889ef	                            mov rdi, rbp	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0x400c8ca	      0xe800000000	                          call 0x400c8cf	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0x400c8cf	            0x85c0	                           test eax, eax	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0x400c8d1	     0xf84c6040000	                            je 0x400cd9d	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0x400c8d7	          0x4889ef	                            mov rdi, rbp	      7997	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_179
0x400c8da	      0xe800000000	                          call 0x400c8df	      7997	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_179
0x400c8df	      0xbe00000000	                              mov esi, 0	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_180
0x400c8e4	          0x4c89e7	                            mov rdi, r12	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_180
0x400c8e7	      0xe800000000	                          call 0x400c8ec	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_180
0x400c8ec	            0x85c0	                           test eax, eax	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_180
0x400c8ee	            0x7419	                            je 0x400c909	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_180
0x400c8f0	          0x4c89e7	                            mov rdi, r12	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_181
0x400c8f3	      0xe800000000	                          call 0x400c8f8	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_181
0x400c8f8	        0x48894370	             mov qword [rbx + 0x70], rax	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_181
0x400c8fc	    0xc74424300100	               mov dword [rsp + 0x30], 1	      8002	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0x400c904	      0xe994040000	                           jmp 0x400cd9d	      8002	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0x400c909	    0x48c743700000	               mov qword [rbx + 0x70], 0	      8001	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0x400c911	    0xc74424300100	               mov dword [rsp + 0x30], 1	      8002	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0x400c919	      0xe97f040000	                           jmp 0x400cd9d	      8002	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0x400c91e	      0xbf00000000	                              mov edi, 0	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0x400c923	      0xb906000000	                              mov ecx, 6	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0x400c928	      0x488b742408	                mov rsi, qword [rsp + 8]	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0x400c92d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0x400c92f	           0xf97c2	                                 seta dl	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0x400c932	           0xf92c0	                                 setb al	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0x400c935	            0x38c2	                              cmp dl, al	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0x400c937	     0xf85da000000	                           jne 0x400ca17	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0x400c93d	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0x400c942	    0x48031d000000	             add rbx, qword [0x0400c949]	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0x400c949	      0x837c240400	                  cmp dword [rsp + 4], 0	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0x400c94e	            0x740e	                            je 0x400c95e	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0x400c950	    0xf6838c000000	               test byte [rbx + 0x8c], 4	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0x400c957	            0x740c	                            je 0x400c965	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0x400c959	      0xe9d3060000	                           jmp 0x400d031	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0x400c95e	    0x838b8c000000	                or dword [rbx + 0x8c], 4	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0x400c965	          0x4c89e7	                            mov rdi, r12	      8041	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_186
0x400c968	      0xe800000000	                          call 0x400c96d	      8041	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_186
0x400c96d	          0x4889c5	                            mov rbp, rax	      8041	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_186
0x400c970	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0x400c976	            0x752b	                           jne 0x400c9a3	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0x400c978	      0xbe00000000	                              mov esi, 0	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0x400c97d	          0x4c89e7	                            mov rdi, r12	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0x400c980	      0xe800000000	                          call 0x400c985	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0x400c985	            0x85c0	                           test eax, eax	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0x400c987	            0x741a	                            je 0x400c9a3	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0x400c989	    0x833d00000000	               cmp dword [0x0400c990], 0	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0x400c990	     0xf8507040000	                           jne 0x400cd9d	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0x400c996	    0x833d00000000	               cmp dword [0x0400c99d], 0	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0x400c99d	     0xf85fa030000	                           jne 0x400cd9d	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0x400c9a3	    0x488b05000000	            mov rax, qword [0x0400c9aa] 	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0x400c9aa	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0x400c9af	      0x48896c1048	       mov qword [rax + rdx + 0x48], rbp	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0x400c9b4	        0x488b6b78	            mov rbp, qword [rbx + 0x78] 	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0x400c9b8	          0x4885ed	                           test rbp, rbp	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0x400c9bb	            0x7413	                            je 0x400c9d0	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0x400c9bd	          0x4c89e6	                            mov rsi, r12	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0x400c9c0	          0x4889ef	                            mov rdi, rbp	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0x400c9c3	      0xe800000000	                          call 0x400c9c8	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0x400c9c8	            0x85c0	                           test eax, eax	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0x400c9ca	     0xf84cd030000	                            je 0x400cd9d	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0x400c9d0	          0x4889ef	                            mov rdi, rbp	      8048	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_190
0x400c9d3	      0xe800000000	                          call 0x400c9d8	      8048	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_190
0x400c9d8	      0xbe00000000	                              mov esi, 0	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_191
0x400c9dd	          0x4c89e7	                            mov rdi, r12	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_191
0x400c9e0	      0xe800000000	                          call 0x400c9e5	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_191
0x400c9e5	            0x85c0	                           test eax, eax	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_191
0x400c9e7	            0x7419	                            je 0x400ca02	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_191
0x400c9e9	          0x4c89e7	                            mov rdi, r12	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_192
0x400c9ec	      0xe800000000	                          call 0x400c9f1	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_192
0x400c9f1	        0x48894378	             mov qword [rbx + 0x78], rax	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_192
0x400c9f5	    0xc74424300100	               mov dword [rsp + 0x30], 1	      8053	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0x400c9fd	      0xe99b030000	                           jmp 0x400cd9d	      8053	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0x400ca02	    0x48c743780000	               mov qword [rbx + 0x78], 0	      8052	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0x400ca0a	    0xc74424300100	               mov dword [rsp + 0x30], 1	      8053	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0x400ca12	      0xe986030000	                           jmp 0x400cd9d	      8053	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0x400ca17	      0xbf00000000	                              mov edi, 0	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0x400ca1c	      0xb906000000	                              mov ecx, 6	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0x400ca21	      0x488b742408	                mov rsi, qword [rsp + 8]	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0x400ca26	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0x400ca28	           0xf97c2	                                 seta dl	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0x400ca2b	           0xf92c0	                                 setb al	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0x400ca2e	            0x38c2	                              cmp dl, al	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0x400ca30	     0xf85d6000000	                           jne 0x400cb0c	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0x400ca36	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0x400ca3b	    0x48031d000000	             add rbx, qword [0x0400ca42]	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0x400ca42	      0x837c240400	                  cmp dword [rsp + 4], 0	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0x400ca47	            0x740e	                            je 0x400ca57	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0x400ca49	    0xf6838c000000	               test byte [rbx + 0x8c], 4	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0x400ca50	            0x740c	                            je 0x400ca5e	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0x400ca52	      0xe9da050000	                           jmp 0x400d031	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0x400ca57	    0x838b8c000000	                or dword [rbx + 0x8c], 4	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0x400ca5e	          0x4c89e7	                            mov rdi, r12	      8091	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_197
0x400ca61	      0xe800000000	                          call 0x400ca66	      8091	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_197
0x400ca66	          0x4889c5	                            mov rbp, rax	      8091	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_197
0x400ca69	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0x400ca6f	            0x751e	                           jne 0x400ca8f	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0x400ca71	      0xbe00000000	                              mov esi, 0	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0x400ca76	          0x4c89e7	                            mov rdi, r12	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0x400ca79	      0xe800000000	                          call 0x400ca7e	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0x400ca7e	            0x85c0	                           test eax, eax	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0x400ca80	            0x740d	                            je 0x400ca8f	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0x400ca82	    0x833d00000000	               cmp dword [0x0400ca89], 0	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0x400ca89	     0xf850e030000	                           jne 0x400cd9d	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0x400ca8f	    0x488b05000000	            mov rax, qword [0x0400ca96] 	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0x400ca96	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0x400ca9b	      0x48896c1050	       mov qword [rax + rdx + 0x50], rbp	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0x400caa0	    0x488bab800000	            mov rbp, qword [rbx + 0x80] 	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0x400caa7	          0x4885ed	                           test rbp, rbp	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0x400caaa	            0x7413	                            je 0x400cabf	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0x400caac	          0x4c89e6	                            mov rsi, r12	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0x400caaf	          0x4889ef	                            mov rdi, rbp	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0x400cab2	      0xe800000000	                          call 0x400cab7	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0x400cab7	            0x85c0	                           test eax, eax	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0x400cab9	     0xf84de020000	                            je 0x400cd9d	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0x400cabf	          0x4889ef	                            mov rdi, rbp	      8098	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_201
0x400cac2	      0xe800000000	                          call 0x400cac7	      8098	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_201
0x400cac7	      0xbe00000000	                              mov esi, 0	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_202
0x400cacc	          0x4c89e7	                            mov rdi, r12	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_202
0x400cacf	      0xe800000000	                          call 0x400cad4	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_202
0x400cad4	            0x85c0	                           test eax, eax	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_202
0x400cad6	            0x741c	                            je 0x400caf4	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_202
0x400cad8	          0x4c89e7	                            mov rdi, r12	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_203
0x400cadb	      0xe800000000	                          call 0x400cae0	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_203
0x400cae0	    0x488983800000	             mov qword [rbx + 0x80], rax	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_203
0x400cae7	    0xc74424300100	               mov dword [rsp + 0x30], 1	      8103	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0x400caef	      0xe9a9020000	                           jmp 0x400cd9d	      8103	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0x400caf4	    0x48c783800000	               mov qword [rbx + 0x80], 0	      8102	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0x400caff	    0xc74424300100	               mov dword [rsp + 0x30], 1	      8103	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0x400cb07	      0xe991020000	                           jmp 0x400cd9d	      8103	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0x400cb0c	      0xbe00000000	                              mov esi, 0	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0x400cb11	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0x400cb16	          0x4889df	                            mov rdi, rbx	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0x400cb19	      0xe800000000	                          call 0x400cb1e	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0x400cb1e	            0x85c0	                           test eax, eax	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0x400cb20	            0x7415	                            je 0x400cb37	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0x400cb22	      0xbe00000000	                              mov esi, 0	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0x400cb27	          0x4889df	                            mov rdi, rbx	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0x400cb2a	      0xe800000000	                          call 0x400cb2f	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0x400cb2f	            0x85c0	                           test eax, eax	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0x400cb31	     0xf8545020000	                           jne 0x400cd7c	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0x400cb37	      0x837c240400	                  cmp dword [rsp + 4], 0	      8116	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400cb3c	            0x7513	                           jne 0x400cb51	      8116	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400cb3e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0x400cb43	    0x480305000000	             add rax, qword [0x0400cb4a]	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0x400cb4a	    0x83888c000000	                or dword [rax + 0x8c], 1	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0x400cb51	      0xba02000000	                              mov edx, 2	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0x400cb56	      0xbe00000000	                              mov esi, 0	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0x400cb5b	          0x4c89e7	                            mov rdi, r12	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0x400cb5e	      0xe800000000	                          call 0x400cb63	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0x400cb63	            0x85c0	                           test eax, eax	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0x400cb65	     0xf8507010000	                           jne 0x400cc72	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0x400cb6b	    0xc68424f00000	                mov byte [rsp + 0xf0], 0	      8126	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111
0x400cb73	      0xbd00000000	                              mov ebp, 0	      8125	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111
0x400cb78	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cb7f	    0x41be00000000	                             mov r14d, 0	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cb85	      0xe9c2000000	                           jmp 0x400cc4c	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400cb8a	          0x83c601	                              add esi, 1	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cb8d	          0x8d042e	                    lea eax, [rsi + rbp]	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cb90	            0x89c2	                            mov edx, eax	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cb92	            0x4898	                                    cdqe	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cb94	        0x498d1c04	                    lea rbx, [r12 + rax]	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cb98	           0xfb603	                   movzx eax, byte [rbx]	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cb9b	            0x84c0	                             test al, al	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cb9d	            0x7404	                            je 0x400cba3	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cb9f	            0x3c2c	                            cmp al, 0x2c	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cba1	            0x75e7	                           jne 0x400cb8a	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cba3	            0x89d5	                            mov ebp, edx	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cba5	      0xe800000000	                          call 0x400cbaa	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_208
0x400cbaa	          0x4989c7	                            mov r15, rax	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_208
0x400cbad	          0x4885c0	                           test rax, rax	      8134	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_112
0x400cbb0	     0xf844f020000	                            je 0x400ce05	      8134	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_112
0x400cbb6	          0x4889c7	                            mov rdi, rax	      8140	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_209
0x400cbb9	      0xe800000000	                          call 0x400cbbe	      8140	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_209
0x400cbbe	      0x4889442448	             mov qword [rsp + 0x48], rax	      8140	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_209
0x400cbc3	          0x4c89ff	                            mov rdi, r15	      8141	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_210
0x400cbc6	      0xe800000000	                          call 0x400cbcb	      8141	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_210
0x400cbcb	    0x48837c244800	               cmp qword [rsp + 0x48], 0	      8142	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_113
0x400cbd1	            0x7509	                           jne 0x400cbdc	      8142	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_113
0x400cbd3	    0x48c744244800	               mov qword [rsp + 0x48], 0	      8143	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_113
0x400cbdc	          0x4c89e9	                            mov rcx, r13	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cbdf	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cbe7	          0x4489f0	                           mov eax, r14d	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cbea	            0xf2ae	              repne scasb al, byte [rdi]	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cbec	          0x4889ca	                            mov rdx, rcx	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cbef	          0x48f7d2	                                 not rdx	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cbf2	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cbf7	          0x4c89e9	                            mov rcx, r13	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cbfa	          0x4889f7	                            mov rdi, rsi	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cbfd	            0xf2ae	              repne scasb al, byte [rdi]	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cbff	          0x48f7d1	                                 not rcx	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cc02	        0x8d4411fe	                lea eax, [rcx + rdx - 2]	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cc06	          0x83f862	                           cmp eax, 0x62	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cc09	            0x7e24	                           jle 0x400cc2f	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0x400cc0b	      0xba05000000	                              mov edx, 5	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0x400cc10	      0xbe00000000	                              mov esi, 0	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0x400cc15	      0xbf00000000	                              mov edi, 0	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0x400cc1a	      0xe800000000	                          call 0x400cc1f	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0x400cc1f	          0x4c89e6	                            mov rsi, r12	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0x400cc22	          0x4889c7	                            mov rdi, rax	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0x400cc25	      0xe800000000	                          call 0x400cc2a	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0x400cc2a	      0xe9d6010000	                           jmp 0x400ce05	      8150	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114
0x400cc2f	      0xba64000000	                           mov edx, 0x64	       148	string3.h	FUNCTION_200	CALL_3
0x400cc34	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       148	string3.h	FUNCTION_200	CALL_3
0x400cc3c	      0xe800000000	                          call 0x400cc41	       148	string3.h	FUNCTION_200	CALL_3
0x400cc41	          0x803b2c	                    cmp byte [rbx], 0x2c	      8157	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400cc44	           0xf94c0	                                 sete al	      8157	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400cc47	           0xfb6c0	                           movzx eax, al	      8157	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400cc4a	             0x1c5	                            add ebp, eax	      8157	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400cc4c	          0x4863fd	                         movsxd rdi, ebp	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400cc4f	          0x4c01e7	                            add rdi, r12	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400cc52	           0xfb607	                   movzx eax, byte [rdi]	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400cc55	            0x84c0	                             test al, al	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400cc57	     0xf848f000000	                            je 0x400ccec	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400cc5d	      0xbe00000000	                              mov esi, 0	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cc62	          0x4889fb	                            mov rbx, rdi	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cc65	            0x3c2c	                            cmp al, 0x2c	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cc67	     0xf8438ffffff	                            je 0x400cba5	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cc6d	      0xe918ffffff	                           jmp 0x400cb8a	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400cc72	      0x4c89642448	             mov qword [rsp + 0x48], r12	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400cc77	      0x41803c2400	                       cmp byte [r12], 0	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400cc7c	            0x745e	                            je 0x400ccdc	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400cc7e	      0xbb00000000	                              mov ebx, 0	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400cc83	          0x4863f3	                         movsxd rsi, ebx	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0x400cc86	    0x488d8424f000	                   lea rax, [rsp + 0xf0]	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0x400cc8e	          0x4801c6	                            add rsi, rax	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0x400cc91	      0xb900000000	                              mov ecx, 0	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0x400cc96	      0xba00000000	                              mov edx, 0	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0x400cc9b	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0x400cca0	      0xe800000000	                          call 0x400cca5	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0x400cca5	            0x85c0	                           test eax, eax	      8168	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0x400cca7	            0x7e04	                           jle 0x400ccad	      8168	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0x400cca9	             0x1c3	                            add ebx, eax	      8169	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0x400ccab	            0xeb1e	                           jmp 0x400cccb	      8169	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0x400ccad	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400ccb2	        0x488d5001	                      lea rdx, [rax + 1]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400ccb6	      0x4889542448	             mov qword [rsp + 0x48], rdx	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400ccbb	           0xfb610	                   movzx edx, byte [rax]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400ccbe	          0x4863c3	                         movsxd rax, ebx	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400ccc1	    0x889404f00000	         mov byte [rsp + rax + 0xf0], dl	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400ccc8	          0x8d5b01	                      lea ebx, [rbx + 1]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400cccb	          0x83fb5d	                           cmp ebx, 0x5d	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400ccce	            0x7f11	                            jg 0x400cce1	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400ccd0	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400ccd5	          0x803800	                       cmp byte [rax], 0	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400ccd8	            0x75a9	                           jne 0x400cc83	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400ccda	            0xeb05	                           jmp 0x400cce1	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400ccdc	      0xbb00000000	                              mov ebx, 0	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400cce1	          0x4863db	                         movsxd rbx, ebx	      8173	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33
0x400cce4	    0xc6841cf00000	          mov byte [rsp + rbx + 0xf0], 0	      8173	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33
0x400ccec	      0xbe00000000	                              mov esi, 0	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_217
0x400ccf1	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_217
0x400ccf9	      0xe800000000	                          call 0x400ccfe	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_217
0x400ccfe	            0x85c0	                           test eax, eax	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_217
0x400cd00	            0x750b	                           jne 0x400cd0d	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_217
0x400cd02	    0x48c744244800	               mov qword [rsp + 0x48], 0	      8179	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118
0x400cd0b	            0xeb12	                           jmp 0x400cd1f	      8179	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118
0x400cd0d	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	      8181	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_218
0x400cd15	      0xe800000000	                          call 0x400cd1a	      8181	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_218
0x400cd1a	      0x4889442448	             mov qword [rsp + 0x48], rax	      8181	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_218
0x400cd1f	      0x488b442408	                mov rax, qword [rsp + 8]	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400cd24	        0x80780241	                cmp byte [rax + 2], 0x41	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400cd28	            0x7529	                           jne 0x400cd53	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400cd2a	    0x488b05000000	            mov rax, qword [0x0400cd31] 	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0x400cd31	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0x400cd36	      0x488b7c1818	      mov rdi, qword [rax + rbx + 0x18] 	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0x400cd3b	      0xe800000000	                          call 0x400cd40	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0x400cd40	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0x400cd45	    0x488b05000000	            mov rax, qword [0x0400cd4c] 	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0x400cd4c	      0x4889541818	       mov qword [rax + rbx + 0x18], rdx	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0x400cd51	            0xeb4a	                           jmp 0x400cd9d	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0x400cd53	    0x488b05000000	            mov rax, qword [0x0400cd5a] 	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0x400cd5a	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0x400cd5f	      0x488b7c1820	      mov rdi, qword [rax + rbx + 0x20] 	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0x400cd64	      0xe800000000	                          call 0x400cd69	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0x400cd69	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0x400cd6e	    0x488b05000000	            mov rax, qword [0x0400cd75] 	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0x400cd75	      0x4889541820	       mov qword [rax + rbx + 0x20], rdx	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0x400cd7a	            0xeb21	                           jmp 0x400cd9d	      8112	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109
0x400cd7c	      0xba05000000	                              mov edx, 5	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0x400cd81	      0xbe00000000	                              mov esi, 0	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0x400cd86	      0xbf00000000	                              mov edi, 0	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0x400cd8b	      0xe800000000	                          call 0x400cd90	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0x400cd90	          0x4c89fe	                            mov rsi, r15	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0x400cd93	          0x4889c7	                            mov rdi, rax	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0x400cd96	      0xe800000000	                          call 0x400cd9b	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0x400cd9b	            0xeb68	                           jmp 0x400ce05	      8197	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37
0x400cd9d	    0x488b05000000	            mov rax, qword [0x0400cda4] 	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0x400cda4	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0x400cda9	    0xc74410100000	         mov dword [rax + rdx + 0x10], 0	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0x400cdb1	      0x837c240400	                  cmp dword [rsp + 4], 0	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0x400cdb6	            0x7416	                            je 0x400cdce	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0x400cdb8	    0x488b05000000	            mov rax, qword [0x0400cdbf] 	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0x400cdbf	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0x400cdc4	    0xf684108c0000	        test byte [rax + rdx + 0x8c], 8 	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0x400cdcc	            0x7517	                           jne 0x400cde5	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0x400cdce	    0x488b05000000	            mov rax, qword [0x0400cdd5] 	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0x400cdd5	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0x400cdda	    0xc78410880000	         mov dword [rax + rdx + 0x88], 0	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0x400cde5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8210	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_230
0x400cdea	      0xe800000000	                          call 0x400cdef	      8210	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_230
0x400cdef	          0x4989c7	                            mov r15, rax	      8210	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_230
0x400cdf2	        0x410fb63f	                   movzx edi, byte [r15]	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0x400cdf6	      0xe800000000	                          call 0x400cdfb	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0x400cdfb	            0x85c0	                           test eax, eax	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0x400cdfd	     0xf8487f1ffff	                            je 0x400bf8a	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0x400ce03	            0xeb77	                           jmp 0x400ce7c	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0x400ce05	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      8216	syntax.c	FUNCTION_116	IF_121
0x400ce09	    0x3b0500000000	            cmp eax, dword [0x0400ce0f] 	      8216	syntax.c	FUNCTION_116	IF_121
0x400ce0f	            0x756b	                           jne 0x400ce7c	      8216	syntax.c	FUNCTION_116	IF_121
0x400ce11	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      9805	syntax.c	FUNCTION_155
0x400ce15	          0x83e802	                              sub eax, 2	      9805	syntax.c	FUNCTION_155
0x400ce18	    0x890500000000	            mov dword [0x0400ce1e], eax 	      9805	syntax.c	FUNCTION_155
0x400ce1e	    0x488b05000000	            mov rax, qword [0x0400ce25] 	      9806	syntax.c	FUNCTION_155	CALL_2
0x400ce25	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      9806	syntax.c	FUNCTION_155	CALL_2
0x400ce2a	    0x488bbc1068ff	       mov rdi, qword [rax + rdx - 0x98]	      9806	syntax.c	FUNCTION_155	CALL_2
0x400ce32	      0xe800000000	                          call 0x400ce37	      9806	syntax.c	FUNCTION_155	CALL_2
0x400ce37	    0x486305000000	         movsxd rax, dword [0x0400ce3e] 	      9807	syntax.c	FUNCTION_155	CALL_4
0x400ce3e	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9807	syntax.c	FUNCTION_155	CALL_4
0x400ce42	        0x488d0450	                  lea rax, [rax + rdx*2]	      9807	syntax.c	FUNCTION_155	CALL_4
0x400ce46	        0x48c1e003	                              shl rax, 3	      9807	syntax.c	FUNCTION_155	CALL_4
0x400ce4a	    0x480305000000	             add rax, qword [0x0400ce51]	      9807	syntax.c	FUNCTION_155	CALL_4
0x400ce51	        0x488b7808	                mov rdi, qword [rax + 8]	      9807	syntax.c	FUNCTION_155	CALL_4
0x400ce55	      0xe800000000	                          call 0x400ce5a	      9807	syntax.c	FUNCTION_155	CALL_4
0x400ce5a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8273	syntax.c	FUNCTION_116	CALL_245
0x400ce5f	      0xe800000000	                          call 0x400ce64	      8273	syntax.c	FUNCTION_116	CALL_245
0x400ce64	          0x4c89e7	                            mov rdi, r12	      8274	syntax.c	FUNCTION_116	CALL_246
0x400ce67	      0xe800000000	                          call 0x400ce6c	      8274	syntax.c	FUNCTION_116	CALL_246
0x400ce6c	      0x837c243000	               cmp dword [rsp + 0x30], 0	      8278	syntax.c	FUNCTION_116	IF_131
0x400ce71	     0xf85ef000000	                           jne 0x400cf66	      8278	syntax.c	FUNCTION_116	IF_131
0x400ce77	      0xe941020000	                           jmp 0x400d0bd	      8278	syntax.c	FUNCTION_116	IF_131
0x400ce7c	      0x837c243800	               cmp dword [rsp + 0x38], 0	      8220	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ce81	     0xf8483000000	                            je 0x400cf0a	      8220	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ce87	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0x400ce8c	    0x480305000000	             add rax, qword [0x0400ce93]	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0x400ce93	    0xc74028000000	               mov dword [rax + 0x28], 0	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0x400ce9a	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0x400cea1	    0xc74068000000	               mov dword [rax + 0x68], 0	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0x400cea8	    0x833d00000000	               cmp dword [0x0400ceaf], 0	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400ceaf	            0x750d	                           jne 0x400cebe	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400ceb1	    0x833d00000000	               cmp dword [0x0400ceb8], 0	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400ceb8	     0xf84bf010000	                            je 0x400d07d	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400cebe	      0xe800000000	                          call 0x400cec3	      8234	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123	CALL_235
0x400cec3	      0xbf28000000	                           mov edi, 0x28	      8236	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123	CALL_236
0x400cec8	      0xe800000000	                          call 0x400cecd	      8236	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123	CALL_236
0x400cecd	    0x8b1500000000	            mov edx, dword [0x0400ced3] 	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x400ced3	    0x488b05000000	            mov rax, qword [0x0400ceda] 	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x400ceda	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x400cedf	    0x899430900000	       mov dword [rax + rsi + 0x90], edx	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x400cee6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8273	syntax.c	FUNCTION_116	CALL_245
0x400ceeb	      0xe800000000	                          call 0x400cef0	      8273	syntax.c	FUNCTION_116	CALL_245
0x400cef0	          0x4c89e7	                            mov rdi, r12	      8274	syntax.c	FUNCTION_116	CALL_246
0x400cef3	      0xe800000000	                          call 0x400cef8	      8274	syntax.c	FUNCTION_116	CALL_246
0x400cef8	      0x837c243000	               cmp dword [rsp + 0x30], 0	      8278	syntax.c	FUNCTION_116	IF_131
0x400cefd	     0xf85dd010000	                           jne 0x400d0e0	      8278	syntax.c	FUNCTION_116	IF_131
0x400cf03	      0xbb01000000	                              mov ebx, 1	      8235	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400cf08	            0xeb31	                           jmp 0x400cf3b	      8235	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400cf0a	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	      8241	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400cf0f	            0x741c	                            je 0x400cf2d	      8241	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400cf11	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400cf16	    0x480305000000	             add rax, qword [0x0400cf1d]	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400cf1d	          0x8b7038	            mov esi, dword [rax + 0x38] 	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_237
0x400cf20	          0x8b7834	            mov edi, dword [rax + 0x34] 	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_237
0x400cf23	      0xe800000000	                          call 0x400cf28	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_237
0x400cf28	      0xe950010000	                           jmp 0x400d07d	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_237
0x400cf2d	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      8267	syntax.c	FUNCTION_116	ELSE_38	CALL_243
0x400cf31	      0xe8cd78ffff	                    call sym.set_hl_attr	      8267	syntax.c	FUNCTION_116	ELSE_38	CALL_243
0x400cf36	      0xe942010000	                           jmp 0x400d07d	      8267	syntax.c	FUNCTION_116	ELSE_38	CALL_243
0x400cf3b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400cf40	    0x48033d000000	             add rdi, qword [0x0400cf47]	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400cf47	      0xba98000000	                           mov edx, 0x98	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400cf4c	      0x488d742450	                   lea rsi, [rsp + 0x50]	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400cf51	      0xe800000000	                          call 0x400cf56	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400cf56	            0x85c0	                           test eax, eax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400cf58	     0xf8482010000	                            je 0x400d0e0	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400cf5e	            0x85db	                           test ebx, ebx	      8281	syntax.c	FUNCTION_116	IF_131
0x400cf60	     0xf857a010000	                           jne 0x400d0e0	      8281	syntax.c	FUNCTION_116	IF_131
0x400cf66	    0x833d00000000	               cmp dword [0x0400cf6d], 0	      8288	syntax.c	FUNCTION_116	IF_131	IF_132
0x400cf6d	            0x750a	                           jne 0x400cf79	      8288	syntax.c	FUNCTION_116	IF_131	IF_132
0x400cf6f	      0xbf28000000	                           mov edi, 0x28	      8289	syntax.c	FUNCTION_116	IF_131	CALL_249
0x400cf74	      0xe800000000	                          call 0x400cf79	      8289	syntax.c	FUNCTION_116	IF_131	CALL_249
0x400cf79	    0xc70500000000	               mov dword [0x0400cf83], 1	      8290	syntax.c	FUNCTION_116	IF_131
0x400cf83	      0xe958010000	                           jmp 0x400d0e0	      8290	syntax.c	FUNCTION_116	IF_131
0x400cf88	          0x4863ed	                         movsxd rbp, ebp	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400cf8b	      0x488d44ed00	                  lea rax, [rbp + rbp*8]	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400cf90	      0x488d544500	                  lea rdx, [rbp + rax*2]	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400cf95	    0x488b05000000	            mov rax, qword [0x0400cf9c] 	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400cf9c	    0x488d84d068ff	           lea rax, [rax + rdx*8 - 0x98]	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400cfa4	    0x4439a8880000	           cmp dword [rax + 0x88], r13d 	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400cfab	     0xf8512eeffff	                           jne 0x400bdc3	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400cfb1	      0xba00000000	                              mov edx, 0	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400cfb6	      0xe9e5edffff	                           jmp 0x400bda0	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400cfbb	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      7629	syntax.c	FUNCTION_116	IF_28	CALL_71
0x400cfbf	      0xe8305effff	                call sym.highlight_clear	      7629	syntax.c	FUNCTION_116	IF_28	CALL_71
0x400cfc4	            0x85ed	                           test ebp, ebp	      7634	syntax.c	FUNCTION_116	IF_30
0x400cfc6	     0xf85a2efffff	                           jne 0x400bf6e	      7634	syntax.c	FUNCTION_116	IF_30
0x400cfcc	    0xc74424300000	               mov dword [rsp + 0x30], 0	      7378	syntax.c	FUNCTION_116
0x400cfd4	    0x41bc00000000	                             mov r12d, 0	      7370	syntax.c	FUNCTION_116
0x400cfda	    0x48c744240800	                  mov qword [rsp + 8], 0	      7370	syntax.c	FUNCTION_116
0x400cfe3	      0xe994feffff	                           jmp 0x400ce7c	      7370	syntax.c	FUNCTION_116
0x400cfe8	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      7629	syntax.c	FUNCTION_116	IF_28	CALL_71
0x400cfec	      0xe8035effff	                call sym.highlight_clear	      7629	syntax.c	FUNCTION_116	IF_28	CALL_71
0x400cff1	    0x488b05000000	            mov rax, qword [0x0400cff8] 	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0x400cff8	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0x400cffd	    0xc784108c0000	         mov dword [rax + rdx + 0x8c], 0	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0x400d008	      0xe961efffff	                           jmp 0x400bf6e	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0x400d00d	      0xba05000000	                              mov edx, 5	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0x400d012	      0xbe00000000	                              mov esi, 0	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0x400d017	      0xbf00000000	                              mov edi, 0	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0x400d01c	      0xe800000000	                          call 0x400d021	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0x400d021	          0x4c89e6	                            mov rsi, r12	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0x400d024	          0x4889c7	                            mov rdi, rax	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0x400d027	      0xe800000000	                          call 0x400d02c	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0x400d02c	      0xe9d4fdffff	                           jmp 0x400ce05	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0x400d031	    0x488b05000000	            mov rax, qword [0x0400d038] 	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0x400d038	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0x400d03d	    0xc74410100000	         mov dword [rax + rdx + 0x10], 0	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0x400d045	      0xe96efdffff	                           jmp 0x400cdb8	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0x400d04a	          0x4863ed	                         movsxd rbp, ebp	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400d04d	      0x488d44ed00	                  lea rax, [rbp + rbp*8]	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400d052	      0x488d544500	                  lea rdx, [rbp + rax*2]	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400d057	    0x488b05000000	            mov rax, qword [0x0400d05e] 	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400d05e	    0x488d84d068ff	           lea rax, [rax + rdx*8 - 0x98]	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400d066	      0xba01000000	                              mov edx, 1	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400d06b	    0x4439a8880000	           cmp dword [rax + 0x88], r13d 	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400d072	     0xf8428edffff	                            je 0x400bda0	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400d078	      0xe93fedffff	                           jmp 0x400bdbc	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0x400d07d	    0x8b1500000000	            mov edx, dword [0x0400d083] 	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x400d083	    0x488b05000000	            mov rax, qword [0x0400d08a] 	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x400d08a	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x400d08f	    0x899430900000	       mov dword [rax + rsi + 0x90], edx	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x400d096	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8273	syntax.c	FUNCTION_116	CALL_245
0x400d09b	      0xe800000000	                          call 0x400d0a0	      8273	syntax.c	FUNCTION_116	CALL_245
0x400d0a0	          0x4c89e7	                            mov rdi, r12	      8274	syntax.c	FUNCTION_116	CALL_246
0x400d0a3	      0xe800000000	                          call 0x400d0a8	      8274	syntax.c	FUNCTION_116	CALL_246
0x400d0a8	      0xbb00000000	                              mov ebx, 0	      8278	syntax.c	FUNCTION_116	IF_131
0x400d0ad	      0x837c243000	               cmp dword [rsp + 0x30], 0	      8278	syntax.c	FUNCTION_116	IF_131
0x400d0b2	     0xf8483feffff	                            je 0x400cf3b	      8278	syntax.c	FUNCTION_116	IF_131
0x400d0b8	      0xe9a9feffff	                           jmp 0x400cf66	      8278	syntax.c	FUNCTION_116	IF_131
0x400d0bd	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400d0c2	    0x48033d000000	             add rdi, qword [0x0400d0c9]	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400d0c9	      0xba98000000	                           mov edx, 0x98	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400d0ce	      0x488d742450	                   lea rsi, [rsp + 0x50]	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400d0d3	      0xe800000000	                          call 0x400d0d8	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400d0d8	            0x85c0	                           test eax, eax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400d0da	     0xf8586feffff	                           jne 0x400cf66	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x400d0e0	    0x488b84245801	           mov rax, qword [rsp + 0x158] 	      8292	syntax.c	FUNCTION_116
0x400d0e8	    0x644833042528	                xor rax, qword fs:[0x28]	      8292	syntax.c	FUNCTION_116
0x400d0f1	            0x7405	                            je 0x400d0f8	      8292	syntax.c	FUNCTION_116
0x400d0f3	      0xe800000000	                          call 0x400d0f8	      8292	syntax.c	FUNCTION_116
0x400d0f8	    0x4881c4680100	                          add rsp, 0x168	      8292	syntax.c	FUNCTION_116
0x400d0ff	              0x5b	                                 pop rbx	      8292	syntax.c	FUNCTION_116
0x400d100	              0x5d	                                 pop rbp	      8292	syntax.c	FUNCTION_116
0x400d101	            0x415c	                                 pop r12	      8292	syntax.c	FUNCTION_116
0x400d103	            0x415d	                                 pop r13	      8292	syntax.c	FUNCTION_116
0x400d105	            0x415e	                                 pop r14	      8292	syntax.c	FUNCTION_116
0x400d107	            0x415f	                                 pop r15	      8292	syntax.c	FUNCTION_116
0x400d109	              0xc3	                                     ret	      8292	syntax.c	FUNCTION_116
syn_cmd_manual	IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	5
0x4003067	        0x4883ec08	                              sub rsp, 8	      3901	syntax.c	FUNCTION_60
0x400306b	      0xbe00000000	                              mov esi, 0	      3902	syntax.c	FUNCTION_60	CALL_1
0x4003070	      0xe857ffffff	                  call sym.syn_cmd_onoff	      3902	syntax.c	FUNCTION_60	CALL_1
0x4003075	        0x4883c408	                              add rsp, 8	      3903	syntax.c	FUNCTION_60
0x4003079	              0xc3	                                     ret	      3903	syntax.c	FUNCTION_60
set_context_in_highlight_cmd	IF,8:CALL,11:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	142
0x400d2ad	            0x4157	                                push r15	     10228	syntax.c	FUNCTION_164
0x400d2af	            0x4156	                                push r14	     10228	syntax.c	FUNCTION_164
0x400d2b1	            0x4155	                                push r13	     10228	syntax.c	FUNCTION_164
0x400d2b3	            0x4154	                                push r12	     10228	syntax.c	FUNCTION_164
0x400d2b5	              0x55	                                push rbp	     10228	syntax.c	FUNCTION_164
0x400d2b6	              0x53	                                push rbx	     10228	syntax.c	FUNCTION_164
0x400d2b7	        0x4883ec08	                              sub rsp, 8	     10228	syntax.c	FUNCTION_164
0x400d2bb	          0x4889fd	                            mov rbp, rdi	     10228	syntax.c	FUNCTION_164
0x400d2be	    0xc7070d000000	                    mov dword [rdi], 0xd	     10232	syntax.c	FUNCTION_164
0x400d2c4	        0x48897708	                mov qword [rdi + 8], rsi	     10233	syntax.c	FUNCTION_164
0x400d2c8	    0xc70500000000	               mov dword [0x0400d2d2], 2	     10234	syntax.c	FUNCTION_164
0x400d2d2	    0xc70500000000	               mov dword [0x0400d2dc], 1	     10235	syntax.c	FUNCTION_164
0x400d2dc	          0x803e00	                       cmp byte [rsi], 0	     10238	syntax.c	FUNCTION_164	IF_1
0x400d2df	     0xf84d8010000	                            je 0x400d4bd	     10238	syntax.c	FUNCTION_164	IF_1
0x400d2e5	          0x4889f3	                            mov rbx, rsi	     10238	syntax.c	FUNCTION_164	IF_1
0x400d2e8	          0x4889f7	                            mov rdi, rsi	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x400d2eb	      0xe800000000	                          call 0x400d2f0	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x400d2f0	          0x4989c4	                            mov r12, rax	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x400d2f3	          0x803800	                       cmp byte [rax], 0	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x400d2f6	     0xf84c1010000	                            je 0x400d4bd	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x400d2fc	    0xc70500000000	               mov dword [0x0400d306], 0	     10243	syntax.c	FUNCTION_164	IF_1	IF_2
0x400d306	          0x4889c1	                            mov rcx, rax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d309	          0x4829d9	                            sub rcx, rbx	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d30c	        0x4883f908	                              cmp rcx, 8	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d310	      0xb808000000	                              mov eax, 8	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d315	        0x480f4fc8	                          cmovg rcx, rax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d319	      0xbe00000000	                              mov esi, 0	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d31e	          0x4839c9	                            cmp rcx, rcx	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d321	          0x4889df	                            mov rdi, rbx	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d324	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d326	           0xf97c2	                                 seta dl	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d329	           0xf92c0	                                 setb al	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d32c	            0x38c2	                              cmp dl, al	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d32e	            0x7523	                           jne 0x400d353	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400d330	          0x4c89e7	                            mov rdi, r12	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x400d333	      0xe800000000	                          call 0x400d338	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x400d338	          0x4889c3	                            mov rbx, rax	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x400d33b	        0x48894508	                mov qword [rbp + 8], rax	     10247	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3
0x400d33f	          0x4889c7	                            mov rdi, rax	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x400d342	      0xe800000000	                          call 0x400d347	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x400d347	          0x4989c4	                            mov r12, rax	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x400d34a	          0x803800	                       cmp byte [rax], 0	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x400d34d	     0xf846a010000	                            je 0x400d4bd	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x400d353	    0xc70500000000	               mov dword [0x0400d35d], 0	     10252	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x400d35d	          0x4c89e0	                            mov rax, r12	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d360	          0x4829d8	                            sub rax, rbx	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d363	        0x807b0169	                cmp byte [rbx + 1], 0x69	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d367	     0xf85b2000000	                           jne 0x400d41f	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d36d	          0x803b4e	                    cmp byte [rbx], 0x4e	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d370	     0xf85a3000000	                           jne 0x400d419	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d376	            0xeb0e	                           jmp 0x400d386	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d378	        0x4183ed01	                             sub r13d, 1	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d37c	        0x4183ee01	                             sub r14d, 1	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d380	        0x4983ef32	                           sub r15, 0x32	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d384	            0xeb12	                           jmp 0x400d398	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d386	    0x41bfc2010000	                         mov r15d, 0x1c2	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d38c	    0x41be08000000	                             mov r14d, 8	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d392	    0x41bd09000000	                             mov r13d, 9	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400d398	      0xb8e9a28b2e	                     mov eax, 0x2e8ba2e9	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d39d	          0x41f7ed	                               imul r13d	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3a0	            0xd1fa	                              sar edx, 1	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3a2	          0x4489e8	                           mov eax, r13d	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3a5	          0xc1f81f	                           sar eax, 0x1f	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3a8	            0x29c2	                            sub edx, eax	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3aa	          0x4863fa	                         movsxd rdi, edx	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3ad	    0x4881c7000000	                              add rdi, 0	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3b4	    0x8b3500000000	            mov esi, dword [0x0400d3ba] 	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3ba	      0xe800000000	                          call 0x400d3bf	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3bf	      0xe800000000	                          call 0x400d3c4	     10291	syntax.c	FUNCTION_166	CALL_2
0x400d3c4	      0xe800000000	                          call 0x400d3c9	     10292	syntax.c	FUNCTION_166	CALL_3
0x400d3c9	        0x4183fd63	                          cmp r13d, 0x63	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d3cd	     0xf84b0000000	                            je 0x400d483	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d3d3	      0xbe00000000	                              mov esi, 0	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d3d8	          0x4c89ff	                            mov rdi, r15	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d3db	      0xe800000000	                          call 0x400d3e0	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d3e0	          0x4585f6	                         test r14d, r14d	     10281	syntax.c	FUNCTION_165	FOR_1
0x400d3e3	            0x7993	                           jns 0x400d378	     10281	syntax.c	FUNCTION_165	FOR_1
0x400d3e5	    0x41bd28000000	                          mov r13d, 0x28	     10281	syntax.c	FUNCTION_165	FOR_1
0x400d3eb	      0xbe00000000	                              mov esi, 0	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3f0	      0xbf00000000	                              mov edi, 0	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3f5	      0xe800000000	                          call 0x400d3fa	     10290	syntax.c	FUNCTION_166	CALL_1
0x400d3fa	      0xe800000000	                          call 0x400d3ff	     10291	syntax.c	FUNCTION_166	CALL_2
0x400d3ff	      0xe800000000	                          call 0x400d404	     10292	syntax.c	FUNCTION_166	CALL_3
0x400d404	      0xbe00000000	                              mov esi, 0	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d409	      0xbf28000000	                           mov edi, 0x28	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d40e	      0xe800000000	                          call 0x400d413	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d413	        0x4183ed01	                             sub r13d, 1	     10283	syntax.c	FUNCTION_165	FOR_2
0x400d417	            0x75d2	                           jne 0x400d3eb	     10283	syntax.c	FUNCTION_165	FOR_2
0x400d419	          0x4c89e0	                            mov rax, r12	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d41c	          0x4829d8	                            sub rax, rbx	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d41f	        0x4883f805	                              cmp rax, 5	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d423	      0xb905000000	                              mov ecx, 5	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d428	        0x480f4ec8	                         cmovle rcx, rax	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d42c	      0xbe00000000	                              mov esi, 0	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d431	          0x4839c9	                            cmp rcx, rcx	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d434	          0x4889df	                            mov rdi, rbx	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d437	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d439	           0xf97c1	                                 seta cl	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d43c	           0xf92c2	                                 setb dl	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d43f	            0x38d1	                              cmp cl, dl	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d441	            0x7554	                           jne 0x400d497	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400d443	          0x4c89e7	                            mov rdi, r12	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x400d446	      0xe800000000	                          call 0x400d44b	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x400d44b	        0x48894508	                mov qword [rbp + 8], rax	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x400d44f	          0x4889c7	                            mov rdi, rax	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x400d452	      0xe800000000	                          call 0x400d457	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x400d457	          0x803800	                       cmp byte [rax], 0	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x400d45a	            0x7461	                            je 0x400d4bd	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x400d45c	          0x4889c7	                            mov rdi, rax	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x400d45f	      0xe800000000	                          call 0x400d464	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x400d464	        0x48894508	                mov qword [rbp + 8], rax	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x400d468	          0x4889c7	                            mov rdi, rax	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x400d46b	      0xe800000000	                          call 0x400d470	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x400d470	          0x4989c4	                            mov r12, rax	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x400d473	      0x41803c2400	                       cmp byte [r12], 0	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x400d478	            0x7443	                            je 0x400d4bd	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x400d47a	    0xc74500000000	                      mov dword [rbp], 0	     10267	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x400d481	            0xeb3a	                           jmp 0x400d4bd	     10271	syntax.c	FUNCTION_164
0x400d483	      0xbe00000000	                              mov esi, 0	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d488	      0xbf28000000	                           mov edi, 0x28	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d48d	      0xe800000000	                          call 0x400d492	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d492	      0xe9e1feffff	                           jmp 0x400d378	     10293	syntax.c	FUNCTION_166	CALL_4
0x400d497	        0x4883f806	                              cmp rax, 6	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d49b	      0xb906000000	                              mov ecx, 6	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d4a0	        0x480f4ec8	                         cmovle rcx, rax	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d4a4	      0xbe00000000	                              mov esi, 0	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d4a9	          0x4839c9	                            cmp rcx, rcx	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d4ac	          0x4889df	                            mov rdi, rbx	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d4af	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d4b1	           0xf97c2	                                 seta dl	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d4b4	           0xf92c0	                                 setb al	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d4b7	            0x38c2	                              cmp dl, al	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d4b9	            0x7488	                            je 0x400d443	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d4bb	            0xebb6	                           jmp 0x400d473	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400d4bd	        0x4883c408	                              add rsp, 8	     10271	syntax.c	FUNCTION_164
0x400d4c1	              0x5b	                                 pop rbx	     10271	syntax.c	FUNCTION_164
0x400d4c2	              0x5d	                                 pop rbp	     10271	syntax.c	FUNCTION_164
0x400d4c3	            0x415c	                                 pop r12	     10271	syntax.c	FUNCTION_164
0x400d4c5	            0x415d	                                 pop r13	     10271	syntax.c	FUNCTION_164
0x400d4c7	            0x415e	                                 pop r14	     10271	syntax.c	FUNCTION_164
0x400d4c9	            0x415f	                                 pop r15	     10271	syntax.c	FUNCTION_164
0x400d4cb	              0xc3	                                     ret	     10271	syntax.c	FUNCTION_164
syn_stack_find_entry	IF,2:CALL,0:FOR,1:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	24
0x4000040	    0x488b05000000	            mov rax, qword [0x04000047] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4000047	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x400004e	          0x4885c0	                           test rax, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4000051	            0x7434	                            je 0x4000087	      1455	syntax.c	FUNCTION_18	FOR_1
0x4000053	        0x488b5008	                mov rdx, qword [rax + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4000057	          0x4839d7	                            cmp rdi, rdx	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400005a	            0x742b	                            je 0x4000087	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400005c	          0x4839d7	                            cmp rdi, rdx	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400005f	            0x7d13	                           jge 0x4000074	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4000061	            0xeb1b	                           jmp 0x400007e	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4000063	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4000067	          0x4839f9	                            cmp rcx, rdi	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400006a	            0x7418	                            je 0x4000084	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400006c	          0x4839f9	                            cmp rcx, rdi	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400006f	            0x7f16	                            jg 0x4000087	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4000071	          0x4889d0	                            mov rax, rdx	      1455	syntax.c	FUNCTION_18	FOR_1
0x4000074	          0x488b10	                    mov rdx, qword [rax]	      1455	syntax.c	FUNCTION_18	FOR_1
0x4000077	          0x4885d2	                           test rdx, rdx	      1455	syntax.c	FUNCTION_18	FOR_1
0x400007a	            0x75e7	                           jne 0x4000063	      1455	syntax.c	FUNCTION_18	FOR_1
0x400007c	            0xf3c3	                                     ret	      1455	syntax.c	FUNCTION_18	FOR_1
0x400007e	      0xb800000000	                              mov eax, 0	      1454	syntax.c	FUNCTION_18
0x4000083	              0xc3	                                     ret	      1454	syntax.c	FUNCTION_18
0x4000084	          0x4889d0	                            mov rax, rdx	      1455	syntax.c	FUNCTION_18	FOR_1
0x4000087	            0xf3c3	                                     ret	      1463	syntax.c	FUNCTION_18
font_name2handle	IF,1:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	16
0x4002f92	          0x4889fa	                            mov rdx, rdi	      8599	syntax.c	FUNCTION_127
0x4002f95	      0xbf00000000	                              mov edi, 0	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4002f9a	      0xb905000000	                              mov ecx, 5	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4002f9f	          0x4889d6	                            mov rsi, rdx	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4002fa2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4002fa4	        0x400f97c6	                                seta sil	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4002fa8	           0xf92c1	                                 setb cl	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4002fab	      0xb800000000	                              mov eax, 0	      8601	syntax.c	FUNCTION_127	IF_1
0x4002fb0	          0x4038ce	                             cmp sil, cl	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4002fb3	            0x7415	                            je 0x4002fca	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4002fb5	        0x4883ec08	                              sub rsp, 8	      8599	syntax.c	FUNCTION_127
0x4002fb9	          0x4889d7	                            mov rdi, rdx	      8599	syntax.c	FUNCTION_127
0x4002fbc	      0xbe01000000	                              mov esi, 1	      8603	syntax.c	FUNCTION_127	CALL_2
0x4002fc1	      0xe800000000	                          call 0x4002fc6	      8603	syntax.c	FUNCTION_127	CALL_2
0x4002fc6	        0x4883c408	                              add rsp, 8	      8604	syntax.c	FUNCTION_127
0x4002fca	            0xf3c3	                                     ret	      8604	syntax.c	FUNCTION_127
find_endpos	IF,22:CALL,20:FOR,4:ELSE,5:SWITCH,0:WHILE,0:DO,0:functions,0	289
0x4000c98	            0x4157	                                push r15	      2944	syntax.c	FUNCTION_37
0x4000c9a	            0x4156	                                push r14	      2944	syntax.c	FUNCTION_37
0x4000c9c	            0x4155	                                push r13	      2944	syntax.c	FUNCTION_37
0x4000c9e	            0x4154	                                push r12	      2944	syntax.c	FUNCTION_37
0x4000ca0	              0x55	                                push rbp	      2944	syntax.c	FUNCTION_37
0x4000ca1	              0x53	                                push rbx	      2944	syntax.c	FUNCTION_37
0x4000ca2	    0x4881ec280300	                          sub rsp, 0x328	      2944	syntax.c	FUNCTION_37
0x4000ca9	        0x48891424	                    mov qword [rsp], rdx	      2944	syntax.c	FUNCTION_37
0x4000cad	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      2944	syntax.c	FUNCTION_37
0x4000cb2	      0x4c89442418	              mov qword [rsp + 0x18], r8	      2944	syntax.c	FUNCTION_37
0x4000cb7	      0x4c894c2408	                 mov qword [rsp + 8], r9	      2944	syntax.c	FUNCTION_37
0x4000cbc	    0x488b84246003	           mov rax, qword [rsp + 0x360] 	      2944	syntax.c	FUNCTION_37
0x4000cc4	      0x4889442420	             mov qword [rsp + 0x20], rax	      2944	syntax.c	FUNCTION_37
0x4000cc9	    0x488b9c246803	           mov rbx, qword [rsp + 0x368] 	      2944	syntax.c	FUNCTION_37
0x4000cd1	    0x64488b042528	                mov rax, qword fs:[0x28]	      2944	syntax.c	FUNCTION_37
0x4000cda	    0x488984241803	            mov qword [rsp + 0x318], rax	      2944	syntax.c	FUNCTION_37
0x4000ce2	            0x31c0	                            xor eax, eax	      2944	syntax.c	FUNCTION_37
0x4000ce4	            0x85ff	                           test edi, edi	      2957	syntax.c	FUNCTION_37	IF_1
0x4000ce6	     0xf885e040000	                            js 0x400114a	      2957	syntax.c	FUNCTION_37	IF_1
0x4000cec	          0x4989f7	                            mov r15, rsi	      2957	syntax.c	FUNCTION_37	IF_1
0x4000cef	    0x488b05000000	            mov rax, qword [0x04000cf6] 	      2965	syntax.c	FUNCTION_37	CALL_1
0x4000cf6	    0x488b90700200	           mov rdx, qword [rax + 0x270] 	      2965	syntax.c	FUNCTION_37	CALL_1
0x4000cfd	          0x4863c7	                         movsxd rax, edi	      2966	syntax.c	FUNCTION_37	IF_2
0x4000d00	        0x488d0480	                  lea rax, [rax + rax*4]	      2966	syntax.c	FUNCTION_37	IF_2
0x4000d04	        0x48c1e005	                              shl rax, 5	      2966	syntax.c	FUNCTION_37	IF_2
0x4000d08	        0x803c0202	                 cmp byte [rdx + rax], 2	      2966	syntax.c	FUNCTION_37	IF_2
0x4000d0c	            0x7416	                            je 0x4000d24	      2966	syntax.c	FUNCTION_37	IF_2
0x4000d0e	          0x488b06	                    mov rax, qword [rsi]	      2968	syntax.c	FUNCTION_37	IF_2
0x4000d11	        0x488b5608	                mov rdx, qword [rsi + 8]	      2968	syntax.c	FUNCTION_37	IF_2
0x4000d15	          0x488901	                    mov qword [rcx], rax	      2968	syntax.c	FUNCTION_37	IF_2
0x4000d18	        0x48895108	                mov qword [rcx + 8], rdx	      2968	syntax.c	FUNCTION_37	IF_2
0x4000d1c	      0xe929040000	                           jmp 0x400114a	      2969	syntax.c	FUNCTION_37	IF_2
0x4000d21	          0x4489f7	                           mov edi, r14d	      2980	syntax.c	FUNCTION_37	FOR_1
0x4000d24	        0x448d7701	                     lea r14d, [rdi + 1]	      2980	syntax.c	FUNCTION_37	FOR_1
0x4000d28	          0x4963c6	                        movsxd rax, r14d	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4000d2b	        0x4c8d2480	                  lea r12, [rax + rax*4]	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4000d2f	        0x49c1e405	                              shl r12, 5	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4000d33	          0x4901d4	                            add r12, rdx	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4000d36	      0x410fb60424	                   movzx eax, byte [r12]	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4000d3b	            0x3c02	                               cmp al, 2	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4000d3d	            0x74e2	                            je 0x4000d21	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4000d3f	            0x3c04	                               cmp al, 4	      2986	syntax.c	FUNCTION_37	IF_4
0x4000d41	            0x7506	                           jne 0x4000d49	      2986	syntax.c	FUNCTION_37	IF_4
0x4000d43	        0x448d7702	                     lea r14d, [rdi + 2]	      2989	syntax.c	FUNCTION_37	IF_4
0x4000d47	            0xeb06	                           jmp 0x4000d4f	      2989	syntax.c	FUNCTION_37	IF_4
0x4000d49	    0x41bc00000000	                             mov r12d, 0	      2992	syntax.c	FUNCTION_37	ELSE_1
0x4000d4f	    0x488b3d000000	            mov rdi, qword [0x04000d56] 	      2995	syntax.c	FUNCTION_37	CALL_3
0x4000d56	      0xe800000000	                          call 0x4000d5b	      2995	syntax.c	FUNCTION_37	CALL_3
0x4000d5b	          0x4889df	                            mov rdi, rbx	      2996	syntax.c	FUNCTION_37	CALL_4
0x4000d5e	      0xe800000000	                          call 0x4000d63	      2996	syntax.c	FUNCTION_37	CALL_4
0x4000d63	    0x488905000000	            mov qword [0x04000d6a], rax 	      2996	syntax.c	FUNCTION_37	CALL_4
0x4000d6a	        0x458b6f08	               mov r13d, dword [r15 + 8]	      2998	syntax.c	FUNCTION_37
0x4000d6e	    0xc78424b00100	              mov dword [rsp + 0x1b0], 0	      3000	syntax.c	FUNCTION_37
0x4000d79	    0x488dbc24f002	                  lea rdi, [rsp + 0x2f0]	      3003	syntax.c	FUNCTION_37	CALL_5
0x4000d81	      0xe8a0f9ffff	                   call sym.save_chartab	      3003	syntax.c	FUNCTION_37	CALL_5
0x4000d86	          0x4963c6	                        movsxd rax, r14d	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4000d89	        0x488d0480	                  lea rax, [rax + rax*4]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4000d8d	        0x48c1e005	                              shl rax, 5	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4000d91	      0x4889442430	             mov qword [rsp + 0x30], rax	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4000d96	      0x498d442470	                   lea rax, [r12 + 0x70]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4000d9b	      0x4889442438	             mov qword [rsp + 0x38], rax	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4000da0	      0x448974242c	            mov dword [rsp + 0x2c], r14d	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_13
0x4000da5	    0x488b05000000	            mov rax, qword [0x04000dac] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000dac	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000db0	    0x3bb060020000	           cmp esi, dword [rax + 0x260] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000db6	     0xf8d5f030000	                           jge 0x400111b	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000dbc	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4000dc1	    0x480398700200	            add rbx, qword [rax + 0x270]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4000dc8	          0x803b03	                       cmp byte [rbx], 3	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4000dcb	     0xf854a030000	                           jne 0x400111b	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4000dd1	            0x89f5	                            mov ebp, esi	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4000dd3	    0x41beffffffff	                    mov r14d, 0xffffffff	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4000dd9	            0xeb1b	                           jmp 0x4000df6	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4000ddb	          0x4863d5	                         movsxd rdx, ebp	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4000dde	        0x488d1c92	                  lea rbx, [rdx + rdx*4]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4000de2	        0x48c1e305	                              shl rbx, 5	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4000de6	    0x480398700200	            add rbx, qword [rax + 0x270]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4000ded	          0x803b03	                       cmp byte [rbx], 3	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4000df0	     0xf85a7000000	                           jne 0x4000e9d	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4000df6	          0x4489e8	                           mov eax, r13d	      3019	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000df9	          0x2b4320	             sub eax, dword [rbx + 0x20]	      3019	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000dfc	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000dff	    0x899424980100	            mov dword [rsp + 0x198], edx	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000e06	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000e0a	      0x4889542450	             mov qword [rsp + 0x50], rdx	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000e0f	        0x488d4b70	                   lea rcx, [rbx + 0x70]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4000e13	            0x85c0	                           test eax, eax	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4000e15	      0xba00000000	                              mov edx, 0	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4000e1a	           0xf49d0	                         cmovns edx, eax	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4000e1d	          0x498b37	                    mov rsi, qword [r15]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4000e20	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4000e25	      0xe891f9ffff	                    call sym.syn_regexec	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4000e2a	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000e2f	        0x48895368	             mov qword [rbx + 0x68], rdx	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000e33	            0x85c0	                           test eax, eax	      3028	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7
0x4000e35	            0x7450	                            je 0x4000e87	      3028	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7
0x4000e37	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e3b	            0x740d	                            je 0x4000e4a	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e3d	    0x8b8424b00100	           mov eax, dword [rsp + 0x1b0] 	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e44	        0x39442460	            cmp dword [rsp + 0x60], eax 	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e48	            0x7d3d	                           jge 0x4000e87	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e4a	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e4f	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e54	    0x48898424a801	            mov qword [rsp + 0x1a8], rax	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e5c	    0x48899424b001	            mov qword [rsp + 0x1b0], rdx	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e64	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e6c	    0x488b94240001	           mov rdx, qword [rsp + 0x100] 	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e74	    0x488984244802	            mov qword [rsp + 0x248], rax	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e7c	    0x488994245002	            mov qword [rsp + 0x250], rdx	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e84	          0x4189ee	                           mov r14d, ebp	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4000e87	          0x83c501	                              add ebp, 1	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000e8a	    0x488b05000000	            mov rax, qword [0x04000e91] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000e91	    0x39a860020000	           cmp dword [rax + 0x260], ebp 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000e97	     0xf8f3effffff	                            jg 0x4000ddb	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4000e9d	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      3044	syntax.c	FUNCTION_37	FOR_2	IF_9
0x4000ea1	     0xf8474020000	                            je 0x400111b	      3044	syntax.c	FUNCTION_37	FOR_2	IF_9
0x4000ea7	          0x4d85e4	                           test r12, r12	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4000eaa	     0xf84f9000000	                            je 0x4000fa9	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4000eb0	          0x4489e8	                           mov eax, r13d	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4000eb3	      0x412b442420	             sub eax, dword [r12 + 0x20]	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4000eb8	      0x418b54242c	            mov edx, dword [r12 + 0x2c] 	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4000ebd	    0x899424980100	            mov dword [rsp + 0x198], edx	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4000ec4	      0x498b542468	            mov rdx, qword [r12 + 0x68] 	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4000ec9	      0x4889542450	             mov qword [rsp + 0x50], rdx	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4000ece	            0x85c0	                           test eax, eax	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4000ed0	      0xba00000000	                              mov edx, 0	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4000ed5	           0xf49d0	                         cmovns edx, eax	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4000ed8	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4000edd	          0x498b37	                    mov rsi, qword [r15]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4000ee0	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4000ee5	      0xe8d1f8ffff	                    call sym.syn_regexec	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4000eea	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4000eef	      0x4989542468	             mov qword [r12 + 0x68], rdx	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4000ef4	            0x85c0	                           test eax, eax	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4000ef6	     0xf84ad000000	                            je 0x4000fa9	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4000efc	    0x8b8424b00100	           mov eax, dword [rsp + 0x1b0] 	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4000f03	        0x39442460	            cmp dword [rsp + 0x60], eax 	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4000f07	     0xf8f9c000000	                            jg 0x4000fa9	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4000f0d	    0x41b801000000	                              mov r8d, 1	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x4000f13	      0xb901000000	                              mov ecx, 1	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x4000f18	          0x4c89e2	                            mov rdx, r12	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x4000f1b	      0x488d742450	                   lea rsi, [rsp + 0x50]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x4000f20	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x4000f25	      0xe8b8faffff	                call sym.syn_add_end_off	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x4000f2a	          0x498b37	                    mov rsi, qword [r15]	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x4000f2d	      0x4839742440	            cmp qword [rsp + 0x40], rsi 	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x4000f32	     0xf8fe3010000	                            jg 0x400111b	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x4000f38	      0xba00000000	                              mov edx, 0	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x4000f3d	    0x488b3d000000	            mov rdi, qword [0x04000f44] 	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x4000f44	      0xe800000000	                          call 0x4000f49	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x4000f49	          0x4889c7	                            mov rdi, rax	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x4000f4c	      0xb800000000	                              mov eax, 0	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_13
0x4000f51	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_13
0x4000f58	            0xf2ae	              repne scasb al, byte [rdi]	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_13
0x4000f5a	          0x48f7d1	                                 not rcx	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_13
0x4000f5d	        0x4883e901	                              sub rcx, 1	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_13
0x4000f61	            0x89ca	                            mov edx, ecx	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_13
0x4000f63	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4000f67	          0x4139c5	                           cmp r13d, eax	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4000f6a	            0x7c06	                            jl 0x4000f72	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4000f6c	        0x4183c501	                             add r13d, 1	      3081	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4000f70	            0xeb29	                           jmp 0x4000f9b	      3081	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4000f72	    0x448bac240001	          mov r13d, dword [rsp + 0x100] 	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x4000f7a	          0x4439e8	                           cmp eax, r13d	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x4000f7d	            0x7e19	                           jle 0x4000f98	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x4000f7f	          0x4439e9	                           cmp ecx, r13d	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4000f82	     0xf8e93010000	                           jle 0x400111b	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4000f88	        0x4183c501	                             add r13d, 1	      3088	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4000f8c	          0x4439e8	                           cmp eax, r13d	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4000f8f	            0x7e0a	                           jle 0x4000f9b	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4000f91	          0x4439ea	                           cmp edx, r13d	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4000f94	            0x7ff2	                            jg 0x4000f88	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4000f96	            0xeb03	                           jmp 0x4000f9b	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4000f98	          0x4189c5	                           mov r13d, eax	      3083	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x4000f9b	          0x4139cd	                           cmp r13d, ecx	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x4000f9e	     0xf8c01feffff	                            jl 0x4000da5	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x4000fa4	      0xe972010000	                           jmp 0x400111b	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x4000fa9	          0x4489f0	                           mov eax, r14d	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x4000fac	          0x4489f5	                           mov ebp, r14d	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x4000faf	            0x4898	                                    cdqe	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x4000fb1	        0x488d1c80	                  lea rbx, [rax + rax*4]	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x4000fb5	        0x48c1e305	                              shl rbx, 5	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x4000fb9	    0x488b05000000	            mov rax, qword [0x04000fc0] 	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x4000fc0	    0x480398700200	            add rbx, qword [rax + 0x270]	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x4000fc7	    0x41b801000000	                              mov r8d, 1	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x4000fcd	      0xb901000000	                              mov ecx, 1	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x4000fd2	          0x4889da	                            mov rdx, rbx	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x4000fd5	    0x488db424a001	                  lea rsi, [rsp + 0x1a0]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x4000fdd	        0x4c8b3424	                    mov r14, qword [rsp]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x4000fe1	          0x4c89f7	                            mov rdi, r14	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x4000fe4	      0xe8f9f9ffff	                call sym.syn_add_end_off	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x4000fe9	          0x498b37	                    mov rsi, qword [r15]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4000fec	          0x493936	                    cmp qword [r14], rsi	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4000fef	            0x7510	                           jne 0x4001001	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4000ff1	        0x418b4708	                mov eax, dword [r15 + 8]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4000ff5	        0x488b3424	                    mov rsi, qword [rsp]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4000ff9	          0x394608	                cmp dword [rsi + 8], eax	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4000ffc	            0x7d03	                           jge 0x4001001	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4000ffe	          0x894608	                mov dword [rsi + 8], eax	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4001001	    0x41b801000000	                              mov r8d, 1	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x4001007	      0xb903000000	                              mov ecx, 3	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x400100c	          0x4889da	                            mov rdx, rbx	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x400100f	    0x488db424a001	                  lea rsi, [rsp + 0x1a0]	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x4001017	      0x4c8b742408	                mov r14, qword [rsp + 8]	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x400101c	          0x4c89f7	                            mov rdi, r14	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x400101f	      0xe8bef9ffff	                call sym.syn_add_end_off	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x4001024	          0x498b37	                    mov rsi, qword [r15]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4001027	          0x493936	                    cmp qword [r14], rsi	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x400102a	            0x7511	                           jne 0x400103d	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x400102c	        0x418b4708	                mov eax, dword [r15 + 8]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4001030	      0x488b742408	                mov rsi, qword [rsp + 8]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4001035	          0x394608	                cmp dword [rsi + 8], eax	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4001038	            0x7d03	                           jge 0x400103d	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x400103a	          0x894608	                mov dword [rsi + 8], eax	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x400103d	        0x488b3424	                    mov rsi, qword [rsp]	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_17
0x4001041	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_17
0x4001046	      0xe83ef0ffff	                      call sym.limit_pos	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_17
0x400104b	         0xfb74302	               movzx eax, word [rbx + 2]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400104f	        0x66394354	               cmp word [rbx + 0x54], ax	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4001053	     0xf8491000000	                            je 0x40010ea	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4001059	          0x6685c0	                             test ax, ax	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400105c	     0xf8488000000	                            je 0x40010ea	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4001062	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4001067	            0x8928	                    mov dword [rax], ebp	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4001069	        0xf6430510	               test byte [rbx + 5], 0x10	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x400106d	            0x741c	                            je 0x400108b	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x400106f	    0x488b84244802	           mov rax, qword [rsp + 0x248] 	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x4001077	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x400107c	          0x488906	                    mov qword [rsi], rax	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x400107f	    0x8b8424500200	           mov eax, dword [rsp + 0x250] 	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x4001086	          0x894608	                mov dword [rsi + 8], eax	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x4001089	            0xeb1a	                           jmp 0x40010a5	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x400108b	    0x488b8424a801	           mov rax, qword [rsp + 0x1a8] 	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x4001093	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x4001098	          0x488906	                    mov qword [rsi], rax	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x400109b	    0x8b8424b00100	           mov eax, dword [rsp + 0x1b0] 	      3131	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40010a2	          0x894608	                mov dword [rsi + 8], eax	      3131	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40010a5	          0x8b431c	            mov eax, dword [rbx + 0x1c] 	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40010a8	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40010ad	           0x34608	                add eax, dword [rsi + 8]	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40010b0	          0x894608	                mov dword [rsi + 8], eax	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40010b3	          0x498b0f	                    mov rcx, qword [r15]	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40010b6	          0x48390e	                    cmp qword [rsi], rcx	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40010b9	            0x750b	                           jne 0x40010c6	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40010bb	        0x418b5708	                mov edx, dword [r15 + 8]	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40010bf	            0x39d0	                            cmp eax, edx	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40010c1	            0x7d03	                           jge 0x40010c6	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40010c3	          0x895608	                mov dword [rsi + 8], edx	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40010c6	        0x4c8b3424	                    mov r14, qword [rsp]	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_18
0x40010ca	          0x4c89f6	                            mov rsi, r14	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_18
0x40010cd	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_18
0x40010d2	          0x4c89ff	                            mov rdi, r15	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_18
0x40010d5	      0xe8afefffff	                      call sym.limit_pos	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_18
0x40010da	        0x498b5708	                mov rdx, qword [r15 + 8]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40010de	          0x498b07	                    mov rax, qword [r15]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40010e1	          0x498906	                    mov qword [r14], rax	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40010e4	        0x49895608	                mov qword [r14 + 8], rdx	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40010e8	            0xeb23	                           jmp 0x400110d	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40010ea	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3147	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x40010ef	    0xc70000000000	                      mov dword [rax], 0	      3147	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x40010f5	      0x488b442408	                mov rax, qword [rsp + 8]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x40010fa	        0x488b5008	                mov rdx, qword [rax + 8]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x40010fe	          0x488b00	                    mov rax, qword [rax]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4001101	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4001106	          0x488906	                    mov qword [rsi], rax	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4001109	        0x48895608	                mov qword [rsi + 8], rdx	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400110d	        0x48634324	         movsxd rax, dword [rbx + 0x24] 	      3151	syntax.c	FUNCTION_37	FOR_2
0x4001111	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      3151	syntax.c	FUNCTION_37	FOR_2
0x4001116	          0x488906	                    mov qword [rsi], rax	      3151	syntax.c	FUNCTION_37	FOR_2
0x4001119	            0xeb0b	                           jmp 0x4001126	      3151	syntax.c	FUNCTION_37	FOR_2
0x400111b	        0x488b0424	                    mov rax, qword [rsp]	      3159	syntax.c	FUNCTION_37	IF_22
0x400111f	    0x48c700000000	                      mov qword [rax], 0	      3159	syntax.c	FUNCTION_37	IF_22
0x4001126	    0x488dbc24f002	                  lea rdi, [rsp + 0x2f0]	      3161	syntax.c	FUNCTION_37	CALL_19
0x400112e	      0xe848f6ffff	                call sym.restore_chartab	      3161	syntax.c	FUNCTION_37	CALL_19
0x4001133	    0x488b3d000000	            mov rdi, qword [0x0400113a] 	      3164	syntax.c	FUNCTION_37	CALL_20
0x400113a	      0xe800000000	                          call 0x400113f	      3164	syntax.c	FUNCTION_37	CALL_20
0x400113f	    0x48c705000000	               mov qword [0x0400114a], 0	      3165	syntax.c	FUNCTION_37
0x400114a	    0x488b84241803	           mov rax, qword [rsp + 0x318] 	      3166	syntax.c	FUNCTION_37
0x4001152	    0x644833042528	                xor rax, qword fs:[0x28]	      3166	syntax.c	FUNCTION_37
0x400115b	            0x7405	                            je 0x4001162	      3166	syntax.c	FUNCTION_37
0x400115d	      0xe800000000	                          call 0x4001162	      3166	syntax.c	FUNCTION_37
0x4001162	    0x4881c4280300	                          add rsp, 0x328	      3166	syntax.c	FUNCTION_37
0x4001169	              0x5b	                                 pop rbx	      3166	syntax.c	FUNCTION_37
0x400116a	              0x5d	                                 pop rbp	      3166	syntax.c	FUNCTION_37
0x400116b	            0x415c	                                 pop r12	      3166	syntax.c	FUNCTION_37
0x400116d	            0x415d	                                 pop r13	      3166	syntax.c	FUNCTION_37
0x400116f	            0x415e	                                 pop r14	      3166	syntax.c	FUNCTION_37
0x4001171	            0x415f	                                 pop r15	      3166	syntax.c	FUNCTION_37
0x4001173	              0xc3	                                     ret	      3166	syntax.c	FUNCTION_37
get_syntime_arg	IF,0:CALL,0:FOR,0:ELSE,0:SWITCH,1:WHILE,0:DO,0:functions,0	19
0x400416a	          0x83fe01	                              cmp esi, 1	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400416d	            0x7426	                            je 0x4004195	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400416f	          0x83fe01	                              cmp esi, 1	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x4004172	            0x7f0b	                            jg 0x400417f	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x4004174	      0xb800000000	                              mov eax, 0	      6728	syntax.c	FUNCTION_110	SWITCH_1
0x4004179	            0x85f6	                           test esi, esi	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400417b	            0x7423	                            je 0x40041a0	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400417d	            0xeb1c	                           jmp 0x400419b	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400417f	      0xb800000000	                              mov eax, 0	      6730	syntax.c	FUNCTION_110	SWITCH_1
0x4004184	          0x83fe02	                              cmp esi, 2	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x4004187	            0x7417	                            je 0x40041a0	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x4004189	      0xb800000000	                              mov eax, 0	      6731	syntax.c	FUNCTION_110	SWITCH_1
0x400418e	          0x83fe03	                              cmp esi, 3	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x4004191	            0x740d	                            je 0x40041a0	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x4004193	            0xeb06	                           jmp 0x400419b	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x4004195	      0xb800000000	                              mov eax, 0	      6729	syntax.c	FUNCTION_110	SWITCH_1
0x400419a	              0xc3	                                     ret	      6729	syntax.c	FUNCTION_110	SWITCH_1
0x400419b	      0xb800000000	                              mov eax, 0	      6733	syntax.c	FUNCTION_110
0x40041a0	            0xf3c3	                                     ret	      6734	syntax.c	FUNCTION_110
syn_check_group	IF,2:CALL,4:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	130
0x4005c24	            0x4154	                                push r12	      9713	syntax.c	FUNCTION_153
0x4005c26	              0x55	                                push rbp	      9713	syntax.c	FUNCTION_153
0x4005c27	              0x53	                                push rbx	      9713	syntax.c	FUNCTION_153
0x4005c28	      0xe800000000	                          call 0x4005c2d	      9717	syntax.c	FUNCTION_153	CALL_1
0x4005c2d	    0x41bc00000000	                             mov r12d, 0	      9719	syntax.c	FUNCTION_153	IF_1
0x4005c33	          0x4885c0	                           test rax, rax	      9718	syntax.c	FUNCTION_153	IF_1
0x4005c36	     0xf8405020000	                            je 0x4005e41	      9718	syntax.c	FUNCTION_153	IF_1
0x4005c3c	          0x4889c5	                            mov rbp, rax	      9718	syntax.c	FUNCTION_153	IF_1
0x4005c3f	          0x4889c7	                            mov rdi, rax	      9721	syntax.c	FUNCTION_153	CALL_2
0x4005c42	      0xe800000000	                          call 0x4005c47	      9721	syntax.c	FUNCTION_153	CALL_2
0x4005c47	          0x4189c4	                           mov r12d, eax	      9721	syntax.c	FUNCTION_153	CALL_2
0x4005c4a	            0x85c0	                           test eax, eax	      9722	syntax.c	FUNCTION_153	IF_2
0x4005c4c	     0xf85e7010000	                           jne 0x4005e39	      9722	syntax.c	FUNCTION_153	IF_2
0x4005c52	         0xfb67d00	                   movzx edi, byte [rbp]	      9740	syntax.c	FUNCTION_154	FOR_1
0x4005c56	          0x4084ff	                           test dil, dil	      9740	syntax.c	FUNCTION_154	FOR_1
0x4005c59	     0xf8494000000	                            je 0x4005cf3	      9740	syntax.c	FUNCTION_154	FOR_1
0x4005c5f	          0x4889eb	                            mov rbx, rbp	      9740	syntax.c	FUNCTION_154	FOR_1
0x4005c62	        0x400fb6ff	                          movzx edi, dil	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x4005c66	      0xe800000000	                          call 0x4005c6b	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x4005c6b	          0x4189c4	                           mov r12d, eax	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x4005c6e	            0x85c0	                           test eax, eax	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x4005c70	            0x7529	                           jne 0x4005c9b	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x4005c72	      0xba05000000	                              mov edx, 5	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x4005c77	      0xbe00000000	                              mov esi, 0	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x4005c7c	      0xbf00000000	                              mov edi, 0	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x4005c81	      0xe800000000	                          call 0x4005c86	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x4005c86	          0x4889c7	                            mov rdi, rax	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x4005c89	      0xe800000000	                          call 0x4005c8e	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x4005c8e	          0x4889ef	                            mov rdi, rbp	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x4005c91	      0xe800000000	                          call 0x4005c96	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x4005c96	      0xe9a6010000	                           jmp 0x4005e41	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x4005c9b	           0xfb613	                   movzx edx, byte [rbx]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005c9e	            0x89d0	                            mov eax, edx	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005ca0	          0x83e0df	                     and eax, 0xffffffdf	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005ca3	          0x83e841	                           sub eax, 0x41	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005ca6	            0x3c19	                            cmp al, 0x19	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005ca8	            0x7639	                           jbe 0x4005ce3	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005caa	           0xfb6c2	                           movzx eax, dl	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005cad	          0x83e830	                           sub eax, 0x30	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005cb0	          0x83f809	                              cmp eax, 9	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005cb3	            0x762e	                           jbe 0x4005ce3	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005cb5	          0x80fa5f	                            cmp dl, 0x5f	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005cb8	            0x7429	                            je 0x4005ce3	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4005cba	    0x8b3d00000000	            mov edi, dword [0x04005cc0] 	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x4005cc0	      0xe800000000	                          call 0x4005cc5	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x4005cc5	      0xba05000000	                              mov edx, 5	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4005cca	      0xbe00000000	                              mov esi, 0	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4005ccf	      0xbf00000000	                              mov edi, 0	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4005cd4	      0xe800000000	                          call 0x4005cd9	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4005cd9	          0x4889c7	                            mov rdi, rax	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4005cdc	      0xe800000000	                          call 0x4005ce1	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4005ce1	            0xeb10	                           jmp 0x4005cf3	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4005ce3	        0x4883c301	                              add rbx, 1	      9740	syntax.c	FUNCTION_154	FOR_1
0x4005ce7	           0xfb63b	                   movzx edi, byte [rbx]	      9740	syntax.c	FUNCTION_154	FOR_1
0x4005cea	          0x4084ff	                           test dil, dil	      9740	syntax.c	FUNCTION_154	FOR_1
0x4005ced	     0xf856fffffff	                           jne 0x4005c62	      9740	syntax.c	FUNCTION_154	FOR_1
0x4005cf3	    0x48833d000000	               cmp qword [0x04005cfb], 0	      9761	syntax.c	FUNCTION_154	IF_3
0x4005cfb	            0x7514	                           jne 0x4005d11	      9761	syntax.c	FUNCTION_154	IF_3
0x4005cfd	    0xc70500000000	           mov dword [0x04005d07], 0x98 	      9763	syntax.c	FUNCTION_154	IF_3
0x4005d07	    0xc70500000000	            mov dword [0x04005d11], 0xa 	      9764	syntax.c	FUNCTION_154	IF_3
0x4005d11	    0x813d00000000	         cmp dword [0x04005d1b], 0x4e1f 	      9767	syntax.c	FUNCTION_154	IF_4
0x4005d1b	            0x7e2f	                           jle 0x4005d4c	      9767	syntax.c	FUNCTION_154	IF_4
0x4005d1d	      0xba05000000	                              mov edx, 5	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x4005d22	      0xbe00000000	                              mov esi, 0	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x4005d27	      0xbf00000000	                              mov edi, 0	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x4005d2c	      0xe800000000	                          call 0x4005d31	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x4005d31	          0x4889c7	                            mov rdi, rax	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x4005d34	      0xe800000000	                          call 0x4005d39	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x4005d39	          0x4889ef	                            mov rdi, rbp	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x4005d3c	      0xe800000000	                          call 0x4005d41	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x4005d41	    0x41bc00000000	                             mov r12d, 0	      9771	syntax.c	FUNCTION_154	IF_4
0x4005d47	      0xe9f5000000	                           jmp 0x4005e41	      9771	syntax.c	FUNCTION_154	IF_4
0x4005d4c	      0xbe01000000	                              mov esi, 1	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4005d51	      0xbf00000000	                              mov edi, 0	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4005d56	      0xe800000000	                          call 0x4005d5b	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4005d5b	          0x4189c4	                           mov r12d, eax	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4005d5e	            0x85c0	                           test eax, eax	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4005d60	            0x750d	                           jne 0x4005d6f	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4005d62	          0x4889ef	                            mov rdi, rbp	      9779	syntax.c	FUNCTION_154	IF_5	CALL_14
0x4005d65	      0xe800000000	                          call 0x4005d6a	      9779	syntax.c	FUNCTION_154	IF_5	CALL_14
0x4005d6a	      0xe9d2000000	                           jmp 0x4005e41	      9779	syntax.c	FUNCTION_154	IF_5	CALL_14
0x4005d6f	    0x486305000000	         movsxd rax, dword [0x04005d76] 	        90	string3.h	FUNCTION_193	CALL_6
0x4005d76	        0x488d14c0	                  lea rdx, [rax + rax*8]	        90	string3.h	FUNCTION_193	CALL_6
0x4005d7a	        0x488d1450	                  lea rdx, [rax + rdx*2]	        90	string3.h	FUNCTION_193	CALL_6
0x4005d7e	    0x488b05000000	            mov rax, qword [0x04005d85] 	        90	string3.h	FUNCTION_193	CALL_6
0x4005d85	        0x488d04d0	                  lea rax, [rax + rdx*8]	        90	string3.h	FUNCTION_193	CALL_6
0x4005d89	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4005d90	    0x48c780900000	               mov qword [rax + 0x90], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4005d9b	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_193	CALL_6
0x4005d9f	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_193	CALL_6
0x4005da3	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_193	CALL_6
0x4005da6	    0x8d8898000000	                   lea ecx, [rax + 0x98]	        90	string3.h	FUNCTION_193	CALL_6
0x4005dac	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_193	CALL_6
0x4005daf	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_193	CALL_6
0x4005db1	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_193	CALL_6
0x4005db6	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_193	CALL_6
0x4005db9	    0x486305000000	         movsxd rax, dword [0x04005dc0] 	      9784	syntax.c	FUNCTION_154	CALL_17
0x4005dc0	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9784	syntax.c	FUNCTION_154	CALL_17
0x4005dc4	        0x488d0450	                  lea rax, [rax + rdx*2]	      9784	syntax.c	FUNCTION_154	CALL_17
0x4005dc8	        0x48c1e003	                              shl rax, 3	      9784	syntax.c	FUNCTION_154	CALL_17
0x4005dcc	    0x480305000000	             add rax, qword [0x04005dd3]	      9784	syntax.c	FUNCTION_154	CALL_17
0x4005dd3	          0x488928	                    mov qword [rax], rbp	      9784	syntax.c	FUNCTION_154	CALL_17
0x4005dd6	    0x486305000000	         movsxd rax, dword [0x04005ddd] 	      9785	syntax.c	FUNCTION_154	CALL_19
0x4005ddd	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9785	syntax.c	FUNCTION_154	CALL_19
0x4005de1	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9785	syntax.c	FUNCTION_154	CALL_19
0x4005de5	    0x488b05000000	            mov rax, qword [0x04005dec] 	      9785	syntax.c	FUNCTION_154	CALL_19
0x4005dec	        0x488d1cd0	                  lea rbx, [rax + rdx*8]	      9785	syntax.c	FUNCTION_154	CALL_19
0x4005df0	          0x4889ef	                            mov rdi, rbp	      9785	syntax.c	FUNCTION_154	CALL_19
0x4005df3	      0xe800000000	                          call 0x4005df8	      9785	syntax.c	FUNCTION_154	CALL_19
0x4005df8	        0x48894308	                mov qword [rbx + 8], rax	      9785	syntax.c	FUNCTION_154	CALL_19
0x4005dfc	    0x448b25000000	           mov r12d, dword [0x04005e03] 	      9787	syntax.c	FUNCTION_154	CALL_20
0x4005e03	          0x4963c4	                        movsxd rax, r12d	      9787	syntax.c	FUNCTION_154	CALL_20
0x4005e06	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9787	syntax.c	FUNCTION_154	CALL_20
0x4005e0a	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9787	syntax.c	FUNCTION_154	CALL_20
0x4005e0e	    0x488b05000000	            mov rax, qword [0x04005e15] 	      9787	syntax.c	FUNCTION_154	CALL_20
0x4005e15	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9787	syntax.c	FUNCTION_154	CALL_20
0x4005e19	    0x48c7c299d4ff	             mov rdx, 0xffffffffffffd499	      9787	syntax.c	FUNCTION_154	CALL_20
0x4005e20	        0x48895048	             mov qword [rax + 0x48], rdx	      9787	syntax.c	FUNCTION_154	CALL_20
0x4005e24	        0x48895040	             mov qword [rax + 0x40], rdx	      9788	syntax.c	FUNCTION_154	CALL_21
0x4005e28	        0x48895050	             mov qword [rax + 0x50], rdx	      9790	syntax.c	FUNCTION_154	CALL_22
0x4005e2c	        0x4183c401	                             add r12d, 1	      9793	syntax.c	FUNCTION_154
0x4005e30	    0x448925000000	           mov dword [0x04005e37], r12d 	      9793	syntax.c	FUNCTION_154
0x4005e37	            0xeb08	                           jmp 0x4005e41	      9793	syntax.c	FUNCTION_154
0x4005e39	          0x4889ef	                            mov rdi, rbp	      9725	syntax.c	FUNCTION_153	CALL_4
0x4005e3c	      0xe800000000	                          call 0x4005e41	      9725	syntax.c	FUNCTION_153	CALL_4
0x4005e41	          0x4489e0	                           mov eax, r12d	      9727	syntax.c	FUNCTION_153
0x4005e44	              0x5b	                                 pop rbx	      9727	syntax.c	FUNCTION_153
0x4005e45	              0x5d	                                 pop rbp	      9727	syntax.c	FUNCTION_153
0x4005e46	            0x415c	                                 pop r12	      9727	syntax.c	FUNCTION_153
0x4005e48	              0xc3	                                     ret	      9727	syntax.c	FUNCTION_153
syn_id2attr	IF,2:CALL,2:FOR,0:ELSE,2:SWITCH,0:WHILE,0:DO,0:functions,0	18
0x4007b40	      0xe800000000	                          call 0x4007b45	      9819	syntax.c	FUNCTION_156	CALL_1
0x4007b45	            0x4898	                                    cdqe	      9820	syntax.c	FUNCTION_156	CALL_2
0x4007b47	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9820	syntax.c	FUNCTION_156	CALL_2
0x4007b4b	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9820	syntax.c	FUNCTION_156	CALL_2
0x4007b4f	    0x488b05000000	            mov rax, qword [0x04007b56] 	      9820	syntax.c	FUNCTION_156	CALL_2
0x4007b56	    0x488d84d068ff	           lea rax, [rax + rdx*8 - 0x98]	      9820	syntax.c	FUNCTION_156	CALL_2
0x4007b5e	    0x833d00000000	               cmp dword [0x04007b65], 0	      9826	syntax.c	FUNCTION_156	IF_1
0x4007b65	            0x7404	                            je 0x4007b6b	      9826	syntax.c	FUNCTION_156	IF_1
0x4007b67	          0x8b4068	            mov eax, dword [rax + 0x68] 	      9827	syntax.c	FUNCTION_156	IF_1
0x4007b6a	              0xc3	                                     ret	      9827	syntax.c	FUNCTION_156	IF_1
0x4007b6b	    0x833d00000000	               cmp dword [0x04007b72], 1	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4007b72	            0x7f09	                            jg 0x4007b7d	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4007b74	    0x833d00000000	               cmp dword [0x04007b7b], 0	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4007b7b	            0x7404	                            je 0x4007b81	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4007b7d	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4007b80	              0xc3	                                     ret	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4007b81	          0x8b4028	            mov eax, dword [rax + 0x28] 	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4007b84	              0xc3	                                     ret	      9836	syntax.c	FUNCTION_156	ELSE_2
highlight_gui_color_rgb	IF,3:CALL,3:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	35
0x40054e5	            0x85ff	                           test edi, edi	      9454	syntax.c	FUNCTION_145	IF_1
0x40054e7	            0x7e6d	                           jle 0x4005556	      9454	syntax.c	FUNCTION_145	IF_1
0x40054e9	      0xb800000000	                              mov eax, 0	      9455	syntax.c	FUNCTION_145	IF_1
0x40054ee	    0x3b3d00000000	            cmp edi, dword [0x040054f4] 	      9454	syntax.c	FUNCTION_145	IF_1
0x40054f4	            0x7f70	                            jg 0x4005566	      9454	syntax.c	FUNCTION_145	IF_1
0x40054f6	            0x85f6	                           test esi, esi	      9457	syntax.c	FUNCTION_145	IF_2
0x40054f8	            0x741c	                            je 0x4005516	      9457	syntax.c	FUNCTION_145	IF_2
0x40054fa	          0x4863ff	                         movsxd rdi, edi	      9458	syntax.c	FUNCTION_145	CALL_1
0x40054fd	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9458	syntax.c	FUNCTION_145	CALL_1
0x4005501	        0x488d0447	                  lea rax, [rdi + rax*2]	      9458	syntax.c	FUNCTION_145	CALL_1
0x4005505	        0x48c1e003	                              shl rax, 3	      9458	syntax.c	FUNCTION_145	CALL_1
0x4005509	    0x480305000000	             add rax, qword [0x04005510]	      9458	syntax.c	FUNCTION_145	CALL_1
0x4005510	        0x488b78a8	             mov rdi, qword [rax - 0x58]	      9458	syntax.c	FUNCTION_145	CALL_1
0x4005514	            0xeb1a	                           jmp 0x4005530	      9458	syntax.c	FUNCTION_145	CALL_1
0x4005516	          0x4863ff	                         movsxd rdi, edi	      9460	syntax.c	FUNCTION_145	CALL_2
0x4005519	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9460	syntax.c	FUNCTION_145	CALL_2
0x400551d	        0x488d0447	                  lea rax, [rdi + rax*2]	      9460	syntax.c	FUNCTION_145	CALL_2
0x4005521	        0x48c1e003	                              shl rax, 3	      9460	syntax.c	FUNCTION_145	CALL_2
0x4005525	    0x480305000000	             add rax, qword [0x0400552c]	      9460	syntax.c	FUNCTION_145	CALL_2
0x400552c	        0x488b78b0	             mov rdi, qword [rax - 0x50]	      9460	syntax.c	FUNCTION_145	CALL_2
0x4005530	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9462	syntax.c	FUNCTION_145	IF_3
0x4005537	            0x7423	                            je 0x400555c	      9462	syntax.c	FUNCTION_145	IF_3
0x4005539	        0x4883ec08	                              sub rsp, 8	      9451	syntax.c	FUNCTION_145
0x400553d	    0x833d00000000	               cmp dword [0x04005544], 0	      9465	syntax.c	FUNCTION_145	CALL_3
0x4005544	      0xba00000000	                              mov edx, 0	      9465	syntax.c	FUNCTION_145	CALL_3
0x4005549	      0xb800000000	                              mov eax, 0	      9465	syntax.c	FUNCTION_145	CALL_3
0x400554e	        0x480f44c2	                          cmove rax, rdx	      9465	syntax.c	FUNCTION_145	CALL_3
0x4005552	            0xffd0	                                call rax	      9465	syntax.c	FUNCTION_145	CALL_3
0x4005554	            0xeb0c	                           jmp 0x4005562	      9465	syntax.c	FUNCTION_145	CALL_3
0x4005556	      0xb800000000	                              mov eax, 0	      9455	syntax.c	FUNCTION_145	IF_1
0x400555b	              0xc3	                                     ret	      9455	syntax.c	FUNCTION_145	IF_1
0x400555c	      0xb800000000	                              mov eax, 0	      9463	syntax.c	FUNCTION_145	IF_3
0x4005561	              0xc3	                                     ret	      9463	syntax.c	FUNCTION_145	IF_3
0x4005562	        0x4883c408	                              add rsp, 8	      9466	syntax.c	FUNCTION_145
0x4005566	            0xf3c3	                                     ret	      9466	syntax.c	FUNCTION_145
copy_id_list	IF,2:CALL,2:FOR,1:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	32
0x4001e32	            0x4154	                                push r12	      6201	syntax.c	FUNCTION_93
0x4001e34	              0x55	                                push rbp	      6201	syntax.c	FUNCTION_93
0x4001e35	              0x53	                                push rbx	      6201	syntax.c	FUNCTION_93
0x4001e36	          0x4885ff	                           test rdi, rdi	      6206	syntax.c	FUNCTION_93	IF_1
0x4001e39	            0x744a	                            je 0x4001e85	      6206	syntax.c	FUNCTION_93	IF_1
0x4001e3b	        0x66833f00	                       cmp word [rdi], 0	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001e3f	            0x7414	                            je 0x4001e55	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001e41	      0xb800000000	                              mov eax, 0	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001e46	          0x83c001	                              add eax, 1	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001e49	          0x4863d0	                         movsxd rdx, eax	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001e4c	      0x66833c5700	               cmp word [rdi + rdx*2], 0	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001e51	            0x75f3	                           jne 0x4001e46	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001e53	            0xeb05	                           jmp 0x4001e5a	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001e55	      0xb800000000	                              mov eax, 0	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001e5a	          0x4889fb	                            mov rbx, rdi	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001e5d	      0x448d640002	               lea r12d, [rax + rax + 2]	      6211	syntax.c	FUNCTION_93
0x4001e62	          0x4489e7	                           mov edi, r12d	      6212	syntax.c	FUNCTION_93	CALL_1
0x4001e65	      0xe800000000	                          call 0x4001e6a	      6212	syntax.c	FUNCTION_93	CALL_1
0x4001e6a	          0x4889c5	                            mov rbp, rax	      6212	syntax.c	FUNCTION_93	CALL_1
0x4001e6d	          0x4885c0	                           test rax, rax	      6213	syntax.c	FUNCTION_93	IF_2
0x4001e70	            0x7418	                            je 0x4001e8a	      6213	syntax.c	FUNCTION_93	IF_2
0x4001e72	          0x4963d4	                        movsxd rdx, r12d	        59	string3.h	FUNCTION_191	CALL_3
0x4001e75	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_191	CALL_3
0x4001e78	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_191	CALL_3
0x4001e7b	      0xe800000000	                          call 0x4001e80	        59	string3.h	FUNCTION_191	CALL_3
0x4001e80	          0x4889e8	                            mov rax, rbp	      6216	syntax.c	FUNCTION_93
0x4001e83	            0xeb05	                           jmp 0x4001e8a	      6216	syntax.c	FUNCTION_93
0x4001e85	      0xb800000000	                              mov eax, 0	      6207	syntax.c	FUNCTION_93	IF_1
0x4001e8a	              0x5b	                                 pop rbx	      6217	syntax.c	FUNCTION_93
0x4001e8b	              0x5d	                                 pop rbp	      6217	syntax.c	FUNCTION_93
0x4001e8c	            0x415c	                                 pop r12	      6217	syntax.c	FUNCTION_93
0x4001e8e	              0xc3	                                     ret	      6217	syntax.c	FUNCTION_93
syn_cmd_on	IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	5
0x4003054	        0x4883ec08	                              sub rsp, 8	      3865	syntax.c	FUNCTION_57
0x4003058	      0xbe00000000	                              mov esi, 0	      3866	syntax.c	FUNCTION_57	CALL_1
0x400305d	      0xe86affffff	                  call sym.syn_cmd_onoff	      3866	syntax.c	FUNCTION_57	CALL_1
0x4003062	        0x4883c408	                              add rsp, 8	      3867	syntax.c	FUNCTION_57
0x4003066	              0xc3	                                     ret	      3867	syntax.c	FUNCTION_57
syn_name2id	IF,1:CALL,5:FOR,1:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	42
0x4005568	            0x4154	                                push r12	      9632	syntax.c	FUNCTION_148
0x400556a	              0x55	                                push rbp	      9632	syntax.c	FUNCTION_148
0x400556b	              0x53	                                push rbx	      9632	syntax.c	FUNCTION_148
0x400556c	    0x4881ecd00000	                           sub rsp, 0xd0	      9632	syntax.c	FUNCTION_148
0x4005573	          0x4889fe	                            mov rsi, rdi	      9632	syntax.c	FUNCTION_148
0x4005576	    0x64488b042528	                mov rax, qword fs:[0x28]	      9632	syntax.c	FUNCTION_148
0x400557f	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      9632	syntax.c	FUNCTION_148
0x4005587	            0x31c0	                            xor eax, eax	      9632	syntax.c	FUNCTION_148
0x4005589	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400558e	          0x4889e7	                            mov rdi, rsp	      9639	syntax.c	FUNCTION_148	CALL_1
0x4005591	      0xe800000000	                          call 0x4005596	      9639	syntax.c	FUNCTION_148	CALL_1
0x4005596	          0x4889e7	                            mov rdi, rsp	      9640	syntax.c	FUNCTION_148	CALL_2
0x4005599	      0xe800000000	                          call 0x400559e	      9640	syntax.c	FUNCTION_148	CALL_2
0x400559e	    0x8b1d00000000	            mov ebx, dword [0x040055a4] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x40055a4	    0x4c8b25000000	            mov r12, qword [0x040055ab] 	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40055ab	            0xeb27	                           jmp 0x40055d4	      9641	syntax.c	FUNCTION_148	FOR_1
0x40055ad	          0x4863c5	                         movsxd rax, ebp	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40055b0	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40055b4	        0x488d0450	                  lea rax, [rax + rdx*2]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40055b8	      0x498b74c408	       mov rsi, qword [r12 + rax*8 + 8] 	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40055bd	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40055c0	            0x7410	                            je 0x40055d2	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40055c2	          0x4889e7	                            mov rdi, rsp	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x40055c5	      0xe800000000	                          call 0x40055ca	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x40055ca	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x40055cc	            0x740d	                            je 0x40055db	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x40055ce	            0x89eb	                            mov ebx, ebp	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x40055d0	            0xeb02	                           jmp 0x40055d4	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x40055d2	            0x89eb	                            mov ebx, ebp	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x40055d4	            0x89dd	                            mov ebp, ebx	      9641	syntax.c	FUNCTION_148	FOR_1
0x40055d6	          0x83ed01	                              sub ebp, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x40055d9	            0x79d2	                           jns 0x40055ad	      9641	syntax.c	FUNCTION_148	FOR_1
0x40055db	            0x89d8	                            mov eax, ebx	      9646	syntax.c	FUNCTION_148
0x40055dd	    0x488b8c24c800	            mov rcx, qword [rsp + 0xc8] 	      9646	syntax.c	FUNCTION_148
0x40055e5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9646	syntax.c	FUNCTION_148
0x40055ee	            0x7405	                            je 0x40055f5	      9646	syntax.c	FUNCTION_148
0x40055f0	      0xe800000000	                          call 0x40055f5	      9646	syntax.c	FUNCTION_148
0x40055f5	    0x4881c4d00000	                           add rsp, 0xd0	      9646	syntax.c	FUNCTION_148
0x40055fc	              0x5b	                                 pop rbx	      9646	syntax.c	FUNCTION_148
0x40055fd	              0x5d	                                 pop rbp	      9646	syntax.c	FUNCTION_148
0x40055fe	            0x415c	                                 pop r12	      9646	syntax.c	FUNCTION_148
0x4005600	              0xc3	                                     ret	      9646	syntax.c	FUNCTION_148
get_gui_attr_idx	IF,0:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	19
0x4004c1c	        0x4883ec38	                           sub rsp, 0x38	      8973	syntax.c	FUNCTION_134
0x4004c20	    0x64488b042528	                mov rax, qword fs:[0x28]	      8973	syntax.c	FUNCTION_134
0x4004c29	      0x4889442428	             mov qword [rsp + 0x28], rax	      8973	syntax.c	FUNCTION_134
0x4004c2e	            0x31c0	                            xor eax, eax	      8973	syntax.c	FUNCTION_134
0x4004c30	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004c38	    0x48c744241800	               mov qword [rsp + 0x18], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004c41	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004c4a	        0x66893c24	                      mov word [rsp], di	      8977	syntax.c	FUNCTION_134
0x4004c4e	      0x4889742408	                mov qword [rsp + 8], rsi	      8978	syntax.c	FUNCTION_134
0x4004c53	      0x4889542410	             mov qword [rsp + 0x10], rdx	      8979	syntax.c	FUNCTION_134
0x4004c58	          0x4889e6	                            mov rsi, rsp	      8980	syntax.c	FUNCTION_134	CALL_2
0x4004c5b	      0xbf00000000	                              mov edi, 0	      8980	syntax.c	FUNCTION_134	CALL_2
0x4004c60	      0xe8c2f8ffff	                 call sym.get_attr_entry	      8980	syntax.c	FUNCTION_134	CALL_2
0x4004c65	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      8981	syntax.c	FUNCTION_134
0x4004c6a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8981	syntax.c	FUNCTION_134
0x4004c73	            0x7405	                            je 0x4004c7a	      8981	syntax.c	FUNCTION_134
0x4004c75	      0xe800000000	                          call 0x4004c7a	      8981	syntax.c	FUNCTION_134
0x4004c7a	        0x4883c438	                           add rsp, 0x38	      8981	syntax.c	FUNCTION_134
0x4004c7e	              0xc3	                                     ret	      8981	syntax.c	FUNCTION_134
syntax_check_changed	IF,3:CALL,5:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	33
0x4009e57	            0x4154	                                push r12	      1751	syntax.c	FUNCTION_25
0x4009e59	              0x55	                                push rbp	      1751	syntax.c	FUNCTION_25
0x4009e5a	              0x53	                                push rbx	      1751	syntax.c	FUNCTION_25
0x4009e5b	      0xbb01000000	                              mov ebx, 1	      1752	syntax.c	FUNCTION_25
0x4009e60	    0x833d00000000	               cmp dword [0x04009e67], 0	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x4009e67	            0x7454	                            je 0x4009ebd	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x4009e69	    0x488b05000000	            mov rax, qword [0x04009e70] 	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x4009e70	        0x488d6801	                      lea rbp, [rax + 1]	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x4009e74	          0x4839fd	                            cmp rbp, rdi	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x4009e77	            0x7544	                           jne 0x4009ebd	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x4009e79	          0x4889ef	                            mov rdi, rbp	      1764	syntax.c	FUNCTION_25	IF_1	CALL_2
0x4009e7c	      0xe8bf61ffff	           call sym.syn_stack_find_entry	      1764	syntax.c	FUNCTION_25	IF_1	CALL_2
0x4009e81	          0x4989c4	                            mov r12, rax	      1764	syntax.c	FUNCTION_25	IF_1	CALL_2
0x4009e84	          0x4885c0	                           test rax, rax	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x4009e87	            0x742f	                            je 0x4009eb8	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x4009e89	        0x483b6808	                cmp rbp, qword [rax + 8]	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x4009e8d	            0x752e	                           jne 0x4009ebd	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x4009e8f	      0xbf00000000	                              mov edi, 0	      1771	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4009e94	      0xe89cf3ffff	                call sym.syn_finish_line	      1771	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4009e99	          0x4c89e7	                            mov rdi, r12	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x4009e9c	      0xe8be75ffff	                call sym.syn_stack_equal	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x4009ea1	            0x85c0	                           test eax, eax	      1752	syntax.c	FUNCTION_25
0x4009ea3	           0xf94c3	                                 sete bl	      1752	syntax.c	FUNCTION_25
0x4009ea6	           0xfb6db	                           movzx ebx, bl	      1752	syntax.c	FUNCTION_25
0x4009ea9	    0x488305000000	               add qword [0x04009eb1], 1	      1783	syntax.c	FUNCTION_25	IF_1	IF_2
0x4009eb1	      0xe8f591ffff	            call sym.store_current_state	      1784	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_5
0x4009eb6	            0xeb05	                           jmp 0x4009ebd	      1784	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_5
0x4009eb8	      0xbb01000000	                              mov ebx, 1	      1752	syntax.c	FUNCTION_25
0x4009ebd	            0x89d8	                            mov eax, ebx	      1789	syntax.c	FUNCTION_25
0x4009ebf	              0x5b	                                 pop rbx	      1789	syntax.c	FUNCTION_25
0x4009ec0	              0x5d	                                 pop rbp	      1789	syntax.c	FUNCTION_25
0x4009ec1	            0x415c	                                 pop r12	      1789	syntax.c	FUNCTION_25
0x4009ec3	              0xc3	                                     ret	      1789	syntax.c	FUNCTION_25
syn_cmd_conceal	IF,5:CALL,10:FOR,0:ELSE,4:SWITCH,0:WHILE,0:DO,0:functions,0	71
0x4001a21	              0x55	                                push rbp	      3461	syntax.c	FUNCTION_45
0x4001a22	              0x53	                                push rbx	      3461	syntax.c	FUNCTION_45
0x4001a23	        0x4883ec08	                              sub rsp, 8	      3461	syntax.c	FUNCTION_45
0x4001a27	          0x4889fb	                            mov rbx, rdi	      3461	syntax.c	FUNCTION_45
0x4001a2a	          0x488b2f	                    mov rbp, qword [rdi]	      3463	syntax.c	FUNCTION_45
0x4001a2d	          0x4889ef	                            mov rdi, rbp	      3466	syntax.c	FUNCTION_45	CALL_1
0x4001a30	      0xe800000000	                          call 0x4001a35	      3466	syntax.c	FUNCTION_45	CALL_1
0x4001a35	        0x48894308	                mov qword [rbx + 8], rax	      3466	syntax.c	FUNCTION_45	CALL_1
0x4001a39	        0x837b3000	               cmp dword [rbx + 0x30], 0	      3467	syntax.c	FUNCTION_45	IF_1
0x4001a3d	     0xf85f5000000	                           jne 0x4001b38	      3467	syntax.c	FUNCTION_45	IF_1
0x4001a43	          0x4889ef	                            mov rdi, rbp	      3470	syntax.c	FUNCTION_45	CALL_2
0x4001a46	      0xe800000000	                          call 0x4001a4b	      3470	syntax.c	FUNCTION_45	CALL_2
0x4001a4b	          0x4889c3	                            mov rbx, rax	      3470	syntax.c	FUNCTION_45	CALL_2
0x4001a4e	        0x807d0000	                       cmp byte [rbp], 0	      3471	syntax.c	FUNCTION_45	IF_2
0x4001a52	            0x7556	                           jne 0x4001aaa	      3471	syntax.c	FUNCTION_45	IF_2
0x4001a54	    0x488b05000000	            mov rax, qword [0x04001a5b] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4001a5b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4001a5f	    0x83b808030000	              cmp dword [rax + 0x308], 0	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4001a66	            0x7421	                            je 0x4001a89	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4001a68	      0xba05000000	                              mov edx, 5	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4001a6d	      0xbe00000000	                              mov esi, 0	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4001a72	      0xbf00000000	                              mov edi, 0	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4001a77	      0xe800000000	                          call 0x4001a7c	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4001a7c	          0x4889c7	                            mov rdi, rax	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4001a7f	      0xe800000000	                          call 0x4001a84	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4001a84	      0xe9af000000	                           jmp 0x4001b38	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4001a89	      0xba05000000	                              mov edx, 5	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4001a8e	      0xbe00000000	                              mov esi, 0	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4001a93	      0xbf00000000	                              mov edi, 0	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4001a98	      0xe800000000	                          call 0x4001a9d	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4001a9d	          0x4889c7	                            mov rdi, rax	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4001aa0	      0xe800000000	                          call 0x4001aa5	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4001aa5	      0xe98e000000	                           jmp 0x4001b38	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4001aaa	      0xba02000000	                              mov edx, 2	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4001aaf	      0xbe00000000	                              mov esi, 0	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4001ab4	          0x4889ef	                            mov rdi, rbp	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4001ab7	      0xe800000000	                          call 0x4001abc	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4001abc	            0x85c0	                           test eax, eax	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4001abe	            0x7523	                           jne 0x4001ae3	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4001ac0	          0x4889d8	                            mov rax, rbx	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4001ac3	          0x4829e8	                            sub rax, rbp	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4001ac6	        0x4883f802	                              cmp rax, 2	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4001aca	            0x7517	                           jne 0x4001ae3	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4001acc	    0x488b05000000	            mov rax, qword [0x04001ad3] 	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4001ad3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4001ad7	    0xc78008030000	              mov dword [rax + 0x308], 1	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4001ae1	            0xeb55	                           jmp 0x4001b38	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4001ae3	      0xba03000000	                              mov edx, 3	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4001ae8	      0xbe00000000	                              mov esi, 0	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4001aed	          0x4889ef	                            mov rdi, rbp	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4001af0	      0xe800000000	                          call 0x4001af5	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4001af5	            0x85c0	                           test eax, eax	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4001af7	            0x7520	                           jne 0x4001b19	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4001af9	          0x4829eb	                            sub rbx, rbp	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4001afc	        0x4883fb03	                              cmp rbx, 3	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4001b00	            0x7517	                           jne 0x4001b19	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4001b02	    0x488b05000000	            mov rax, qword [0x04001b09] 	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4001b09	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4001b0d	    0xc78008030000	              mov dword [rax + 0x308], 0	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4001b17	            0xeb1f	                           jmp 0x4001b38	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4001b19	      0xba05000000	                              mov edx, 5	      3483	syntax.c	FUNCTION_45	CALL_10
0x4001b1e	      0xbe00000000	                              mov esi, 0	      3483	syntax.c	FUNCTION_45	CALL_10
0x4001b23	      0xbf00000000	                              mov edi, 0	      3483	syntax.c	FUNCTION_45	CALL_10
0x4001b28	      0xe800000000	                          call 0x4001b2d	      3483	syntax.c	FUNCTION_45	CALL_10
0x4001b2d	          0x4889ee	                            mov rsi, rbp	      3483	syntax.c	FUNCTION_45	CALL_10
0x4001b30	          0x4889c7	                            mov rdi, rax	      3483	syntax.c	FUNCTION_45	CALL_10
0x4001b33	      0xe800000000	                          call 0x4001b38	      3483	syntax.c	FUNCTION_45	CALL_10
0x4001b38	        0x4883c408	                              add rsp, 8	      3485	syntax.c	FUNCTION_45
0x4001b3c	              0x5b	                                 pop rbx	      3485	syntax.c	FUNCTION_45
0x4001b3d	              0x5d	                                 pop rbp	      3485	syntax.c	FUNCTION_45
0x4001b3e	              0xc3	                                     ret	      3485	syntax.c	FUNCTION_45
syntax_clear	IF,0:CALL,11:FOR,2:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	69
0x40035bb	            0x4154	                                push r12	      3609	syntax.c	FUNCTION_49
0x40035bd	              0x55	                                push rbp	      3609	syntax.c	FUNCTION_49
0x40035be	              0x53	                                push rbx	      3609	syntax.c	FUNCTION_49
0x40035bf	          0x4889fb	                            mov rbx, rdi	      3609	syntax.c	FUNCTION_49
0x40035c2	    0xc78750020000	              mov dword [rdi + 0x250], 0	      3612	syntax.c	FUNCTION_49
0x40035cc	    0xc78754020000	              mov dword [rdi + 0x254], 0	      3614	syntax.c	FUNCTION_49
0x40035d6	    0xc78758020000	              mov dword [rdi + 0x258], 0	      3616	syntax.c	FUNCTION_49
0x40035e0	    0xc7875c020000	              mov dword [rdi + 0x25c], 0	      3617	syntax.c	FUNCTION_49
0x40035ea	    0xc78798020000	              mov dword [rdi + 0x298], 0	      3618	syntax.c	FUNCTION_49
0x40035f4	    0xc78708030000	              mov dword [rdi + 0x308], 0	      3620	syntax.c	FUNCTION_49
0x40035fe	      0xe887e0ffff	                  call sym.clear_keywtab	      3624	syntax.c	FUNCTION_49	CALL_1
0x4003603	    0x488dbb280100	                  lea rdi, [rbx + 0x128]	      3625	syntax.c	FUNCTION_49	CALL_2
0x400360a	      0xe87be0ffff	                  call sym.clear_keywtab	      3625	syntax.c	FUNCTION_49	CALL_2
0x400360f	    0x8bab60020000	           mov ebp, dword [rbx + 0x260] 	      3628	syntax.c	FUNCTION_49	FOR_1
0x4003615	          0x83ed01	                              sub ebp, 1	      3628	syntax.c	FUNCTION_49	FOR_1
0x4003618	            0x7812	                            js 0x400362c	      3628	syntax.c	FUNCTION_49	FOR_1
0x400361a	            0x89ee	                            mov esi, ebp	      3629	syntax.c	FUNCTION_49	CALL_3
0x400361c	          0x4889df	                            mov rdi, rbx	      3629	syntax.c	FUNCTION_49	CALL_3
0x400361f	      0xe87ddfffff	              call sym.syn_clear_pattern	      3629	syntax.c	FUNCTION_49	CALL_3
0x4003624	          0x83ed01	                              sub ebp, 1	      3628	syntax.c	FUNCTION_49	FOR_1
0x4003627	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      3628	syntax.c	FUNCTION_49	FOR_1
0x400362a	            0x75ee	                           jne 0x400361a	      3628	syntax.c	FUNCTION_49	FOR_1
0x400362c	    0x488dbb600200	                  lea rdi, [rbx + 0x260]	      3630	syntax.c	FUNCTION_49	CALL_4
0x4003633	      0xe800000000	                          call 0x4003638	      3630	syntax.c	FUNCTION_49	CALL_4
0x4003638	    0x8bab78020000	           mov ebp, dword [rbx + 0x278] 	      3633	syntax.c	FUNCTION_49	FOR_2
0x400363e	          0x83ed01	                              sub ebp, 1	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003641	            0x7849	                            js 0x400368c	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003643	          0x4863c5	                         movsxd rax, ebp	      3745	syntax.c	FUNCTION_54	CALL_2
0x4003646	        0x488d0440	                  lea rax, [rax + rax*2]	      3745	syntax.c	FUNCTION_54	CALL_2
0x400364a	    0x4c8d24c50000	                        lea r12, [rax*8]	      3745	syntax.c	FUNCTION_54	CALL_2
0x4003652	    0x488b93880200	           mov rdx, qword [rbx + 0x288] 	      3745	syntax.c	FUNCTION_54	CALL_2
0x4003659	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	      3745	syntax.c	FUNCTION_54	CALL_2
0x400365d	      0xe800000000	                          call 0x4003662	      3745	syntax.c	FUNCTION_54	CALL_2
0x4003662	    0x488b83880200	           mov rax, qword [rbx + 0x288] 	      3746	syntax.c	FUNCTION_54	CALL_4
0x4003669	      0x4a8b7c2008	         mov rdi, qword [rax + r12 + 8] 	      3746	syntax.c	FUNCTION_54	CALL_4
0x400366e	      0xe800000000	                          call 0x4003673	      3746	syntax.c	FUNCTION_54	CALL_4
0x4003673	    0x488b83880200	           mov rax, qword [rbx + 0x288] 	      3747	syntax.c	FUNCTION_54	CALL_6
0x400367a	      0x4a8b7c2010	      mov rdi, qword [rax + r12 + 0x10] 	      3747	syntax.c	FUNCTION_54	CALL_6
0x400367f	      0xe800000000	                          call 0x4003684	      3747	syntax.c	FUNCTION_54	CALL_6
0x4003684	          0x83ed01	                              sub ebp, 1	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003687	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      3633	syntax.c	FUNCTION_49	FOR_2
0x400368a	            0x75b7	                           jne 0x4003643	      3633	syntax.c	FUNCTION_49	FOR_2
0x400368c	    0x488dbb780200	                  lea rdi, [rbx + 0x278]	      3635	syntax.c	FUNCTION_49	CALL_6
0x4003693	      0xe800000000	                          call 0x4003698	      3635	syntax.c	FUNCTION_49	CALL_6
0x4003698	    0xc78390020000	              mov dword [rbx + 0x290], 0	      3636	syntax.c	FUNCTION_49
0x40036a2	    0xc78394020000	              mov dword [rbx + 0x294], 0	      3637	syntax.c	FUNCTION_49
0x40036ac	    0xc7839c020000	              mov dword [rbx + 0x29c], 0	      3639	syntax.c	FUNCTION_49
0x40036b6	    0x48c783a80200	              mov qword [rbx + 0x2a8], 0	      3640	syntax.c	FUNCTION_49
0x40036c1	    0x48c783b00200	              mov qword [rbx + 0x2b0], 0	      3641	syntax.c	FUNCTION_49
0x40036cc	    0x48c783b80200	              mov qword [rbx + 0x2b8], 0	      3642	syntax.c	FUNCTION_49
0x40036d7	    0x488bbbc80200	           mov rdi, qword [rbx + 0x2c8] 	      3644	syntax.c	FUNCTION_49	CALL_7
0x40036de	      0xe800000000	                          call 0x40036e3	      3644	syntax.c	FUNCTION_49	CALL_7
0x40036e3	    0x48c783c80200	              mov qword [rbx + 0x2c8], 0	      3645	syntax.c	FUNCTION_49
0x40036ee	    0x488bbbc00200	           mov rdi, qword [rbx + 0x2c0] 	      3646	syntax.c	FUNCTION_49	CALL_8
0x40036f5	          0x4885ff	                           test rdi, rdi	      3646	syntax.c	FUNCTION_49	CALL_8
0x40036f8	            0x7410	                            je 0x400370a	      3646	syntax.c	FUNCTION_49	CALL_8
0x40036fa	      0xe800000000	                          call 0x40036ff	      3646	syntax.c	FUNCTION_49	CALL_8
0x40036ff	    0x48c783c00200	              mov qword [rbx + 0x2c0], 0	      3646	syntax.c	FUNCTION_49	CALL_8
0x400370a	    0xc7830c030000	              mov dword [rbx + 0x30c], 0	      3648	syntax.c	FUNCTION_49
0x4003714	    0x488dbbb00400	                  lea rdi, [rbx + 0x4b0]	      3650	syntax.c	FUNCTION_49	CALL_9
0x400371b	      0xe800000000	                          call 0x4003720	      3650	syntax.c	FUNCTION_49	CALL_9
0x4003720	          0x4889df	                            mov rdi, rbx	      3653	syntax.c	FUNCTION_49	CALL_10
0x4003723	      0xe800000000	                          call 0x4003728	      3653	syntax.c	FUNCTION_49	CALL_10
0x4003728	      0xe8cccfffff	       call sym.invalidate_current_state	      3654	syntax.c	FUNCTION_49	CALL_11
0x400372d	    0xc70500000000	               mov dword [0x04003737], 0	      3657	syntax.c	FUNCTION_49
0x4003737	              0x5b	                                 pop rbx	      3658	syntax.c	FUNCTION_49
0x4003738	              0x5d	                                 pop rbp	      3658	syntax.c	FUNCTION_49
0x4003739	            0x415c	                                 pop r12	      3658	syntax.c	FUNCTION_49
0x400373b	              0xc3	                                     ret	      3658	syntax.c	FUNCTION_49
get_cterm_attr_idx	IF,0:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	22
0x4004b20	        0x4883ec38	                           sub rsp, 0x38	      8924	syntax.c	FUNCTION_132
0x4004b24	    0x64488b042528	                mov rax, qword fs:[0x28]	      8924	syntax.c	FUNCTION_132
0x4004b2d	      0x4889442428	             mov qword [rsp + 0x28], rax	      8924	syntax.c	FUNCTION_132
0x4004b32	            0x31c0	                            xor eax, eax	      8924	syntax.c	FUNCTION_132
0x4004b34	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004b3c	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004b45	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004b4e	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      8929	syntax.c	FUNCTION_132
0x4004b55	      0x4889442410	             mov qword [rsp + 0x10], rax	      8929	syntax.c	FUNCTION_132
0x4004b5a	      0x4889442418	             mov qword [rsp + 0x18], rax	      8930	syntax.c	FUNCTION_132
0x4004b5f	        0x66893c24	                      mov word [rsp], di	      8932	syntax.c	FUNCTION_132
0x4004b63	      0x6689742408	                  mov word [rsp + 8], si	      8933	syntax.c	FUNCTION_132
0x4004b68	      0x668954240a	                mov word [rsp + 0xa], dx	      8934	syntax.c	FUNCTION_132
0x4004b6d	          0x4889e6	                            mov rsi, rsp	      8935	syntax.c	FUNCTION_132	CALL_2
0x4004b70	      0xbf00000000	                              mov edi, 0	      8935	syntax.c	FUNCTION_132	CALL_2
0x4004b75	      0xe8adf9ffff	                 call sym.get_attr_entry	      8935	syntax.c	FUNCTION_132	CALL_2
0x4004b7a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      8936	syntax.c	FUNCTION_132
0x4004b7f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8936	syntax.c	FUNCTION_132
0x4004b88	            0x7405	                            je 0x4004b8f	      8936	syntax.c	FUNCTION_132
0x4004b8a	      0xe800000000	                          call 0x4004b8f	      8936	syntax.c	FUNCTION_132
0x4004b8f	        0x4883c438	                           add rsp, 0x38	      8936	syntax.c	FUNCTION_132
0x4004b93	              0xc3	                                     ret	      8936	syntax.c	FUNCTION_132
set_context_in_echohl_cmd	IF,0:CALL,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	4
0x4003a85	    0xc7070d000000	                    mov dword [rdi], 0xd	      6478	syntax.c	FUNCTION_99
0x4003a8b	        0x48897708	                mov qword [rdi + 8], rsi	      6479	syntax.c	FUNCTION_99
0x4003a8f	    0xc70500000000	               mov dword [0x04003a99], 1	      6480	syntax.c	FUNCTION_99
0x4003a99	              0xc3	                                     ret	      6480	syntax.c	FUNCTION_99
syn_stack_equal	IF,10:CALL,8:FOR,2:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	86
0x400145f	            0x4157	                                push r15	      1641	syntax.c	FUNCTION_21
0x4001461	            0x4156	                                push r14	      1641	syntax.c	FUNCTION_21
0x4001463	            0x4155	                                push r13	      1641	syntax.c	FUNCTION_21
0x4001465	            0x4154	                                push r12	      1641	syntax.c	FUNCTION_21
0x4001467	              0x55	                                push rbp	      1641	syntax.c	FUNCTION_21
0x4001468	              0x53	                                push rbx	      1641	syntax.c	FUNCTION_21
0x4001469	        0x4883ec08	                              sub rsp, 8	      1641	syntax.c	FUNCTION_21
0x400146d	    0x448bafbc0000	           mov r13d, dword [rdi + 0xbc] 	      1647	syntax.c	FUNCTION_21	IF_1
0x4001474	      0xb800000000	                              mov eax, 0	      1698	syntax.c	FUNCTION_21
0x4001479	    0x443b2d000000	           cmp r13d, dword [0x04001480] 	      1647	syntax.c	FUNCTION_21	IF_1
0x4001480	     0xf850c010000	                           jne 0x4001592	      1647	syntax.c	FUNCTION_21	IF_1
0x4001486	    0x488b0d000000	            mov rcx, qword [0x0400148d] 	      1648	syntax.c	FUNCTION_21	IF_1
0x400148d	    0x48398fc00000	            cmp qword [rdi + 0xc0], rcx 	      1648	syntax.c	FUNCTION_21	IF_1
0x4001494	     0xf85f8000000	                           jne 0x4001592	      1648	syntax.c	FUNCTION_21	IF_1
0x400149a	        0x4c8d7f10	                   lea r15, [rdi + 0x10]	      1654	syntax.c	FUNCTION_21	IF_1	ELSE_1
0x400149e	        0x4183fd07	                             cmp r13d, 7	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40014a2	     0xf8eda000000	                           jle 0x4001582	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40014a8	        0x4c8b7f20	            mov r15, qword [rdi + 0x20] 	      1652	syntax.c	FUNCTION_21	IF_1	CALL_1
0x40014ac	      0xe9d1000000	                           jmp 0x4001582	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x40014b1	          0x4963c5	                        movsxd rax, r13d	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x40014b4	        0x488d1440	                  lea rdx, [rax + rax*2]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x40014b8	        0x498d14d7	                  lea rdx, [r15 + rdx*8]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x40014bc	        0x488d04c0	                  lea rax, [rax + rax*8]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x40014c0	        0x48c1e004	                              shl rax, 4	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x40014c4	          0x4989c6	                            mov r14, rax	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x40014c7	    0x480305000000	             add rax, qword [0x040014ce]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x40014ce	            0x8b08	                    mov ecx, dword [rax]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x40014d0	            0x390a	                    cmp dword [rdx], ecx	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x40014d2	     0xf85b4000000	                           jne 0x400158c	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x40014d8	        0x488b5a10	            mov rbx, qword [rdx + 0x10] 	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x40014dc	    0x488ba8880000	            mov rbp, qword [rax + 0x88] 	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x40014e3	          0x4839eb	                            cmp rbx, rbp	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x40014e6	     0xf8496000000	                            je 0x4001582	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x40014ec	          0x4885db	                           test rbx, rbx	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x40014ef	     0xf8497000000	                            je 0x400158c	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x40014f5	          0x4885ed	                           test rbp, rbp	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x40014f8	     0xf848e000000	                            je 0x400158c	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x40014fe	        0x4883c308	                              add rbx, 8	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4001502	        0x4883c508	                              add rbp, 8	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4001506	    0x41bc00000000	                             mov r12d, 0	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x400150c	          0x488b3b	                    mov rdi, qword [rbx]	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x400150f	        0x488b7500	                    mov rsi, qword [rbp]	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4001513	          0x4839f7	                            cmp rdi, rsi	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4001516	            0x7450	                            je 0x4001568	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4001518	          0x4885f6	                           test rsi, rsi	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x400151b	            0x745f	                            je 0x400157c	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x400151d	          0x4885ff	                           test rdi, rdi	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4001520	            0x745a	                            je 0x400157c	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4001522	    0x488b05000000	            mov rax, qword [0x04001529] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001529	        0x4a630430	           movsxd rax, dword [rax + r14]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x400152d	        0x488d0480	                  lea rax, [rax + rax*4]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001531	        0x48c1e005	                              shl rax, 5	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001535	    0x488b15000000	            mov rdx, qword [0x0400153c] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x400153c	    0x480382700200	            add rax, qword [rdx + 0x270]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001543	        0x83782c00	               cmp dword [rax + 0x2c], 0	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001547	            0x7411	                            je 0x400155a	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001549	      0xbaffffff7f	                     mov edx, 0x7fffffff	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x400154e	      0xe800000000	                          call 0x4001553	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x4001553	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001555	           0xf95c0	                                setne al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001558	            0xeb0a	                           jmp 0x4001564	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x400155a	      0xe800000000	                          call 0x400155f	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x400155f	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001561	           0xf95c0	                                setne al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001564	            0x84c0	                             test al, al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001566	            0x7514	                           jne 0x400157c	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x4001568	        0x4183c401	                             add r12d, 1	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x400156c	        0x4883c308	                              add rbx, 8	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x4001570	        0x4883c508	                              add rbp, 8	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x4001574	        0x4183fc0a	                           cmp r12d, 0xa	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x4001578	            0x7592	                           jne 0x400150c	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x400157a	            0xeb06	                           jmp 0x4001582	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x400157c	        0x4183fc0a	                           cmp r12d, 0xa	      1691	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_9
0x4001580	            0x750a	                           jne 0x400158c	      1691	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_9
0x4001582	        0x4183ed01	                             sub r13d, 1	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x4001586	     0xf8925ffffff	                           jns 0x40014b1	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x400158c	          0x4489e8	                           mov eax, r13d	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
0x400158f	          0xc1e81f	                           shr eax, 0x1f	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
0x4001592	        0x4883c408	                              add rsp, 8	      1699	syntax.c	FUNCTION_21
0x4001596	              0x5b	                                 pop rbx	      1699	syntax.c	FUNCTION_21
0x4001597	              0x5d	                                 pop rbp	      1699	syntax.c	FUNCTION_21
0x4001598	            0x415c	                                 pop r12	      1699	syntax.c	FUNCTION_21
0x400159a	            0x415d	                                 pop r13	      1699	syntax.c	FUNCTION_21
0x400159c	            0x415e	                                 pop r14	      1699	syntax.c	FUNCTION_21
0x400159e	            0x415f	                                 pop r15	      1699	syntax.c	FUNCTION_21
0x40015a0	              0xc3	                                     ret	      1699	syntax.c	FUNCTION_21
invalidate_current_state	IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	7
0x40006f9	        0x4883ec08	                              sub rsp, 8	      1730	syntax.c	FUNCTION_23
0x40006fd	      0xe8a8ffffff	            call sym.clear_current_state	      1731	syntax.c	FUNCTION_23	CALL_1
0x4000702	    0xc70500000000	               mov dword [0x0400070c], 0	      1732	syntax.c	FUNCTION_23
0x400070c	    0x48c705000000	               mov qword [0x04000717], 0	      1733	syntax.c	FUNCTION_23
0x4000717	    0xc70500000000	     mov dword [0x04000721], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x4000721	        0x4883c408	                              add rsp, 8	      1735	syntax.c	FUNCTION_23
0x4000725	              0xc3	                                     ret	      1735	syntax.c	FUNCTION_23
get_tgc_attr_idx	IF,1:CALL,2:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	27
0x4004b94	        0x4883ec38	                           sub rsp, 0x38	      8945	syntax.c	FUNCTION_133
0x4004b98	    0x64488b042528	                mov rax, qword fs:[0x28]	      8945	syntax.c	FUNCTION_133
0x4004ba1	      0x4889442428	             mov qword [rsp + 0x28], rax	      8945	syntax.c	FUNCTION_133
0x4004ba6	            0x31c0	                            xor eax, eax	      8945	syntax.c	FUNCTION_133
0x4004ba8	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004bb0	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004bb9	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004bc2	        0x66893c24	                      mov word [rsp], di	      8949	syntax.c	FUNCTION_133
0x4004bc6	    0x4881fe99d4ff	             cmp rsi, 0xffffffffffffd499	      8950	syntax.c	FUNCTION_133	IF_1
0x4004bcd	            0x751c	                           jne 0x4004beb	      8950	syntax.c	FUNCTION_133	IF_1
0x4004bcf	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      8950	syntax.c	FUNCTION_133	IF_1
0x4004bd6	            0x7513	                           jne 0x4004beb	      8950	syntax.c	FUNCTION_133	IF_1
0x4004bd8	    0x48c7c09ad4ff	             mov rax, 0xffffffffffffd49a	      8954	syntax.c	FUNCTION_133	IF_1
0x4004bdf	      0x4889442410	             mov qword [rsp + 0x10], rax	      8954	syntax.c	FUNCTION_133	IF_1
0x4004be4	      0x4889442418	             mov qword [rsp + 0x18], rax	      8955	syntax.c	FUNCTION_133	IF_1
0x4004be9	            0xeb0a	                           jmp 0x4004bf5	      8955	syntax.c	FUNCTION_133	IF_1
0x4004beb	      0x4889742410	             mov qword [rsp + 0x10], rsi	      8959	syntax.c	FUNCTION_133	ELSE_1
0x4004bf0	      0x4889542418	             mov qword [rsp + 0x18], rdx	      8960	syntax.c	FUNCTION_133	ELSE_1
0x4004bf5	          0x4889e6	                            mov rsi, rsp	      8962	syntax.c	FUNCTION_133	CALL_2
0x4004bf8	      0xbf00000000	                              mov edi, 0	      8962	syntax.c	FUNCTION_133	CALL_2
0x4004bfd	      0xe825f9ffff	                 call sym.get_attr_entry	      8962	syntax.c	FUNCTION_133	CALL_2
0x4004c02	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      8963	syntax.c	FUNCTION_133
0x4004c07	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8963	syntax.c	FUNCTION_133
0x4004c10	            0x7405	                            je 0x4004c17	      8963	syntax.c	FUNCTION_133
0x4004c12	      0xe800000000	                          call 0x4004c17	      8963	syntax.c	FUNCTION_133
0x4004c17	        0x4883c438	                           add rsp, 0x38	      8963	syntax.c	FUNCTION_133
0x4004c1b	              0xc3	                                     ret	      8963	syntax.c	FUNCTION_133
syn_cmd_off	IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	5
0x4003041	        0x4883ec08	                              sub rsp, 8	      3910	syntax.c	FUNCTION_61
0x4003045	      0xbe00000000	                              mov esi, 0	      3911	syntax.c	FUNCTION_61	CALL_1
0x400304a	      0xe87dffffff	                  call sym.syn_cmd_onoff	      3911	syntax.c	FUNCTION_61	CALL_1
0x400304f	        0x4883c408	                              add rsp, 8	      3912	syntax.c	FUNCTION_61
0x4003053	              0xc3	                                     ret	      3912	syntax.c	FUNCTION_61
put_id_list	IF,6:CALL,13:FOR,1:ELSE,5:SWITCH,0:WHILE,0:DO,0:functions,0	70
0x400251a	              0x55	                                push rbp	      4227	syntax.c	FUNCTION_69
0x400251b	              0x53	                                push rbx	      4227	syntax.c	FUNCTION_69
0x400251c	        0x4883ec08	                              sub rsp, 8	      4227	syntax.c	FUNCTION_69
0x4002520	          0x4889f3	                            mov rbx, rsi	      4227	syntax.c	FUNCTION_69
0x4002523	            0x89d6	                            mov esi, edx	      4230	syntax.c	FUNCTION_69	CALL_1
0x4002525	      0xe800000000	                          call 0x400252a	      4230	syntax.c	FUNCTION_69	CALL_1
0x400252a	      0xbf3d000000	                           mov edi, 0x3d	      4231	syntax.c	FUNCTION_69	CALL_2
0x400252f	      0xe800000000	                          call 0x4002534	      4231	syntax.c	FUNCTION_69	CALL_2
0x4002534	           0xfb703	                   movzx eax, word [rbx]	      4232	syntax.c	FUNCTION_69	FOR_1
0x4002537	          0x6685c0	                             test ax, ax	      4232	syntax.c	FUNCTION_69	FOR_1
0x400253a	     0xf84e8000000	                            je 0x4002628	      4232	syntax.c	FUNCTION_69	FOR_1
0x4002540	            0x89c5	                            mov ebp, eax	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4002542	    0x8d90e0b1ffff	                 lea edx, [rax - 0x4e20]	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4002548	      0x6681fae703	                           cmp dx, 0x3e7	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x400254d	            0x7725	                            ja 0x4002574	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x400254f	      0x66837b0200	                   cmp word [rbx + 2], 0	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x4002554	            0x740f	                            je 0x4002565	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x4002556	      0xbf00000000	                              mov edi, 0	      4237	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_3
0x400255b	      0xe800000000	                          call 0x4002560	      4237	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_3
0x4002560	      0xe9a2000000	                           jmp 0x4002607	      4237	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_3
0x4002565	      0xbf00000000	                              mov edi, 0	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x400256a	      0xe800000000	                          call 0x400256f	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x400256f	      0xe993000000	                           jmp 0x4002607	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x4002574	    0x8d90f8adffff	                 lea edx, [rax - 0x5208]	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x400257a	      0x6681fae703	                           cmp dx, 0x3e7	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x400257f	            0x770c	                            ja 0x400258d	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4002581	      0xbf00000000	                              mov edi, 0	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x4002586	      0xe800000000	                          call 0x400258b	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x400258b	            0xeb7a	                           jmp 0x4002607	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x400258d	    0x8d9510aaffff	                 lea edx, [rbp - 0x55f0]	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4002593	      0x6681fae703	                           cmp dx, 0x3e7	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4002598	            0x770c	                            ja 0x40025a6	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x400259a	      0xbf00000000	                              mov edi, 0	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x400259f	      0xe800000000	                          call 0x40025a4	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x40025a4	            0xeb61	                           jmp 0x4002607	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x40025a6	        0x663dd759	                          cmp ax, 0x59d7	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x40025aa	            0x7e38	                           jle 0x40025e4	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x40025ac	      0xbf40000000	                           mov edi, 0x40	      4253	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_7
0x40025b1	      0xe800000000	                          call 0x40025b6	      4253	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_7
0x40025b6	    0x488b05000000	            mov rax, qword [0x040025bd] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x40025bd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x40025c1	      0x6681edd859	                          sub bp, 0x59d8	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x40025c6	        0x480fbfed	                           movsx rbp, bp	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x40025ca	      0x488d446d00	                  lea rax, [rbp + rbp*2]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x40025cf	        0x48c1e003	                              shl rax, 3	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x40025d3	    0x480382880200	            add rax, qword [rdx + 0x288]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x40025da	          0x488b38	                    mov rdi, qword [rax]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x40025dd	      0xe800000000	                          call 0x40025e2	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x40025e2	            0xeb23	                           jmp 0x4002607	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x40025e4	        0x480fbfc0	                           movsx rax, ax	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x40025e8	        0x488d14c0	                  lea rdx, [rax + rax*8]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x40025ec	        0x488d0450	                  lea rax, [rax + rdx*2]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x40025f0	        0x48c1e003	                              shl rax, 3	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x40025f4	    0x480305000000	             add rax, qword [0x040025fb]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x40025fb	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x4002602	      0xe800000000	                          call 0x4002607	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x4002607	      0x66837b0200	                   cmp word [rbx + 2], 0	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x400260c	            0x740a	                            je 0x4002618	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x400260e	      0xbf2c000000	                           mov edi, 0x2c	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_12
0x4002613	      0xe800000000	                          call 0x4002618	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_12
0x4002618	        0x4883c302	                              add rbx, 2	      4232	syntax.c	FUNCTION_69	FOR_1
0x400261c	           0xfb703	                   movzx eax, word [rbx]	      4232	syntax.c	FUNCTION_69	FOR_1
0x400261f	          0x6685c0	                             test ax, ax	      4232	syntax.c	FUNCTION_69	FOR_1
0x4002622	     0xf8518ffffff	                           jne 0x4002540	      4232	syntax.c	FUNCTION_69	FOR_1
0x4002628	      0xbf20000000	                           mov edi, 0x20	      4261	syntax.c	FUNCTION_69	CALL_13
0x400262d	      0xe800000000	                          call 0x4002632	      4261	syntax.c	FUNCTION_69	CALL_13
0x4002632	        0x4883c408	                              add rsp, 8	      4262	syntax.c	FUNCTION_69
0x4002636	              0x5b	                                 pop rbx	      4262	syntax.c	FUNCTION_69
0x4002637	              0x5d	                                 pop rbp	      4262	syntax.c	FUNCTION_69
0x4002638	              0xc3	                                     ret	      4262	syntax.c	FUNCTION_69
set_hl_attr	IF,8:CALL,9:FOR,0:ELSE,3:SWITCH,0:WHILE,0:DO,0:functions,0	135
0x4004803	              0x53	                                push rbx	      9526	syntax.c	FUNCTION_147
0x4004804	        0x4883ec30	                           sub rsp, 0x30	      9526	syntax.c	FUNCTION_147
0x4004808	    0x64488b042528	                mov rax, qword fs:[0x28]	      9526	syntax.c	FUNCTION_147
0x4004811	      0x4889442428	             mov qword [rsp + 0x28], rax	      9526	syntax.c	FUNCTION_147
0x4004816	            0x31c0	                            xor eax, eax	      9526	syntax.c	FUNCTION_147
0x4004818	          0x4863ff	                         movsxd rdi, edi	      9528	syntax.c	FUNCTION_147	CALL_1
0x400481b	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9528	syntax.c	FUNCTION_147	CALL_1
0x400481f	        0x488d1447	                  lea rdx, [rdi + rax*2]	      9528	syntax.c	FUNCTION_147	CALL_1
0x4004823	    0x488b05000000	            mov rax, qword [0x0400482a] 	      9528	syntax.c	FUNCTION_147	CALL_1
0x400482a	        0x488d1cd0	                  lea rbx, [rax + rdx*8]	      9528	syntax.c	FUNCTION_147	CALL_1
0x400482e	        0x488b7308	                mov rsi, qword [rbx + 8]	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x4004832	          0x4885f6	                           test rsi, rsi	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x4004835	            0x741a	                            je 0x4004851	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x4004837	      0xbf00000000	                              mov edi, 0	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x400483c	      0xb907000000	                              mov ecx, 7	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x4004841	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x4004843	           0xf97c2	                                 seta dl	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x4004846	           0xf92c0	                                 setb al	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x4004849	            0x38c2	                              cmp dl, al	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x400484b	     0xf84cb010000	                            je 0x4004a1c	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x4004851	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      9539	syntax.c	FUNCTION_147	IF_2
0x4004855	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9539	syntax.c	FUNCTION_147	IF_2
0x400485b	            0x7523	                           jne 0x4004880	      9539	syntax.c	FUNCTION_147	IF_2
0x400485d	    0x48817b4899d4	cmp qword [rbx + 0x48], 0xffffffffffffd499	      9540	syntax.c	FUNCTION_147	IF_2
0x4004865	            0x7519	                           jne 0x4004880	      9540	syntax.c	FUNCTION_147	IF_2
0x4004867	    0x48817b5099d4	cmp qword [rbx + 0x50], 0xffffffffffffd499	      9541	syntax.c	FUNCTION_147	IF_2
0x400486f	            0x750f	                           jne 0x4004880	      9541	syntax.c	FUNCTION_147	IF_2
0x4004871	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      9542	syntax.c	FUNCTION_147	IF_2
0x4004876	            0x7508	                           jne 0x4004880	      9542	syntax.c	FUNCTION_147	IF_2
0x4004878	          0x8b436c	            mov eax, dword [rbx + 0x6c] 	      9548	syntax.c	FUNCTION_147	IF_2
0x400487b	          0x894368	             mov dword [rbx + 0x68], eax	      9548	syntax.c	FUNCTION_147	IF_2
0x400487e	            0xeb37	                           jmp 0x40048b7	      9548	syntax.c	FUNCTION_147	IF_2
0x4004880	          0x8b536c	            mov edx, dword [rbx + 0x6c] 	      9552	syntax.c	FUNCTION_147	ELSE_1
0x4004883	        0x66891424	                      mov word [rsp], dx	      9552	syntax.c	FUNCTION_147	ELSE_1
0x4004887	      0x4889442408	                mov qword [rsp + 8], rax	      9553	syntax.c	FUNCTION_147	ELSE_1
0x400488c	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      9554	syntax.c	FUNCTION_147	ELSE_1
0x4004890	      0x4889442410	             mov qword [rsp + 0x10], rax	      9554	syntax.c	FUNCTION_147	ELSE_1
0x4004895	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      9555	syntax.c	FUNCTION_147	ELSE_1
0x4004899	      0x4889442418	             mov qword [rsp + 0x18], rax	      9555	syntax.c	FUNCTION_147	ELSE_1
0x400489e	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      9556	syntax.c	FUNCTION_147	ELSE_1
0x40048a2	      0x4889442420	             mov qword [rsp + 0x20], rax	      9556	syntax.c	FUNCTION_147	ELSE_1
0x40048a7	          0x4889e6	                            mov rsi, rsp	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_3
0x40048aa	      0xbf00000000	                              mov edi, 0	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_3
0x40048af	      0xe873fcffff	                 call sym.get_attr_entry	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_3
0x40048b4	          0x894368	             mov dword [rbx + 0x68], eax	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_3
0x40048b7	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      9567	syntax.c	FUNCTION_147	IF_3
0x40048bb	          0x4885c0	                           test rax, rax	      9567	syntax.c	FUNCTION_147	IF_3
0x40048be	            0x750f	                           jne 0x40048cf	      9567	syntax.c	FUNCTION_147	IF_3
0x40048c0	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      9567	syntax.c	FUNCTION_147	IF_3
0x40048c5	            0x7508	                           jne 0x40048cf	      9567	syntax.c	FUNCTION_147	IF_3
0x40048c7	          0x8b4314	            mov eax, dword [rbx + 0x14] 	      9568	syntax.c	FUNCTION_147	IF_3
0x40048ca	          0x894328	             mov dword [rbx + 0x28], eax	      9568	syntax.c	FUNCTION_147	IF_3
0x40048cd	            0xeb25	                           jmp 0x40048f4	      9568	syntax.c	FUNCTION_147	IF_3
0x40048cf	          0x8b5314	            mov edx, dword [rbx + 0x14] 	      9571	syntax.c	FUNCTION_147	ELSE_2
0x40048d2	        0x66891424	                      mov word [rsp], dx	      9571	syntax.c	FUNCTION_147	ELSE_2
0x40048d6	      0x4889442408	                mov qword [rsp + 8], rax	      9572	syntax.c	FUNCTION_147	ELSE_2
0x40048db	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9573	syntax.c	FUNCTION_147	ELSE_2
0x40048df	      0x4889442410	             mov qword [rsp + 0x10], rax	      9573	syntax.c	FUNCTION_147	ELSE_2
0x40048e4	          0x4889e6	                            mov rsi, rsp	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_4
0x40048e7	      0xbf00000000	                              mov edi, 0	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_4
0x40048ec	      0xe836fcffff	                 call sym.get_attr_entry	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_4
0x40048f1	          0x894328	             mov dword [rbx + 0x28], eax	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_4
0x40048f4	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      9581	syntax.c	FUNCTION_147	IF_4
0x40048f7	            0x85c0	                           test eax, eax	      9581	syntax.c	FUNCTION_147	IF_4
0x40048f9	            0x752f	                           jne 0x400492a	      9581	syntax.c	FUNCTION_147	IF_4
0x40048fb	        0x837b3800	               cmp dword [rbx + 0x38], 0	      9581	syntax.c	FUNCTION_147	IF_4
0x40048ff	            0x7529	                           jne 0x400492a	      9581	syntax.c	FUNCTION_147	IF_4
0x4004901	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      9583	syntax.c	FUNCTION_147	IF_4
0x4004905	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9583	syntax.c	FUNCTION_147	IF_4
0x400490b	     0xf85bd000000	                           jne 0x40049ce	      9583	syntax.c	FUNCTION_147	IF_4
0x4004911	    0x48817b4899d4	cmp qword [rbx + 0x48], 0xffffffffffffd499	      9584	syntax.c	FUNCTION_147	IF_4
0x4004919	     0xf85d6000000	                           jne 0x40049f5	      9584	syntax.c	FUNCTION_147	IF_4
0x400491f	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      9587	syntax.c	FUNCTION_147	IF_4
0x4004922	          0x89433c	             mov dword [rbx + 0x3c], eax	      9587	syntax.c	FUNCTION_147	IF_4
0x4004925	      0xe9f2000000	                           jmp 0x4004a1c	      9587	syntax.c	FUNCTION_147	IF_4
0x400492a	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      9590	syntax.c	FUNCTION_147	ELSE_3
0x400492d	        0x66891424	                      mov word [rsp], dx	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4004931	      0x6689442408	                  mov word [rsp + 8], ax	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4004936	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      9592	syntax.c	FUNCTION_147	ELSE_3
0x4004939	      0x668944240a	                mov word [rsp + 0xa], ax	      9592	syntax.c	FUNCTION_147	ELSE_3
0x400493e	    0x833d00000000	               cmp dword [0x04004945], 0	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4004945	            0x7416	                            je 0x400495d	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4004947	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x400494b	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4004951	            0x7413	                            je 0x4004966	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4004953	          0x4889c7	                            mov rdi, rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4004956	      0xe800000000	                          call 0x400495b	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x400495b	            0xeb09	                           jmp 0x4004966	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x400495d	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4004961	      0xe800000000	                          call 0x4004966	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4004966	      0x4889442410	             mov qword [rsp + 0x10], rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x400496b	    0x833d00000000	               cmp dword [0x04004972], 0	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4004972	            0x7416	                            je 0x400498a	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4004974	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4004978	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x400497e	            0x7413	                            je 0x4004993	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4004980	          0x4889c7	                            mov rdi, rax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4004983	      0xe800000000	                          call 0x4004988	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4004988	            0xeb09	                           jmp 0x4004993	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x400498a	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x400498e	      0xe800000000	                          call 0x4004993	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4004993	      0x4889442418	             mov qword [rsp + 0x18], rax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4004998	    0x48817c241099	cmp qword [rsp + 0x10], 0xffffffffffffd499	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40049a1	            0x7519	                           jne 0x40049bc	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40049a3	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40049a9	            0x7511	                           jne 0x40049bc	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40049ab	    0x48c7c09ad4ff	             mov rax, 0xffffffffffffd49a	      9618	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40049b2	      0x4889442410	             mov qword [rsp + 0x10], rax	      9618	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40049b7	      0x4889442418	             mov qword [rsp + 0x18], rax	      9619	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40049bc	          0x4889e6	                            mov rsi, rsp	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x40049bf	      0xbf00000000	                              mov edi, 0	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x40049c4	      0xe85efbffff	                 call sym.get_attr_entry	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x40049c9	          0x89433c	             mov dword [rbx + 0x3c], eax	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x40049cc	            0xeb4e	                           jmp 0x4004a1c	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x40049ce	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      9590	syntax.c	FUNCTION_147	ELSE_3
0x40049d1	        0x66891424	                      mov word [rsp], dx	      9590	syntax.c	FUNCTION_147	ELSE_3
0x40049d5	    0x66c744240800	                   mov word [rsp + 8], 0	      9591	syntax.c	FUNCTION_147	ELSE_3
0x40049dc	    0x66c744240a00	                 mov word [rsp + 0xa], 0	      9592	syntax.c	FUNCTION_147	ELSE_3
0x40049e3	    0x833d00000000	               cmp dword [0x040049ea], 0	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40049ea	     0xf8563ffffff	                           jne 0x4004953	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40049f0	      0xe968ffffff	                           jmp 0x400495d	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40049f5	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      9590	syntax.c	FUNCTION_147	ELSE_3
0x40049f8	        0x66891424	                      mov word [rsp], dx	      9590	syntax.c	FUNCTION_147	ELSE_3
0x40049fc	    0x66c744240800	                   mov word [rsp + 8], 0	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4004a03	    0x66c744240a00	                 mov word [rsp + 0xa], 0	      9592	syntax.c	FUNCTION_147	ELSE_3
0x4004a0a	    0x833d00000000	               cmp dword [0x04004a11], 0	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4004a11	     0xf854fffffff	                           jne 0x4004966	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4004a17	      0xe941ffffff	                           jmp 0x400495d	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4004a1c	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      9624	syntax.c	FUNCTION_147
0x4004a21	    0x644833042528	                xor rax, qword fs:[0x28]	      9624	syntax.c	FUNCTION_147
0x4004a2a	            0x7405	                            je 0x4004a31	      9624	syntax.c	FUNCTION_147
0x4004a2c	      0xe800000000	                          call 0x4004a31	      9624	syntax.c	FUNCTION_147
0x4004a31	        0x4883c430	                           add rsp, 0x30	      9624	syntax.c	FUNCTION_147
0x4004a35	              0x5b	                                 pop rbx	      9624	syntax.c	FUNCTION_147
0x4004a36	              0xc3	                                     ret	      9624	syntax.c	FUNCTION_147
update_si_attr	IF,7:CALL,8:FOR,0:ELSE,3:SWITCH,0:WHILE,0:DO,0:functions,0	78
0x4007b85	            0x4157	                                push r15	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4007b87	            0x4156	                                push r14	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4007b89	            0x4155	                                push r13	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4007b8b	            0x4154	                                push r12	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4007b8d	              0x55	                                push rbp	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4007b8e	              0x53	                                push rbx	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4007b8f	          0x4863c7	                         movsxd rax, edi	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x4007b92	        0x4c8d24c0	                  lea r12, [rax + rax*8]	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x4007b96	        0x49c1e404	                              shl r12, 4	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x4007b9a	          0x4c89e3	                            mov rbx, r12	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x4007b9d	    0x48031d000000	             add rbx, qword [0x04007ba4]	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x4007ba4	            0x8b03	                    mov eax, dword [rbx]	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x4007ba6	            0x85c0	                           test eax, eax	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x4007ba8	     0xf88f3000000	                            js 0x4007ca1	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x4007bae	          0x4189fd	                           mov r13d, edi	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x4007bb1	            0x4898	                                    cdqe	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4007bb3	        0x488d2c80	                  lea rbp, [rax + rax*4]	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4007bb7	        0x48c1e505	                              shl rbp, 5	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4007bbb	    0x488b05000000	            mov rax, qword [0x04007bc2] 	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4007bc2	    0x4803a8700200	            add rbp, qword [rax + 0x270]	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4007bc9	        0x4c8b7368	            mov r14, qword [rbx + 0x68] 	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4007bcd	        0x41f6c640	                         test r14b, 0x40	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4007bd1	            0x7421	                            je 0x4007bf4	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4007bd3	         0xfbf6d02	               movsx ebp, word [rbp + 2]	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4007bd7	          0x896b04	                mov dword [rbx + 4], ebp	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4007bda	            0x89ef	                            mov edi, ebp	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x4007bdc	      0xe800000000	                          call 0x4007be1	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x4007be1	          0x894360	             mov dword [rbx + 0x60], eax	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x4007be4	          0x896b08	                mov dword [rbx + 8], ebp	      2730	syntax.c	ELSE_2	FUNCTION_32
0x4007be7	    0x48c743780000	               mov qword [rbx + 0x78], 0	      2732	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x4007bef	      0xe9ad000000	                           jmp 0x4007ca1	      2732	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x4007bf4	      0x440fbf7d54	          movsx r15d, word [rbp + 0x54] 	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x4007bf9	        0x44897b04	               mov dword [rbx + 4], r15d	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x4007bfd	          0x4489ff	                           mov edi, r15d	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x4007c00	      0xe800000000	                          call 0x4007c05	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x4007c05	          0x894360	             mov dword [rbx + 0x60], eax	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x4007c08	        0x44897b08	               mov dword [rbx + 8], r15d	      2730	syntax.c	ELSE_2	FUNCTION_32
0x4007c0c	        0x488b4540	            mov rax, qword [rbp + 0x40] 	      2734	syntax.c	FUNCTION_32
0x4007c10	        0x48894378	             mov qword [rbx + 0x78], rax	      2734	syntax.c	FUNCTION_32
0x4007c14	        0xf6452402	               test byte [rbp + 0x24], 2	      2741	syntax.c	FUNCTION_32	IF_4
0x4007c18	     0xf8483000000	                            je 0x4007ca1	      2741	syntax.c	FUNCTION_32	IF_4
0x4007c1e	          0x4585ed	                         test r13d, r13d	      2743	syntax.c	FUNCTION_32	IF_4	IF_5
0x4007c21	            0x751d	                           jne 0x4007c40	      2743	syntax.c	FUNCTION_32	IF_4	IF_5
0x4007c23	    0xc74360000000	               mov dword [rbx + 0x60], 0	      2745	syntax.c	FUNCTION_32	IF_4	IF_5
0x4007c2a	    0xc74308000000	                  mov dword [rbx + 8], 0	      2746	syntax.c	FUNCTION_32	IF_4	IF_5
0x4007c31	          0x4885c0	                           test rax, rax	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4007c34	            0x756b	                           jne 0x4007ca1	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4007c36	    0x48c74378ffff	mov qword [rbx + 0x78], 0xffffffffffffffff	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4007c3e	            0xeb61	                           jmp 0x4007ca1	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4007c40	    0x4981ec900000	                           sub r12, 0x90	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4007c47	          0x4c89e2	                            mov rdx, r12	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4007c4a	    0x480315000000	             add rdx, qword [0x04007c51]	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4007c51	          0x8b4a60	            mov ecx, dword [rdx + 0x60] 	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4007c54	          0x894b60	             mov dword [rbx + 0x60], ecx	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4007c57	          0x8b5208	                mov edx, dword [rdx + 8]	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x4007c5a	          0x895308	                mov dword [rbx + 8], edx	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x4007c5d	    0x4c0325000000	             add r12, qword [0x04007c64]	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x4007c64	      0x498b742428	            mov rsi, qword [r12 + 0x28] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x4007c69	      0x498b7c2430	            mov rdi, qword [r12 + 0x30] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x4007c6e	        0x48897328	             mov qword [rbx + 0x28], rsi	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x4007c72	        0x48897b30	             mov qword [rbx + 0x30], rdi	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x4007c76	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x4007c7b	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x4007c80	        0x48897338	             mov qword [rbx + 0x38], rsi	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x4007c84	        0x48897b40	             mov qword [rbx + 0x40], rdi	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x4007c88	          0x4885c0	                           test rax, rax	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4007c8b	            0x7514	                           jne 0x4007ca1	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4007c8d	    0x4981ce000001	                         or r14, 0x10000	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4007c94	        0x4c897368	             mov qword [rbx + 0x68], r14	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4007c98	      0x498b442478	            mov rax, qword [r12 + 0x78] 	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x4007c9d	        0x48894378	             mov qword [rbx + 0x78], rax	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x4007ca1	              0x5b	                                 pop rbx	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4007ca2	              0x5d	                                 pop rbp	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4007ca3	            0x415c	                                 pop r12	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4007ca5	            0x415d	                                 pop r13	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4007ca7	            0x415e	                                 pop r14	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4007ca9	            0x415f	                                 pop r15	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4007cab	              0xc3	                                     ret	      2763	syntax.c	FUNCTION_32	ELSE_2
free_highlight_fonts	IF,0:CALL,11:FOR,1:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	24
0x400d5a1	              0x55	                                push rbp	     10349	syntax.c	FUNCTION_169
0x400d5a2	              0x53	                                push rbx	     10349	syntax.c	FUNCTION_169
0x400d5a3	        0x4883ec08	                              sub rsp, 8	     10349	syntax.c	FUNCTION_169
0x400d5a7	    0x833d00000000	               cmp dword [0x0400d5ae], 0	     10352	syntax.c	FUNCTION_169	FOR_1
0x400d5ae	            0x7e40	                           jle 0x400d5f0	     10352	syntax.c	FUNCTION_169	FOR_1
0x400d5b0	      0xbd00000000	                              mov ebp, 0	     10352	syntax.c	FUNCTION_169	FOR_1
0x400d5b5	          0x4863c5	                         movsxd rax, ebp	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x400d5b8	        0x488d14c0	                  lea rdx, [rax + rax*8]	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x400d5bc	        0x488d1c50	                  lea rbx, [rax + rdx*2]	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x400d5c0	        0x48c1e303	                              shl rbx, 3	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x400d5c4	    0x488b05000000	            mov rax, qword [0x0400d5cb] 	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x400d5cb	      0x488b7c1858	      mov rdi, qword [rax + rbx + 0x58] 	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x400d5d0	      0xe800000000	                          call 0x400d5d5	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x400d5d5	    0x488b05000000	            mov rax, qword [0x0400d5dc] 	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x400d5dc	    0x48c744185800	         mov qword [rax + rbx + 0x58], 0	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x400d5e5	          0x83c501	                              add ebp, 1	     10352	syntax.c	FUNCTION_169	FOR_1
0x400d5e8	    0x392d00000000	            cmp dword [0x0400d5ee], ebp 	     10352	syntax.c	FUNCTION_169	FOR_1
0x400d5ee	            0x7fc5	                            jg 0x400d5b5	     10352	syntax.c	FUNCTION_169	FOR_1
0x400d5f0	    0x488b3d000000	            mov rdi, qword [0x0400d5f7] 	     10362	syntax.c	FUNCTION_169	CALL_7
0x400d5f7	      0xe800000000	                          call 0x400d5fc	     10362	syntax.c	FUNCTION_169	CALL_7
0x400d5fc	        0x4883c408	                              add rsp, 8	     10371	syntax.c	FUNCTION_169
0x400d600	              0x5b	                                 pop rbx	     10371	syntax.c	FUNCTION_169
0x400d601	              0x5d	                                 pop rbp	     10371	syntax.c	FUNCTION_169
0x400d602	              0xc3	                                     ret	     10371	syntax.c	FUNCTION_169
syn_getcurline	IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	7
0x40009c1	        0x4883ec08	                              sub rsp, 8	      3304	syntax.c	FUNCTION_42
0x40009c5	      0xba00000000	                              mov edx, 0	      3305	syntax.c	FUNCTION_42	CALL_1
0x40009ca	    0x488b35000000	            mov rsi, qword [0x040009d1] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x40009d1	    0x488b3d000000	            mov rdi, qword [0x040009d8] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x40009d8	      0xe800000000	                          call 0x40009dd	      3305	syntax.c	FUNCTION_42	CALL_1
0x40009dd	        0x4883c408	                              add rsp, 8	      3306	syntax.c	FUNCTION_42
0x40009e1	              0xc3	                                     ret	      3306	syntax.c	FUNCTION_42
syn_match_msg	IF,1:CALL,5:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	23
0x40024ac	    0x488b05000000	            mov rax, qword [0x040024b3] 	      4050	syntax.c	FUNCTION_65	IF_1
0x40024b3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4050	syntax.c	FUNCTION_65	IF_1
0x40024b7	    0x4883b8b80200	              cmp qword [rax + 0x2b8], 0	      4050	syntax.c	FUNCTION_65	IF_1
0x40024bf	            0x7e57	                           jle 0x4002518	      4050	syntax.c	FUNCTION_65	IF_1
0x40024c1	        0x4883ec08	                              sub rsp, 8	      4049	syntax.c	FUNCTION_65
0x40024c5	      0xba05000000	                              mov edx, 5	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x40024ca	      0xbe00000000	                              mov esi, 0	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x40024cf	      0xbf00000000	                              mov edi, 0	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x40024d4	      0xe800000000	                          call 0x40024d9	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x40024d9	          0x4889c7	                            mov rdi, rax	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x40024dc	      0xe800000000	                          call 0x40024e1	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x40024e1	    0x488b05000000	            mov rax, qword [0x040024e8] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x40024e8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x40024ec	    0x488bb8b80200	           mov rdi, qword [rax + 0x2b8] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x40024f3	      0xe800000000	                          call 0x40024f8	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x40024f8	      0xba05000000	                              mov edx, 5	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40024fd	      0xbe00000000	                              mov esi, 0	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x4002502	      0xbf00000000	                              mov edi, 0	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x4002507	      0xe800000000	                          call 0x400250c	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x400250c	          0x4889c7	                            mov rdi, rax	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x400250f	      0xe800000000	                          call 0x4002514	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x4002514	        0x4883c408	                              add rsp, 8	      4056	syntax.c	FUNCTION_65
0x4002518	            0xf3c3	                                     ret	      4056	syntax.c	FUNCTION_65
save_chartab	IF,1:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	18
0x4000726	    0x488b05000000	            mov rax, qword [0x0400072d] 	      1014	syntax.c	FUNCTION_6	IF_1
0x400072d	    0x488b0d000000	            mov rcx, qword [0x04000734] 	      1014	syntax.c	FUNCTION_6	IF_1
0x4000734	    0x483988b00400	           cmp qword [rax + 0x4b0], rcx 	      1014	syntax.c	FUNCTION_6	IF_1
0x400073b	            0x743c	                            je 0x4000779	      1014	syntax.c	FUNCTION_6	IF_1
0x400073d	              0x53	                                push rbx	      1013	syntax.c	FUNCTION_6
0x400073e	    0x488b05000000	            mov rax, qword [0x04000745] 	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x4000745	    0x488d98a00900	                  lea rbx, [rax + 0x9a0]	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x400074c	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_191	CALL_3
0x4000751	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_191	CALL_3
0x4000754	      0xe800000000	                          call 0x4000759	        59	string3.h	FUNCTION_191	CALL_3
0x4000759	    0x488b05000000	            mov rax, qword [0x04000760] 	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4000760	        0x488b7010	            mov rsi, qword [rax + 0x10] 	        59	string3.h	FUNCTION_191	CALL_3
0x4000764	    0x4881c68c0400	                          add rsi, 0x48c	        59	string3.h	FUNCTION_191	CALL_3
0x400076b	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_191	CALL_3
0x4000770	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_191	CALL_3
0x4000773	      0xe800000000	                          call 0x4000778	        59	string3.h	FUNCTION_191	CALL_3
0x4000778	              0x5b	                                 pop rbx	      1020	syntax.c	FUNCTION_6
0x4000779	            0xf3c3	                                     ret	      1020	syntax.c	FUNCTION_6
highlight_exists	IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	7
0x4005850	        0x4883ec08	                              sub rsp, 8	      9668	syntax.c	FUNCTION_150
0x4005854	      0xe800000000	                          call 0x4005859	      9669	syntax.c	FUNCTION_150	CALL_1
0x4005859	            0x85c0	                           test eax, eax	      9669	syntax.c	FUNCTION_150	CALL_1
0x400585b	           0xf9fc0	                                 setg al	      9669	syntax.c	FUNCTION_150	CALL_1
0x400585e	           0xfb6c0	                           movzx eax, al	      9669	syntax.c	FUNCTION_150	CALL_1
0x4005861	        0x4883c408	                              add rsp, 8	      9670	syntax.c	FUNCTION_150
0x4005865	              0xc3	                                     ret	      9670	syntax.c	FUNCTION_150
hl_has_settings	IF,0:CALL,10:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	41
0x400044c	          0x4863ff	                         movsxd rdi, edi	      8340	syntax.c	FUNCTION_119	CALL_1
0x400044f	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      8340	syntax.c	FUNCTION_119	CALL_1
0x4000453	        0x488d1447	                  lea rdx, [rdi + rax*2]	      8340	syntax.c	FUNCTION_119	CALL_1
0x4000457	    0x488b05000000	            mov rax, qword [0x0400045e] 	      8340	syntax.c	FUNCTION_119	CALL_1
0x400045e	        0x488d14d0	                  lea rdx, [rax + rdx*8]	      8340	syntax.c	FUNCTION_119	CALL_1
0x4000462	      0xb801000000	                              mov eax, 1	      8351	syntax.c	FUNCTION_119	CALL_10
0x4000467	        0x837a2800	               cmp dword [rdx + 0x28], 0	      8351	syntax.c	FUNCTION_119	CALL_10
0x400046b	            0x7566	                           jne 0x40004d3	      8351	syntax.c	FUNCTION_119	CALL_10
0x400046d	        0x837a3c00	               cmp dword [rdx + 0x3c], 0	      8341	syntax.c	FUNCTION_119	CALL_2
0x4000471	            0x7560	                           jne 0x40004d3	      8341	syntax.c	FUNCTION_119	CALL_2
0x4000473	        0x837a3400	               cmp dword [rdx + 0x34], 0	      8342	syntax.c	FUNCTION_119	CALL_3
0x4000477	            0x755a	                           jne 0x40004d3	      8342	syntax.c	FUNCTION_119	CALL_3
0x4000479	        0x837a3800	               cmp dword [rdx + 0x38], 0	      8343	syntax.c	FUNCTION_119	CALL_4
0x400047d	            0x7554	                           jne 0x40004d3	      8343	syntax.c	FUNCTION_119	CALL_4
0x400047f	          0x8b4268	            mov eax, dword [rdx + 0x68] 	      8345	syntax.c	FUNCTION_119	CALL_5
0x4000482	            0x85c0	                           test eax, eax	      8345	syntax.c	FUNCTION_119	CALL_5
0x4000484	            0x7530	                           jne 0x40004b6	      8345	syntax.c	FUNCTION_119	CALL_5
0x4000486	      0x48837a7000	               cmp qword [rdx + 0x70], 0	      8346	syntax.c	FUNCTION_119	CALL_6
0x400048b	            0x752f	                           jne 0x40004bc	      8346	syntax.c	FUNCTION_119	CALL_6
0x400048d	      0x48837a7800	               cmp qword [rdx + 0x78], 0	      8347	syntax.c	FUNCTION_119	CALL_7
0x4000492	            0x752e	                           jne 0x40004c2	      8347	syntax.c	FUNCTION_119	CALL_7
0x4000494	    0x4883ba800000	               cmp qword [rdx + 0x80], 0	      8348	syntax.c	FUNCTION_119	CALL_8
0x400049c	            0x752a	                           jne 0x40004c8	      8348	syntax.c	FUNCTION_119	CALL_8
0x400049e	      0x48837a6000	               cmp qword [rdx + 0x60], 0	      8349	syntax.c	FUNCTION_119	CALL_9
0x40004a3	            0x7529	                           jne 0x40004ce	      8349	syntax.c	FUNCTION_119	CALL_9
0x40004a5	            0x85f6	                           test esi, esi	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004a7	            0x742a	                            je 0x40004d3	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004a9	    0x8b828c000000	            mov eax, dword [rdx + 0x8c] 	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004af	          0xc1e803	                              shr eax, 3	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004b2	          0x83e001	                              and eax, 1	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004b5	              0xc3	                                     ret	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004b6	      0xb801000000	                              mov eax, 1	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004bb	              0xc3	                                     ret	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004bc	      0xb801000000	                              mov eax, 1	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004c1	              0xc3	                                     ret	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004c2	      0xb801000000	                              mov eax, 1	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004c7	              0xc3	                                     ret	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004c8	      0xb801000000	                              mov eax, 1	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004cd	              0xc3	                                     ret	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004ce	      0xb801000000	                              mov eax, 1	      8351	syntax.c	FUNCTION_119	CALL_10
0x40004d3	            0xf3c3	                                     ret	      8352	syntax.c	FUNCTION_119
syn_cmd_list	IF,11:CALL,39:FOR,2:ELSE,7:SWITCH,0:WHILE,1:DO,0:functions,0	211
0x400a774	            0x4157	                                push r15	      3935	syntax.c	FUNCTION_63
0x400a776	            0x4156	                                push r14	      3935	syntax.c	FUNCTION_63
0x400a778	            0x4155	                                push r13	      3935	syntax.c	FUNCTION_63
0x400a77a	            0x4154	                                push r12	      3935	syntax.c	FUNCTION_63
0x400a77c	              0x55	                                push rbp	      3935	syntax.c	FUNCTION_63
0x400a77d	              0x53	                                push rbx	      3935	syntax.c	FUNCTION_63
0x400a77e	        0x4883ec08	                              sub rsp, 8	      3935	syntax.c	FUNCTION_63
0x400a782	          0x4989fc	                            mov r12, rdi	      3935	syntax.c	FUNCTION_63
0x400a785	          0x4189f5	                           mov r13d, esi	      3935	syntax.c	FUNCTION_63
0x400a788	          0x488b1f	                    mov rbx, qword [rdi]	      3936	syntax.c	FUNCTION_63
0x400a78b	          0x4889df	                            mov rdi, rbx	      3940	syntax.c	FUNCTION_63	CALL_1
0x400a78e	      0xe800000000	                          call 0x400a793	      3940	syntax.c	FUNCTION_63	CALL_1
0x400a793	      0x4989442408	                mov qword [r12 + 8], rax	      3940	syntax.c	FUNCTION_63	CALL_1
0x400a798	    0x41837c243000	               cmp dword [r12 + 0x30], 0	      3941	syntax.c	FUNCTION_63	IF_1
0x400a79e	     0xf851a030000	                           jne 0x400aabe	      3941	syntax.c	FUNCTION_63	IF_1
0x400a7a4	    0x488b2d000000	            mov rbp, qword [0x0400a7ab] 	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x400a7ab	          0x4889ef	                            mov rdi, rbp	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x400a7ae	      0xe800000000	                          call 0x400a7b3	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x400a7b3	            0x85c0	                           test eax, eax	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x400a7b5	            0x7521	                           jne 0x400a7d8	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x400a7b7	      0xba05000000	                              mov edx, 5	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400a7bc	      0xbe00000000	                              mov esi, 0	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400a7c1	      0xbf00000000	                              mov edi, 0	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400a7c6	      0xe800000000	                          call 0x400a7cb	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400a7cb	          0x4889c7	                            mov rdi, rax	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400a7ce	      0xe800000000	                          call 0x400a7d3	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400a7d3	      0xe9e6020000	                           jmp 0x400aabe	      3947	syntax.c	FUNCTION_63	IF_2
0x400a7d8	          0x4585ed	                         test r13d, r13d	      3950	syntax.c	FUNCTION_63	IF_3
0x400a7db	     0xf8432010000	                            je 0x400a913	      3950	syntax.c	FUNCTION_63	IF_3
0x400a7e1	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x400a7e5	    0x8b829c020000	           mov eax, dword [rdx + 0x29c] 	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x400a7eb	            0xa801	                              test al, 1	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x400a7ed	            0x742b	                            je 0x400a81a	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x400a7ef	      0xba05000000	                              mov edx, 5	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400a7f4	      0xbe00000000	                              mov esi, 0	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400a7f9	      0xbf00000000	                              mov edi, 0	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400a7fe	      0xe800000000	                          call 0x400a803	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400a803	          0x4889c7	                            mov rdi, rax	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400a806	      0xe800000000	                          call 0x400a80b	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400a80b	      0xe89b7bffff	                  call sym.syn_lines_msg	      3955	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_7
0x400a810	      0xe8977cffff	                  call sym.syn_match_msg	      3956	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_8
0x400a815	      0xe9a4020000	                           jmp 0x400aabe	      3957	syntax.c	FUNCTION_63	IF_3	IF_4
0x400a81a	            0xa802	                              test al, 2	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x400a81c	     0xf8584000000	                           jne 0x400a8a6	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x400a822	    0x4883baa80200	              cmp qword [rdx + 0x2a8], 0	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x400a82a	            0x7521	                           jne 0x400a84d	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x400a82c	      0xba05000000	                              mov edx, 5	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400a831	      0xbe00000000	                              mov esi, 0	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400a836	      0xbf00000000	                              mov edi, 0	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400a83b	      0xe800000000	                          call 0x400a840	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400a840	          0x4889c7	                            mov rdi, rax	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400a843	      0xe800000000	                          call 0x400a848	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400a848	      0xe971020000	                           jmp 0x400aabe	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400a84d	      0xba05000000	                              mov edx, 5	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400a852	      0xbe00000000	                              mov esi, 0	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400a857	      0xbf00000000	                              mov edi, 0	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400a85c	      0xe800000000	                          call 0x400a861	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400a861	          0x4889c7	                            mov rdi, rax	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400a864	      0xe800000000	                          call 0x400a869	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400a869	    0x488b05000000	            mov rax, qword [0x0400a870] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x400a870	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x400a874	    0x488bb8a80200	           mov rdi, qword [rax + 0x2a8] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x400a87b	      0xe800000000	                          call 0x400a880	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x400a880	      0xba05000000	                              mov edx, 5	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400a885	      0xbe00000000	                              mov esi, 0	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400a88a	      0xbf00000000	                              mov edi, 0	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400a88f	      0xe800000000	                          call 0x400a894	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400a894	          0x4889c7	                            mov rdi, rax	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400a897	      0xe800000000	                          call 0x400a89c	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400a89c	      0xe80b7cffff	                  call sym.syn_match_msg	      3968	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_16
0x400a8a1	      0xe918020000	                           jmp 0x400aabe	      3968	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_16
0x400a8a6	      0xba05000000	                              mov edx, 5	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400a8ab	      0xbe00000000	                              mov esi, 0	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400a8b0	      0xbf00000000	                              mov edi, 0	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400a8b5	      0xe800000000	                          call 0x400a8ba	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400a8ba	          0x4889c7	                            mov rdi, rax	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400a8bd	      0xe800000000	                          call 0x400a8c2	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400a8c2	    0x488b05000000	            mov rax, qword [0x0400a8c9] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x400a8c9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x400a8cd	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x400a8d5	            0x7f14	                            jg 0x400a8eb	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x400a8d7	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x400a8df	            0x7f0a	                            jg 0x400a8eb	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x400a8e1	    0x4883b8b80200	              cmp qword [rax + 0x2b8], 0	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x400a8e9	            0x7e44	                           jle 0x400a92f	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x400a8eb	      0xba05000000	                              mov edx, 5	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400a8f0	      0xbe00000000	                              mov esi, 0	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400a8f5	      0xbf00000000	                              mov edi, 0	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400a8fa	      0xe800000000	                          call 0x400a8ff	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400a8ff	          0x4889c7	                            mov rdi, rax	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400a902	      0xe800000000	                          call 0x400a907	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400a907	      0xe89f7affff	                  call sym.syn_lines_msg	      3978	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_21
0x400a90c	      0xe89b7bffff	                  call sym.syn_match_msg	      3979	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_22
0x400a911	            0xeb1c	                           jmp 0x400a92f	      3979	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_22
0x400a913	      0xba05000000	                              mov edx, 5	      3983	syntax.c	FUNCTION_63	CALL_24
0x400a918	      0xbe00000000	                              mov esi, 0	      3983	syntax.c	FUNCTION_63	CALL_24
0x400a91d	      0xbf00000000	                              mov edi, 0	      3983	syntax.c	FUNCTION_63	CALL_24
0x400a922	      0xe800000000	                          call 0x400a927	      3983	syntax.c	FUNCTION_63	CALL_24
0x400a927	          0x4889c7	                            mov rdi, rax	      3983	syntax.c	FUNCTION_63	CALL_24
0x400a92a	      0xe800000000	                          call 0x400a92f	      3983	syntax.c	FUNCTION_63	CALL_24
0x400a92f	           0xfb63b	                   movzx edi, byte [rbx]	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x400a932	      0xe800000000	                          call 0x400a937	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x400a937	            0x85c0	                           test eax, eax	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x400a939	     0xf8458010000	                            je 0x400aa97	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x400a93f	    0x833d00000000	               cmp dword [0x0400a946], 0	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a946	            0x7e29	                           jle 0x400a971	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a948	    0x8b0500000000	            mov eax, dword [0x0400a94e] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a94e	            0x85c0	                           test eax, eax	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a950	            0x751f	                           jne 0x400a971	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a952	      0xbd01000000	                              mov ebp, 1	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a957	      0xba00000000	                              mov edx, 0	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x400a95c	          0x4489ee	                           mov esi, r13d	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x400a95f	            0x89ef	                            mov edi, ebp	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x400a961	      0xe86cfaffff	                   call sym.syn_list_one	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x400a966	          0x83c501	                              add ebp, 1	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a969	    0x392d00000000	            cmp dword [0x0400a96f], ebp 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a96f	            0x7d2c	                           jge 0x400a99d	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a971	    0x488b05000000	            mov rax, qword [0x0400a978] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a978	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a97c	    0x83b878020000	              cmp dword [rax + 0x278], 0	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a983	     0xf8e28010000	                           jle 0x400aab1	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a989	    0x8b0500000000	            mov eax, dword [0x0400a98f] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a98f	      0xbd00000000	                              mov ebp, 0	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a994	            0x85c0	                           test eax, eax	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a996	            0x7411	                            je 0x400a9a9	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a998	      0xe914010000	                           jmp 0x400aab1	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a99d	    0x8b0500000000	            mov eax, dword [0x0400a9a3] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a9a3	            0x85c0	                           test eax, eax	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a9a5	            0x74b0	                            je 0x400a957	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a9a7	            0xebc8	                           jmp 0x400a971	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400a9a9	            0x89ef	                            mov edi, ebp	      3992	syntax.c	FUNCTION_63	IF_8	CALL_27
0x400a9ab	      0xe8897cffff	               call sym.syn_list_cluster	      3992	syntax.c	FUNCTION_63	IF_8	CALL_27
0x400a9b0	          0x83c501	                              add ebp, 1	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a9b3	    0x488b05000000	            mov rax, qword [0x0400a9ba] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a9ba	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a9be	    0x39a878020000	           cmp dword [rax + 0x278], ebp 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a9c4	     0xf8ee7000000	                           jle 0x400aab1	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a9ca	    0x8b0500000000	            mov eax, dword [0x0400a9d0] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a9d0	            0x85c0	                           test eax, eax	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a9d2	            0x74d5	                            je 0x400a9a9	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a9d4	      0xe9d8000000	                           jmp 0x400aab1	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400a9d9	          0x4889df	                            mov rdi, rbx	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x400a9dc	      0xe800000000	                          call 0x400a9e1	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x400a9e1	          0x4889c5	                            mov rbp, rax	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x400a9e4	          0x803b40	                    cmp byte [rbx], 0x40	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x400a9e7	            0x7561	                           jne 0x400aa4a	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x400a9e9	          0x4889c6	                            mov rsi, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x400a9ec	          0x4829de	                            sub rsi, rbx	      5560	syntax.c	FUNCTION_85	CALL_1
0x400a9ef	          0x83ee01	                              sub esi, 1	      5560	syntax.c	FUNCTION_85	CALL_1
0x400a9f2	        0x488d7b01	                      lea rdi, [rbx + 1]	      5560	syntax.c	FUNCTION_85	CALL_1
0x400a9f6	      0xe800000000	                          call 0x400a9fb	      5560	syntax.c	FUNCTION_85	CALL_1
0x400a9fb	          0x4989c6	                            mov r14, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x400a9fe	          0x4885c0	                           test rax, rax	      5561	syntax.c	FUNCTION_85	IF_1
0x400aa01	            0x7418	                            je 0x400aa1b	      5561	syntax.c	FUNCTION_85	IF_1
0x400aa03	          0x4889c7	                            mov rdi, rax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x400aa06	      0xe88474ffff	                call sym.syn_scl_name2id	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x400aa0b	          0x4189c7	                           mov r15d, eax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x400aa0e	          0x4c89f7	                            mov rdi, r14	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400aa11	      0xe800000000	                          call 0x400aa16	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400aa16	          0x4585ff	                         test r15d, r15d	      4005	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	IF_10
0x400aa19	            0x7521	                           jne 0x400aa3c	      4005	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	IF_10
0x400aa1b	      0xba05000000	                              mov edx, 5	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400aa20	      0xbe00000000	                              mov esi, 0	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400aa25	      0xbf00000000	                              mov edi, 0	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400aa2a	      0xe800000000	                          call 0x400aa2f	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400aa2f	          0x4889de	                            mov rsi, rbx	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400aa32	          0x4889c7	                            mov rdi, rax	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400aa35	      0xe800000000	                          call 0x400aa3a	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400aa3a	            0xeb50	                           jmp 0x400aa8c	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400aa3c	    0x418dbf28a6ff	                 lea edi, [r15 - 0x59d8]	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x400aa43	      0xe8f17bffff	               call sym.syn_list_cluster	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x400aa48	            0xeb42	                           jmp 0x400aa8c	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x400aa4a	          0x4889c6	                            mov rsi, rax	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x400aa4d	          0x4829de	                            sub rsi, rbx	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x400aa50	          0x4889df	                            mov rdi, rbx	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x400aa53	      0xe800000000	                          call 0x400aa58	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x400aa58	            0x85c0	                           test eax, eax	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x400aa5a	            0x7521	                           jne 0x400aa7d	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x400aa5c	      0xba05000000	                              mov edx, 5	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400aa61	      0xbe00000000	                              mov esi, 0	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400aa66	      0xbf00000000	                              mov edi, 0	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400aa6b	      0xe800000000	                          call 0x400aa70	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400aa70	          0x4889de	                            mov rsi, rbx	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400aa73	          0x4889c7	                            mov rdi, rax	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400aa76	      0xe800000000	                          call 0x400aa7b	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400aa7b	            0xeb0f	                           jmp 0x400aa8c	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400aa7d	      0xba01000000	                              mov edx, 1	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400aa82	          0x4489ee	                           mov esi, r13d	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400aa85	            0x89c7	                            mov edi, eax	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400aa87	      0xe846f9ffff	                   call sym.syn_list_one	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400aa8c	          0x4889ef	                            mov rdi, rbp	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x400aa8f	      0xe800000000	                          call 0x400aa94	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x400aa94	          0x4889c3	                            mov rbx, rax	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x400aa97	           0xfb63b	                   movzx edi, byte [rbx]	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400aa9a	      0xe800000000	                          call 0x400aa9f	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400aa9f	            0x85c0	                           test eax, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400aaa1	            0x750e	                           jne 0x400aab1	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400aaa3	    0x8b0500000000	            mov eax, dword [0x0400aaa9] 	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400aaa9	            0x85c0	                           test eax, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400aaab	     0xf8428ffffff	                            je 0x400a9d9	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400aab1	          0x4889df	                            mov rdi, rbx	      4021	syntax.c	FUNCTION_63	CALL_39
0x400aab4	      0xe800000000	                          call 0x400aab9	      4021	syntax.c	FUNCTION_63	CALL_39
0x400aab9	      0x4989442408	                mov qword [r12 + 8], rax	      4021	syntax.c	FUNCTION_63	CALL_39
0x400aabe	        0x4883c408	                              add rsp, 8	      4022	syntax.c	FUNCTION_63
0x400aac2	              0x5b	                                 pop rbx	      4022	syntax.c	FUNCTION_63
0x400aac3	              0x5d	                                 pop rbp	      4022	syntax.c	FUNCTION_63
0x400aac4	            0x415c	                                 pop r12	      4022	syntax.c	FUNCTION_63
0x400aac6	            0x415d	                                 pop r13	      4022	syntax.c	FUNCTION_63
0x400aac8	            0x415e	                                 pop r14	      4022	syntax.c	FUNCTION_63
0x400aaca	            0x415f	                                 pop r15	      4022	syntax.c	FUNCTION_63
0x400aacc	              0xc3	                                     ret	      4022	syntax.c	FUNCTION_63
syn_match_linecont	IF,1:CALL,4:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	36
0x4000902	              0x55	                                push rbp	      1034	syntax.c	FUNCTION_8
0x4000903	              0x53	                                push rbx	      1034	syntax.c	FUNCTION_8
0x4000904	    0x4881ec880100	                          sub rsp, 0x188	      1034	syntax.c	FUNCTION_8
0x400090b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1034	syntax.c	FUNCTION_8
0x4000914	    0x488984247801	            mov qword [rsp + 0x178], rax	      1034	syntax.c	FUNCTION_8
0x400091c	            0x31c0	                            xor eax, eax	      1034	syntax.c	FUNCTION_8
0x400091e	    0x488b1d000000	            mov rbx, qword [0x04000925] 	      1039	syntax.c	FUNCTION_8	IF_1
0x4000925	    0x4883bbc80200	              cmp qword [rbx + 0x2c8], 0	      1039	syntax.c	FUNCTION_8	IF_1
0x400092d	            0x7462	                            je 0x4000991	      1039	syntax.c	FUNCTION_8	IF_1
0x400092f	          0x4889fd	                            mov rbp, rdi	      1039	syntax.c	FUNCTION_8	IF_1
0x4000932	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	      1042	syntax.c	FUNCTION_8	IF_1	CALL_1
0x400093a	      0xe8e7fdffff	                   call sym.save_chartab	      1042	syntax.c	FUNCTION_8	IF_1	CALL_1
0x400093f	    0x8b8300030000	           mov eax, dword [rbx + 0x300] 	      1043	syntax.c	FUNCTION_8	IF_1
0x4000945	    0x898424480100	            mov dword [rsp + 0x148], eax	      1043	syntax.c	FUNCTION_8	IF_1
0x400094c	    0x488b83c80200	           mov rax, qword [rbx + 0x2c8] 	      1044	syntax.c	FUNCTION_8	IF_1
0x4000953	        0x48890424	                    mov qword [rsp], rax	      1044	syntax.c	FUNCTION_8	IF_1
0x4000957	    0x488d8bd00200	                  lea rcx, [rbx + 0x2d0]	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x400095e	      0xba00000000	                              mov edx, 0	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000963	          0x4889ee	                            mov rsi, rbp	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000966	          0x4889e7	                            mov rdi, rsp	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000969	      0xe84dfeffff	                    call sym.syn_regexec	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x400096e	            0x89c3	                            mov ebx, eax	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000970	        0x488b1424	                    mov rdx, qword [rsp]	      1047	syntax.c	FUNCTION_8	IF_1
0x4000974	    0x488b05000000	            mov rax, qword [0x0400097b] 	      1047	syntax.c	FUNCTION_8	IF_1
0x400097b	    0x488990c80200	            mov qword [rax + 0x2c8], rdx	      1047	syntax.c	FUNCTION_8	IF_1
0x4000982	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	      1048	syntax.c	FUNCTION_8	IF_1	CALL_4
0x400098a	      0xe8ecfdffff	                call sym.restore_chartab	      1048	syntax.c	FUNCTION_8	IF_1	CALL_4
0x400098f	            0x89d8	                            mov eax, ebx	      1049	syntax.c	FUNCTION_8	IF_1
0x4000991	    0x488bb4247801	           mov rsi, qword [rsp + 0x178] 	      1052	syntax.c	FUNCTION_8
0x4000999	    0x644833342528	                xor rsi, qword fs:[0x28]	      1052	syntax.c	FUNCTION_8
0x40009a2	            0x7405	                            je 0x40009a9	      1052	syntax.c	FUNCTION_8
0x40009a4	      0xe800000000	                          call 0x40009a9	      1052	syntax.c	FUNCTION_8
0x40009a9	    0x4881c4880100	                          add rsp, 0x188	      1052	syntax.c	FUNCTION_8
0x40009b0	              0x5b	                                 pop rbx	      1052	syntax.c	FUNCTION_8
0x40009b1	              0x5d	                                 pop rbp	      1052	syntax.c	FUNCTION_8
0x40009b2	              0xc3	                                     ret	      1052	syntax.c	FUNCTION_8
syn_cmd_onoff	IF,1:CALL,4:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	30
0x4002fcc	              0x55	                                push rbp	      3916	syntax.c	FUNCTION_62
0x4002fcd	              0x53	                                push rbx	      3916	syntax.c	FUNCTION_62
0x4002fce	        0x4883ec78	                           sub rsp, 0x78	      3916	syntax.c	FUNCTION_62
0x4002fd2	          0x4889fb	                            mov rbx, rdi	      3916	syntax.c	FUNCTION_62
0x4002fd5	          0x4889f5	                            mov rbp, rsi	      3916	syntax.c	FUNCTION_62
0x4002fd8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3916	syntax.c	FUNCTION_62
0x4002fe1	      0x4889442468	             mov qword [rsp + 0x68], rax	      3916	syntax.c	FUNCTION_62
0x4002fe6	            0x31c0	                            xor eax, eax	      3916	syntax.c	FUNCTION_62
0x4002fe8	          0x488b3f	                    mov rdi, qword [rdi]	      3919	syntax.c	FUNCTION_62	CALL_1
0x4002feb	      0xe800000000	                          call 0x4002ff0	      3919	syntax.c	FUNCTION_62	CALL_1
0x4002ff0	        0x48894308	                mov qword [rbx + 8], rax	      3919	syntax.c	FUNCTION_62	CALL_1
0x4002ff4	        0x837b3000	               cmp dword [rbx + 0x30], 0	      3920	syntax.c	FUNCTION_62	IF_1
0x4002ff8	            0x752b	                           jne 0x4003025	      3920	syntax.c	FUNCTION_62	IF_1
0x4002ffa	    0xc70424736f20	               mov dword [rsp], 0x206f73	       110	string3.h	FUNCTION_196	CALL_3
0x4003001	      0x488d7c2403	                      lea rdi, [rsp + 3]	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4003006	          0x4889e9	                            mov rcx, rbp	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4003009	      0xba00000000	                              mov edx, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x400300e	      0xbe61000000	                           mov esi, 0x61	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4003013	      0xb800000000	                              mov eax, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4003018	      0xe800000000	                          call 0x400301d	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x400301d	          0x4889e7	                            mov rdi, rsp	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x4003020	      0xe800000000	                          call 0x4003025	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x4003025	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3926	syntax.c	FUNCTION_62
0x400302a	    0x644833042528	                xor rax, qword fs:[0x28]	      3926	syntax.c	FUNCTION_62
0x4003033	            0x7405	                            je 0x400303a	      3926	syntax.c	FUNCTION_62
0x4003035	      0xe800000000	                          call 0x400303a	      3926	syntax.c	FUNCTION_62
0x400303a	        0x4883c478	                           add rsp, 0x78	      3926	syntax.c	FUNCTION_62
0x400303e	              0x5b	                                 pop rbx	      3926	syntax.c	FUNCTION_62
0x400303f	              0x5d	                                 pop rbp	      3926	syntax.c	FUNCTION_62
0x4003040	              0xc3	                                     ret	      3926	syntax.c	FUNCTION_62
hl_get_font_name	IF,2:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	18
0x4005718	        0x4883ec08	                              sub rsp, 8	      8520	syntax.c	FUNCTION_123
0x400571c	      0xbf00000000	                              mov edi, 0	      8524	syntax.c	FUNCTION_123	CALL_1
0x4005721	      0xe800000000	                          call 0x4005726	      8524	syntax.c	FUNCTION_123	CALL_1
0x4005726	            0x85c0	                           test eax, eax	      8525	syntax.c	FUNCTION_123	IF_1
0x4005728	            0x7e27	                           jle 0x4005751	      8525	syntax.c	FUNCTION_123	IF_1
0x400572a	            0x4898	                                    cdqe	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x400572c	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x4005730	        0x488d0450	                  lea rax, [rax + rdx*2]	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x4005734	        0x48c1e003	                              shl rax, 3	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x4005738	    0x480305000000	             add rax, qword [0x0400573f]	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x400573f	        0x488b40c8	             mov rax, qword [rax - 0x38]	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x4005743	          0x4885c0	                           test rax, rax	      8529	syntax.c	FUNCTION_123	IF_1	IF_2
0x4005746	      0xba00000000	                              mov edx, 0	      8529	syntax.c	FUNCTION_123	IF_1	IF_2
0x400574b	        0x480f44c2	                          cmove rax, rdx	      8529	syntax.c	FUNCTION_123	IF_1	IF_2
0x400574f	            0xeb05	                           jmp 0x4005756	      8529	syntax.c	FUNCTION_123	IF_1	IF_2
0x4005751	      0xb800000000	                              mov eax, 0	      8531	syntax.c	FUNCTION_123
0x4005756	        0x4883c408	                              add rsp, 8	      8532	syntax.c	FUNCTION_123
0x400575a	              0xc3	                                     ret	      8532	syntax.c	FUNCTION_123
set_context_in_syntax_cmd	IF,7:CALL,10:FOR,0:ELSE,5:SWITCH,0:WHILE,0:DO,0:functions,0	82
0x4003a9a	    0xc7070c000000	                    mov dword [rdi], 0xc	      6492	syntax.c	FUNCTION_100
0x4003aa0	    0xc70500000000	               mov dword [0x04003aaa], 0	      6493	syntax.c	FUNCTION_100
0x4003aaa	        0x48897708	                mov qword [rdi + 8], rsi	      6494	syntax.c	FUNCTION_100
0x4003aae	    0xc70500000000	               mov dword [0x04003ab8], 0	      6495	syntax.c	FUNCTION_100
0x4003ab8	    0xc70500000000	               mov dword [0x04003ac2], 0	      6496	syntax.c	FUNCTION_100
0x4003ac2	          0x803e00	                       cmp byte [rsi], 0	      6499	syntax.c	FUNCTION_100	IF_1
0x4003ac5	     0xf840a010000	                            je 0x4003bd5	      6499	syntax.c	FUNCTION_100	IF_1
0x4003acb	            0x4154	                                push r12	      6488	syntax.c	FUNCTION_100
0x4003acd	              0x55	                                push rbp	      6488	syntax.c	FUNCTION_100
0x4003ace	              0x53	                                push rbx	      6488	syntax.c	FUNCTION_100
0x4003acf	          0x4889f5	                            mov rbp, rsi	      6488	syntax.c	FUNCTION_100
0x4003ad2	          0x4889fb	                            mov rbx, rdi	      6488	syntax.c	FUNCTION_100
0x4003ad5	          0x4889f7	                            mov rdi, rsi	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x4003ad8	      0xe800000000	                          call 0x4003add	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x4003add	          0x4989c4	                            mov r12, rax	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x4003ae0	          0x803800	                       cmp byte [rax], 0	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0x4003ae3	     0xf84e8000000	                            je 0x4003bd1	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0x4003ae9	          0x4889c7	                            mov rdi, rax	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x4003aec	      0xe800000000	                          call 0x4003af1	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x4003af1	        0x48894308	                mov qword [rbx + 8], rax	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x4003af5	          0x4889c7	                            mov rdi, rax	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x4003af8	      0xe800000000	                          call 0x4003afd	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x4003afd	          0x803800	                       cmp byte [rax], 0	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x4003b00	            0x740b	                            je 0x4003b0d	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x4003b02	    0xc70300000000	                      mov dword [rbx], 0	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0x4003b08	      0xe9c4000000	                           jmp 0x4003bd1	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0x4003b0d	          0x4929ec	                            sub r12, rbp	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x4003b10	          0x4c89e2	                            mov rdx, r12	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x4003b13	      0xbe00000000	                              mov esi, 0	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x4003b18	          0x4889ef	                            mov rdi, rbp	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x4003b1b	      0xe800000000	                          call 0x4003b20	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x4003b20	            0x85c0	                           test eax, eax	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x4003b22	            0x750f	                           jne 0x4003b33	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x4003b24	    0xc70500000000	               mov dword [0x04003b2e], 1	      6508	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4
0x4003b2e	      0xe99e000000	                           jmp 0x4003bd1	      6508	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4
0x4003b33	          0x4c89e2	                            mov rdx, r12	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4003b36	      0xbe00000000	                              mov esi, 0	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4003b3b	          0x4889ef	                            mov rdi, rbp	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4003b3e	      0xe800000000	                          call 0x4003b43	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4003b43	            0x85c0	                           test eax, eax	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4003b45	            0x750c	                           jne 0x4003b53	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4003b47	    0xc70500000000	               mov dword [0x04003b51], 2	      6510	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5
0x4003b51	            0xeb7e	                           jmp 0x4003bd1	      6510	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5
0x4003b53	          0x4c89e2	                            mov rdx, r12	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x4003b56	      0xbe00000000	                              mov esi, 0	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x4003b5b	          0x4889ef	                            mov rdi, rbp	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x4003b5e	      0xe800000000	                          call 0x4003b63	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x4003b63	            0x85c0	                           test eax, eax	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x4003b65	            0x750c	                           jne 0x4003b73	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x4003b67	    0xc70500000000	               mov dword [0x04003b71], 3	      6512	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6
0x4003b71	            0xeb5e	                           jmp 0x4003bd1	      6512	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6
0x4003b73	          0x4c89e2	                            mov rdx, r12	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x4003b76	      0xbe00000000	                              mov esi, 0	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x4003b7b	          0x4889ef	                            mov rdi, rbp	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x4003b7e	      0xe800000000	                          call 0x4003b83	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x4003b83	            0x85c0	                           test eax, eax	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x4003b85	            0x743c	                            je 0x4003bc3	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x4003b87	          0x4c89e2	                            mov rdx, r12	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x4003b8a	      0xbe00000000	                              mov esi, 0	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x4003b8f	          0x4889ef	                            mov rdi, rbp	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x4003b92	      0xe800000000	                          call 0x4003b97	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x4003b97	            0x85c0	                           test eax, eax	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x4003b99	            0x7428	                            je 0x4003bc3	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x4003b9b	          0x4c89e2	                            mov rdx, r12	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x4003b9e	      0xbe00000000	                              mov esi, 0	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x4003ba3	          0x4889ef	                            mov rdi, rbp	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x4003ba6	      0xe800000000	                          call 0x4003bab	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x4003bab	            0x85c0	                           test eax, eax	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x4003bad	            0x7414	                            je 0x4003bc3	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x4003baf	          0x4c89e2	                            mov rdx, r12	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x4003bb2	      0xbe00000000	                              mov esi, 0	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x4003bb7	          0x4889ef	                            mov rdi, rbp	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x4003bba	      0xe800000000	                          call 0x4003bbf	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x4003bbf	            0x85c0	                           test eax, eax	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x4003bc1	            0x7508	                           jne 0x4003bcb	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x4003bc3	    0xc7030d000000	                    mov dword [rbx], 0xd	      6517	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7
0x4003bc9	            0xeb06	                           jmp 0x4003bd1	      6517	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7
0x4003bcb	    0xc70300000000	                      mov dword [rbx], 0	      6519	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_5
0x4003bd1	              0x5b	                                 pop rbx	      6522	syntax.c	FUNCTION_100	ELSE_5
0x4003bd2	              0x5d	                                 pop rbp	      6522	syntax.c	FUNCTION_100	ELSE_5
0x4003bd3	            0x415c	                                 pop r12	      6522	syntax.c	FUNCTION_100	ELSE_5
0x4003bd5	            0xf3c3	                                     ret	      6522	syntax.c	FUNCTION_100	ELSE_5
get_syntax_name	IF,0:CALL,0:FOR,0:ELSE,0:SWITCH,1:WHILE,0:DO,0:functions,0	25
0x4003bd7	    0x8b0500000000	            mov eax, dword [0x04003bdd] 	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003bdd	          0x83f801	                              cmp eax, 1	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003be0	            0x7420	                            je 0x4003c02	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003be2	          0x83f801	                              cmp eax, 1	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003be5	            0x720c	                            jb 0x4003bf3	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003be7	          0x83f802	                              cmp eax, 2	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003bea	            0x7422	                            je 0x4003c0e	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003bec	          0x83f803	                              cmp eax, 3	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003bef	            0x7429	                            je 0x4003c1a	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003bf1	            0xeb33	                           jmp 0x4003c26	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003bf3	          0x4863f6	                         movsxd rsi, esi	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003bf6	        0x48c1e604	                              shl rsi, 4	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003bfa	    0x488b86000000	                    mov rax, qword [rsi]	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003c01	              0xc3	                                     ret	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003c02	          0x4863f6	                         movsxd rsi, esi	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003c05	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003c0d	              0xc3	                                     ret	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003c0e	          0x4863f6	                         movsxd rsi, esi	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003c11	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003c19	              0xc3	                                     ret	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003c1a	          0x4863f6	                         movsxd rsi, esi	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003c1d	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003c25	              0xc3	                                     ret	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4003c26	      0xb800000000	                              mov eax, 0	      6555	syntax.c	ELSE_5	FUNCTION_101
0x4003c2b	              0xc3	                                     ret	      6556	syntax.c	ELSE_5	FUNCTION_101
syn_check_cluster	IF,2:CALL,4:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	99
0x4001f21	            0x4155	                                push r13	      5577	syntax.c	FUNCTION_86
0x4001f23	            0x4154	                                push r12	      5577	syntax.c	FUNCTION_86
0x4001f25	              0x55	                                push rbp	      5577	syntax.c	FUNCTION_86
0x4001f26	              0x53	                                push rbx	      5577	syntax.c	FUNCTION_86
0x4001f27	        0x4883ec08	                              sub rsp, 8	      5577	syntax.c	FUNCTION_86
0x4001f2b	      0xe800000000	                          call 0x4001f30	      5581	syntax.c	FUNCTION_86	CALL_1
0x4001f30	      0xbb00000000	                              mov ebx, 0	      5583	syntax.c	FUNCTION_86	IF_1
0x4001f35	          0x4885c0	                           test rax, rax	      5582	syntax.c	FUNCTION_86	IF_1
0x4001f38	     0xf8494010000	                            je 0x40020d2	      5582	syntax.c	FUNCTION_86	IF_1
0x4001f3e	          0x4889c5	                            mov rbp, rax	      5582	syntax.c	FUNCTION_86	IF_1
0x4001f41	          0x4889c7	                            mov rdi, rax	      5585	syntax.c	FUNCTION_86	CALL_2
0x4001f44	      0xe846ffffff	                call sym.syn_scl_name2id	      5585	syntax.c	FUNCTION_86	CALL_2
0x4001f49	            0x89c3	                            mov ebx, eax	      5585	syntax.c	FUNCTION_86	CALL_2
0x4001f4b	            0x85c0	                           test eax, eax	      5586	syntax.c	FUNCTION_86	IF_2
0x4001f4d	     0xf8577010000	                           jne 0x40020ca	      5586	syntax.c	FUNCTION_86	IF_2
0x4001f53	    0x488b05000000	            mov rax, qword [0x04001f5a] 	      5606	syntax.c	FUNCTION_87	IF_1
0x4001f5a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5606	syntax.c	FUNCTION_87	IF_1
0x4001f5e	    0x4883ba880200	              cmp qword [rdx + 0x288], 0	      5606	syntax.c	FUNCTION_87	IF_1
0x4001f66	            0x7518	                           jne 0x4001f80	      5606	syntax.c	FUNCTION_87	IF_1
0x4001f68	    0xc78280020000	          mov dword [rdx + 0x280], 0x18 	      5608	syntax.c	FUNCTION_87	IF_1
0x4001f72	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5609	syntax.c	FUNCTION_87	IF_1
0x4001f76	    0xc78284020000	            mov dword [rdx + 0x284], 0xa	      5609	syntax.c	FUNCTION_87	IF_1
0x4001f80	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5612	syntax.c	FUNCTION_87
0x4001f84	    0x448ba7780200	          mov r12d, dword [rdi + 0x278] 	      5612	syntax.c	FUNCTION_87
0x4001f8b	    0x4181fc262600	                        cmp r12d, 0x2626	      5613	syntax.c	FUNCTION_87	IF_2
0x4001f92	            0x7e2e	                           jle 0x4001fc2	      5613	syntax.c	FUNCTION_87	IF_2
0x4001f94	      0xba05000000	                              mov edx, 5	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x4001f99	      0xbe00000000	                              mov esi, 0	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x4001f9e	      0xbf00000000	                              mov edi, 0	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x4001fa3	      0xe800000000	                          call 0x4001fa8	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x4001fa8	          0x4889c7	                            mov rdi, rax	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x4001fab	      0xe800000000	                          call 0x4001fb0	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x4001fb0	          0x4889ef	                            mov rdi, rbp	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0x4001fb3	      0xe800000000	                          call 0x4001fb8	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0x4001fb8	      0xbb00000000	                              mov ebx, 0	      5617	syntax.c	FUNCTION_87	IF_2
0x4001fbd	      0xe910010000	                           jmp 0x40020d2	      5617	syntax.c	FUNCTION_87	IF_2
0x4001fc2	    0x4881c7780200	                          add rdi, 0x278	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x4001fc9	      0xbe01000000	                              mov esi, 1	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x4001fce	      0xe800000000	                          call 0x4001fd3	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x4001fd3	            0x89c3	                            mov ebx, eax	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x4001fd5	            0x85c0	                           test eax, eax	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x4001fd7	            0x750d	                           jne 0x4001fe6	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x4001fd9	          0x4889ef	                            mov rdi, rbp	      5625	syntax.c	FUNCTION_87	IF_3	CALL_5
0x4001fdc	      0xe800000000	                          call 0x4001fe1	      5625	syntax.c	FUNCTION_87	IF_3	CALL_5
0x4001fe1	      0xe9ec000000	                           jmp 0x40020d2	      5625	syntax.c	FUNCTION_87	IF_3	CALL_5
0x4001fe6	          0x4963c4	                        movsxd rax, r12d	      5629	syntax.c	FUNCTION_87	CALL_7
0x4001fe9	        0x488d1c40	                  lea rbx, [rax + rax*2]	      5629	syntax.c	FUNCTION_87	CALL_7
0x4001fed	        0x48c1e303	                              shl rbx, 3	      5629	syntax.c	FUNCTION_87	CALL_7
0x4001ff1	    0x488b05000000	            mov rax, qword [0x04001ff8] 	      5629	syntax.c	FUNCTION_87	CALL_7
0x4001ff8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5629	syntax.c	FUNCTION_87	CALL_7
0x4001ffc	          0x4889d9	                            mov rcx, rbx	        90	string3.h	FUNCTION_193	CALL_6
0x4001fff	    0x480388880200	            add rcx, qword [rax + 0x288]	        90	string3.h	FUNCTION_193	CALL_6
0x4002006	    0x48c701000000	                      mov qword [rcx], 0	        90	string3.h	FUNCTION_193	CALL_6
0x400200d	    0x48c741080000	                  mov qword [rcx + 8], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4002015	    0x48c741100000	               mov qword [rcx + 0x10], 0	        90	string3.h	FUNCTION_193	CALL_6
0x400201d	    0x488b05000000	            mov rax, qword [0x04002024] 	      5630	syntax.c	FUNCTION_87	CALL_8
0x4002024	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5630	syntax.c	FUNCTION_87	CALL_8
0x4002028	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      5630	syntax.c	FUNCTION_87	CALL_8
0x400202f	        0x48892c18	              mov qword [rax + rbx], rbp	      5630	syntax.c	FUNCTION_87	CALL_8
0x4002033	    0x488b05000000	            mov rax, qword [0x0400203a] 	      5631	syntax.c	FUNCTION_87	CALL_10
0x400203a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5631	syntax.c	FUNCTION_87	CALL_10
0x400203e	          0x4989dd	                            mov r13, rbx	      5631	syntax.c	FUNCTION_87	CALL_10
0x4002041	    0x4c03a8880200	            add r13, qword [rax + 0x288]	      5631	syntax.c	FUNCTION_87	CALL_10
0x4002048	          0x4889ef	                            mov rdi, rbp	      5631	syntax.c	FUNCTION_87	CALL_10
0x400204b	      0xe800000000	                          call 0x4002050	      5631	syntax.c	FUNCTION_87	CALL_10
0x4002050	        0x49894508	                mov qword [r13 + 8], rax	      5631	syntax.c	FUNCTION_87	CALL_10
0x4002054	    0x4c8b2d000000	            mov r13, qword [0x0400205b] 	      5632	syntax.c	FUNCTION_87	CALL_11
0x400205b	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      5632	syntax.c	FUNCTION_87	CALL_11
0x400205f	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      5632	syntax.c	FUNCTION_87	CALL_11
0x4002066	    0x48c744181000	         mov qword [rax + rbx + 0x10], 0	      5632	syntax.c	FUNCTION_87	CALL_11
0x400206f	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      5633	syntax.c	FUNCTION_87
0x4002073	    0x838078020000	              add dword [rax + 0x278], 1	      5633	syntax.c	FUNCTION_87
0x400207a	      0xbe00000000	                              mov esi, 0	      5635	syntax.c	FUNCTION_87	IF_4	CALL_12
0x400207f	          0x4889ef	                            mov rdi, rbp	      5635	syntax.c	FUNCTION_87	IF_4	CALL_12
0x4002082	      0xe800000000	                          call 0x4002087	      5635	syntax.c	FUNCTION_87	IF_4	CALL_12
0x4002087	            0x85c0	                           test eax, eax	      5635	syntax.c	FUNCTION_87	IF_4	CALL_12
0x4002089	            0x7512	                           jne 0x400209d	      5635	syntax.c	FUNCTION_87	IF_4	CALL_12
0x400208b	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      5636	syntax.c	FUNCTION_87	IF_4
0x400208f	    0x418d9424d859	                 lea edx, [r12 + 0x59d8]	      5636	syntax.c	FUNCTION_87	IF_4
0x4002097	    0x899090020000	            mov dword [rax + 0x290], edx	      5636	syntax.c	FUNCTION_87	IF_4
0x400209d	      0xbe00000000	                              mov esi, 0	      5637	syntax.c	FUNCTION_87	IF_5	CALL_13
0x40020a2	          0x4889ef	                            mov rdi, rbp	      5637	syntax.c	FUNCTION_87	IF_5	CALL_13
0x40020a5	      0xe800000000	                          call 0x40020aa	      5637	syntax.c	FUNCTION_87	IF_5	CALL_13
0x40020aa	            0x85c0	                           test eax, eax	      5637	syntax.c	FUNCTION_87	IF_5	CALL_13
0x40020ac	            0x7512	                           jne 0x40020c0	      5637	syntax.c	FUNCTION_87	IF_5	CALL_13
0x40020ae	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      5638	syntax.c	FUNCTION_87	IF_5
0x40020b2	    0x418d9424d859	                 lea edx, [r12 + 0x59d8]	      5638	syntax.c	FUNCTION_87	IF_5
0x40020ba	    0x899094020000	            mov dword [rax + 0x294], edx	      5638	syntax.c	FUNCTION_87	IF_5
0x40020c0	    0x418d9c24d859	                 lea ebx, [r12 + 0x59d8]	      5640	syntax.c	FUNCTION_87
0x40020c8	            0xeb08	                           jmp 0x40020d2	      5640	syntax.c	FUNCTION_87
0x40020ca	          0x4889ef	                            mov rdi, rbp	      5589	syntax.c	FUNCTION_86	CALL_4
0x40020cd	      0xe800000000	                          call 0x40020d2	      5589	syntax.c	FUNCTION_86	CALL_4
0x40020d2	            0x89d8	                            mov eax, ebx	      5591	syntax.c	FUNCTION_86
0x40020d4	        0x4883c408	                              add rsp, 8	      5591	syntax.c	FUNCTION_86
0x40020d8	              0x5b	                                 pop rbx	      5591	syntax.c	FUNCTION_86
0x40020d9	              0x5d	                                 pop rbp	      5591	syntax.c	FUNCTION_86
0x40020da	            0x415c	                                 pop r12	      5591	syntax.c	FUNCTION_86
0x40020dc	            0x415d	                                 pop r13	      5591	syntax.c	FUNCTION_86
0x40020de	              0xc3	                                     ret	      5591	syntax.c	FUNCTION_86
syn_stack_apply_changes	IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,1	25
0x4003542	            0x4154	                                push r12	      1308	syntax.c	FUNCTION_14
0x4003544	              0x55	                                push rbp	      1308	syntax.c	FUNCTION_14
0x4003545	              0x53	                                push rbx	      1308	syntax.c	FUNCTION_14
0x4003546	          0x4889fd	                            mov rbp, rdi	      1308	syntax.c	FUNCTION_14
0x4003549	    0x4c8da7681700	                 lea r12, [rdi + 0x1768]	      1311	syntax.c	FUNCTION_14	CALL_1
0x4003550	          0x4889fe	                            mov rsi, rdi	      1311	syntax.c	FUNCTION_14	CALL_1
0x4003553	          0x4c89e7	                            mov rdi, r12	      1311	syntax.c	FUNCTION_14	CALL_1
0x4003556	      0xe84dfeffff	  call sym.syn_stack_apply_changes_block	      1311	syntax.c	FUNCTION_14	CALL_1
0x400355b	    0x488b1d000000	            mov rbx, qword [0x04003562] 	      1313	syntax.c	FUNCTION_14
0x4003562	          0x4885db	                           test rbx, rbx	      1313	syntax.c	FUNCTION_14
0x4003565	            0x7420	                            je 0x4003587	      1313	syntax.c	FUNCTION_14
0x4003567	        0x483b6b08	                cmp rbp, qword [rbx + 8]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x400356b	            0x7511	                           jne 0x400357e	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x400356d	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4003571	          0x4939fc	                            cmp r12, rdi	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4003574	            0x7408	                            je 0x400357e	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4003576	          0x4889ee	                            mov rsi, rbp	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4003579	      0xe82afeffff	  call sym.syn_stack_apply_changes_block	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x400357e	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1313	syntax.c	FUNCTION_14
0x4003582	          0x4885db	                           test rbx, rbx	      1313	syntax.c	FUNCTION_14
0x4003585	            0x75e0	                           jne 0x4003567	      1313	syntax.c	FUNCTION_14
0x4003587	              0x5b	                                 pop rbx	      1318	syntax.c	FUNCTION_14
0x4003588	              0x5d	                                 pop rbp	      1318	syntax.c	FUNCTION_14
0x4003589	            0x415c	                                 pop r12	      1318	syntax.c	FUNCTION_14
0x400358b	              0xc3	                                     ret	      1318	syntax.c	FUNCTION_14
syn_term_attr2entry	IF,1:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	10
0x4004ca6	    0x81ef00010000	                          sub edi, 0x100	      9195	syntax.c	FUNCTION_139
0x4004cac	    0x3b3d00000000	            cmp edi, dword [0x04004cb2] 	      9196	syntax.c	FUNCTION_139	IF_1
0x4004cb2	            0x7d13	                           jge 0x4004cc7	      9196	syntax.c	FUNCTION_139	IF_1
0x4004cb4	          0x4863ff	                         movsxd rdi, edi	      9198	syntax.c	FUNCTION_139	CALL_1
0x4004cb7	        0x488d14bf	                  lea rdx, [rdi + rdi*4]	      9198	syntax.c	FUNCTION_139	CALL_1
0x4004cbb	    0x488b05000000	            mov rax, qword [0x04004cc2] 	      9198	syntax.c	FUNCTION_139	CALL_1
0x4004cc2	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9198	syntax.c	FUNCTION_139	CALL_1
0x4004cc6	              0xc3	                                     ret	      9198	syntax.c	FUNCTION_139	CALL_1
0x4004cc7	      0xb800000000	                              mov eax, 0	      9197	syntax.c	FUNCTION_139	IF_1
0x4004ccc	              0xc3	                                     ret	      9199	syntax.c	FUNCTION_139
get_syn_options	IF,25:CALL,30:FOR,4:ELSE,7:SWITCH,0:WHILE,0:DO,0:functions,0	284
0x4006392	            0x4157	                                push r15	      4608	syntax.c	FUNCTION_76
0x4006394	            0x4156	                                push r14	      4608	syntax.c	FUNCTION_76
0x4006396	            0x4155	                                push r13	      4608	syntax.c	FUNCTION_76
0x4006398	            0x4154	                                push r12	      4608	syntax.c	FUNCTION_76
0x400639a	              0x55	                                push rbp	      4608	syntax.c	FUNCTION_76
0x400639b	              0x53	                                push rbx	      4608	syntax.c	FUNCTION_76
0x400639c	        0x4883ec28	                           sub rsp, 0x28	      4608	syntax.c	FUNCTION_76
0x40063a0	          0x4889f8	                            mov rax, rdi	      4608	syntax.c	FUNCTION_76
0x40063a3	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4608	syntax.c	FUNCTION_76
0x40063a8	          0x4885ff	                           test rdi, rdi	      4642	syntax.c	FUNCTION_76	IF_1
0x40063ab	     0xf843e040000	                            je 0x40067ef	      4642	syntax.c	FUNCTION_76	IF_1
0x40063b1	    0x488b05000000	            mov rax, qword [0x040063b8] 	      4646	syntax.c	FUNCTION_76	IF_2
0x40063b8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4646	syntax.c	FUNCTION_76	IF_2
0x40063bc	    0x83b808030000	              cmp dword [rax + 0x308], 0	      4646	syntax.c	FUNCTION_76	IF_2
0x40063c3	            0x7406	                            je 0x40063cb	      4646	syntax.c	FUNCTION_76	IF_2
0x40063c5	    0x810e00000200	                 or dword [rsi], 0x20000	      4647	syntax.c	FUNCTION_76	IF_2
0x40063cb	          0x4189cf	                           mov r15d, ecx	      4647	syntax.c	FUNCTION_76	IF_2
0x40063ce	          0x4989d6	                            mov r14, rdx	      4647	syntax.c	FUNCTION_76	IF_2
0x40063d1	          0x4989f5	                            mov r13, rsi	      4647	syntax.c	FUNCTION_76	IF_2
0x40063d4	        0x488d4628	                   lea rax, [rsi + 0x28]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x40063d8	        0x48890424	                    mov qword [rsp], rax	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x40063dc	        0x488d4620	                   lea rax, [rsi + 0x20]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x40063e0	      0x4889442408	                mov qword [rsp + 8], rax	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x40063e5	        0x488d4618	                   lea rax, [rsi + 0x18]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x40063e9	      0x4889442410	             mov qword [rsp + 0x10], rax	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x40063ee	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x40063f3	           0xfb630	                   movzx esi, byte [rax]	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x40063f6	      0xbf00000000	                              mov edi, 0	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x40063fb	      0xe800000000	                          call 0x4006400	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4006400	          0x4885c0	                           test rax, rax	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4006403	     0xf846b030000	                            je 0x4006774	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4006409	      0xbb00000000	                              mov ebx, 0	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x400640e	      0xbd12000000	                           mov ebp, 0x12	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4006413	          0x4989da	                            mov r10, rbx	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4006416	          0x4c8b0b	                     mov r9, qword [rbx]	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4006419	        0x410fb601	                    movzx eax, byte [r9]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400641d	            0x84c0	                             test al, al	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400641f	     0xf8479030000	                            je 0x400679e	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006425	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400642a	      0xbe00000000	                              mov esi, 0	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400642f	      0xb900000000	                              mov ecx, 0	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006434	      0xba00000000	                              mov edx, 0	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006439	          0x4863fa	                         movsxd rdi, edx	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400643c	      0x410fb63c3b	             movzx edi, byte [r11 + rdi]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006441	        0x440fbec0	                           movsx r8d, al	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006445	          0x4439c7	                            cmp edi, r8d	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006448	            0x740a	                            je 0x4006454	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400644a	    0x410fbe743101	         movsx esi, byte [r9 + rsi + 1] 	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006450	            0x39f7	                            cmp edi, esi	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006452	            0x7514	                           jne 0x4006468	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006454	          0x83c102	                              add ecx, 2	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006457	          0x83c201	                              add edx, 1	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400645a	          0x4863f1	                         movsxd rsi, ecx	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400645d	      0x410fb60431	              movzx eax, byte [r9 + rsi]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006462	            0x84c0	                             test al, al	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006464	            0x75d3	                           jne 0x4006439	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006466	            0xeb04	                           jmp 0x400646c	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006468	            0x84c0	                             test al, al	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400646a	            0x7568	                           jne 0x40064d4	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400646c	          0x4c63e2	                         movsxd r12, edx	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400646f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006474	      0x420fb60420	             movzx eax, byte [rax + r12]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006479	            0x3c20	                            cmp al, 0x20	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400647b	            0x741d	                            je 0x400649a	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400647d	            0x3c09	                               cmp al, 9	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400647f	            0x7419	                            je 0x400649a	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006481	      0x41837a0800	                  cmp dword [r10 + 8], 0	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006486	            0x7e06	                           jle 0x400648e	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006488	            0x3c3d	                            cmp al, 0x3d	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400648a	            0x7548	                           jne 0x40064d4	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400648c	            0xeb0c	                           jmp 0x400649a	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400648e	           0xfb6f8	                           movzx edi, al	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x4006491	      0xe800000000	                          call 0x4006496	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x4006496	            0x85c0	                           test eax, eax	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x4006498	            0x743a	                            je 0x40064d4	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400649a	      0x41837d0400	                  cmp dword [r13 + 4], 0	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400649f	     0xf8403030000	                            je 0x40067a8	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x40064a5	          0x4863c5	                         movsxd rax, ebp	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x40064a8	        0x48c1e004	                              shl rax, 4	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x40064ac	    0x8b8000000000	                    mov eax, dword [rax]	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x40064b2	    0x8d9000f0ffff	                 lea edx, [rax - 0x1000]	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x40064b8	    0xf7c2ffefffff	                    test edx, 0xffffefff	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x40064be	     0xf84b0020000	                            je 0x4006774	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x40064c4	      0x3d00400000	                         cmp eax, 0x4000	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x40064c9	     0xf85d9020000	                           jne 0x40067a8	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x40064cf	      0xe9a0020000	                           jmp 0x4006774	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x40064d4	          0x83ed01	                              sub ebp, 1	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x40064d7	        0x4883eb10	                           sub rbx, 0x10	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x40064db	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x40064de	     0xf852fffffff	                           jne 0x4006413	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x40064e4	      0xe98b020000	                           jmp 0x4006774	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x40064e9	      0x41807d1000	                cmp byte [r13 + 0x10], 0	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x40064ee	            0x7526	                           jne 0x4006516	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x40064f0	      0xba05000000	                              mov edx, 5	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x40064f5	      0xbe00000000	                              mov esi, 0	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x40064fa	      0xbf00000000	                              mov edi, 0	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x40064ff	      0xe800000000	                          call 0x4006504	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x4006504	          0x4889c7	                            mov rdi, rax	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x4006507	      0xe800000000	                          call 0x400650c	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x400650c	      0xb800000000	                              mov eax, 0	      4688	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x4006511	      0xe9d9020000	                           jmp 0x40067ef	      4688	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x4006516	          0x4489f9	                           mov ecx, r15d	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4006519	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400651e	      0xbe08000000	                              mov esi, 8	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4006523	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4006528	      0xe81cf9ffff	                    call sym.get_id_list	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400652d	            0x85c0	                           test eax, eax	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400652f	     0xf85b9feffff	                           jne 0x40063ee	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4006535	      0xe941020000	                           jmp 0x400677b	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400653a	          0x83f802	                              cmp eax, 2	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x400653d	            0x7524	                           jne 0x4006563	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x400653f	          0x4489f9	                           mov ecx, r15d	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4006542	      0x488b542408	                mov rdx, qword [rsp + 8]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4006547	      0xbe0b000000	                            mov esi, 0xb	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400654c	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4006551	      0xe8f3f8ffff	                    call sym.get_id_list	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4006556	            0x85c0	                           test eax, eax	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4006558	     0xf8590feffff	                           jne 0x40063ee	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400655e	      0xe91f020000	                           jmp 0x4006782	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4006563	          0x83f803	                              cmp eax, 3	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x4006566	            0x7523	                           jne 0x400658b	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x4006568	          0x4489f9	                           mov ecx, r15d	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400656b	        0x488b1424	                    mov rdx, qword [rsp]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400656f	      0xbe09000000	                              mov esi, 9	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4006574	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4006579	      0xe8cbf8ffff	                    call sym.get_id_list	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400657e	            0x85c0	                           test eax, eax	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4006580	     0xf8568feffff	                           jne 0x40063ee	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4006586	      0xe9fe010000	                           jmp 0x4006789	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400658b	          0x83f80b	                            cmp eax, 0xb	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x400658e	     0xf8591000000	                           jne 0x4006625	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x4006594	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x4006599	        0x8078053d	                cmp byte [rax + 5], 0x3d	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x400659d	     0xf8582000000	                           jne 0x4006625	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40065a3	    0x833d00000000	               cmp dword [0x040065aa], 0	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x40065aa	            0x7428	                            je 0x40065d4	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x40065ac	        0x488d7806	                      lea rdi, [rax + 6]	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40065b0	    0xff1500000000	                 call qword [0x040065b6]	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40065b6	          0x418906	                    mov dword [r14], eax	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40065b9	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40065be	        0x488d7806	                      lea rdi, [rax + 6]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40065c2	    0xff1500000000	                 call qword [0x040065c8]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40065c8	          0x83e801	                              sub eax, 1	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40065cb	            0x4898	                                    cdqe	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40065cd	      0x4801442418	            add qword [rsp + 0x18], rax 	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40065d2	            0xeb07	                           jmp 0x40065db	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40065d4	         0xfb64006	               movzx eax, byte [rax + 6]	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x40065d8	          0x418906	                    mov dword [r14], eax	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x40065db	          0x418b3e	                    mov edi, dword [r14]	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x40065de	      0xe800000000	                          call 0x40065e3	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x40065e3	            0x85c0	                           test eax, eax	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x40065e5	            0x7526	                           jne 0x400660d	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x40065e7	      0xba05000000	                              mov edx, 5	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x40065ec	      0xbe00000000	                              mov esi, 0	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x40065f1	      0xbf00000000	                              mov edi, 0	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x40065f6	      0xe800000000	                          call 0x40065fb	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x40065fb	          0x4889c7	                            mov rdi, rax	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x40065fe	      0xe800000000	                          call 0x4006603	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x4006603	      0xb800000000	                              mov eax, 0	      4727	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17
0x4006608	      0xe9e2010000	                           jmp 0x40067ef	      4727	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17
0x400660d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4006612	        0x488d7807	                      lea rdi, [rax + 7]	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4006616	      0xe800000000	                          call 0x400661b	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x400661b	      0x4889442418	             mov qword [rsp + 0x18], rax	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4006620	      0xe9c9fdffff	                           jmp 0x40063ee	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4006625	          0x4863ed	                         movsxd rbp, ebp	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4006628	        0x48c1e504	                              shl rbp, 4	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x400662c	    0x8bad00000000	                    mov ebp, dword [rbp]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4006632	        0x41096d00	                     or dword [r13], ebp	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4006636	          0x4c89e7	                            mov rdi, r12	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4006639	      0x48037c2418	             add rdi, qword [rsp + 0x18]	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x400663e	      0xe800000000	                          call 0x4006643	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4006643	          0x4889c3	                            mov rbx, rax	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4006646	      0x4889442418	             mov qword [rsp + 0x18], rax	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x400664b	          0x8d45f0	                   lea eax, [rbp - 0x10]	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x400664e	      0xa9efffffff	                    test eax, 0xffffffef	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4006653	     0xf85ea000000	                           jne 0x4006743	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4006659	      0x49837d0800	                  cmp qword [r13 + 8], 0	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x400665e	            0x7526	                           jne 0x4006686	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x4006660	      0xba05000000	                              mov edx, 5	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x4006665	      0xbe00000000	                              mov esi, 0	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x400666a	      0xbf00000000	                              mov edi, 0	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x400666f	      0xe800000000	                          call 0x4006674	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x4006674	          0x4889c7	                            mov rdi, rax	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x4006677	      0xe800000000	                          call 0x400667c	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x400667c	      0xb800000000	                              mov eax, 0	      4743	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x4006681	      0xe969010000	                           jmp 0x40067ef	      4743	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x4006686	          0x4889df	                            mov rdi, rbx	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x4006689	      0xe800000000	                          call 0x400668e	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x400668e	      0x4889442418	             mov qword [rsp + 0x18], rax	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x4006693	          0x4839c3	                            cmp rbx, rax	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x4006696	     0xf84f4000000	                            je 0x4006790	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x400669c	          0x4829d8	                            sub rax, rbx	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x400669f	          0x4889c6	                            mov rsi, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x40066a2	          0x4889df	                            mov rdi, rbx	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x40066a5	      0xe800000000	                          call 0x40066aa	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x40066aa	          0x4889c3	                            mov rbx, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x40066ad	          0x4885c0	                           test rax, rax	      4750	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x40066b0	     0xf84e1000000	                            je 0x4006797	      4750	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x40066b6	      0xbf00000000	                              mov edi, 0	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40066bb	      0xb905000000	                              mov ecx, 5	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40066c0	          0x4889c6	                            mov rsi, rax	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40066c3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40066c5	           0xf97c2	                                 seta dl	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40066c8	           0xf92c0	                                 setb al	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40066cb	            0x38c2	                              cmp dl, al	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40066cd	            0x750c	                           jne 0x40066db	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40066cf	        0x498b4508	                mov rax, qword [r13 + 8]	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x40066d3	    0xc700feffffff	            mov dword [rax], 0xfffffffe 	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x40066d9	            0xeb4c	                           jmp 0x4006727	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x40066db	          0x4889df	                            mov rdi, rbx	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x40066de	      0xe800000000	                          call 0x40066e3	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x40066e3	    0x488b15000000	            mov rdx, qword [0x040066ea] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x40066ea	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x40066ee	    0x8b8f60020000	           mov ecx, dword [rdi + 0x260] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x40066f4	            0xeb27	                           jmp 0x400671d	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x40066f6	          0x4863d1	                         movsxd rdx, ecx	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x40066f9	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x40066fd	        0x48c1e205	                              shl rdx, 5	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x4006701	    0x480397700200	            add rdx, qword [rdi + 0x270]	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x4006708	         0xfbf7254	           movsx esi, word [rdx + 0x54] 	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x400670c	            0x39f0	                            cmp eax, esi	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x400670e	            0x750d	                           jne 0x400671d	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x4006710	          0x803a02	                       cmp byte [rdx], 2	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x4006713	            0x7508	                           jne 0x400671d	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x4006715	        0x498b4508	                mov rax, qword [r13 + 8]	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4006719	            0x8908	                    mov dword [rax], ecx	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400671b	            0xeb0a	                           jmp 0x4006727	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400671d	          0x83e901	                              sub ecx, 1	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4006720	            0x79d4	                           jns 0x40066f6	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4006722	      0xe99c000000	                           jmp 0x40067c3	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4006727	          0x4889df	                            mov rdi, rbx	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_27
0x400672a	      0xe800000000	                          call 0x400672f	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_27
0x400672f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_28
0x4006734	      0xe800000000	                          call 0x4006739	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_28
0x4006739	      0x4889442418	             mov qword [rsp + 0x18], rax	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_28
0x400673e	      0xe9abfcffff	                           jmp 0x40063ee	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_28
0x4006743	    0x81fd00200000	                         cmp ebp, 0x2000	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4006749	     0xf859ffcffff	                           jne 0x40063ee	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400674f	    0x488b3d000000	            mov rdi, qword [0x04006756] 	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_29
0x4006756	      0xe800000000	                          call 0x400675b	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_29
0x400675b	            0x85c0	                           test eax, eax	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_29
0x400675d	     0xf848bfcffff	                            je 0x40063ee	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_29
0x4006763	    0x488b3d000000	            mov rdi, qword [0x0400676a] 	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400676a	      0xe800000000	                          call 0x400676f	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400676f	      0xe97afcffff	                           jmp 0x40063ee	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4006774	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4784	syntax.c	FUNCTION_76
0x4006779	            0xeb74	                           jmp 0x40067ef	      4784	syntax.c	FUNCTION_76
0x400677b	      0xb800000000	                              mov eax, 0	      4691	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10
0x4006780	            0xeb6d	                           jmp 0x40067ef	      4691	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10
0x4006782	      0xb800000000	                              mov eax, 0	      4696	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12
0x4006787	            0xeb66	                           jmp 0x40067ef	      4696	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12
0x4006789	      0xb800000000	                              mov eax, 0	      4701	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14
0x400678e	            0xeb5f	                           jmp 0x40067ef	      4701	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14
0x4006790	      0xb800000000	                              mov eax, 0	      4748	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x4006795	            0xeb58	                           jmp 0x40067ef	      4748	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x4006797	      0xb800000000	                              mov eax, 0	      4751	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x400679c	            0xeb51	                           jmp 0x40067ef	      4751	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x400679e	      0xba00000000	                              mov edx, 0	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x40067a3	      0xe9c4fcffff	                           jmp 0x400646c	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x40067a8	          0x4863c5	                         movsxd rax, ebp	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40067ab	        0x48c1e004	                              shl rax, 4	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40067af	    0x8b8000000000	                    mov eax, dword [rax]	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40067b5	          0x83f801	                              cmp eax, 1	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40067b8	     0xf857cfdffff	                           jne 0x400653a	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40067be	      0xe926fdffff	                           jmp 0x40064e9	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40067c3	      0xba05000000	                              mov edx, 5	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x40067c8	      0xbe00000000	                              mov esi, 0	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x40067cd	      0xbf00000000	                              mov edi, 0	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x40067d2	      0xe800000000	                          call 0x40067d7	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x40067d7	          0x4889de	                            mov rsi, rbx	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x40067da	          0x4889c7	                            mov rdi, rax	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x40067dd	      0xe800000000	                          call 0x40067e2	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x40067e2	          0x4889df	                            mov rdi, rbx	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_26
0x40067e5	      0xe800000000	                          call 0x40067ea	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_26
0x40067ea	      0xb800000000	                              mov eax, 0	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x40067ef	        0x4883c428	                           add rsp, 0x28	      4785	syntax.c	FUNCTION_76
0x40067f3	              0x5b	                                 pop rbx	      4785	syntax.c	FUNCTION_76
0x40067f4	              0x5d	                                 pop rbp	      4785	syntax.c	FUNCTION_76
0x40067f5	            0x415c	                                 pop r12	      4785	syntax.c	FUNCTION_76
0x40067f7	            0x415d	                                 pop r13	      4785	syntax.c	FUNCTION_76
0x40067f9	            0x415e	                                 pop r14	      4785	syntax.c	FUNCTION_76
0x40067fb	            0x415f	                                 pop r15	      4785	syntax.c	FUNCTION_76
0x40067fd	              0xc3	                                     ret	      4785	syntax.c	FUNCTION_76
syn_stack_cleanup	IF,7:CALL,1:FOR,2:ELSE,2:SWITCH,0:WHILE,0:DO,0:functions,0	96
0x400054c	    0x488b0d000000	            mov rcx, qword [0x04000553] 	      1381	syntax.c	FUNCTION_16	IF_1
0x4000553	    0x4883b9100300	              cmp qword [rcx + 0x310], 0	      1381	syntax.c	FUNCTION_16	IF_1
0x400055b	     0xf842e010000	                            je 0x400068f	      1381	syntax.c	FUNCTION_16	IF_1
0x4000561	            0x4156	                                push r14	      1374	syntax.c	FUNCTION_16
0x4000563	            0x4155	                                push r13	      1374	syntax.c	FUNCTION_16
0x4000565	            0x4154	                                push r12	      1374	syntax.c	FUNCTION_16
0x4000567	              0x55	                                push rbp	      1374	syntax.c	FUNCTION_16
0x4000568	              0x53	                                push rbx	      1374	syntax.c	FUNCTION_16
0x4000569	    0x488ba9200300	           mov rbp, qword [rcx + 0x320] 	      1381	syntax.c	FUNCTION_16	IF_1
0x4000570	          0x4885ed	                           test rbp, rbp	      1381	syntax.c	FUNCTION_16	IF_1
0x4000573	     0xf841c010000	                            je 0x4000695	      1381	syntax.c	FUNCTION_16	IF_1
0x4000579	    0x486391180300	        movsxd rdx, dword [rcx + 0x318] 	      1385	syntax.c	FUNCTION_16	IF_2
0x4000580	    0x488b35000000	            mov rsi, qword [0x04000587] 	      1385	syntax.c	FUNCTION_16	IF_2
0x4000587	      0xb83f420f00	                        mov eax, 0xf423f	      1386	syntax.c	FUNCTION_16	IF_2
0x400058c	          0x4839f2	                            cmp rdx, rsi	      1385	syntax.c	FUNCTION_16	IF_2
0x400058f	            0x7e18	                           jle 0x40005a9	      1385	syntax.c	FUNCTION_16	IF_2
0x4000591	          0x4829f2	                            sub rdx, rsi	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4000594	          0x4889d6	                            mov rsi, rdx	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4000597	    0x488b05000000	            mov rax, qword [0x0400059e] 	      1388	syntax.c	FUNCTION_16	ELSE_1
0x400059e	          0x488b00	                    mov rax, qword [rax]	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40005a1	            0x4899	                                     cqo	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40005a3	          0x48f7fe	                                idiv rsi	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40005a6	          0x83c001	                              add eax, 1	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40005a9	     0xfb7b9400300	          movzx edi, word [rcx + 0x340] 	      1395	syntax.c	FUNCTION_16
0x40005b0	        0x488b5d00	                    mov rbx, qword [rbp]	      1398	syntax.c	FUNCTION_16	FOR_1
0x40005b4	          0x4885db	                           test rbx, rbx	      1398	syntax.c	FUNCTION_16	FOR_1
0x40005b7	     0xf84df000000	                            je 0x400069c	      1398	syntax.c	FUNCTION_16	FOR_1
0x40005bd	          0x4189fc	                           mov r12d, edi	      1398	syntax.c	FUNCTION_16	FOR_1
0x40005c0	          0x4889ee	                            mov rsi, rbp	      1398	syntax.c	FUNCTION_16	FOR_1
0x40005c3	          0x4889da	                            mov rdx, rbx	      1398	syntax.c	FUNCTION_16	FOR_1
0x40005c6	    0x41b800000000	                              mov r8d, 0	      1398	syntax.c	FUNCTION_16	FOR_1
0x40005cc	            0x4898	                                    cdqe	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x40005ce	            0xeb03	                           jmp 0x40005d3	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x40005d0	          0x4889ca	                            mov rdx, rcx	      1398	syntax.c	FUNCTION_16	FOR_1
0x40005d3	          0x4989c5	                            mov r13, rax	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x40005d6	          0x4889c1	                            mov rcx, rax	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x40005d9	        0x48034e08	                add rcx, qword [rsi + 8]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x40005dd	        0x483b4a08	                cmp rcx, qword [rdx + 8]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x40005e1	            0x7e3c	                           jle 0x400061f	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x40005e3	     0xfb78ac80000	           movzx ecx, word [rdx + 0xc8] 	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x40005ea	          0x6639cf	                              cmp di, cx	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x40005ed	            0x731c	                           jae 0x400060b	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x40005ef	          0x4585c0	                           test r8d, r8d	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x40005f2	            0x740c	                            je 0x4000600	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x40005f4	    0x41b801000000	                              mov r8d, 1	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x40005fa	        0x664439e1	                            cmp cx, r12w	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x40005fe	            0x731f	                           jae 0x400061f	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4000600	          0x4189cc	                           mov r12d, ecx	      1405	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4000603	    0x41b801000000	                              mov r8d, 1	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4000609	            0xeb14	                           jmp 0x400061f	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x400060b	        0x664439e1	                            cmp cx, r12w	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x400060f	            0x730e	                           jae 0x400061f	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x4000611	          0x4585c0	                           test r8d, r8d	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x4000614	        0x400f94c6	                                sete sil	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x4000618	          0x4084f6	                           test sil, sil	      1409	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x400061b	        0x440f45e1	                        cmovne r12d, ecx	      1409	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x400061f	          0x488b0a	                    mov rcx, qword [rdx]	      1398	syntax.c	FUNCTION_16	FOR_1
0x4000622	          0x4889d6	                            mov rsi, rdx	      1398	syntax.c	FUNCTION_16	FOR_1
0x4000625	          0x4885c9	                           test rcx, rcx	      1398	syntax.c	FUNCTION_16	FOR_1
0x4000628	            0x75a6	                           jne 0x40005d0	      1398	syntax.c	FUNCTION_16	FOR_1
0x400062a	      0xb800000000	                              mov eax, 0	      1398	syntax.c	FUNCTION_16	FOR_1
0x400062f	    0x66443ba3c800	            cmp r12w, word [rbx + 0xc8] 	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4000637	            0x7543	                           jne 0x400067c	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4000639	          0x4c89ea	                            mov rdx, r13	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x400063c	        0x48035508	                add rdx, qword [rbp + 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4000640	        0x483b5308	                cmp rdx, qword [rbx + 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4000644	            0x7e3b	                           jle 0x4000681	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4000646	          0x488b03	                    mov rax, qword [rbx]	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4000649	        0x48894500	                    mov qword [rbp], rax	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x400064d	    0x4c8b35000000	            mov r14, qword [0x04000654] 	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x4000654	          0x4889df	                            mov rdi, rbx	      1439	syntax.c	FUNCTION_17	CALL_1
0x4000657	      0xe879feffff	                call sym.clear_syn_state	      1439	syntax.c	FUNCTION_17	CALL_1
0x400065c	    0x498b86280300	           mov rax, qword [r14 + 0x328] 	      1440	syntax.c	FUNCTION_17
0x4000663	          0x488903	                    mov qword [rbx], rax	      1440	syntax.c	FUNCTION_17
0x4000666	    0x49899e280300	            mov qword [r14 + 0x328], rbx	      1441	syntax.c	FUNCTION_17
0x400066d	    0x418386300300	              add dword [r14 + 0x330], 1	      1442	syntax.c	FUNCTION_17
0x4000675	      0xb801000000	                              mov eax, 1	      1426	syntax.c	FUNCTION_16	FOR_2	IF_7
0x400067a	            0xeb08	                           jmp 0x4000684	      1426	syntax.c	FUNCTION_16	FOR_2	IF_7
0x400067c	          0x4889dd	                            mov rbp, rbx	      1426	syntax.c	FUNCTION_16	FOR_2	IF_7
0x400067f	            0xeb03	                           jmp 0x4000684	      1426	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4000681	          0x4889dd	                            mov rbp, rbx	      1426	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4000684	        0x488b5d00	                    mov rbx, qword [rbp]	      1418	syntax.c	FUNCTION_16	FOR_2
0x4000688	          0x4885db	                           test rbx, rbx	      1418	syntax.c	FUNCTION_16	FOR_2
0x400068b	            0x75a2	                           jne 0x400062f	      1418	syntax.c	FUNCTION_16	FOR_2
0x400068d	            0xeb12	                           jmp 0x40006a1	      1418	syntax.c	FUNCTION_16	FOR_2
0x400068f	      0xb800000000	                              mov eax, 0	      1382	syntax.c	FUNCTION_16	IF_1
0x4000694	              0xc3	                                     ret	      1430	syntax.c	FUNCTION_16
0x4000695	      0xb800000000	                              mov eax, 0	      1382	syntax.c	FUNCTION_16	IF_1
0x400069a	            0xeb05	                           jmp 0x40006a1	      1382	syntax.c	FUNCTION_16	IF_1
0x400069c	      0xb800000000	                              mov eax, 0	      1398	syntax.c	FUNCTION_16	FOR_1
0x40006a1	              0x5b	                                 pop rbx	      1430	syntax.c	FUNCTION_16
0x40006a2	              0x5d	                                 pop rbp	      1430	syntax.c	FUNCTION_16
0x40006a3	            0x415c	                                 pop r12	      1430	syntax.c	FUNCTION_16
0x40006a5	            0x415d	                                 pop r13	      1430	syntax.c	FUNCTION_16
0x40006a7	            0x415e	                                 pop r14	      1430	syntax.c	FUNCTION_16
0x40006a9	              0xc3	                                     ret	      1430	syntax.c	FUNCTION_16
combine_stl_hlt	IF,10:CALL,5:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	120
0x400b399	            0x4156	                                push r14	      9975	syntax.c	FUNCTION_162
0x400b39b	            0x4155	                                push r13	      9975	syntax.c	FUNCTION_162
0x400b39d	            0x4154	                                push r12	      9975	syntax.c	FUNCTION_162
0x400b39f	              0x55	                                push rbp	      9975	syntax.c	FUNCTION_162
0x400b3a0	              0x53	                                push rbx	      9975	syntax.c	FUNCTION_162
0x400b3a1	          0x4189fd	                           mov r13d, edi	      9975	syntax.c	FUNCTION_162
0x400b3a4	          0x4189f4	                           mov r12d, esi	      9975	syntax.c	FUNCTION_162
0x400b3a7	          0x4189ce	                           mov r14d, ecx	      9975	syntax.c	FUNCTION_162
0x400b3aa	          0x4489c3	                            mov ebx, r8d	      9975	syntax.c	FUNCTION_162
0x400b3ad	    0x488b2d000000	            mov rbp, qword [0x0400b3b4] 	      9976	syntax.c	FUNCTION_162	CALL_1
0x400b3b4	            0x85d2	                           test edx, edx	      9978	syntax.c	FUNCTION_162	IF_1
0x400b3b6	            0x756c	                           jne 0x400b424	      9978	syntax.c	FUNCTION_162	IF_1
0x400b3b8	        0x428d0401	                     lea eax, [rcx + r8]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x400b3bc	            0x4898	                                    cdqe	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x400b3be	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x400b3c2	        0x488d0450	                  lea rax, [rax + rdx*2]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x400b3c6	      0x488d54c500	                  lea rdx, [rbp + rax*8]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x400b3cb	    0x48c702000000	                      mov qword [rdx], 0	        90	string3.h	FUNCTION_193	CALL_6
0x400b3d2	    0x48c782900000	               mov qword [rdx + 0x90], 0	        90	string3.h	FUNCTION_193	CALL_6
0x400b3dd	        0x488d7a08	                      lea rdi, [rdx + 8]	        90	string3.h	FUNCTION_193	CALL_6
0x400b3e1	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_193	CALL_6
0x400b3e5	          0x4889d1	                            mov rcx, rdx	        90	string3.h	FUNCTION_193	CALL_6
0x400b3e8	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_193	CALL_6
0x400b3eb	    0x81c198000000	                           add ecx, 0x98	        90	string3.h	FUNCTION_193	CALL_6
0x400b3f1	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_193	CALL_6
0x400b3f4	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_193	CALL_6
0x400b3f6	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_193	CALL_6
0x400b3fb	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_193	CALL_6
0x400b3fe	          0x4d63c9	                          movsxd r9, r9d	      9981	syntax.c	FUNCTION_162	IF_1
0x400b401	    0x428b048d0000	                   mov eax, dword [r9*4]	      9981	syntax.c	FUNCTION_162	IF_1
0x400b409	          0x894214	             mov dword [rdx + 0x14], eax	      9981	syntax.c	FUNCTION_162	IF_1
0x400b40c	    0x428b048d0000	                   mov eax, dword [r9*4]	      9982	syntax.c	FUNCTION_162	IF_1
0x400b414	          0x89422c	             mov dword [rdx + 0x2c], eax	      9982	syntax.c	FUNCTION_162	IF_1
0x400b417	    0x428b048d0000	                   mov eax, dword [r9*4]	      9984	syntax.c	FUNCTION_162	IF_1
0x400b41f	          0x89426c	             mov dword [rdx + 0x6c], eax	      9984	syntax.c	FUNCTION_162	IF_1
0x400b422	            0xeb30	                           jmp 0x400b454	      9984	syntax.c	FUNCTION_162	IF_1
0x400b424	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_191	CALL_3
0x400b427	        0x488d04d2	                  lea rax, [rdx + rdx*8]	        59	string3.h	FUNCTION_191	CALL_3
0x400b42b	        0x488d0442	                  lea rax, [rdx + rax*2]	        59	string3.h	FUNCTION_191	CALL_3
0x400b42f	    0x488db4c568ff	           lea rsi, [rbp + rax*8 - 0x98]	        59	string3.h	FUNCTION_191	CALL_3
0x400b437	        0x428d0401	                     lea eax, [rcx + r8]	        59	string3.h	FUNCTION_191	CALL_3
0x400b43b	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_191	CALL_3
0x400b43d	        0x488d14c0	                  lea rdx, [rax + rax*8]	        59	string3.h	FUNCTION_191	CALL_3
0x400b441	        0x488d0450	                  lea rax, [rax + rdx*2]	        59	string3.h	FUNCTION_191	CALL_3
0x400b445	      0x488d7cc500	                  lea rdi, [rbp + rax*8]	        59	string3.h	FUNCTION_191	CALL_3
0x400b44a	      0xba98000000	                           mov edx, 0x98	        59	string3.h	FUNCTION_191	CALL_3
0x400b44f	      0xe800000000	                          call 0x400b454	        59	string3.h	FUNCTION_191	CALL_3
0x400b454	        0x418d3c1e	                    lea edi, [r14 + rbx]	      9991	syntax.c	FUNCTION_162
0x400b458	          0x4863c7	                         movsxd rax, edi	      9991	syntax.c	FUNCTION_162
0x400b45b	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9991	syntax.c	FUNCTION_162
0x400b45f	        0x488d0450	                  lea rax, [rax + rdx*2]	      9991	syntax.c	FUNCTION_162
0x400b463	      0x488d44c500	                  lea rax, [rbp + rax*8]	      9991	syntax.c	FUNCTION_162
0x400b468	    0xc78088000000	               mov dword [rax + 0x88], 0	      9991	syntax.c	FUNCTION_162
0x400b472	          0x4963d5	                        movsxd rdx, r13d	      9994	syntax.c	FUNCTION_162
0x400b475	        0x488d0cd2	                  lea rcx, [rdx + rdx*8]	      9994	syntax.c	FUNCTION_162
0x400b479	        0x488d144a	                  lea rdx, [rdx + rcx*2]	      9994	syntax.c	FUNCTION_162
0x400b47d	    0x4c8d84d568ff	            lea r8, [rbp + rdx*8 - 0x98]	      9994	syntax.c	FUNCTION_162
0x400b485	          0x4963f4	                        movsxd rsi, r12d	      9994	syntax.c	FUNCTION_162
0x400b488	        0x488d14f6	                  lea rdx, [rsi + rsi*8]	      9994	syntax.c	FUNCTION_162
0x400b48c	        0x488d1456	                  lea rdx, [rsi + rdx*2]	      9994	syntax.c	FUNCTION_162
0x400b490	    0x488d94d568ff	           lea rdx, [rbp + rdx*8 - 0x98]	      9994	syntax.c	FUNCTION_162
0x400b498	          0x8b4814	            mov ecx, dword [rax + 0x14] 	      9993	syntax.c	FUNCTION_162
0x400b49b	        0x41334814	              xor ecx, dword [r8 + 0x14]	      9993	syntax.c	FUNCTION_162
0x400b49f	          0x334a14	             xor ecx, dword [rdx + 0x14]	      9993	syntax.c	FUNCTION_162
0x400b4a2	          0x894814	             mov dword [rax + 0x14], ecx	      9993	syntax.c	FUNCTION_162
0x400b4a5	        0x498b4818	              mov rcx, qword [r8 + 0x18]	      9995	syntax.c	FUNCTION_162	IF_2
0x400b4a9	        0x483b4a18	            cmp rcx, qword [rdx + 0x18] 	      9995	syntax.c	FUNCTION_162	IF_2
0x400b4ad	            0x7404	                            je 0x400b4b3	      9995	syntax.c	FUNCTION_162	IF_2
0x400b4af	        0x48894818	             mov qword [rax + 0x18], rcx	      9996	syntax.c	FUNCTION_162	IF_2
0x400b4b3	        0x498b4820	              mov rcx, qword [r8 + 0x20]	      9997	syntax.c	FUNCTION_162	IF_3
0x400b4b7	        0x483b4a20	            cmp rcx, qword [rdx + 0x20] 	      9997	syntax.c	FUNCTION_162	IF_3
0x400b4bb	            0x7404	                            je 0x400b4c1	      9997	syntax.c	FUNCTION_162	IF_3
0x400b4bd	        0x48894820	             mov qword [rax + 0x20], rcx	      9998	syntax.c	FUNCTION_162	IF_3
0x400b4c1	          0x8b482c	            mov ecx, dword [rax + 0x2c] 	      9999	syntax.c	FUNCTION_162
0x400b4c4	        0x4133482c	              xor ecx, dword [r8 + 0x2c]	      9999	syntax.c	FUNCTION_162
0x400b4c8	          0x334a2c	             xor ecx, dword [rdx + 0x2c]	      9999	syntax.c	FUNCTION_162
0x400b4cb	          0x89482c	             mov dword [rax + 0x2c], ecx	      9999	syntax.c	FUNCTION_162
0x400b4ce	        0x418b4834	              mov ecx, dword [r8 + 0x34]	     10001	syntax.c	FUNCTION_162	IF_4
0x400b4d2	          0x3b4a34	            cmp ecx, dword [rdx + 0x34] 	     10001	syntax.c	FUNCTION_162	IF_4
0x400b4d5	            0x7403	                            je 0x400b4da	     10001	syntax.c	FUNCTION_162	IF_4
0x400b4d7	          0x894834	             mov dword [rax + 0x34], ecx	     10002	syntax.c	FUNCTION_162	IF_4
0x400b4da	        0x418b4838	              mov ecx, dword [r8 + 0x38]	     10003	syntax.c	FUNCTION_162	IF_5
0x400b4de	          0x3b4a38	            cmp ecx, dword [rdx + 0x38] 	     10003	syntax.c	FUNCTION_162	IF_5
0x400b4e1	            0x7403	                            je 0x400b4e6	     10003	syntax.c	FUNCTION_162	IF_5
0x400b4e3	          0x894838	             mov dword [rax + 0x38], ecx	     10004	syntax.c	FUNCTION_162	IF_5
0x400b4e6	          0x8b486c	            mov ecx, dword [rax + 0x6c] 	     10006	syntax.c	FUNCTION_162
0x400b4e9	        0x4133486c	              xor ecx, dword [r8 + 0x6c]	     10006	syntax.c	FUNCTION_162
0x400b4ed	          0x334a6c	             xor ecx, dword [rdx + 0x6c]	     10006	syntax.c	FUNCTION_162
0x400b4f0	          0x89486c	             mov dword [rax + 0x6c], ecx	     10006	syntax.c	FUNCTION_162
0x400b4f3	        0x498b4840	              mov rcx, qword [r8 + 0x40]	     10010	syntax.c	FUNCTION_162	IF_6
0x400b4f7	        0x483b4a40	            cmp rcx, qword [rdx + 0x40] 	     10010	syntax.c	FUNCTION_162	IF_6
0x400b4fb	            0x7404	                            je 0x400b501	     10010	syntax.c	FUNCTION_162	IF_6
0x400b4fd	        0x48894840	             mov qword [rax + 0x40], rcx	     10011	syntax.c	FUNCTION_162	IF_6
0x400b501	        0x498b4848	              mov rcx, qword [r8 + 0x48]	     10012	syntax.c	FUNCTION_162	IF_7
0x400b505	        0x483b4a48	            cmp rcx, qword [rdx + 0x48] 	     10012	syntax.c	FUNCTION_162	IF_7
0x400b509	            0x7404	                            je 0x400b50f	     10012	syntax.c	FUNCTION_162	IF_7
0x400b50b	        0x48894848	             mov qword [rax + 0x48], rcx	     10013	syntax.c	FUNCTION_162	IF_7
0x400b50f	        0x498b4850	              mov rcx, qword [r8 + 0x50]	     10014	syntax.c	FUNCTION_162	IF_8
0x400b513	        0x483b4a50	            cmp rcx, qword [rdx + 0x50] 	     10014	syntax.c	FUNCTION_162	IF_8
0x400b517	            0x7404	                            je 0x400b51d	     10014	syntax.c	FUNCTION_162	IF_8
0x400b519	        0x48894850	             mov qword [rax + 0x50], rcx	     10015	syntax.c	FUNCTION_162	IF_8
0x400b51d	        0x498b4858	              mov rcx, qword [r8 + 0x58]	     10016	syntax.c	FUNCTION_162	IF_9
0x400b521	        0x483b4a58	            cmp rcx, qword [rdx + 0x58] 	     10016	syntax.c	FUNCTION_162	IF_9
0x400b525	            0x7404	                            je 0x400b52b	     10016	syntax.c	FUNCTION_162	IF_9
0x400b527	        0x48894858	             mov qword [rax + 0x58], rcx	     10017	syntax.c	FUNCTION_162	IF_9
0x400b52b	          0x8d6f01	                      lea ebp, [rdi + 1]	     10023	syntax.c	FUNCTION_162
0x400b52e	    0x892d00000000	            mov dword [0x0400b534], ebp 	     10023	syntax.c	FUNCTION_162
0x400b534	      0xe8ca92ffff	                    call sym.set_hl_attr	     10024	syntax.c	FUNCTION_162	CALL_4
0x400b539	          0x4863db	                         movsxd rbx, ebx	     10025	syntax.c	FUNCTION_162	CALL_5
0x400b53c	      0x488b442430	            mov rax, qword [rsp + 0x30] 	     10025	syntax.c	FUNCTION_162	CALL_5
0x400b541	        0x488d1c98	                  lea rbx, [rax + rbx*4]	     10025	syntax.c	FUNCTION_162	CALL_5
0x400b545	            0x89ef	                            mov edi, ebp	     10025	syntax.c	FUNCTION_162	CALL_5
0x400b547	      0xe800000000	                          call 0x400b54c	     10025	syntax.c	FUNCTION_162	CALL_5
0x400b54c	            0x8903	                    mov dword [rbx], eax	     10025	syntax.c	FUNCTION_162	CALL_5
0x400b54e	              0x5b	                                 pop rbx	     10026	syntax.c	FUNCTION_162
0x400b54f	              0x5d	                                 pop rbp	     10026	syntax.c	FUNCTION_162
0x400b550	            0x415c	                                 pop r12	     10026	syntax.c	FUNCTION_162
0x400b552	            0x415d	                                 pop r13	     10026	syntax.c	FUNCTION_162
0x400b554	            0x415e	                                 pop r14	     10026	syntax.c	FUNCTION_162
0x400b556	              0xc3	                                     ret	     10026	syntax.c	FUNCTION_162
hl_set_fg_color_name	IF,2:CALL,4:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	23
0x4005801	          0x4885ff	                           test rdi, rdi	      8582	syntax.c	FUNCTION_126	IF_1
0x4005804	            0x7448	                            je 0x400584e	      8582	syntax.c	FUNCTION_126	IF_1
0x4005806	              0x55	                                push rbp	      8579	syntax.c	FUNCTION_126
0x4005807	              0x53	                                push rbx	      8579	syntax.c	FUNCTION_126
0x4005808	        0x4883ec08	                              sub rsp, 8	      8579	syntax.c	FUNCTION_126
0x400580c	          0x4889fb	                            mov rbx, rdi	      8579	syntax.c	FUNCTION_126
0x400580f	      0xbf00000000	                              mov edi, 0	      8584	syntax.c	FUNCTION_126	IF_1	CALL_1
0x4005814	      0xe800000000	                          call 0x4005819	      8584	syntax.c	FUNCTION_126	IF_1	CALL_1
0x4005819	            0x85c0	                           test eax, eax	      8585	syntax.c	FUNCTION_126	IF_1	IF_2
0x400581b	            0x7e2b	                           jle 0x4005848	      8585	syntax.c	FUNCTION_126	IF_1	IF_2
0x400581d	            0x4898	                                    cdqe	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x400581f	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x4005823	        0x488d2c50	                  lea rbp, [rax + rdx*2]	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x4005827	        0x48c1e503	                              shl rbp, 3	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x400582b	    0x488b05000000	            mov rax, qword [0x04005832] 	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x4005832	      0x488b7c28d8	       mov rdi, qword [rax + rbp - 0x28]	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x4005837	      0xe800000000	                          call 0x400583c	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x400583c	    0x488b05000000	            mov rax, qword [0x04005843] 	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x4005843	      0x48895c28d8	       mov qword [rax + rbp - 0x28], rbx	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x4005848	        0x4883c408	                              add rsp, 8	      8591	syntax.c	FUNCTION_126
0x400584c	              0x5b	                                 pop rbx	      8591	syntax.c	FUNCTION_126
0x400584d	              0x5d	                                 pop rbp	      8591	syntax.c	FUNCTION_126
0x400584e	            0xf3c3	                                     ret	      8591	syntax.c	FUNCTION_126
syn_get_sub_char	IF,0:CALL,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	2
0x4003c3b	    0x8b0500000000	            mov eax, dword [0x04003c41] 	      6611	syntax.c	FUNCTION_104
0x4003c41	              0xc3	                                     ret	      6611	syntax.c	FUNCTION_104
highlight_changed	IF,16:CALL,21:FOR,5:ELSE,5:SWITCH,1:WHILE,1:DO,0:functions,0	279
0x400b5cc	            0x4157	                                push r15	     10039	syntax.c	FUNCTION_163
0x400b5ce	            0x4156	                                push r14	     10039	syntax.c	FUNCTION_163
0x400b5d0	            0x4155	                                push r13	     10039	syntax.c	FUNCTION_163
0x400b5d2	            0x4154	                                push r12	     10039	syntax.c	FUNCTION_163
0x400b5d4	              0x55	                                push rbp	     10039	syntax.c	FUNCTION_163
0x400b5d5	              0x53	                                push rbx	     10039	syntax.c	FUNCTION_163
0x400b5d6	        0x4883ec38	                           sub rsp, 0x38	     10039	syntax.c	FUNCTION_163
0x400b5da	    0x64488b042528	                mov rax, qword fs:[0x28]	     10039	syntax.c	FUNCTION_163
0x400b5e3	      0x4889442428	             mov qword [rsp + 0x28], rax	     10039	syntax.c	FUNCTION_163
0x400b5e8	            0x31c0	                            xor eax, eax	     10039	syntax.c	FUNCTION_163
0x400b5ea	    0xc70500000000	               mov dword [0x0400b5f4], 0	     10060	syntax.c	FUNCTION_163
0x400b5f4	      0xb800000000	                              mov eax, 0	     10060	syntax.c	FUNCTION_163
0x400b5f9	      0xba00000000	                              mov edx, 0	     10060	syntax.c	FUNCTION_163
0x400b5fe	    0xc70000000000	                      mov dword [rax], 0	     10066	syntax.c	FUNCTION_163	FOR_1
0x400b604	        0x4883c004	                              add rax, 4	     10066	syntax.c	FUNCTION_163	FOR_1
0x400b608	          0x4839c2	                            cmp rdx, rax	     10065	syntax.c	FUNCTION_163	FOR_1
0x400b60b	            0x75f1	                           jne 0x400b5fe	     10065	syntax.c	FUNCTION_163	FOR_1
0x400b60d	    0x41be01000000	                             mov r14d, 1	     10065	syntax.c	FUNCTION_163	FOR_1
0x400b613	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     10065	syntax.c	FUNCTION_163	FOR_1
0x400b61b	    0xc74424080000	                  mov dword [rsp + 8], 0	     10065	syntax.c	FUNCTION_163	FOR_1
0x400b623	    0xc74424040000	                  mov dword [rsp + 4], 0	     10065	syntax.c	FUNCTION_163	FOR_1
0x400b62b	    0x41bdffffffff	                    mov r13d, 0xffffffff	     10065	syntax.c	FUNCTION_163	FOR_1
0x400b631	            0xeb04	                           jmp 0x400b637	     10065	syntax.c	FUNCTION_163	FOR_1
0x400b633	        0x4183c601	                             add r14d, 1	     10065	syntax.c	FUNCTION_163	FOR_1
0x400b637	        0x4183fe01	                             cmp r14d, 1	     10074	syntax.c	FUNCTION_163	FOR_2	IF_1
0x400b63b	            0x7411	                            je 0x400b64e	     10074	syntax.c	FUNCTION_163	FOR_2	IF_1
0x400b63d	    0x488b05000000	            mov rax, qword [0x0400b644] 	     10075	syntax.c	FUNCTION_163	FOR_2	IF_1
0x400b644	          0x4885c0	                           test rax, rax	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x400b647	            0x750f	                           jne 0x400b658	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x400b649	      0xe9fa010000	                           jmp 0x400b848	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x400b64e	      0xe800000000	                          call 0x400b653	     10077	syntax.c	FUNCTION_163	FOR_2	CALL_1
0x400b653	          0x4885c0	                           test rax, rax	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x400b656	            0x74db	                            je 0x400b633	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x400b658	           0xfb608	                   movzx ecx, byte [rax]	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400b65b	            0x84c9	                             test cl, cl	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400b65d	     0xf85ca010000	                           jne 0x400b82d	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400b663	      0xe9e0010000	                           jmp 0x400b848	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400b668	            0x390a	                    cmp dword [rdx], ecx	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x400b66a	            0x7416	                            je 0x400b682	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x400b66c	          0x83c301	                              add ebx, 1	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x400b66f	        0x4883c204	                              add rdx, 4	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x400b673	          0x83fb2e	                           cmp ebx, 0x2e	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x400b676	            0x75f0	                           jne 0x400b668	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x400b678	      0xb800000000	                              mov eax, 0	     10088	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400b67d	      0xe991030000	                           jmp 0x400ba13	     10088	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400b682	        0x488d7801	                      lea rdi, [rax + 1]	     10086	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400b686	          0x83fb2e	                           cmp ebx, 0x2e	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400b689	     0xf8455030000	                            je 0x400b9e4	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400b68f	        0x80780100	                   cmp byte [rax + 1], 0	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400b693	     0xf8452030000	                            je 0x400b9eb	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400b699	           0xfb607	                   movzx eax, byte [rdi]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b69c	            0x84c0	                             test al, al	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b69e	     0xf846c010000	                            je 0x400b810	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b6a4	            0x3c2c	                            cmp al, 0x2c	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b6a6	     0xf8464010000	                            je 0x400b810	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b6ac	    0x41bc00000000	                             mov r12d, 0	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b6b2	            0x3c20	                            cmp al, 0x20	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x400b6b4	     0xf8438010000	                            je 0x400b7f2	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x400b6ba	            0x3c09	                               cmp al, 9	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x400b6bc	     0xf8430010000	                            je 0x400b7f2	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x400b6c2	    0x4181fcff0000	                          cmp r12d, 0xff	     10100	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x400b6c9	     0xf8f23030000	                            jg 0x400b9f2	     10100	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x400b6cf	          0x83e82d	                           sub eax, 0x2d	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b6d2	            0x3c48	                            cmp al, 0x48	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b6d4	     0xf871f030000	                            ja 0x400b9f9	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b6da	           0xfb6c0	                           movzx eax, al	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b6dd	    0xff24c5000000	                       jmp qword [rax*8]	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b6e4	        0x4183cc02	                              or r12d, 2	     10105	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b6e8	          0x4889fd	                            mov rbp, rdi	     10106	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b6eb	      0xe90a010000	                           jmp 0x400b7fa	     10106	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b6f0	        0x4183cc04	                              or r12d, 4	     10107	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b6f4	          0x4889fd	                            mov rbp, rdi	     10108	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b6f7	      0xe9fe000000	                           jmp 0x400b7fa	     10108	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b6fc	        0x4183cc01	                              or r12d, 1	     10112	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b700	          0x4889fd	                            mov rbp, rdi	     10113	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b703	      0xe9f2000000	                           jmp 0x400b7fa	     10113	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b708	        0x4183cc20	                           or r12d, 0x20	     10114	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b70c	          0x4889fd	                            mov rbp, rdi	     10115	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b70f	      0xe9e6000000	                           jmp 0x400b7fa	     10115	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b714	        0x4183cc08	                              or r12d, 8	     10116	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b718	          0x4889fd	                            mov rbp, rdi	     10117	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b71b	      0xe9da000000	                           jmp 0x400b7fa	     10117	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b720	        0x4183cc10	                           or r12d, 0x10	     10118	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b724	          0x4889fd	                            mov rbp, rdi	     10119	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b727	      0xe9ce000000	                           jmp 0x400b7fa	     10119	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b72c	        0x4180cc80	                           or r12b, 0x80	     10120	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b730	          0x4889fd	                            mov rbp, rdi	     10121	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b733	      0xe9c2000000	                           jmp 0x400b7fa	     10121	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b738	        0x4c8d7f01	                      lea r15, [rdi + 1]	     10122	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b73c	          0x4585e4	                         test r12d, r12d	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400b73f	     0xf85bb020000	                           jne 0x400ba00	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400b745	        0x807f0100	                   cmp byte [rdi + 1], 0	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400b749	     0xf84b8020000	                            je 0x400ba07	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400b74f	      0xbe2c000000	                           mov esi, 0x2c	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x400b754	          0x4c89ff	                            mov rdi, r15	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x400b757	      0xe800000000	                          call 0x400b75c	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x400b75c	          0x4889c5	                            mov rbp, rax	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x400b75f	          0x4885c0	                           test rax, rax	     10126	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_8
0x400b762	            0x751c	                           jne 0x400b780	     10126	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_8
0x400b764	      0xb800000000	                              mov eax, 0	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400b769	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400b770	          0x4c89ff	                            mov rdi, r15	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400b773	            0xf2ae	              repne scasb al, byte [rdi]	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400b775	          0x4889c8	                            mov rax, rcx	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400b778	          0x48f7d0	                                 not rax	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400b77b	      0x498d6c07ff	                lea rbp, [r15 + rax - 1]	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400b780	          0x4889ee	                            mov rsi, rbp	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x400b783	          0x4c29fe	                            sub rsi, r15	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x400b786	          0x4c89ff	                            mov rdi, r15	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x400b789	      0xe800000000	                          call 0x400b78e	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x400b78e	          0x4189c7	                           mov r15d, eax	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x400b791	            0x85c0	                           test eax, eax	     10129	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x400b793	     0xf8475020000	                            je 0x400ba0e	     10129	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x400b799	            0x89c7	                            mov edi, eax	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x400b79b	      0xe800000000	                          call 0x400b7a0	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x400b7a0	          0x4189c4	                           mov r12d, eax	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x400b7a3	        0x4883ed01	                              sub rbp, 1	     10132	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b7a7	          0x83fb0e	                            cmp ebx, 0xe	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x400b7aa	            0x750e	                           jne 0x400b7ba	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x400b7ac	          0x4489ff	                           mov edi, r15d	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x400b7af	      0xe800000000	                          call 0x400b7b4	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x400b7b4	        0x89442404	                mov dword [rsp + 4], eax	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x400b7b8	            0xeb40	                           jmp 0x400b7fa	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x400b7ba	          0x83fb2c	                           cmp ebx, 0x2c	     10137	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x400b7bd	            0x750e	                           jne 0x400b7cd	     10137	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x400b7bf	          0x4489ff	                           mov edi, r15d	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x400b7c2	      0xe800000000	                          call 0x400b7c7	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x400b7c7	        0x89442408	                mov dword [rsp + 8], eax	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x400b7cb	            0xeb2d	                           jmp 0x400b7fa	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x400b7cd	          0x83fb2d	                           cmp ebx, 0x2d	     10139	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x400b7d0	            0x750e	                           jne 0x400b7e0	     10139	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x400b7d2	          0x4489ff	                           mov edi, r15d	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x400b7d5	      0xe800000000	                          call 0x400b7da	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x400b7da	        0x8944240c	              mov dword [rsp + 0xc], eax	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x400b7de	            0xeb1a	                           jmp 0x400b7fa	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x400b7e0	          0x83fb0d	                            cmp ebx, 0xd	     10142	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x400b7e3	            0x7515	                           jne 0x400b7fa	     10142	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x400b7e5	          0x4489ff	                           mov edi, r15d	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x400b7e8	      0xe800000000	                          call 0x400b7ed	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x400b7ed	          0x4189c5	                           mov r13d, eax	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x400b7f0	            0xeb08	                           jmp 0x400b7fa	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x400b7f2	          0x4889fd	                            mov rbp, rdi	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x400b7f5	            0xeb03	                           jmp 0x400b7fa	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x400b7f7	          0x4889fd	                            mov rbp, rdi	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b7fa	        0x488d7d01	                      lea rdi, [rbp + 1]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b7fe	         0xfb64501	               movzx eax, byte [rbp + 1]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b802	            0x84c0	                             test al, al	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b804	            0x7410	                            je 0x400b816	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b806	            0x3c2c	                            cmp al, 0x2c	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b808	     0xf85a4feffff	                           jne 0x400b6b2	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b80e	            0xeb06	                           jmp 0x400b816	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b810	    0x41bc00000000	                             mov r12d, 0	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b816	          0x4863db	                         movsxd rbx, ebx	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400b819	    0x4489249d0000	                 mov dword [rbx*4], r12d	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400b821	      0xe800000000	                          call 0x400b826	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x400b826	           0xfb608	                   movzx ecx, byte [rax]	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400b829	            0x84c9	                             test cl, cl	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400b82b	            0x741b	                            je 0x400b848	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400b82d	           0xfb6c9	                           movzx ecx, cl	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x400b830	          0x83f938	                           cmp ecx, 0x38	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x400b833	     0xf84ec010000	                            je 0x400ba25	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x400b839	      0xba00000000	                              mov edx, 0	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x400b83e	      0xbb01000000	                              mov ebx, 1	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x400b843	      0xe920feffff	                           jmp 0x400b668	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x400b848	        0x4183fe01	                             cmp r14d, 1	     10072	syntax.c	FUNCTION_163	FOR_2
0x400b84c	     0xf8ee1fdffff	                           jle 0x400b633	     10072	syntax.c	FUNCTION_163	FOR_2
0x400b852	      0xbe1c000000	                           mov esi, 0x1c	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x400b857	      0xbf00000000	                              mov edi, 0	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x400b85c	      0xe800000000	                          call 0x400b861	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x400b861	            0x85c0	                           test eax, eax	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x400b863	     0xf84aa010000	                            je 0x400ba13	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x400b869	    0x448b25000000	           mov r12d, dword [0x0400b870] 	     10169	syntax.c	FUNCTION_163
0x400b870	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	     10170	syntax.c	FUNCTION_163	IF_15
0x400b874	            0x756a	                           jne 0x400b8e0	     10170	syntax.c	FUNCTION_163	IF_15
0x400b876	          0x4963c4	                        movsxd rax, r12d	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x400b879	        0x488d14c0	                  lea rdx, [rax + rax*8]	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x400b87d	        0x488d1450	                  lea rdx, [rax + rdx*2]	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x400b881	        0x48c1e203	                              shl rdx, 3	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x400b885	    0x488b05000000	            mov rax, qword [0x0400b88c] 	        90	string3.h	FUNCTION_193	CALL_6
0x400b88c	    0x488d84100810	           lea rax, [rax + rdx + 0x1008]	        90	string3.h	FUNCTION_193	CALL_6
0x400b894	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_193	CALL_6
0x400b89b	    0x48c780900000	               mov qword [rax + 0x90], 0	        90	string3.h	FUNCTION_193	CALL_6
0x400b8a6	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_193	CALL_6
0x400b8aa	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_193	CALL_6
0x400b8ae	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_193	CALL_6
0x400b8b1	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_193	CALL_6
0x400b8b4	    0x81c198000000	                           add ecx, 0x98	        90	string3.h	FUNCTION_193	CALL_6
0x400b8ba	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_193	CALL_6
0x400b8bd	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_193	CALL_6
0x400b8bf	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_193	CALL_6
0x400b8c4	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_193	CALL_6
0x400b8c7	    0x488b05000000	            mov rax, qword [0x0400b8ce] 	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x400b8ce	    0x8b0d00000000	            mov ecx, dword [0x0400b8d4] 	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x400b8d4	    0x898c10c40a00	      mov dword [rax + rdx + 0xac4], ecx	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x400b8db	      0x458d6c2413	                  lea r13d, [r12 + 0x13]	     10176	syntax.c	FUNCTION_163	IF_15
0x400b8e0	      0xbb00000000	                              mov ebx, 0	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400b8e5	      0x458d742409	                     lea r14d, [r12 + 9]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x400b8ea	      0x458d7c2412	                  lea r15d, [r12 + 0x12]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x400b8ef	        0x448d4301	                      lea r8d, [rbx + 1]	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b8f3	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b8f8	      0xba0a000000	                            mov edx, 0xa	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b8fd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b902	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b907	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b90c	      0xe800000000	                          call 0x400b911	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b911	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_17
0x400b916	      0xe800000000	                          call 0x400b91b	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_17
0x400b91b	            0x89c5	                            mov ebp, eax	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_17
0x400b91d	            0x85c0	                           test eax, eax	     10183	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400b91f	            0x752e	                           jne 0x400b94f	     10183	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400b921	    0xc7049d000000	                    mov dword [rbx*4], 0	     10185	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400b92c	    0xc7049d000000	                    mov dword [rbx*4], 0	     10187	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400b937	    0xc7049d000000	                    mov dword [rbx*4], 0	     10189	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400b942	    0xc7049d000000	                    mov dword [rbx*4], 0	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400b94d	            0xeb79	                           jmp 0x400b9c8	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400b94f	            0x89c7	                            mov edi, eax	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400b951	      0xe800000000	                          call 0x400b956	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400b956	    0x89049d000000	                  mov dword [rbx*4], eax	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400b95d	        0x4883ec08	                              sub rsp, 8	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x400b961	      0x6800000000	                                  push 0	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x400b966	    0x41b90e000000	                            mov r9d, 0xe	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x400b96c	          0x4189d8	                            mov r8d, ebx	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x400b96f	          0x4489e1	                           mov ecx, r12d	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x400b972	        0x8b542414	            mov edx, dword [rsp + 0x14] 	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x400b976	          0x4489ee	                           mov esi, r13d	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x400b979	            0x89ef	                            mov edi, ebp	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x400b97b	      0xe819faffff	                call sym.combine_stl_hlt	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x400b980	    0x48c704240000	                      mov qword [rsp], 0	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x400b988	    0x41b92c000000	                           mov r9d, 0x2c	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x400b98e	          0x4189d8	                            mov r8d, ebx	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x400b991	          0x4489f1	                           mov ecx, r14d	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x400b994	        0x8b542418	            mov edx, dword [rsp + 0x18] 	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x400b998	          0x4489ee	                           mov esi, r13d	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x400b99b	            0x89ef	                            mov edi, ebp	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x400b99d	      0xe8f7f9ffff	                call sym.combine_stl_hlt	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x400b9a2	    0x48c704240000	                      mov qword [rsp], 0	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x400b9aa	    0x41b92d000000	                           mov r9d, 0x2d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x400b9b0	          0x4189d8	                            mov r8d, ebx	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x400b9b3	          0x4489f9	                           mov ecx, r15d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x400b9b6	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x400b9ba	          0x4489ee	                           mov esi, r13d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x400b9bd	            0x89ef	                            mov edi, ebp	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x400b9bf	      0xe8d5f9ffff	                call sym.combine_stl_hlt	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x400b9c4	        0x4883c410	                           add rsp, 0x10	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x400b9c8	        0x4883c301	                              add rbx, 1	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x400b9cc	        0x4883fb09	                              cmp rbx, 9	     10179	syntax.c	FUNCTION_163	FOR_5
0x400b9d0	     0xf8519ffffff	                           jne 0x400b8ef	     10179	syntax.c	FUNCTION_163	FOR_5
0x400b9d6	    0x448925000000	           mov dword [0x0400b9dd], r12d 	     10210	syntax.c	FUNCTION_163
0x400b9dd	      0xb801000000	                              mov eax, 1	     10215	syntax.c	FUNCTION_163
0x400b9e2	            0xeb2f	                           jmp 0x400ba13	     10215	syntax.c	FUNCTION_163
0x400b9e4	      0xb800000000	                              mov eax, 0	     10088	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400b9e9	            0xeb28	                           jmp 0x400ba13	     10088	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400b9eb	      0xb800000000	                              mov eax, 0	     10088	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400b9f0	            0xeb21	                           jmp 0x400ba13	     10088	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400b9f2	      0xb800000000	                              mov eax, 0	     10101	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x400b9f7	            0xeb1a	                           jmp 0x400ba13	     10101	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x400b9f9	      0xb800000000	                              mov eax, 0	     10146	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400b9fe	            0xeb13	                           jmp 0x400ba13	     10146	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400ba00	      0xb800000000	                              mov eax, 0	     10124	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400ba05	            0xeb0c	                           jmp 0x400ba13	     10124	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400ba07	      0xb800000000	                              mov eax, 0	     10124	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400ba0c	            0xeb05	                           jmp 0x400ba13	     10124	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400ba0e	      0xb800000000	                              mov eax, 0	     10130	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x400ba13	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	     10216	syntax.c	FUNCTION_163
0x400ba18	    0x644833342528	                xor rsi, qword fs:[0x28]	     10216	syntax.c	FUNCTION_163
0x400ba21	            0x7415	                            je 0x400ba38	     10216	syntax.c	FUNCTION_163
0x400ba23	            0xeb0e	                           jmp 0x400ba33	     10216	syntax.c	FUNCTION_163
0x400ba25	        0x488d7801	                      lea rdi, [rax + 1]	     10086	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400ba29	      0xbb00000000	                              mov ebx, 0	     10086	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400ba2e	      0xe95cfcffff	                           jmp 0x400b68f	     10086	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400ba33	      0xe800000000	                          call 0x400ba38	     10216	syntax.c	FUNCTION_163
0x400ba38	        0x4883c438	                           add rsp, 0x38	     10216	syntax.c	FUNCTION_163
0x400ba3c	              0x5b	                                 pop rbx	     10216	syntax.c	FUNCTION_163
0x400ba3d	              0x5d	                                 pop rbp	     10216	syntax.c	FUNCTION_163
0x400ba3e	            0x415c	                                 pop r12	     10216	syntax.c	FUNCTION_163
0x400ba40	            0x415d	                                 pop r13	     10216	syntax.c	FUNCTION_163
0x400ba42	            0x415e	                                 pop r14	     10216	syntax.c	FUNCTION_163
0x400ba44	            0x415f	                                 pop r15	     10216	syntax.c	FUNCTION_163
0x400ba46	              0xc3	                                     ret	     10216	syntax.c	FUNCTION_163
restore_chartab	IF,1:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	13
0x400077b	    0x488b05000000	            mov rax, qword [0x04000782] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4000782	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4000786	    0x488b0d000000	            mov rcx, qword [0x0400078d] 	      1025	syntax.c	FUNCTION_7	IF_1
0x400078d	    0x483988b00400	           cmp qword [rax + 0x4b0], rcx 	      1025	syntax.c	FUNCTION_7	IF_1
0x4000794	            0x7423	                            je 0x40007b9	      1025	syntax.c	FUNCTION_7	IF_1
0x4000796	        0x4883ec08	                              sub rsp, 8	      1024	syntax.c	FUNCTION_7
0x400079a	          0x4889fe	                            mov rsi, rdi	      1024	syntax.c	FUNCTION_7
0x400079d	    0x488b05000000	            mov rax, qword [0x040007a4] 	        59	string3.h	FUNCTION_191	CALL_3
0x40007a4	    0x488db8a00900	                  lea rdi, [rax + 0x9a0]	        59	string3.h	FUNCTION_191	CALL_3
0x40007ab	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_191	CALL_3
0x40007b0	      0xe800000000	                          call 0x40007b5	        59	string3.h	FUNCTION_191	CALL_3
0x40007b5	        0x4883c408	                              add rsp, 8	      1027	syntax.c	FUNCTION_7
0x40007b9	            0xf3c3	                                     ret	      1027	syntax.c	FUNCTION_7
reset_expand_highlight	IF,0:CALL,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	4
0x4003a66	    0xc70500000000	               mov dword [0x04003a70], 0	      6468	syntax.c	FUNCTION_98
0x4003a70	    0xc70500000000	               mov dword [0x04003a7a], 0	      6468	syntax.c	FUNCTION_98
0x4003a7a	    0xc70500000000	               mov dword [0x04003a84], 0	      6468	syntax.c	FUNCTION_98
0x4003a84	              0xc3	                                     ret	      6468	syntax.c	FUNCTION_98
highlight_list_one	IF,3:CALL,21:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	124
0x400b176	            0x4154	                                push r12	      9216	syntax.c	FUNCTION_141
0x400b178	              0x55	                                push rbp	      9216	syntax.c	FUNCTION_141
0x400b179	              0x53	                                push rbx	      9216	syntax.c	FUNCTION_141
0x400b17a	            0x89fd	                            mov ebp, edi	      9216	syntax.c	FUNCTION_141
0x400b17c	          0x4863c7	                         movsxd rax, edi	      9220	syntax.c	FUNCTION_141	CALL_1
0x400b17f	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9220	syntax.c	FUNCTION_141	CALL_1
0x400b183	        0x4c8d2450	                  lea r12, [rax + rdx*2]	      9220	syntax.c	FUNCTION_141	CALL_1
0x400b187	        0x49c1e403	                              shl r12, 3	      9220	syntax.c	FUNCTION_141	CALL_1
0x400b18b	    0x488b05000000	            mov rax, qword [0x0400b192] 	      9220	syntax.c	FUNCTION_141	CALL_1
0x400b192	    0x4a8d9c2068ff	             lea rbx, [rax + r12 - 0x98]	      9220	syntax.c	FUNCTION_141	CALL_1
0x400b19a	          0x8b4b14	            mov ecx, dword [rbx + 0x14] 	      9222	syntax.c	FUNCTION_141	CALL_2
0x400b19d	    0x41b900000000	                              mov r9d, 0	      9222	syntax.c	FUNCTION_141	CALL_2
0x400b1a3	    0x41b800000000	                              mov r8d, 0	      9222	syntax.c	FUNCTION_141	CALL_2
0x400b1a9	      0xba01000000	                              mov edx, 1	      9222	syntax.c	FUNCTION_141	CALL_2
0x400b1ae	      0xbe00000000	                              mov esi, 0	      9222	syntax.c	FUNCTION_141	CALL_2
0x400b1b3	      0xe853feffff	             call sym.highlight_list_arg	      9222	syntax.c	FUNCTION_141	CALL_2
0x400b1b8	    0x41b900000000	                              mov r9d, 0	      9224	syntax.c	FUNCTION_141	CALL_3
0x400b1be	        0x4c8b4318	              mov r8, qword [rbx + 0x18]	      9224	syntax.c	FUNCTION_141	CALL_3
0x400b1c2	      0xb900000000	                              mov ecx, 0	      9224	syntax.c	FUNCTION_141	CALL_3
0x400b1c7	      0xba02000000	                              mov edx, 2	      9224	syntax.c	FUNCTION_141	CALL_3
0x400b1cc	            0x89c6	                            mov esi, eax	      9224	syntax.c	FUNCTION_141	CALL_3
0x400b1ce	            0x89ef	                            mov edi, ebp	      9224	syntax.c	FUNCTION_141	CALL_3
0x400b1d0	      0xe836feffff	             call sym.highlight_list_arg	      9224	syntax.c	FUNCTION_141	CALL_3
0x400b1d5	    0x41b900000000	                              mov r9d, 0	      9226	syntax.c	FUNCTION_141	CALL_4
0x400b1db	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      9226	syntax.c	FUNCTION_141	CALL_4
0x400b1df	      0xb900000000	                              mov ecx, 0	      9226	syntax.c	FUNCTION_141	CALL_4
0x400b1e4	      0xba02000000	                              mov edx, 2	      9226	syntax.c	FUNCTION_141	CALL_4
0x400b1e9	            0x89c6	                            mov esi, eax	      9226	syntax.c	FUNCTION_141	CALL_4
0x400b1eb	            0x89ef	                            mov edi, ebp	      9226	syntax.c	FUNCTION_141	CALL_4
0x400b1ed	      0xe819feffff	             call sym.highlight_list_arg	      9226	syntax.c	FUNCTION_141	CALL_4
0x400b1f2	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	      9229	syntax.c	FUNCTION_141	CALL_5
0x400b1f5	    0x41b900000000	                              mov r9d, 0	      9229	syntax.c	FUNCTION_141	CALL_5
0x400b1fb	    0x41b800000000	                              mov r8d, 0	      9229	syntax.c	FUNCTION_141	CALL_5
0x400b201	      0xba01000000	                              mov edx, 1	      9229	syntax.c	FUNCTION_141	CALL_5
0x400b206	            0x89c6	                            mov esi, eax	      9229	syntax.c	FUNCTION_141	CALL_5
0x400b208	            0x89ef	                            mov edi, ebp	      9229	syntax.c	FUNCTION_141	CALL_5
0x400b20a	      0xe8fcfdffff	             call sym.highlight_list_arg	      9229	syntax.c	FUNCTION_141	CALL_5
0x400b20f	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      9231	syntax.c	FUNCTION_141	CALL_6
0x400b212	    0x41b900000000	                              mov r9d, 0	      9231	syntax.c	FUNCTION_141	CALL_6
0x400b218	    0x41b800000000	                              mov r8d, 0	      9231	syntax.c	FUNCTION_141	CALL_6
0x400b21e	      0xba03000000	                              mov edx, 3	      9231	syntax.c	FUNCTION_141	CALL_6
0x400b223	            0x89c6	                            mov esi, eax	      9231	syntax.c	FUNCTION_141	CALL_6
0x400b225	            0x89ef	                            mov edi, ebp	      9231	syntax.c	FUNCTION_141	CALL_6
0x400b227	      0xe8dffdffff	             call sym.highlight_list_arg	      9231	syntax.c	FUNCTION_141	CALL_6
0x400b22c	          0x8b4b38	            mov ecx, dword [rbx + 0x38] 	      9233	syntax.c	FUNCTION_141	CALL_7
0x400b22f	    0x41b900000000	                              mov r9d, 0	      9233	syntax.c	FUNCTION_141	CALL_7
0x400b235	    0x41b800000000	                              mov r8d, 0	      9233	syntax.c	FUNCTION_141	CALL_7
0x400b23b	      0xba03000000	                              mov edx, 3	      9233	syntax.c	FUNCTION_141	CALL_7
0x400b240	            0x89c6	                            mov esi, eax	      9233	syntax.c	FUNCTION_141	CALL_7
0x400b242	            0x89ef	                            mov edi, ebp	      9233	syntax.c	FUNCTION_141	CALL_7
0x400b244	      0xe8c2fdffff	             call sym.highlight_list_arg	      9233	syntax.c	FUNCTION_141	CALL_7
0x400b249	          0x8b4b6c	            mov ecx, dword [rbx + 0x6c] 	      9237	syntax.c	FUNCTION_141	CALL_8
0x400b24c	    0x41b900000000	                              mov r9d, 0	      9237	syntax.c	FUNCTION_141	CALL_8
0x400b252	    0x41b800000000	                              mov r8d, 0	      9237	syntax.c	FUNCTION_141	CALL_8
0x400b258	      0xba01000000	                              mov edx, 1	      9237	syntax.c	FUNCTION_141	CALL_8
0x400b25d	            0x89c6	                            mov esi, eax	      9237	syntax.c	FUNCTION_141	CALL_8
0x400b25f	            0x89ef	                            mov edi, ebp	      9237	syntax.c	FUNCTION_141	CALL_8
0x400b261	      0xe8a5fdffff	             call sym.highlight_list_arg	      9237	syntax.c	FUNCTION_141	CALL_8
0x400b266	    0x41b900000000	                              mov r9d, 0	      9239	syntax.c	FUNCTION_141	CALL_9
0x400b26c	        0x4c8b4370	              mov r8, qword [rbx + 0x70]	      9239	syntax.c	FUNCTION_141	CALL_9
0x400b270	      0xb900000000	                              mov ecx, 0	      9239	syntax.c	FUNCTION_141	CALL_9
0x400b275	      0xba02000000	                              mov edx, 2	      9239	syntax.c	FUNCTION_141	CALL_9
0x400b27a	            0x89c6	                            mov esi, eax	      9239	syntax.c	FUNCTION_141	CALL_9
0x400b27c	            0x89ef	                            mov edi, ebp	      9239	syntax.c	FUNCTION_141	CALL_9
0x400b27e	      0xe888fdffff	             call sym.highlight_list_arg	      9239	syntax.c	FUNCTION_141	CALL_9
0x400b283	    0x41b900000000	                              mov r9d, 0	      9241	syntax.c	FUNCTION_141	CALL_10
0x400b289	        0x4c8b4378	              mov r8, qword [rbx + 0x78]	      9241	syntax.c	FUNCTION_141	CALL_10
0x400b28d	      0xb900000000	                              mov ecx, 0	      9241	syntax.c	FUNCTION_141	CALL_10
0x400b292	      0xba02000000	                              mov edx, 2	      9241	syntax.c	FUNCTION_141	CALL_10
0x400b297	            0x89c6	                            mov esi, eax	      9241	syntax.c	FUNCTION_141	CALL_10
0x400b299	            0x89ef	                            mov edi, ebp	      9241	syntax.c	FUNCTION_141	CALL_10
0x400b29b	      0xe86bfdffff	             call sym.highlight_list_arg	      9241	syntax.c	FUNCTION_141	CALL_10
0x400b2a0	    0x41b900000000	                              mov r9d, 0	      9243	syntax.c	FUNCTION_141	CALL_11
0x400b2a6	    0x4c8b83800000	              mov r8, qword [rbx + 0x80]	      9243	syntax.c	FUNCTION_141	CALL_11
0x400b2ad	      0xb900000000	                              mov ecx, 0	      9243	syntax.c	FUNCTION_141	CALL_11
0x400b2b2	      0xba02000000	                              mov edx, 2	      9243	syntax.c	FUNCTION_141	CALL_11
0x400b2b7	            0x89c6	                            mov esi, eax	      9243	syntax.c	FUNCTION_141	CALL_11
0x400b2b9	            0x89ef	                            mov edi, ebp	      9243	syntax.c	FUNCTION_141	CALL_11
0x400b2bb	      0xe84bfdffff	             call sym.highlight_list_arg	      9243	syntax.c	FUNCTION_141	CALL_11
0x400b2c0	    0x41b900000000	                              mov r9d, 0	      9247	syntax.c	FUNCTION_141	CALL_12
0x400b2c6	        0x4c8b4360	              mov r8, qword [rbx + 0x60]	      9247	syntax.c	FUNCTION_141	CALL_12
0x400b2ca	      0xb900000000	                              mov ecx, 0	      9247	syntax.c	FUNCTION_141	CALL_12
0x400b2cf	      0xba02000000	                              mov edx, 2	      9247	syntax.c	FUNCTION_141	CALL_12
0x400b2d4	            0x89c6	                            mov esi, eax	      9247	syntax.c	FUNCTION_141	CALL_12
0x400b2d6	            0x89ef	                            mov edi, ebp	      9247	syntax.c	FUNCTION_141	CALL_12
0x400b2d8	      0xe82efdffff	             call sym.highlight_list_arg	      9247	syntax.c	FUNCTION_141	CALL_12
0x400b2dd	    0x83bb88000000	               cmp dword [rbx + 0x88], 0	      9251	syntax.c	FUNCTION_141	IF_1
0x400b2e4	            0x7455	                            je 0x400b33b	      9251	syntax.c	FUNCTION_141	IF_1
0x400b2e6	    0x8b1500000000	            mov edx, dword [0x0400b2ec] 	      9251	syntax.c	FUNCTION_141	IF_1
0x400b2ec	            0x85d2	                           test edx, edx	      9251	syntax.c	FUNCTION_141	IF_1
0x400b2ee	            0x754b	                           jne 0x400b33b	      9251	syntax.c	FUNCTION_141	IF_1
0x400b2f0	            0x89ea	                            mov edx, ebp	      9253	syntax.c	FUNCTION_141	IF_1	CALL_13
0x400b2f2	      0xbe0f270000	                         mov esi, 0x270f	      9253	syntax.c	FUNCTION_141	IF_1	CALL_13
0x400b2f7	            0x89c7	                            mov edi, eax	      9253	syntax.c	FUNCTION_141	IF_1	CALL_13
0x400b2f9	      0xe846edffff	                call sym.syn_list_header	      9253	syntax.c	FUNCTION_141	IF_1	CALL_13
0x400b2fe	    0x8b3500000000	            mov esi, dword [0x0400b304] 	      9255	syntax.c	FUNCTION_141	IF_1	CALL_15
0x400b304	      0xbf00000000	                              mov edi, 0	      9255	syntax.c	FUNCTION_141	IF_1	CALL_15
0x400b309	      0xe800000000	                          call 0x400b30e	      9255	syntax.c	FUNCTION_141	IF_1	CALL_15
0x400b30e	      0xbf20000000	                           mov edi, 0x20	      9256	syntax.c	FUNCTION_141	IF_1	CALL_16
0x400b313	      0xe800000000	                          call 0x400b318	      9256	syntax.c	FUNCTION_141	IF_1	CALL_16
0x400b318	    0x488b15000000	            mov rdx, qword [0x0400b31f] 	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x400b31f	      0x4a634422f0	    movsxd rax, dword [rdx + r12 - 0x10]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x400b324	        0x488d0cc0	                  lea rcx, [rax + rax*8]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x400b328	        0x488d0448	                  lea rax, [rax + rcx*2]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x400b32c	    0x488bbcc268ff	     mov rdi, qword [rdx + rax*8 - 0x98]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x400b334	      0xe800000000	                          call 0x400b339	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x400b339	            0xeb26	                           jmp 0x400b361	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x400b33b	            0x85c0	                           test eax, eax	      9260	syntax.c	FUNCTION_141	IF_2
0x400b33d	            0x7522	                           jne 0x400b361	      9260	syntax.c	FUNCTION_141	IF_2
0x400b33f	    0x41b900000000	                              mov r9d, 0	      9261	syntax.c	FUNCTION_141	CALL_20
0x400b345	    0x41b800000000	                              mov r8d, 0	      9261	syntax.c	FUNCTION_141	CALL_20
0x400b34b	      0xb900000000	                              mov ecx, 0	      9261	syntax.c	FUNCTION_141	CALL_20
0x400b350	      0xba02000000	                              mov edx, 2	      9261	syntax.c	FUNCTION_141	CALL_20
0x400b355	      0xbe00000000	                              mov esi, 0	      9261	syntax.c	FUNCTION_141	CALL_20
0x400b35a	            0x89ef	                            mov edi, ebp	      9261	syntax.c	FUNCTION_141	CALL_20
0x400b35c	      0xe8aafcffff	             call sym.highlight_list_arg	      9261	syntax.c	FUNCTION_141	CALL_20
0x400b361	    0x48833d000000	               cmp qword [0x0400b369], 0	      9263	syntax.c	FUNCTION_141	IF_3
0x400b369	            0x7e0b	                           jle 0x400b376	      9263	syntax.c	FUNCTION_141	IF_3
0x400b36b	    0x8bbb90000000	            mov edi, dword [rbx + 0x90] 	      9264	syntax.c	FUNCTION_141	CALL_21
0x400b371	      0xe800000000	                          call 0x400b376	      9264	syntax.c	FUNCTION_141	CALL_21
0x400b376	              0x5b	                                 pop rbx	      9266	syntax.c	FUNCTION_141
0x400b377	              0x5d	                                 pop rbp	      9266	syntax.c	FUNCTION_141
0x400b378	            0x415c	                                 pop r12	      9266	syntax.c	FUNCTION_141
0x400b37a	              0xc3	                                     ret	      9266	syntax.c	FUNCTION_141
lookup_color	IF,10:CALL,1:FOR,0:ELSE,5:SWITCH,0:WHILE,0:DO,0:functions,0	69
0x4004275	          0x4189fa	                           mov r10d, edi	      7295	syntax.c	FUNCTION_115
0x4004278	          0x4863c7	                         movsxd rax, edi	      7296	syntax.c	FUNCTION_115
0x400427b	    0x448b0c850000	                  mov r9d, dword [rax*4]	      7296	syntax.c	FUNCTION_115
0x4004283	          0x4585c9	                           test r9d, r9d	      7300	syntax.c	FUNCTION_115	IF_1
0x4004286	     0xf88df000000	                            js 0x400436b	      7300	syntax.c	FUNCTION_115	IF_1
0x400428c	    0x448b05000000	            mov r8d, dword [0x04004293] 	      7303	syntax.c	FUNCTION_115	IF_2
0x4004293	        0x4183f808	                              cmp r8d, 8	      7303	syntax.c	FUNCTION_115	IF_2
0x4004297	            0x751c	                           jne 0x40042b5	      7303	syntax.c	FUNCTION_115	IF_2
0x4004299	    0x8b0485000000	                  mov eax, dword [rax*4]	      7309	syntax.c	FUNCTION_115	IF_2
0x40042a0	            0x85f6	                           test esi, esi	      7311	syntax.c	FUNCTION_115	IF_2	IF_3
0x40042a2	            0x740d	                            je 0x40042b1	      7311	syntax.c	FUNCTION_115	IF_2	IF_3
0x40042a4	            0x89c1	                            mov ecx, eax	      7315	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x40042a6	          0x83e108	                              and ecx, 8	      7315	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x40042a9	           0xf95c1	                                setne cl	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x40042ac	           0xfb6c9	                           movzx ecx, cl	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x40042af	            0x890a	                    mov dword [rdx], ecx	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x40042b1	          0x83e007	                              and eax, 7	      7320	syntax.c	FUNCTION_115	IF_2	ELSE_1
0x40042b4	              0xc3	                                     ret	      7320	syntax.c	FUNCTION_115	IF_2	ELSE_1
0x40042b5	    0x4181f8ff0000	                           cmp r8d, 0xff	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x40042bc	        0x400f9fc6	                                setg sil	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x40042c0	        0x4183f810	                           cmp r8d, 0x10	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x40042c4	           0xf94c2	                                 sete dl	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x40042c7	        0x4183f858	                           cmp r8d, 0x58	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x40042cb	           0xf94c0	                                 sete al	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x40042ce	             0x8c2	                               or dl, al	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x40042d0	            0x750c	                           jne 0x40042de	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x40042d2	          0x4489c8	                            mov eax, r9d	      7296	syntax.c	FUNCTION_115
0x40042d5	          0x4084f6	                           test sil, sil	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x40042d8	     0xf8496000000	                            je 0x4004374	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x40042de	    0x488b15000000	            mov rdx, qword [0x040042e5] 	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x40042e5	          0x803a00	                       cmp byte [rdx], 0	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x40042e8	            0x750c	                           jne 0x40042f6	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x40042ea	    0x488b15000000	            mov rdx, qword [0x040042f1] 	      7333	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3
0x40042f1	          0x803a00	                       cmp byte [rdx], 0	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x40042f4	            0x7459	                            je 0x400434f	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x40042f6	    0x4181f8000100	                          cmp r8d, 0x100	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x40042fd	            0x7f1b	                            jg 0x400431a	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x40042ff	      0xb800000000	                              mov eax, 0	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x4004304	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400430b	          0x4889d7	                            mov rdi, rdx	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400430e	            0xf2ae	              repne scasb al, byte [rdi]	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x4004310	          0x48f7d1	                                 not rcx	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x4004313	      0x807c0afe6d	         cmp byte [rdx + rcx - 2], 0x6d 	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x4004318	            0x7535	                           jne 0x400434f	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400431a	        0x4183f858	                           cmp r8d, 0x58	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400431e	            0x750d	                           jne 0x400432d	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x4004320	          0x4d63d2	                        movsxd r10, r10d	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x4004323	    0x468b0c950000	                  mov r9d, dword [r10*4]	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400432b	            0xeb22	                           jmp 0x400434f	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400432d	    0x4181f8ff0000	                           cmp r8d, 0xff	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x4004334	            0x7e0d	                           jle 0x4004343	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x4004336	          0x4d63d2	                        movsxd r10, r10d	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x4004339	    0x468b0c950000	                  mov r9d, dword [r10*4]	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x4004341	            0xeb0c	                           jmp 0x400434f	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x4004343	          0x4d63d2	                        movsxd r10, r10d	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x4004346	    0x428b04950000	                  mov eax, dword [r10*4]	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x400434e	              0xc3	                                     ret	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x400434f	        0x4183f90f	                            cmp r9d, 0xf	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004353	            0x751c	                           jne 0x4004371	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004355	          0x4084f6	                           test sil, sil	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004358	            0x7417	                            je 0x4004371	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400435a	    0x833d00000000	               cmp dword [0x04004361], 0	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004361	      0xb8e7000000	                           mov eax, 0xe7	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004366	        0x410f44c1	                          cmove eax, r9d	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400436a	              0xc3	                                     ret	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400436b	      0xb8ffffffff	                     mov eax, 0xffffffff	      7301	syntax.c	FUNCTION_115	IF_1
0x4004370	              0xc3	                                     ret	      7301	syntax.c	FUNCTION_115	IF_1
0x4004371	          0x4489c8	                            mov eax, r9d	      7301	syntax.c	FUNCTION_115	IF_1
0x4004374	            0xf3c3	                                     ret	      7352	syntax.c	FUNCTION_115
ex_syntax	IF,5:CALL,7:FOR,2:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	76
0x4003776	            0x4156	                                push r14	      6360	syntax.c	FUNCTION_95
0x4003778	            0x4155	                                push r13	      6360	syntax.c	FUNCTION_95
0x400377a	            0x4154	                                push r12	      6360	syntax.c	FUNCTION_95
0x400377c	              0x55	                                push rbp	      6360	syntax.c	FUNCTION_95
0x400377d	              0x53	                                push rbx	      6360	syntax.c	FUNCTION_95
0x400377e	          0x4989fc	                            mov r12, rdi	      6360	syntax.c	FUNCTION_95
0x4003781	          0x488b3f	                    mov rdi, qword [rdi]	      6361	syntax.c	FUNCTION_95
0x4003784	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      6366	syntax.c	FUNCTION_95
0x4003789	    0x488905000000	            mov qword [0x04003790], rax 	      6366	syntax.c	FUNCTION_95
0x4003790	           0xfb607	                   movzx eax, byte [rdi]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003793	          0x83e0df	                     and eax, 0xffffffdf	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003796	          0x83e841	                           sub eax, 0x41	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003799	            0x3c19	                            cmp al, 0x19	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400379b	            0x7716	                            ja 0x40037b3	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400379d	          0x4889fb	                            mov rbx, rdi	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x40037a0	        0x4883c301	                              add rbx, 1	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x40037a4	           0xfb603	                   movzx eax, byte [rbx]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x40037a7	          0x83e0df	                     and eax, 0xffffffdf	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x40037aa	          0x83e841	                           sub eax, 0x41	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x40037ad	            0x3c19	                            cmp al, 0x19	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x40037af	            0x76ef	                           jbe 0x40037a0	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x40037b1	            0xeb03	                           jmp 0x40037b6	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x40037b3	          0x4889fb	                            mov rbx, rdi	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x40037b6	          0x4889de	                            mov rsi, rbx	      6371	syntax.c	FUNCTION_95	CALL_2
0x40037b9	          0x4829fe	                            sub rsi, rdi	      6371	syntax.c	FUNCTION_95	CALL_2
0x40037bc	      0xe800000000	                          call 0x40037c1	      6371	syntax.c	FUNCTION_95	CALL_2
0x40037c1	          0x4989c6	                            mov r14, rax	      6371	syntax.c	FUNCTION_95	CALL_2
0x40037c4	          0x4885c0	                           test rax, rax	      6372	syntax.c	FUNCTION_95	IF_1
0x40037c7	     0xf84a4000000	                            je 0x4003871	      6372	syntax.c	FUNCTION_95	IF_1
0x40037cd	    0x41837c243000	               cmp dword [r12 + 0x30], 0	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x40037d3	     0xf8486000000	                            je 0x400385f	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x40037d9	    0x830500000000	               add dword [0x040037e0], 1	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0x40037e0	            0xeb7d	                           jmp 0x400385f	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0x40037e2	      0xba05000000	                              mov edx, 5	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x40037e7	      0xbe00000000	                              mov esi, 0	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x40037ec	      0xbf00000000	                              mov edi, 0	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x40037f1	      0xe800000000	                          call 0x40037f6	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x40037f6	          0x4c89f6	                            mov rsi, r14	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x40037f9	          0x4889c7	                            mov rdi, rax	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x40037fc	      0xe800000000	                          call 0x4003801	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x4003801	            0xeb43	                           jmp 0x4003846	      6381	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x4003803	          0x4c89f7	                            mov rdi, r14	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x4003806	      0xe800000000	                          call 0x400380b	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400380b	            0x85c0	                           test eax, eax	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400380d	            0x7524	                           jne 0x4003833	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400380f	          0x4889df	                            mov rdi, rbx	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x4003812	      0xe800000000	                          call 0x4003817	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x4003817	        0x49890424	                    mov qword [r12], rax	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x400381b	          0x4d63ed	                        movsxd r13, r13d	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400381e	        0x49c1e504	                              shl r13, 4	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x4003822	      0xbe00000000	                              mov esi, 0	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x4003827	          0x4c89e7	                            mov rdi, r12	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400382a	    0x41ff95000000	                        call qword [r13]	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x4003831	            0xeb13	                           jmp 0x4003846	      6387	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x4003833	        0x4183c501	                             add r13d, 1	      6376	syntax.c	FUNCTION_95	IF_1	FOR_2
0x4003837	        0x4883c510	                           add rbp, 0x10	      6376	syntax.c	FUNCTION_95	IF_1	FOR_2
0x400383b	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400383f	          0x4885f6	                           test rsi, rsi	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x4003842	            0x75bf	                           jne 0x4003803	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x4003844	            0xeb9c	                           jmp 0x40037e2	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x4003846	          0x4c89f7	                            mov rdi, r14	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0x4003849	      0xe800000000	                          call 0x400384e	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0x400384e	    0x41837c243000	               cmp dword [r12 + 0x30], 0	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x4003854	            0x741b	                            je 0x4003871	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x4003856	    0x832d00000000	               sub dword [0x0400385d], 1	      6392	syntax.c	FUNCTION_95	IF_1	IF_5
0x400385d	            0xeb12	                           jmp 0x4003871	      6394	syntax.c	FUNCTION_95
0x400385f	      0xbd00000000	                              mov ebp, 0	      6394	syntax.c	FUNCTION_95
0x4003864	      0xbe00000000	                              mov esi, 0	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003869	    0x41bd00000000	                             mov r13d, 0	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400386f	            0xeb92	                           jmp 0x4003803	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003871	              0x5b	                                 pop rbx	      6394	syntax.c	FUNCTION_95
0x4003872	              0x5d	                                 pop rbp	      6394	syntax.c	FUNCTION_95
0x4003873	            0x415c	                                 pop r12	      6394	syntax.c	FUNCTION_95
0x4003875	            0x415d	                                 pop r13	      6394	syntax.c	FUNCTION_95
0x4003877	            0x415e	                                 pop r14	      6394	syntax.c	FUNCTION_95
0x4003879	              0xc3	                                     ret	      6394	syntax.c	FUNCTION_95
syn_cmd_enable	IF,0:CALL,3:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	13
0x400307a	              0x53	                                push rbx	      3874	syntax.c	FUNCTION_58
0x400307b	          0x4889fb	                            mov rbx, rdi	      3874	syntax.c	FUNCTION_58
0x400307e	      0xbe00000000	                              mov esi, 0	      3875	syntax.c	FUNCTION_58	CALL_1
0x4003083	      0xbf00000000	                              mov edi, 0	      3875	syntax.c	FUNCTION_58	CALL_1
0x4003088	      0xe800000000	                          call 0x400308d	      3875	syntax.c	FUNCTION_58	CALL_1
0x400308d	      0xbe00000000	                              mov esi, 0	      3876	syntax.c	FUNCTION_58	CALL_2
0x4003092	          0x4889df	                            mov rdi, rbx	      3876	syntax.c	FUNCTION_58	CALL_2
0x4003095	      0xe832ffffff	                  call sym.syn_cmd_onoff	      3876	syntax.c	FUNCTION_58	CALL_2
0x400309a	      0xbe01000000	                              mov esi, 1	      3877	syntax.c	FUNCTION_58	CALL_3
0x400309f	      0xbf00000000	                              mov edi, 0	      3877	syntax.c	FUNCTION_58	CALL_3
0x40030a4	      0xe800000000	                          call 0x40030a9	      3877	syntax.c	FUNCTION_58	CALL_3
0x40030a9	              0x5b	                                 pop rbx	      3878	syntax.c	FUNCTION_58
0x40030aa	              0xc3	                                     ret	      3878	syntax.c	FUNCTION_58
clear_hl_tables	IF,0:CALL,5:FOR,1:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	27
0x40044bf	              0x55	                                push rbp	      8989	syntax.c	FUNCTION_135
0x40044c0	              0x53	                                push rbx	      8989	syntax.c	FUNCTION_135
0x40044c1	        0x4883ec08	                              sub rsp, 8	      8989	syntax.c	FUNCTION_135
0x40044c5	      0xbf00000000	                              mov edi, 0	      8994	syntax.c	FUNCTION_135	CALL_1
0x40044ca	      0xe800000000	                          call 0x40044cf	      8994	syntax.c	FUNCTION_135	CALL_1
0x40044cf	    0x833d00000000	               cmp dword [0x040044d6], 0	      8996	syntax.c	FUNCTION_135	FOR_1
0x40044d6	            0x7e34	                           jle 0x400450c	      8996	syntax.c	FUNCTION_135	FOR_1
0x40044d8	      0xbb00000000	                              mov ebx, 0	      8996	syntax.c	FUNCTION_135	FOR_1
0x40044dd	          0x4863c3	                         movsxd rax, ebx	      8998	syntax.c	FUNCTION_135	FOR_1
0x40044e0	        0x488d1480	                  lea rdx, [rax + rax*4]	      8998	syntax.c	FUNCTION_135	FOR_1
0x40044e4	    0x488b05000000	            mov rax, qword [0x040044eb] 	      8998	syntax.c	FUNCTION_135	FOR_1
0x40044eb	        0x488d2cd0	                  lea rbp, [rax + rdx*8]	      8998	syntax.c	FUNCTION_135	FOR_1
0x40044ef	        0x488b7d08	                mov rdi, qword [rbp + 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x40044f3	      0xe800000000	                          call 0x40044f8	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x40044f8	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x40044fc	      0xe800000000	                          call 0x4004501	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x4004501	          0x83c301	                              add ebx, 1	      8996	syntax.c	FUNCTION_135	FOR_1
0x4004504	    0x391d00000000	            cmp dword [0x0400450a], ebx 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400450a	            0x7fd1	                            jg 0x40044dd	      8996	syntax.c	FUNCTION_135	FOR_1
0x400450c	      0xbf00000000	                              mov edi, 0	      9002	syntax.c	FUNCTION_135	CALL_4
0x4004511	      0xe800000000	                          call 0x4004516	      9002	syntax.c	FUNCTION_135	CALL_4
0x4004516	      0xbf00000000	                              mov edi, 0	      9003	syntax.c	FUNCTION_135	CALL_5
0x400451b	      0xe800000000	                          call 0x4004520	      9003	syntax.c	FUNCTION_135	CALL_5
0x4004520	        0x4883c408	                              add rsp, 8	      9004	syntax.c	FUNCTION_135
0x4004524	              0x5b	                                 pop rbx	      9004	syntax.c	FUNCTION_135
0x4004525	              0x5d	                                 pop rbp	      9004	syntax.c	FUNCTION_135
0x4004526	              0xc3	                                     ret	      9004	syntax.c	FUNCTION_135
color_name2handle	IF,7:CALL,8:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	68
0x40043aa	          0x4889f8	                            mov rax, rdi	      8723	syntax.c	FUNCTION_130
0x40043ad	      0xbf00000000	                              mov edi, 0	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x40043b2	      0xb905000000	                              mov ecx, 5	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x40043b7	          0x4889c6	                            mov rsi, rax	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x40043ba	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x40043bc	           0xf97c1	                                 seta cl	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x40043bf	           0xf92c2	                                 setb dl	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x40043c2	            0x38d1	                              cmp cl, dl	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x40043c4	     0xf84eb000000	                            je 0x40044b5	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x40043ca	              0x53	                                push rbx	      8723	syntax.c	FUNCTION_130
0x40043cb	          0x4889c3	                            mov rbx, rax	      8723	syntax.c	FUNCTION_130
0x40043ce	      0xbe00000000	                              mov esi, 0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x40043d3	          0x4889c7	                            mov rdi, rax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x40043d6	      0xe800000000	                          call 0x40043db	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x40043db	            0x85c0	                           test eax, eax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x40043dd	            0x7411	                            je 0x40043f0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x40043df	      0xbe00000000	                              mov esi, 0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x40043e4	          0x4889df	                            mov rdi, rbx	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x40043e7	      0xe800000000	                          call 0x40043ec	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x40043ec	            0x85c0	                           test eax, eax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x40043ee	            0x7549	                           jne 0x4004439	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x40043f0	    0x488b05000000	            mov rax, qword [0x040043f7] 	      8733	syntax.c	FUNCTION_130	IF_2	IF_3
0x40043f7	    0x833d00000000	               cmp dword [0x040043fe], 0	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x40043fe	     0xf85b9000000	                           jne 0x40044bd	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x4004404	    0x488b05000000	            mov rax, qword [0x0400440b] 	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x400440b	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x4004411	     0xf85a6000000	                           jne 0x40044bd	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x4004417	    0x488b05000000	            mov rax, qword [0x0400441e] 	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x400441e	          0x80386c	                    cmp byte [rax], 0x6c	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4004421	      0xbf00000000	                              mov edi, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4004426	      0xb800000000	                              mov eax, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x400442b	        0x480f44f8	                          cmove rdi, rax	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x400442f	      0xe800000000	                          call 0x4004434	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4004434	      0xe984000000	                           jmp 0x40044bd	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4004439	      0xbe00000000	                              mov esi, 0	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400443e	          0x4889df	                            mov rdi, rbx	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004441	      0xe800000000	                          call 0x4004446	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004446	            0x85c0	                           test eax, eax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004448	            0x7411	                            je 0x400445b	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400444a	      0xbe00000000	                              mov esi, 0	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400444f	          0x4889df	                            mov rdi, rbx	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004452	      0xe800000000	                          call 0x4004457	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004457	            0x85c0	                           test eax, eax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004459	            0x753e	                           jne 0x4004499	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400445b	    0x488b05000000	            mov rax, qword [0x04004462] 	      8748	syntax.c	FUNCTION_130	IF_5	IF_6
0x4004462	    0x833d00000000	               cmp dword [0x04004469], 0	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x4004469	            0x7552	                           jne 0x40044bd	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x400446b	    0x488b05000000	            mov rax, qword [0x04004472] 	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x4004472	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x4004478	            0x7543	                           jne 0x40044bd	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x400447a	    0x488b05000000	            mov rax, qword [0x04004481] 	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004481	          0x80386c	                    cmp byte [rax], 0x6c	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004484	      0xbf00000000	                              mov edi, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004489	      0xb800000000	                              mov eax, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x400448e	        0x480f44f8	                          cmove rdi, rax	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004492	      0xe800000000	                          call 0x4004497	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004497	            0xeb24	                           jmp 0x40044bd	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004499	    0x833d00000000	               cmp dword [0x040044a0], 0	      8758	syntax.c	FUNCTION_130	CALL_8
0x40044a0	      0xba00000000	                              mov edx, 0	      8758	syntax.c	FUNCTION_130	CALL_8
0x40044a5	      0xb800000000	                              mov eax, 0	      8758	syntax.c	FUNCTION_130	CALL_8
0x40044aa	        0x480f44c2	                          cmove rax, rdx	      8758	syntax.c	FUNCTION_130	CALL_8
0x40044ae	          0x4889df	                            mov rdi, rbx	      8758	syntax.c	FUNCTION_130	CALL_8
0x40044b1	            0xffd0	                                call rax	      8758	syntax.c	FUNCTION_130	CALL_8
0x40044b3	            0xeb08	                           jmp 0x40044bd	      8758	syntax.c	FUNCTION_130	CALL_8
0x40044b5	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      8725	syntax.c	FUNCTION_130	IF_1
0x40044bc	              0xc3	                                     ret	      8725	syntax.c	FUNCTION_130	IF_1
0x40044bd	              0x5b	                                 pop rbx	      8759	syntax.c	FUNCTION_130
0x40044be	              0xc3	                                     ret	      8759	syntax.c	FUNCTION_130
hl_set_bg_color_name	IF,2:CALL,4:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	23
0x40057b2	          0x4885ff	                           test rdi, rdi	      8561	syntax.c	FUNCTION_125	IF_1
0x40057b5	            0x7448	                            je 0x40057ff	      8561	syntax.c	FUNCTION_125	IF_1
0x40057b7	              0x55	                                push rbp	      8558	syntax.c	FUNCTION_125
0x40057b8	              0x53	                                push rbx	      8558	syntax.c	FUNCTION_125
0x40057b9	        0x4883ec08	                              sub rsp, 8	      8558	syntax.c	FUNCTION_125
0x40057bd	          0x4889fb	                            mov rbx, rdi	      8558	syntax.c	FUNCTION_125
0x40057c0	      0xbf00000000	                              mov edi, 0	      8563	syntax.c	FUNCTION_125	IF_1	CALL_1
0x40057c5	      0xe800000000	                          call 0x40057ca	      8563	syntax.c	FUNCTION_125	IF_1	CALL_1
0x40057ca	            0x85c0	                           test eax, eax	      8564	syntax.c	FUNCTION_125	IF_1	IF_2
0x40057cc	            0x7e2b	                           jle 0x40057f9	      8564	syntax.c	FUNCTION_125	IF_1	IF_2
0x40057ce	            0x4898	                                    cdqe	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x40057d0	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x40057d4	        0x488d2c50	                  lea rbp, [rax + rdx*2]	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x40057d8	        0x48c1e503	                              shl rbp, 3	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x40057dc	    0x488b05000000	            mov rax, qword [0x040057e3] 	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x40057e3	      0x488b7c28e0	       mov rdi, qword [rax + rbp - 0x20]	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x40057e8	      0xe800000000	                          call 0x40057ed	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x40057ed	    0x488b05000000	            mov rax, qword [0x040057f4] 	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x40057f4	      0x48895c28e0	       mov qword [rax + rbp - 0x20], rbx	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x40057f9	        0x4883c408	                              add rsp, 8	      8570	syntax.c	FUNCTION_125
0x40057fd	              0x5b	                                 pop rbx	      8570	syntax.c	FUNCTION_125
0x40057fe	              0x5d	                                 pop rbp	      8570	syntax.c	FUNCTION_125
0x40057ff	            0xf3c3	                                     ret	      8570	syntax.c	FUNCTION_125
syn_stack_apply_changes_block	IF,7:CALL,1:FOR,1:ELSE,2:SWITCH,0:WHILE,0:DO,0:functions,0	64
0x40033a8	    0x4883bf100300	              cmp qword [rdi + 0x310], 0	      1326	syntax.c	FUNCTION_15	IF_1
0x40033b0	     0xf84f5000000	                            je 0x40034ab	      1326	syntax.c	FUNCTION_15	IF_1
0x40033b6	            0x4156	                                push r14	      1322	syntax.c	FUNCTION_15
0x40033b8	            0x4155	                                push r13	      1322	syntax.c	FUNCTION_15
0x40033ba	            0x4154	                                push r12	      1322	syntax.c	FUNCTION_15
0x40033bc	              0x55	                                push rbp	      1322	syntax.c	FUNCTION_15
0x40033bd	              0x53	                                push rbx	      1322	syntax.c	FUNCTION_15
0x40033be	    0x488b9f200300	           mov rbx, qword [rdi + 0x320] 	      1330	syntax.c	FUNCTION_15	FOR_1
0x40033c5	          0x4885db	                           test rbx, rbx	      1330	syntax.c	FUNCTION_15	FOR_1
0x40033c8	     0xf84d5000000	                            je 0x40034a3	      1330	syntax.c	FUNCTION_15	FOR_1
0x40033ce	          0x4889f5	                            mov rbp, rsi	      1330	syntax.c	FUNCTION_15	FOR_1
0x40033d1	          0x4989fc	                            mov r12, rdi	      1330	syntax.c	FUNCTION_15	FOR_1
0x40033d4	    0x41bd00000000	                             mov r13d, 0	      1330	syntax.c	FUNCTION_15	FOR_1
0x40033da	        0x488b4308	                mov rax, qword [rbx + 8]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40033de	    0x488b95100100	           mov rdx, qword [rbp + 0x110] 	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40033e5	          0x4889c1	                            mov rcx, rax	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40033e8	    0x49038c24b802	            add rcx, qword [r12 + 0x2b8]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40033f0	          0x4839d1	                            cmp rcx, rdx	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40033f3	     0xf8e9b000000	                           jle 0x4003494	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40033f9	    0x488b8d200100	           mov rcx, qword [rbp + 0x120] 	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4003400	          0x4801c8	                            add rax, rcx	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4003403	    0x483b85180100	           cmp rax, qword [rbp + 0x118] 	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x400340a	            0x7f3f	                            jg 0x400344b	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x400340c	          0x4c8b33	                    mov r14, qword [rbx]	      1338	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x400340f	          0x4d85ed	                           test r13, r13	      1339	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x4003412	            0x750a	                           jne 0x400341e	      1339	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x4003414	    0x4d89b4242003	            mov qword [r12 + 0x320], r14	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x400341c	            0xeb04	                           jmp 0x4003422	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x400341e	        0x4d897500	                    mov qword [r13], r14	      1342	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	ELSE_1
0x4003422	          0x4889df	                            mov rdi, rbx	      1439	syntax.c	FUNCTION_17	CALL_1
0x4003425	      0xe8abd0ffff	                call sym.clear_syn_state	      1439	syntax.c	FUNCTION_17	CALL_1
0x400342a	    0x498b84242803	           mov rax, qword [r12 + 0x328] 	      1440	syntax.c	FUNCTION_17
0x4003432	          0x488903	                    mov qword [rbx], rax	      1440	syntax.c	FUNCTION_17
0x4003435	    0x49899c242803	            mov qword [r12 + 0x328], rbx	      1441	syntax.c	FUNCTION_17
0x400343d	    0x418384243003	              add dword [r12 + 0x330], 1	      1442	syntax.c	FUNCTION_17
0x4003446	          0x4c89f3	                            mov rbx, r14	      1344	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x4003449	            0xeb4f	                           jmp 0x400349a	      1345	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x400344b	    0x488bb3d00000	            mov rsi, qword [rbx + 0xd0] 	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x4003452	          0x4839f2	                            cmp rdx, rsi	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x4003455	            0x7d16	                           jge 0x400346d	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x4003457	          0x4885f6	                           test rsi, rsi	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x400345a	            0x7411	                            je 0x400346d	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x400345c	          0x4801f1	                            add rcx, rsi	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x400345f	          0x4839ca	                            cmp rdx, rcx	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x4003462	        0x480f4cd1	                          cmovl rdx, rcx	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x4003466	    0x488993d00000	             mov qword [rbx + 0xd0], rdx	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x400346d	    0x488b93d00000	            mov rdx, qword [rbx + 0xd0] 	      1357	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4003474	          0x4885d2	                           test rdx, rdx	      1357	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4003477	            0x7409	                            je 0x4003482	      1357	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4003479	    0x483b95180100	           cmp rdx, qword [rbp + 0x118] 	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4003480	            0x7d0e	                           jge 0x4003490	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4003482	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4003489	    0x488993d00000	             mov qword [rbx + 0xd0], rdx	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4003490	        0x48894308	                mov qword [rbx + 8], rax	      1361	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4003494	          0x4989dd	                            mov r13, rbx	      1364	syntax.c	FUNCTION_15	FOR_1
0x4003497	          0x488b1b	                    mov rbx, qword [rbx]	      1364	syntax.c	FUNCTION_15	FOR_1
0x400349a	          0x4885db	                           test rbx, rbx	      1330	syntax.c	FUNCTION_15	FOR_1
0x400349d	     0xf8537ffffff	                           jne 0x40033da	      1330	syntax.c	FUNCTION_15	FOR_1
0x40034a3	              0x5b	                                 pop rbx	      1366	syntax.c	FUNCTION_15
0x40034a4	              0x5d	                                 pop rbp	      1366	syntax.c	FUNCTION_15
0x40034a5	            0x415c	                                 pop r12	      1366	syntax.c	FUNCTION_15
0x40034a7	            0x415d	                                 pop r13	      1366	syntax.c	FUNCTION_15
0x40034a9	            0x415e	                                 pop r14	      1366	syntax.c	FUNCTION_15
0x40034ab	            0xf3c3	                                     ret	      1366	syntax.c	FUNCTION_15
syn_finish_line	IF,3:CALL,5:FOR,0:ELSE,0:SWITCH,0:WHILE,1:DO,0:functions,0	53
0x4009235	            0x4154	                                push r12	      1800	syntax.c	FUNCTION_26
0x4009237	              0x55	                                push rbp	      1800	syntax.c	FUNCTION_26
0x4009238	              0x53	                                push rbx	      1800	syntax.c	FUNCTION_26
0x4009239	            0x89fb	                            mov ebx, edi	      1800	syntax.c	FUNCTION_26
0x400923b	    0x8b2d00000000	            mov ebp, dword [0x04009241] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009241	            0x85ed	                           test ebp, ebp	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009243	     0xf85a3000000	                           jne 0x40092ec	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009249	      0xb900000000	                              mov ecx, 0	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400924e	      0xba00000000	                              mov edx, 0	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x4009253	      0xbe00000000	                              mov esi, 0	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x4009258	            0x89df	                            mov edi, ebx	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400925a	      0xe839f1ffff	               call sym.syn_current_attr	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400925f	            0x85db	                           test ebx, ebx	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4009261	            0x7473	                            je 0x40092d6	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4009263	    0x8b0500000000	            mov eax, dword [0x04009269] 	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4009269	            0x85c0	                           test eax, eax	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400926b	            0x7469	                            je 0x40092d6	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400926d	            0x4898	                                    cdqe	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400926f	        0x488d04c0	                  lea rax, [rax + rax*8]	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4009273	        0x48c1e004	                              shl rax, 4	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4009277	    0x480305000000	             add rax, qword [0x0400927e]	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400927e	    0x8b8070ffffff	             mov eax, dword [rax - 0x90]	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4009284	            0x85c0	                           test eax, eax	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4009286	            0x781e	                            js 0x40092a6	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4009288	            0x4898	                                    cdqe	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x400928a	        0x488d0480	                  lea rax, [rax + rax*4]	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x400928e	        0x48c1e005	                              shl rax, 5	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x4009292	    0x488b15000000	            mov rdx, qword [0x04009299] 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x4009299	    0x480382700200	            add rax, qword [rdx + 0x270]	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x40092a0	        0xf6402430	           test byte [rax + 0x24], 0x30 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x40092a4	            0x754d	                           jne 0x40092f3	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x40092a6	    0x448b25000000	           mov r12d, dword [0x040092ad] 	      1824	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x40092ad	      0xe80f77ffff	                 call sym.syn_getcurline	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x40092b2	    0x8b1500000000	            mov edx, dword [0x040092b8] 	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x40092b8	          0x4863ca	                         movsxd rcx, edx	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x40092bb	        0x803c0800	                 cmp byte [rax + rcx], 0	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x40092bf	            0x7409	                            je 0x40092ca	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x40092c1	          0x83c201	                              add edx, 1	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x40092c4	    0x891500000000	            mov dword [0x040092ca], edx 	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x40092ca	      0xe8dde9ffff	               call sym.check_state_ends	      1827	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_5
0x40092cf	    0x448925000000	           mov dword [0x040092d6], r12d 	      1828	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x40092d6	    0x830500000000	               add dword [0x040092dd], 1	      1830	syntax.c	FUNCTION_26	WHILE_1
0x40092dd	    0x833d00000000	               cmp dword [0x040092e4], 0	      1804	syntax.c	FUNCTION_26	WHILE_1
0x40092e4	     0xf845fffffff	                            je 0x4009249	      1804	syntax.c	FUNCTION_26	WHILE_1
0x40092ea	            0xeb0c	                           jmp 0x40092f8	      1804	syntax.c	FUNCTION_26	WHILE_1
0x40092ec	      0xbd00000000	                              mov ebp, 0	      1832	syntax.c	FUNCTION_26
0x40092f1	            0xeb05	                           jmp 0x40092f8	      1832	syntax.c	FUNCTION_26
0x40092f3	      0xbd01000000	                              mov ebp, 1	      1819	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x40092f8	            0x89e8	                            mov eax, ebp	      1833	syntax.c	FUNCTION_26
0x40092fa	              0x5b	                                 pop rbx	      1833	syntax.c	FUNCTION_26
0x40092fb	              0x5d	                                 pop rbp	      1833	syntax.c	FUNCTION_26
0x40092fc	            0x415c	                                 pop r12	      1833	syntax.c	FUNCTION_26
0x40092fe	              0xc3	                                     ret	      1833	syntax.c	FUNCTION_26
load_current_state	IF,4:CALL,19:FOR,1:ELSE,2:SWITCH,0:WHILE,0:DO,0:functions,0	86
0x4008210	            0x4156	                                push r14	      1594	syntax.c	FUNCTION_20
0x4008212	            0x4155	                                push r13	      1594	syntax.c	FUNCTION_20
0x4008214	            0x4154	                                push r12	      1594	syntax.c	FUNCTION_20
0x4008216	              0x55	                                push rbp	      1594	syntax.c	FUNCTION_20
0x4008217	              0x53	                                push rbx	      1594	syntax.c	FUNCTION_20
0x4008218	          0x4989fc	                            mov r12, rdi	      1594	syntax.c	FUNCTION_20
0x400821b	      0xe88a84ffff	            call sym.clear_current_state	      1598	syntax.c	FUNCTION_20	CALL_1
0x4008220	    0xc70500000000	           mov dword [0x0400822a], 0x90 	      1740	syntax.c	FUNCTION_24
0x400822a	    0xc70500000000	               mov dword [0x04008234], 3	      1741	syntax.c	FUNCTION_24
0x4008234	    0xc70500000000	     mov dword [0x0400823e], 0xffffffff 	      1600	syntax.c	FUNCTION_20
0x400823e	    0x418bb424bc00	            mov esi, dword [r12 + 0xbc] 	      1601	syntax.c	FUNCTION_20	IF_1
0x4008246	            0x85f6	                           test esi, esi	      1601	syntax.c	FUNCTION_20	IF_1
0x4008248	     0xf8418010000	                            je 0x4008366	      1601	syntax.c	FUNCTION_20	IF_1
0x400824e	      0xbf00000000	                              mov edi, 0	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4008253	      0xe800000000	                          call 0x4008258	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4008258	            0x85c0	                           test eax, eax	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x400825a	     0xf8406010000	                            je 0x4008366	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4008260	    0x418b8424bc00	            mov eax, dword [r12 + 0xbc] 	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x4008268	      0x4d8d6c2410	                   lea r13, [r12 + 0x10]	      1607	syntax.c	FUNCTION_20	IF_1	ELSE_1
0x400826d	          0x83f807	                              cmp eax, 7	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x4008270	            0x7e05	                           jle 0x4008277	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x4008272	      0x4d8b6c2420	            mov r13, qword [r12 + 0x20] 	      1605	syntax.c	FUNCTION_20	IF_1	CALL_4
0x4008277	            0x85c0	                           test eax, eax	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008279	     0xf8ee1000000	                           jle 0x4008360	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400827f	      0xbd00000000	                              mov ebp, 0	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008284	          0x4863c5	                         movsxd rax, ebp	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x4008287	        0x488d1cc0	                  lea rbx, [rax + rax*8]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x400828b	        0x48c1e304	                              shl rbx, 4	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x400828f	        0x488d0440	                  lea rax, [rax + rax*2]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x4008293	      0x498d44c500	                  lea rax, [r13 + rax*8]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x4008298	            0x8b08	                    mov ecx, dword [rax]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x400829a	    0x488b15000000	            mov rdx, qword [0x040082a1] 	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x40082a1	          0x890c1a	              mov dword [rdx + rbx], ecx	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x40082a4	          0x4989de	                            mov r14, rbx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x40082a7	    0x4c0335000000	             add r14, qword [0x040082ae]	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x40082ae	        0x48635004	            movsxd rdx, dword [rax + 4] 	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x40082b2	        0x49895668	             mov qword [r14 + 0x68], rdx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x40082b6	          0x8b5008	                mov edx, dword [rax + 8]	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x40082b9	        0x41895670	             mov dword [r14 + 0x70], edx	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x40082bd	          0x8b500c	              mov edx, dword [rax + 0xc]	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x40082c0	        0x41895674	             mov dword [r14 + 0x74], edx	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x40082c4	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x40082c8	      0xe800000000	                          call 0x40082cd	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x40082cd	    0x498986880000	             mov qword [r14 + 0x88], rax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x40082d4	    0x833d00000000	               cmp dword [0x040082db], 0	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x40082db	            0x7914	                           jns 0x40082f1	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x40082dd	    0x488b05000000	            mov rax, qword [0x040082e4] 	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x40082e4	      0xf644186904	        test byte [rax + rbx + 0x69], 4 	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x40082e9	            0x7406	                            je 0x40082f1	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x40082eb	    0x892d00000000	            mov dword [0x040082f1], ebp 	      1618	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x40082f1	          0x4889d8	                            mov rax, rbx	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x40082f4	    0x480305000000	             add rax, qword [0x040082fb]	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x40082fb	    0xc7405c000000	               mov dword [rax + 0x5c], 0	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x4008302	    0xc7400c000000	                mov dword [rax + 0xc], 0	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_13
0x4008309	    0x48031d000000	             add rbx, qword [0x04008310]	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x4008310	            0x8b03	                    mov eax, dword [rbx]	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x4008312	            0x85c0	                           test eax, eax	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x4008314	            0x7825	                            js 0x400833b	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x4008316	            0x4898	                                    cdqe	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x4008318	        0x488d0480	                  lea rax, [rax + rax*4]	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x400831c	        0x48c1e005	                              shl rax, 5	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x4008320	    0x488b15000000	            mov rdx, qword [0x04008327] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x4008327	    0x480382700200	            add rax, qword [rdx + 0x270]	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x400832e	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x4008332	    0x488983800000	             mov qword [rbx + 0x80], rax	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x4008339	            0xeb0b	                           jmp 0x4008346	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x400833b	    0x48c783800000	               mov qword [rbx + 0x80], 0	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_18
0x4008346	            0x89ef	                            mov edi, ebp	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_19
0x4008348	      0xe838f8ffff	                 call sym.update_si_attr	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_19
0x400834d	          0x83c501	                              add ebp, 1	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008350	    0x418b8424bc00	            mov eax, dword [r12 + 0xbc] 	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008358	            0x39e8	                            cmp eax, ebp	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400835a	     0xf8f24ffffff	                            jg 0x4008284	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008360	    0x890500000000	            mov dword [0x04008366], eax 	      1628	syntax.c	FUNCTION_20	IF_1
0x4008366	    0x498b8424c000	            mov rax, qword [r12 + 0xc0] 	      1630	syntax.c	FUNCTION_20
0x400836e	    0x488905000000	            mov qword [0x04008375], rax 	      1630	syntax.c	FUNCTION_20
0x4008375	    0x418b8424b800	            mov eax, dword [r12 + 0xb8] 	      1631	syntax.c	FUNCTION_20
0x400837d	    0x890500000000	            mov dword [0x04008383], eax 	      1631	syntax.c	FUNCTION_20
0x4008383	      0x498b442408	                mov rax, qword [r12 + 8]	      1632	syntax.c	FUNCTION_20
0x4008388	    0x488905000000	            mov qword [0x0400838f], rax 	      1632	syntax.c	FUNCTION_20
0x400838f	              0x5b	                                 pop rbx	      1633	syntax.c	FUNCTION_20
0x4008390	              0x5d	                                 pop rbp	      1633	syntax.c	FUNCTION_20
0x4008391	            0x415c	                                 pop r12	      1633	syntax.c	FUNCTION_20
0x4008393	            0x415d	                                 pop r13	      1633	syntax.c	FUNCTION_20
0x4008395	            0x415e	                                 pop r14	      1633	syntax.c	FUNCTION_20
0x4008397	              0xc3	                                     ret	      1633	syntax.c	FUNCTION_20
syn_cmd_cluster	IF,11:CALL,22:FOR,1:ELSE,4:SWITCH,0:WHILE,0:DO,0:functions,0	149
0x40067fe	            0x4157	                                push r15	      5649	syntax.c	FUNCTION_88
0x4006800	            0x4156	                                push r14	      5649	syntax.c	FUNCTION_88
0x4006802	            0x4155	                                push r13	      5649	syntax.c	FUNCTION_88
0x4006804	            0x4154	                                push r12	      5649	syntax.c	FUNCTION_88
0x4006806	              0x55	                                push rbp	      5649	syntax.c	FUNCTION_88
0x4006807	              0x53	                                push rbx	      5649	syntax.c	FUNCTION_88
0x4006808	        0x4883ec38	                           sub rsp, 0x38	      5649	syntax.c	FUNCTION_88
0x400680c	          0x4889fd	                            mov rbp, rdi	      5649	syntax.c	FUNCTION_88
0x400680f	    0x64488b042528	                mov rax, qword fs:[0x28]	      5649	syntax.c	FUNCTION_88
0x4006818	      0x4889442428	             mov qword [rsp + 0x28], rax	      5649	syntax.c	FUNCTION_88
0x400681d	            0x31c0	                            xor eax, eax	      5649	syntax.c	FUNCTION_88
0x400681f	          0x4c8b2f	                    mov r13, qword [rdi]	      5650	syntax.c	FUNCTION_88
0x4006822	          0x4c89ef	                            mov rdi, r13	      5659	syntax.c	FUNCTION_88	CALL_1
0x4006825	      0xe800000000	                          call 0x400682a	      5659	syntax.c	FUNCTION_88	CALL_1
0x400682a	        0x48894508	                mov qword [rbp + 8], rax	      5659	syntax.c	FUNCTION_88	CALL_1
0x400682e	        0x837d3000	               cmp dword [rbp + 0x30], 0	      5660	syntax.c	FUNCTION_88	IF_1
0x4006832	     0xf8500020000	                           jne 0x4006a38	      5660	syntax.c	FUNCTION_88	IF_1
0x4006838	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5663	syntax.c	FUNCTION_88	CALL_2
0x400683d	          0x4c89ef	                            mov rdi, r13	      5663	syntax.c	FUNCTION_88	CALL_2
0x4006840	      0xe8c3aeffff	                 call sym.get_group_name	      5663	syntax.c	FUNCTION_88	CALL_2
0x4006845	      0x4889442418	             mov qword [rsp + 0x18], rax	      5663	syntax.c	FUNCTION_88	CALL_2
0x400684a	          0x4885c0	                           test rax, rax	      5665	syntax.c	FUNCTION_88	IF_2
0x400684d	     0xf84c7010000	                            je 0x4006a1a	      5665	syntax.c	FUNCTION_88	IF_2
0x4006853	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x4006858	          0x4c29ee	                            sub rsi, r13	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400685b	          0x4c89ef	                            mov rdi, r13	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400685e	      0xe8beb6ffff	              call sym.syn_check_cluster	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x4006863	            0x85c0	                           test eax, eax	      5668	syntax.c	FUNCTION_88	IF_2	IF_3
0x4006865	     0xf84cd010000	                            je 0x4006a38	      5668	syntax.c	FUNCTION_88	IF_2	IF_3
0x400686b	    0x448db828a6ff	                lea r15d, [rax - 0x59d8]	      5670	syntax.c	FUNCTION_88	IF_2
0x4006872	          0x4963c7	                        movsxd rax, r15d	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x4006875	        0x488d0440	                  lea rax, [rax + rax*2]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x4006879	        0x48c1e003	                              shl rax, 3	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x400687d	      0x4889442408	                mov qword [rsp + 8], rax	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x4006882	    0xc74424040000	                  mov dword [rsp + 4], 0	      5655	syntax.c	FUNCTION_88
0x400688a	    0x49be00020000	         movabs r14, 0x2000000100000200 	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x4006894	            0xeb08	                           jmp 0x400689e	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x4006896	    0xc74424040100	                  mov dword [rsp + 4], 1	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400689e	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x40068a3	      0xba03000000	                              mov edx, 3	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x40068a8	      0xbe00000000	                              mov esi, 0	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x40068ad	          0x4889df	                            mov rdi, rbx	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x40068b0	      0xe800000000	                          call 0x40068b5	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x40068b5	            0x85c0	                           test eax, eax	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x40068b7	            0x7519	                           jne 0x40068d2	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x40068b9	         0xfb64303	               movzx eax, byte [rbx + 3]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x40068bd	            0x3c3d	                            cmp al, 0x3d	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x40068bf	            0x7711	                            ja 0x40068d2	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x40068c1	    0x41bc02000000	                             mov r12d, 2	      5678	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0x40068c7	      0xbe03000000	                              mov esi, 3	      5677	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0x40068cc	        0x490fa3c6	                             bt r14, rax	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x40068d0	            0x726a	                            jb 0x400693c	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x40068d2	      0xba06000000	                              mov edx, 6	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x40068d7	      0xbe00000000	                              mov esi, 0	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x40068dc	          0x4889df	                            mov rdi, rbx	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x40068df	      0xe800000000	                          call 0x40068e4	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x40068e4	            0x85c0	                           test eax, eax	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x40068e6	            0x7519	                           jne 0x4006901	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x40068e8	         0xfb64306	               movzx eax, byte [rbx + 6]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x40068ec	            0x3c3d	                            cmp al, 0x3d	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x40068ee	            0x7711	                            ja 0x4006901	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x40068f0	    0x41bc03000000	                             mov r12d, 3	      5684	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0x40068f6	      0xbe06000000	                              mov esi, 6	      5683	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0x40068fb	        0x490fa3c6	                             bt r14, rax	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x40068ff	            0x723b	                            jb 0x400693c	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x4006901	      0xba08000000	                              mov edx, 8	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x4006906	      0xbe00000000	                              mov esi, 0	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400690b	          0x4889df	                            mov rdi, rbx	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400690e	      0xe800000000	                          call 0x4006913	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x4006913	            0x85c0	                           test eax, eax	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x4006915	     0xf85a7000000	                           jne 0x40069c2	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400691b	         0xfb64308	               movzx eax, byte [rbx + 8]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400691f	            0x3c3d	                            cmp al, 0x3d	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x4006921	     0xf879b000000	                            ja 0x40069c2	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x4006927	        0x490fa3c6	                             bt r14, rax	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400692b	     0xf8391000000	                           jae 0x40069c2	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x4006931	    0x41bc01000000	                             mov r12d, 1	      5690	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x4006937	      0xbe08000000	                              mov esi, 8	      5689	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x400693c	    0x48c744242000	               mov qword [rsp + 0x20], 0	      5695	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3
0x4006945	          0x8b4d30	            mov ecx, dword [rbp + 0x30] 	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x4006948	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400694d	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x4006952	      0xe8f2f4ffff	                    call sym.get_id_list	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x4006957	            0x85c0	                           test eax, eax	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x4006959	            0x7526	                           jne 0x4006981	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400695b	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x4006960	      0xba05000000	                              mov edx, 5	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x4006965	      0xbe00000000	                              mov esi, 0	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400696a	      0xbf00000000	                              mov edi, 0	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400696f	      0xe800000000	                          call 0x4006974	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x4006974	          0x4889de	                            mov rsi, rbx	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x4006977	          0x4889c7	                            mov rdi, rax	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400697a	      0xe800000000	                          call 0x400697f	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400697f	            0xeb41	                           jmp 0x40069c2	      5699	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7
0x4006981	          0x4585ff	                         test r15d, r15d	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0x4006984	            0x782d	                            js 0x40069b3	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0x4006986	    0x488b05000000	            mov rax, qword [0x0400698d] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x400698d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x4006991	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x4006996	    0x4803b8880200	            add rdi, qword [rax + 0x288]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x400699d	        0x4883c710	                           add rdi, 0x10	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x40069a1	          0x4489e2	                           mov edx, r12d	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x40069a4	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x40069a9	      0xe831b7ffff	               call sym.syn_combine_list	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x40069ae	      0xe9e3feffff	                           jmp 0x4006896	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0x40069b3	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_15
0x40069b8	      0xe800000000	                          call 0x40069bd	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_15
0x40069bd	      0xe9d4feffff	                           jmp 0x4006896	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_15
0x40069c2	      0x837c240400	                  cmp dword [rsp + 4], 0	      5709	syntax.c	FUNCTION_88	IF_2	IF_9
0x40069c7	            0x7451	                            je 0x4006a1a	      5709	syntax.c	FUNCTION_88	IF_2	IF_9
0x40069c9	      0xbf23000000	                           mov edi, 0x23	      5711	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x40069ce	      0xe800000000	                          call 0x40069d3	      5711	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x40069d3	    0x488b05000000	            mov rax, qword [0x040069da] 	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_17
0x40069da	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_17
0x40069de	      0xe800000000	                          call 0x40069e3	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_17
0x40069e3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0x40069e8	          0x4885c0	                           test rax, rax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0x40069eb	            0x740c	                            je 0x40069f9	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0x40069ed	           0xfb638	                   movzx edi, byte [rax]	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0x40069f0	      0xe800000000	                          call 0x40069f5	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0x40069f5	            0x85c0	                           test eax, eax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0x40069f7	            0x753f	                           jne 0x4006a38	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0x40069f9	      0xba05000000	                              mov edx, 5	      5719	syntax.c	FUNCTION_88	CALL_22
0x40069fe	      0xbe00000000	                              mov esi, 0	      5719	syntax.c	FUNCTION_88	CALL_22
0x4006a03	      0xbf00000000	                              mov edi, 0	      5719	syntax.c	FUNCTION_88	CALL_22
0x4006a08	      0xe800000000	                          call 0x4006a0d	      5719	syntax.c	FUNCTION_88	CALL_22
0x4006a0d	          0x4c89ee	                            mov rsi, r13	      5719	syntax.c	FUNCTION_88	CALL_22
0x4006a10	          0x4889c7	                            mov rdi, rax	      5719	syntax.c	FUNCTION_88	CALL_22
0x4006a13	      0xe800000000	                          call 0x4006a18	      5719	syntax.c	FUNCTION_88	CALL_22
0x4006a18	            0xeb1e	                           jmp 0x4006a38	      5719	syntax.c	FUNCTION_88	CALL_22
0x4006a1a	      0xba05000000	                              mov edx, 5	      5717	syntax.c	FUNCTION_88	CALL_19
0x4006a1f	      0xbe00000000	                              mov esi, 0	      5717	syntax.c	FUNCTION_88	CALL_19
0x4006a24	      0xbf00000000	                              mov edi, 0	      5717	syntax.c	FUNCTION_88	CALL_19
0x4006a29	      0xe800000000	                          call 0x4006a2e	      5717	syntax.c	FUNCTION_88	CALL_19
0x4006a2e	          0x4889c7	                            mov rdi, rax	      5717	syntax.c	FUNCTION_88	CALL_19
0x4006a31	      0xe800000000	                          call 0x4006a36	      5717	syntax.c	FUNCTION_88	CALL_19
0x4006a36	            0xebab	                           jmp 0x40069e3	      5717	syntax.c	FUNCTION_88	CALL_19
0x4006a38	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5720	syntax.c	FUNCTION_88
0x4006a3d	    0x644833042528	                xor rax, qword fs:[0x28]	      5720	syntax.c	FUNCTION_88
0x4006a46	            0x7405	                            je 0x4006a4d	      5720	syntax.c	FUNCTION_88
0x4006a48	      0xe800000000	                          call 0x4006a4d	      5720	syntax.c	FUNCTION_88
0x4006a4d	        0x4883c438	                           add rsp, 0x38	      5720	syntax.c	FUNCTION_88
0x4006a51	              0x5b	                                 pop rbx	      5720	syntax.c	FUNCTION_88
0x4006a52	              0x5d	                                 pop rbp	      5720	syntax.c	FUNCTION_88
0x4006a53	            0x415c	                                 pop r12	      5720	syntax.c	FUNCTION_88
0x4006a55	            0x415d	                                 pop r13	      5720	syntax.c	FUNCTION_88
0x4006a57	            0x415e	                                 pop r14	      5720	syntax.c	FUNCTION_88
0x4006a59	            0x415f	                                 pop r15	      5720	syntax.c	FUNCTION_88
0x4006a5b	              0xc3	                                     ret	      5720	syntax.c	FUNCTION_88
syn_list_keywords	IF,10:CALL,17:FOR,2:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	168
0x400a139	            0x4157	                                push r15	      4343	syntax.c	FUNCTION_71
0x400a13b	            0x4156	                                push r14	      4343	syntax.c	FUNCTION_71
0x400a13d	            0x4155	                                push r13	      4343	syntax.c	FUNCTION_71
0x400a13f	            0x4154	                                push r12	      4343	syntax.c	FUNCTION_71
0x400a141	              0x55	                                push rbp	      4343	syntax.c	FUNCTION_71
0x400a142	              0x53	                                push rbx	      4343	syntax.c	FUNCTION_71
0x400a143	        0x4883ec28	                           sub rsp, 0x28	      4343	syntax.c	FUNCTION_71
0x400a147	          0x4189d0	                            mov r8d, edx	      4343	syntax.c	FUNCTION_71
0x400a14a	          0x4189cd	                           mov r13d, ecx	      4343	syntax.c	FUNCTION_71
0x400a14d	        0x488b4608	                mov rax, qword [rsi + 8]	      4359	syntax.c	FUNCTION_71
0x400a151	        0x89442414	             mov dword [rsp + 0x14], eax	      4359	syntax.c	FUNCTION_71
0x400a155	        0x488b4e20	            mov rcx, qword [rsi + 0x20] 	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a159	      0x48894c2408	                mov qword [rsp + 8], rcx	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a15e	            0x85c0	                           test eax, eax	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a160	     0xf8e5a020000	                           jle 0x400a3c0	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a166	            0x89fd	                            mov ebp, edi	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a168	    0x8b0500000000	            mov eax, dword [0x0400a16e] 	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a16e	            0x85c0	                           test eax, eax	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a170	     0xf854a020000	                           jne 0x400a3c0	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a176	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a17e	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a186	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a18e	    0x41bf00000000	                             mov r15d, 0	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a194	    0x41be00000000	                             mov r14d, 0	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a19a	    0x41bc00000000	                             mov r12d, 0	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a1a0	      0x488b442408	                mov rax, qword [rsp + 8]	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x400a1a5	        0x488b5808	                mov rbx, qword [rax + 8]	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x400a1a9	    0x4881fb000000	                              cmp rbx, 0	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x400a1b0	     0xf84ef010000	                            je 0x400a3a5	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x400a1b6	          0x4885db	                           test rbx, rbx	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x400a1b9	     0xf84e6010000	                            je 0x400a3a5	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x400a1bf	      0x836c241401	               sub dword [rsp + 0x14], 1	      4364	syntax.c	FUNCTION_71	FOR_1	IF_1
0x400a1c4	        0x4883eb28	                           sub rbx, 0x28	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x400a1c8	     0xf84d7010000	                            je 0x400a3a5	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x400a1ce	    0x8b0500000000	            mov eax, dword [0x0400a1d4] 	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x400a1d4	            0x85c0	                           test eax, eax	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x400a1d6	     0xf85c9010000	                           jne 0x400a3a5	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x400a1dc	         0xfbf430c	            movsx eax, word [rbx + 0xc] 	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x400a1e0	            0x39e8	                            cmp eax, ebp	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x400a1e2	     0xf85a7010000	                           jne 0x400a38f	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x400a1e8	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a1eb	            0x89c2	                            mov edx, eax	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a1ed	          0x83e201	                              and edx, 1	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a1f0	      0xbe0f270000	                         mov esi, 0x270f	      4375	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a1f5	          0x4439e2	                           cmp edx, r12d	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a1f8	            0x754e	                           jne 0x400a248	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a1fa	            0x89c2	                            mov edx, eax	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a1fc	    0x81e280000000	                           and edx, 0x80	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a202	        0x3b542410	            cmp edx, dword [rsp + 0x10] 	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a206	            0x7540	                           jne 0x400a248	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a208	            0x89c2	                            mov edx, eax	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a20a	    0x81e200010000	                          and edx, 0x100	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a210	        0x3b542418	            cmp edx, dword [rsp + 0x18] 	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a214	            0x7532	                           jne 0x400a248	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a216	      0x2500020000	                          and eax, 0x200	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a21b	        0x3b44241c	            cmp eax, dword [rsp + 0x1c] 	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a21f	            0x7527	                           jne 0x400a248	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a221	        0x4c397b10	            cmp qword [rbx + 0x10], r15 	      4373	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a225	            0x7521	                           jne 0x400a248	      4373	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a227	        0x4c397318	            cmp qword [rbx + 0x18], r14 	      4374	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a22b	            0x751b	                           jne 0x400a248	      4374	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400a22d	        0x488d7b28	                   lea rdi, [rbx + 0x28]	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x400a231	      0xb800000000	                              mov eax, 0	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x400a236	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x400a23d	            0xf2ae	              repne scasb al, byte [rdi]	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x400a23f	          0x4889c8	                            mov rax, rcx	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x400a242	          0x48f7d0	                                 not rax	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x400a245	          0x8d70ff	                      lea esi, [rax - 1]	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x400a248	            0x89ea	                            mov edx, ebp	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x400a24a	          0x4489c7	                            mov edi, r8d	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x400a24d	      0xe8f2fdffff	                call sym.syn_list_header	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x400a252	            0x85c0	                           test eax, eax	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x400a254	            0x742a	                            je 0x400a280	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x400a256	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4386	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x400a25e	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4385	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x400a266	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4384	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x400a26e	    0x41bf00000000	                             mov r15d, 0	      4383	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x400a274	    0x41be00000000	                             mov r14d, 0	      4382	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x400a27a	    0x41bc00000000	                             mov r12d, 0	      4381	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x400a280	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x400a283	          0x83e001	                              and eax, 1	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x400a286	          0x4139c4	                           cmp r12d, eax	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x400a289	            0x7421	                            je 0x400a2ac	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x400a28b	          0x4489ee	                           mov esi, r13d	      4391	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_5
0x400a28e	      0xbf00000000	                              mov edi, 0	      4391	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_5
0x400a293	      0xe800000000	                          call 0x400a298	      4391	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_5
0x400a298	      0xbf20000000	                           mov edi, 0x20	      4392	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_6
0x400a29d	      0xe800000000	                          call 0x400a2a2	      4392	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_6
0x400a2a2	        0x448b6320	           mov r12d, dword [rbx + 0x20] 	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x400a2a6	        0x4183e401	                             and r12d, 1	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x400a2aa	            0xeb03	                           jmp 0x400a2af	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x400a2ac	          0x4189c4	                           mov r12d, eax	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x400a2af	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      4395	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x400a2b3	          0x4939f7	                            cmp r15, rsi	      4395	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x400a2b6	            0x741d	                            je 0x400a2d5	      4395	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x400a2b8	          0x4489ea	                           mov edx, r13d	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_7
0x400a2bb	      0xbf00000000	                              mov edi, 0	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_7
0x400a2c0	      0xe85582ffff	                    call sym.put_id_list	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_7
0x400a2c5	      0xbf20000000	                           mov edi, 0x20	      4399	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_8
0x400a2ca	      0xe800000000	                          call 0x400a2cf	      4399	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_8
0x400a2cf	        0x4c8b7b10	            mov r15, qword [rbx + 0x10] 	      4400	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x400a2d3	            0xeb03	                           jmp 0x400a2d8	      4400	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x400a2d5	          0x4989f7	                            mov r15, rsi	      4400	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x400a2d8	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      4402	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x400a2dc	          0x4939f6	                            cmp r14, rsi	      4402	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x400a2df	     0xf8498000000	                            je 0x400a37d	      4402	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x400a2e5	          0x4489ea	                           mov edx, r13d	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_9
0x400a2e8	      0xbf00000000	                              mov edi, 0	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_9
0x400a2ed	      0xe82882ffff	                    call sym.put_id_list	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_9
0x400a2f2	      0xbf20000000	                           mov edi, 0x20	      4405	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_10
0x400a2f7	      0xe800000000	                          call 0x400a2fc	      4405	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_10
0x400a2fc	        0x4c8b7318	            mov r14, qword [rbx + 0x18] 	      4406	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x400a300	        0xf6432080	           test byte [rbx + 0x20], 0x80 	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x400a304	            0x7423	                            je 0x400a329	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x400a306	          0x4489ee	                           mov esi, r13d	      4409	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_11
0x400a309	      0xbf00000000	                              mov edi, 0	      4409	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_11
0x400a30e	      0xe800000000	                          call 0x400a313	      4409	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_11
0x400a313	      0xbf20000000	                           mov edi, 0x20	      4410	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_12
0x400a318	      0xe800000000	                          call 0x400a31d	      4410	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_12
0x400a31d	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4411	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x400a320	      0x2580000000	                           and eax, 0x80	      4411	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x400a325	        0x89442410	             mov dword [rsp + 0x10], eax	      4411	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x400a329	        0xf6432101	               test byte [rbx + 0x21], 1	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x400a32d	            0x7423	                            je 0x400a352	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x400a32f	          0x4489ee	                           mov esi, r13d	      4415	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_13
0x400a332	      0xbf00000000	                              mov edi, 0	      4415	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_13
0x400a337	      0xe800000000	                          call 0x400a33c	      4415	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_13
0x400a33c	      0xbf20000000	                           mov edi, 0x20	      4416	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_14
0x400a341	      0xe800000000	                          call 0x400a346	      4416	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_14
0x400a346	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4417	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x400a349	      0x2500010000	                          and eax, 0x100	      4417	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x400a34e	        0x89442418	             mov dword [rsp + 0x18], eax	      4417	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x400a352	        0xf6432102	               test byte [rbx + 0x21], 2	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x400a356	            0x7428	                            je 0x400a380	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x400a358	          0x4489ee	                           mov esi, r13d	      4421	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_15
0x400a35b	      0xbf00000000	                              mov edi, 0	      4421	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_15
0x400a360	      0xe800000000	                          call 0x400a365	      4421	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_15
0x400a365	      0xbf20000000	                           mov edi, 0x20	      4422	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_16
0x400a36a	      0xe800000000	                          call 0x400a36f	      4422	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_16
0x400a36f	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x400a372	      0x2500020000	                          and eax, 0x200	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x400a377	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x400a37b	            0xeb03	                           jmp 0x400a380	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x400a37d	          0x4989f6	                            mov r14, rsi	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x400a380	        0x488d7b28	                   lea rdi, [rbx + 0x28]	      4426	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_17
0x400a384	      0xe800000000	                          call 0x400a389	      4426	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_17
0x400a389	    0x41b801000000	                              mov r8d, 1	      4388	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x400a38f	          0x488b1b	                    mov rbx, qword [rbx]	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x400a392	          0x4885db	                           test rbx, rbx	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x400a395	            0x740e	                            je 0x400a3a5	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x400a397	    0x8b0500000000	            mov eax, dword [0x0400a39d] 	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x400a39d	            0x85c0	                           test eax, eax	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x400a39f	     0xf8437feffff	                            je 0x400a1dc	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x400a3a5	    0x488344240810	               add qword [rsp + 8], 0x10	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a3ab	      0x837c241400	               cmp dword [rsp + 0x14], 0	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a3b0	            0x7e0e	                           jle 0x400a3c0	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a3b2	    0x8b0500000000	            mov eax, dword [0x0400a3b8] 	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a3b8	            0x85c0	                           test eax, eax	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a3ba	     0xf84e0fdffff	                            je 0x400a1a0	      4360	syntax.c	FUNCTION_71	FOR_1
0x400a3c0	          0x4489c0	                            mov eax, r8d	      4433	syntax.c	FUNCTION_71
0x400a3c3	        0x4883c428	                           add rsp, 0x28	      4433	syntax.c	FUNCTION_71
0x400a3c7	              0x5b	                                 pop rbx	      4433	syntax.c	FUNCTION_71
0x400a3c8	              0x5d	                                 pop rbp	      4433	syntax.c	FUNCTION_71
0x400a3c9	            0x415c	                                 pop r12	      4433	syntax.c	FUNCTION_71
0x400a3cb	            0x415d	                                 pop r13	      4433	syntax.c	FUNCTION_71
0x400a3cd	            0x415e	                                 pop r14	      4433	syntax.c	FUNCTION_71
0x400a3cf	            0x415f	                                 pop r15	      4433	syntax.c	FUNCTION_71
0x400a3d1	              0xc3	                                     ret	      4433	syntax.c	FUNCTION_71
update_si_end	IF,4:CALL,4:FOR,0:ELSE,2:SWITCH,0:WHILE,0:DO,0:functions,0	79
0x4001174	              0x53	                                push rbx	      2834	syntax.c	FUNCTION_34
0x4001175	        0x4883ec60	                           sub rsp, 0x60	      2834	syntax.c	FUNCTION_34
0x4001179	          0x4889fb	                            mov rbx, rdi	      2834	syntax.c	FUNCTION_34
0x400117c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2834	syntax.c	FUNCTION_34
0x4001185	      0x4889442458	             mov qword [rsp + 0x58], rax	      2834	syntax.c	FUNCTION_34
0x400118a	            0x31c0	                            xor eax, eax	      2834	syntax.c	FUNCTION_34
0x400118c	            0x8b3f	                    mov edi, dword [rdi]	      2842	syntax.c	FUNCTION_34	IF_1
0x400118e	            0x85ff	                           test edi, edi	      2842	syntax.c	FUNCTION_34	IF_1
0x4001190	     0xf881d010000	                            js 0x40012b3	      2842	syntax.c	FUNCTION_34	IF_1
0x4001196	            0x85d2	                           test edx, edx	      2848	syntax.c	FUNCTION_34	IF_2
0x4001198	            0x7511	                           jne 0x40011ab	      2848	syntax.c	FUNCTION_34	IF_2
0x400119a	    0x488b05000000	            mov rax, qword [0x040011a1] 	      2848	syntax.c	FUNCTION_34	IF_2
0x40011a1	        0x48394318	            cmp qword [rbx + 0x18], rax 	      2848	syntax.c	FUNCTION_34	IF_2
0x40011a5	     0xf8d08010000	                           jge 0x40012b3	      2848	syntax.c	FUNCTION_34	IF_2
0x40011ab	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2855	syntax.c	FUNCTION_34
0x40011b3	    0x488b05000000	            mov rax, qword [0x040011ba] 	      2856	syntax.c	FUNCTION_34
0x40011ba	      0x4889442410	             mov qword [rsp + 0x10], rax	      2856	syntax.c	FUNCTION_34
0x40011bf	        0x89742418	             mov dword [rsp + 0x18], esi	      2857	syntax.c	FUNCTION_34
0x40011c3	    0xffb388000000	                 push qword [rbx + 0x88]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40011c9	      0x488d442414	                   lea rax, [rsp + 0x14]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40011ce	              0x50	                                push rax	      2858	syntax.c	FUNCTION_34	CALL_1
0x40011cf	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40011d4	        0x4c8d4368	                    lea r8, [rbx + 0x68]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40011d8	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40011dd	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40011e2	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40011e7	      0xe8acfaffff	                    call sym.find_endpos	      2858	syntax.c	FUNCTION_34	CALL_1
0x40011ec	        0x4883c410	                           add rsp, 0x10	      2861	syntax.c	FUNCTION_34	IF_3
0x40011f0	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      2861	syntax.c	FUNCTION_34	IF_3
0x40011f6	            0x7577	                           jne 0x400126f	      2861	syntax.c	FUNCTION_34	IF_3
0x40011f8	          0x486303	                 movsxd rax, dword [rbx]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x40011fb	        0x488d0480	                  lea rax, [rax + rax*4]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x40011ff	        0x48c1e005	                              shl rax, 5	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4001203	    0x488b15000000	            mov rdx, qword [0x0400120a] 	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x400120a	    0x480382700200	            add rax, qword [rdx + 0x270]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4001211	        0xf6402404	               test byte [rax + 0x24], 4	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4001215	            0x7437	                            je 0x400124e	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4001217	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2867	syntax.c	FUNCTION_34	IF_3	IF_4
0x400121e	    0x488b05000000	            mov rax, qword [0x04001225] 	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x4001225	        0x48894318	             mov qword [rbx + 0x18], rax	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x4001229	      0xe893f7ffff	                 call sym.syn_getcurline	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x400122e	          0x4889c7	                            mov rdi, rax	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4001231	      0xb800000000	                              mov eax, 0	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4001236	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x400123d	            0xf2ae	              repne scasb al, byte [rdi]	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x400123f	          0x4889c8	                            mov rax, rcx	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4001242	          0x48f7d0	                                 not rax	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4001245	        0x4883e801	                              sub rax, 1	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4001249	          0x894320	             mov dword [rbx + 0x20], eax	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x400124c	            0xeb0f	                           jmp 0x400125d	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x400124e	    0xc7435c000000	               mov dword [rbx + 0x5c], 0	      2874	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x4001255	    0x48c743180000	               mov qword [rbx + 0x18], 0	      2875	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x400125d	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2877	syntax.c	FUNCTION_34	IF_3
0x4001261	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2877	syntax.c	FUNCTION_34	IF_3
0x4001265	        0x48894338	             mov qword [rbx + 0x38], rax	      2877	syntax.c	FUNCTION_34	IF_3
0x4001269	        0x48895340	             mov qword [rbx + 0x40], rdx	      2877	syntax.c	FUNCTION_34	IF_3
0x400126d	            0xeb44	                           jmp 0x40012b3	      2877	syntax.c	FUNCTION_34	IF_3
0x400126f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4001274	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4001279	        0x48894318	             mov qword [rbx + 0x18], rax	      2882	syntax.c	FUNCTION_34	ELSE_2
0x400127d	        0x48895320	             mov qword [rbx + 0x20], rdx	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4001281	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4001286	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      2883	syntax.c	FUNCTION_34	ELSE_2
0x400128b	        0x48894338	             mov qword [rbx + 0x38], rax	      2883	syntax.c	FUNCTION_34	ELSE_2
0x400128f	        0x48895340	             mov qword [rbx + 0x40], rdx	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4001293	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4001298	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      2884	syntax.c	FUNCTION_34	ELSE_2
0x400129d	        0x48894348	             mov qword [rbx + 0x48], rax	      2884	syntax.c	FUNCTION_34	ELSE_2
0x40012a1	        0x48895350	             mov qword [rbx + 0x50], rdx	      2884	syntax.c	FUNCTION_34	ELSE_2
0x40012a5	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2885	syntax.c	FUNCTION_34	ELSE_2
0x40012ac	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2886	syntax.c	FUNCTION_34	ELSE_2
0x40012b0	          0x894358	             mov dword [rbx + 0x58], eax	      2886	syntax.c	FUNCTION_34	ELSE_2
0x40012b3	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      2888	syntax.c	FUNCTION_34
0x40012b8	    0x644833042528	                xor rax, qword fs:[0x28]	      2888	syntax.c	FUNCTION_34
0x40012c1	            0x7405	                            je 0x40012c8	      2888	syntax.c	FUNCTION_34
0x40012c3	      0xe800000000	                          call 0x40012c8	      2888	syntax.c	FUNCTION_34
0x40012c8	        0x4883c460	                           add rsp, 0x60	      2888	syntax.c	FUNCTION_34
0x40012cc	              0x5b	                                 pop rbx	      2888	syntax.c	FUNCTION_34
0x40012cd	              0xc3	                                     ret	      2888	syntax.c	FUNCTION_34
syn_add_end_off	IF,5:CALL,3:FOR,0:ELSE,3:SWITCH,0:WHILE,2:DO,0:functions,0	81
0x40009e2	            0x4155	                                push r13	      3204	syntax.c	FUNCTION_40
0x40009e4	            0x4154	                                push r12	      3204	syntax.c	FUNCTION_40
0x40009e6	              0x55	                                push rbp	      3204	syntax.c	FUNCTION_40
0x40009e7	              0x53	                                push rbx	      3204	syntax.c	FUNCTION_40
0x40009e8	        0x4883ec08	                              sub rsp, 8	      3204	syntax.c	FUNCTION_40
0x40009ec	          0x4989fc	                            mov r12, rdi	      3204	syntax.c	FUNCTION_40
0x40009ef	         0xfbf4204	               movsx eax, word [rdx + 4]	      3210	syntax.c	FUNCTION_40	IF_1
0x40009f3	           0xfa3c8	                             bt eax, ecx	      3210	syntax.c	FUNCTION_40	IF_1
0x40009f6	            0x7317	                           jae 0x4000a0f	      3210	syntax.c	FUNCTION_40	IF_1
0x40009f8	        0x488b4608	                mov rax, qword [rsi + 8]	      3212	syntax.c	FUNCTION_40	IF_1
0x40009fc	          0x488907	                    mov qword [rdi], rax	      3212	syntax.c	FUNCTION_40	IF_1
0x40009ff	          0x8b5e10	            mov ebx, dword [rsi + 0x10] 	      3213	syntax.c	FUNCTION_40	IF_1
0x4000a02	          0x4863c9	                         movsxd rcx, ecx	      3214	syntax.c	FUNCTION_40	IF_1
0x4000a05	      0x4403448a08	        add r8d, dword [rdx + rcx*4 + 8]	      3214	syntax.c	FUNCTION_40	IF_1
0x4000a0a	          0x4489c5	                            mov ebp, r8d	      3214	syntax.c	FUNCTION_40	IF_1
0x4000a0d	            0xeb17	                           jmp 0x4000a26	      3214	syntax.c	FUNCTION_40	IF_1
0x4000a0f	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      3218	syntax.c	FUNCTION_40	ELSE_1
0x4000a16	          0x488907	                    mov qword [rdi], rax	      3218	syntax.c	FUNCTION_40	ELSE_1
0x4000a19	    0x8b9eb0000000	            mov ebx, dword [rsi + 0xb0] 	      3219	syntax.c	FUNCTION_40	ELSE_1
0x4000a1f	          0x4863c9	                         movsxd rcx, ecx	      3220	syntax.c	FUNCTION_40	ELSE_1
0x4000a22	        0x8b6c8a08	       mov ebp, dword [rdx + rcx*4 + 8] 	      3220	syntax.c	FUNCTION_40	ELSE_1
0x4000a26	        0x498b3424	                    mov rsi, qword [r12]	      3224	syntax.c	FUNCTION_40	IF_2
0x4000a2a	    0x488b3d000000	            mov rdi, qword [0x04000a31] 	      3224	syntax.c	FUNCTION_40	IF_2
0x4000a31	          0x483b37	                    cmp rsi, qword [rdi]	      3224	syntax.c	FUNCTION_40	IF_2
0x4000a34	     0xf8f98000000	                            jg 0x4000ad2	      3224	syntax.c	FUNCTION_40	IF_2
0x4000a3a	            0x85ed	                           test ebp, ebp	      3226	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4000a3c	     0xf8495000000	                            je 0x4000ad7	      3226	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4000a42	      0xba00000000	                              mov edx, 0	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x4000a47	      0xe800000000	                          call 0x4000a4c	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x4000a4c	          0x4989c5	                            mov r13, rax	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x4000a4f	          0x4863db	                         movsxd rbx, ebx	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4000a52	          0x4801c3	                            add rbx, rax	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4000a55	            0x85ed	                           test ebp, ebp	      3230	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x4000a57	            0x7e33	                           jle 0x4000a8c	      3230	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x4000a59	          0x83ed01	                              sub ebp, 1	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000a5c	          0x803b00	                       cmp byte [rbx], 0	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000a5f	            0x746c	                            je 0x4000acd	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000a61	      0xb801000000	                              mov eax, 1	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x4000a66	    0x833d00000000	               cmp dword [0x04000a6d], 0	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x4000a6d	            0x7409	                            je 0x4000a78	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x4000a6f	          0x4889df	                            mov rdi, rbx	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x4000a72	    0xff1500000000	                 call qword [0x04000a78]	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x4000a78	            0x4898	                                    cdqe	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x4000a7a	          0x4801c3	                            add rbx, rax	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x4000a7d	          0x83ed01	                              sub ebp, 1	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000a80	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000a83	            0x7448	                            je 0x4000acd	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000a85	          0x803b00	                       cmp byte [rbx], 0	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000a88	            0x75d7	                           jne 0x4000a61	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000a8a	            0xeb41	                           jmp 0x4000acd	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000a8c	            0x85ed	                           test ebp, ebp	      3235	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5
0x4000a8e	            0x793d	                           jns 0x4000acd	      3235	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5
0x4000a90	          0x83c501	                              add ebp, 1	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000a93	          0x4839d8	                            cmp rax, rbx	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000a96	            0x7335	                           jae 0x4000acd	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000a98	      0xb801000000	                              mov eax, 1	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000a9d	    0x833d00000000	               cmp dword [0x04000aa4], 0	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000aa4	            0x7410	                            je 0x4000ab6	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000aa6	        0x488d73ff	                      lea rsi, [rbx - 1]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000aaa	          0x4c89ef	                            mov rdi, r13	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000aad	    0xff1500000000	                 call qword [0x04000ab3]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000ab3	          0x83c001	                              add eax, 1	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000ab6	            0x4898	                                    cdqe	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000ab8	          0x4829c3	                            sub rbx, rax	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000abb	          0x4939dd	                            cmp r13, rbx	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000abe	           0xf92c2	                                 setb dl	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000ac1	            0x89e8	                            mov eax, ebp	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000ac3	          0xc1e81f	                           shr eax, 0x1f	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000ac6	          0x83c501	                              add ebp, 1	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000ac9	            0x84c2	                             test dl, al	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000acb	            0x75cb	                           jne 0x4000a98	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000acd	          0x4429eb	                           sub ebx, r13d	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4000ad0	            0xeb05	                           jmp 0x4000ad7	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4000ad2	      0xbb00000000	                              mov ebx, 0	      3225	syntax.c	FUNCTION_40	IF_2
0x4000ad7	      0x41895c2408	                mov dword [r12 + 8], ebx	      3242	syntax.c	FUNCTION_40
0x4000adc	        0x4883c408	                              add rsp, 8	      3243	syntax.c	FUNCTION_40
0x4000ae0	              0x5b	                                 pop rbx	      3243	syntax.c	FUNCTION_40
0x4000ae1	              0x5d	                                 pop rbp	      3243	syntax.c	FUNCTION_40
0x4000ae2	            0x415c	                                 pop r12	      3243	syntax.c	FUNCTION_40
0x4000ae4	            0x415d	                                 pop r13	      3243	syntax.c	FUNCTION_40
0x4000ae6	              0xc3	                                     ret	      3243	syntax.c	FUNCTION_40
highlight_has_attr	IF,4:CALL,3:FOR,0:ELSE,2:SWITCH,0:WHILE,0:DO,0:functions,0	37
0x40050d6	            0x85ff	                           test edi, edi	      9334	syntax.c	FUNCTION_143	IF_1
0x40050d8	            0x7e75	                           jle 0x400514f	      9334	syntax.c	FUNCTION_143	IF_1
0x40050da	    0x3b3d00000000	            cmp edi, dword [0x040050e0] 	      9334	syntax.c	FUNCTION_143	IF_1
0x40050e0	            0x7f73	                            jg 0x4005155	      9334	syntax.c	FUNCTION_143	IF_1
0x40050e2	          0x83fa67	                           cmp edx, 0x67	      9338	syntax.c	FUNCTION_143	IF_2
0x40050e5	            0x751b	                           jne 0x4005102	      9338	syntax.c	FUNCTION_143	IF_2
0x40050e7	          0x4863ff	                         movsxd rdi, edi	      9339	syntax.c	FUNCTION_143	CALL_1
0x40050ea	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9339	syntax.c	FUNCTION_143	CALL_1
0x40050ee	        0x488d0447	                  lea rax, [rdi + rax*2]	      9339	syntax.c	FUNCTION_143	CALL_1
0x40050f2	        0x48c1e003	                              shl rax, 3	      9339	syntax.c	FUNCTION_143	CALL_1
0x40050f6	    0x480305000000	             add rax, qword [0x040050fd]	      9339	syntax.c	FUNCTION_143	CALL_1
0x40050fd	          0x8b40d4	             mov eax, dword [rax - 0x2c]	      9339	syntax.c	FUNCTION_143	CALL_1
0x4005100	            0xeb3c	                           jmp 0x400513e	      9339	syntax.c	FUNCTION_143	CALL_1
0x4005102	          0x83fa63	                           cmp edx, 0x63	      9342	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x4005105	            0x751b	                           jne 0x4005122	      9342	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x4005107	          0x4863ff	                         movsxd rdi, edi	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x400510a	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x400510e	        0x488d0447	                  lea rax, [rdi + rax*2]	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x4005112	        0x48c1e003	                              shl rax, 3	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x4005116	    0x480305000000	             add rax, qword [0x0400511d]	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x400511d	          0x8b4094	             mov eax, dword [rax - 0x6c]	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x4005120	            0xeb1c	                           jmp 0x400513e	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x4005122	          0x4863ff	                         movsxd rdi, edi	      9345	syntax.c	FUNCTION_143	CALL_3
0x4005125	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9345	syntax.c	FUNCTION_143	CALL_3
0x4005129	        0x488d0447	                  lea rax, [rdi + rax*2]	      9345	syntax.c	FUNCTION_143	CALL_3
0x400512d	        0x48c1e003	                              shl rax, 3	      9345	syntax.c	FUNCTION_143	CALL_3
0x4005131	    0x480305000000	             add rax, qword [0x04005138]	      9345	syntax.c	FUNCTION_143	CALL_3
0x4005138	    0x8b807cffffff	             mov eax, dword [rax - 0x84]	      9345	syntax.c	FUNCTION_143	CALL_3
0x400513e	            0x21c6	                            and esi, eax	      9347	syntax.c	FUNCTION_143	IF_4
0x4005140	      0xba00000000	                              mov edx, 0	      9349	syntax.c	FUNCTION_143
0x4005145	      0xb800000000	                              mov eax, 0	      9349	syntax.c	FUNCTION_143
0x400514a	        0x480f44c2	                          cmove rax, rdx	      9349	syntax.c	FUNCTION_143
0x400514e	              0xc3	                                     ret	      9349	syntax.c	FUNCTION_143
0x400514f	      0xb800000000	                              mov eax, 0	      9335	syntax.c	FUNCTION_143	IF_1
0x4005154	              0xc3	                                     ret	      9335	syntax.c	FUNCTION_143	IF_1
0x4005155	      0xb800000000	                              mov eax, 0	      9335	syntax.c	FUNCTION_143	IF_1
0x400515a	              0xc3	                                     ret	      9350	syntax.c	FUNCTION_143
syn_clear_keyword	IF,4:CALL,9:FOR,2:ELSE,3:SWITCH,0:WHILE,0:DO,0:functions,0	67
0x4002d1c	            0x4157	                                push r15	      4437	syntax.c	FUNCTION_72
0x4002d1e	            0x4156	                                push r14	      4437	syntax.c	FUNCTION_72
0x4002d20	            0x4155	                                push r13	      4437	syntax.c	FUNCTION_72
0x4002d22	            0x4154	                                push r12	      4437	syntax.c	FUNCTION_72
0x4002d24	              0x55	                                push rbp	      4437	syntax.c	FUNCTION_72
0x4002d25	              0x53	                                push rbx	      4437	syntax.c	FUNCTION_72
0x4002d26	        0x4883ec18	                           sub rsp, 0x18	      4437	syntax.c	FUNCTION_72
0x4002d2a	          0x4189fc	                           mov r12d, edi	      4437	syntax.c	FUNCTION_72
0x4002d2d	          0x4889f3	                            mov rbx, rsi	      4437	syntax.c	FUNCTION_72
0x4002d30	      0x4889742408	                mov qword [rsp + 8], rsi	      4437	syntax.c	FUNCTION_72
0x4002d35	          0x4889f7	                            mov rdi, rsi	      4444	syntax.c	FUNCTION_72	CALL_1
0x4002d38	      0xe800000000	                          call 0x4002d3d	      4444	syntax.c	FUNCTION_72	CALL_1
0x4002d3d	        0x488b4308	                mov rax, qword [rbx + 8]	      4445	syntax.c	FUNCTION_72
0x4002d41	          0x4189c7	                           mov r15d, eax	      4445	syntax.c	FUNCTION_72
0x4002d44	        0x4c8b7320	            mov r14, qword [rbx + 0x20] 	      4446	syntax.c	FUNCTION_72	FOR_1
0x4002d48	            0x85c0	                           test eax, eax	      4446	syntax.c	FUNCTION_72	FOR_1
0x4002d4a	     0xf8e8b000000	                           jle 0x4002ddb	      4446	syntax.c	FUNCTION_72	FOR_1
0x4002d50	        0x498b5e08	                mov rbx, qword [r14 + 8]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4002d54	    0x4881fb000000	                              cmp rbx, 0	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4002d5b	            0x7471	                            je 0x4002dce	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4002d5d	          0x4885db	                           test rbx, rbx	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4002d60	            0x746c	                            je 0x4002dce	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4002d62	        0x4183ef01	                             sub r15d, 1	      4450	syntax.c	FUNCTION_72	FOR_1	IF_1
0x4002d66	        0x4883eb28	                           sub rbx, 0x28	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x4002d6a	            0x7462	                            je 0x4002dce	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x4002d6c	      0xbd00000000	                              mov ebp, 0	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x4002d71	         0xfbf430c	            movsx eax, word [rbx + 0xc] 	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4002d75	          0x4439e0	                           cmp eax, r12d	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4002d78	            0x7549	                           jne 0x4002dc3	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4002d7a	          0x4c8b2b	                    mov r13, qword [rbx]	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4002d7d	          0x4885ed	                           test rbp, rbp	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4002d80	            0x751e	                           jne 0x4002da0	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4002d82	          0x4d85ed	                           test r13, r13	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x4002d85	            0x750f	                           jne 0x4002d96	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x4002d87	          0x4c89f6	                            mov rsi, r14	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_4
0x4002d8a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_4
0x4002d8f	      0xe800000000	                          call 0x4002d94	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_4
0x4002d94	            0xeb0e	                           jmp 0x4002da4	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_4
0x4002d96	        0x498d4528	                   lea rax, [r13 + 0x28]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_5
0x4002d9a	        0x49894608	                mov qword [r14 + 8], rax	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_5
0x4002d9e	            0xeb04	                           jmp 0x4002da4	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_5
0x4002da0	        0x4c896d00	                    mov qword [rbp], r13	      4465	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	ELSE_2
0x4002da4	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x4002da8	      0xe800000000	                          call 0x4002dad	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x4002dad	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_7
0x4002db1	      0xe800000000	                          call 0x4002db6	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_7
0x4002db6	          0x4889df	                            mov rdi, rbx	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_8
0x4002db9	      0xe800000000	                          call 0x4002dbe	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_8
0x4002dbe	          0x4c89eb	                            mov rbx, r13	      4469	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4002dc1	            0xeb06	                           jmp 0x4002dc9	      4469	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4002dc3	          0x4889dd	                            mov rbp, rbx	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x4002dc6	          0x488b1b	                    mov rbx, qword [rbx]	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x4002dc9	          0x4885db	                           test rbx, rbx	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x4002dcc	            0x75a3	                           jne 0x4002d71	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x4002dce	        0x4983c610	                           add r14, 0x10	      4446	syntax.c	FUNCTION_72	FOR_1
0x4002dd2	          0x4585ff	                         test r15d, r15d	      4446	syntax.c	FUNCTION_72	FOR_1
0x4002dd5	     0xf8f75ffffff	                            jg 0x4002d50	      4446	syntax.c	FUNCTION_72	FOR_1
0x4002ddb	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4479	syntax.c	FUNCTION_72	CALL_9
0x4002de0	      0xe800000000	                          call 0x4002de5	      4479	syntax.c	FUNCTION_72	CALL_9
0x4002de5	        0x4883c418	                           add rsp, 0x18	      4480	syntax.c	FUNCTION_72
0x4002de9	              0x5b	                                 pop rbx	      4480	syntax.c	FUNCTION_72
0x4002dea	              0x5d	                                 pop rbp	      4480	syntax.c	FUNCTION_72
0x4002deb	            0x415c	                                 pop r12	      4480	syntax.c	FUNCTION_72
0x4002ded	            0x415d	                                 pop r13	      4480	syntax.c	FUNCTION_72
0x4002def	            0x415e	                                 pop r14	      4480	syntax.c	FUNCTION_72
0x4002df1	            0x415f	                                 pop r15	      4480	syntax.c	FUNCTION_72
0x4002df3	              0xc3	                                     ret	      4480	syntax.c	FUNCTION_72
syntax_start	IF,21:CALL,21:FOR,1:ELSE,7:SWITCH,0:WHILE,3:DO,0:functions,0	615
0x40092ff	            0x4157	                                push r15	       515	syntax.c	FUNCTION_2
0x4009301	            0x4156	                                push r14	       515	syntax.c	FUNCTION_2
0x4009303	            0x4155	                                push r13	       515	syntax.c	FUNCTION_2
0x4009305	            0x4154	                                push r12	       515	syntax.c	FUNCTION_2
0x4009307	              0x55	                                push rbp	       515	syntax.c	FUNCTION_2
0x4009308	              0x53	                                push rbx	       515	syntax.c	FUNCTION_2
0x4009309	        0x4883ec48	                           sub rsp, 0x48	       515	syntax.c	FUNCTION_2
0x400930d	          0x4889fb	                            mov rbx, rdi	       515	syntax.c	FUNCTION_2
0x4009310	      0x4889742428	             mov qword [rsp + 0x28], rsi	       515	syntax.c	FUNCTION_2
0x4009315	    0xc70500000000	               mov dword [0x0400931f], 0	       526	syntax.c	FUNCTION_2
0x400931f	    0x488b05000000	            mov rax, qword [0x04009326] 	       534	syntax.c	FUNCTION_2	IF_1
0x4009326	        0x48394710	            cmp qword [rdi + 0x10], rax 	       534	syntax.c	FUNCTION_2	IF_1
0x400932a	            0x751d	                           jne 0x4009349	       534	syntax.c	FUNCTION_2	IF_1
0x400932c	        0x488b4708	                mov rax, qword [rdi + 8]	       535	syntax.c	FUNCTION_2	IF_1
0x4009330	    0x483b05000000	            cmp rax, qword [0x04009337] 	       535	syntax.c	FUNCTION_2	IF_1
0x4009337	            0x7510	                           jne 0x4009349	       535	syntax.c	FUNCTION_2	IF_1
0x4009339	    0x488b35000000	            mov rsi, qword [0x04009340] 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x4009340	    0x4839b0d80000	            cmp qword [rax + 0xd8], rsi 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x4009347	            0x741b	                            je 0x4009364	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x4009349	      0xe8ab73ffff	       call sym.invalidate_current_state	       538	syntax.c	FUNCTION_2	IF_1	CALL_2
0x400934e	        0x488b4308	                mov rax, qword [rbx + 8]	       539	syntax.c	FUNCTION_2	IF_1
0x4009352	    0x488905000000	            mov qword [0x04009359], rax 	       539	syntax.c	FUNCTION_2	IF_1
0x4009359	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       540	syntax.c	FUNCTION_2	IF_1
0x400935d	    0x488905000000	            mov qword [0x04009364], rax 	       540	syntax.c	FUNCTION_2	IF_1
0x4009364	    0x488b05000000	            mov rax, qword [0x0400936b] 	       542	syntax.c	FUNCTION_2	CALL_3
0x400936b	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	       542	syntax.c	FUNCTION_2	CALL_3
0x4009372	    0x488915000000	            mov qword [0x04009379], rdx 	       542	syntax.c	FUNCTION_2	CALL_3
0x4009379	    0x48891d000000	            mov qword [0x04009380], rbx 	       543	syntax.c	FUNCTION_2
0x4009380	          0x488b00	                    mov rax, qword [rax]	      1234	syntax.c	FUNCTION_13
0x4009383	    0x488b35000000	            mov rsi, qword [0x0400938a] 	      1234	syntax.c	FUNCTION_13
0x400938a	        0x488d0c36	                    lea rcx, [rsi + rsi]	      1234	syntax.c	FUNCTION_13
0x400938e	        0x488d500f	                    lea rdx, [rax + 0xf]	      1234	syntax.c	FUNCTION_13
0x4009392	          0x4885c0	                           test rax, rax	      1234	syntax.c	FUNCTION_13
0x4009395	        0x480f49d0	                         cmovns rdx, rax	      1234	syntax.c	FUNCTION_13
0x4009399	        0x48c1fa04	                              sar rdx, 4	      1234	syntax.c	FUNCTION_13
0x400939d	          0x4801ca	                            add rdx, rcx	      1234	syntax.c	FUNCTION_13
0x40093a0	      0xbe96000000	                           mov esi, 0x96	      1236	syntax.c	FUNCTION_13	IF_1
0x40093a5	    0x4881fa950000	                           cmp rdx, 0x95	      1235	syntax.c	FUNCTION_13	IF_1
0x40093ac	            0x7e10	                           jle 0x40093be	      1235	syntax.c	FUNCTION_13	IF_1
0x40093ae	    0x4881fae80300	                          cmp rdx, 0x3e8	      1235	syntax.c	FUNCTION_13	IF_1
0x40093b5	      0xbee8030000	                          mov esi, 0x3e8	      1235	syntax.c	FUNCTION_13	IF_1
0x40093ba	        0x480f4ef2	                         cmovle rsi, rdx	      1235	syntax.c	FUNCTION_13	IF_1
0x40093be	    0x488b3d000000	            mov rdi, qword [0x040093c5] 	      1239	syntax.c	FUNCTION_13	IF_3
0x40093c5	    0x486397180300	        movsxd rdx, dword [rdi + 0x318] 	      1239	syntax.c	FUNCTION_13	IF_3
0x40093cc	        0x4c8d0436	                     lea r8, [rsi + rsi]	      1239	syntax.c	FUNCTION_13	IF_3
0x40093d0	          0x4c39c2	                             cmp rdx, r8	      1239	syntax.c	FUNCTION_13	IF_3
0x40093d3	            0x7f09	                            jg 0x40093de	      1239	syntax.c	FUNCTION_13	IF_3
0x40093d5	          0x4839f2	                            cmp rdx, rsi	      1239	syntax.c	FUNCTION_13	IF_3
0x40093d8	     0xf8da9010000	                           jge 0x4009587	      1239	syntax.c	FUNCTION_13	IF_3
0x40093de	          0x4889c2	                            mov rdx, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x40093e1	        0x48c1ea3f	                           shr rdx, 0x3f	      1243	syntax.c	FUNCTION_13	IF_3
0x40093e5	          0x4801c2	                            add rdx, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x40093e8	          0x48d1fa	                              sar rdx, 1	      1243	syntax.c	FUNCTION_13	IF_3
0x40093eb	          0x4801d0	                            add rax, rdx	      1243	syntax.c	FUNCTION_13	IF_3
0x40093ee	        0x488d500f	                    lea rdx, [rax + 0xf]	      1243	syntax.c	FUNCTION_13	IF_3
0x40093f2	          0x4885c0	                           test rax, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x40093f5	        0x480f48c2	                          cmovs rax, rdx	      1243	syntax.c	FUNCTION_13	IF_3
0x40093f9	        0x48c1f804	                              sar rax, 4	      1243	syntax.c	FUNCTION_13	IF_3
0x40093fd	          0x4801c1	                            add rcx, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x4009400	      0xbd96000000	                           mov ebp, 0x96	      1245	syntax.c	FUNCTION_13	IF_3	IF_4
0x4009405	    0x4881f9950000	                           cmp rcx, 0x95	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x400940c	            0x7e10	                           jle 0x400941e	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x400940e	    0x4881f9e80300	                          cmp rcx, 0x3e8	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x4009415	      0xbde8030000	                          mov ebp, 0x3e8	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x400941a	        0x480f4ee9	                         cmovle rbp, rcx	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x400941e	    0x4883bf100300	              cmp qword [rdi + 0x310], 0	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x4009426	            0x7445	                            je 0x400946d	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x4009428	    0x488b15000000	            mov rdx, qword [0x0400942f] 	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400942f	    0x8b8218030000	           mov eax, dword [rdx + 0x318] 	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x4009435	    0x2b8230030000	            sub eax, dword [rdx + 0x330]	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400943b	          0x83c002	                              add eax, 2	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400943e	            0x4898	                                    cdqe	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x4009440	          0x4839e8	                            cmp rax, rbp	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x4009443	            0x7e09	                           jle 0x400944e	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x4009445	      0xe80271ffff	              call sym.syn_stack_cleanup	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x400944a	            0x85c0	                           test eax, eax	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x400944c	            0x75da	                           jne 0x4009428	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x400944e	    0x488b15000000	            mov rdx, qword [0x04009455] 	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x4009455	    0x8b8218030000	           mov eax, dword [rdx + 0x318] 	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x400945b	    0x2b8230030000	            sub eax, dword [rdx + 0x330]	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x4009461	          0x83c002	                              add eax, 2	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x4009464	            0x4898	                                    cdqe	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x4009466	          0x4839c5	                            cmp rbp, rax	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x4009469	        0x480f4ce8	                          cmovl rbp, rax	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x400946d	          0x4189ed	                           mov r13d, ebp	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x4009470	    0x69fdd8000000	                     imul edi, ebp, 0xd8	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x4009476	      0xe800000000	                          call 0x400947b	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x400947b	          0x4989c4	                            mov r12, rax	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x400947e	          0x4885c0	                           test rax, rax	      1261	syntax.c	FUNCTION_13	IF_3	IF_8
0x4009481	     0xf8400010000	                            je 0x4009587	      1261	syntax.c	FUNCTION_13	IF_3	IF_8
0x4009487	    0x4c8d8828ffff	                    lea r9, [rax - 0xd8]	      1264	syntax.c	FUNCTION_13	IF_3
0x400948e	    0x4c8b05000000	              mov r8, qword [0x04009495]	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x4009495	    0x4983b8100300	               cmp qword [r8 + 0x310], 0	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x400949d	            0x7469	                            je 0x4009508	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x400949f	    0x498b90200300	            mov rdx, qword [r8 + 0x320] 	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094a6	          0x4885d2	                           test rdx, rdx	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094a9	            0x745d	                            je 0x4009508	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094ab	          0x4c89c8	                             mov rax, r9	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094ae	    0x4805d8000000	                           add rax, 0xd8	      1271	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094b4	      0xb91b000000	                           mov ecx, 0x1b	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094b9	          0x4889c7	                            mov rdi, rax	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094bc	          0x4889d6	                            mov rsi, rdx	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094bf	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094c2	    0x488d88d80000	                   lea rcx, [rax + 0xd8]	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094c9	          0x488908	                    mov qword [rax], rcx	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094cc	          0x488b12	                    mov rdx, qword [rdx]	      1269	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094cf	          0x4885d2	                           test rdx, rdx	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094d2	            0x75da	                           jne 0x40094ae	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40094d4	          0x4939c1	                             cmp r9, rax	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x40094d7	            0x742c	                            je 0x4009505	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x40094d9	    0x48c700000000	                      mov qword [rax], 0	      1278	syntax.c	FUNCTION_13	IF_3	IF_10
0x40094e0	    0x4d89a0200300	             mov qword [r8 + 0x320], r12	      1279	syntax.c	FUNCTION_13	IF_3	IF_10
0x40094e7	          0x4889c2	                            mov rdx, rax	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40094ea	          0x4c29e2	                            sub rdx, r12	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40094ed	        0x48c1fa03	                              sar rdx, 3	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40094f1	    0x69d2ed25b497	               imul edx, edx, 0x97b425ed	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40094f7	      0x418d5415ff	                lea edx, [r13 + rdx - 1]	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40094fc	    0x418990300300	             mov dword [r8 + 0x330], edx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x4009503	            0xeb18	                           jmp 0x400951d	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x4009505	          0x4989c1	                             mov r9, rax	      1271	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4009508	    0x49c780200300	               mov qword [r8 + 0x320], 0	      1284	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x4009513	    0x4189a8300300	             mov dword [r8 + 0x330], ebp	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x400951a	          0x4c89c8	                             mov rax, r9	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x400951d	    0x488b35000000	            mov rsi, qword [0x04009524] 	      1289	syntax.c	FUNCTION_13	IF_3
0x4009524	    0x4805d8000000	                           add rax, 0xd8	      1289	syntax.c	FUNCTION_13	IF_3
0x400952a	    0x488986280300	            mov qword [rsi + 0x328], rax	      1289	syntax.c	FUNCTION_13	IF_3
0x4009531	      0x488d546d00	                  lea rdx, [rbp + rbp*2]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009536	        0x488d0cd2	                  lea rcx, [rdx + rdx*8]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400953a	        0x48c1e103	                              shl rcx, 3	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400953e	        0x498d140c	                    lea rdx, [r12 + rcx]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009542	          0x4839d0	                            cmp rax, rdx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009545	            0x7312	                           jae 0x4009559	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009547	    0x4805d8000000	                           add rax, 0xd8	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400954d	    0x48898028ffff	             mov qword [rax - 0xd8], rax	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009554	          0x4839d0	                            cmp rax, rdx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009557	            0x72ee	                            jb 0x4009547	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009559	    0x49c7840c28ff	         mov qword [r12 + rcx - 0xd8], 0	      1292	syntax.c	FUNCTION_13	IF_3
0x4009565	    0x488bbe100300	           mov rdi, qword [rsi + 0x310] 	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x400956c	      0xe800000000	                          call 0x4009571	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x4009571	    0x488b05000000	            mov rax, qword [0x04009578] 	      1295	syntax.c	FUNCTION_13	IF_3
0x4009578	    0x4c89a0100300	            mov qword [rax + 0x310], r12	      1295	syntax.c	FUNCTION_13	IF_3
0x400957f	    0x89a818030000	            mov dword [rax + 0x318], ebp	      1296	syntax.c	FUNCTION_13	IF_3
0x4009585	            0xeb15	                           jmp 0x400959c	      1296	syntax.c	FUNCTION_13	IF_3
0x4009587	    0x488b05000000	            mov rax, qword [0x0400958e] 	       549	syntax.c	FUNCTION_2	IF_2
0x400958e	    0x4883b8100300	              cmp qword [rax + 0x310], 0	       549	syntax.c	FUNCTION_2	IF_2
0x4009596	     0xf841d080000	                            je 0x4009db9	       549	syntax.c	FUNCTION_2	IF_2
0x400959c	     0xfb715000000	           movzx edx, word [0x040095a3] 	       551	syntax.c	FUNCTION_2
0x40095a3	    0x668990400300	              mov word [rax + 0x340], dx	       551	syntax.c	FUNCTION_2
0x40095aa	    0x833d00000000	               cmp dword [0x040095b1], 0	       556	syntax.c	FUNCTION_2	IF_3	CALL_5
0x40095b1	            0x744f	                            je 0x4009602	       556	syntax.c	FUNCTION_2	IF_3	CALL_5
0x40095b3	    0x488b05000000	            mov rax, qword [0x040095ba] 	       557	syntax.c	FUNCTION_2	IF_3
0x40095ba	      0x483b442428	            cmp rax, qword [rsp + 0x28] 	       557	syntax.c	FUNCTION_2	IF_3
0x40095bf	            0x7d41	                           jge 0x4009602	       557	syntax.c	FUNCTION_2	IF_3
0x40095c1	    0x488b15000000	            mov rdx, qword [0x040095c8] 	       558	syntax.c	FUNCTION_2	IF_3
0x40095c8	          0x483b02	                    cmp rax, qword [rdx]	       558	syntax.c	FUNCTION_2	IF_3
0x40095cb	            0x7d35	                           jge 0x4009602	       558	syntax.c	FUNCTION_2	IF_3
0x40095cd	      0xbf00000000	                              mov edi, 0	       560	syntax.c	FUNCTION_2	IF_3	CALL_6
0x40095d2	      0xe85efcffff	                call sym.syn_finish_line	       560	syntax.c	FUNCTION_2	IF_3	CALL_6
0x40095d7	    0x833d00000000	               cmp dword [0x040095de], 0	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x40095de	            0x750d	                           jne 0x40095ed	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x40095e0	    0x488305000000	               add qword [0x040095e8], 1	       563	syntax.c	FUNCTION_2	IF_3	IF_4
0x40095e8	      0xe8be9affff	            call sym.store_current_state	       564	syntax.c	FUNCTION_2	IF_3	IF_4	CALL_7
0x40095ed	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x40095f2	    0x483b05000000	            cmp rax, qword [0x040095f9] 	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x40095f9	            0x740c	                            je 0x4009607	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x40095fb	      0xe8f970ffff	       call sym.invalidate_current_state	       573	syntax.c	FUNCTION_2	IF_3	CALL_8
0x4009600	            0xeb05	                           jmp 0x4009607	       573	syntax.c	FUNCTION_2	IF_3	CALL_8
0x4009602	      0xe8f270ffff	       call sym.invalidate_current_state	       576	syntax.c	FUNCTION_2	CALL_9
0x4009607	    0x833d00000000	               cmp dword [0x0400960e], 0	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x400960e	     0xf85a5050000	                           jne 0x4009bb9	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x4009614	    0x488b0d000000	            mov rcx, qword [0x0400961b] 	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x400961b	    0x4883b9100300	              cmp qword [rcx + 0x310], 0	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x4009623	     0xf841f070000	                            je 0x4009d48	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x4009629	    0x488b81200300	           mov rax, qword [rcx + 0x320] 	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4009630	          0x4885c0	                           test rax, rax	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4009633	            0x746d	                            je 0x40096a2	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4009635	        0x488b5008	                mov rdx, qword [rax + 8]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009639	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400963e	          0x4839d6	                            cmp rsi, rdx	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009641	            0x7c66	                            jl 0x40096a9	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009643	      0xbf00000000	                              mov edi, 0	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009648	    0x48c744243000	               mov qword [rsp + 0x30], 0	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009651	            0xeb09	                           jmp 0x400965c	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009653	        0x488b5008	                mov rdx, qword [rax + 8]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009657	          0x4839d6	                            cmp rsi, rdx	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400965a	            0x7c2d	                            jl 0x4009689	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400965c	          0x4839d6	                            cmp rsi, rdx	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x400965f	            0x7c20	                            jl 0x4009681	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x4009661	    0x4883b8d00000	               cmp qword [rax + 0xd0], 0	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x4009669	            0x7516	                           jne 0x4009681	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x400966b	          0x4989f0	                             mov r8, rsi	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400966e	    0x4c2b81a80200	             sub r8, qword [rcx + 0x2a8]	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4009675	          0x4939d0	                             cmp r8, rdx	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4009678	        0x480f4ef8	                         cmovle rdi, rax	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400967c	      0x4889442430	             mov qword [rsp + 0x30], rax	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4009681	          0x488b00	                    mov rax, qword [rax]	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4009684	          0x4885c0	                           test rax, rax	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4009687	            0x75ca	                           jne 0x4009653	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4009689	          0x4885ff	                           test rdi, rdi	       596	syntax.c	FUNCTION_2	IF_6	IF_10
0x400968c	            0x7424	                            je 0x40096b2	       596	syntax.c	FUNCTION_2	IF_6	IF_10
0x400968e	      0xe87debffff	             call sym.load_current_state	       597	syntax.c	FUNCTION_2	IF_6	CALL_11
0x4009693	    0x833d00000000	               cmp dword [0x0400969a], 0	       604	syntax.c	FUNCTION_2	IF_11	CALL_12
0x400969a	     0xf8519050000	                           jne 0x4009bb9	       604	syntax.c	FUNCTION_2	IF_11	CALL_12
0x40096a0	            0xeb10	                           jmp 0x40096b2	       604	syntax.c	FUNCTION_2	IF_11	CALL_12
0x40096a2	      0x4889442430	             mov qword [rsp + 0x30], rax	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x40096a7	            0xeb09	                           jmp 0x40096b2	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x40096a9	    0x48c744243000	               mov qword [rsp + 0x30], 0	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x40096b2	      0xe84270ffff	       call sym.invalidate_current_state	       763	syntax.c	FUNCTION_5	CALL_1
0x40096b7	    0x488b15000000	            mov rdx, qword [0x040096be] 	       773	syntax.c	FUNCTION_5	IF_1
0x40096be	    0x488b8aa80200	           mov rcx, qword [rdx + 0x2a8] 	       773	syntax.c	FUNCTION_5	IF_1
0x40096c5	      0x48394c2428	            cmp qword [rsp + 0x28], rcx 	       773	syntax.c	FUNCTION_5	IF_1
0x40096ca	     0xf8cb7060000	                            jl 0x4009d87	       773	syntax.c	FUNCTION_5	IF_1
0x40096d0	      0xb801000000	                              mov eax, 1	       778	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x40096d5	        0x4883f901	                              cmp rcx, 1	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x40096d9	            0x741d	                            je 0x40096f8	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x40096db	        0x4883f909	                              cmp rcx, 9	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40096df	            0x7f06	                            jg 0x40096e7	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40096e1	        0x488d0409	                    lea rax, [rcx + rcx]	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40096e5	            0xeb11	                           jmp 0x40096f8	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40096e7	        0x488d0449	                  lea rax, [rcx + rcx*2]	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40096eb	          0x4889c1	                            mov rcx, rax	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40096ee	        0x48c1e93f	                           shr rcx, 0x3f	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40096f2	          0x4801c8	                            add rax, rcx	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40096f5	          0x48d1f8	                              sar rax, 1	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40096f8	    0x488b8ab00200	           mov rcx, qword [rdx + 0x2b0] 	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x40096ff	          0x4839c1	                            cmp rcx, rax	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4009702	            0x7d0e	                           jge 0x4009712	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4009704	          0x4885c9	                           test rcx, rcx	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4009707	        0x400f95c6	                               setne sil	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400970b	          0x4084f6	                           test sil, sil	       785	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400970e	        0x480f45c1	                         cmovne rax, rcx	       785	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4009712	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x4009717	          0x4839c6	                            cmp rsi, rax	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x400971a	     0xf8e67060000	                           jle 0x4009d87	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x4009720	          0x4829c6	                            sub rsi, rax	       789	syntax.c	FUNCTION_5	ELSE_1	ELSE_4
0x4009723	      0x4889742408	                mov qword [rsp + 8], rsi	       789	syntax.c	FUNCTION_5	ELSE_1	ELSE_4
0x4009728	    0x488935000000	            mov qword [0x0400972f], rsi 	       791	syntax.c	FUNCTION_5	ELSE_4
0x400972f	    0x8b829c020000	           mov eax, dword [rdx + 0x29c] 	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009735	            0xa801	                              test al, 1	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009737	     0xf843d010000	                            je 0x400987a	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400973d	    0x4c8b2d000000	            mov r13, qword [0x04009744] 	       800	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009744	    0x48891d000000	            mov qword [0x0400974b], rbx 	       801	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400974b	    0x4c8b35000000	            mov r14, qword [0x04009752] 	       802	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009752	    0x488b05000000	            mov rax, qword [0x04009759] 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009759	    0x488905000000	            mov qword [0x04009760], rax 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009760	        0x4883fe01	                              cmp rsi, 1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x4009764	            0x7e54	                           jle 0x40097ba	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x4009766	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400976d	          0x4989f7	                            mov r15, rsi	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x4009770	        0x498d6fff	                      lea rbp, [r15 - 1]	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x4009774	          0x4889ef	                            mov rdi, rbp	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x4009777	      0xe800000000	                          call 0x400977c	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x400977c	          0x4889c2	                            mov rdx, rax	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x400977f	          0x803800	                       cmp byte [rax], 0	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x4009782	            0x742a	                            je 0x40097ae	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x4009784	      0xb800000000	                              mov eax, 0	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x4009789	          0x4c89e1	                            mov rcx, r12	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400978c	          0x4889d7	                            mov rdi, rdx	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400978f	            0xf2ae	              repne scasb al, byte [rdi]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x4009791	          0x4889c8	                            mov rax, rcx	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x4009794	          0x48f7d0	                                 not rax	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x4009797	      0x807c02fe5c	         cmp byte [rdx + rax - 2], 0x5c 	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400979c	            0x7517	                           jne 0x40097b5	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400979e	          0x4989ef	                            mov r15, rbp	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40097a1	        0x4883fd01	                              cmp rbp, 1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x40097a5	            0x75c9	                           jne 0x4009770	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x40097a7	      0x48896c2408	                mov qword [rsp + 8], rbp	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40097ac	            0xeb0c	                           jmp 0x40097ba	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40097ae	      0x4c897c2408	                mov qword [rsp + 8], r15	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40097b3	            0xeb05	                           jmp 0x40097ba	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40097b5	      0x4c897c2408	                mov qword [rsp + 8], r15	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40097ba	      0x488b442408	                mov rax, qword [rsp + 8]	       814	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40097bf	    0x488905000000	            mov qword [0x040097c6], rax 	       814	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40097c6	        0x488b6b38	            mov rbp, qword [rbx + 0x38] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40097ca	        0x448b6340	           mov r12d, dword [rbx + 0x40] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40097ce	        0x448b7b44	           mov r15d, dword [rbx + 0x44] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40097d2	        0x48894338	             mov qword [rbx + 0x38], rax	       818	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40097d6	    0xc74340000000	               mov dword [rbx + 0x40], 0	       819	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40097dd	    0x488b05000000	            mov rax, qword [0x040097e4] 	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x40097e4	    0x488bb8b00200	           mov rdi, qword [rax + 0x2b0] 	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x40097eb	      0xe800000000	                          call 0x40097f0	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x40097f0	          0x4885c0	                           test rax, rax	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x40097f3	            0x7466	                            je 0x400985b	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x40097f5	    0x488b15000000	            mov rdx, qword [0x040097fc] 	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x40097fc	    0x8bba60020000	           mov edi, dword [rdx + 0x260] 	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4009802	            0xeb52	                           jmp 0x4009856	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4009804	          0x4863c7	                         movsxd rax, edi	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x4009807	        0x488d0480	                  lea rax, [rax + rax*4]	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x400980b	        0x48c1e005	                              shl rax, 5	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x400980f	    0x480382700200	            add rax, qword [rdx + 0x270]	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x4009816	     0xfb7b2a00200	          movzx esi, word [rdx + 0x2a0] 	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x400981d	        0x66397054	               cmp word [rax + 0x54], si	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x4009821	            0x7533	                           jne 0x4009856	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x4009823	          0x803802	                       cmp byte [rax], 2	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x4009826	            0x752e	                           jne 0x4009856	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x4009828	    0xc70500000000	           mov dword [0x04009832], 0x90 	      1740	syntax.c	FUNCTION_24
0x4009832	    0xc70500000000	               mov dword [0x0400983c], 3	      1741	syntax.c	FUNCTION_24
0x400983c	      0xe8d573ffff	             call sym.push_current_state	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_8
0x4009841	          0x83f801	                              cmp eax, 1	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_8
0x4009844	            0x7515	                           jne 0x400985b	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_8
0x4009846	    0x8b0500000000	            mov eax, dword [0x0400984c] 	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_9
0x400984c	          0x8d78ff	                      lea edi, [rax - 1]	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_9
0x400984f	      0xe831e3ffff	                 call sym.update_si_attr	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_9
0x4009854	            0xeb05	                           jmp 0x400985b	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_9
0x4009856	          0x83ef01	                              sub edi, 1	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4009859	            0x79a9	                           jns 0x4009804	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400985b	        0x48896b38	             mov qword [rbx + 0x38], rbp	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400985f	        0x44896340	            mov dword [rbx + 0x40], r12d	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009863	        0x44897b44	            mov dword [rbx + 0x44], r15d	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009867	    0x4c892d000000	            mov qword [0x0400986e], r13 	       842	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400986e	    0x4c8935000000	            mov qword [0x04009875], r14 	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009875	      0xe905030000	                           jmp 0x4009b7f	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400987a	            0xa802	                              test al, 2	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x400987c	     0xf84fd020000	                            je 0x4009b7f	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x4009882	    0x488b82b00200	           mov rax, qword [rdx + 0x2b0] 	       851	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4009889	      0x488b742408	                mov rsi, qword [rsp + 8]	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400988e	          0x4839f0	                            cmp rax, rsi	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4009891	            0x7d0f	                           jge 0x40098a2	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4009893	          0x4885c0	                           test rax, rax	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4009896	            0x740a	                            je 0x40098a2	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4009898	          0x4829c6	                            sub rsi, rax	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400989b	      0x4889742438	             mov qword [rsp + 0x38], rsi	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x40098a0	            0xeb09	                           jmp 0x40098ab	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x40098a2	    0x48c744243800	               mov qword [rsp + 0x38], 0	       855	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x40098ab	      0x488b442408	                mov rax, qword [rsp + 8]	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x40098b0	      0x4889442418	             mov qword [rsp + 0x18], rax	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x40098b5	      0x4889442420	             mov qword [rsp + 0x20], rax	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x40098ba	      0xbd00000000	                              mov ebp, 0	       858	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x40098bf	    0x41bd00000000	                             mov r13d, 0	       857	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x40098c5	    0x41be00000000	                             mov r14d, 0	       756	syntax.c	FUNCTION_5
0x40098cb	    0x41bc00000000	                             mov r12d, 0	       755	syntax.c	FUNCTION_5
0x40098d1	    0xc74424140000	               mov dword [rsp + 0x14], 0	       754	syntax.c	FUNCTION_5
0x40098d9	      0xe976020000	                           jmp 0x4009b54	       754	syntax.c	FUNCTION_5
0x40098de	      0xe800000000	                          call 0x40098e3	       864	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	CALL_10
0x40098e3	    0x8b0500000000	            mov eax, dword [0x040098e9] 	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40098e9	            0x85c0	                           test eax, eax	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40098eb	            0x7416	                            je 0x4009903	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40098ed	      0xe8076effff	       call sym.invalidate_current_state	       867	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13	CALL_11
0x40098f2	      0x488b442408	                mov rax, qword [rsp + 8]	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40098f7	    0x488905000000	            mov qword [0x040098fe], rax 	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40098fe	      0xe97c020000	                           jmp 0x4009b7f	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x4009903	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x4009908	          0x4885c0	                           test rax, rax	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x400990b	            0x7418	                            je 0x4009925	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x400990d	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x4009912	        0x48397008	                cmp qword [rax + 8], rsi	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x4009916	            0x750d	                           jne 0x4009925	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x4009918	          0x4889c7	                            mov rdi, rax	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_12
0x400991b	      0xe8f0e8ffff	             call sym.load_current_state	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_12
0x4009920	      0xe95a020000	                           jmp 0x4009b7f	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_12
0x4009925	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0x400992a	        0x4883f801	                              cmp rax, 1	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0x400992e	            0x7e11	                           jle 0x4009941	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0x4009930	        0x488d78ff	                      lea rdi, [rax - 1]	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0x4009934	      0xe8c96fffff	             call sym.syn_match_linecont	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0x4009939	            0x85c0	                           test eax, eax	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0x400993b	     0xf8513020000	                           jne 0x4009b54	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0x4009941	    0xc70500000000	           mov dword [0x0400994b], 0x90 	      1740	syntax.c	FUNCTION_24
0x400994b	    0xc70500000000	               mov dword [0x04009955], 3	      1741	syntax.c	FUNCTION_24
0x4009955	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400995a	    0x488905000000	            mov qword [0x04009961], rax 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009961	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009966	     0xf8dd9010000	                           jge 0x4009b45	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400996c	    0x41bf00000000	                             mov r15d, 0	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009972	      0xe8a0e5ffff	                 call sym.syn_start_line	       892	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	CALL_15
0x4009977	      0xbf01000000	                              mov edi, 1	       895	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	CALL_16
0x400997c	      0xe8b4f8ffff	                call sym.syn_finish_line	       895	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	CALL_16
0x4009981	            0x85c0	                           test eax, eax	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009983	     0xf84fa000000	                            je 0x4009a83	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009989	    0x8b0500000000	            mov eax, dword [0x0400998f] 	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400998f	            0x85c0	                           test eax, eax	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009991	     0xf84ec000000	                            je 0x4009a83	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009997	            0x4898	                                    cdqe	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0x4009999	        0x488d04c0	                  lea rax, [rax + rax*8]	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0x400999d	        0x48c1e004	                              shl rax, 4	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0x40099a1	    0x488b15000000	            mov rdx, qword [0x040099a8] 	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0x40099a8	    0x488d940270ff	             lea rdx, [rdx + rax - 0x90]	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0x40099b0	        0x488b5a18	            mov rbx, qword [rdx + 0x18] 	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x40099b4	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x40099b9	            0x7e11	                           jle 0x40099cc	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x40099bb	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       906	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x40099c0	    0x488905000000	            mov qword [0x040099c7], rax 	       906	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x40099c7	      0xe9b7000000	                           jmp 0x4009a83	       906	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x40099cc	            0x8b02	                    mov eax, dword [rdx]	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x40099ce	            0x85c0	                           test eax, eax	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x40099d0	            0x7825	                            js 0x40099f7	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x40099d2	            0x4898	                                    cdqe	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0x40099d4	        0x488d0480	                  lea rax, [rax + rax*4]	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0x40099d8	        0x48c1e005	                              shl rax, 5	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0x40099dc	    0x488b0d000000	            mov rcx, qword [0x040099e3] 	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0x40099e3	    0x480381700200	            add rax, qword [rcx + 0x270]	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0x40099ea	        0x448b7824	           mov r15d, dword [rax + 0x24] 	       918	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x40099ee	          0x8b4030	            mov eax, dword [rax + 0x30] 	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x40099f1	        0x89442414	             mov dword [rsp + 0x14], eax	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x40099f5	            0xeb0e	                           jmp 0x4009a05	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x40099f7	    0xc7442414ffff	     mov dword [rsp + 0x14], 0xffffffff 	       913	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x40099ff	    0x41bf00000000	                             mov r15d, 0	       912	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x4009a05	    0x4c8b25000000	            mov r12, qword [0x04009a0c] 	       921	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009a0c	    0x448b35000000	           mov r14d, dword [0x04009a13] 	       922	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009a13	          0x8b6a20	            mov ebp, dword [rdx + 0x20] 	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009a16	          0x4c39e3	                            cmp rbx, r12	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4009a19	            0x7e16	                           jle 0x4009a31	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4009a1b	    0x48891d000000	            mov qword [0x04009a22], rbx 	       930	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4009a22	    0x892d00000000	            mov dword [0x04009a28], ebp 	       931	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4009a28	      0x483b5c2418	            cmp rbx, qword [rsp + 0x18] 	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x4009a2d	            0x7c19	                            jl 0x4009a48	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x4009a2f	            0xeb4f	                           jmp 0x4009a80	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x4009a31	          0x4139ee	                           cmp r14d, ebp	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4009a34	            0x7d08	                           jge 0x4009a3e	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4009a36	    0x892d00000000	            mov dword [0x04009a3c], ebp 	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4009a3c	            0xeb0a	                           jmp 0x4009a48	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4009a3e	        0x418d4601	                      lea eax, [r14 + 1]	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x4009a42	    0x890500000000	            mov dword [0x04009a48], eax 	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x4009a48	    0x448b2d000000	           mov r13d, dword [0x04009a4f] 	       943	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009a4f	      0xe86d6fffff	                 call sym.syn_getcurline	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0x4009a54	    0x8b1500000000	            mov edx, dword [0x04009a5a] 	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0x4009a5a	          0x4863ca	                         movsxd rcx, edx	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0x4009a5d	        0x803c0800	                 cmp byte [rax + rcx], 0	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0x4009a61	            0x7409	                            je 0x4009a6c	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0x4009a63	          0x83c201	                              add edx, 1	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0x4009a66	    0x891500000000	            mov dword [0x04009a6c], edx 	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0x4009a6c	      0xe83be2ffff	               call sym.check_state_ends	       946	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_20
0x4009a71	    0x44892d000000	           mov dword [0x04009a78], r13d 	       947	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009a78	          0x4989dd	                            mov r13, rbx	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4009a7b	      0xe9f7feffff	                           jmp 0x4009977	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4009a80	          0x4989dd	                            mov r13, rbx	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4009a83	    0x488b05000000	            mov rax, qword [0x04009a8a] 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009a8a	        0x4883c001	                              add rax, 1	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009a8e	    0x488905000000	            mov qword [0x04009a95], rax 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009a95	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009a9a	     0xf8fd2feffff	                            jg 0x4009972	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009aa0	          0x4585ff	                         test r15d, r15d	       957	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0x4009aa3	     0xf849c000000	                            je 0x4009b45	       957	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0x4009aa9	      0xe8fc6bffff	            call sym.clear_current_state	       964	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_21
0x4009aae	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0x4009ab2	            0x85c0	                           test eax, eax	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0x4009ab4	            0x781a	                            js 0x4009ad0	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0x4009ab6	            0x89c7	                            mov edi, eax	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_22
0x4009ab8	      0xe85971ffff	             call sym.push_current_state	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_22
0x4009abd	          0x83f801	                              cmp eax, 1	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_22
0x4009ac0	            0x750e	                           jne 0x4009ad0	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_22
0x4009ac2	    0x8b0500000000	            mov eax, dword [0x04009ac8] 	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_23
0x4009ac8	          0x8d78ff	                      lea edi, [rax - 1]	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_23
0x4009acb	      0xe8b5e0ffff	                 call sym.update_si_attr	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_23
0x4009ad0	        0x41f6c710	                         test r15b, 0x10	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009ad4	            0x7461	                            je 0x4009b37	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009ad6	    0x8b0500000000	            mov eax, dword [0x04009adc] 	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009adc	            0x85c0	                           test eax, eax	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009ade	            0x7436	                            je 0x4009b16	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009ae0	            0x4898	                                    cdqe	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0x4009ae2	        0x488d04c0	                  lea rax, [rax + rax*8]	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0x4009ae6	        0x48c1e004	                              shl rax, 4	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0x4009aea	    0x488b15000000	            mov rdx, qword [0x04009af1] 	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0x4009af1	    0x488dbc0270ff	             lea rdi, [rdx + rax - 0x90]	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0x4009af9	        0x4c896728	             mov qword [rdi + 0x28], r12	       980	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009afd	        0x44897730	            mov dword [rdi + 0x30], r14d	       981	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009b01	      0xba01000000	                              mov edx, 1	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_25
0x4009b06	    0x8b3500000000	            mov esi, dword [0x04009b0c] 	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_25
0x4009b0c	      0xe86376ffff	                  call sym.update_si_end	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_25
0x4009b11	      0xe8bb65ffff	                  call sym.check_keepend	       983	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_26
0x4009b16	    0x892d00000000	            mov dword [0x04009b1c], ebp 	       985	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009b1c	    0x4c892d000000	            mov qword [0x04009b23], r13 	       986	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009b23	      0xbf00000000	                              mov edi, 0	       987	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	CALL_27
0x4009b28	      0xe808f7ffff	                call sym.syn_finish_line	       987	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	CALL_27
0x4009b2d	    0x488305000000	               add qword [0x04009b35], 1	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009b35	            0xeb48	                           jmp 0x4009b7f	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009b37	      0x488b442408	                mov rax, qword [rsp + 8]	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4009b3c	    0x488905000000	            mov qword [0x04009b43], rax 	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4009b43	            0xeb3a	                           jmp 0x4009b7f	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4009b45	      0xe8af6bffff	       call sym.invalidate_current_state	       997	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	CALL_28
0x4009b4a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4009b4f	      0x4889442418	             mov qword [rsp + 0x18], rax	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4009b54	    0x48836c242001	               sub qword [rsp + 0x20], 1	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4009b5a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4009b5f	      0x483b442438	            cmp rax, qword [rsp + 0x38] 	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4009b64	     0xf8f74fdffff	                            jg 0x40098de	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4009b6a	      0xe88a6bffff	       call sym.invalidate_current_state	      1003	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27	CALL_29
0x4009b6f	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4009b74	        0x4883c001	                              add rax, 1	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4009b78	    0x488905000000	            mov qword [0x04009b7f], rax 	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4009b7f	    0xc70500000000	           mov dword [0x04009b89], 0x90 	      1740	syntax.c	FUNCTION_24
0x4009b89	    0xc70500000000	               mov dword [0x04009b93], 3	      1741	syntax.c	FUNCTION_24
0x4009b93	    0x488b05000000	            mov rax, qword [0x04009b9a] 	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x4009b9a	    0x41bd01000000	                             mov r13d, 1	       609	syntax.c	FUNCTION_2	IF_11	IF_12
0x4009ba0	        0x4883f801	                              cmp rax, 1	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x4009ba4	            0x741a	                            je 0x4009bc0	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x4009ba6	    0x488b15000000	            mov rdx, qword [0x04009bad] 	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x4009bad	    0x480382a80200	            add rax, qword [rdx + 0x2a8]	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x4009bb4	          0x4989c5	                            mov r13, rax	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x4009bb7	            0xeb07	                           jmp 0x4009bc0	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x4009bb9	    0x4c8b2d000000	            mov r13, qword [0x04009bc0] 	       616	syntax.c	FUNCTION_2	ELSE_3
0x4009bc0	    0x488b05000000	            mov rax, qword [0x04009bc7] 	       622	syntax.c	FUNCTION_2	IF_13
0x4009bc7	    0x486380180300	        movsxd rax, dword [rax + 0x318] 	       622	syntax.c	FUNCTION_2	IF_13
0x4009bce	    0x488b15000000	            mov rdx, qword [0x04009bd5] 	       622	syntax.c	FUNCTION_2	IF_13
0x4009bd5	    0x41be3f420f00	                       mov r14d, 0xf423f	       623	syntax.c	FUNCTION_2	IF_13
0x4009bdb	          0x4839d0	                            cmp rax, rdx	       622	syntax.c	FUNCTION_2	IF_13
0x4009bde	     0xf8e42010000	                           jle 0x4009d26	       622	syntax.c	FUNCTION_2	IF_13
0x4009be4	          0x4829d0	                            sub rax, rdx	       625	syntax.c	FUNCTION_2	ELSE_4
0x4009be7	          0x4889c1	                            mov rcx, rax	       625	syntax.c	FUNCTION_2	ELSE_4
0x4009bea	    0x488b05000000	            mov rax, qword [0x04009bf1] 	       625	syntax.c	FUNCTION_2	ELSE_4
0x4009bf1	          0x488b00	                    mov rax, qword [rax]	       625	syntax.c	FUNCTION_2	ELSE_4
0x4009bf4	            0x4899	                                     cqo	       625	syntax.c	FUNCTION_2	ELSE_4
0x4009bf6	          0x48f7f9	                                idiv rcx	       625	syntax.c	FUNCTION_2	ELSE_4
0x4009bf9	        0x448d7001	                     lea r14d, [rax + 1]	       625	syntax.c	FUNCTION_2	ELSE_4
0x4009bfd	      0xe924010000	                           jmp 0x4009d26	       625	syntax.c	FUNCTION_2	ELSE_4
0x4009c02	      0xe810e3ffff	                 call sym.syn_start_line	       628	syntax.c	FUNCTION_2	WHILE_1	CALL_14
0x4009c07	      0xbf00000000	                              mov edi, 0	       629	syntax.c	FUNCTION_2	WHILE_1	CALL_15
0x4009c0c	      0xe824f6ffff	                call sym.syn_finish_line	       629	syntax.c	FUNCTION_2	WHILE_1	CALL_15
0x4009c11	    0x488b3d000000	            mov rdi, qword [0x04009c18] 	       630	syntax.c	FUNCTION_2	WHILE_1
0x4009c18	        0x488d6f01	                      lea rbp, [rdi + 1]	       630	syntax.c	FUNCTION_2	WHILE_1
0x4009c1c	    0x48892d000000	            mov qword [0x04009c23], rbp 	       630	syntax.c	FUNCTION_2	WHILE_1
0x4009c23	          0x4939ed	                            cmp r13, rbp	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x4009c26	     0xf8fdd000000	                            jg 0x4009d09	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x4009c2c	          0x4c89e3	                            mov rbx, r12	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x4009c2f	          0x4d85e4	                           test r12, r12	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x4009c32	            0x7532	                           jne 0x4009c66	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x4009c34	      0xe80764ffff	           call sym.syn_stack_find_entry	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_16
0x4009c39	          0x4889c3	                            mov rbx, rax	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_16
0x4009c3c	          0x4885c0	                           test rax, rax	       641	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x4009c3f	            0x7522	                           jne 0x4009c63	       641	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x4009c41	    0x488b05000000	            mov rax, qword [0x04009c48] 	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x4009c48	    0x4c8ba0200300	           mov r12, qword [rax + 0x320] 	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x4009c4f	          0x4d85e4	                           test r12, r12	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009c52	     0xf848b000000	                            je 0x4009ce3	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009c58	          0x4c89e0	                            mov rax, r12	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009c5b	          0x4989dc	                            mov r12, rbx	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_16
0x4009c5e	          0x4889c3	                            mov rbx, rax	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x4009c61	            0xeb03	                           jmp 0x4009c66	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x4009c63	          0x4989c4	                            mov r12, rax	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_16
0x4009c66	        0x483b6b08	                cmp rbp, qword [rbx + 8]	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009c6a	     0xf8e3a010000	                           jle 0x4009daa	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009c70	          0x488b1b	                    mov rbx, qword [rbx]	       646	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009c73	          0x4885db	                           test rbx, rbx	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009c76	            0x746b	                            je 0x4009ce3	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009c78	        0x483b6b08	                cmp rbp, qword [rbx + 8]	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009c7c	            0x7ff2	                            jg 0x4009c70	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009c7e	      0xe927010000	                           jmp 0x4009daa	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009c83	          0x4889df	                            mov rdi, rbx	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_17
0x4009c86	      0xe8d477ffff	                call sym.syn_stack_equal	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_17
0x4009c8b	            0x85c0	                           test eax, eax	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_17
0x4009c8d	            0x7454	                            je 0x4009ce3	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_17
0x4009c8f	    0x488b15000000	            mov rdx, qword [0x04009c96] 	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x4009c96	    0x488b83d00000	            mov rax, qword [rbx + 0xd0] 	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009c9d	          0x4839c2	                            cmp rdx, rax	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009ca0	            0x7c34	                            jl 0x4009cd6	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009ca2	          0x4989dc	                            mov r12, rbx	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009ca5	        0x4c3b7b08	                cmp r15, qword [rbx + 8]	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x4009ca9	            0x7d07	                           jge 0x4009cb2	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x4009cab	          0x4885c0	                           test rax, rax	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x4009cae	            0x7505	                           jne 0x4009cb5	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x4009cb0	            0xeb27	                           jmp 0x4009cd9	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x4009cb2	          0x4989dc	                            mov r12, rbx	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x4009cb5	    0x48c783d00000	               mov qword [rbx + 0xd0], 0	       661	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009cc0	          0x488b1b	                    mov rbx, qword [rbx]	       662	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009cc3	          0x4885db	                           test rbx, rbx	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009cc6	            0x7411	                            je 0x4009cd9	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009cc8	    0x488b83d00000	            mov rax, qword [rbx + 0xd0] 	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009ccf	          0x4839c2	                            cmp rdx, rax	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009cd2	            0x7dd1	                           jge 0x4009ca5	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009cd4	            0xeb03	                           jmp 0x4009cd9	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009cd6	          0x4989dc	                            mov r12, rbx	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009cd9	          0x4c89e7	                            mov rdi, r12	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_18
0x4009cdc	      0xe82fe5ffff	             call sym.load_current_state	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_18
0x4009ce1	            0xeb26	                           jmp 0x4009d09	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_18
0x4009ce3	          0x4d85e4	                           test r12, r12	       669	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009ce6	            0x7419	                            je 0x4009d01	       669	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009ce8	    0x488b05000000	            mov rax, qword [0x04009cef] 	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009cef	          0x4939c7	                            cmp r15, rax	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009cf2	            0x740d	                            je 0x4009d01	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009cf4	          0x4c89f2	                            mov rdx, r14	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009cf7	      0x4903542408	                add rdx, qword [r12 + 8]	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009cfc	          0x4839d0	                            cmp rax, rdx	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009cff	            0x7c08	                            jl 0x4009d09	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009d01	      0xe8a593ffff	            call sym.store_current_state	       672	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009d06	          0x4989c4	                            mov r12, rax	       672	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009d09	      0xe800000000	                          call 0x4009d0e	       677	syntax.c	FUNCTION_2	WHILE_1	CALL_20
0x4009d0e	    0x8b0500000000	            mov eax, dword [0x04009d14] 	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x4009d14	            0x85c0	                           test eax, eax	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x4009d16	            0x741c	                            je 0x4009d34	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x4009d18	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       680	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x4009d1d	    0x488905000000	            mov qword [0x04009d24], rax 	       680	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x4009d24	            0xeb1b	                           jmp 0x4009d41	       681	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x4009d26	    0x41bc00000000	                             mov r12d, 0	       623	syntax.c	FUNCTION_2	IF_13
0x4009d2c	          0x4d63f6	                        movsxd r14, r14d	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009d2f	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009d34	    0x4c3b3d000000	            cmp r15, qword [0x04009d3b] 	       626	syntax.c	FUNCTION_2	WHILE_1
0x4009d3b	     0xf8fc1feffff	                            jg 0x4009c02	       626	syntax.c	FUNCTION_2	WHILE_1
0x4009d41	      0xe8d1e1ffff	                 call sym.syn_start_line	       685	syntax.c	FUNCTION_2	CALL_21
0x4009d46	            0xeb71	                           jmp 0x4009db9	       685	syntax.c	FUNCTION_2	CALL_21
0x4009d48	    0x48c744243000	               mov qword [rsp + 0x30], 0	       517	syntax.c	FUNCTION_2
0x4009d51	      0xe95cf9ffff	                           jmp 0x40096b2	       517	syntax.c	FUNCTION_2
0x4009d56	    0x4c8b2d000000	            mov r13, qword [0x04009d5d] 	       800	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009d5d	    0x48891d000000	            mov qword [0x04009d64], rbx 	       801	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009d64	    0x4c8b35000000	            mov r14, qword [0x04009d6b] 	       802	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009d6b	    0x488b05000000	            mov rax, qword [0x04009d72] 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009d72	    0x488905000000	            mov qword [0x04009d79], rax 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009d79	    0x48c744240801	                  mov qword [rsp + 8], 1	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009d82	      0xe933faffff	                           jmp 0x40097ba	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009d87	    0x48c705000000	               mov qword [0x04009d92], 1	       791	syntax.c	FUNCTION_5	ELSE_4
0x4009d92	    0x8b829c020000	           mov eax, dword [rdx + 0x29c] 	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009d98	            0xa801	                              test al, 1	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009d9a	            0x75ba	                           jne 0x4009d56	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009d9c	    0x48c744240801	                  mov qword [rsp + 8], 1	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009da5	      0xe9d0faffff	                           jmp 0x400987a	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009daa	        0x483b6b08	                cmp rbp, qword [rbx + 8]	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x4009dae	     0xf852fffffff	                           jne 0x4009ce3	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x4009db4	      0xe9cafeffff	                           jmp 0x4009c83	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x4009db9	        0x4883c448	                           add rsp, 0x48	       686	syntax.c	FUNCTION_2
0x4009dbd	              0x5b	                                 pop rbx	       686	syntax.c	FUNCTION_2
0x4009dbe	              0x5d	                                 pop rbp	       686	syntax.c	FUNCTION_2
0x4009dbf	            0x415c	                                 pop r12	       686	syntax.c	FUNCTION_2
0x4009dc1	            0x415d	                                 pop r13	       686	syntax.c	FUNCTION_2
0x4009dc3	            0x415e	                                 pop r14	       686	syntax.c	FUNCTION_2
0x4009dc5	            0x415f	                                 pop r15	       686	syntax.c	FUNCTION_2
0x4009dc7	              0xc3	                                     ret	       686	syntax.c	FUNCTION_2
in_id_list	IF,14:CALL,5:FOR,0:ELSE,3:SWITCH,0:WHILE,2:DO,0:functions,0	136
0x4000268	            0x4156	                                push r14	      6232	syntax.c	FUNCTION_94
0x400026a	            0x4155	                                push r13	      6232	syntax.c	FUNCTION_94
0x400026c	            0x4154	                                push r12	      6232	syntax.c	FUNCTION_94
0x400026e	              0x55	                                push rbp	      6232	syntax.c	FUNCTION_94
0x400026f	              0x53	                                push rbx	      6232	syntax.c	FUNCTION_94
0x4000270	          0x4889f3	                            mov rbx, rsi	      6232	syntax.c	FUNCTION_94
0x4000273	          0x4989d4	                            mov r12, rdx	      6232	syntax.c	FUNCTION_94
0x4000276	          0x4189ce	                           mov r14d, ecx	      6232	syntax.c	FUNCTION_94
0x4000279	         0xfb76a04	               movzx ebp, word [rdx + 4]	      6236	syntax.c	FUNCTION_94
0x400027d	          0x4885ff	                           test rdi, rdi	      6241	syntax.c	FUNCTION_94	IF_1
0x4000280	            0x7477	                            je 0x40002f9	      6241	syntax.c	FUNCTION_94	IF_1
0x4000282	        0x488b7208	                mov rsi, qword [rdx + 8]	      6241	syntax.c	FUNCTION_94	IF_1
0x4000286	          0x4885f6	                           test rsi, rsi	      6241	syntax.c	FUNCTION_94	IF_1
0x4000289	            0x746e	                            je 0x40002f9	      6241	syntax.c	FUNCTION_94	IF_1
0x400028b	        0x488b4768	            mov rax, qword [rdi + 0x68] 	      6242	syntax.c	FUNCTION_94	IF_1
0x400028f	            0xa840	                           test al, 0x40	      6242	syntax.c	FUNCTION_94	IF_1
0x4000291	            0x7566	                           jne 0x40002f9	      6242	syntax.c	FUNCTION_94	IF_1
0x4000293	      0xa900000100	                       test eax, 0x10000	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x4000298	            0x741e	                            je 0x40002b8	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400029a	    0x488b05000000	            mov rax, qword [0x040002a1] 	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40002a1	          0x4839c7	                            cmp rdi, rax	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40002a4	            0x7612	                           jbe 0x40002b8	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40002a6	    0x4881ef900000	                           sub rdi, 0x90	      6248	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40002ad	        0xf6476a01	               test byte [rdi + 0x6a], 1	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40002b1	            0x7405	                            je 0x40002b8	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40002b3	          0x4839c7	                            cmp rdi, rax	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40002b6	            0x77ee	                            ja 0x40002a6	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40002b8	            0x8b07	                    mov eax, dword [rdi]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40002ba	            0x85c0	                           test eax, eax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40002bc	            0x783b	                            js 0x40002f9	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40002be	            0x4898	                                    cdqe	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0x40002c0	        0x488d1480	                  lea rdx, [rax + rax*4]	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0x40002c4	        0x48c1e205	                              shl rdx, 5	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0x40002c8	    0x488b05000000	            mov rax, qword [0x040002cf] 	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0x40002cf	    0x480390700200	            add rdx, qword [rax + 0x270]	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0x40002d6	          0x8b4a24	            mov ecx, dword [rdx + 0x24] 	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40002d9	          0x83e101	                              and ecx, 1	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40002dc	        0x4883c250	                           add rdx, 0x50	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40002e0	      0xbf00000000	                              mov edi, 0	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40002e5	      0xe87effffff	                     call sym.in_id_list	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40002ea	            0x89c2	                            mov edx, eax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40002ec	      0xb801000000	                              mov eax, 1	      6253	syntax.c	FUNCTION_94	IF_1	IF_2
0x40002f1	            0x85d2	                           test edx, edx	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40002f3	     0xf854a010000	                           jne 0x4000443	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40002f9	          0x4885db	                           test rbx, rbx	      6256	syntax.c	FUNCTION_94	IF_3
0x40002fc	     0xf841f010000	                            je 0x4000421	      6256	syntax.c	FUNCTION_94	IF_3
0x4000302	          0x4585f6	                         test r14d, r14d	      6264	syntax.c	FUNCTION_94	IF_4
0x4000305	           0xf94c0	                                 sete al	      6264	syntax.c	FUNCTION_94	IF_4
0x4000308	           0xfb6c0	                           movzx eax, al	      6264	syntax.c	FUNCTION_94	IF_4
0x400030b	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      6263	syntax.c	FUNCTION_94	IF_4
0x400030f	     0xf842e010000	                            je 0x4000443	      6263	syntax.c	FUNCTION_94	IF_4
0x4000315	           0xfb713	                   movzx edx, word [rbx]	      6271	syntax.c	FUNCTION_94
0x4000318	    0x8d82e0b1ffff	                 lea eax, [rdx - 0x4e20]	      6272	syntax.c	FUNCTION_94	IF_5
0x400031e	        0x663db70b	                           cmp ax, 0xbb7	      6272	syntax.c	FUNCTION_94	IF_5
0x4000322	            0x776f	                            ja 0x4000393	      6272	syntax.c	FUNCTION_94	IF_5
0x4000324	      0x6681fa0752	                          cmp dx, 0x5207	      6274	syntax.c	FUNCTION_94	IF_5	IF_6
0x4000329	            0x7f1a	                            jg 0x4000345	      6274	syntax.c	FUNCTION_94	IF_5	IF_6
0x400032b	           0xfbfd2	                           movsx edx, dx	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x400032e	    0x81ea204e0000	                         sub edx, 0x4e20	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x4000334	      0xb800000000	                              mov eax, 0	      6278	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x4000339	        0x413b1424	                    cmp edx, dword [r12]	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x400033d	     0xf8500010000	                           jne 0x4000443	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x4000343	            0xeb3e	                           jmp 0x4000383	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x4000345	      0x6681faef55	                          cmp dx, 0x55ef	      6280	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8
0x400034a	            0x7f1c	                            jg 0x4000368	      6280	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8
0x400034c	           0xfbfc2	                           movsx eax, dx	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400034f	      0x2d08520000	                         sub eax, 0x5208	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x4000354	        0x413b0424	                    cmp eax, dword [r12]	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x4000358	     0xf85ca000000	                           jne 0x4000428	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400035e	          0x4585f6	                         test r14d, r14d	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x4000361	            0x7420	                            je 0x4000383	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x4000363	      0xe9c0000000	                           jmp 0x4000428	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x4000368	           0xfbfc2	                           movsx eax, dx	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400036b	      0x2df0550000	                         sub eax, 0x55f0	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x4000370	        0x413b0424	                    cmp eax, dword [r12]	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x4000374	     0xf85b5000000	                           jne 0x400042f	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400037a	          0x4585f6	                         test r14d, r14d	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400037d	     0xf84ac000000	                            je 0x400042f	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x4000383	         0xfb75302	               movzx edx, word [rbx + 2]	      6292	syntax.c	FUNCTION_94	IF_5
0x4000387	        0x488d5b02	                      lea rbx, [rbx + 2]	      6292	syntax.c	FUNCTION_94	IF_5
0x400038b	    0x41bd00000000	                             mov r13d, 0	      6293	syntax.c	FUNCTION_94	IF_5
0x4000391	            0xeb06	                           jmp 0x4000399	      6293	syntax.c	FUNCTION_94	IF_5
0x4000393	    0x41bd01000000	                             mov r13d, 1	      6296	syntax.c	FUNCTION_94	ELSE_3
0x4000399	          0x6685d2	                             test dx, dx	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x400039c	            0x747b	                            je 0x4000419	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x400039e	          0x6639d5	                              cmp bp, dx	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x40003a1	            0x750e	                           jne 0x40003b1	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x40003a3	      0xe98e000000	                           jmp 0x4000436	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x40003a8	          0x6639d5	                              cmp bp, dx	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x40003ab	     0xf848a000000	                            je 0x400043b	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x40003b1	      0x6681fad759	                          cmp dx, 0x59d7	      6305	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x40003b6	            0x7e55	                           jle 0x400040d	      6305	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x40003b8	        0x480fbfd2	                           movsx rdx, dx	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0x40003bc	        0x488d0452	                  lea rax, [rdx + rdx*2]	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0x40003c0	        0x48c1e003	                              shl rax, 3	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0x40003c4	    0x488b15000000	            mov rdx, qword [0x040003cb] 	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0x40003cb	    0x480382880200	            add rax, qword [rdx + 0x288]	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0x40003d2	    0x488bb0d093f7	          mov rsi, qword [rax - 0x86c30]	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0x40003d9	          0x4885f6	                           test rsi, rsi	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x40003dc	            0x742f	                            je 0x400040d	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x40003de	    0x8b0500000000	            mov eax, dword [0x040003e4] 	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x40003e4	          0x83f81d	                           cmp eax, 0x1d	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x40003e7	            0x7f24	                            jg 0x400040d	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x40003e9	          0x83c001	                              add eax, 1	      6312	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x40003ec	    0x890500000000	            mov dword [0x040003f2], eax 	      6312	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x40003f2	          0x4489f1	                           mov ecx, r14d	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_5
0x40003f5	          0x4c89e2	                            mov rdx, r12	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_5
0x40003f8	      0xbf00000000	                              mov edi, 0	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_5
0x40003fd	      0xe866feffff	                     call sym.in_id_list	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_5
0x4000402	    0x832d00000000	               sub dword [0x04000409], 1	      6314	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x4000409	            0x85c0	                           test eax, eax	      6315	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0x400040b	            0x7533	                           jne 0x4000440	      6315	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0x400040d	        0x4883c302	                              add rbx, 2	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x4000411	           0xfb713	                   movzx edx, word [rbx]	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x4000414	          0x6685d2	                             test dx, dx	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x4000417	            0x758f	                           jne 0x40003a8	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x4000419	          0x4489e8	                           mov eax, r13d	      6321	syntax.c	FUNCTION_94
0x400041c	          0x83f001	                              xor eax, 1	      6321	syntax.c	FUNCTION_94
0x400041f	            0xeb22	                           jmp 0x4000443	      6321	syntax.c	FUNCTION_94
0x4000421	      0xb800000000	                              mov eax, 0	      6257	syntax.c	FUNCTION_94	IF_3
0x4000426	            0xeb1b	                           jmp 0x4000443	      6257	syntax.c	FUNCTION_94	IF_3
0x4000428	      0xb800000000	                              mov eax, 0	      6284	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400042d	            0xeb14	                           jmp 0x4000443	      6284	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400042f	      0xb800000000	                              mov eax, 0	      6290	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x4000434	            0xeb0d	                           jmp 0x4000443	      6290	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x4000436	          0x4489e8	                           mov eax, r13d	      6304	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x4000439	            0xeb08	                           jmp 0x4000443	      6304	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x400043b	          0x4489e8	                           mov eax, r13d	      6304	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x400043e	            0xeb03	                           jmp 0x4000443	      6304	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x4000440	          0x4489e8	                           mov eax, r13d	      6316	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0x4000443	              0x5b	                                 pop rbx	      6322	syntax.c	FUNCTION_94
0x4000444	              0x5d	                                 pop rbp	      6322	syntax.c	FUNCTION_94
0x4000445	            0x415c	                                 pop r12	      6322	syntax.c	FUNCTION_94
0x4000447	            0x415d	                                 pop r13	      6322	syntax.c	FUNCTION_94
0x4000449	            0x415e	                                 pop r14	      6322	syntax.c	FUNCTION_94
0x400044b	              0xc3	                                     ret	      6322	syntax.c	FUNCTION_94
highlight_clear	IF,1:CALL,33:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	76
0x4002df4	              0x53	                                push rbx	      8359	syntax.c	FUNCTION_120
0x4002df5	          0x4863ff	                         movsxd rdi, edi	      8360	syntax.c	FUNCTION_120	CALL_1
0x4002df8	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      8360	syntax.c	FUNCTION_120	CALL_1
0x4002dfc	        0x488d1c47	                  lea rbx, [rdi + rax*2]	      8360	syntax.c	FUNCTION_120	CALL_1
0x4002e00	        0x48c1e303	                              shl rbx, 3	      8360	syntax.c	FUNCTION_120	CALL_1
0x4002e04	    0x488b05000000	            mov rax, qword [0x04002e0b] 	      8360	syntax.c	FUNCTION_120	CALL_1
0x4002e0b	    0xc74418100100	         mov dword [rax + rbx + 0x10], 1	      8360	syntax.c	FUNCTION_120	CALL_1
0x4002e13	    0x488b05000000	            mov rax, qword [0x04002e1a] 	      8362	syntax.c	FUNCTION_120	CALL_2
0x4002e1a	    0xc74418140000	         mov dword [rax + rbx + 0x14], 0	      8362	syntax.c	FUNCTION_120	CALL_2
0x4002e22	    0x488b05000000	            mov rax, qword [0x04002e29] 	      8363	syntax.c	FUNCTION_120	CALL_4
0x4002e29	      0x488b7c1818	      mov rdi, qword [rax + rbx + 0x18] 	      8363	syntax.c	FUNCTION_120	CALL_4
0x4002e2e	          0x4885ff	                           test rdi, rdi	      8363	syntax.c	FUNCTION_120	CALL_4
0x4002e31	            0x7415	                            je 0x4002e48	      8363	syntax.c	FUNCTION_120	CALL_4
0x4002e33	      0xe800000000	                          call 0x4002e38	      8363	syntax.c	FUNCTION_120	CALL_4
0x4002e38	    0x488b05000000	            mov rax, qword [0x04002e3f] 	      8363	syntax.c	FUNCTION_120	CALL_4
0x4002e3f	    0x48c744181800	         mov qword [rax + rbx + 0x18], 0	      8363	syntax.c	FUNCTION_120	CALL_4
0x4002e48	    0x488b05000000	            mov rax, qword [0x04002e4f] 	      8364	syntax.c	FUNCTION_120	CALL_6
0x4002e4f	      0x488b7c1820	      mov rdi, qword [rax + rbx + 0x20] 	      8364	syntax.c	FUNCTION_120	CALL_6
0x4002e54	          0x4885ff	                           test rdi, rdi	      8364	syntax.c	FUNCTION_120	CALL_6
0x4002e57	            0x7415	                            je 0x4002e6e	      8364	syntax.c	FUNCTION_120	CALL_6
0x4002e59	      0xe800000000	                          call 0x4002e5e	      8364	syntax.c	FUNCTION_120	CALL_6
0x4002e5e	    0x488b05000000	            mov rax, qword [0x04002e65] 	      8364	syntax.c	FUNCTION_120	CALL_6
0x4002e65	    0x48c744182000	         mov qword [rax + rbx + 0x20], 0	      8364	syntax.c	FUNCTION_120	CALL_6
0x4002e6e	          0x4889d8	                            mov rax, rbx	      8365	syntax.c	FUNCTION_120	CALL_7
0x4002e71	    0x480305000000	             add rax, qword [0x04002e78]	      8365	syntax.c	FUNCTION_120	CALL_7
0x4002e78	    0xc74028000000	               mov dword [rax + 0x28], 0	      8365	syntax.c	FUNCTION_120	CALL_7
0x4002e7f	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      8366	syntax.c	FUNCTION_120	CALL_8
0x4002e86	    0xc74030000000	               mov dword [rax + 0x30], 0	      8367	syntax.c	FUNCTION_120	CALL_9
0x4002e8d	    0xc74034000000	               mov dword [rax + 0x34], 0	      8368	syntax.c	FUNCTION_120	CALL_10
0x4002e94	    0xc74038000000	               mov dword [rax + 0x38], 0	      8369	syntax.c	FUNCTION_120	CALL_11
0x4002e9b	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      8370	syntax.c	FUNCTION_120	CALL_12
0x4002ea2	    0xc7406c000000	               mov dword [rax + 0x6c], 0	      8372	syntax.c	FUNCTION_120	CALL_13
0x4002ea9	        0x488b7870	            mov rdi, qword [rax + 0x70] 	      8373	syntax.c	FUNCTION_120	CALL_15
0x4002ead	          0x4885ff	                           test rdi, rdi	      8373	syntax.c	FUNCTION_120	CALL_15
0x4002eb0	            0x7415	                            je 0x4002ec7	      8373	syntax.c	FUNCTION_120	CALL_15
0x4002eb2	      0xe800000000	                          call 0x4002eb7	      8373	syntax.c	FUNCTION_120	CALL_15
0x4002eb7	    0x488b05000000	            mov rax, qword [0x04002ebe] 	      8373	syntax.c	FUNCTION_120	CALL_15
0x4002ebe	    0x48c744187000	         mov qword [rax + rbx + 0x70], 0	      8373	syntax.c	FUNCTION_120	CALL_15
0x4002ec7	    0x488b05000000	            mov rax, qword [0x04002ece] 	      8374	syntax.c	FUNCTION_120	CALL_17
0x4002ece	      0x488b7c1878	      mov rdi, qword [rax + rbx + 0x78] 	      8374	syntax.c	FUNCTION_120	CALL_17
0x4002ed3	          0x4885ff	                           test rdi, rdi	      8374	syntax.c	FUNCTION_120	CALL_17
0x4002ed6	            0x7415	                            je 0x4002eed	      8374	syntax.c	FUNCTION_120	CALL_17
0x4002ed8	      0xe800000000	                          call 0x4002edd	      8374	syntax.c	FUNCTION_120	CALL_17
0x4002edd	    0x488b05000000	            mov rax, qword [0x04002ee4] 	      8374	syntax.c	FUNCTION_120	CALL_17
0x4002ee4	    0x48c744187800	         mov qword [rax + rbx + 0x78], 0	      8374	syntax.c	FUNCTION_120	CALL_17
0x4002eed	    0x488b05000000	            mov rax, qword [0x04002ef4] 	      8375	syntax.c	FUNCTION_120	CALL_19
0x4002ef4	    0x488bbc188000	      mov rdi, qword [rax + rbx + 0x80] 	      8375	syntax.c	FUNCTION_120	CALL_19
0x4002efc	          0x4885ff	                           test rdi, rdi	      8375	syntax.c	FUNCTION_120	CALL_19
0x4002eff	            0x7418	                            je 0x4002f19	      8375	syntax.c	FUNCTION_120	CALL_19
0x4002f01	      0xe800000000	                          call 0x4002f06	      8375	syntax.c	FUNCTION_120	CALL_19
0x4002f06	    0x488b05000000	            mov rax, qword [0x04002f0d] 	      8375	syntax.c	FUNCTION_120	CALL_19
0x4002f0d	    0x48c784188000	         mov qword [rax + rbx + 0x80], 0	      8375	syntax.c	FUNCTION_120	CALL_19
0x4002f19	          0x4889d8	                            mov rax, rbx	      8378	syntax.c	FUNCTION_120	CALL_20
0x4002f1c	    0x480305000000	             add rax, qword [0x04002f23]	      8378	syntax.c	FUNCTION_120	CALL_20
0x4002f23	    0x48c7c299d4ff	             mov rdx, 0xffffffffffffd499	      8378	syntax.c	FUNCTION_120	CALL_20
0x4002f2a	        0x48895040	             mov qword [rax + 0x40], rdx	      8378	syntax.c	FUNCTION_120	CALL_20
0x4002f2e	        0x48895048	             mov qword [rax + 0x48], rdx	      8379	syntax.c	FUNCTION_120	CALL_21
0x4002f32	        0x48895050	             mov qword [rax + 0x50], rdx	      8382	syntax.c	FUNCTION_120	CALL_22
0x4002f36	        0x488b7858	            mov rdi, qword [rax + 0x58] 	      8383	syntax.c	FUNCTION_120	CALL_24
0x4002f3a	      0xe800000000	                          call 0x4002f3f	      8383	syntax.c	FUNCTION_120	CALL_24
0x4002f3f	          0x4889d8	                            mov rax, rbx	      8384	syntax.c	FUNCTION_120	CALL_25
0x4002f42	    0x480305000000	             add rax, qword [0x04002f49]	      8384	syntax.c	FUNCTION_120	CALL_25
0x4002f49	    0x48c740580000	               mov qword [rax + 0x58], 0	      8384	syntax.c	FUNCTION_120	CALL_25
0x4002f51	        0x488b7860	            mov rdi, qword [rax + 0x60] 	      8389	syntax.c	FUNCTION_120	CALL_30
0x4002f55	          0x4885ff	                           test rdi, rdi	      8389	syntax.c	FUNCTION_120	CALL_30
0x4002f58	            0x7415	                            je 0x4002f6f	      8389	syntax.c	FUNCTION_120	CALL_30
0x4002f5a	      0xe800000000	                          call 0x4002f5f	      8389	syntax.c	FUNCTION_120	CALL_30
0x4002f5f	    0x488b05000000	            mov rax, qword [0x04002f66] 	      8389	syntax.c	FUNCTION_120	CALL_30
0x4002f66	    0x48c744186000	         mov qword [rax + rbx + 0x60], 0	      8389	syntax.c	FUNCTION_120	CALL_30
0x4002f6f	    0x48031d000000	             add rbx, qword [0x04002f76]	      8390	syntax.c	FUNCTION_120	CALL_31
0x4002f76	    0xc74368000000	               mov dword [rbx + 0x68], 0	      8390	syntax.c	FUNCTION_120	CALL_31
0x4002f7d	    0x83bb88000000	               cmp dword [rbx + 0x88], 0	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x4002f84	            0x750a	                           jne 0x4002f90	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x4002f86	    0xc78390000000	               mov dword [rbx + 0x90], 0	      8396	syntax.c	FUNCTION_120	CALL_33
0x4002f90	              0x5b	                                 pop rbx	      8398	syntax.c	FUNCTION_120
0x4002f91	              0xc3	                                     ret	      8398	syntax.c	FUNCTION_120
syn_compare_stub	IF,0:CALL,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	9
0x400024e	           0xfb70f	                   movzx ecx, word [rdi]	      5402	syntax.c	FUNCTION_82
0x4000251	           0xfb716	                   movzx edx, word [rsi]	      5402	syntax.c	FUNCTION_82
0x4000254	      0xb801000000	                              mov eax, 1	      5402	syntax.c	FUNCTION_82
0x4000259	          0x6639d1	                              cmp cx, dx	      5402	syntax.c	FUNCTION_82
0x400025c	            0x7f08	                            jg 0x4000266	      5402	syntax.c	FUNCTION_82
0x400025e	           0xf9cc0	                                 setl al	      5402	syntax.c	FUNCTION_82
0x4000261	           0xfb6c0	                           movzx eax, al	      5402	syntax.c	FUNCTION_82
0x4000264	            0xf7d8	                                 neg eax	      5402	syntax.c	FUNCTION_82
0x4000266	            0xf3c3	                                     ret	      5403	syntax.c	FUNCTION_82
syn_incl_toplevel	IF,3:CALL,3:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	47
0x40022de	              0x53	                                push rbx	      4794	syntax.c	FUNCTION_77
0x40022df	        0x4883ec10	                           sub rsp, 0x10	      4794	syntax.c	FUNCTION_77
0x40022e3	    0x64488b042528	                mov rax, qword fs:[0x28]	      4794	syntax.c	FUNCTION_77
0x40022ec	      0x4889442408	                mov qword [rsp + 8], rax	      4794	syntax.c	FUNCTION_77
0x40022f1	            0x31c0	                            xor eax, eax	      4794	syntax.c	FUNCTION_77
0x40022f3	            0x8b06	                    mov eax, dword [rsi]	      4795	syntax.c	FUNCTION_77	IF_1
0x40022f5	            0xa801	                              test al, 1	      4795	syntax.c	FUNCTION_77	IF_1
0x40022f7	     0xf8593000000	                           jne 0x4002390	      4795	syntax.c	FUNCTION_77	IF_1
0x40022fd	            0x89fb	                            mov ebx, edi	      4795	syntax.c	FUNCTION_77	IF_1
0x40022ff	    0x488b15000000	            mov rdx, qword [0x04002306] 	      4795	syntax.c	FUNCTION_77	IF_1
0x4002306	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4795	syntax.c	FUNCTION_77	IF_1
0x400230a	    0x83ba04030000	              cmp dword [rdx + 0x304], 0	      4795	syntax.c	FUNCTION_77	IF_1
0x4002311	            0x747d	                            je 0x4002390	      4795	syntax.c	FUNCTION_77	IF_1
0x4002313	          0x83c801	                               or eax, 1	      4797	syntax.c	FUNCTION_77
0x4002316	            0x8906	                    mov dword [rsi], eax	      4797	syntax.c	FUNCTION_77
0x4002318	    0x488b05000000	            mov rax, qword [0x0400231f] 	      4798	syntax.c	FUNCTION_77	IF_2
0x400231f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4798	syntax.c	FUNCTION_77	IF_2
0x4002323	    0x81b804030000	        cmp dword [rax + 0x304], 0x59d7 	      4798	syntax.c	FUNCTION_77	IF_2
0x400232d	            0x7e61	                           jle 0x4002390	      4798	syntax.c	FUNCTION_77	IF_2
0x400232f	      0xbf04000000	                              mov edi, 4	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x4002334	      0xe800000000	                          call 0x4002339	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x4002339	        0x48890424	                    mov qword [rsp], rax	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x400233d	          0x4885c0	                           test rax, rax	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x4002340	            0x744e	                            je 0x4002390	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x4002342	    0x488b15000000	            mov rdx, qword [0x04002349] 	      4802	syntax.c	FUNCTION_77	IF_2
0x4002349	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4802	syntax.c	FUNCTION_77	IF_2
0x400234d	    0x8b9204030000	           mov edx, dword [rdx + 0x304] 	      4802	syntax.c	FUNCTION_77	IF_2
0x4002353	          0x668918	                      mov word [rax], bx	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x4002356	        0x488b0424	                    mov rax, qword [rsp]	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x400235a	    0x66c740020000	                   mov word [rax + 2], 0	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x4002360	    0x488b05000000	            mov rax, qword [0x04002367] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x4002367	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x400236b	    0x8d8228a6ffff	                 lea eax, [rdx - 0x59d8]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x4002371	            0x4898	                                    cdqe	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x4002373	        0x488d1440	                  lea rdx, [rax + rax*2]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x4002377	    0x488b81880200	           mov rax, qword [rcx + 0x288] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x400237e	      0x488d7cd010	          lea rdi, [rax + rdx*8 + 0x10] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x4002383	      0xba02000000	                              mov edx, 2	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x4002388	          0x4889e6	                            mov rsi, rsp	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x400238b	      0xe84ffdffff	               call sym.syn_combine_list	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x4002390	      0x488b442408	                mov rax, qword [rsp + 8]	      4812	syntax.c	FUNCTION_77
0x4002395	    0x644833042528	                xor rax, qword fs:[0x28]	      4812	syntax.c	FUNCTION_77
0x400239e	            0x7405	                            je 0x40023a5	      4812	syntax.c	FUNCTION_77
0x40023a0	      0xe800000000	                          call 0x40023a5	      4812	syntax.c	FUNCTION_77
0x40023a5	        0x4883c410	                           add rsp, 0x10	      4812	syntax.c	FUNCTION_77
0x40023a9	              0x5b	                                 pop rbx	      4812	syntax.c	FUNCTION_77
0x40023aa	              0xc3	                                     ret	      4812	syntax.c	FUNCTION_77
syn_clear_pattern	IF,1:CALL,11:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	32
0x40015a1	            0x4154	                                push r12	      3727	syntax.c	FUNCTION_53
0x40015a3	              0x55	                                push rbp	      3727	syntax.c	FUNCTION_53
0x40015a4	              0x53	                                push rbx	      3727	syntax.c	FUNCTION_53
0x40015a5	          0x4889fd	                            mov rbp, rdi	      3727	syntax.c	FUNCTION_53
0x40015a8	          0x4189f4	                           mov r12d, esi	      3727	syntax.c	FUNCTION_53
0x40015ab	          0x4863c6	                         movsxd rax, esi	      3728	syntax.c	FUNCTION_53	CALL_2
0x40015ae	        0x488d1c80	                  lea rbx, [rax + rax*4]	      3728	syntax.c	FUNCTION_53	CALL_2
0x40015b2	        0x48c1e305	                              shl rbx, 5	      3728	syntax.c	FUNCTION_53	CALL_2
0x40015b6	    0x488b87700200	           mov rax, qword [rdi + 0x270] 	      3728	syntax.c	FUNCTION_53	CALL_2
0x40015bd	      0x488b7c1860	      mov rdi, qword [rax + rbx + 0x60] 	      3728	syntax.c	FUNCTION_53	CALL_2
0x40015c2	      0xe800000000	                          call 0x40015c7	      3728	syntax.c	FUNCTION_53	CALL_2
0x40015c7	    0x488b85700200	           mov rax, qword [rbp + 0x270] 	      3729	syntax.c	FUNCTION_53	CALL_4
0x40015ce	      0x488b7c1868	      mov rdi, qword [rax + rbx + 0x68] 	      3729	syntax.c	FUNCTION_53	CALL_4
0x40015d3	      0xe800000000	                          call 0x40015d8	      3729	syntax.c	FUNCTION_53	CALL_4
0x40015d8	          0x4585e4	                         test r12d, r12d	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x40015db	            0x7411	                            je 0x40015ee	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x40015dd	    0x488b85700200	           mov rax, qword [rbp + 0x270] 	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x40015e4	    0x80bc1860ffff	         cmp byte [rax + rbx - 0xa0], 2 	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x40015ec	            0x7433	                            je 0x4001621	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x40015ee	    0x488b85700200	           mov rax, qword [rbp + 0x270] 	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x40015f5	      0x488b7c1840	      mov rdi, qword [rax + rbx + 0x40] 	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x40015fa	      0xe800000000	                          call 0x40015ff	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x40015ff	    0x488b85700200	           mov rax, qword [rbp + 0x270] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x4001606	      0x488b7c1848	      mov rdi, qword [rax + rbx + 0x48] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x400160b	      0xe800000000	                          call 0x4001610	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x4001610	    0x488b85700200	           mov rax, qword [rbp + 0x270] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x4001617	      0x488b7c1858	      mov rdi, qword [rax + rbx + 0x58] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x400161c	      0xe800000000	                          call 0x4001621	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x4001621	              0x5b	                                 pop rbx	      3737	syntax.c	FUNCTION_53
0x4001622	              0x5d	                                 pop rbp	      3737	syntax.c	FUNCTION_53
0x4001623	            0x415c	                                 pop r12	      3737	syntax.c	FUNCTION_53
0x4001625	              0xc3	                                     ret	      3737	syntax.c	FUNCTION_53
get_highlight_name	IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	3
0x400d595	      0xba01000000	                              mov edx, 1	     10306	syntax.c	FUNCTION_167	CALL_1
0x400d59a	      0xe800000000	                          call 0x400d59f	     10306	syntax.c	FUNCTION_167	CALL_1
0x400d59f	            0xf3c3	                                     ret	     10307	syntax.c	FUNCTION_167
syn_cmd_clear	IF,8:CALL,20:FOR,0:ELSE,5:SWITCH,0:WHILE,1:DO,0:functions,0	193
0x40058cf	            0x4156	                                push r14	      3755	syntax.c	FUNCTION_55
0x40058d1	            0x4155	                                push r13	      3755	syntax.c	FUNCTION_55
0x40058d3	            0x4154	                                push r12	      3755	syntax.c	FUNCTION_55
0x40058d5	              0x55	                                push rbp	      3755	syntax.c	FUNCTION_55
0x40058d6	              0x53	                                push rbx	      3755	syntax.c	FUNCTION_55
0x40058d7	          0x4889fd	                            mov rbp, rdi	      3755	syntax.c	FUNCTION_55
0x40058da	          0x4189f4	                           mov r12d, esi	      3755	syntax.c	FUNCTION_55
0x40058dd	          0x488b1f	                    mov rbx, qword [rdi]	      3756	syntax.c	FUNCTION_55
0x40058e0	          0x4889df	                            mov rdi, rbx	      3760	syntax.c	FUNCTION_55	CALL_1
0x40058e3	      0xe800000000	                          call 0x40058e8	      3760	syntax.c	FUNCTION_55	CALL_1
0x40058e8	        0x48894508	                mov qword [rbp + 8], rax	      3760	syntax.c	FUNCTION_55	CALL_1
0x40058ec	        0x837d3000	               cmp dword [rbp + 0x30], 0	      3761	syntax.c	FUNCTION_55	IF_1
0x40058f0	     0xf8525030000	                           jne 0x4005c1b	      3761	syntax.c	FUNCTION_55	IF_1
0x40058f6	    0x488b05000000	            mov rax, qword [0x040058fd] 	      3770	syntax.c	FUNCTION_55	IF_2
0x40058fd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3770	syntax.c	FUNCTION_55	IF_2
0x4005901	    0x83b804030000	              cmp dword [rax + 0x304], 0	      3770	syntax.c	FUNCTION_55	IF_2
0x4005908	     0xf850d030000	                           jne 0x4005c1b	      3770	syntax.c	FUNCTION_55	IF_2
0x400590e	           0xfb63b	                   movzx edi, byte [rbx]	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4005911	      0xe800000000	                          call 0x4005916	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4005916	            0x85c0	                           test eax, eax	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4005918	     0xf84d3020000	                            je 0x4005bf1	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x400591e	          0x4585e4	                         test r12d, r12d	      3778	syntax.c	FUNCTION_55	IF_3	IF_4
0x4005921	     0xf8401010000	                            je 0x4005a28	      3778	syntax.c	FUNCTION_55	IF_3	IF_4
0x4005927	    0x488b05000000	            mov rax, qword [0x0400592e] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x400592e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x4005932	    0x8b9860020000	           mov ebx, dword [rax + 0x260] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x4005938	            0xeb2a	                           jmp 0x4005964	      3683	syntax.c	FUNCTION_51	FOR_1
0x400593a	    0x488b05000000	            mov rax, qword [0x04005941] 	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x4005941	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x4005945	          0x4863c3	                         movsxd rax, ebx	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x4005948	        0x488d0480	                  lea rax, [rax + rax*4]	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x400594c	        0x48c1e005	                              shl rax, 5	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x4005950	    0x480387700200	            add rax, qword [rdi + 0x270]	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x4005957	        0x80780100	                   cmp byte [rax + 1], 0	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x400595b	            0x7407	                            je 0x4005964	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x400595d	            0x89de	                            mov esi, ebx	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400595f	      0xe8c2bcffff	             call sym.syn_remove_pattern	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4005964	          0x83eb01	                              sub ebx, 1	      3683	syntax.c	FUNCTION_51	FOR_1
0x4005967	            0x79d1	                           jns 0x400593a	      3683	syntax.c	FUNCTION_51	FOR_1
0x4005969	    0x488b05000000	            mov rax, qword [0x04005970] 	      3687	syntax.c	FUNCTION_51
0x4005970	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3687	syntax.c	FUNCTION_51
0x4005974	    0xc7829c020000	              mov dword [rdx + 0x29c], 0	      3687	syntax.c	FUNCTION_51
0x400597e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3688	syntax.c	FUNCTION_51
0x4005982	    0x48c782a80200	              mov qword [rdx + 0x2a8], 0	      3688	syntax.c	FUNCTION_51
0x400598d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3689	syntax.c	FUNCTION_51
0x4005991	    0x48c782b00200	              mov qword [rdx + 0x2b0], 0	      3689	syntax.c	FUNCTION_51
0x400599c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3690	syntax.c	FUNCTION_51
0x40059a0	    0x48c782b80200	              mov qword [rdx + 0x2b8], 0	      3690	syntax.c	FUNCTION_51
0x40059ab	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3692	syntax.c	FUNCTION_51	CALL_3
0x40059af	    0x488bb8c80200	           mov rdi, qword [rax + 0x2c8] 	      3692	syntax.c	FUNCTION_51	CALL_3
0x40059b6	      0xe800000000	                          call 0x40059bb	      3692	syntax.c	FUNCTION_51	CALL_3
0x40059bb	    0x488b05000000	            mov rax, qword [0x040059c2] 	      3693	syntax.c	FUNCTION_51
0x40059c2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3693	syntax.c	FUNCTION_51
0x40059c6	    0x48c782c80200	              mov qword [rdx + 0x2c8], 0	      3693	syntax.c	FUNCTION_51
0x40059d1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x40059d5	    0x488bb8c00200	           mov rdi, qword [rax + 0x2c0] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x40059dc	          0x4885ff	                           test rdi, rdi	      3694	syntax.c	FUNCTION_51	CALL_4
0x40059df	            0x741b	                            je 0x40059fc	      3694	syntax.c	FUNCTION_51	CALL_4
0x40059e1	      0xe800000000	                          call 0x40059e6	      3694	syntax.c	FUNCTION_51	CALL_4
0x40059e6	    0x488b05000000	            mov rax, qword [0x040059ed] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x40059ed	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x40059f1	    0x48c780c00200	              mov qword [rax + 0x2c0], 0	      3694	syntax.c	FUNCTION_51	CALL_4
0x40059fc	    0x488b05000000	            mov rax, qword [0x04005a03] 	      3695	syntax.c	FUNCTION_51	CALL_5
0x4005a03	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3695	syntax.c	FUNCTION_51	CALL_5
0x4005a07	    0x4881c7b00400	                          add rdi, 0x4b0	      3695	syntax.c	FUNCTION_51	CALL_5
0x4005a0e	      0xe800000000	                          call 0x4005a13	      3695	syntax.c	FUNCTION_51	CALL_5
0x4005a13	    0x488b05000000	            mov rax, qword [0x04005a1a] 	      3697	syntax.c	FUNCTION_51	CALL_6
0x4005a1a	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3697	syntax.c	FUNCTION_51	CALL_6
0x4005a1e	      0xe800000000	                          call 0x4005a23	      3697	syntax.c	FUNCTION_51	CALL_6
0x4005a23	      0xe9d9010000	                           jmp 0x4005c01	      3697	syntax.c	FUNCTION_51	CALL_6
0x4005a28	    0x488b05000000	            mov rax, qword [0x04005a2f] 	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x4005a2f	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x4005a33	      0xe800000000	                          call 0x4005a38	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x4005a38	    0x488b15000000	            mov rdx, qword [0x04005a3f] 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4005a3f	        0x488b4208	                mov rax, qword [rdx + 8]	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4005a43	    0x480568170000	                         add rax, 0x1768	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4005a49	        0x48394210	            cmp qword [rdx + 0x10], rax 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4005a4d	            0x750f	                           jne 0x4005a5e	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4005a4f	      0xbe01000000	                              mov esi, 1	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x4005a54	      0xbf00000000	                              mov edi, 0	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x4005a59	      0xe800000000	                          call 0x4005a5e	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x4005a5e	      0xbe01000000	                              mov esi, 1	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x4005a63	      0xbf00000000	                              mov edi, 0	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x4005a68	      0xe800000000	                          call 0x4005a6d	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x4005a6d	      0xe98f010000	                           jmp 0x4005c01	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x4005a72	          0x4889df	                            mov rdi, rbx	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x4005a75	      0xe800000000	                          call 0x4005a7a	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x4005a7a	          0x4989c5	                            mov r13, rax	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x4005a7d	          0x803b40	                    cmp byte [rbx], 0x40	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x4005a80	     0xf85ab000000	                           jne 0x4005b31	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x4005a86	          0x4889c6	                            mov rsi, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x4005a89	          0x4829de	                            sub rsi, rbx	      5560	syntax.c	FUNCTION_85	CALL_1
0x4005a8c	          0x83ee01	                              sub esi, 1	      5560	syntax.c	FUNCTION_85	CALL_1
0x4005a8f	        0x488d7b01	                      lea rdi, [rbx + 1]	      5560	syntax.c	FUNCTION_85	CALL_1
0x4005a93	      0xe800000000	                          call 0x4005a98	      5560	syntax.c	FUNCTION_85	CALL_1
0x4005a98	          0x4989c6	                            mov r14, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x4005a9b	          0x4885c0	                           test rax, rax	      5561	syntax.c	FUNCTION_85	IF_1
0x4005a9e	            0x7416	                            je 0x4005ab6	      5561	syntax.c	FUNCTION_85	IF_1
0x4005aa0	          0x4889c7	                            mov rdi, rax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x4005aa3	      0xe8e7c3ffff	                call sym.syn_scl_name2id	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x4005aa8	            0x89c5	                            mov ebp, eax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x4005aaa	          0x4c89f7	                            mov rdi, r14	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x4005aad	      0xe800000000	                          call 0x4005ab2	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x4005ab2	            0x85ed	                           test ebp, ebp	      3799	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x4005ab4	            0x7524	                           jne 0x4005ada	      3799	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x4005ab6	      0xba05000000	                              mov edx, 5	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4005abb	      0xbe00000000	                              mov esi, 0	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4005ac0	      0xbf00000000	                              mov edi, 0	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4005ac5	      0xe800000000	                          call 0x4005aca	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4005aca	          0x4889de	                            mov rsi, rbx	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4005acd	          0x4889c7	                            mov rdi, rax	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4005ad0	      0xe800000000	                          call 0x4005ad5	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4005ad5	      0xe927010000	                           jmp 0x4005c01	      3802	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x4005ada	    0x8d8528a6ffff	                 lea eax, [rbp - 0x59d8]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005ae0	        0x480fbfc0	                           movsx rax, ax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005ae4	        0x488d1c40	                  lea rbx, [rax + rax*2]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005ae8	        0x48c1e303	                              shl rbx, 3	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005aec	    0x488b05000000	            mov rax, qword [0x04005af3] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005af3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005af7	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005afe	      0x488b7c1810	      mov rdi, qword [rax + rbx + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005b03	          0x4885ff	                           test rdi, rdi	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005b06	     0xf84da000000	                            je 0x4005be6	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005b0c	      0xe800000000	                          call 0x4005b11	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005b11	    0x488b05000000	            mov rax, qword [0x04005b18] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005b18	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005b1c	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005b23	    0x48c744181000	         mov qword [rax + rbx + 0x10], 0	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005b2c	      0xe9b5000000	                           jmp 0x4005be6	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x4005b31	          0x4889c6	                            mov rsi, rax	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4005b34	          0x4829de	                            sub rsi, rbx	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4005b37	          0x4889df	                            mov rdi, rbx	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4005b3a	      0xe800000000	                          call 0x4005b3f	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4005b3f	            0x89c5	                            mov ebp, eax	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4005b41	            0x85c0	                           test eax, eax	      3819	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x4005b43	            0x7524	                           jne 0x4005b69	      3819	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x4005b45	      0xba05000000	                              mov edx, 5	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x4005b4a	      0xbe00000000	                              mov esi, 0	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x4005b4f	      0xbf00000000	                              mov edi, 0	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x4005b54	      0xe800000000	                          call 0x4005b59	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x4005b59	          0x4889de	                            mov rsi, rbx	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x4005b5c	          0x4889c7	                            mov rdi, rax	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x4005b5f	      0xe800000000	                          call 0x4005b64	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x4005b64	      0xe998000000	                           jmp 0x4005c01	      3822	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x4005b69	          0x4585e4	                         test r12d, r12d	      3844	syntax.c	FUNCTION_56	IF_1
0x4005b6c	            0x752b	                           jne 0x4005b99	      3844	syntax.c	FUNCTION_56	IF_1
0x4005b6e	    0x488b05000000	            mov rax, qword [0x04005b75] 	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4005b75	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4005b79	            0x89ef	                            mov edi, ebp	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4005b7b	      0xe89cd1ffff	              call sym.syn_clear_keyword	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4005b80	    0x488b05000000	            mov rax, qword [0x04005b87] 	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4005b87	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4005b8b	    0x4881c6280100	                          add rsi, 0x128	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4005b92	            0x89ef	                            mov edi, ebp	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4005b94	      0xe883d1ffff	              call sym.syn_clear_keyword	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4005b99	    0x488b05000000	            mov rax, qword [0x04005ba0] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x4005ba0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x4005ba4	    0x8b9860020000	           mov ebx, dword [rax + 0x260] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x4005baa	            0xeb35	                           jmp 0x4005be1	      3851	syntax.c	FUNCTION_56	FOR_1
0x4005bac	    0x488b05000000	            mov rax, qword [0x04005bb3] 	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4005bb3	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4005bb7	          0x4863c3	                         movsxd rax, ebx	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4005bba	        0x488d0480	                  lea rax, [rax + rax*4]	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4005bbe	        0x48c1e005	                              shl rax, 5	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4005bc2	    0x480387700200	            add rax, qword [rdi + 0x270]	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4005bc9	         0xfbf5054	           movsx edx, word [rax + 0x54] 	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4005bcd	            0x39d5	                            cmp ebp, edx	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4005bcf	            0x7510	                           jne 0x4005be1	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4005bd1	         0xfbe4001	               movsx eax, byte [rax + 1]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4005bd5	          0x4139c4	                           cmp r12d, eax	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4005bd8	            0x7507	                           jne 0x4005be1	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4005bda	            0x89de	                            mov esi, ebx	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_4
0x4005bdc	      0xe845baffff	             call sym.syn_remove_pattern	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_4
0x4005be1	          0x83eb01	                              sub ebx, 1	      3851	syntax.c	FUNCTION_56	FOR_1
0x4005be4	            0x79c6	                           jns 0x4005bac	      3851	syntax.c	FUNCTION_56	FOR_1
0x4005be6	          0x4c89ef	                            mov rdi, r13	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_18
0x4005be9	      0xe800000000	                          call 0x4005bee	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_18
0x4005bee	          0x4889c3	                            mov rbx, rax	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_18
0x4005bf1	           0xfb63b	                   movzx edi, byte [rbx]	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4005bf4	      0xe800000000	                          call 0x4005bf9	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4005bf9	            0x85c0	                           test eax, eax	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4005bfb	     0xf8471feffff	                            je 0x4005a72	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4005c01	      0xbf23000000	                           mov edi, 0x23	      3830	syntax.c	FUNCTION_55	CALL_19
0x4005c06	      0xe800000000	                          call 0x4005c0b	      3830	syntax.c	FUNCTION_55	CALL_19
0x4005c0b	    0x488b05000000	            mov rax, qword [0x04005c12] 	      3831	syntax.c	FUNCTION_55	CALL_20
0x4005c12	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3831	syntax.c	FUNCTION_55	CALL_20
0x4005c16	      0xe800000000	                          call 0x4005c1b	      3831	syntax.c	FUNCTION_55	CALL_20
0x4005c1b	              0x5b	                                 pop rbx	      3832	syntax.c	FUNCTION_55
0x4005c1c	              0x5d	                                 pop rbp	      3832	syntax.c	FUNCTION_55
0x4005c1d	            0x415c	                                 pop r12	      3832	syntax.c	FUNCTION_55
0x4005c1f	            0x415d	                                 pop r13	      3832	syntax.c	FUNCTION_55
0x4005c21	            0x415e	                                 pop r14	      3832	syntax.c	FUNCTION_55
0x4005c23	              0xc3	                                     ret	      3832	syntax.c	FUNCTION_55
get_syntax_info	IF,0:CALL,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	4
0x4003c2c	    0x8b0500000000	            mov eax, dword [0x04003c32] 	      6600	syntax.c	FUNCTION_103
0x4003c32	            0x8907	                    mov dword [rdi], eax	      6600	syntax.c	FUNCTION_103
0x4003c34	    0x8b0500000000	            mov eax, dword [0x04003c3a] 	      6602	syntax.c	FUNCTION_103
0x4003c3a	              0xc3	                                     ret	      6602	syntax.c	FUNCTION_103
highlight_list_arg	IF,8:CALL,11:FOR,1:ELSE,2:SWITCH,0:WHILE,0:DO,0:functions,0	99
0x400b00b	            0x4157	                                push r15	      9276	syntax.c	FUNCTION_142
0x400b00d	            0x4156	                                push r14	      9276	syntax.c	FUNCTION_142
0x400b00f	            0x4155	                                push r13	      9276	syntax.c	FUNCTION_142
0x400b011	            0x4154	                                push r12	      9276	syntax.c	FUNCTION_142
0x400b013	              0x55	                                push rbp	      9276	syntax.c	FUNCTION_142
0x400b014	              0x53	                                push rbx	      9276	syntax.c	FUNCTION_142
0x400b015	        0x4883ec78	                           sub rsp, 0x78	      9276	syntax.c	FUNCTION_142
0x400b019	          0x4189cc	                           mov r12d, ecx	      9276	syntax.c	FUNCTION_142
0x400b01c	    0x64488b042528	                mov rax, qword fs:[0x28]	      9276	syntax.c	FUNCTION_142
0x400b025	      0x4889442468	             mov qword [rsp + 0x68], rax	      9276	syntax.c	FUNCTION_142
0x400b02a	            0x31c0	                            xor eax, eax	      9276	syntax.c	FUNCTION_142
0x400b02c	    0x8b0d00000000	            mov ecx, dword [0x0400b032] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400b032	            0x85c9	                           test ecx, ecx	      9281	syntax.c	FUNCTION_142	IF_1
0x400b034	     0xf8518010000	                           jne 0x400b152	      9281	syntax.c	FUNCTION_142	IF_1
0x400b03a	          0x4189ff	                           mov r15d, edi	      9281	syntax.c	FUNCTION_142	IF_1
0x400b03d	          0x4189f5	                           mov r13d, esi	      9281	syntax.c	FUNCTION_142	IF_1
0x400b040	          0x4c89c3	                             mov rbx, r8	      9281	syntax.c	FUNCTION_142	IF_1
0x400b043	          0x4d89ce	                             mov r14, r9	      9281	syntax.c	FUNCTION_142	IF_1
0x400b046	          0x83fa02	                              cmp edx, 2	      9283	syntax.c	FUNCTION_142	IF_2
0x400b049	            0x7510	                           jne 0x400b05b	      9283	syntax.c	FUNCTION_142	IF_2
0x400b04b	            0x89f0	                            mov eax, esi	      9283	syntax.c	FUNCTION_142	IF_2
0x400b04d	          0x4d85c0	                             test r8, r8	      9283	syntax.c	FUNCTION_142	IF_2
0x400b050	     0xf84fc000000	                            je 0x400b152	      9283	syntax.c	FUNCTION_142	IF_2
0x400b056	      0xe98c000000	                           jmp 0x400b0e7	      9283	syntax.c	FUNCTION_142	IF_2
0x400b05b	            0x89f0	                            mov eax, esi	      9283	syntax.c	FUNCTION_142	IF_2
0x400b05d	          0x4585e4	                         test r12d, r12d	      9283	syntax.c	FUNCTION_142	IF_2
0x400b060	     0xf84ec000000	                            je 0x400b152	      9283	syntax.c	FUNCTION_142	IF_2
0x400b066	          0x83fa03	                              cmp edx, 3	      9286	syntax.c	FUNCTION_142	IF_2	IF_3
0x400b069	            0x7526	                           jne 0x400b091	      9286	syntax.c	FUNCTION_142	IF_2	IF_3
0x400b06b	      0x458d4424ff	                      lea r8d, [r12 - 1]	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b070	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b075	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b07a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b07f	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b082	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b087	      0xe800000000	                          call 0x400b08c	        33	stdio2.h	FUNCTION_170	CALL_2
0x400b08c	          0x4889e3	                            mov rbx, rsp	      9285	syntax.c	FUNCTION_142	IF_2
0x400b08f	            0xeb56	                           jmp 0x400b0e7	      9285	syntax.c	FUNCTION_142	IF_2
0x400b091	        0xc6042400	                       mov byte [rsp], 0	      9292	syntax.c	FUNCTION_142	IF_2	ELSE_2
0x400b095	      0xbd00000000	                              mov ebp, 0	      9292	syntax.c	FUNCTION_142	IF_2	ELSE_2
0x400b09a	      0xbb02000000	                              mov ebx, 2	      9292	syntax.c	FUNCTION_142	IF_2	ELSE_2
0x400b09f	          0x4185dc	                          test r12d, ebx	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x400b0a2	            0x7432	                            je 0x400b0d6	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x400b0a4	        0x803c2400	                       cmp byte [rsp], 0	      9297	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	IF_6
0x400b0a8	            0x7412	                            je 0x400b0bc	      9297	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	IF_6
0x400b0aa	      0xba64000000	                           mov edx, 0x64	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x400b0af	      0xbe00000000	                              mov esi, 0	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x400b0b4	          0x4889e7	                            mov rdi, rsp	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x400b0b7	      0xe800000000	                          call 0x400b0bc	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x400b0bc	    0x488bb42d0000	              mov rsi, qword [rbp + rbp]	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x400b0c4	      0xba64000000	                           mov edx, 0x64	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x400b0c9	          0x4889e7	                            mov rdi, rsp	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x400b0cc	      0xe800000000	                          call 0x400b0d1	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x400b0d1	            0xf7d3	                                 not ebx	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x400b0d3	          0x4121dc	                           and r12d, ebx	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x400b0d6	        0x4883c504	                              add rbp, 4	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x400b0da	    0x8b9d00000000	                    mov ebx, dword [rbp]	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x400b0e0	            0x85db	                           test ebx, ebx	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x400b0e2	            0x75bb	                           jne 0x400b09f	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x400b0e4	          0x4889e3	                            mov rbx, rsp	      9285	syntax.c	FUNCTION_142	IF_2
0x400b0e7	          0x4889df	                            mov rdi, rbx	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x400b0ea	      0xe800000000	                          call 0x400b0ef	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x400b0ef	            0x89c6	                            mov esi, eax	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x400b0f1	      0xb800000000	                              mov eax, 0	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x400b0f6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x400b0fd	          0x4c89f7	                            mov rdi, r14	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x400b100	            0xf2ae	              repne scasb al, byte [rdi]	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x400b102	          0x48f7d1	                                 not rcx	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x400b105	             0x1ce	                            add esi, ecx	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x400b107	          0x4489fa	                           mov edx, r15d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x400b10a	          0x4489ef	                           mov edi, r13d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x400b10d	      0xe832efffff	                call sym.syn_list_header	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x400b112	    0x8b1500000000	            mov edx, dword [0x0400b118] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x400b118	      0xb801000000	                              mov eax, 1	      9307	syntax.c	FUNCTION_142	IF_2
0x400b11d	            0x85d2	                           test edx, edx	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x400b11f	            0x7531	                           jne 0x400b152	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x400b121	        0x41803e00	                       cmp byte [r14], 0	      9310	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8
0x400b125	            0x741e	                            je 0x400b145	      9310	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8
0x400b127	    0x8b3500000000	            mov esi, dword [0x0400b12d] 	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x400b12d	          0x4c89f7	                            mov rdi, r14	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x400b130	      0xe800000000	                          call 0x400b135	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x400b135	    0x8b3500000000	            mov esi, dword [0x0400b13b] 	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_10
0x400b13b	      0xbf00000000	                              mov edi, 0	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_10
0x400b140	      0xe800000000	                          call 0x400b145	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_10
0x400b145	          0x4889df	                            mov rdi, rbx	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_11
0x400b148	      0xe800000000	                          call 0x400b14d	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_11
0x400b14d	      0xb801000000	                              mov eax, 1	      9307	syntax.c	FUNCTION_142	IF_2
0x400b152	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      9319	syntax.c	FUNCTION_142
0x400b157	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      9319	syntax.c	FUNCTION_142
0x400b160	            0x7405	                            je 0x400b167	      9319	syntax.c	FUNCTION_142
0x400b162	      0xe800000000	                          call 0x400b167	      9319	syntax.c	FUNCTION_142
0x400b167	        0x4883c478	                           add rsp, 0x78	      9319	syntax.c	FUNCTION_142
0x400b16b	              0x5b	                                 pop rbx	      9319	syntax.c	FUNCTION_142
0x400b16c	              0x5d	                                 pop rbp	      9319	syntax.c	FUNCTION_142
0x400b16d	            0x415c	                                 pop r12	      9319	syntax.c	FUNCTION_142
0x400b16f	            0x415d	                                 pop r13	      9319	syntax.c	FUNCTION_142
0x400b171	            0x415e	                                 pop r14	      9319	syntax.c	FUNCTION_142
0x400b173	            0x415f	                                 pop r15	      9319	syntax.c	FUNCTION_142
0x400b175	              0xc3	                                     ret	      9319	syntax.c	FUNCTION_142
push_next_match	IF,6:CALL,13:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	147
0x4007f67	            0x4155	                                push r13	      2518	syntax.c	FUNCTION_30
0x4007f69	            0x4154	                                push r12	      2518	syntax.c	FUNCTION_30
0x4007f6b	              0x55	                                push rbp	      2518	syntax.c	FUNCTION_30
0x4007f6c	              0x53	                                push rbx	      2518	syntax.c	FUNCTION_30
0x4007f6d	        0x4883ec08	                              sub rsp, 8	      2518	syntax.c	FUNCTION_30
0x4007f71	          0x4889fb	                            mov rbx, rdi	      2518	syntax.c	FUNCTION_30
0x4007f74	    0x488b05000000	            mov rax, qword [0x04007f7b] 	      2524	syntax.c	FUNCTION_30	CALL_1
0x4007f7b	    0x4c8ba8700200	           mov r13, qword [rax + 0x270] 	      2524	syntax.c	FUNCTION_30	CALL_1
0x4007f82	    0x448b25000000	           mov r12d, dword [0x04007f89] 	      2524	syntax.c	FUNCTION_30	CALL_1
0x4007f89	          0x4489e7	                           mov edi, r12d	      2529	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4007f8c	      0xe8858cffff	             call sym.push_current_state	      2529	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4007f91	          0x83f801	                              cmp eax, 1	      2529	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4007f94	     0xf855e020000	                           jne 0x40081f8	      2529	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4007f9a	          0x4d63e4	                        movsxd r12, r12d	      2524	syntax.c	FUNCTION_30	CALL_1
0x4007f9d	        0x4b8d2ca4	                  lea rbp, [r12 + r12*4]	      2524	syntax.c	FUNCTION_30	CALL_1
0x4007fa1	        0x48c1e505	                              shl rbp, 5	      2524	syntax.c	FUNCTION_30	CALL_1
0x4007fa5	          0x4c01ed	                            add rbp, r13	      2524	syntax.c	FUNCTION_30	CALL_1
0x4007fa8	    0x8b0d00000000	            mov ecx, dword [0x04007fae] 	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x4007fae	          0x4863c1	                         movsxd rax, ecx	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x4007fb1	        0x488d04c0	                  lea rax, [rax + rax*8]	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x4007fb5	        0x48c1e004	                              shl rax, 4	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x4007fb9	    0x488b15000000	            mov rdx, qword [0x04007fc0] 	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x4007fc0	    0x488d9c0270ff	             lea rbx, [rdx + rax - 0x90]	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x4007fc8	    0x488b35000000	            mov rsi, qword [0x04007fcf] 	      2536	syntax.c	FUNCTION_30	IF_1
0x4007fcf	    0x488b3d000000	            mov rdi, qword [0x04007fd6] 	      2536	syntax.c	FUNCTION_30	IF_1
0x4007fd6	        0x48897328	             mov qword [rbx + 0x28], rsi	      2536	syntax.c	FUNCTION_30	IF_1
0x4007fda	        0x48897b30	             mov qword [rbx + 0x30], rdi	      2536	syntax.c	FUNCTION_30	IF_1
0x4007fde	    0x8b1500000000	            mov edx, dword [0x04007fe4] 	      2537	syntax.c	FUNCTION_30	IF_1
0x4007fe4	          0x895310	             mov dword [rbx + 0x10], edx	      2537	syntax.c	FUNCTION_30	IF_1
0x4007fe7	    0x488b15000000	            mov rdx, qword [0x04007fee] 	      2538	syntax.c	FUNCTION_30	IF_1
0x4007fee	          0x89530c	              mov dword [rbx + 0xc], edx	      2538	syntax.c	FUNCTION_30	IF_1
0x4007ff1	        0x48635524	         movsxd rdx, dword [rbp + 0x24] 	      2539	syntax.c	FUNCTION_30	IF_1
0x4007ff5	        0x48895368	             mov qword [rbx + 0x68], rdx	      2539	syntax.c	FUNCTION_30	IF_1
0x4007ff9	    0x8b3500000000	            mov esi, dword [0x04007fff] 	      2541	syntax.c	FUNCTION_30	IF_1
0x4007fff	          0x8d7e01	                      lea edi, [rsi + 1]	      2541	syntax.c	FUNCTION_30	IF_1
0x4008002	    0x893d00000000	            mov dword [0x04008008], edi 	      2541	syntax.c	FUNCTION_30	IF_1
0x4008008	          0x897370	             mov dword [rbx + 0x70], esi	      2541	syntax.c	FUNCTION_30	IF_1
0x400800b	          0x8b7528	            mov esi, dword [rbp + 0x28] 	      2542	syntax.c	FUNCTION_30	IF_1
0x400800e	          0x897374	             mov dword [rbx + 0x74], esi	      2542	syntax.c	FUNCTION_30	IF_1
0x4008011	          0x83f901	                              cmp ecx, 1	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x4008014	            0x7e1b	                           jle 0x4008031	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x4008016	    0x488b0d000000	            mov rcx, qword [0x0400801d] 	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x400801d	    0x488b840148ff	       mov rax, qword [rcx + rax - 0xb8]	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4008025	      0x2500000200	                        and eax, 0x20000	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x400802a	          0x4809c2	                             or rdx, rax	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x400802d	        0x48895368	             mov qword [rbx + 0x68], rdx	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4008031	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      2547	syntax.c	FUNCTION_30	IF_1
0x4008035	    0x488983800000	             mov qword [rbx + 0x80], rax	      2547	syntax.c	FUNCTION_30	IF_1
0x400803c	    0x488b3d000000	            mov rdi, qword [0x04008043] 	      2548	syntax.c	FUNCTION_30	IF_1	CALL_5
0x4008043	      0xe800000000	                          call 0x4008048	      2548	syntax.c	FUNCTION_30	IF_1	CALL_5
0x4008048	    0x488983880000	             mov qword [rbx + 0x88], rax	      2548	syntax.c	FUNCTION_30	IF_1	CALL_5
0x400804f	        0x807d0002	                       cmp byte [rbp], 2	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4008053	            0x7520	                           jne 0x4008075	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4008055	        0xf6452404	               test byte [rbp + 0x24], 4	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4008059	            0x751a	                           jne 0x4008075	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x400805b	      0xba01000000	                              mov edx, 1	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_6
0x4008060	    0x8b3500000000	            mov esi, dword [0x04008066] 	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_6
0x4008066	          0x4889df	                            mov rdi, rbx	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_6
0x4008069	      0xe80691ffff	                  call sym.update_si_end	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_6
0x400806e	      0xe85e80ffff	                  call sym.check_keepend	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_7
0x4008073	            0xeb5d	                           jmp 0x40080d2	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_7
0x4008075	    0x488b05000000	            mov rax, qword [0x0400807c] 	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x400807c	    0x488b15000000	            mov rdx, qword [0x04008083] 	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008083	        0x48894318	             mov qword [rbx + 0x18], rax	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008087	        0x48895320	             mov qword [rbx + 0x20], rdx	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x400808b	    0x488b05000000	            mov rax, qword [0x04008092] 	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008092	    0x488b15000000	            mov rdx, qword [0x04008099] 	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008099	        0x48894338	             mov qword [rbx + 0x38], rax	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x400809d	        0x48895340	             mov qword [rbx + 0x40], rdx	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x40080a1	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2559	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x40080a8	    0x488b05000000	            mov rax, qword [0x040080af] 	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x40080af	        0x48094368	              or qword [rbx + 0x68], rax	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x40080b3	    0x488b05000000	            mov rax, qword [0x040080ba] 	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x40080ba	    0x488b15000000	            mov rdx, qword [0x040080c1] 	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x40080c1	        0x48894348	             mov qword [rbx + 0x48], rax	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x40080c5	        0x48895350	             mov qword [rbx + 0x50], rdx	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x40080c9	    0x8b0500000000	            mov eax, dword [0x040080cf] 	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x40080cf	          0x894358	             mov dword [rbx + 0x58], eax	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x40080d2	    0x833d00000000	               cmp dword [0x040080d9], 0	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x40080d9	            0x7915	                           jns 0x40080f0	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x40080db	        0xf6436904	               test byte [rbx + 0x69], 4	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x40080df	            0x740f	                            je 0x40080f0	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x40080e1	    0x8b0500000000	            mov eax, dword [0x040080e7] 	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x40080e7	          0x83e801	                              sub eax, 1	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x40080ea	    0x890500000000	            mov dword [0x040080f0], eax 	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x40080f0	      0xe8dc7fffff	                  call sym.check_keepend	      2566	syntax.c	FUNCTION_30	IF_1	CALL_8
0x40080f5	    0x8b0500000000	            mov eax, dword [0x040080fb] 	      2567	syntax.c	FUNCTION_30	IF_1	CALL_9
0x40080fb	          0x8d78ff	                      lea edi, [rax - 1]	      2567	syntax.c	FUNCTION_30	IF_1	CALL_9
0x40080fe	      0xe882faffff	                 call sym.update_si_attr	      2567	syntax.c	FUNCTION_30	IF_1	CALL_9
0x4008103	        0x807d0002	                       cmp byte [rbp], 2	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008107	     0xf85eb000000	                           jne 0x40081f8	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x400810d	      0x66837d0200	                   cmp word [rbp + 2], 0	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008112	     0xf84e0000000	                            je 0x40081f8	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008118	        0x488b6b68	            mov rbp, qword [rbx + 0x68] 	      2570	syntax.c	FUNCTION_30	IF_1
0x400811c	    0x8b3d00000000	            mov edi, dword [0x04008122] 	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_10
0x4008122	      0xe8ef8affff	             call sym.push_current_state	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_10
0x4008127	          0x83f801	                              cmp eax, 1	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_10
0x400812a	     0xf85c8000000	                           jne 0x40081f8	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_10
0x4008130	            0x89e8	                            mov eax, ebp	      2570	syntax.c	FUNCTION_30	IF_1
0x4008132	      0x2500000600	                        and eax, 0x60000	      2570	syntax.c	FUNCTION_30	IF_1
0x4008137	    0x486315000000	         movsxd rdx, dword [0x0400813e] 	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x400813e	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x4008142	        0x48c1e204	                              shl rdx, 4	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x4008146	    0x488b0d000000	            mov rcx, qword [0x0400814d] 	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x400814d	    0x488d9c1170ff	             lea rbx, [rcx + rdx - 0x90]	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x4008155	    0x488b35000000	            mov rsi, qword [0x0400815c] 	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x400815c	    0x488b3d000000	            mov rdi, qword [0x04008163] 	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008163	        0x48897328	             mov qword [rbx + 0x28], rsi	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008167	        0x48897b30	             mov qword [rbx + 0x30], rdi	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x400816b	    0x8b1500000000	            mov edx, dword [0x04008171] 	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008171	          0x895310	             mov dword [rbx + 0x10], edx	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008174	    0x488b15000000	            mov rdx, qword [0x0400817b] 	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x400817b	          0x89530c	              mov dword [rbx + 0xc], edx	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x400817e	    0x488b35000000	            mov rsi, qword [0x04008185] 	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008185	    0x488b3d000000	            mov rdi, qword [0x0400818c] 	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x400818c	        0x48897318	             mov qword [rbx + 0x18], rsi	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008190	        0x48897b20	             mov qword [rbx + 0x20], rdi	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008194	        0x48897338	             mov qword [rbx + 0x38], rsi	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008198	        0x48897b40	             mov qword [rbx + 0x40], rdi	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x400819c	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2586	syntax.c	FUNCTION_30	IF_1	IF_5
0x40081a3	    0xc74358000000	               mov dword [rbx + 0x58], 0	      2587	syntax.c	FUNCTION_30	IF_1	IF_5
0x40081aa	    0x8b1500000000	            mov edx, dword [0x040081b0] 	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x40081b0	          0x8d4a01	                      lea ecx, [rdx + 1]	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x40081b3	    0x890d00000000	            mov dword [0x040081b9], ecx 	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x40081b9	          0x895370	             mov dword [rbx + 0x70], edx	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x40081bc	    0xf7c500000400	                       test ebp, 0x40000	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x40081c2	            0x750b	                           jne 0x40081cf	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x40081c4	          0x83c840	                            or eax, 0x40	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x40081c7	            0x4898	                                    cdqe	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x40081c9	        0x48894368	             mov qword [rbx + 0x68], rax	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x40081cd	            0xeb0b	                           jmp 0x40081da	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x40081cf	       0xd40000200	                         or eax, 0x20040	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x40081d4	            0x4898	                                    cdqe	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x40081d6	        0x48894368	             mov qword [rbx + 0x68], rax	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x40081da	    0x48c783800000	               mov qword [rbx + 0x80], 0	      2595	syntax.c	FUNCTION_30	IF_1	IF_5
0x40081e5	      0xe8e77effff	                  call sym.check_keepend	      2596	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_12
0x40081ea	    0x8b0500000000	            mov eax, dword [0x040081f0] 	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_13
0x40081f0	          0x8d78ff	                      lea edi, [rax - 1]	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_13
0x40081f3	      0xe88df9ffff	                 call sym.update_si_attr	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_13
0x40081f8	    0xc70500000000	     mov dword [0x04008202], 0xffffffff 	      2601	syntax.c	FUNCTION_30
0x4008202	          0x4889d8	                            mov rax, rbx	      2604	syntax.c	FUNCTION_30
0x4008205	        0x4883c408	                              add rsp, 8	      2604	syntax.c	FUNCTION_30
0x4008209	              0x5b	                                 pop rbx	      2604	syntax.c	FUNCTION_30
0x400820a	              0x5d	                                 pop rbp	      2604	syntax.c	FUNCTION_30
0x400820b	            0x415c	                                 pop r12	      2604	syntax.c	FUNCTION_30
0x400820d	            0x415d	                                 pop r13	      2604	syntax.c	FUNCTION_30
0x400820f	              0xc3	                                     ret	      2604	syntax.c	FUNCTION_30
syn_stack_free_all	IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,1	39
0x40034b5	              0x55	                                push rbp	      1204	syntax.c	FUNCTION_12
0x40034b6	              0x53	                                push rbx	      1204	syntax.c	FUNCTION_12
0x40034b7	        0x4883ec08	                              sub rsp, 8	      1204	syntax.c	FUNCTION_12
0x40034bb	          0x4889fd	                            mov rbp, rdi	      1204	syntax.c	FUNCTION_12
0x40034be	    0x488bbf100300	           mov rdi, qword [rdi + 0x310] 	      1190	syntax.c	FUNCTION_11	IF_1
0x40034c5	          0x4885ff	                           test rdi, rdi	      1190	syntax.c	FUNCTION_11	IF_1
0x40034c8	            0x7442	                            je 0x400350c	      1190	syntax.c	FUNCTION_11	IF_1
0x40034ca	    0x488b9d200300	           mov rbx, qword [rbp + 0x320] 	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40034d1	          0x4885db	                           test rbx, rbx	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40034d4	            0x741c	                            je 0x40034f2	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40034d6	          0x4889df	                            mov rdi, rbx	      1193	syntax.c	FUNCTION_11	IF_1	CALL_1
0x40034d9	      0xe8f7cfffff	                call sym.clear_syn_state	      1193	syntax.c	FUNCTION_11	IF_1	CALL_1
0x40034de	          0x488b1b	                    mov rbx, qword [rbx]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40034e1	          0x4885db	                           test rbx, rbx	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40034e4	            0x75f0	                           jne 0x40034d6	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40034e6	    0x488bbd100300	           mov rdi, qword [rbp + 0x310] 	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40034ed	          0x4885ff	                           test rdi, rdi	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40034f0	            0x7410	                            je 0x4003502	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40034f2	      0xe800000000	                          call 0x40034f7	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40034f7	    0x48c785100300	              mov qword [rbp + 0x310], 0	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x4003502	    0xc78518030000	              mov dword [rbp + 0x318], 0	      1195	syntax.c	FUNCTION_11	IF_1
0x400350c	    0x488b1d000000	            mov rbx, qword [0x04003513] 	      1213	syntax.c	FUNCTION_12
0x4003513	          0x4885db	                           test rbx, rbx	      1213	syntax.c	FUNCTION_12
0x4003516	            0x7423	                            je 0x400353b	      1213	syntax.c	FUNCTION_12
0x4003518	        0x483b6b10	            cmp rbp, qword [rbx + 0x10] 	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x400351c	            0x7514	                           jne 0x4003532	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x400351e	          0x4889df	                            mov rdi, rbx	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4003521	      0xe800000000	                          call 0x4003526	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4003526	            0x85c0	                           test eax, eax	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4003528	            0x7408	                            je 0x4003532	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x400352a	          0x4889df	                            mov rdi, rbx	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x400352d	      0xe800000000	                          call 0x4003532	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x4003532	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1213	syntax.c	FUNCTION_12
0x4003536	          0x4885db	                           test rbx, rbx	      1213	syntax.c	FUNCTION_12
0x4003539	            0x75dd	                           jne 0x4003518	      1213	syntax.c	FUNCTION_12
0x400353b	        0x4883c408	                              add rsp, 8	      1219	syntax.c	FUNCTION_12
0x400353f	              0x5b	                                 pop rbx	      1219	syntax.c	FUNCTION_12
0x4003540	              0x5d	                                 pop rbp	      1219	syntax.c	FUNCTION_12
0x4003541	              0xc3	                                     ret	      1219	syntax.c	FUNCTION_12
reset_synblock	IF,1:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	16
0x400373c	          0x4889f8	                            mov rax, rdi	      3665	syntax.c	FUNCTION_50
0x400373f	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      3666	syntax.c	FUNCTION_50	IF_1
0x4003743	        0x488b4808	                mov rcx, qword [rax + 8]	      3666	syntax.c	FUNCTION_50	IF_1
0x4003747	    0x488d91681700	                 lea rdx, [rcx + 0x1768]	      3666	syntax.c	FUNCTION_50	IF_1
0x400374e	          0x4839d7	                            cmp rdi, rdx	      3666	syntax.c	FUNCTION_50	IF_1
0x4003751	            0x7421	                            je 0x4003774	      3666	syntax.c	FUNCTION_50	IF_1
0x4003753	              0x53	                                push rbx	      3665	syntax.c	FUNCTION_50
0x4003754	          0x4889c3	                            mov rbx, rax	      3665	syntax.c	FUNCTION_50
0x4003757	      0xe800000000	                          call 0x400375c	      3668	syntax.c	FUNCTION_50	IF_1	CALL_1
0x400375c	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x4003760	      0xe800000000	                          call 0x4003765	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x4003765	        0x488b4308	                mov rax, qword [rbx + 8]	      3670	syntax.c	FUNCTION_50	IF_1
0x4003769	    0x480568170000	                         add rax, 0x1768	      3670	syntax.c	FUNCTION_50	IF_1
0x400376f	        0x48894310	             mov qword [rbx + 0x10], rax	      3670	syntax.c	FUNCTION_50	IF_1
0x4003773	              0x5b	                                 pop rbx	      3672	syntax.c	FUNCTION_50
0x4003774	            0xf3c3	                                     ret	      3672	syntax.c	FUNCTION_50
syn_cmd_sync	IF,27:CALL,41:FOR,0:ELSE,13:SWITCH,0:WHILE,1:DO,0:functions,0	317
0x400aacd	            0x4156	                                push r14	      5841	syntax.c	FUNCTION_91
0x400aacf	            0x4155	                                push r13	      5841	syntax.c	FUNCTION_91
0x400aad1	            0x4154	                                push r12	      5841	syntax.c	FUNCTION_91
0x400aad3	              0x55	                                push rbp	      5841	syntax.c	FUNCTION_91
0x400aad4	              0x53	                                push rbx	      5841	syntax.c	FUNCTION_91
0x400aad5	        0x4883ec10	                           sub rsp, 0x10	      5841	syntax.c	FUNCTION_91
0x400aad9	          0x4989fd	                            mov r13, rdi	      5841	syntax.c	FUNCTION_91
0x400aadc	    0x64488b042528	                mov rax, qword fs:[0x28]	      5841	syntax.c	FUNCTION_91
0x400aae5	      0x4889442408	                mov qword [rsp + 8], rax	      5841	syntax.c	FUNCTION_91
0x400aaea	            0x31c0	                            xor eax, eax	      5841	syntax.c	FUNCTION_91
0x400aaec	          0x488b2f	                    mov rbp, qword [rdi]	      5842	syntax.c	FUNCTION_91
0x400aaef	         0xfb67d00	                   movzx edi, byte [rbp]	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400aaf3	      0xe800000000	                          call 0x400aaf8	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400aaf8	      0xbb00000000	                              mov ebx, 0	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400aafd	            0x85c0	                           test eax, eax	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400aaff	     0xf8472040000	                            je 0x400af77	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400ab05	      0xbe01000000	                              mov esi, 1	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400ab0a	          0x4c89ef	                            mov rdi, r13	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400ab0d	      0xe862fcffff	                   call sym.syn_cmd_list	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400ab12	      0xe9d2040000	                           jmp 0x400afe9	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400ab17	          0x4889ef	                            mov rdi, rbp	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x400ab1a	      0xe800000000	                          call 0x400ab1f	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x400ab1f	        0x48890424	                    mov qword [rsp], rax	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x400ab23	          0x4889c7	                            mov rdi, rax	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x400ab26	      0xe800000000	                          call 0x400ab2b	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x400ab2b	          0x4989c4	                            mov r12, rax	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x400ab2e	          0x4889df	                            mov rdi, rbx	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0x400ab31	      0xe800000000	                          call 0x400ab36	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0x400ab36	        0x488b3424	                    mov rsi, qword [rsp]	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400ab3a	          0x4829ee	                            sub rsi, rbp	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400ab3d	          0x4889ef	                            mov rdi, rbp	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400ab40	      0xe800000000	                          call 0x400ab45	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400ab45	          0x4889c3	                            mov rbx, rax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400ab48	      0xbf00000000	                              mov edi, 0	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400ab4d	      0xb909000000	                              mov ecx, 9	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400ab52	          0x4889c6	                            mov rsi, rax	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400ab55	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400ab57	           0xf97c2	                                 seta dl	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400ab5a	           0xf92c0	                                 setb al	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400ab5d	            0x38c2	                              cmp dl, al	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400ab5f	     0xf8597000000	                           jne 0x400abfc	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400ab65	      0x41837d3000	               cmp dword [r13 + 0x30], 0	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400ab6a	            0x7512	                           jne 0x400ab7e	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400ab6c	    0x488b05000000	            mov rax, qword [0x0400ab73] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400ab73	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400ab77	    0x83889c020000	               or dword [rax + 0x29c], 1	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400ab7e	      0x410fb63c24	                   movzx edi, byte [r12]	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400ab83	      0xe800000000	                          call 0x400ab88	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400ab88	            0x85c0	                           test eax, eax	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400ab8a	            0x7544	                           jne 0x400abd0	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400ab8c	          0x4c89e7	                            mov rdi, r12	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x400ab8f	      0xe800000000	                          call 0x400ab94	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x400ab94	        0x48890424	                    mov qword [rsp], rax	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x400ab98	      0x41837d3000	               cmp dword [r13 + 0x30], 0	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400ab9d	            0x7520	                           jne 0x400abbf	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400ab9f	    0x488b15000000	            mov rdx, qword [0x0400aba6] 	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400aba6	        0x488b6a10	            mov rbp, qword [rdx + 0x10] 	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400abaa	          0x4c29e0	                            sub rax, r12	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400abad	          0x4889c6	                            mov rsi, rax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400abb0	          0x4c89e7	                            mov rdi, r12	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400abb3	      0xe800000000	                          call 0x400abb8	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400abb8	    0x668985a00200	              mov word [rbp + 0x2a0], ax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400abbf	        0x488b3c24	                    mov rdi, qword [rsp]	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400abc3	      0xe800000000	                          call 0x400abc8	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400abc8	          0x4989c4	                            mov r12, rax	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400abcb	      0xe9a4030000	                           jmp 0x400af74	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400abd0	      0x41837d3000	               cmp dword [r13 + 0x30], 0	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400abd5	     0xf8599030000	                           jne 0x400af74	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400abdb	    0x488b05000000	            mov rax, qword [0x0400abe2] 	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400abe2	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400abe6	      0xbf00000000	                              mov edi, 0	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400abeb	      0xe800000000	                          call 0x400abf0	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400abf0	    0x668985a00200	              mov word [rbp + 0x2a0], ax	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400abf7	      0xe978030000	                           jmp 0x400af74	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400abfc	      0xbf00000000	                              mov edi, 0	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400ac01	      0xb905000000	                              mov ecx, 5	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400ac06	          0x4889de	                            mov rsi, rbx	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400ac09	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400ac0b	           0xf97c2	                                 seta dl	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400ac0e	           0xf92c0	                                 setb al	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400ac11	            0x38c2	                              cmp dl, al	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400ac13	            0x744f	                            je 0x400ac64	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400ac15	      0xbf00000000	                              mov edi, 0	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400ac1a	      0xb908000000	                              mov ecx, 8	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400ac1f	          0x4889de	                            mov rsi, rbx	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400ac22	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400ac24	           0xf97c2	                                 seta dl	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400ac27	           0xf92c0	                                 setb al	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400ac2a	            0x38c2	                              cmp dl, al	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400ac2c	            0x7436	                            je 0x400ac64	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400ac2e	      0xbf00000000	                              mov edi, 0	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400ac33	      0xb908000000	                              mov ecx, 8	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400ac38	          0x4889de	                            mov rsi, rbx	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400ac3b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400ac3d	           0xf97c2	                                 seta dl	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400ac40	           0xf92c0	                                 setb al	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400ac43	            0x38c2	                              cmp dl, al	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400ac45	            0x741d	                            je 0x400ac64	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400ac47	      0xbf00000000	                              mov edi, 0	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400ac4c	      0xb90a000000	                            mov ecx, 0xa	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400ac51	          0x4889de	                            mov rsi, rbx	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400ac54	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400ac56	           0xf97c2	                                 seta dl	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400ac59	           0xf92c0	                                 setb al	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400ac5c	            0x38c2	                              cmp dl, al	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400ac5e	     0xf85a8000000	                           jne 0x400ad0c	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400ac64	        0x807b0453	                cmp byte [rbx + 4], 0x53	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400ac68	            0x750a	                           jne 0x400ac74	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400ac6a	        0x488d4306	                      lea rax, [rbx + 6]	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400ac6e	        0x48890424	                    mov qword [rsp], rax	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400ac72	            0xeb17	                           jmp 0x400ac8b	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400ac74	          0x803b4c	                    cmp byte [rbx], 0x4c	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400ac77	            0x750a	                           jne 0x400ac83	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400ac79	        0x488d430b	                    lea rax, [rbx + 0xb]	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400ac7d	        0x48890424	                    mov qword [rsp], rax	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400ac81	            0xeb08	                           jmp 0x400ac8b	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400ac83	        0x488d4309	                      lea rax, [rbx + 9]	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0x400ac87	        0x48890424	                    mov qword [rsp], rax	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0x400ac8b	        0x488b0424	                    mov rax, qword [rsp]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400ac8f	        0x8078ff3d	                cmp byte [rax - 1], 0x3d	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400ac93	     0xf8529030000	                           jne 0x400afc2	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400ac99	           0xfb600	                   movzx eax, byte [rax]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400ac9c	          0x83e830	                           sub eax, 0x30	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400ac9f	          0x83f809	                              cmp eax, 9	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400aca2	     0xf871a030000	                            ja 0x400afc2	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400aca8	          0x4889e7	                            mov rdi, rsp	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0x400acab	      0xe800000000	                          call 0x400acb0	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0x400acb0	      0x41837d3000	               cmp dword [r13 + 0x30], 0	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400acb5	     0xf85b9020000	                           jne 0x400af74	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400acbb	        0x807b0442	                cmp byte [rbx + 4], 0x42	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400acbf	            0x7517	                           jne 0x400acd8	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400acc1	    0x488b15000000	            mov rdx, qword [0x0400acc8] 	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400acc8	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400accc	    0x488982b80200	            mov qword [rdx + 0x2b8], rax	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400acd3	      0xe99c020000	                           jmp 0x400af74	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400acd8	        0x807b0141	                cmp byte [rbx + 1], 0x41	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400acdc	            0x7517	                           jne 0x400acf5	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400acde	    0x488b15000000	            mov rdx, qword [0x0400ace5] 	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400ace5	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400ace9	    0x488982b00200	            mov qword [rdx + 0x2b0], rax	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400acf0	      0xe97f020000	                           jmp 0x400af74	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400acf5	    0x488b15000000	            mov rdx, qword [0x0400acfc] 	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x400acfc	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x400ad00	    0x488982a80200	            mov qword [rdx + 0x2a8], rax	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x400ad07	      0xe968020000	                           jmp 0x400af74	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x400ad0c	      0xbf00000000	                              mov edi, 0	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400ad11	      0xb90a000000	                            mov ecx, 0xa	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400ad16	          0x4889de	                            mov rsi, rbx	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400ad19	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400ad1b	           0xf97c2	                                 seta dl	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400ad1e	           0xf92c0	                                 setb al	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400ad21	            0x38c2	                              cmp dl, al	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400ad23	            0x7535	                           jne 0x400ad5a	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400ad25	      0x41837d3000	               cmp dword [r13 + 0x30], 0	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400ad2a	     0xf8544020000	                           jne 0x400af74	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400ad30	    0x488b05000000	            mov rax, qword [0x0400ad37] 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400ad37	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400ad3b	    0x48c782a80200	    mov qword [rdx + 0x2a8], 0x7fffffff 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400ad46	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400ad4a	    0x48c780b00200	              mov qword [rax + 0x2b0], 0	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400ad55	      0xe91a020000	                           jmp 0x400af74	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400ad5a	      0xbf00000000	                              mov edi, 0	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400ad5f	      0xb909000000	                              mov ecx, 9	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400ad64	          0x4889de	                            mov rsi, rbx	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400ad67	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400ad69	           0xf97c2	                                 seta dl	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400ad6c	           0xf92c0	                                 setb al	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400ad6f	            0x38c2	                              cmp dl, al	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400ad71	     0xf857e010000	                           jne 0x400aef5	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400ad77	      0x410fb60424	                   movzx eax, byte [r12]	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400ad7c	            0x84c0	                             test al, al	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400ad7e	     0xf843e020000	                            je 0x400afc2	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400ad84	    0x488b15000000	            mov rdx, qword [0x0400ad8b] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400ad8b	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400ad8f	    0x4883bac00200	              cmp qword [rdx + 0x2c0], 0	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400ad97	            0x7421	                            je 0x400adba	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400ad99	      0xba05000000	                              mov edx, 5	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400ad9e	      0xbe00000000	                              mov esi, 0	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400ada3	      0xbf00000000	                              mov edi, 0	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400ada8	      0xe800000000	                          call 0x400adad	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400adad	          0x4889c7	                            mov rdi, rax	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400adb0	      0xe800000000	                          call 0x400adb5	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400adb5	      0xe9fe010000	                           jmp 0x400afb8	      5924	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400adba	      0x4d8d742401	                      lea r14, [r12 + 1]	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400adbf	           0xfb6f0	                           movzx esi, al	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400adc2	      0xb900000000	                              mov ecx, 0	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400adc7	      0xba01000000	                              mov edx, 1	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400adcc	          0x4c89f7	                            mov rdi, r14	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400adcf	      0xe800000000	                          call 0x400add4	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400add4	        0x48890424	                    mov qword [rsp], rax	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400add8	      0x410fb60c24	                   movzx ecx, byte [r12]	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400addd	            0x3808	                      cmp byte [rax], cl	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400addf	     0xf85dd010000	                           jne 0x400afc2	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400ade5	      0x41837d3000	               cmp dword [r13 + 0x30], 0	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400adea	     0xf85f3000000	                           jne 0x400aee3	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400adf0	    0x488b15000000	            mov rdx, qword [0x0400adf7] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400adf7	        0x488b6a10	            mov rbp, qword [rdx + 0x10] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400adfb	          0x4c29e0	                            sub rax, r12	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400adfe	          0x8d70ff	                      lea esi, [rax - 1]	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400ae01	          0x4c89f7	                            mov rdi, r14	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400ae04	      0xe800000000	                          call 0x400ae09	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400ae09	    0x488985c00200	           mov qword [rbp + 0x2c0], rax 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400ae10	          0x4885c0	                           test rax, rax	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400ae13	     0xf849f010000	                            je 0x400afb8	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400ae19	    0x488b05000000	            mov rax, qword [0x0400ae20] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400ae20	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400ae24	    0x8b8a58020000	           mov ecx, dword [rdx + 0x258] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400ae2a	    0x898a00030000	            mov dword [rdx + 0x300], ecx	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400ae30	    0x4c8b25000000	            mov r12, qword [0x0400ae37] 	      5945	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400ae37	    0x48c705000000	               mov qword [0x0400ae42], 0	      5946	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400ae42	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400ae46	    0x488bbdc00200	           mov rdi, qword [rbp + 0x2c0] 	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400ae4d	      0xbe01000000	                              mov esi, 1	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400ae52	      0xe800000000	                          call 0x400ae57	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400ae57	    0x488985c80200	           mov qword [rbp + 0x2c8], rax 	      5947	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400ae5e	    0x4c8925000000	            mov qword [0x0400ae65], r12 	      5949	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400ae65	    0x488b05000000	            mov rax, qword [0x0400ae6c] 	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0x400ae6c	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0x400ae70	    0x488dbdd00200	                  lea rdi, [rbp + 0x2d0]	      6691	syntax.c	FUNCTION_108	CALL_1
0x400ae77	      0xe800000000	                          call 0x400ae7c	      6691	syntax.c	FUNCTION_108	CALL_1
0x400ae7c	    0x488dbde00200	                  lea rdi, [rbp + 0x2e0]	      6692	syntax.c	FUNCTION_108	CALL_2
0x400ae83	      0xe800000000	                          call 0x400ae88	      6692	syntax.c	FUNCTION_108	CALL_2
0x400ae88	    0x48c785f00200	              mov qword [rbp + 0x2f0], 0	      6693	syntax.c	FUNCTION_108
0x400ae93	    0x48c785f80200	              mov qword [rbp + 0x2f8], 0	      6694	syntax.c	FUNCTION_108
0x400ae9e	    0x488b05000000	            mov rax, qword [0x0400aea5] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400aea5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400aea9	    0x4883b8c80200	              cmp qword [rax + 0x2c8], 0	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400aeb1	            0x7530	                           jne 0x400aee3	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400aeb3	    0x488bb8c00200	           mov rdi, qword [rax + 0x2c0] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400aeba	          0x4885ff	                           test rdi, rdi	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400aebd	     0xf84f5000000	                            je 0x400afb8	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400aec3	      0xe800000000	                          call 0x400aec8	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400aec8	    0x488b05000000	            mov rax, qword [0x0400aecf] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400aecf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400aed3	    0x48c780c00200	              mov qword [rax + 0x2c0], 0	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400aede	      0xe9d5000000	                           jmp 0x400afb8	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400aee3	        0x488b0424	                    mov rax, qword [rsp]	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400aee7	        0x488d7801	                      lea rdi, [rax + 1]	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400aeeb	      0xe800000000	                          call 0x400aef0	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400aef0	          0x4989c4	                            mov r12, rax	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400aef3	            0xeb7f	                           jmp 0x400af74	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400aef5	        0x4d896500	                    mov qword [r13], r12	      5965	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0x400aef9	      0xbf00000000	                              mov edi, 0	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400aefe	      0xb906000000	                              mov ecx, 6	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400af03	          0x4889de	                            mov rsi, rbx	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400af06	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400af08	           0xf97c2	                                 seta dl	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400af0b	           0xf92c0	                                 setb al	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400af0e	            0x38c2	                              cmp dl, al	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400af10	            0x7512	                           jne 0x400af24	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400af12	      0xbe01000000	                              mov esi, 1	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400af17	          0x4c89ef	                            mov rdi, r13	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400af1a	      0xe864c3ffff	                  call sym.syn_cmd_match	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400af1f	      0xe994000000	                           jmp 0x400afb8	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400af24	      0xbf00000000	                              mov edi, 0	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400af29	      0xb907000000	                              mov ecx, 7	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400af2e	          0x4889de	                            mov rsi, rbx	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400af31	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400af33	           0xf97c2	                                 seta dl	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400af36	           0xf92c0	                                 setb al	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400af39	            0x38c2	                              cmp dl, al	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400af3b	            0x750f	                           jne 0x400af4c	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400af3d	      0xbe01000000	                              mov esi, 1	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400af42	          0x4c89ef	                            mov rdi, r13	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400af45	      0xe812bbffff	                 call sym.syn_cmd_region	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400af4a	            0xeb6c	                           jmp 0x400afb8	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400af4c	      0xbf00000000	                              mov edi, 0	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400af51	      0xb906000000	                              mov ecx, 6	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400af56	          0x4889de	                            mov rsi, rbx	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400af59	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400af5b	           0xf97c2	                                 seta dl	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400af5e	           0xf92c0	                                 setb al	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400af61	            0x38c2	                              cmp dl, al	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400af63	            0x755d	                           jne 0x400afc2	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400af65	      0xbe01000000	                              mov esi, 1	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400af6a	          0x4c89ef	                            mov rdi, r13	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400af6d	      0xe85da9ffff	                  call sym.syn_cmd_clear	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400af72	            0xeb44	                           jmp 0x400afb8	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400af74	          0x4c89e5	                            mov rbp, r12	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400af77	         0xfb67d00	                   movzx edi, byte [rbp]	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400af7b	      0xe800000000	                          call 0x400af80	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400af80	            0x85c0	                           test eax, eax	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400af82	     0xf848ffbffff	                            je 0x400ab17	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400af88	          0x4889df	                            mov rdi, rbx	      5979	syntax.c	FUNCTION_91	CALL_36
0x400af8b	      0xe800000000	                          call 0x400af90	      5979	syntax.c	FUNCTION_91	CALL_36
0x400af90	          0x4889ef	                            mov rdi, rbp	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400af93	      0xe800000000	                          call 0x400af98	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400af98	        0x49894508	                mov qword [r13 + 8], rax	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400af9c	      0xbf23000000	                           mov edi, 0x23	      5985	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_40
0x400afa1	      0xe800000000	                          call 0x400afa6	      5985	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_40
0x400afa6	    0x488b05000000	            mov rax, qword [0x0400afad] 	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x400afad	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x400afb1	      0xe800000000	                          call 0x400afb6	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x400afb6	            0xeb31	                           jmp 0x400afe9	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x400afb8	          0x4889df	                            mov rdi, rbx	      5979	syntax.c	FUNCTION_91	CALL_36
0x400afbb	      0xe800000000	                          call 0x400afc0	      5979	syntax.c	FUNCTION_91	CALL_36
0x400afc0	            0xeb27	                           jmp 0x400afe9	      5979	syntax.c	FUNCTION_91	CALL_36
0x400afc2	          0x4889df	                            mov rdi, rbx	      5979	syntax.c	FUNCTION_91	CALL_36
0x400afc5	      0xe800000000	                          call 0x400afca	      5979	syntax.c	FUNCTION_91	CALL_36
0x400afca	      0xba05000000	                              mov edx, 5	      5981	syntax.c	FUNCTION_91	CALL_38
0x400afcf	      0xbe00000000	                              mov esi, 0	      5981	syntax.c	FUNCTION_91	CALL_38
0x400afd4	      0xbf00000000	                              mov edi, 0	      5981	syntax.c	FUNCTION_91	CALL_38
0x400afd9	      0xe800000000	                          call 0x400afde	      5981	syntax.c	FUNCTION_91	CALL_38
0x400afde	          0x4889ee	                            mov rsi, rbp	      5981	syntax.c	FUNCTION_91	CALL_38
0x400afe1	          0x4889c7	                            mov rdi, rax	      5981	syntax.c	FUNCTION_91	CALL_38
0x400afe4	      0xe800000000	                          call 0x400afe9	      5981	syntax.c	FUNCTION_91	CALL_38
0x400afe9	      0x488b442408	                mov rax, qword [rsp + 8]	      5988	syntax.c	FUNCTION_91
0x400afee	    0x644833042528	                xor rax, qword fs:[0x28]	      5988	syntax.c	FUNCTION_91
0x400aff7	            0x7405	                            je 0x400affe	      5988	syntax.c	FUNCTION_91
0x400aff9	      0xe800000000	                          call 0x400affe	      5988	syntax.c	FUNCTION_91
0x400affe	        0x4883c410	                           add rsp, 0x10	      5988	syntax.c	FUNCTION_91
0x400b002	              0x5b	                                 pop rbx	      5988	syntax.c	FUNCTION_91
0x400b003	              0x5d	                                 pop rbp	      5988	syntax.c	FUNCTION_91
0x400b004	            0x415c	                                 pop r12	      5988	syntax.c	FUNCTION_91
0x400b006	            0x415d	                                 pop r13	      5988	syntax.c	FUNCTION_91
0x400b008	            0x415e	                                 pop r14	      5988	syntax.c	FUNCTION_91
0x400b00a	              0xc3	                                     ret	      5988	syntax.c	FUNCTION_91
get_id_list	IF,25:CALL,41:FOR,3:ELSE,9:SWITCH,0:WHILE,1:DO,0:functions,0	339
0x4005e49	            0x4157	                                push r15	      6004	syntax.c	FUNCTION_92
0x4005e4b	            0x4156	                                push r14	      6004	syntax.c	FUNCTION_92
0x4005e4d	            0x4155	                                push r13	      6004	syntax.c	FUNCTION_92
0x4005e4f	            0x4154	                                push r12	      6004	syntax.c	FUNCTION_92
0x4005e51	              0x55	                                push rbp	      6004	syntax.c	FUNCTION_92
0x4005e52	              0x53	                                push rbx	      6004	syntax.c	FUNCTION_92
0x4005e53	    0x4881ecf80000	                           sub rsp, 0xf8	      6004	syntax.c	FUNCTION_92
0x4005e5a	      0x48897c2408	                mov qword [rsp + 8], rdi	      6004	syntax.c	FUNCTION_92
0x4005e5f	      0x4889542420	             mov qword [rsp + 0x20], rdx	      6004	syntax.c	FUNCTION_92
0x4005e64	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      6004	syntax.c	FUNCTION_92
0x4005e68	    0x64488b042528	                mov rax, qword fs:[0x28]	      6004	syntax.c	FUNCTION_92
0x4005e71	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      6004	syntax.c	FUNCTION_92
0x4005e79	            0x31c0	                            xor eax, eax	      6004	syntax.c	FUNCTION_92
0x4005e7b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      6010	syntax.c	FUNCTION_92
0x4005e84	    0xc74424280000	               mov dword [rsp + 0x28], 0	      6009	syntax.c	FUNCTION_92
0x4005e8c	    0xc74424040100	                  mov dword [rsp + 4], 1	      6024	syntax.c	FUNCTION_92	FOR_1
0x4005e94	          0x4863c6	                         movsxd rax, esi	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x4005e97	      0x4889442418	             mov qword [rsp + 0x18], rax	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x4005e9c	    0x48bd01020000	              movabs rbp, 0x100100000201	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4005ea6	      0x488b442408	                mov rax, qword [rsp + 8]	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x4005eab	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x4005eb0	          0x480338	                    add rdi, qword [rax]	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x4005eb3	      0xe800000000	                          call 0x4005eb8	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x4005eb8	          0x4989c7	                            mov r15, rax	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x4005ebb	          0x80383d	                    cmp byte [rax], 0x3d	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0x4005ebe	            0x742c	                            je 0x4005eec	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0x4005ec0	      0x488b442408	                mov rax, qword [rsp + 8]	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4005ec5	          0x488b18	                    mov rbx, qword [rax]	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4005ec8	      0xba05000000	                              mov edx, 5	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4005ecd	      0xbe00000000	                              mov esi, 0	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4005ed2	      0xbf00000000	                              mov edi, 0	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4005ed7	      0xe800000000	                          call 0x4005edc	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4005edc	          0x4889de	                            mov rsi, rbx	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4005edf	          0x4889c7	                            mov rdi, rax	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4005ee2	      0xe800000000	                          call 0x4005ee7	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4005ee7	      0xe9ed030000	                           jmp 0x40062d9	      6033	syntax.c	FUNCTION_92	FOR_1	IF_1
0x4005eec	        0x488d7801	                      lea rdi, [rax + 1]	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x4005ef0	      0xe800000000	                          call 0x4005ef5	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x4005ef5	          0x4989c7	                            mov r15, rax	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x4005ef8	           0xfb638	                   movzx edi, byte [rax]	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x4005efb	      0xe800000000	                          call 0x4005f00	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x4005f00	            0x85c0	                           test eax, eax	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x4005f02	     0xf844e030000	                            je 0x4006256	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x4005f08	      0x488b442408	                mov rax, qword [rsp + 8]	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4005f0d	          0x488b18	                    mov rbx, qword [rax]	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4005f10	      0xba05000000	                              mov edx, 5	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4005f15	      0xbe00000000	                              mov esi, 0	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4005f1a	      0xbf00000000	                              mov edi, 0	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4005f1f	      0xe800000000	                          call 0x4005f24	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4005f24	          0x4889de	                            mov rsi, rbx	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4005f27	          0x4889c7	                            mov rdi, rax	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4005f2a	      0xe800000000	                          call 0x4005f2f	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4005f2f	      0xe9a5030000	                           jmp 0x40062d9	      6039	syntax.c	FUNCTION_92	FOR_1	IF_2
0x4005f34	          0x4c89fb	                            mov rbx, r15	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4005f37	        0x4883c301	                              add rbx, 1	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4005f3b	           0xfb603	                   movzx eax, byte [rbx]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4005f3e	            0x3c2c	                            cmp al, 0x2c	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4005f40	            0x77f5	                            ja 0x4005f37	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4005f42	        0x480fa3c5	                             bt rbp, rax	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4005f46	            0x73ef	                           jae 0x4005f37	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4005f48	          0x4989dc	                            mov r12, rbx	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x4005f4b	          0x4d29fc	                            sub r12, r15	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x4005f4e	      0x418d7c2403	                      lea edi, [r12 + 3]	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x4005f53	      0xe800000000	                          call 0x4005f58	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x4005f58	          0x4989c5	                            mov r13, rax	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x4005f5b	          0x4885c0	                           test rax, rax	      6051	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0x4005f5e	     0xf84e1030000	                            je 0x4006345	      6051	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0x4005f64	        0x4c8d7001	                      lea r14, [rax + 1]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x4005f68	          0x4c89e2	                            mov rdx, r12	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x4005f6b	          0x4c89fe	                            mov rsi, r15	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x4005f6e	          0x4c89f7	                            mov rdi, r14	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x4005f71	      0xe800000000	                          call 0x4005f76	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x4005f76	      0xbf00000000	                              mov edi, 0	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4005f7b	      0xb907000000	                              mov ecx, 7	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4005f80	          0x4c89f6	                            mov rsi, r14	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4005f83	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4005f85	           0xf97c2	                                 seta dl	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4005f88	           0xf92c0	                                 setb al	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4005f8b	            0x38c2	                              cmp dl, al	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4005f8d	            0x7468	                            je 0x4005ff7	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4005f8f	      0x410fb65501	               movzx edx, byte [r13 + 1]	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4005f94	           0xfb6c2	                           movzx eax, dl	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4005f97	          0x83f841	                           cmp eax, 0x41	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4005f9a	            0x7517	                           jne 0x4005fb3	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4005f9c	      0x41807d024c	                cmp byte [r13 + 2], 0x4c	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4005fa1	            0x7537	                           jne 0x4005fda	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4005fa3	      0x41807d034c	                cmp byte [r13 + 3], 0x4c	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4005fa8	            0x7530	                           jne 0x4005fda	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4005faa	      0x41807d0400	                   cmp byte [r13 + 4], 0	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4005faf	            0x7446	                            je 0x4005ff7	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4005fb1	            0xeb27	                           jmp 0x4005fda	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4005fb3	          0x83f854	                           cmp eax, 0x54	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4005fb6	            0x7522	                           jne 0x4005fda	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4005fb8	      0x41807d024f	                cmp byte [r13 + 2], 0x4f	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4005fbd	     0xf8596030000	                           jne 0x4006359	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4005fc3	      0x41807d0350	                cmp byte [r13 + 3], 0x50	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4005fc8	     0xf858b030000	                           jne 0x4006359	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4005fce	      0x41807d0400	                   cmp byte [r13 + 4], 0	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4005fd3	            0x7422	                            je 0x4005ff7	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4005fd5	      0xe97f030000	                           jmp 0x4006359	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4005fda	      0xbf00000000	                              mov edi, 0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4005fdf	      0xb90a000000	                            mov ecx, 0xa	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4005fe4	          0x4c89f6	                            mov rsi, r14	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4005fe7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4005fe9	           0xf97c1	                                 seta cl	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4005fec	           0xf92c0	                                 setb al	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4005fef	            0x38c1	                              cmp cl, al	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4005ff1	     0xf85ad000000	                           jne 0x40060a4	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4005ff7	      0x488b442408	                mov rax, qword [rsp + 8]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4005ffc	          0x488b00	                    mov rax, qword [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4005fff	           0xfb600	                   movzx eax, byte [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006002	          0x8d509f	                   lea edx, [rax - 0x61]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006005	          0x80fa19	                            cmp dl, 0x19	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006008	            0x7607	                           jbe 0x4006011	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400600a	            0x3c43	                            cmp al, 0x43	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400600c	           0xf95c0	                                setne al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400600f	            0xeb05	                           jmp 0x4006016	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006011	            0x3c63	                            cmp al, 0x63	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006013	           0xf95c0	                                setne al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006016	            0x84c0	                             test al, al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006018	            0x742c	                            je 0x4006046	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400601a	      0xba05000000	                              mov edx, 5	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400601f	      0xbe00000000	                              mov esi, 0	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x4006024	      0xbf00000000	                              mov edi, 0	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x4006029	      0xe800000000	                          call 0x400602e	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400602e	          0x4c89f6	                            mov rsi, r14	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x4006031	          0x4889c7	                            mov rdi, rax	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x4006034	      0xe800000000	                          call 0x4006039	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x4006039	          0x4c89ef	                            mov rdi, r13	      6066	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_19
0x400603c	      0xe800000000	                          call 0x4006041	      6066	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_19
0x4006041	      0xe9ff020000	                           jmp 0x4006345	      6067	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5
0x4006046	        0x833c2400	                      cmp dword [rsp], 0	      6069	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x400604a	            0x742c	                            je 0x4006078	      6069	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x400604c	      0xba05000000	                              mov edx, 5	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006051	      0xbe00000000	                              mov esi, 0	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006056	      0xbf00000000	                              mov edi, 0	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400605b	      0xe800000000	                          call 0x4006060	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006060	          0x4c89f6	                            mov rsi, r14	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006063	          0x4889c7	                            mov rdi, rax	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006066	      0xe800000000	                          call 0x400606b	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400606b	          0x4c89ef	                            mov rdi, r13	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0x400606e	      0xe800000000	                          call 0x4006073	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0x4006073	      0xe9cd020000	                           jmp 0x4006345	      6075	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x4006078	      0x410fb64501	               movzx eax, byte [r13 + 1]	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400607d	    0x41bc204e0000	                        mov r12d, 0x4e20	      6078	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x4006083	            0x3c41	                            cmp al, 0x41	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x4006085	            0x7411	                            je 0x4006098	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x4006087	            0x3c54	                            cmp al, 0x54	      6082	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x4006089	    0x41bcf0550000	                        mov r12d, 0x55f0	      6082	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x400608f	      0xb808520000	                         mov eax, 0x5208	      6082	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x4006094	        0x440f44e0	                         cmove r12d, eax	      6082	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x4006098	    0x440325000000	            add r12d, dword [0x0400609f]	      6083	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x400609f	      0xe928010000	                           jmp 0x40061cc	      6083	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x40060a4	          0x80fa40	                            cmp dl, 0x40	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0x40060a7	            0x7521	                           jne 0x40060ca	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0x40060a9	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x40060ae	     0xf8584020000	                           jne 0x4006338	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x40060b4	      0x418d7424ff	                      lea esi, [r12 - 1]	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x40060b9	        0x498d7d02	                      lea rdi, [r13 + 2]	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x40060bd	      0xe85fbeffff	              call sym.syn_check_cluster	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x40060c2	          0x4189c4	                           mov r12d, eax	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x40060c5	      0xe902010000	                           jmp 0x40061cc	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x40060ca	      0xbe00000000	                              mov esi, 0	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x40060cf	          0x4c89f7	                            mov rdi, r14	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x40060d2	      0xe800000000	                          call 0x40060d7	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x40060d7	          0x4885c0	                           test rax, rax	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x40060da	            0x7513	                           jne 0x40060ef	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x40060dc	          0x4489e6	                           mov esi, r12d	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x40060df	          0x4c89f7	                            mov rdi, r14	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x40060e2	      0xe800000000	                          call 0x40060e7	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x40060e7	          0x4189c4	                           mov r12d, eax	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x40060ea	      0xe9dd000000	                           jmp 0x40061cc	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x40060ef	      0x41c645005e	                    mov byte [r13], 0x5e	      6104	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x40060f4	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_200	CALL_3
0x40060f9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_200	CALL_3
0x4006100	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_200	CALL_3
0x4006103	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_200	CALL_3
0x4006105	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_200	CALL_3
0x4006108	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_200	CALL_3
0x400610b	    0x6641c74405ff	         mov word [r13 + rax - 1], 0x24 	       148	string3.h	FUNCTION_200	CALL_3
0x4006113	      0xbe01000000	                              mov esi, 1	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x4006118	          0x4c89ef	                            mov rdi, r13	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x400611b	      0xe800000000	                          call 0x4006120	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x4006120	      0x4889442430	             mov qword [rsp + 0x30], rax	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x4006125	          0x4885c0	                           test rax, rax	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x4006128	            0x750d	                           jne 0x4006137	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x400612a	          0x4c89ef	                            mov rdi, r13	      6110	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12	CALL_28
0x400612d	      0xe800000000	                          call 0x4006132	      6110	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12	CALL_28
0x4006132	      0xe90e020000	                           jmp 0x4006345	      6111	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x4006137	    0xc78424d80000	               mov dword [rsp + 0xd8], 1	      6114	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x4006142	    0x448b35000000	           mov r14d, dword [0x04006149] 	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006149	    0x41bc00000000	                             mov r12d, 0	      6115	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x400614f	            0xeb6b	                           jmp 0x40061bc	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006151	          0x4963c6	                        movsxd rax, r14d	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0x4006154	        0x488d14c0	                  lea rdx, [rax + rax*8]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0x4006158	        0x488d0450	                  lea rax, [rax + rdx*2]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0x400615c	        0x48c1e003	                              shl rax, 3	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0x4006160	    0x480305000000	             add rax, qword [0x04006167]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0x4006167	      0xba00000000	                              mov edx, 0	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0x400616c	          0x488b30	                    mov rsi, qword [rax]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0x400616f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0x4006174	      0xe800000000	                          call 0x4006179	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0x4006179	            0x85c0	                           test eax, eax	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0x400617b	            0x743f	                            je 0x40061bc	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0x400617d	      0x837c240402	                  cmp dword [rsp + 4], 2	      6121	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14
0x4006182	            0x752e	                           jne 0x40061b2	      6121	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14
0x4006184	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x4006188	          0x390c24	                    cmp dword [rsp], ecx	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400618b	            0x7c14	                            jl 0x40061a1	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400618d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_31
0x4006192	      0xe800000000	                          call 0x4006197	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_31
0x4006197	    0xc74424040100	                  mov dword [rsp + 4], 1	      6130	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400619f	            0xeb11	                           jmp 0x40061b2	      6130	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x40061a1	        0x48630424	                 movsxd rax, dword [rsp]	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x40061a5	        0x418d5601	                      lea edx, [r14 + 1]	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x40061a9	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x40061ae	        0x66891441	              mov word [rcx + rax*2], dx	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x40061b2	        0x83042401	                      add dword [rsp], 1	      6135	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x40061b6	    0x41bcffffffff	                    mov r12d, 0xffffffff	      6136	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x40061bc	        0x4183ee01	                             sub r14d, 1	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x40061c0	            0x798f	                           jns 0x4006151	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x40061c2	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_32
0x40061c7	      0xe800000000	                          call 0x40061cc	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_32
0x40061cc	          0x4c89ef	                            mov rdi, r13	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_33
0x40061cf	      0xe800000000	                          call 0x40061d4	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_33
0x40061d4	          0x4585e4	                         test r12d, r12d	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x40061d7	            0x7524	                           jne 0x40061fd	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x40061d9	      0xba05000000	                              mov edx, 5	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0x40061de	      0xbe00000000	                              mov esi, 0	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0x40061e3	      0xbf00000000	                              mov edi, 0	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0x40061e8	      0xe800000000	                          call 0x40061ed	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0x40061ed	          0x4c89fe	                            mov rsi, r15	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0x40061f0	          0x4889c7	                            mov rdi, rax	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0x40061f3	      0xe800000000	                          call 0x40061f8	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0x40061f8	      0xe948010000	                           jmp 0x4006345	      6147	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x40061fd	          0x4585e4	                         test r12d, r12d	      6149	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0x4006200	            0x7e36	                           jle 0x4006238	      6149	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0x4006202	      0x837c240402	                  cmp dword [rsp + 4], 2	      6151	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18
0x4006207	            0x752b	                           jne 0x4006234	      6151	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18
0x4006209	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400620d	          0x390c24	                    cmp dword [rsp], ecx	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x4006210	            0x7c14	                            jl 0x4006226	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x4006212	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_36
0x4006217	      0xe800000000	                          call 0x400621c	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_36
0x400621c	    0xc74424040100	                  mov dword [rsp + 4], 1	      6157	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x4006224	            0xeb0e	                           jmp 0x4006234	      6157	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x4006226	        0x48630424	                 movsxd rax, dword [rsp]	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400622a	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400622f	      0x6644892441	            mov word [rcx + rax*2], r12w	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x4006234	        0x83042401	                      add dword [rsp], 1	      6162	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0x4006238	          0x4889df	                            mov rdi, rbx	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x400623b	      0xe800000000	                          call 0x4006240	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x4006240	          0x4989c7	                            mov r15, rax	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x4006243	          0x80382c	                    cmp byte [rax], 0x2c	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0x4006246	            0x7540	                           jne 0x4006288	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0x4006248	        0x488d7801	                      lea rdi, [rax + 1]	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_38
0x400624c	      0xe800000000	                          call 0x4006251	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_38
0x4006251	          0x4989c7	                            mov r15, rax	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_38
0x4006254	            0xeb07	                           jmp 0x400625d	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_38
0x4006256	    0xc70424000000	                      mov dword [rsp], 0	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_38
0x400625d	        0x410fb63f	                   movzx edi, byte [r15]	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x4006261	      0xe800000000	                          call 0x4006266	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x4006266	            0x85c0	                           test eax, eax	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x4006268	            0x751e	                           jne 0x4006288	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400626a	        0x410fb607	                   movzx eax, byte [r15]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400626e	            0x3c2c	                            cmp al, 0x2c	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006270	     0xf87befcffff	                            ja 0x4005f34	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006276	          0x4c89fb	                            mov rbx, r15	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006279	        0x480fa3c5	                             bt rbp, rax	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400627d	     0xf83b4fcffff	                           jae 0x4005f37	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006283	      0xe9c0fcffff	                           jmp 0x4005f48	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006288	      0x837c240401	                  cmp dword [rsp + 4], 1	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400628d	            0x7538	                           jne 0x40062c7	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400628f	          0x8b1c24	                    mov ebx, dword [rsp]	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0x4006292	        0x8d7c1b02	                lea edi, [rbx + rbx + 2]	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0x4006296	      0xe800000000	                          call 0x400629b	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0x400629b	          0x4889c6	                            mov rsi, rax	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0x400629e	      0x4889442410	             mov qword [rsp + 0x10], rax	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0x40062a3	          0x4885c0	                           test rax, rax	      6174	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0x40062a6	     0xf84a3000000	                            je 0x400634f	      6174	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0x40062ac	            0x89d8	                            mov eax, ebx	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x40062ae	            0x4898	                                    cdqe	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x40062b0	    0x66c704460000	               mov word [rsi + rax*2], 0	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x40062b6	        0x895c2428	             mov dword [rsp + 0x28], ebx	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x40062ba	    0xc74424040200	                  mov dword [rsp + 4], 2	      6024	syntax.c	FUNCTION_92	FOR_1
0x40062c2	      0xe9dffbffff	                           jmp 0x4005ea6	      6024	syntax.c	FUNCTION_92	FOR_1
0x40062c7	      0x8344240401	                  add dword [rsp + 4], 1	      6024	syntax.c	FUNCTION_92	FOR_1
0x40062cc	        0x8b442404	                mov eax, dword [rsp + 4]	      6024	syntax.c	FUNCTION_92	FOR_1
0x40062d0	          0x83f802	                              cmp eax, 2	      6024	syntax.c	FUNCTION_92	FOR_1
0x40062d3	     0xf8ecdfbffff	                           jle 0x4005ea6	      6024	syntax.c	FUNCTION_92	FOR_1
0x40062d9	      0x488b442408	                mov rax, qword [rsp + 8]	      6181	syntax.c	FUNCTION_92
0x40062de	          0x4c8938	                    mov qword [rax], r15	      6181	syntax.c	FUNCTION_92
0x40062e1	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      6182	syntax.c	FUNCTION_92	IF_24
0x40062e7	            0x7511	                           jne 0x40062fa	      6182	syntax.c	FUNCTION_92	IF_24
0x40062e9	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6184	syntax.c	FUNCTION_92	IF_24	CALL_40
0x40062ee	      0xe800000000	                          call 0x40062f3	      6184	syntax.c	FUNCTION_92	IF_24	CALL_40
0x40062f3	      0xb800000000	                              mov eax, 0	      6185	syntax.c	FUNCTION_92	IF_24
0x40062f8	            0xeb29	                           jmp 0x4006323	      6185	syntax.c	FUNCTION_92	IF_24
0x40062fa	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6188	syntax.c	FUNCTION_92	IF_25
0x40062ff	        0x48833800	                      cmp qword [rax], 0	      6188	syntax.c	FUNCTION_92	IF_25
0x4006303	            0x750f	                           jne 0x4006314	      6188	syntax.c	FUNCTION_92	IF_25
0x4006305	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      6189	syntax.c	FUNCTION_92	IF_25
0x400630a	          0x488908	                    mov qword [rax], rcx	      6189	syntax.c	FUNCTION_92	IF_25
0x400630d	      0xb801000000	                              mov eax, 1	      6193	syntax.c	FUNCTION_92
0x4006312	            0xeb0f	                           jmp 0x4006323	      6193	syntax.c	FUNCTION_92
0x4006314	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6191	syntax.c	FUNCTION_92	CALL_41
0x4006319	      0xe800000000	                          call 0x400631e	      6191	syntax.c	FUNCTION_92	CALL_41
0x400631e	      0xb801000000	                              mov eax, 1	      6193	syntax.c	FUNCTION_92
0x4006323	    0x488b8c24e800	            mov rcx, qword [rsp + 0xe8] 	      6194	syntax.c	FUNCTION_92
0x400632b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6194	syntax.c	FUNCTION_92
0x4006334	            0x744a	                            je 0x4006380	      6194	syntax.c	FUNCTION_92
0x4006336	            0xeb43	                           jmp 0x400637b	      6194	syntax.c	FUNCTION_92
0x4006338	          0x4c89ef	                            mov rdi, r13	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_33
0x400633b	      0xe800000000	                          call 0x4006340	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_33
0x4006340	      0xe9f3feffff	                           jmp 0x4006238	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_33
0x4006345	      0x488b442408	                mov rax, qword [rsp + 8]	      6181	syntax.c	FUNCTION_92
0x400634a	          0x4c8938	                    mov qword [rax], r15	      6181	syntax.c	FUNCTION_92
0x400634d	            0xeb9a	                           jmp 0x40062e9	      6181	syntax.c	FUNCTION_92
0x400634f	      0x488b442408	                mov rax, qword [rsp + 8]	      6181	syntax.c	FUNCTION_92
0x4006354	          0x4c8938	                    mov qword [rax], r15	      6181	syntax.c	FUNCTION_92
0x4006357	            0xeb90	                           jmp 0x40062e9	      6181	syntax.c	FUNCTION_92
0x4006359	      0xbf00000000	                              mov edi, 0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400635e	      0xb90a000000	                            mov ecx, 0xa	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006363	          0x4c89f6	                            mov rsi, r14	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006366	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006368	           0xf97c2	                                 seta dl	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400636b	           0xf92c0	                                 setb al	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400636e	            0x38c2	                              cmp dl, al	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006370	     0xf8481fcffff	                            je 0x4005ff7	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006376	      0xe94ffdffff	                           jmp 0x40060ca	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400637b	      0xe800000000	                          call 0x4006380	      6194	syntax.c	FUNCTION_92
0x4006380	    0x4881c4f80000	                           add rsp, 0xf8	      6194	syntax.c	FUNCTION_92
0x4006387	              0x5b	                                 pop rbx	      6194	syntax.c	FUNCTION_92
0x4006388	              0x5d	                                 pop rbp	      6194	syntax.c	FUNCTION_92
0x4006389	            0x415c	                                 pop r12	      6194	syntax.c	FUNCTION_92
0x400638b	            0x415d	                                 pop r13	      6194	syntax.c	FUNCTION_92
0x400638d	            0x415e	                                 pop r14	      6194	syntax.c	FUNCTION_92
0x400638f	            0x415f	                                 pop r15	      6194	syntax.c	FUNCTION_92
0x4006391	              0xc3	                                     ret	      6194	syntax.c	FUNCTION_92
syn_cmd_keyword	IF,14:CALL,26:FOR,3:ELSE,3:SWITCH,0:WHILE,1:DO,0:functions,0	296
0x400762a	            0x4157	                                push r15	      4894	syntax.c	FUNCTION_79
0x400762c	            0x4156	                                push r14	      4894	syntax.c	FUNCTION_79
0x400762e	            0x4155	                                push r13	      4894	syntax.c	FUNCTION_79
0x4007630	            0x4154	                                push r12	      4894	syntax.c	FUNCTION_79
0x4007632	              0x55	                                push rbp	      4894	syntax.c	FUNCTION_79
0x4007633	              0x53	                                push rbx	      4894	syntax.c	FUNCTION_79
0x4007634	    0x4881ece80000	                           sub rsp, 0xe8	      4894	syntax.c	FUNCTION_79
0x400763b	          0x4989ff	                            mov r15, rdi	      4894	syntax.c	FUNCTION_79
0x400763e	    0x64488b042528	                mov rax, qword fs:[0x28]	      4894	syntax.c	FUNCTION_79
0x4007647	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      4894	syntax.c	FUNCTION_79
0x400764f	            0x31c0	                            xor eax, eax	      4894	syntax.c	FUNCTION_79
0x4007651	          0x488b07	                    mov rax, qword [rdi]	      4895	syntax.c	FUNCTION_79
0x4007654	      0x4889442420	             mov qword [rsp + 0x20], rax	      4895	syntax.c	FUNCTION_79
0x4007659	    0xc74424440000	               mov dword [rsp + 0x44], 0	      4904	syntax.c	FUNCTION_79
0x4007661	      0x488d742448	                   lea rsi, [rsp + 0x48]	      4906	syntax.c	FUNCTION_79	CALL_1
0x4007666	          0x4889c7	                            mov rdi, rax	      4906	syntax.c	FUNCTION_79	CALL_1
0x4007669	      0xe89aa0ffff	                 call sym.get_group_name	      4906	syntax.c	FUNCTION_79	CALL_1
0x400766e	          0x4885c0	                           test rax, rax	      4908	syntax.c	FUNCTION_79	IF_1
0x4007671	     0xf84de030000	                            je 0x4007a55	      4908	syntax.c	FUNCTION_79	IF_1
0x4007677	          0x4989c6	                            mov r14, rax	      4908	syntax.c	FUNCTION_79	IF_1
0x400767a	    0xc7442428ffff	     mov dword [rsp + 0x28], 0xffffffff 	      4911	syntax.c	FUNCTION_79	IF_1	IF_2
0x4007682	      0x41837f3000	               cmp dword [r15 + 0x30], 0	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x4007687	            0x7521	                           jne 0x40076aa	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x4007689	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400768e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4007693	          0x4829c6	                            sub rsi, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4007696	          0x4889c7	                            mov rdi, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4007699	      0xe800000000	                          call 0x400769e	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400769e	        0x89442428	             mov dword [rsp + 0x28], eax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x40076a2	            0x85c0	                           test eax, eax	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x40076a4	     0xf849d030000	                            je 0x4007a47	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x40076aa	      0xb800000000	                              mov eax, 0	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x40076af	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x40076b6	          0x4c89f7	                            mov rdi, r14	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x40076b9	            0xf2ae	              repne scasb al, byte [rdi]	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x40076bb	            0x89cf	                            mov edi, ecx	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x40076bd	            0xf7d7	                                 not edi	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x40076bf	      0xe800000000	                          call 0x40076c4	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x40076c4	      0x4889442418	             mov qword [rsp + 0x18], rax	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x40076c9	          0x4885c0	                           test rax, rax	      4917	syntax.c	FUNCTION_79	IF_1	IF_4
0x40076cc	     0xf85d3030000	                           jne 0x4007aa5	      4917	syntax.c	FUNCTION_79	IF_1	IF_4
0x40076d2	      0xe970030000	                           jmp 0x4007a47	      4917	syntax.c	FUNCTION_79	IF_1	IF_4
0x40076d7	        0x418b4f30	            mov ecx, dword [r15 + 0x30] 	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40076db	      0x488d542444	                   lea rdx, [rsp + 0x44]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40076e0	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40076e5	          0x4c89f7	                            mov rdi, r14	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40076e8	      0xe8a5ecffff	                call sym.get_syn_options	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40076ed	          0x4989c6	                            mov r14, rax	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40076f0	          0x4885c0	                           test rax, rax	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40076f3	            0x747f	                            je 0x4007774	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40076f5	           0xfb638	                   movzx edi, byte [rax]	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40076f8	      0xe800000000	                          call 0x40076fd	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40076fd	            0x85c0	                           test eax, eax	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40076ff	            0x7573	                           jne 0x4007774	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x4007701	        0x410fb616	                   movzx edx, byte [r14]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4007705	          0xf6c2df	                           test dl, 0xdf	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4007708	            0x7437	                            je 0x4007741	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400770a	          0x80fa09	                               cmp dl, 9	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400770d	            0x7437	                            je 0x4007746	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400770f	          0x4889e9	                            mov rcx, rbp	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4007712	          0x4c89f0	                            mov rax, r14	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4007715	          0x80fa5c	                            cmp dl, 0x5c	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x4007718	            0x7509	                           jne 0x4007723	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x400771a	      0x41807e0101	                   cmp byte [r14 + 1], 1	      4943	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x400771f	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	      4943	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x4007723	        0x4883c101	                              add rcx, 1	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x4007727	        0x4c8d7001	                      lea r14, [rax + 1]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x400772b	           0xfb610	                   movzx edx, byte [rax]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x400772e	          0x8851ff	                  mov byte [rcx - 1], dl	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x4007731	         0xfb65001	               movzx edx, byte [rax + 1]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4007735	          0xf6c2df	                           test dl, 0xdf	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4007738	            0x740f	                            je 0x4007749	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400773a	          0x80fa09	                               cmp dl, 9	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400773d	            0x75d3	                           jne 0x4007712	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400773f	            0xeb08	                           jmp 0x4007749	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4007741	          0x4889e9	                            mov rcx, rbp	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4007744	            0xeb03	                           jmp 0x4007749	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4007746	          0x4889e9	                            mov rcx, rbp	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4007749	        0x488d6901	                      lea rbp, [rcx + 1]	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x400774d	          0xc60100	                       mov byte [rcx], 0	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x4007750	          0x83c301	                              add ebx, 1	      4947	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x4007753	          0x4c89f7	                            mov rdi, r14	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4007756	      0xe800000000	                          call 0x400775b	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400775b	          0x4989c6	                            mov r14, rax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400775e	          0x4885c0	                           test rax, rax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4007761	            0x7411	                            je 0x4007774	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4007763	        0x410fb63e	                   movzx edi, byte [r14]	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4007767	      0xe800000000	                          call 0x400776c	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400776c	            0x85c0	                           test eax, eax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400776e	     0xf8463ffffff	                            je 0x40076d7	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4007774	      0x41837f3000	               cmp dword [r15 + 0x30], 0	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x4007779	     0xf85a5020000	                           jne 0x4007a24	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x400777f	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x4007784	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x4007788	      0xe851abffff	              call sym.syn_incl_toplevel	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x400778d	          0x83eb01	                              sub ebx, 1	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4007790	        0x895c242c	             mov dword [rsp + 0x2c], ebx	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4007794	     0xf888a020000	                            js 0x4007a24	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400779a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400779f	      0x4889442408	                mov qword [rsp + 8], rax	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40077a4	      0x4c89742430	             mov qword [rsp + 0x30], r14	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x40077a9	      0x4c897c2438	             mov qword [rsp + 0x38], r15	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x40077ae	      0xbe5b000000	                           mov esi, 0x5b	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x40077b3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x40077b8	      0xe800000000	                          call 0x40077bd	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x40077bd	          0x4989c6	                            mov r14, rax	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x40077c0	          0x4d85f6	                           test r14, r14	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x40077c3	            0x7404	                            je 0x40077c9	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x40077c5	        0x41c60600	                       mov byte [r14], 0	      4963	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x40077c9	      0x448b642444	           mov r12d, dword [rsp + 0x44] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40077ce	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40077d3	      0x4889442410	             mov qword [rsp + 0x10], rax	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40077d8	      0x4c8b6c2470	            mov r13, qword [rsp + 0x70] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40077dd	      0x448b7c2450	           mov r15d, dword [rsp + 0x50] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40077e2	    0x488b05000000	            mov rax, qword [0x040077e9] 	      4531	syntax.c	FUNCTION_74	IF_1
0x40077e9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4531	syntax.c	FUNCTION_74	IF_1
0x40077ed	      0x488b742408	                mov rsi, qword [rsp + 8]	      4531	syntax.c	FUNCTION_74	IF_1
0x40077f2	        0x48893424	                    mov qword [rsp], rsi	      4531	syntax.c	FUNCTION_74	IF_1
0x40077f6	    0x83b858020000	              cmp dword [rax + 0x258], 0	      4531	syntax.c	FUNCTION_74	IF_1
0x40077fd	            0x7433	                            je 0x4007832	      4531	syntax.c	FUNCTION_74	IF_1
0x40077ff	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4007806	          0x4889f7	                            mov rdi, rsi	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4007809	      0xb800000000	                              mov eax, 0	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400780e	            0xf2ae	              repne scasb al, byte [rdi]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4007810	          0x48f7d1	                                 not rcx	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4007813	        0x488d71ff	                      lea rsi, [rcx - 1]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4007817	      0xb951000000	                           mov ecx, 0x51	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400781c	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4007824	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4007829	      0xe800000000	                          call 0x400782e	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400782e	        0x48890424	                    mov qword [rsp], rax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4007832	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4536	syntax.c	FUNCTION_74	CALL_4
0x4007839	        0x488b3c24	                    mov rdi, qword [rsp]	      4536	syntax.c	FUNCTION_74	CALL_4
0x400783d	      0xb800000000	                              mov eax, 0	      4536	syntax.c	FUNCTION_74	CALL_4
0x4007842	            0xf2ae	              repne scasb al, byte [rdi]	      4536	syntax.c	FUNCTION_74	CALL_4
0x4007844	          0x48f7d1	                                 not rcx	      4536	syntax.c	FUNCTION_74	CALL_4
0x4007847	          0x8d792f	                   lea edi, [rcx + 0x2f]	      4536	syntax.c	FUNCTION_74	CALL_4
0x400784a	      0xe800000000	                          call 0x400784f	      4536	syntax.c	FUNCTION_74	CALL_4
0x400784f	          0x4889c3	                            mov rbx, rax	      4536	syntax.c	FUNCTION_74	CALL_4
0x4007852	          0x4885c0	                           test rax, rax	      4537	syntax.c	FUNCTION_74	IF_2
0x4007855	     0xf84cb000000	                            je 0x4007926	      4537	syntax.c	FUNCTION_74	IF_2
0x400785b	        0x488d6828	                   lea rbp, [rax + 0x28]	      4539	syntax.c	FUNCTION_74	CALL_5
0x400785f	        0x488b3424	                    mov rsi, qword [rsp]	       110	string3.h	FUNCTION_196	CALL_3
0x4007863	          0x4889ef	                            mov rdi, rbp	       110	string3.h	FUNCTION_196	CALL_3
0x4007866	      0xe800000000	                          call 0x400786b	       110	string3.h	FUNCTION_196	CALL_3
0x400786b	       0xfb7442428	           movzx eax, word [rsp + 0x28] 	      4540	syntax.c	FUNCTION_74
0x4007870	        0x6689430c	                mov word [rbx + 0xc], ax	      4540	syntax.c	FUNCTION_74
0x4007874	    0x8b0500000000	            mov eax, dword [0x0400787a] 	      4541	syntax.c	FUNCTION_74
0x400787a	          0x894308	                mov dword [rbx + 8], eax	      4541	syntax.c	FUNCTION_74
0x400787d	        0x44897b20	            mov dword [rbx + 0x20], r15d	      4542	syntax.c	FUNCTION_74
0x4007881	        0x44896324	            mov dword [rbx + 0x24], r12d	      4543	syntax.c	FUNCTION_74
0x4007885	          0x4c89ef	                            mov rdi, r13	      4544	syntax.c	FUNCTION_74	CALL_6
0x4007888	      0xe8a5a5ffff	                   call sym.copy_id_list	      4544	syntax.c	FUNCTION_74	CALL_6
0x400788d	        0x48894310	             mov qword [rbx + 0x10], rax	      4544	syntax.c	FUNCTION_74	CALL_6
0x4007891	          0x4d85ed	                           test r13, r13	      4545	syntax.c	FUNCTION_74	IF_3
0x4007894	            0x7415	                            je 0x40078ab	      4545	syntax.c	FUNCTION_74	IF_3
0x4007896	    0x488b05000000	            mov rax, qword [0x0400789d] 	      4546	syntax.c	FUNCTION_74	IF_3
0x400789d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4546	syntax.c	FUNCTION_74	IF_3
0x40078a1	    0xc78098020000	              mov dword [rax + 0x298], 1	      4546	syntax.c	FUNCTION_74	IF_3
0x40078ab	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4547	syntax.c	FUNCTION_74	CALL_7
0x40078b0	      0xe87da5ffff	                   call sym.copy_id_list	      4547	syntax.c	FUNCTION_74	CALL_7
0x40078b5	        0x48894318	             mov qword [rbx + 0x18], rax	      4547	syntax.c	FUNCTION_74	CALL_7
0x40078b9	    0x488b05000000	            mov rax, qword [0x040078c0] 	      4549	syntax.c	FUNCTION_74	IF_4
0x40078c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4549	syntax.c	FUNCTION_74	IF_4
0x40078c4	    0x4c8da0280100	                  lea r12, [rax + 0x128]	      4550	syntax.c	FUNCTION_74	IF_4
0x40078cb	    0x83b858020000	              cmp dword [rax + 0x258], 0	      4550	syntax.c	FUNCTION_74	IF_4
0x40078d2	        0x4c0f44e0	                          cmove r12, rax	      4550	syntax.c	FUNCTION_74	IF_4
0x40078d6	          0x4889ef	                            mov rdi, rbp	      4554	syntax.c	FUNCTION_74	CALL_8
0x40078d9	      0xe800000000	                          call 0x40078de	      4554	syntax.c	FUNCTION_74	CALL_8
0x40078de	          0x4989c5	                            mov r13, rax	      4554	syntax.c	FUNCTION_74	CALL_8
0x40078e1	          0x4889c2	                            mov rdx, rax	      4555	syntax.c	FUNCTION_74	CALL_9
0x40078e4	          0x4889ee	                            mov rsi, rbp	      4555	syntax.c	FUNCTION_74	CALL_9
0x40078e7	          0x4c89e7	                            mov rdi, r12	      4555	syntax.c	FUNCTION_74	CALL_9
0x40078ea	      0xe800000000	                          call 0x40078ef	      4555	syntax.c	FUNCTION_74	CALL_9
0x40078ef	        0x488b5008	                mov rdx, qword [rax + 8]	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40078f3	    0x4881fa000000	                              cmp rdx, 0	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40078fa	            0x7405	                            je 0x4007901	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40078fc	          0x4885d2	                           test rdx, rdx	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40078ff	            0x751a	                           jne 0x400791b	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x4007901	    0x48c703000000	                      mov qword [rbx], 0	      4559	syntax.c	FUNCTION_74	IF_5
0x4007908	          0x4c89e9	                            mov rcx, r13	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x400790b	          0x4889ea	                            mov rdx, rbp	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x400790e	          0x4889c6	                            mov rsi, rax	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x4007911	          0x4c89e7	                            mov rdi, r12	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x4007914	      0xe800000000	                          call 0x4007919	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x4007919	            0xeb0b	                           jmp 0x4007926	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x400791b	        0x4883ea28	                           sub rdx, 0x28	      4565	syntax.c	FUNCTION_74	ELSE_3	CALL_12
0x400791f	          0x488913	                    mov qword [rbx], rdx	      4565	syntax.c	FUNCTION_74	ELSE_3	CALL_12
0x4007922	        0x48896808	                mov qword [rax + 8], rbp	      4566	syntax.c	FUNCTION_74	ELSE_3	CALL_13
0x4007926	          0x4d85f6	                           test r14, r14	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x4007929	     0xf84be000000	                            je 0x40079ed	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x400792f	      0x410fb64601	               movzx eax, byte [r14 + 1]	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4007934	            0x84c0	                             test al, al	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4007936	            0x7530	                           jne 0x4007968	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4007938	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x400793d	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4007942	      0xba05000000	                              mov edx, 5	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4007947	      0xbe00000000	                              mov esi, 0	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x400794c	      0xbf00000000	                              mov edi, 0	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4007951	      0xe800000000	                          call 0x4007956	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4007956	      0x488b742408	                mov rsi, qword [rsp + 8]	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x400795b	          0x4889c7	                            mov rdi, rax	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x400795e	      0xe800000000	                          call 0x4007963	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4007963	      0xe9bc000000	                           jmp 0x4007a24	      4972	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4007968	            0x3c5d	                            cmp al, 0x5d	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x400796a	            0x7546	                           jne 0x40079b2	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x400796c	      0x41807e0200	                   cmp byte [r14 + 2], 0	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4007971	            0x7434	                            je 0x40079a7	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4007973	          0x4d89f5	                            mov r13, r14	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4007976	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x400797b	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4007980	      0xba05000000	                              mov edx, 5	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4007985	      0xbe00000000	                              mov esi, 0	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x400798a	      0xbf00000000	                              mov edi, 0	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x400798f	      0xe800000000	                          call 0x4007994	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4007994	        0x498d5502	                      lea rdx, [r13 + 2]	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4007998	      0x488b742408	                mov rsi, qword [rsp + 8]	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x400799d	          0x4889c7	                            mov rdi, rax	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x40079a0	      0xe800000000	                          call 0x40079a5	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x40079a5	            0xeb7d	                           jmp 0x4007a24	      4980	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x40079a7	        0x498d4601	                      lea rax, [r14 + 1]	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x40079ab	      0x4889442408	                mov qword [rsp + 8], rax	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x40079b0	            0xeb3b	                           jmp 0x40079ed	      4983	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x40079b2	    0x833d00000000	               cmp dword [0x040079b9], 0	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40079b9	            0x7426	                            je 0x40079e1	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40079bb	        0x498d6e01	                      lea rbp, [r14 + 1]	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40079bf	          0x4889ef	                            mov rdi, rbp	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40079c2	    0xff1500000000	                 call qword [0x040079c8]	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40079c8	          0x4863d8	                         movsxd rbx, eax	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x40079cb	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_191	CALL_3
0x40079ce	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_191	CALL_3
0x40079d1	          0x4c89f7	                            mov rdi, r14	        59	string3.h	FUNCTION_191	CALL_3
0x40079d4	      0xe800000000	                          call 0x40079d9	        59	string3.h	FUNCTION_191	CALL_3
0x40079d9	          0x4901de	                            add r14, rbx	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40079dc	      0xe9dffdffff	                           jmp 0x40077c0	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40079e1	          0x418806	                      mov byte [r14], al	      4996	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x40079e4	        0x4983c601	                              add r14, 1	      4997	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x40079e8	      0xe9d3fdffff	                           jmp 0x40077c0	      4997	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x40079ed	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40079f4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40079f9	      0xb800000000	                              mov eax, 0	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40079fe	            0xf2ae	              repne scasb al, byte [rdi]	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4007a00	          0x48f7d1	                                 not rcx	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4007a03	      0x48014c2408	                add qword [rsp + 8], rcx	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4007a08	      0x836c242c01	               sub dword [rsp + 0x2c], 1	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4007a0d	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4007a11	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4007a14	     0xf8594fdffff	                           jne 0x40077ae	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4007a1a	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4007a1f	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4007a24	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x4007a29	      0xe800000000	                          call 0x4007a2e	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x4007a2e	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x4007a33	      0xe800000000	                          call 0x4007a38	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x4007a38	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x4007a3d	      0xe800000000	                          call 0x4007a42	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x4007a42	          0x4d85f6	                           test r14, r14	      5009	syntax.c	FUNCTION_79	IF_14
0x4007a45	            0x740e	                            je 0x4007a55	      5009	syntax.c	FUNCTION_79	IF_14
0x4007a47	          0x4c89f7	                            mov rdi, r14	      5010	syntax.c	FUNCTION_79	CALL_22
0x4007a4a	      0xe800000000	                          call 0x4007a4f	      5010	syntax.c	FUNCTION_79	CALL_22
0x4007a4f	        0x49894708	                mov qword [r15 + 8], rax	      5010	syntax.c	FUNCTION_79	CALL_22
0x4007a53	            0xeb21	                           jmp 0x4007a76	      5010	syntax.c	FUNCTION_79	CALL_22
0x4007a55	      0xba05000000	                              mov edx, 5	      5012	syntax.c	FUNCTION_79	CALL_24
0x4007a5a	      0xbe00000000	                              mov esi, 0	      5012	syntax.c	FUNCTION_79	CALL_24
0x4007a5f	      0xbf00000000	                              mov edi, 0	      5012	syntax.c	FUNCTION_79	CALL_24
0x4007a64	      0xe800000000	                          call 0x4007a69	      5012	syntax.c	FUNCTION_79	CALL_24
0x4007a69	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5012	syntax.c	FUNCTION_79	CALL_24
0x4007a6e	          0x4889c7	                            mov rdi, rax	      5012	syntax.c	FUNCTION_79	CALL_24
0x4007a71	      0xe800000000	                          call 0x4007a76	      5012	syntax.c	FUNCTION_79	CALL_24
0x4007a76	      0xbf23000000	                           mov edi, 0x23	      5014	syntax.c	FUNCTION_79	CALL_25
0x4007a7b	      0xe800000000	                          call 0x4007a80	      5014	syntax.c	FUNCTION_79	CALL_25
0x4007a80	    0x488b05000000	            mov rax, qword [0x04007a87] 	      5015	syntax.c	FUNCTION_79	CALL_26
0x4007a87	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5015	syntax.c	FUNCTION_79	CALL_26
0x4007a8b	      0xe800000000	                          call 0x4007a90	      5015	syntax.c	FUNCTION_79	CALL_26
0x4007a90	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	      5016	syntax.c	FUNCTION_79
0x4007a98	    0x644833042528	                xor rax, qword fs:[0x28]	      5016	syntax.c	FUNCTION_79
0x4007aa1	            0x7446	                            je 0x4007ae9	      5016	syntax.c	FUNCTION_79
0x4007aa3	            0xeb3f	                           jmp 0x4007ae4	      5016	syntax.c	FUNCTION_79
0x4007aa5	    0xc74424500000	               mov dword [rsp + 0x50], 0	      4919	syntax.c	FUNCTION_79	IF_1	IF_4
0x4007aad	    0xc74424540100	               mov dword [rsp + 0x54], 1	      4920	syntax.c	FUNCTION_79	IF_1	IF_4
0x4007ab5	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4921	syntax.c	FUNCTION_79	IF_1	IF_4
0x4007abe	      0xc644246000	                mov byte [rsp + 0x60], 0	      4922	syntax.c	FUNCTION_79	IF_1	IF_4
0x4007ac3	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4923	syntax.c	FUNCTION_79	IF_1	IF_4
0x4007acc	    0x48c744247800	               mov qword [rsp + 0x78], 0	      4924	syntax.c	FUNCTION_79	IF_1	IF_4
0x4007ad5	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x4007ada	      0xbb00000000	                              mov ebx, 0	      4924	syntax.c	FUNCTION_79	IF_1	IF_4
0x4007adf	      0xe97ffcffff	                           jmp 0x4007763	      4924	syntax.c	FUNCTION_79	IF_1	IF_4
0x4007ae4	      0xe800000000	                          call 0x4007ae9	      5016	syntax.c	FUNCTION_79
0x4007ae9	    0x4881c4e80000	                           add rsp, 0xe8	      5016	syntax.c	FUNCTION_79
0x4007af0	              0x5b	                                 pop rbx	      5016	syntax.c	FUNCTION_79
0x4007af1	              0x5d	                                 pop rbp	      5016	syntax.c	FUNCTION_79
0x4007af2	            0x415c	                                 pop r12	      5016	syntax.c	FUNCTION_79
0x4007af4	            0x415d	                                 pop r13	      5016	syntax.c	FUNCTION_79
0x4007af6	            0x415e	                                 pop r14	      5016	syntax.c	FUNCTION_79
0x4007af8	            0x415f	                                 pop r15	      5016	syntax.c	FUNCTION_79
0x4007afa	              0xc3	                                     ret	      5016	syntax.c	FUNCTION_79
restore_cterm_colors	IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	7
0x4004376	    0xc70500000000	               mov dword [0x04004380], 0	      8323	syntax.c	FUNCTION_118
0x4004380	    0xc70500000000	               mov dword [0x0400438a], 0	      8324	syntax.c	FUNCTION_118
0x400438a	    0xc70500000000	               mov dword [0x04004394], 0	      8325	syntax.c	FUNCTION_118
0x4004394	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      8327	syntax.c	FUNCTION_118
0x400439b	    0x488905000000	            mov qword [0x040043a2], rax 	      8327	syntax.c	FUNCTION_118
0x40043a2	    0x488905000000	            mov qword [0x040043a9], rax 	      8328	syntax.c	FUNCTION_118
0x40043a9	              0xc3	                                     ret	      8328	syntax.c	FUNCTION_118
ex_syntime	IF,4:CALL,8:FOR,0:ELSE,4:SWITCH,0:WHILE,0:DO,0:functions,0	283
0x4003c7f	            0x4156	                                push r14	      6675	syntax.c	FUNCTION_107
0x4003c81	            0x4155	                                push r13	      6675	syntax.c	FUNCTION_107
0x4003c83	            0x4154	                                push r12	      6675	syntax.c	FUNCTION_107
0x4003c85	              0x55	                                push rbp	      6675	syntax.c	FUNCTION_107
0x4003c86	              0x53	                                push rbx	      6675	syntax.c	FUNCTION_107
0x4003c87	        0x4883ec40	                           sub rsp, 0x40	      6675	syntax.c	FUNCTION_107
0x4003c8b	    0x64488b042528	                mov rax, qword fs:[0x28]	      6675	syntax.c	FUNCTION_107
0x4003c94	      0x4889442438	             mov qword [rsp + 0x38], rax	      6675	syntax.c	FUNCTION_107
0x4003c99	            0x31c0	                            xor eax, eax	      6675	syntax.c	FUNCTION_107
0x4003c9b	          0x488b1f	                    mov rbx, qword [rdi]	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x4003c9e	          0x803b6f	                    cmp byte [rbx], 0x6f	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x4003ca1	            0x753c	                           jne 0x4003cdf	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x4003ca3	         0xfb64301	               movzx eax, byte [rbx + 1]	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x4003ca7	            0x3c6e	                            cmp al, 0x6e	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x4003ca9	            0x7515	                           jne 0x4003cc0	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x4003cab	        0x807b0200	                   cmp byte [rbx + 2], 0	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x4003caf	            0x752e	                           jne 0x4003cdf	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x4003cb1	    0xc70500000000	               mov dword [0x04003cbb], 1	      6677	syntax.c	FUNCTION_107	IF_1
0x4003cbb	      0xe988040000	                           jmp 0x4004148	      6677	syntax.c	FUNCTION_107	IF_1
0x4003cc0	            0x3c66	                            cmp al, 0x66	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x4003cc2	            0x751b	                           jne 0x4003cdf	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x4003cc4	        0x807b0266	                cmp byte [rbx + 2], 0x66	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x4003cc8	            0x7515	                           jne 0x4003cdf	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x4003cca	        0x807b0300	                   cmp byte [rbx + 3], 0	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x4003cce	            0x750f	                           jne 0x4003cdf	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x4003cd0	    0xc70500000000	               mov dword [0x04003cda], 0	      6679	syntax.c	FUNCTION_107	ELSE_1	IF_2
0x4003cda	      0xe969040000	                           jmp 0x4004148	      6679	syntax.c	FUNCTION_107	ELSE_1	IF_2
0x4003cdf	      0xbf00000000	                              mov edi, 0	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x4003ce4	      0xb906000000	                              mov ecx, 6	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x4003ce9	          0x4889de	                            mov rsi, rbx	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x4003cec	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x4003cee	           0xf97c2	                                 seta dl	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x4003cf1	           0xf92c0	                                 setb al	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x4003cf4	            0x38c2	                              cmp dl, al	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x4003cf6	     0xf85a3000000	                           jne 0x4003d9f	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x4003cfc	    0x488b1d000000	            mov rbx, qword [0x04003d03] 	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0x4003d03	          0x4889df	                            mov rdi, rbx	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0x4003d06	      0xe800000000	                          call 0x4003d0b	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0x4003d0b	            0x85c0	                           test eax, eax	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0x4003d0d	            0x7417	                            je 0x4003d26	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0x4003d0f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x4003d13	      0xbd00000000	                              mov ebp, 0	      6711	syntax.c	FUNCTION_109	FOR_1
0x4003d18	    0x83b860020000	              cmp dword [rax + 0x260], 0	      6711	syntax.c	FUNCTION_109	FOR_1
0x4003d1f	            0x7f26	                            jg 0x4003d47	      6711	syntax.c	FUNCTION_109	FOR_1
0x4003d21	      0xe922040000	                           jmp 0x4004148	      6711	syntax.c	FUNCTION_109	FOR_1
0x4003d26	      0xba05000000	                              mov edx, 5	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0x4003d2b	      0xbe00000000	                              mov esi, 0	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0x4003d30	      0xbf00000000	                              mov edi, 0	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0x4003d35	      0xe800000000	                          call 0x4003d3a	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0x4003d3a	          0x4889c7	                            mov rdi, rax	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0x4003d3d	      0xe800000000	                          call 0x4003d42	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0x4003d42	      0xe901040000	                           jmp 0x4004148	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0x4003d47	          0x4863d5	                         movsxd rdx, ebp	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0x4003d4a	        0x488d1c92	                  lea rbx, [rdx + rdx*4]	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0x4003d4e	        0x48c1e305	                              shl rbx, 5	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0x4003d52	    0x480398700200	            add rbx, qword [rax + 0x270]	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0x4003d59	        0x488d7b70	                   lea rdi, [rbx + 0x70]	      6691	syntax.c	FUNCTION_108	CALL_1
0x4003d5d	      0xe800000000	                          call 0x4003d62	      6691	syntax.c	FUNCTION_108	CALL_1
0x4003d62	    0x488dbb800000	                   lea rdi, [rbx + 0x80]	      6692	syntax.c	FUNCTION_108	CALL_2
0x4003d69	      0xe800000000	                          call 0x4003d6e	      6692	syntax.c	FUNCTION_108	CALL_2
0x4003d6e	    0x48c783900000	               mov qword [rbx + 0x90], 0	      6693	syntax.c	FUNCTION_108
0x4003d79	    0x48c783980000	               mov qword [rbx + 0x98], 0	      6694	syntax.c	FUNCTION_108
0x4003d84	          0x83c501	                              add ebp, 1	      6711	syntax.c	FUNCTION_109	FOR_1
0x4003d87	    0x488b05000000	            mov rax, qword [0x04003d8e] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x4003d8e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x4003d92	    0x3ba860020000	           cmp ebp, dword [rax + 0x260] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x4003d98	            0x7cad	                            jl 0x4003d47	      6711	syntax.c	FUNCTION_109	FOR_1
0x4003d9a	      0xe9a9030000	                           jmp 0x4004148	      6711	syntax.c	FUNCTION_109	FOR_1
0x4003d9f	      0xbf00000000	                              mov edi, 0	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x4003da4	      0xb907000000	                              mov ecx, 7	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x4003da9	          0x4889de	                            mov rsi, rbx	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x4003dac	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x4003dae	           0xf97c2	                                 seta dl	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x4003db1	           0xf92c0	                                 setb al	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x4003db4	            0x38c2	                              cmp dl, al	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x4003db6	     0xf856d030000	                           jne 0x4004129	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x4003dbc	    0x488b3d000000	            mov rdi, qword [0x04003dc3] 	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0x4003dc3	      0xe800000000	                          call 0x4003dc8	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0x4003dc8	            0x85c0	                           test eax, eax	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0x4003dca	            0x7521	                           jne 0x4003ded	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0x4003dcc	      0xba05000000	                              mov edx, 5	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4003dd1	      0xbe00000000	                              mov esi, 0	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4003dd6	      0xbf00000000	                              mov edi, 0	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4003ddb	      0xe800000000	                          call 0x4003de0	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4003de0	          0x4889c7	                            mov rdi, rax	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4003de3	      0xe800000000	                          call 0x4003de8	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4003de8	      0xe95b030000	                           jmp 0x4004148	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4003ded	      0xba32000000	                           mov edx, 0x32	      6783	syntax.c	FUNCTION_112	CALL_4
0x4003df2	      0xbe48000000	                           mov esi, 0x48	      6783	syntax.c	FUNCTION_112	CALL_4
0x4003df7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6783	syntax.c	FUNCTION_112	CALL_4
0x4003dfc	      0xe800000000	                          call 0x4003e01	      6783	syntax.c	FUNCTION_112	CALL_4
0x4003e01	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6784	syntax.c	FUNCTION_112	CALL_5
0x4003e06	      0xe800000000	                          call 0x4003e0b	      6784	syntax.c	FUNCTION_112	CALL_5
0x4003e0b	    0x488b05000000	            mov rax, qword [0x04003e12] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003e12	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003e16	    0x83b860020000	              cmp dword [rax + 0x260], 0	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003e1d	     0xf8efd000000	                           jle 0x4003f20	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003e23	      0xbd00000000	                              mov ebp, 0	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003e28	    0x41bd00000000	                             mov r13d, 0	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003e2e	          0x4963d5	                        movsxd rdx, r13d	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0x4003e31	        0x488d1c92	                  lea rbx, [rdx + rdx*4]	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0x4003e35	        0x48c1e305	                              shl rbx, 5	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0x4003e39	    0x480398700200	            add rbx, qword [rax + 0x270]	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0x4003e40	    0x4883bb900000	               cmp qword [rbx + 0x90], 0	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e48	     0xf8eb4000000	                           jle 0x4003f02	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e4e	      0xbe01000000	                              mov esi, 1	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x4003e53	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x4003e58	      0xe800000000	                          call 0x4003e5d	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x4003e5d	      0x4863442420	         movsxd rax, dword [rsp + 0x20] 	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e62	        0x488d14c0	                  lea rdx, [rax + rax*8]	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e66	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e6b	        0x4c8d24d0	                  lea r12, [rax + rdx*8]	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e6f	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e73	        0x488b5378	            mov rdx, qword [rbx + 0x78] 	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e77	        0x49890424	                    mov qword [r12], rax	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e7b	      0x4989542408	                mov qword [r12 + 8], rdx	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e80	        0x4c8d7370	                   lea r14, [rbx + 0x70]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x4003e84	          0x4c89f6	                            mov rsi, r14	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x4003e87	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x4003e8c	      0xe800000000	                          call 0x4003e91	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x4003e91	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e98	      0x4189442410	             mov dword [r12 + 0x10], eax	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003e9d	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003ea4	      0x4189442414	             mov dword [r12 + 0x14], eax	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003ea9	     0x3ab90000000	             add ebp, dword [rbx + 0x90]	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003eaf	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003eb6	    0x488b93880000	            mov rdx, qword [rbx + 0x88] 	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003ebd	      0x4989442418	             mov qword [r12 + 0x18], rax	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003ec2	      0x4989542420	             mov qword [r12 + 0x20], rdx	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003ec7	          0x4889e2	                            mov rdx, rsp	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0x4003eca	    0x8bb390000000	            mov esi, dword [rbx + 0x90] 	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0x4003ed0	          0x4c89f7	                            mov rdi, r14	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0x4003ed3	      0xe800000000	                          call 0x4003ed8	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0x4003ed8	        0x488b0424	                    mov rax, qword [rsp]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003edc	      0x488b542408	                mov rdx, qword [rsp + 8]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003ee1	      0x4989442428	             mov qword [r12 + 0x28], rax	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003ee6	      0x4989542430	             mov qword [r12 + 0x30], rdx	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003eeb	         0xfbf4354	           movsx eax, word [rbx + 0x54] 	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003eef	      0x4189442438	             mov dword [r12 + 0x38], eax	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003ef4	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003ef8	      0x4989442440	             mov qword [r12 + 0x40], rax	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003efd	      0x8344242001	               add dword [rsp + 0x20], 1	      6804	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4003f02	        0x4183c501	                             add r13d, 1	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003f06	    0x488b05000000	            mov rax, qword [0x04003f0d] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003f0d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003f11	    0x443ba8600200	          cmp r13d, dword [rax + 0x260] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003f18	     0xf8c10ffffff	                            jl 0x4003e2e	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003f1e	            0xeb05	                           jmp 0x4003f25	      6785	syntax.c	FUNCTION_112	FOR_1
0x4003f20	      0xbd00000000	                              mov ebp, 0	      6773	syntax.c	FUNCTION_112
0x4003f25	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      6810	syntax.c	FUNCTION_112	IF_3
0x4003f29	          0x83fe01	                              cmp esi, 1	      6810	syntax.c	FUNCTION_112	IF_3
0x4003f2c	            0x7e17	                           jle 0x4003f45	      6810	syntax.c	FUNCTION_112	IF_3
0x4003f2e	          0x4863f6	                         movsxd rsi, esi	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0x4003f31	      0xb900000000	                              mov ecx, 0	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0x4003f36	      0xba48000000	                           mov edx, 0x48	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0x4003f3b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0x4003f40	      0xe800000000	                          call 0x4003f45	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0x4003f45	      0xba05000000	                              mov edx, 5	      6814	syntax.c	FUNCTION_112	CALL_12
0x4003f4a	      0xbe00000000	                              mov esi, 0	      6814	syntax.c	FUNCTION_112	CALL_12
0x4003f4f	      0xbf00000000	                              mov edi, 0	      6814	syntax.c	FUNCTION_112	CALL_12
0x4003f54	      0xe800000000	                          call 0x4003f59	      6814	syntax.c	FUNCTION_112	CALL_12
0x4003f59	          0x4889c7	                            mov rdi, rax	      6814	syntax.c	FUNCTION_112	CALL_12
0x4003f5c	      0xe800000000	                          call 0x4003f61	      6814	syntax.c	FUNCTION_112	CALL_12
0x4003f61	      0xbf00000000	                              mov edi, 0	      6815	syntax.c	FUNCTION_112	CALL_13
0x4003f66	      0xe800000000	                          call 0x4003f6b	      6815	syntax.c	FUNCTION_112	CALL_13
0x4003f6b	      0x837c242000	               cmp dword [rsp + 0x20], 0	      6816	syntax.c	FUNCTION_112	FOR_2
0x4003f70	     0xf8e65010000	                           jle 0x40040db	      6816	syntax.c	FUNCTION_112	FOR_2
0x4003f76	    0x8b0500000000	            mov eax, dword [0x04003f7c] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x4003f7c	            0x85c0	                           test eax, eax	      6816	syntax.c	FUNCTION_112	FOR_2
0x4003f7e	     0xf8557010000	                           jne 0x40040db	      6816	syntax.c	FUNCTION_112	FOR_2
0x4003f84	      0xbb00000000	                              mov ebx, 0	      6816	syntax.c	FUNCTION_112	FOR_2
0x4003f89	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0x4003f90	          0x4863c3	                         movsxd rax, ebx	      6818	syntax.c	FUNCTION_112	FOR_2
0x4003f93	        0x488d14c0	                  lea rdx, [rax + rax*8]	      6818	syntax.c	FUNCTION_112	FOR_2
0x4003f97	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      6818	syntax.c	FUNCTION_112	FOR_2
0x4003f9c	        0x4c8d2cd0	                  lea r13, [rax + rdx*8]	      6818	syntax.c	FUNCTION_112	FOR_2
0x4003fa0	          0x4c89ef	                            mov rdi, r13	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_15
0x4003fa3	      0xe800000000	                          call 0x4003fa8	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_15
0x4003fa8	          0x4889c7	                            mov rdi, rax	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_15
0x4003fab	      0xe800000000	                          call 0x4003fb0	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_15
0x4003fb0	      0xbf00000000	                              mov edi, 0	      6821	syntax.c	FUNCTION_112	FOR_2	CALL_16
0x4003fb5	      0xe800000000	                          call 0x4003fba	      6821	syntax.c	FUNCTION_112	FOR_2	CALL_16
0x4003fba	      0xbf0d000000	                            mov edi, 0xd	      6822	syntax.c	FUNCTION_112	FOR_2	CALL_17
0x4003fbf	      0xe800000000	                          call 0x4003fc4	      6822	syntax.c	FUNCTION_112	FOR_2	CALL_17
0x4003fc4	        0x49637d10	         movsxd rdi, dword [r13 + 0x10] 	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_18
0x4003fc8	      0xe800000000	                          call 0x4003fcd	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_18
0x4003fcd	      0xbf00000000	                              mov edi, 0	      6824	syntax.c	FUNCTION_112	FOR_2	CALL_19
0x4003fd2	      0xe800000000	                          call 0x4003fd7	      6824	syntax.c	FUNCTION_112	FOR_2	CALL_19
0x4003fd7	      0xbf14000000	                           mov edi, 0x14	      6825	syntax.c	FUNCTION_112	FOR_2	CALL_20
0x4003fdc	      0xe800000000	                          call 0x4003fe1	      6825	syntax.c	FUNCTION_112	FOR_2	CALL_20
0x4003fe1	        0x49637d14	         movsxd rdi, dword [r13 + 0x14] 	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_21
0x4003fe5	      0xe800000000	                          call 0x4003fea	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_21
0x4003fea	      0xbf00000000	                              mov edi, 0	      6827	syntax.c	FUNCTION_112	FOR_2	CALL_22
0x4003fef	      0xe800000000	                          call 0x4003ff4	      6827	syntax.c	FUNCTION_112	FOR_2	CALL_22
0x4003ff4	      0xbf1a000000	                           mov edi, 0x1a	      6828	syntax.c	FUNCTION_112	FOR_2	CALL_23
0x4003ff9	      0xe800000000	                          call 0x4003ffe	      6828	syntax.c	FUNCTION_112	FOR_2	CALL_23
0x4003ffe	        0x498d7d18	                   lea rdi, [r13 + 0x18]	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_25
0x4004002	      0xe800000000	                          call 0x4004007	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_25
0x4004007	          0x4889c7	                            mov rdi, rax	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_25
0x400400a	      0xe800000000	                          call 0x400400f	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_25
0x400400f	      0xbf00000000	                              mov edi, 0	      6830	syntax.c	FUNCTION_112	FOR_2	CALL_26
0x4004014	      0xe800000000	                          call 0x4004019	      6830	syntax.c	FUNCTION_112	FOR_2	CALL_26
0x4004019	      0xbf26000000	                           mov edi, 0x26	      6831	syntax.c	FUNCTION_112	FOR_2	CALL_27
0x400401e	      0xe800000000	                          call 0x4004023	      6831	syntax.c	FUNCTION_112	FOR_2	CALL_27
0x4004023	        0x498d7d28	                   lea rdi, [r13 + 0x28]	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_29
0x4004027	      0xe800000000	                          call 0x400402c	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_29
0x400402c	          0x4889c7	                            mov rdi, rax	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_29
0x400402f	      0xe800000000	                          call 0x4004034	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_29
0x4004034	      0xbf00000000	                              mov edi, 0	      6834	syntax.c	FUNCTION_112	FOR_2	CALL_30
0x4004039	      0xe800000000	                          call 0x400403e	      6834	syntax.c	FUNCTION_112	FOR_2	CALL_30
0x400403e	      0xbf32000000	                           mov edi, 0x32	      6836	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x4004043	      0xe800000000	                          call 0x4004048	      6836	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x4004048	        0x49634538	         movsxd rax, dword [r13 + 0x38] 	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x400404c	        0x488d14c0	                  lea rdx, [rax + rax*8]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x4004050	        0x488d0450	                  lea rax, [rax + rdx*2]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x4004054	        0x48c1e003	                              shl rax, 3	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x4004058	    0x480305000000	             add rax, qword [0x0400405f]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x400405f	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x4004066	      0xe800000000	                          call 0x400406b	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x400406b	      0xbf00000000	                              mov edi, 0	      6838	syntax.c	FUNCTION_112	FOR_2	CALL_34
0x4004070	      0xe800000000	                          call 0x4004075	      6838	syntax.c	FUNCTION_112	FOR_2	CALL_34
0x4004075	      0xbf45000000	                           mov edi, 0x45	      6840	syntax.c	FUNCTION_112	FOR_2	CALL_35
0x400407a	      0xe800000000	                          call 0x400407f	      6840	syntax.c	FUNCTION_112	FOR_2	CALL_35
0x400407f	    0x488b15000000	            mov rdx, qword [0x04004086] 	      6841	syntax.c	FUNCTION_112	FOR_2	IF_4
0x4004086	          0x8d42ba	                   lea eax, [rdx - 0x46]	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x4004089	        0x4883fa50	                           cmp rdx, 0x50	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x400408d	      0xbe14000000	                           mov esi, 0x14	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x4004092	           0xf4df0	                         cmovge esi, eax	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x4004095	        0x498b5540	            mov rdx, qword [r13 + 0x40] 	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0x4004099	      0xb800000000	                              mov eax, 0	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0x400409e	          0x4c89e1	                            mov rcx, r12	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0x40040a1	          0x4889d7	                            mov rdi, rdx	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0x40040a4	            0xf2ae	              repne scasb al, byte [rdi]	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0x40040a6	          0x48f7d1	                                 not rcx	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0x40040a9	        0x4883e901	                              sub rcx, 1	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0x40040ad	            0x39f1	                            cmp ecx, esi	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_38
0x40040af	           0xf4ef1	                         cmovle esi, ecx	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_38
0x40040b2	          0x4889d7	                            mov rdi, rdx	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_38
0x40040b5	      0xe800000000	                          call 0x40040ba	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_38
0x40040ba	      0xbf00000000	                              mov edi, 0	      6848	syntax.c	FUNCTION_112	FOR_2	CALL_39
0x40040bf	      0xe800000000	                          call 0x40040c4	      6848	syntax.c	FUNCTION_112	FOR_2	CALL_39
0x40040c4	          0x83c301	                              add ebx, 1	      6816	syntax.c	FUNCTION_112	FOR_2
0x40040c7	        0x3b5c2420	            cmp ebx, dword [rsp + 0x20] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x40040cb	            0x7d0e	                           jge 0x40040db	      6816	syntax.c	FUNCTION_112	FOR_2
0x40040cd	    0x8b0500000000	            mov eax, dword [0x040040d3] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x40040d3	            0x85c0	                           test eax, eax	      6816	syntax.c	FUNCTION_112	FOR_2
0x40040d5	     0xf84b5feffff	                            je 0x4003f90	      6816	syntax.c	FUNCTION_112	FOR_2
0x40040db	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6850	syntax.c	FUNCTION_112	CALL_40
0x40040e0	      0xe800000000	                          call 0x40040e5	      6850	syntax.c	FUNCTION_112	CALL_40
0x40040e5	    0x8b0500000000	            mov eax, dword [0x040040eb] 	      6851	syntax.c	FUNCTION_112	IF_6
0x40040eb	            0x85c0	                           test eax, eax	      6851	syntax.c	FUNCTION_112	IF_6
0x40040ed	            0x7559	                           jne 0x4004148	      6851	syntax.c	FUNCTION_112	IF_6
0x40040ef	      0xbf00000000	                              mov edi, 0	      6853	syntax.c	FUNCTION_112	IF_6	CALL_41
0x40040f4	      0xe800000000	                          call 0x40040f9	      6853	syntax.c	FUNCTION_112	IF_6	CALL_41
0x40040f9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6854	syntax.c	FUNCTION_112	IF_6	CALL_43
0x40040fe	      0xe800000000	                          call 0x4004103	      6854	syntax.c	FUNCTION_112	IF_6	CALL_43
0x4004103	          0x4889c7	                            mov rdi, rax	      6854	syntax.c	FUNCTION_112	IF_6	CALL_43
0x4004106	      0xe800000000	                          call 0x400410b	      6854	syntax.c	FUNCTION_112	IF_6	CALL_43
0x400410b	      0xbf0d000000	                            mov edi, 0xd	      6855	syntax.c	FUNCTION_112	IF_6	CALL_44
0x4004110	      0xe800000000	                          call 0x4004115	      6855	syntax.c	FUNCTION_112	IF_6	CALL_44
0x4004115	          0x4863fd	                         movsxd rdi, ebp	      6856	syntax.c	FUNCTION_112	IF_6	CALL_45
0x4004118	      0xe800000000	                          call 0x400411d	      6856	syntax.c	FUNCTION_112	IF_6	CALL_45
0x400411d	      0xbf00000000	                              mov edi, 0	      6857	syntax.c	FUNCTION_112	IF_6	CALL_46
0x4004122	      0xe800000000	                          call 0x4004127	      6857	syntax.c	FUNCTION_112	IF_6	CALL_46
0x4004127	            0xeb1f	                           jmp 0x4004148	      6857	syntax.c	FUNCTION_112	IF_6	CALL_46
0x4004129	      0xba05000000	                              mov edx, 5	      6685	syntax.c	FUNCTION_107	CALL_8
0x400412e	      0xbe00000000	                              mov esi, 0	      6685	syntax.c	FUNCTION_107	CALL_8
0x4004133	      0xbf00000000	                              mov edi, 0	      6685	syntax.c	FUNCTION_107	CALL_8
0x4004138	      0xe800000000	                          call 0x400413d	      6685	syntax.c	FUNCTION_107	CALL_8
0x400413d	          0x4889de	                            mov rsi, rbx	      6685	syntax.c	FUNCTION_107	CALL_8
0x4004140	          0x4889c7	                            mov rdi, rax	      6685	syntax.c	FUNCTION_107	CALL_8
0x4004143	      0xe800000000	                          call 0x4004148	      6685	syntax.c	FUNCTION_107	CALL_8
0x4004148	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      6686	syntax.c	FUNCTION_107
0x400414d	    0x644833042528	                xor rax, qword fs:[0x28]	      6686	syntax.c	FUNCTION_107
0x4004156	            0x7405	                            je 0x400415d	      6686	syntax.c	FUNCTION_107
0x4004158	      0xe800000000	                          call 0x400415d	      6686	syntax.c	FUNCTION_107
0x400415d	        0x4883c440	                           add rsp, 0x40	      6686	syntax.c	FUNCTION_107
0x4004161	              0x5b	                                 pop rbx	      6686	syntax.c	FUNCTION_107
0x4004162	              0x5d	                                 pop rbp	      6686	syntax.c	FUNCTION_107
0x4004163	            0x415c	                                 pop r12	      6686	syntax.c	FUNCTION_107
0x4004165	            0x415d	                                 pop r13	      6686	syntax.c	FUNCTION_107
0x4004167	            0x415e	                                 pop r14	      6686	syntax.c	FUNCTION_107
0x4004169	              0xc3	                                     ret	      6686	syntax.c	FUNCTION_107
syn_gui_attr2entry	IF,1:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	10
0x4004c7f	    0x81ef00010000	                          sub edi, 0x100	      9160	syntax.c	FUNCTION_137
0x4004c85	    0x3b3d00000000	            cmp edi, dword [0x04004c8b] 	      9161	syntax.c	FUNCTION_137	IF_1
0x4004c8b	            0x7d13	                           jge 0x4004ca0	      9161	syntax.c	FUNCTION_137	IF_1
0x4004c8d	          0x4863ff	                         movsxd rdi, edi	      9163	syntax.c	FUNCTION_137	CALL_1
0x4004c90	        0x488d14bf	                  lea rdx, [rdi + rdi*4]	      9163	syntax.c	FUNCTION_137	CALL_1
0x4004c94	    0x488b05000000	            mov rax, qword [0x04004c9b] 	      9163	syntax.c	FUNCTION_137	CALL_1
0x4004c9b	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9163	syntax.c	FUNCTION_137	CALL_1
0x4004c9f	              0xc3	                                     ret	      9163	syntax.c	FUNCTION_137	CALL_1
0x4004ca0	      0xb800000000	                              mov eax, 0	      9162	syntax.c	FUNCTION_137	IF_1
0x4004ca5	              0xc3	                                     ret	      9164	syntax.c	FUNCTION_137
set_normal_colors	IF,7:CALL,14:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	61
0x4005601	              0x53	                                push rbx	      8408	syntax.c	FUNCTION_121
0x4005602	    0x833d00000000	               cmp dword [0x04005609], 0	      8411	syntax.c	FUNCTION_121	IF_1
0x4005609	     0xf8488000000	                            je 0x4005697	      8411	syntax.c	FUNCTION_121	IF_1
0x400560f	      0xbf00000000	                              mov edi, 0	      8496	syntax.c	FUNCTION_122	CALL_1
0x4005614	      0xe800000000	                          call 0x4005619	      8496	syntax.c	FUNCTION_122	CALL_1
0x4005619	          0x83e801	                              sub eax, 1	      8497	syntax.c	FUNCTION_122	IF_1
0x400561c	            0x89c3	                            mov ebx, eax	      8497	syntax.c	FUNCTION_122	IF_1
0x400561e	     0xf88f2000000	                            js 0x4005716	      8497	syntax.c	FUNCTION_122	IF_1
0x4005624	      0xba00000000	                              mov edx, 0	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x4005629	      0xbe00000000	                              mov esi, 0	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x400562e	            0x89c7	                            mov edi, eax	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x4005630	      0xe802f4ffff	               call sym.gui_do_one_color	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x4005635	          0x4863c3	                         movsxd rax, ebx	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x4005638	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x400563c	        0x488d1450	                  lea rdx, [rax + rdx*2]	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x4005640	    0x488b05000000	            mov rax, qword [0x04005647] 	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x4005647	        0x488d04d0	                  lea rax, [rax + rdx*8]	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x400564b	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x400564f	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x4005656	            0x7409	                            je 0x4005661	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x4005658	    0x488915000000	            mov qword [0x0400565f], rdx 	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x400565f	            0xeb0e	                           jmp 0x400566f	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x4005661	    0x488b15000000	            mov rdx, qword [0x04005668] 	      8504	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x4005668	    0x488915000000	            mov qword [0x0400566f], rdx 	      8504	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x400566f	        0x488b4048	            mov rax, qword [rax + 0x48] 	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x4005673	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x4005679	            0x740c	                            je 0x4005687	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x400567b	    0x488905000000	            mov qword [0x04005682], rax 	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x4005682	      0xe980000000	                           jmp 0x4005707	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x4005687	    0x488b05000000	            mov rax, qword [0x0400568e] 	      8508	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x400568e	    0x488905000000	            mov qword [0x04005695], rax 	      8508	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x4005695	            0xeb70	                           jmp 0x4005707	      8508	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x4005697	      0xbf00000000	                              mov edi, 0	      8459	syntax.c	FUNCTION_121	ELSE_1	CALL_9
0x400569c	      0xe800000000	                          call 0x40056a1	      8459	syntax.c	FUNCTION_121	ELSE_1	CALL_9
0x40056a1	          0x83e801	                              sub eax, 1	      8460	syntax.c	FUNCTION_121	ELSE_1	IF_6
0x40056a4	            0x89c3	                            mov ebx, eax	      8460	syntax.c	FUNCTION_121	ELSE_1	IF_6
0x40056a6	            0x786e	                            js 0x4005716	      8460	syntax.c	FUNCTION_121	ELSE_1	IF_6
0x40056a8	      0xba00000000	                              mov edx, 0	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x40056ad	      0xbe00000000	                              mov esi, 0	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x40056b2	            0x89c7	                            mov edi, eax	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x40056b4	      0xe87ef3ffff	               call sym.gui_do_one_color	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x40056b9	          0x4863c3	                         movsxd rax, ebx	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x40056bc	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x40056c0	        0x488d1450	                  lea rdx, [rax + rdx*2]	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x40056c4	    0x488b05000000	            mov rax, qword [0x040056cb] 	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x40056cb	        0x488d04d0	                  lea rax, [rax + rdx*8]	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x40056cf	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x40056d3	    0x483b15000000	            cmp rdx, qword [0x040056da] 	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x40056da	            0x750d	                           jne 0x40056e9	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x40056dc	    0x488b0d000000	            mov rcx, qword [0x040056e3] 	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x40056e3	        0x48394848	            cmp qword [rax + 0x48], rcx 	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x40056e7	            0x742d	                            je 0x4005716	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x40056e9	    0x488915000000	            mov qword [0x040056f0], rdx 	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x40056f0	        0x488b4048	            mov rax, qword [rax + 0x48] 	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x40056f4	    0x488905000000	            mov qword [0x040056fb], rax 	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x40056fb	    0xc70500000000	           mov dword [0x04005705], 0x32 	      8473	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4005705	            0xeb0f	                           jmp 0x4005716	      8478	syntax.c	FUNCTION_121
0x4005707	      0xe800000000	                          call 0x400570c	      8418	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_2
0x400570c	    0xc70500000000	           mov dword [0x04005716], 0x32 	      8419	syntax.c	FUNCTION_121	IF_1	IF_2
0x4005716	              0x5b	                                 pop rbx	      8478	syntax.c	FUNCTION_121
0x4005717	              0xc3	                                     ret	      8478	syntax.c	FUNCTION_121
init_highlight	IF,10:CALL,13:FOR,2:ELSE,4:SWITCH,0:WHILE,0:DO,0:functions,0	106
0x400d10a	            0x4155	                                push r13	      7116	syntax.c	FUNCTION_113
0x400d10c	            0x4154	                                push r12	      7116	syntax.c	FUNCTION_113
0x400d10e	              0x55	                                push rbp	      7116	syntax.c	FUNCTION_113
0x400d10f	              0x53	                                push rbx	      7116	syntax.c	FUNCTION_113
0x400d110	        0x4883ec08	                              sub rsp, 8	      7116	syntax.c	FUNCTION_113
0x400d114	          0x4189fc	                           mov r12d, edi	      7116	syntax.c	FUNCTION_113
0x400d117	            0x89f5	                            mov ebp, esi	      7116	syntax.c	FUNCTION_113
0x400d119	      0xbf00000000	                              mov edi, 0	      7127	syntax.c	FUNCTION_113	CALL_1
0x400d11e	      0xe800000000	                          call 0x400d123	      7127	syntax.c	FUNCTION_113	CALL_1
0x400d123	          0x4885c0	                           test rax, rax	      7128	syntax.c	FUNCTION_113	IF_1
0x400d126	            0x742d	                            je 0x400d155	      7128	syntax.c	FUNCTION_113	IF_1
0x400d128	          0x4889c7	                            mov rdi, rax	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x400d12b	      0xe800000000	                          call 0x400d130	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x400d130	          0x4889c3	                            mov rbx, rax	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x400d133	          0x4885c0	                           test rax, rax	      7135	syntax.c	FUNCTION_113	IF_1	IF_2
0x400d136	            0x741d	                            je 0x400d155	      7135	syntax.c	FUNCTION_113	IF_1	IF_2
0x400d138	          0x4889c7	                            mov rdi, rax	      7137	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_3
0x400d13b	      0xe800000000	                          call 0x400d140	      7137	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_3
0x400d140	          0x4189c5	                           mov r13d, eax	      7137	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_3
0x400d143	          0x4889df	                            mov rdi, rbx	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400d146	      0xe800000000	                          call 0x400d14b	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400d14b	        0x4183fd01	                             cmp r13d, 1	      7139	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0x400d14f	     0xf844d010000	                            je 0x400d2a2	      7139	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0x400d155	          0x4585e4	                         test r12d, r12d	      7149	syntax.c	FUNCTION_113	IF_4
0x400d158	            0x743c	                            je 0x400d196	      7149	syntax.c	FUNCTION_113	IF_4
0x400d15a	    0xc70500000000	               mov dword [0x0400d164], 1	      7151	syntax.c	FUNCTION_113	IF_4
0x400d164	    0x488b3d000000	            mov rdi, qword [0x0400d16b] 	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d16b	          0x4885ff	                           test rdi, rdi	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d16e	            0x7433	                            je 0x400d1a3	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d170	      0xbb00000000	                              mov ebx, 0	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d175	      0xba01000000	                              mov edx, 1	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d17a	            0x89ee	                            mov esi, ebp	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d17c	      0xe800000000	                          call 0x400d181	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d181	          0x83c301	                              add ebx, 1	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d184	          0x4863c3	                         movsxd rax, ebx	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d187	    0x488b3cc50000	                  mov rdi, qword [rax*8]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d18f	          0x4885ff	                           test rdi, rdi	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d192	            0x75e1	                           jne 0x400d175	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d194	            0xeb0d	                           jmp 0x400d1a3	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d196	    0x833d00000000	               cmp dword [0x0400d19d], 0	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x400d19d	     0xf84ff000000	                            je 0x400d2a2	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x400d1a3	    0x488b05000000	            mov rax, qword [0x0400d1aa] 	      7162	syntax.c	FUNCTION_113	IF_6
0x400d1aa	          0x80386c	                    cmp byte [rax], 0x6c	      7162	syntax.c	FUNCTION_113	IF_6
0x400d1ad	    0x41bc00000000	                             mov r12d, 0	      7165	syntax.c	FUNCTION_113	ELSE_2
0x400d1b3	      0xb800000000	                              mov eax, 0	      7165	syntax.c	FUNCTION_113	ELSE_2
0x400d1b8	        0x4c0f44e0	                          cmove r12, rax	      7165	syntax.c	FUNCTION_113	ELSE_2
0x400d1bc	        0x498b3c24	                    mov rdi, qword [r12]	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d1c0	          0x4885ff	                           test rdi, rdi	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d1c3	            0x7420	                            je 0x400d1e5	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d1c5	      0xbb00000000	                              mov ebx, 0	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d1ca	      0xba01000000	                              mov edx, 1	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d1cf	            0x89ee	                            mov esi, ebp	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d1d1	      0xe800000000	                          call 0x400d1d6	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d1d6	          0x83c301	                              add ebx, 1	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d1d9	          0x4863c3	                         movsxd rax, ebx	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d1dc	        0x498b3cc4	            mov rdi, qword [r12 + rax*8]	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d1e0	          0x4885ff	                           test rdi, rdi	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d1e3	            0x75e5	                           jne 0x400d1ca	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d1e5	    0x833d00000000	               cmp dword [0x0400d1ec], 8	      7174	syntax.c	FUNCTION_113	IF_7
0x400d1ec	            0x7e29	                           jle 0x400d217	      7174	syntax.c	FUNCTION_113	IF_7
0x400d1ee	    0x488b05000000	            mov rax, qword [0x0400d1f5] 	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d1f5	          0x80386c	                    cmp byte [rax], 0x6c	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d1f8	      0xbf00000000	                              mov edi, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d1fd	      0xb800000000	                              mov eax, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d202	        0x480f44f8	                          cmove rdi, rax	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d206	      0xba01000000	                              mov edx, 1	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d20b	      0xbe00000000	                              mov esi, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d210	      0xe800000000	                          call 0x400d215	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d215	            0xeb34	                           jmp 0x400d24b	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d217	      0xba01000000	                              mov edx, 1	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400d21c	      0xbe00000000	                              mov esi, 0	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400d221	      0xbf00000000	                              mov edi, 0	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400d226	      0xe800000000	                          call 0x400d22b	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400d22b	    0x488b05000000	            mov rax, qword [0x0400d232] 	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x400d232	          0x80386c	                    cmp byte [rax], 0x6c	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x400d235	            0x7514	                           jne 0x400d24b	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x400d237	      0xba01000000	                              mov edx, 1	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400d23c	      0xbe00000000	                              mov esi, 0	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400d241	      0xbf00000000	                              mov edi, 0	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400d246	      0xe800000000	                          call 0x400d24b	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400d24b	      0xbf00000000	                              mov edi, 0	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400d250	      0xe800000000	                          call 0x400d255	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400d255	          0x4885c0	                           test rax, rax	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400d258	            0x7448	                            je 0x400d2a2	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400d25a	    0x8b0500000000	            mov eax, dword [0x0400d260] 	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x400d260	          0x83f804	                              cmp eax, 4	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x400d263	            0x7e1e	                           jle 0x400d283	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x400d265	      0xba05000000	                              mov edx, 5	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d26a	      0xbe00000000	                              mov esi, 0	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d26f	      0xbf00000000	                              mov edi, 0	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d274	      0xe800000000	                          call 0x400d279	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d279	          0x4889c7	                            mov rdi, rax	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d27c	      0xe800000000	                          call 0x400d281	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d281	            0xeb1f	                           jmp 0x400d2a2	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d283	          0x83c001	                              add eax, 1	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400d286	    0x890500000000	            mov dword [0x0400d28c], eax 	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400d28c	      0xbe01000000	                              mov esi, 1	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x400d291	      0xbf00000000	                              mov edi, 0	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x400d296	      0xe800000000	                          call 0x400d29b	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x400d29b	    0x832d00000000	               sub dword [0x0400d2a2], 1	      7200	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400d2a2	        0x4883c408	                              add rsp, 8	      7204	syntax.c	FUNCTION_113
0x400d2a6	              0x5b	                                 pop rbx	      7204	syntax.c	FUNCTION_113
0x400d2a7	              0x5d	                                 pop rbp	      7204	syntax.c	FUNCTION_113
0x400d2a8	            0x415c	                                 pop r12	      7204	syntax.c	FUNCTION_113
0x400d2aa	            0x415d	                                 pop r13	      7204	syntax.c	FUNCTION_113
0x400d2ac	              0xc3	                                     ret	      7204	syntax.c	FUNCTION_113
get_attr_entry	IF,9:CALL,10:FOR,2:ELSE,3:SWITCH,0:WHILE,0:DO,0:functions,0	181
0x4004527	            0x4157	                                push r15	      8789	syntax.c	FUNCTION_131
0x4004529	            0x4156	                                push r14	      8789	syntax.c	FUNCTION_131
0x400452b	            0x4155	                                push r13	      8789	syntax.c	FUNCTION_131
0x400452d	            0x4154	                                push r12	      8789	syntax.c	FUNCTION_131
0x400452f	              0x55	                                push rbp	      8789	syntax.c	FUNCTION_131
0x4004530	              0x53	                                push rbx	      8789	syntax.c	FUNCTION_131
0x4004531	        0x4883ec18	                           sub rsp, 0x18	      8789	syntax.c	FUNCTION_131
0x4004535	          0x4989ff	                            mov r15, rdi	      8789	syntax.c	FUNCTION_131
0x4004538	      0x4889742408	                mov qword [rsp + 8], rsi	      8789	syntax.c	FUNCTION_131
0x400453d	    0xc74708280000	               mov dword [rdi + 8], 0x28	      8797	syntax.c	FUNCTION_131
0x4004544	    0xc7470c070000	                mov dword [rdi + 0xc], 7	      8798	syntax.c	FUNCTION_131
0x400454b	          0x448b2f	                   mov r13d, dword [rdi]	      8803	syntax.c	FUNCTION_131	FOR_1
0x400454e	          0x4585ed	                         test r13d, r13d	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004551	     0xf8e0c010000	                           jle 0x4004663	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004557	        0x440fb736	                  movzx r14d, word [rsi]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400455b	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400455f	      0xbd00000000	                              mov ebp, 0	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004564	          0x4989dc	                            mov r12, rbx	      8805	syntax.c	FUNCTION_131	FOR_1
0x4004567	        0x66443b33	                    cmp r14w, word [rbx]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400456b	     0xf85e2000000	                           jne 0x4004653	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004571	    0x4981ff000000	                              cmp r15, 0	      8807	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004578	            0x7542	                           jne 0x40045bc	      8807	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400457a	      0x488b442408	                mov rax, qword [rsp + 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400457f	        0x488b4b08	                mov rcx, qword [rbx + 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004583	        0x48394808	                cmp qword [rax + 8], rcx	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004587	     0xf85c6000000	                           jne 0x4004653	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400458d	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004591	        0x48395010	            cmp qword [rax + 0x10], rdx 	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004595	     0xf85b8000000	                           jne 0x4004653	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400459b	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400459f	        0x48394818	            cmp qword [rax + 0x18], rcx 	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045a3	     0xf85aa000000	                           jne 0x4004653	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045a9	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045ad	        0x48394820	            cmp qword [rax + 0x20], rcx 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045b1	     0xf859c000000	                           jne 0x4004653	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045b7	      0xe98c000000	                           jmp 0x4004648	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045bc	    0x4981ff000000	                              cmp r15, 0	      8820	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045c3	            0x7559	                           jne 0x400461e	      8820	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045c5	      0x488b442408	                mov rax, qword [rsp + 8]	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045ca	        0x488b7808	                mov rdi, qword [rax + 8]	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045ce	        0x488b7308	                mov rsi, qword [rbx + 8]	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045d2	          0x4885ff	                           test rdi, rdi	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045d5	           0xf95c2	                                setne dl	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045d8	          0x4885f6	                           test rsi, rsi	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045db	           0xf94c0	                                 sete al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045de	            0x38c2	                              cmp dl, al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045e0	            0x7471	                            je 0x4004653	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045e2	          0x4885ff	                           test rdi, rdi	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045e5	            0x7409	                            je 0x40045f0	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045e7	      0xe800000000	                          call 0x40045ec	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40045ec	            0x85c0	                           test eax, eax	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40045ee	            0x7563	                           jne 0x4004653	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40045f0	      0x488b442408	                mov rax, qword [rsp + 8]	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045f5	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045f9	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40045fe	          0x4885ff	                           test rdi, rdi	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004601	           0xf95c2	                                setne dl	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004604	          0x4885f6	                           test rsi, rsi	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004607	           0xf94c0	                                 sete al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400460a	            0x38c2	                              cmp dl, al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400460c	            0x7445	                            je 0x4004653	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400460e	          0x4885ff	                           test rdi, rdi	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004611	            0x7435	                            je 0x4004648	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004613	      0xe800000000	                          call 0x4004618	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4004618	            0x85c0	                           test eax, eax	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400461a	            0x7537	                           jne 0x4004653	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400461c	            0xeb2a	                           jmp 0x4004648	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400461e	    0x4981ff000000	                              cmp r15, 0	      8833	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004625	            0x752c	                           jne 0x4004653	      8833	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004627	      0x488b442408	                mov rax, qword [rsp + 8]	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400462c	          0x8b4b08	                mov ecx, dword [rbx + 8]	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400462f	          0x394808	                cmp dword [rax + 8], ecx	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004632	            0x751f	                           jne 0x4004653	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004634	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004638	        0x48395010	            cmp qword [rax + 0x10], rdx 	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400463c	            0x7515	                           jne 0x4004653	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400463e	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004642	        0x48394818	            cmp qword [rax + 0x18], rcx 	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004646	            0x750b	                           jne 0x4004653	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004648	    0x8d8500010000	                  lea eax, [rbp + 0x100]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400464e	      0xe9a1010000	                           jmp 0x40047f4	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004653	          0x83c501	                              add ebp, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004656	        0x4883c328	                           add rbx, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x400465a	          0x4439ed	                           cmp ebp, r13d	      8803	syntax.c	FUNCTION_131	FOR_1
0x400465d	     0xf8501ffffff	                           jne 0x4004564	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004663	    0x4181c5000100	                         add r13d, 0x100	      8849	syntax.c	FUNCTION_131	IF_2
0x400466a	    0x4181fdffff00	                        cmp r13d, 0xffff	      8849	syntax.c	FUNCTION_131	IF_2
0x4004671	            0x7e72	                           jle 0x40046e5	      8849	syntax.c	FUNCTION_131	IF_2
0x4004673	    0x833d00000000	               cmp dword [0x0400467a], 0	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400467a	            0x7426	                            je 0x40046a2	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400467c	      0xba05000000	                              mov edx, 5	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4004681	      0xbe00000000	                              mov esi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4004686	      0xbf00000000	                              mov edi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400468b	      0xe800000000	                          call 0x4004690	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4004690	          0x4889c7	                            mov rdi, rax	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4004693	      0xe800000000	                          call 0x4004698	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4004698	      0xb800000000	                              mov eax, 0	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x400469d	      0xe952010000	                           jmp 0x40047f4	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x40046a2	    0xc70500000000	               mov dword [0x040046ac], 1	      8861	syntax.c	FUNCTION_131	IF_2
0x40046ac	      0xe800000000	                          call 0x40046b1	      8863	syntax.c	FUNCTION_131	IF_2	CALL_5
0x40046b1	    0xc70500000000	           mov dword [0x040046bb], 0x32 	      8865	syntax.c	FUNCTION_131	IF_2
0x40046bb	    0x833d00000000	               cmp dword [0x040046c2], 0	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40046c2	            0x7e17	                           jle 0x40046db	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40046c4	      0xbb00000000	                              mov ebx, 0	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40046c9	            0x89df	                            mov edi, ebx	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x40046cb	      0xe833010000	                    call sym.set_hl_attr	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x40046d0	          0x83c301	                              add ebx, 1	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40046d3	    0x391d00000000	            cmp dword [0x040046d9], ebx 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40046d9	            0x7fee	                            jg 0x40046c9	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40046db	    0xc70500000000	               mov dword [0x040046e5], 0	      8870	syntax.c	FUNCTION_131	IF_2
0x40046e5	      0xbe01000000	                              mov esi, 1	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x40046ea	          0x4c89ff	                            mov rdi, r15	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x40046ed	      0xe800000000	                          call 0x40046f2	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x40046f2	            0x85c0	                           test eax, eax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x40046f4	     0xf84fa000000	                            je 0x40047f4	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x40046fa	          0x496307	                 movsxd rax, dword [r15]	      8879	syntax.c	FUNCTION_131
0x40046fd	        0x488d1480	                  lea rdx, [rax + rax*4]	      8879	syntax.c	FUNCTION_131
0x4004701	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      8879	syntax.c	FUNCTION_131
0x4004705	        0x488d1cd0	                  lea rbx, [rax + rdx*8]	      8879	syntax.c	FUNCTION_131
0x4004709	    0x48c703000000	                      mov qword [rbx], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004710	    0x48c743080000	                  mov qword [rbx + 8], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004718	    0x48c743100000	               mov qword [rbx + 0x10], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004720	    0x48c743180000	               mov qword [rbx + 0x18], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004728	    0x48c743200000	               mov qword [rbx + 0x20], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004730	      0x488b442408	                mov rax, qword [rsp + 8]	      8881	syntax.c	FUNCTION_131
0x4004735	           0xfb700	                   movzx eax, word [rax]	      8881	syntax.c	FUNCTION_131
0x4004738	          0x668903	                      mov word [rbx], ax	      8881	syntax.c	FUNCTION_131
0x400473b	    0x4981ff000000	                              cmp r15, 0	      8883	syntax.c	FUNCTION_131	IF_5
0x4004742	            0x7527	                           jne 0x400476b	      8883	syntax.c	FUNCTION_131	IF_5
0x4004744	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8885	syntax.c	FUNCTION_131	IF_5
0x4004749	        0x488b4108	                mov rax, qword [rcx + 8]	      8885	syntax.c	FUNCTION_131	IF_5
0x400474d	        0x48894308	                mov qword [rbx + 8], rax	      8885	syntax.c	FUNCTION_131	IF_5
0x4004751	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      8886	syntax.c	FUNCTION_131	IF_5
0x4004755	        0x48894310	             mov qword [rbx + 0x10], rax	      8886	syntax.c	FUNCTION_131	IF_5
0x4004759	        0x488b4118	            mov rax, qword [rcx + 0x18] 	      8887	syntax.c	FUNCTION_131	IF_5
0x400475d	        0x48894318	             mov qword [rbx + 0x18], rax	      8887	syntax.c	FUNCTION_131	IF_5
0x4004761	        0x488b4120	            mov rax, qword [rcx + 0x20] 	      8888	syntax.c	FUNCTION_131	IF_5
0x4004765	        0x48894320	             mov qword [rbx + 0x20], rax	      8888	syntax.c	FUNCTION_131	IF_5
0x4004769	            0xeb7b	                           jmp 0x40047e6	      8888	syntax.c	FUNCTION_131	IF_5
0x400476b	    0x4981ff000000	                              cmp r15, 0	      8894	syntax.c	FUNCTION_131	IF_6
0x4004772	            0x7544	                           jne 0x40047b8	      8894	syntax.c	FUNCTION_131	IF_6
0x4004774	      0x488b442408	                mov rax, qword [rsp + 8]	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x4004779	        0x488b7808	                mov rdi, qword [rax + 8]	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x400477d	          0x4885ff	                           test rdi, rdi	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x4004780	            0x750a	                           jne 0x400478c	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x4004782	    0x48c743080000	                  mov qword [rbx + 8], 0	      8897	syntax.c	FUNCTION_131	IF_6	IF_7
0x400478a	            0xeb09	                           jmp 0x4004795	      8897	syntax.c	FUNCTION_131	IF_6	IF_7
0x400478c	      0xe800000000	                          call 0x4004791	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x4004791	        0x48894308	                mov qword [rbx + 8], rax	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x4004795	      0x488b442408	                mov rax, qword [rsp + 8]	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x400479a	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x400479e	          0x4885ff	                           test rdi, rdi	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x40047a1	            0x750a	                           jne 0x40047ad	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x40047a3	    0x48c743100000	               mov qword [rbx + 0x10], 0	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x40047ab	            0xeb39	                           jmp 0x40047e6	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x40047ad	      0xe800000000	                          call 0x40047b2	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x40047b2	        0x48894310	             mov qword [rbx + 0x10], rax	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x40047b6	            0xeb2e	                           jmp 0x40047e6	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x40047b8	    0x4981ff000000	                              cmp r15, 0	      8905	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40047bf	            0x7525	                           jne 0x40047e6	      8905	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40047c1	      0x488b542408	                mov rdx, qword [rsp + 8]	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40047c6	         0xfb74208	               movzx eax, word [rdx + 8]	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40047ca	        0x66894308	                  mov word [rbx + 8], ax	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40047ce	         0xfb7420a	            movzx eax, word [rdx + 0xa] 	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40047d2	        0x6689430a	                mov word [rbx + 0xa], ax	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40047d6	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40047da	        0x48894310	             mov qword [rbx + 0x10], rax	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40047de	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40047e2	        0x48894318	             mov qword [rbx + 0x18], rax	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40047e6	          0x418b07	                    mov eax, dword [r15]	      8914	syntax.c	FUNCTION_131
0x40047e9	          0x8d5001	                      lea edx, [rax + 1]	      8914	syntax.c	FUNCTION_131
0x40047ec	          0x418917	                    mov dword [r15], edx	      8914	syntax.c	FUNCTION_131
0x40047ef	       0x500010000	                          add eax, 0x100	      8915	syntax.c	FUNCTION_131
0x40047f4	        0x4883c418	                           add rsp, 0x18	      8916	syntax.c	FUNCTION_131
0x40047f8	              0x5b	                                 pop rbx	      8916	syntax.c	FUNCTION_131
0x40047f9	              0x5d	                                 pop rbp	      8916	syntax.c	FUNCTION_131
0x40047fa	            0x415c	                                 pop r12	      8916	syntax.c	FUNCTION_131
0x40047fc	            0x415d	                                 pop r13	      8916	syntax.c	FUNCTION_131
0x40047fe	            0x415e	                                 pop r14	      8916	syntax.c	FUNCTION_131
0x4004800	            0x415f	                                 pop r15	      8916	syntax.c	FUNCTION_131
0x4004802	              0xc3	                                     ret	      8916	syntax.c	FUNCTION_131
syn_cmd_iskeyword	IF,4:CALL,16:FOR,0:ELSE,3:SWITCH,0:WHILE,0:DO,0:functions,0	101
0x40028e9	            0x4154	                                push r12	      3560	syntax.c	FUNCTION_48
0x40028eb	              0x55	                                push rbp	      3560	syntax.c	FUNCTION_48
0x40028ec	              0x53	                                push rbx	      3560	syntax.c	FUNCTION_48
0x40028ed	        0x4883ec30	                           sub rsp, 0x30	      3560	syntax.c	FUNCTION_48
0x40028f1	    0x64488b042528	                mov rax, qword fs:[0x28]	      3560	syntax.c	FUNCTION_48
0x40028fa	      0x4889442428	             mov qword [rsp + 0x28], rax	      3560	syntax.c	FUNCTION_48
0x40028ff	            0x31c0	                            xor eax, eax	      3560	syntax.c	FUNCTION_48
0x4002901	        0x837f3000	               cmp dword [rdi + 0x30], 0	      3565	syntax.c	FUNCTION_48	IF_1
0x4002905	     0xf85bd010000	                           jne 0x4002ac8	      3565	syntax.c	FUNCTION_48	IF_1
0x400290b	          0x488b3f	                    mov rdi, qword [rdi]	      3561	syntax.c	FUNCTION_48
0x400290e	      0xe800000000	                          call 0x4002913	      3568	syntax.c	FUNCTION_48	CALL_1
0x4002913	          0x4889c3	                            mov rbx, rax	      3568	syntax.c	FUNCTION_48	CALL_1
0x4002916	          0x803800	                       cmp byte [rax], 0	      3569	syntax.c	FUNCTION_48	IF_2
0x4002919	            0x755a	                           jne 0x4002975	      3569	syntax.c	FUNCTION_48	IF_2
0x400291b	      0xbf00000000	                              mov edi, 0	      3571	syntax.c	FUNCTION_48	IF_2	CALL_2
0x4002920	      0xe800000000	                          call 0x4002925	      3571	syntax.c	FUNCTION_48	IF_2	CALL_2
0x4002925	      0xba05000000	                              mov edx, 5	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x400292a	      0xbe00000000	                              mov esi, 0	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x400292f	      0xbf00000000	                              mov edi, 0	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x4002934	      0xe800000000	                          call 0x4002939	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x4002939	          0x4889c7	                            mov rdi, rax	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x400293c	      0xe800000000	                          call 0x4002941	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x4002941	    0x488b05000000	            mov rax, qword [0x04002948] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x4002948	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x400294c	    0x488bb8b00400	           mov rdi, qword [rax + 0x4b0] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x4002953	    0x483b3d000000	            cmp rdi, qword [0x0400295a] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x400295a	            0x740a	                            je 0x4002966	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x400295c	      0xe800000000	                          call 0x4002961	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x4002961	      0xe951010000	                           jmp 0x4002ab7	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x4002966	      0xbf00000000	                              mov edi, 0	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x400296b	      0xe800000000	                          call 0x4002970	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4002970	      0xe942010000	                           jmp 0x4002ab7	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4002975	      0xba05000000	                              mov edx, 5	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x400297a	      0xbe00000000	                              mov esi, 0	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x400297f	          0x4889c7	                            mov rdi, rax	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4002982	      0xe800000000	                          call 0x4002987	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4002987	            0x85c0	                           test eax, eax	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4002989	            0x753f	                           jne 0x40029ca	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x400298b	    0x488b1d000000	            mov rbx, qword [0x04002992] 	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x4002992	    0x488b05000000	            mov rax, qword [0x04002999] 	        59	string3.h	FUNCTION_191	CALL_3
0x4002999	    0x488db0a00900	                  lea rsi, [rax + 0x9a0]	        59	string3.h	FUNCTION_191	CALL_3
0x40029a0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        59	string3.h	FUNCTION_191	CALL_3
0x40029a4	    0x488db88c0400	                  lea rdi, [rax + 0x48c]	        59	string3.h	FUNCTION_191	CALL_3
0x40029ab	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_191	CALL_3
0x40029b0	      0xe800000000	                          call 0x40029b5	        59	string3.h	FUNCTION_191	CALL_3
0x40029b5	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x40029b9	    0x4881c7b00400	                          add rdi, 0x4b0	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x40029c0	      0xe800000000	                          call 0x40029c5	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x40029c5	      0xe9ed000000	                           jmp 0x4002ab7	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x40029ca	    0x488b2d000000	            mov rbp, qword [0x040029d1] 	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x40029d1	    0x488b85a00900	           mov rax, qword [rbp + 0x9a0] 	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x40029d8	        0x48890424	                    mov qword [rsp], rax	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x40029dc	    0x488b85a80900	           mov rax, qword [rbp + 0x9a8] 	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x40029e3	      0x4889442408	                mov qword [rsp + 8], rax	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x40029e8	    0x488b85b00900	           mov rax, qword [rbp + 0x9b0] 	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x40029ef	      0x4889442410	             mov qword [rsp + 0x10], rax	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x40029f4	    0x488b85b80900	           mov rax, qword [rbp + 0x9b8] 	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x40029fb	      0x4889442418	             mov qword [rsp + 0x18], rax	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x4002a00	    0x4c8ba5b81400	          mov r12, qword [rbp + 0x14b8] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4002a07	          0x4889df	                            mov rdi, rbx	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x4002a0a	      0xe800000000	                          call 0x4002a0f	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x4002a0f	    0x488985b81400	          mov qword [rbp + 0x14b8], rax 	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x4002a16	      0xbe00000000	                              mov esi, 0	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x4002a1b	    0x488b3d000000	            mov rdi, qword [0x04002a22] 	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x4002a22	      0xe800000000	                          call 0x4002a27	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x4002a27	    0x488b1d000000	            mov rbx, qword [0x04002a2e] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x4002a2e	    0x488b2d000000	            mov rbp, qword [0x04002a35] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x4002a35	    0x488db3a00900	                  lea rsi, [rbx + 0x9a0]	        59	string3.h	FUNCTION_191	CALL_3
0x4002a3c	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        59	string3.h	FUNCTION_191	CALL_3
0x4002a40	    0x488db88c0400	                  lea rdi, [rax + 0x48c]	        59	string3.h	FUNCTION_191	CALL_3
0x4002a47	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_191	CALL_3
0x4002a4c	      0xe800000000	                          call 0x4002a51	        59	string3.h	FUNCTION_191	CALL_3
0x4002a51	        0x488b0424	                    mov rax, qword [rsp]	        59	string3.h	FUNCTION_191	CALL_3
0x4002a55	    0x488983a00900	            mov qword [rbx + 0x9a0], rax	        59	string3.h	FUNCTION_191	CALL_3
0x4002a5c	      0x488b442408	                mov rax, qword [rsp + 8]	        59	string3.h	FUNCTION_191	CALL_3
0x4002a61	    0x488983a80900	            mov qword [rbx + 0x9a8], rax	        59	string3.h	FUNCTION_191	CALL_3
0x4002a68	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_191	CALL_3
0x4002a6d	    0x488983b00900	            mov qword [rbx + 0x9b0], rax	        59	string3.h	FUNCTION_191	CALL_3
0x4002a74	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_191	CALL_3
0x4002a79	    0x488983b80900	            mov qword [rbx + 0x9b8], rax	        59	string3.h	FUNCTION_191	CALL_3
0x4002a80	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x4002a84	    0x4881c7b00400	                          add rdi, 0x4b0	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x4002a8b	      0xe800000000	                          call 0x4002a90	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x4002a90	    0x488b05000000	            mov rax, qword [0x04002a97] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4002a97	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4002a9b	    0x488b05000000	            mov rax, qword [0x04002aa2] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4002aa2	    0x488b88b81400	          mov rcx, qword [rax + 0x14b8] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4002aa9	    0x48898ab00400	            mov qword [rdx + 0x4b0], rcx	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4002ab0	    0x4c89a0b81400	          mov qword [rax + 0x14b8], r12 	      3598	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4002ab7	      0xbe28000000	                           mov esi, 0x28	      3601	syntax.c	FUNCTION_48	CALL_16
0x4002abc	    0x488b3d000000	            mov rdi, qword [0x04002ac3] 	      3601	syntax.c	FUNCTION_48	CALL_16
0x4002ac3	      0xe800000000	                          call 0x4002ac8	      3601	syntax.c	FUNCTION_48	CALL_16
0x4002ac8	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3602	syntax.c	FUNCTION_48
0x4002acd	    0x644833042528	                xor rax, qword fs:[0x28]	      3602	syntax.c	FUNCTION_48
0x4002ad6	            0x7405	                            je 0x4002add	      3602	syntax.c	FUNCTION_48
0x4002ad8	      0xe800000000	                          call 0x4002add	      3602	syntax.c	FUNCTION_48
0x4002add	        0x4883c430	                           add rsp, 0x30	      3602	syntax.c	FUNCTION_48
0x4002ae1	              0x5b	                                 pop rbx	      3602	syntax.c	FUNCTION_48
0x4002ae2	              0x5d	                                 pop rbp	      3602	syntax.c	FUNCTION_48
0x4002ae3	            0x415c	                                 pop r12	      3602	syntax.c	FUNCTION_48
0x4002ae5	              0xc3	                                     ret	      3602	syntax.c	FUNCTION_48
clear_current_state	IF,0:CALL,2:FOR,1:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	21
0x40006aa	              0x55	                                push rbp	       717	syntax.c	FUNCTION_4
0x40006ab	              0x53	                                push rbx	       717	syntax.c	FUNCTION_4
0x40006ac	        0x4883ec08	                              sub rsp, 8	       717	syntax.c	FUNCTION_4
0x40006b0	    0x488b2d000000	            mov rbp, qword [0x040006b7] 	       721	syntax.c	FUNCTION_4
0x40006b7	    0x833d00000000	               cmp dword [0x040006be], 0	       722	syntax.c	FUNCTION_4	FOR_1
0x40006be	            0x7e28	                           jle 0x40006e8	       722	syntax.c	FUNCTION_4	FOR_1
0x40006c0	      0xbb00000000	                              mov ebx, 0	       722	syntax.c	FUNCTION_4	FOR_1
0x40006c5	          0x4863c3	                         movsxd rax, ebx	       723	syntax.c	FUNCTION_4	CALL_1
0x40006c8	        0x488d04c0	                  lea rax, [rax + rax*8]	       723	syntax.c	FUNCTION_4	CALL_1
0x40006cc	        0x48c1e004	                              shl rax, 4	       723	syntax.c	FUNCTION_4	CALL_1
0x40006d0	    0x488bbc058800	      mov rdi, qword [rbp + rax + 0x88] 	       723	syntax.c	FUNCTION_4	CALL_1
0x40006d8	      0xe800000000	                          call 0x40006dd	       723	syntax.c	FUNCTION_4	CALL_1
0x40006dd	          0x83c301	                              add ebx, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x40006e0	    0x391d00000000	            cmp dword [0x040006e6], ebx 	       722	syntax.c	FUNCTION_4	FOR_1
0x40006e6	            0x7fdd	                            jg 0x40006c5	       722	syntax.c	FUNCTION_4	FOR_1
0x40006e8	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x40006ed	      0xe800000000	                          call 0x40006f2	       724	syntax.c	FUNCTION_4	CALL_2
0x40006f2	        0x4883c408	                              add rsp, 8	       725	syntax.c	FUNCTION_4
0x40006f6	              0x5b	                                 pop rbx	       725	syntax.c	FUNCTION_4
0x40006f7	              0x5d	                                 pop rbp	       725	syntax.c	FUNCTION_4
0x40006f8	              0xc3	                                     ret	       725	syntax.c	FUNCTION_4
syn_list_header	IF,8:CALL,8:FOR,0:ELSE,2:SWITCH,0:WHILE,0:DO,0:functions,0	66
0x400a044	            0x4154	                                push r12	      9478	syntax.c	FUNCTION_146
0x400a046	              0x55	                                push rbp	      9478	syntax.c	FUNCTION_146
0x400a047	              0x53	                                push rbx	      9478	syntax.c	FUNCTION_146
0x400a048	            0x89fb	                            mov ebx, edi	      9478	syntax.c	FUNCTION_146
0x400a04a	            0x89d5	                            mov ebp, edx	      9478	syntax.c	FUNCTION_146
0x400a04c	            0x85ff	                           test edi, edi	      9482	syntax.c	FUNCTION_146	IF_1
0x400a04e	            0x754c	                           jne 0x400a09c	      9482	syntax.c	FUNCTION_146	IF_1
0x400a050	      0xbf0a000000	                            mov edi, 0xa	      9484	syntax.c	FUNCTION_146	IF_1	CALL_1
0x400a055	      0xe800000000	                          call 0x400a05a	      9484	syntax.c	FUNCTION_146	IF_1	CALL_1
0x400a05a	    0x8b1500000000	            mov edx, dword [0x0400a060] 	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x400a060	      0xb801000000	                              mov eax, 1	      9486	syntax.c	FUNCTION_146	IF_1	IF_2
0x400a065	            0x85d2	                           test edx, edx	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x400a067	     0xf85c7000000	                           jne 0x400a134	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x400a06d	          0x4863c5	                         movsxd rax, ebp	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x400a070	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x400a074	        0x488d0450	                  lea rax, [rax + rdx*2]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x400a078	        0x48c1e003	                              shl rax, 3	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x400a07c	    0x480305000000	             add rax, qword [0x0400a083]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x400a083	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x400a08a	      0xe800000000	                          call 0x400a08f	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x400a08f	    0x41bc01000000	                             mov r12d, 1	      9480	syntax.c	FUNCTION_146
0x400a095	      0xbf0f000000	                            mov edi, 0xf	      9488	syntax.c	FUNCTION_146	IF_1
0x400a09a	            0xeb4b	                           jmp 0x400a0e7	      9488	syntax.c	FUNCTION_146	IF_1
0x400a09c	    0x8b1500000000	            mov edx, dword [0x0400a0a2] 	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x400a0a2	        0x8d443201	                lea eax, [rdx + rsi + 1]	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x400a0a6	            0x4898	                                    cdqe	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x400a0a8	    0x483b05000000	            cmp rax, qword [0x0400a0af] 	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x400a0af	            0x7c26	                            jl 0x400a0d7	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x400a0b1	      0xbf0a000000	                            mov edi, 0xa	      9492	syntax.c	FUNCTION_146	ELSE_1	IF_3	CALL_4
0x400a0b6	      0xe800000000	                          call 0x400a0bb	      9492	syntax.c	FUNCTION_146	ELSE_1	IF_3	CALL_4
0x400a0bb	    0x8b1500000000	            mov edx, dword [0x0400a0c1] 	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x400a0c1	      0xb801000000	                              mov eax, 1	      9494	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x400a0c6	            0x85d2	                           test edx, edx	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x400a0c8	            0x756a	                           jne 0x400a134	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x400a0ca	    0x41bc01000000	                             mov r12d, 1	      9480	syntax.c	FUNCTION_146
0x400a0d0	      0xbf13000000	                           mov edi, 0x13	      9479	syntax.c	FUNCTION_146
0x400a0d5	            0xeb10	                           jmp 0x400a0e7	      9479	syntax.c	FUNCTION_146
0x400a0d7	          0x83fa12	                           cmp edx, 0x12	      9480	syntax.c	FUNCTION_146
0x400a0da	        0x410f9ec4	                              setle r12b	      9480	syntax.c	FUNCTION_146
0x400a0de	        0x450fb6e4	                        movzx r12d, r12b	      9480	syntax.c	FUNCTION_146
0x400a0e2	      0xbf13000000	                           mov edi, 0x13	      9479	syntax.c	FUNCTION_146
0x400a0e7	    0x8b0500000000	            mov eax, dword [0x0400a0ed] 	      9502	syntax.c	FUNCTION_146	IF_6
0x400a0ed	          0x8d5001	                      lea edx, [rax + 1]	      9503	syntax.c	FUNCTION_146	IF_6
0x400a0f0	            0x39c7	                            cmp edi, eax	      9503	syntax.c	FUNCTION_146	IF_6
0x400a0f2	           0xf4efa	                         cmovle edi, edx	      9503	syntax.c	FUNCTION_146	IF_6
0x400a0f5	    0x488b05000000	            mov rax, qword [0x0400a0fc] 	      9504	syntax.c	FUNCTION_146	IF_7
0x400a0fc	          0x4863cf	                         movsxd rcx, edi	      9504	syntax.c	FUNCTION_146	IF_7
0x400a0ff	          0x8d50ff	                      lea edx, [rax - 1]	      9505	syntax.c	FUNCTION_146	IF_7
0x400a102	          0x4839c1	                            cmp rcx, rax	      9505	syntax.c	FUNCTION_146	IF_7
0x400a105	           0xf4dfa	                         cmovge edi, edx	      9505	syntax.c	FUNCTION_146	IF_7
0x400a108	      0xe800000000	                          call 0x400a10d	      9507	syntax.c	FUNCTION_146	CALL_5
0x400a10d	          0x4489e0	                           mov eax, r12d	      9516	syntax.c	FUNCTION_146
0x400a110	            0x85db	                           test ebx, ebx	      9510	syntax.c	FUNCTION_146	IF_8
0x400a112	            0x7520	                           jne 0x400a134	      9510	syntax.c	FUNCTION_146	IF_8
0x400a114	            0x89ef	                            mov edi, ebp	      9512	syntax.c	FUNCTION_146	IF_8	CALL_7
0x400a116	      0xe800000000	                          call 0x400a11b	      9512	syntax.c	FUNCTION_146	IF_8	CALL_7
0x400a11b	            0x89c6	                            mov esi, eax	      9512	syntax.c	FUNCTION_146	IF_8	CALL_7
0x400a11d	      0xbf00000000	                              mov edi, 0	      9512	syntax.c	FUNCTION_146	IF_8	CALL_7
0x400a122	      0xe800000000	                          call 0x400a127	      9512	syntax.c	FUNCTION_146	IF_8	CALL_7
0x400a127	      0xbf20000000	                           mov edi, 0x20	      9513	syntax.c	FUNCTION_146	IF_8	CALL_8
0x400a12c	      0xe800000000	                          call 0x400a131	      9513	syntax.c	FUNCTION_146	IF_8	CALL_8
0x400a131	          0x4489e0	                           mov eax, r12d	      9516	syntax.c	FUNCTION_146
0x400a134	              0x5b	                                 pop rbx	      9517	syntax.c	FUNCTION_146
0x400a135	              0x5d	                                 pop rbp	      9517	syntax.c	FUNCTION_146
0x400a136	            0x415c	                                 pop r12	      9517	syntax.c	FUNCTION_146
0x400a138	              0xc3	                                     ret	      9517	syntax.c	FUNCTION_146
syn_cmd_spell	IF,7:CALL,14:FOR,0:ELSE,6:SWITCH,0:WHILE,0:DO,0:functions,0	99
0x4001c5d	              0x55	                                push rbp	      3521	syntax.c	FUNCTION_47
0x4001c5e	              0x53	                                push rbx	      3521	syntax.c	FUNCTION_47
0x4001c5f	        0x4883ec08	                              sub rsp, 8	      3521	syntax.c	FUNCTION_47
0x4001c63	          0x4889fb	                            mov rbx, rdi	      3521	syntax.c	FUNCTION_47
0x4001c66	          0x488b2f	                    mov rbp, qword [rdi]	      3522	syntax.c	FUNCTION_47
0x4001c69	          0x4889ef	                            mov rdi, rbp	      3525	syntax.c	FUNCTION_47	CALL_1
0x4001c6c	      0xe800000000	                          call 0x4001c71	      3525	syntax.c	FUNCTION_47	CALL_1
0x4001c71	        0x48894308	                mov qword [rbx + 8], rax	      3525	syntax.c	FUNCTION_47	CALL_1
0x4001c75	        0x837b3000	               cmp dword [rbx + 0x30], 0	      3526	syntax.c	FUNCTION_47	IF_1
0x4001c79	     0xf856c010000	                           jne 0x4001deb	      3526	syntax.c	FUNCTION_47	IF_1
0x4001c7f	          0x4889ef	                            mov rdi, rbp	      3529	syntax.c	FUNCTION_47	CALL_2
0x4001c82	      0xe800000000	                          call 0x4001c87	      3529	syntax.c	FUNCTION_47	CALL_2
0x4001c87	          0x4889c3	                            mov rbx, rax	      3529	syntax.c	FUNCTION_47	CALL_2
0x4001c8a	        0x807d0000	                       cmp byte [rbp], 0	      3530	syntax.c	FUNCTION_47	IF_2
0x4001c8e	            0x757e	                           jne 0x4001d0e	      3530	syntax.c	FUNCTION_47	IF_2
0x4001c90	    0x488b05000000	            mov rax, qword [0x04001c97] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4001c97	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4001c9b	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4001ca1	          0x83f801	                              cmp eax, 1	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4001ca4	            0x7521	                           jne 0x4001cc7	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4001ca6	      0xba05000000	                              mov edx, 5	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4001cab	      0xbe00000000	                              mov esi, 0	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4001cb0	      0xbf00000000	                              mov edi, 0	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4001cb5	      0xe800000000	                          call 0x4001cba	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4001cba	          0x4889c7	                            mov rdi, rax	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4001cbd	      0xe800000000	                          call 0x4001cc2	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4001cc2	      0xe913010000	                           jmp 0x4001dda	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4001cc7	          0x83f802	                              cmp eax, 2	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4001cca	            0x7521	                           jne 0x4001ced	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4001ccc	      0xba05000000	                              mov edx, 5	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4001cd1	      0xbe00000000	                              mov esi, 0	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4001cd6	      0xbf00000000	                              mov edi, 0	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4001cdb	      0xe800000000	                          call 0x4001ce0	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4001ce0	          0x4889c7	                            mov rdi, rax	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4001ce3	      0xe800000000	                          call 0x4001ce8	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4001ce8	      0xe9ed000000	                           jmp 0x4001dda	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4001ced	      0xba05000000	                              mov edx, 5	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4001cf2	      0xbe00000000	                              mov esi, 0	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4001cf7	      0xbf00000000	                              mov edi, 0	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4001cfc	      0xe800000000	                          call 0x4001d01	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4001d01	          0x4889c7	                            mov rdi, rax	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4001d04	      0xe800000000	                          call 0x4001d09	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4001d09	      0xe9cc000000	                           jmp 0x4001dda	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4001d0e	      0xba08000000	                              mov edx, 8	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4001d13	      0xbe00000000	                              mov esi, 0	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4001d18	          0x4889ef	                            mov rdi, rbp	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4001d1b	      0xe800000000	                          call 0x4001d20	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4001d20	            0x85c0	                           test eax, eax	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4001d22	            0x7526	                           jne 0x4001d4a	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4001d24	          0x4889d8	                            mov rax, rbx	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4001d27	          0x4829e8	                            sub rax, rbp	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4001d2a	        0x4883f808	                              cmp rax, 8	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4001d2e	            0x751a	                           jne 0x4001d4a	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4001d30	    0x488b05000000	            mov rax, qword [0x04001d37] 	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4001d37	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4001d3b	    0xc7805c020000	              mov dword [rax + 0x25c], 1	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4001d45	      0xe990000000	                           jmp 0x4001dda	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4001d4a	      0xba0a000000	                            mov edx, 0xa	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4001d4f	      0xbe00000000	                              mov esi, 0	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4001d54	          0x4889ef	                            mov rdi, rbp	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4001d57	      0xe800000000	                          call 0x4001d5c	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4001d5c	            0x85c0	                           test eax, eax	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4001d5e	            0x7523	                           jne 0x4001d83	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4001d60	          0x4889d8	                            mov rax, rbx	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4001d63	          0x4829e8	                            sub rax, rbp	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4001d66	        0x4883f80a	                            cmp rax, 0xa	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4001d6a	            0x7517	                           jne 0x4001d83	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4001d6c	    0x488b05000000	            mov rax, qword [0x04001d73] 	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x4001d73	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x4001d77	    0xc7805c020000	              mov dword [rax + 0x25c], 2	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x4001d81	            0xeb57	                           jmp 0x4001dda	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x4001d83	      0xba07000000	                              mov edx, 7	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4001d88	      0xbe00000000	                              mov esi, 0	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4001d8d	          0x4889ef	                            mov rdi, rbp	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4001d90	      0xe800000000	                          call 0x4001d95	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4001d95	            0x85c0	                           test eax, eax	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4001d97	            0x7520	                           jne 0x4001db9	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4001d99	          0x4829eb	                            sub rbx, rbp	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4001d9c	        0x4883fb07	                              cmp rbx, 7	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4001da0	            0x7517	                           jne 0x4001db9	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4001da2	    0x488b05000000	            mov rax, qword [0x04001da9] 	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4001da9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4001dad	    0xc7805c020000	              mov dword [rax + 0x25c], 0	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4001db7	            0xeb21	                           jmp 0x4001dda	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4001db9	      0xba05000000	                              mov edx, 5	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4001dbe	      0xbe00000000	                              mov esi, 0	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4001dc3	      0xbf00000000	                              mov edi, 0	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4001dc8	      0xe800000000	                          call 0x4001dcd	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4001dcd	          0x4889ee	                            mov rsi, rbp	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4001dd0	          0x4889c7	                            mov rdi, rax	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4001dd3	      0xe800000000	                          call 0x4001dd8	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4001dd8	            0xeb11	                           jmp 0x4001deb	      3548	syntax.c	FUNCTION_47	ELSE_6
0x4001dda	      0xbe28000000	                           mov esi, 0x28	      3552	syntax.c	FUNCTION_47	CALL_14
0x4001ddf	    0x488b3d000000	            mov rdi, qword [0x04001de6] 	      3552	syntax.c	FUNCTION_47	CALL_14
0x4001de6	      0xe800000000	                          call 0x4001deb	      3552	syntax.c	FUNCTION_47	CALL_14
0x4001deb	        0x4883c408	                              add rsp, 8	      3553	syntax.c	FUNCTION_47
0x4001def	              0x5b	                                 pop rbx	      3553	syntax.c	FUNCTION_47
0x4001df0	              0x5d	                                 pop rbp	      3553	syntax.c	FUNCTION_47
0x4001df1	              0xc3	                                     ret	      3553	syntax.c	FUNCTION_47
syn_list_cluster	IF,3:CALL,11:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	40
0x4002639	              0x53	                                push rbx	      4200	syntax.c	FUNCTION_68
0x400263a	            0x89fb	                            mov ebx, edi	      4200	syntax.c	FUNCTION_68
0x400263c	      0xbf0a000000	                            mov edi, 0xa	      4204	syntax.c	FUNCTION_68	CALL_1
0x4002641	      0xe800000000	                          call 0x4002646	      4204	syntax.c	FUNCTION_68	CALL_1
0x4002646	          0x4863fb	                         movsxd rdi, ebx	      4205	syntax.c	FUNCTION_68	CALL_3
0x4002649	        0x488d1c7f	                  lea rbx, [rdi + rdi*2]	      4205	syntax.c	FUNCTION_68	CALL_3
0x400264d	        0x48c1e303	                              shl rbx, 3	      4205	syntax.c	FUNCTION_68	CALL_3
0x4002651	    0x488b05000000	            mov rax, qword [0x04002658] 	      4205	syntax.c	FUNCTION_68	CALL_3
0x4002658	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4205	syntax.c	FUNCTION_68	CALL_3
0x400265c	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      4205	syntax.c	FUNCTION_68	CALL_3
0x4002663	        0x488b3c18	              mov rdi, qword [rax + rbx]	      4205	syntax.c	FUNCTION_68	CALL_3
0x4002667	      0xe800000000	                          call 0x400266c	      4205	syntax.c	FUNCTION_68	CALL_3
0x400266c	    0x8b1500000000	            mov edx, dword [0x04002672] 	      4207	syntax.c	FUNCTION_68	IF_1
0x4002672	          0x8d4201	                      lea eax, [rdx + 1]	      4208	syntax.c	FUNCTION_68	IF_1
0x4002675	          0x83fa0f	                            cmp edx, 0xf	      4208	syntax.c	FUNCTION_68	IF_1
0x4002678	      0xbf0f000000	                            mov edi, 0xf	      4208	syntax.c	FUNCTION_68	IF_1
0x400267d	           0xf4df8	                         cmovge edi, eax	      4208	syntax.c	FUNCTION_68	IF_1
0x4002680	    0x488b05000000	            mov rax, qword [0x04002687] 	      4209	syntax.c	FUNCTION_68	IF_2
0x4002687	          0x4863cf	                         movsxd rcx, edi	      4209	syntax.c	FUNCTION_68	IF_2
0x400268a	          0x8d50ff	                      lea edx, [rax - 1]	      4210	syntax.c	FUNCTION_68	IF_2
0x400268d	          0x4839c1	                            cmp rcx, rax	      4210	syntax.c	FUNCTION_68	IF_2
0x4002690	           0xf4dfa	                         cmovge edi, edx	      4210	syntax.c	FUNCTION_68	IF_2
0x4002693	      0xe800000000	                          call 0x4002698	      4212	syntax.c	FUNCTION_68	CALL_4
0x4002698	    0x488b05000000	            mov rax, qword [0x0400269f] 	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x400269f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x40026a3	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x40026aa	      0x488b741810	      mov rsi, qword [rax + rbx + 0x10] 	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x40026af	          0x4885f6	                           test rsi, rsi	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x40026b2	            0x7412	                            je 0x40026c6	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x40026b4	    0x8b1500000000	            mov edx, dword [0x040026ba] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x40026ba	      0xbf00000000	                              mov edi, 0	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x40026bf	      0xe856feffff	                    call sym.put_id_list	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x40026c4	            0xeb1a	                           jmp 0x40026e0	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x40026c6	    0x8b3500000000	            mov esi, dword [0x040026cc] 	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_10
0x40026cc	      0xbf00000000	                              mov edi, 0	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_10
0x40026d1	      0xe800000000	                          call 0x40026d6	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_10
0x40026d6	      0xbf00000000	                              mov edi, 0	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_11
0x40026db	      0xe800000000	                          call 0x40026e0	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_11
0x40026e0	              0x5b	                                 pop rbx	      4223	syntax.c	FUNCTION_68
0x40026e1	              0xc3	                                     ret	      4223	syntax.c	FUNCTION_68
syn_cmd_reset	IF,1:CALL,4:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	17
0x4001df2	              0x53	                                push rbx	      3886	syntax.c	FUNCTION_59
0x4001df3	          0x4889fb	                            mov rbx, rdi	      3886	syntax.c	FUNCTION_59
0x4001df6	          0x488b3f	                    mov rdi, qword [rdi]	      3887	syntax.c	FUNCTION_59	CALL_1
0x4001df9	      0xe800000000	                          call 0x4001dfe	      3887	syntax.c	FUNCTION_59	CALL_1
0x4001dfe	        0x48894308	                mov qword [rbx + 8], rax	      3887	syntax.c	FUNCTION_59	CALL_1
0x4001e02	        0x837b3000	               cmp dword [rbx + 0x30], 0	      3888	syntax.c	FUNCTION_59	IF_1
0x4001e06	            0x7528	                           jne 0x4001e30	      3888	syntax.c	FUNCTION_59	IF_1
0x4001e08	      0xbe00000000	                              mov esi, 0	      3890	syntax.c	FUNCTION_59	IF_1	CALL_2
0x4001e0d	      0xbf00000000	                              mov edi, 0	      3890	syntax.c	FUNCTION_59	IF_1	CALL_2
0x4001e12	      0xe800000000	                          call 0x4001e17	      3890	syntax.c	FUNCTION_59	IF_1	CALL_2
0x4001e17	      0xbf00000000	                              mov edi, 0	      3891	syntax.c	FUNCTION_59	IF_1	CALL_3
0x4001e1c	      0xe800000000	                          call 0x4001e21	      3891	syntax.c	FUNCTION_59	IF_1	CALL_3
0x4001e21	      0xbe01000000	                              mov esi, 1	      3892	syntax.c	FUNCTION_59	IF_1	CALL_4
0x4001e26	      0xbf00000000	                              mov edi, 0	      3892	syntax.c	FUNCTION_59	IF_1	CALL_4
0x4001e2b	      0xe800000000	                          call 0x4001e30	      3892	syntax.c	FUNCTION_59	IF_1	CALL_4
0x4001e30	              0x5b	                                 pop rbx	      3894	syntax.c	FUNCTION_59
0x4001e31	              0xc3	                                     ret	      3894	syntax.c	FUNCTION_59
syn_set_timeout	IF,0:CALL,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	2
0x40034ad	    0x48893d000000	            mov qword [0x040034b4], rdi 	       502	syntax.c	FUNCTION_1
0x40034b4	              0xc3	                                     ret	       502	syntax.c	FUNCTION_1
check_keepend	IF,6:CALL,5:FOR,2:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	101
0x40000d1	              0x55	                                push rbp	      2771	syntax.c	FUNCTION_33
0x40000d2	              0x53	                                push rbx	      2771	syntax.c	FUNCTION_33
0x40000d3	        0x4883ec38	                           sub rsp, 0x38	      2771	syntax.c	FUNCTION_33
0x40000d7	    0x64488b042528	                mov rax, qword fs:[0x28]	      2771	syntax.c	FUNCTION_33
0x40000e0	      0x4889442428	             mov qword [rsp + 0x28], rax	      2771	syntax.c	FUNCTION_33
0x40000e5	            0x31c0	                            xor eax, eax	      2771	syntax.c	FUNCTION_33
0x40000e7	    0x8b1500000000	            mov edx, dword [0x040000ed] 	      2781	syntax.c	FUNCTION_33	IF_1
0x40000ed	            0x85d2	                           test edx, edx	      2781	syntax.c	FUNCTION_33	IF_1
0x40000ef	     0xf883d010000	                            js 0x4000232	      2781	syntax.c	FUNCTION_33	IF_1
0x40000f5	    0x8b3500000000	            mov esi, dword [0x040000fb] 	      2789	syntax.c	FUNCTION_33	FOR_1
0x40000fb	          0x8d5eff	                      lea ebx, [rsi - 1]	      2789	syntax.c	FUNCTION_33	FOR_1
0x40000fe	            0x39da	                            cmp edx, ebx	      2789	syntax.c	FUNCTION_33	FOR_1
0x4000100	            0x7d34	                           jge 0x4000136	      2789	syntax.c	FUNCTION_33	FOR_1
0x4000102	    0x488b0d000000	            mov rcx, qword [0x04000109] 	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4000109	          0x4863c3	                         movsxd rax, ebx	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x400010c	        0x488d04c0	                  lea rax, [rax + rax*8]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4000110	        0x48c1e004	                              shl rax, 4	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4000114	      0xf644016940	     test byte [rcx + rax + 0x69], 0x40 	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4000119	            0x7414	                            je 0x400012f	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x400011b	            0xeb19	                           jmp 0x4000136	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x400011d	          0x4863c3	                         movsxd rax, ebx	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4000120	        0x488d04c0	                  lea rax, [rax + rax*8]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4000124	        0x48c1e004	                              shl rax, 4	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4000128	      0xf644016940	     test byte [rcx + rax + 0x69], 0x40 	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x400012d	            0x7507	                           jne 0x4000136	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x400012f	          0x83eb01	                              sub ebx, 1	      2789	syntax.c	FUNCTION_33	FOR_1
0x4000132	            0x39da	                            cmp edx, ebx	      2789	syntax.c	FUNCTION_33	FOR_1
0x4000134	            0x7ce7	                            jl 0x400011d	      2789	syntax.c	FUNCTION_33	FOR_1
0x4000136	    0x48c704240000	                      mov qword [rsp], 0	      2793	syntax.c	FUNCTION_33
0x400013e	    0xc74424080000	                  mov dword [rsp + 8], 0	      2794	syntax.c	FUNCTION_33
0x4000146	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2795	syntax.c	FUNCTION_33
0x400014f	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2796	syntax.c	FUNCTION_33
0x4000157	            0x39de	                            cmp esi, ebx	      2797	syntax.c	FUNCTION_33	FOR_2
0x4000159	     0xf8ed3000000	                           jle 0x4000232	      2797	syntax.c	FUNCTION_33	FOR_2
0x400015f	          0x4863c3	                         movsxd rax, ebx	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x4000162	        0x488d2cc0	                  lea rbp, [rax + rax*8]	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x4000166	        0x48c1e504	                              shl rbp, 4	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x400016a	    0x48032d000000	             add rbp, qword [0x04000171]	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x4000171	      0x48833c2400	                      cmp qword [rsp], 0	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4000176	            0x7435	                            je 0x40001ad	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4000178	        0x488d7d18	                   lea rdi, [rbp + 0x18]	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x400017c	          0x4889e6	                            mov rsi, rsp	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x400017f	      0xe831ffffff	                 call sym.limit_pos_zero	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x4000184	        0x488d7d38	                   lea rdi, [rbp + 0x38]	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_4
0x4000188	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_4
0x400018d	      0xe823ffffff	                 call sym.limit_pos_zero	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_4
0x4000192	        0x488d7d48	                   lea rdi, [rbp + 0x48]	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_5
0x4000196	          0x4889e6	                            mov rsi, rsp	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_5
0x4000199	      0xe817ffffff	                 call sym.limit_pos_zero	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_5
0x400019e	    0xc7455c010000	               mov dword [rbp + 0x5c], 1	      2805	syntax.c	FUNCTION_33	FOR_2	IF_3
0x40001a5	        0xf6456904	               test byte [rbp + 0x69], 4	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40001a9	            0x750a	                           jne 0x40001b5	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40001ab	            0xeb6c	                           jmp 0x4000219	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40001ad	        0x837d5c00	               cmp dword [rbp + 0x5c], 0	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40001b1	            0x7466	                            je 0x4000219	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40001b3	            0xeb75	                           jmp 0x400022a	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40001b5	        0x488b0424	                    mov rax, qword [rsp]	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001b9	          0x4885c0	                           test rax, rax	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001bc	            0x7417	                            je 0x40001d5	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001be	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001c2	          0x4839d0	                            cmp rax, rdx	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001c5	            0x7f0e	                            jg 0x40001d5	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001c7	          0x4839d0	                            cmp rax, rdx	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001ca	            0x751a	                           jne 0x40001e6	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001cc	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001cf	        0x39442408	                cmp dword [rsp + 8], eax	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001d3	            0x7e11	                           jle 0x40001e6	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001d5	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001d9	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001dd	        0x48890424	                    mov qword [rsp], rax	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001e1	      0x4889542408	                mov qword [rsp + 8], rdx	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40001e6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40001eb	          0x4885c0	                           test rax, rax	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40001ee	            0x7417	                            je 0x4000207	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40001f0	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40001f4	          0x4839d0	                            cmp rax, rdx	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40001f7	            0x7f0e	                            jg 0x4000207	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40001f9	          0x4839d0	                            cmp rax, rdx	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40001fc	            0x751b	                           jne 0x4000219	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40001fe	          0x8b4540	            mov eax, dword [rbp + 0x40] 	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4000201	        0x39442418	            cmp dword [rsp + 0x18], eax 	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4000205	            0x7e12	                           jle 0x4000219	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4000207	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400020b	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400020f	      0x4889442410	             mov qword [rsp + 0x10], rax	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4000214	      0x4889542418	             mov qword [rsp + 0x18], rdx	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4000219	          0x83c301	                              add ebx, 1	      2797	syntax.c	FUNCTION_33	FOR_2
0x400021c	    0x391d00000000	            cmp dword [0x04000222], ebx 	      2797	syntax.c	FUNCTION_33	FOR_2
0x4000222	     0xf8f37ffffff	                            jg 0x400015f	      2797	syntax.c	FUNCTION_33	FOR_2
0x4000228	            0xeb08	                           jmp 0x4000232	      2797	syntax.c	FUNCTION_33	FOR_2
0x400022a	        0xf6456904	               test byte [rbp + 0x69], 4	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x400022e	            0x75a5	                           jne 0x40001d5	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4000230	            0xebe7	                           jmp 0x4000219	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4000232	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2821	syntax.c	FUNCTION_33
0x4000237	    0x644833042528	                xor rax, qword fs:[0x28]	      2821	syntax.c	FUNCTION_33
0x4000240	            0x7405	                            je 0x4000247	      2821	syntax.c	FUNCTION_33
0x4000242	      0xe800000000	                          call 0x4000247	      2821	syntax.c	FUNCTION_33
0x4000247	        0x4883c438	                           add rsp, 0x38	      2821	syntax.c	FUNCTION_33
0x400024b	              0x5b	                                 pop rbx	      2821	syntax.c	FUNCTION_33
0x400024c	              0x5d	                                 pop rbp	      2821	syntax.c	FUNCTION_33
0x400024d	              0xc3	                                     ret	      2821	syntax.c	FUNCTION_33
check_state_ends	IF,9:CALL,10:FOR,1:ELSE,2:SWITCH,0:WHILE,0:DO,0:functions,0	131
0x4007cac	              0x55	                                push rbp	      2611	syntax.c	FUNCTION_31
0x4007cad	              0x53	                                push rbx	      2611	syntax.c	FUNCTION_31
0x4007cae	        0x4883ec08	                              sub rsp, 8	      2611	syntax.c	FUNCTION_31
0x4007cb2	    0x486305000000	         movsxd rax, dword [0x04007cb9] 	      2615	syntax.c	FUNCTION_31	CALL_1
0x4007cb9	        0x488d04c0	                  lea rax, [rax + rax*8]	      2615	syntax.c	FUNCTION_31	CALL_1
0x4007cbd	        0x48c1e004	                              shl rax, 4	      2615	syntax.c	FUNCTION_31	CALL_1
0x4007cc1	    0x488b15000000	            mov rdx, qword [0x04007cc8] 	      2615	syntax.c	FUNCTION_31	CALL_1
0x4007cc8	    0x488d9c0270ff	             lea rbx, [rdx + rax - 0x90]	      2615	syntax.c	FUNCTION_31	CALL_1
0x4007cd0	      0xbdffffffff	                     mov ebp, 0xffffffff	      2918	syntax.c	FUNCTION_36
0x4007cd5	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4007cd9	     0xf8431020000	                            je 0x4007f10	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4007cdf	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4007ce3	    0x488b05000000	            mov rax, qword [0x04007cea] 	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4007cea	          0x4839c2	                            cmp rdx, rax	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4007ced	            0x7c18	                            jl 0x4007d07	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4007cef	          0x4839c2	                            cmp rdx, rax	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4007cf2	     0xf8518020000	                           jne 0x4007f10	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4007cf8	    0x8b3500000000	            mov esi, dword [0x04007cfe] 	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4007cfe	          0x397320	            cmp dword [rbx + 0x20], esi 	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4007d01	     0xf8f09020000	                            jg 0x4007f10	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4007d07	          0x8b5358	            mov edx, dword [rbx + 0x58] 	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d0a	            0x85d2	                           test edx, edx	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d0c	     0xf84a6000000	                            je 0x4007db8	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d12	        0x488b4b48	            mov rcx, qword [rbx + 0x48] 	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d16	          0x4839c8	                            cmp rax, rcx	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d19	            0x7c18	                            jl 0x4007d33	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d1b	          0x4839c8	                            cmp rax, rcx	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d1e	     0xf8594000000	                           jne 0x4007db8	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d24	    0x8b0500000000	            mov eax, dword [0x04007d2a] 	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d2a	          0x394350	            cmp dword [rbx + 0x50], eax 	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d2d	     0xf8e85000000	                           jle 0x4007db8	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d33	            0x8913	                    mov dword [rbx], edx	      2634	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d35	    0xc74358000000	               mov dword [rbx + 0x58], 0	      2635	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d3c	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d40	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d44	        0x48894318	             mov qword [rbx + 0x18], rax	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d48	        0x48895320	             mov qword [rbx + 0x20], rdx	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d4c	        0x48894338	             mov qword [rbx + 0x38], rax	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d50	        0x48895340	             mov qword [rbx + 0x40], rdx	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d54	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d58	          0x4889c2	                            mov rdx, rax	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d5b	        0x4883ca40	                            or rdx, 0x40	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d5f	        0x48895368	             mov qword [rbx + 0x68], rdx	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d63	    0x8b1500000000	            mov edx, dword [0x04007d69] 	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d69	          0x8d4a01	                      lea ecx, [rdx + 1]	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d6c	    0x890d00000000	            mov dword [0x04007d72], ecx 	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d72	          0x895370	             mov dword [rbx + 0x70], edx	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d75	      0xa900000400	                       test eax, 0x40000	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4007d7a	            0x740a	                            je 0x4007d86	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4007d7c	    0x480d40000200	                         or rax, 0x20040	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4007d82	        0x48894368	             mov qword [rbx + 0x68], rax	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4007d86	    0x8b0500000000	            mov eax, dword [0x04007d8c] 	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_2
0x4007d8c	          0x8d78ff	                      lea edi, [rax - 1]	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_2
0x4007d8f	      0xe8f1fdffff	                 call sym.update_si_attr	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_2
0x4007d94	    0x48c705000000	               mov qword [0x04007d9f], 0	      2647	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007d9f	    0xc70500000000	               mov dword [0x04007da9], 0	      2650	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007da9	    0xc70500000000	     mov dword [0x04007db3], 0x7fffffff 	      2651	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007db3	      0xe958010000	                           jmp 0x4007f10	      2652	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4007db8	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4007dbf	    0x488905000000	            mov qword [0x04007dc6], rax 	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4007dc6	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4007dca	    0x890500000000	            mov dword [0x04007dd0], eax 	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4007dd0	      0xa980020000	                         test eax, 0x280	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4007dd5	            0x751d	                           jne 0x4007df4	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4007dd7	      0xe8e58bffff	                 call sym.syn_getcurline	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x4007ddc	    0x486315000000	         movsxd rdx, dword [0x04007de3] 	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x4007de3	        0x803c1000	                 cmp byte [rax + rdx], 0	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x4007de7	            0x750b	                           jne 0x4007df4	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x4007de9	    0x48c705000000	               mov qword [0x04007df4], 0	      2662	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4007df4	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4007df8	            0x89c3	                            mov ebx, eax	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4007dfa	    0x81e300400000	                         and ebx, 0x4000	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4007e00	    0x8b0500000000	            mov eax, dword [0x04007e06] 	      2912	syntax.c	FUNCTION_36	IF_1
0x4007e06	            0x85c0	                           test eax, eax	      2912	syntax.c	FUNCTION_36	IF_1
0x4007e08	            0x7421	                            je 0x4007e2b	      2912	syntax.c	FUNCTION_36	IF_1
0x4007e0a	            0x4898	                                    cdqe	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4007e0c	        0x488d04c0	                  lea rax, [rax + rax*8]	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4007e10	        0x48c1e004	                              shl rax, 4	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4007e14	    0x480305000000	             add rax, qword [0x04007e1b]	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4007e1b	        0x488b78f8	                mov rdi, qword [rax - 8]	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4007e1f	      0xe800000000	                          call 0x4007e24	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4007e24	    0x832d00000000	               sub dword [0x04007e2b], 1	      2915	syntax.c	FUNCTION_36	IF_1
0x4007e2b	    0x892d00000000	            mov dword [0x04007e31], ebp 	      2918	syntax.c	FUNCTION_36
0x4007e31	    0x8b0500000000	            mov eax, dword [0x04007e37] 	      2921	syntax.c	FUNCTION_36	IF_2
0x4007e37	    0x3b0500000000	            cmp eax, dword [0x04007e3d] 	      2921	syntax.c	FUNCTION_36	IF_2
0x4007e3d	            0x7f06	                            jg 0x4007e45	      2921	syntax.c	FUNCTION_36	IF_2
0x4007e3f	    0x892d00000000	            mov dword [0x04007e45], ebp 	      2922	syntax.c	FUNCTION_36	IF_2
0x4007e45	            0x85c0	                           test eax, eax	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x4007e47	     0xf84c3000000	                            je 0x4007f10	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x4007e4d	            0x85db	                           test ebx, ebx	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4007e4f	            0x7420	                            je 0x4007e71	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4007e51	    0x833d00000000	               cmp dword [0x04007e58], 0	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4007e58	            0x7817	                            js 0x4007e71	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4007e5a	      0xbf00000000	                              mov edi, 0	      2675	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	CALL_5
0x4007e5f	      0xe86a94ffff	                call sym.syn_update_ends	      2675	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	CALL_5
0x4007e64	    0x833d00000000	               cmp dword [0x04007e6b], 0	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x4007e6b	     0xf849f000000	                            je 0x4007f10	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x4007e71	    0x486305000000	         movsxd rax, dword [0x04007e78] 	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x4007e78	        0x488d04c0	                  lea rax, [rax + rax*8]	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x4007e7c	        0x48c1e004	                              shl rax, 4	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x4007e80	    0x488b15000000	            mov rdx, qword [0x04007e87] 	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x4007e87	    0x488d9c0270ff	             lea rbx, [rdx + rax - 0x90]	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x4007e8f	            0x8b03	                    mov eax, dword [rbx]	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4007e91	            0x85c0	                           test eax, eax	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4007e93	     0xf883cfeffff	                            js 0x4007cd5	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4007e99	            0x4898	                                    cdqe	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4007e9b	        0x488d0480	                  lea rax, [rax + rax*4]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4007e9f	        0x48c1e005	                              shl rax, 5	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4007ea3	    0x488b15000000	            mov rdx, qword [0x04007eaa] 	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4007eaa	    0x480382700200	            add rax, qword [rdx + 0x270]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4007eb1	          0x803802	                       cmp byte [rax], 2	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4007eb4	     0xf851bfeffff	                           jne 0x4007cd5	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4007eba	    0x48f743684004	         test qword [rbx + 0x68], 0x440 	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4007ec2	     0xf850dfeffff	                           jne 0x4007cd5	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4007ec8	      0xba01000000	                              mov edx, 1	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_8
0x4007ecd	    0x8b3500000000	            mov esi, dword [0x04007ed3] 	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_8
0x4007ed3	          0x4889df	                            mov rdi, rbx	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_8
0x4007ed6	      0xe89992ffff	                  call sym.update_si_end	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_8
0x4007edb	      0xe8f181ffff	                  call sym.check_keepend	      2697	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_9
0x4007ee0	    0xf60500000000	               test byte [0x04007ee7], 8	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4007ee7	     0xf84e8fdffff	                            je 0x4007cd5	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4007eed	    0x833d00000000	               cmp dword [0x04007ef4], 0	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4007ef4	     0xf89dbfdffff	                           jns 0x4007cd5	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4007efa	      0xe8c28affff	                 call sym.syn_getcurline	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x4007eff	    0x486315000000	         movsxd rdx, dword [0x04007f06] 	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x4007f06	        0x803c1000	                 cmp byte [rax + rdx], 0	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x4007f0a	     0xf85c5fdffff	                           jne 0x4007cd5	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x4007f10	        0x4883c408	                              add rsp, 8	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4007f14	              0x5b	                                 pop rbx	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4007f15	              0x5d	                                 pop rbp	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4007f16	              0xc3	                                     ret	      2708	syntax.c	FUNCTION_31	ELSE_2
syn_id2name	IF,1:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	14
0x4005866	            0x85ff	                           test edi, edi	      9680	syntax.c	FUNCTION_151	IF_1
0x4005868	            0x7e2b	                           jle 0x4005895	      9680	syntax.c	FUNCTION_151	IF_1
0x400586a	      0xb800000000	                              mov eax, 0	      9681	syntax.c	FUNCTION_151	IF_1
0x400586f	    0x3b3d00000000	            cmp edi, dword [0x04005875] 	      9680	syntax.c	FUNCTION_151	IF_1
0x4005875	            0x7f23	                            jg 0x400589a	      9680	syntax.c	FUNCTION_151	IF_1
0x4005877	          0x4863ff	                         movsxd rdi, edi	      9682	syntax.c	FUNCTION_151	CALL_1
0x400587a	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9682	syntax.c	FUNCTION_151	CALL_1
0x400587e	        0x488d0447	                  lea rax, [rdi + rax*2]	      9682	syntax.c	FUNCTION_151	CALL_1
0x4005882	        0x48c1e003	                              shl rax, 3	      9682	syntax.c	FUNCTION_151	CALL_1
0x4005886	    0x480305000000	             add rax, qword [0x0400588d]	      9682	syntax.c	FUNCTION_151	CALL_1
0x400588d	    0x488b8068ffff	             mov rax, qword [rax - 0x98]	      9682	syntax.c	FUNCTION_151	CALL_1
0x4005894	              0xc3	                                     ret	      9682	syntax.c	FUNCTION_151	CALL_1
0x4005895	      0xb800000000	                              mov eax, 0	      9681	syntax.c	FUNCTION_151	IF_1
0x400589a	            0xf3c3	                                     ret	      9683	syntax.c	FUNCTION_151
syn_namen2id	IF,1:CALL,3:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	18
0x400589c	              0x55	                                push rbp	      9692	syntax.c	FUNCTION_152
0x400589d	              0x53	                                push rbx	      9692	syntax.c	FUNCTION_152
0x400589e	        0x4883ec08	                              sub rsp, 8	      9692	syntax.c	FUNCTION_152
0x40058a2	      0xe800000000	                          call 0x40058a7	      9696	syntax.c	FUNCTION_152	CALL_1
0x40058a7	      0xbd00000000	                              mov ebp, 0	      9694	syntax.c	FUNCTION_152
0x40058ac	          0x4885c0	                           test rax, rax	      9697	syntax.c	FUNCTION_152	IF_1
0x40058af	            0x7415	                            je 0x40058c6	      9697	syntax.c	FUNCTION_152	IF_1
0x40058b1	          0x4889c3	                            mov rbx, rax	      9697	syntax.c	FUNCTION_152	IF_1
0x40058b4	          0x4889c7	                            mov rdi, rax	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x40058b7	      0xe800000000	                          call 0x40058bc	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x40058bc	            0x89c5	                            mov ebp, eax	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x40058be	          0x4889df	                            mov rdi, rbx	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x40058c1	      0xe800000000	                          call 0x40058c6	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x40058c6	            0x89e8	                            mov eax, ebp	      9703	syntax.c	FUNCTION_152
0x40058c8	        0x4883c408	                              add rsp, 8	      9703	syntax.c	FUNCTION_152
0x40058cc	              0x5b	                                 pop rbx	      9703	syntax.c	FUNCTION_152
0x40058cd	              0x5d	                                 pop rbp	      9703	syntax.c	FUNCTION_152
0x40058ce	              0xc3	                                     ret	      9703	syntax.c	FUNCTION_152
syn_cmd_region	IF,29:CALL,54:FOR,4:ELSE,9:SWITCH,0:WHILE,2:DO,0:functions,0	468
0x4006a5c	            0x4157	                                push r15	      5131	syntax.c	FUNCTION_81
0x4006a5e	            0x4156	                                push r14	      5131	syntax.c	FUNCTION_81
0x4006a60	            0x4155	                                push r13	      5131	syntax.c	FUNCTION_81
0x4006a62	            0x4154	                                push r12	      5131	syntax.c	FUNCTION_81
0x4006a64	              0x55	                                push rbp	      5131	syntax.c	FUNCTION_81
0x4006a65	              0x53	                                push rbx	      5131	syntax.c	FUNCTION_81
0x4006a66	    0x4881ec880000	                           sub rsp, 0x88	      5131	syntax.c	FUNCTION_81
0x4006a6d	          0x4989ff	                            mov r15, rdi	      5131	syntax.c	FUNCTION_81
0x4006a70	        0x8974241c	             mov dword [rsp + 0x1c], esi	      5131	syntax.c	FUNCTION_81
0x4006a74	    0x64488b042528	                mov rax, qword fs:[0x28]	      5131	syntax.c	FUNCTION_81
0x4006a7d	      0x4889442478	             mov qword [rsp + 0x78], rax	      5131	syntax.c	FUNCTION_81
0x4006a82	            0x31c0	                            xor eax, eax	      5131	syntax.c	FUNCTION_81
0x4006a84	          0x488b07	                    mov rax, qword [rdi]	      5132	syntax.c	FUNCTION_81
0x4006a87	      0x4889442410	             mov qword [rsp + 0x10], rax	      5132	syntax.c	FUNCTION_81
0x4006a8c	    0xc74424240000	               mov dword [rsp + 0x24], 0	      5160	syntax.c	FUNCTION_81
0x4006a94	      0x488d742428	                   lea rsi, [rsp + 0x28]	      5163	syntax.c	FUNCTION_81	CALL_1
0x4006a99	          0x4889c7	                            mov rdi, rax	      5163	syntax.c	FUNCTION_81	CALL_1
0x4006a9c	      0xe867acffff	                 call sym.get_group_name	      5163	syntax.c	FUNCTION_81	CALL_1
0x4006aa1	          0x4889c5	                            mov rbp, rax	      5163	syntax.c	FUNCTION_81	CALL_1
0x4006aa4	    0x48c744246000	               mov qword [rsp + 0x60], 0	      5165	syntax.c	FUNCTION_81
0x4006aad	    0x48c744246800	               mov qword [rsp + 0x68], 0	      5166	syntax.c	FUNCTION_81
0x4006ab6	    0x48c744247000	               mov qword [rsp + 0x70], 0	      5167	syntax.c	FUNCTION_81
0x4006abf	    0x488b05000000	            mov rax, qword [0x04006ac6] 	      5728	syntax.c	FUNCTION_89
0x4006ac6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5728	syntax.c	FUNCTION_89
0x4006aca	    0xc78268020000	          mov dword [rdx + 0x268], 0xa0 	      5728	syntax.c	FUNCTION_89
0x4006ad4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5729	syntax.c	FUNCTION_89
0x4006ad8	    0xc7806c020000	            mov dword [rax + 0x26c], 0xa	      5729	syntax.c	FUNCTION_89
0x4006ae2	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5171	syntax.c	FUNCTION_81
0x4006aea	    0xc74424340000	               mov dword [rsp + 0x34], 0	      5172	syntax.c	FUNCTION_81
0x4006af2	    0x48c744243800	               mov qword [rsp + 0x38], 0	      5173	syntax.c	FUNCTION_81
0x4006afb	      0xc644244001	                mov byte [rsp + 0x40], 1	      5174	syntax.c	FUNCTION_81
0x4006b00	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5175	syntax.c	FUNCTION_81
0x4006b09	    0x48c744245000	               mov qword [rsp + 0x50], 0	      5176	syntax.c	FUNCTION_81
0x4006b12	    0x48c744245800	               mov qword [rsp + 0x58], 0	      5177	syntax.c	FUNCTION_81
0x4006b1b	          0x4885ed	                           test rbp, rbp	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006b1e	     0xf85aa020000	                           jne 0x4006dce	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006b24	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5152	syntax.c	FUNCTION_81
0x4006b2c	    0x41bd00000000	                             mov r13d, 0	      5136	syntax.c	FUNCTION_81
0x4006b32	      0xe970060000	                           jmp 0x40071a7	      5136	syntax.c	FUNCTION_81
0x4006b37	        0x418b4f30	            mov ecx, dword [r15 + 0x30] 	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4006b3b	      0x488d542424	                   lea rdx, [rsp + 0x24]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4006b40	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4006b45	          0x4889ef	                            mov rdi, rbp	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4006b48	      0xe845f8ffff	                call sym.get_syn_options	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4006b4d	          0x4889c5	                            mov rbp, rax	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4006b50	          0x4885c0	                           test rax, rax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4006b53	     0xf844e060000	                            je 0x40071a7	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4006b59	           0xfb638	                   movzx edi, byte [rax]	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4006b5c	      0xe800000000	                          call 0x4006b61	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4006b61	            0x85c0	                           test eax, eax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4006b63	     0xf853e060000	                           jne 0x40071a7	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4006b69	         0xfb64500	                   movzx eax, byte [rbp]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b6d	            0x3c3d	                            cmp al, 0x3d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b6f	            0x770b	                            ja 0x4006b7c	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b71	        0x490fa3c4	                             bt r12, rax	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b75	            0x721b	                            jb 0x4006b92	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b77	          0x4889eb	                            mov rbx, rbp	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b7a	            0xeb03	                           jmp 0x4006b7f	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b7c	          0x4889eb	                            mov rbx, rbp	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b7f	        0x4883c301	                              add rbx, 1	      5192	syntax.c	FUNCTION_81	WHILE_1	WHILE_2
0x4006b83	           0xfb603	                   movzx eax, byte [rbx]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b86	            0x3c3d	                            cmp al, 0x3d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b88	            0x77f5	                            ja 0x4006b7f	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b8a	        0x490fa3c4	                             bt r12, rax	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b8e	            0x73ef	                           jae 0x4006b7f	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b90	            0xeb03	                           jmp 0x4006b95	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006b92	          0x4889eb	                            mov rbx, rbp	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4006b95	          0x4c89ef	                            mov rdi, r13	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x4006b98	      0xe800000000	                          call 0x4006b9d	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x4006b9d	          0x4889de	                            mov rsi, rbx	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4006ba0	          0x4829ee	                            sub rsi, rbp	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4006ba3	          0x4889ef	                            mov rdi, rbp	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4006ba6	      0xe800000000	                          call 0x4006bab	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4006bab	          0x4989c5	                            mov r13, rax	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4006bae	          0x4885c0	                           test rax, rax	      5195	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x4006bb1	     0xf84dd050000	                            je 0x4007194	      5195	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x4006bb7	      0xbf00000000	                              mov edi, 0	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4006bbc	      0xb90b000000	                            mov ecx, 0xb	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4006bc1	          0x4889c6	                            mov rsi, rax	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4006bc4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4006bc6	           0xf97c2	                                 seta dl	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4006bc9	           0xf92c0	                                 setb al	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4006bcc	            0x38c2	                              cmp dl, al	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4006bce	            0x7466	                            je 0x4006c36	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4006bd0	      0xbf00000000	                              mov edi, 0	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4006bd5	      0xb906000000	                              mov ecx, 6	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4006bda	          0x4c89ee	                            mov rsi, r13	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4006bdd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4006bdf	           0xf97c2	                                 seta dl	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4006be2	           0xf92c0	                                 setb al	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4006be5	            0x38c2	                              cmp dl, al	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4006be7	            0x7455	                            je 0x4006c3e	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4006be9	      0x41807d0045	                    cmp byte [r13], 0x45	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4006bee	            0x7515	                           jne 0x4006c05	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4006bf0	      0x41807d014e	                cmp byte [r13 + 1], 0x4e	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4006bf5	            0x750e	                           jne 0x4006c05	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4006bf7	      0x41807d0244	                cmp byte [r13 + 2], 0x44	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4006bfc	            0x7507	                           jne 0x4006c05	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4006bfe	      0x41807d0300	                   cmp byte [r13 + 3], 0	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4006c03	            0x7441	                            je 0x4006c46	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4006c05	      0xbf00000000	                              mov edi, 0	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4006c0a	      0xb905000000	                              mov ecx, 5	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4006c0f	          0x4c89ee	                            mov rsi, r13	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4006c12	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4006c14	           0xf97c2	                                 seta dl	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4006c17	           0xf92c0	                                 setb al	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4006c1a	            0x38c2	                              cmp dl, al	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4006c1c	     0xf8585050000	                           jne 0x40071a7	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4006c22	    0x48837c246800	               cmp qword [rsp + 0x68], 0	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x4006c28	     0xf859c050000	                           jne 0x40071ca	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x4006c2e	    0x41be01000000	                             mov r14d, 1	      5213	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6
0x4006c34	            0xeb16	                           jmp 0x4006c4c	      5213	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6
0x4006c36	    0x41be03000000	                             mov r14d, 3	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x4006c3c	            0xeb0e	                           jmp 0x4006c4c	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x4006c3e	    0x41be00000000	                             mov r14d, 0	      5203	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4
0x4006c44	            0xeb06	                           jmp 0x4006c4c	      5203	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4
0x4006c46	    0x41be02000000	                             mov r14d, 2	      5205	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5
0x4006c4c	          0x4889df	                            mov rdi, rbx	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x4006c4f	      0xe800000000	                          call 0x4006c54	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x4006c54	          0x80383d	                    cmp byte [rax], 0x3d	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x4006c57	            0x742b	                            je 0x4006c84	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x4006c59	      0xba05000000	                              mov edx, 5	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4006c5e	      0xbe00000000	                              mov esi, 0	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4006c63	      0xbf00000000	                              mov edi, 0	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4006c68	      0xe800000000	                          call 0x4006c6d	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4006c6d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4006c72	          0x4889c7	                            mov rdi, rax	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4006c75	      0xe800000000	                          call 0x4006c7a	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4006c7a	      0xbd00000000	                              mov ebp, 0	      5220	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x4006c7f	      0xe923050000	                           jmp 0x40071a7	      5222	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x4006c84	        0x488d7801	                      lea rdi, [rax + 1]	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x4006c88	      0xe800000000	                          call 0x4006c8d	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x4006c8d	          0x4889c5	                            mov rbp, rax	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x4006c90	          0x803800	                       cmp byte [rax], 0	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x4006c93	     0xf8443050000	                            je 0x40071dc	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x4006c99	        0x4183fe03	                             cmp r14d, 3	      5231	syntax.c	FUNCTION_81	WHILE_1	IF_10
0x4006c9d	            0x756b	                           jne 0x4006d0a	      5231	syntax.c	FUNCTION_81	WHILE_1	IF_10
0x4006c9f	          0x4889c7	                            mov rdi, rax	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x4006ca2	      0xe800000000	                          call 0x4006ca7	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x4006ca7	          0x4889c3	                            mov rbx, rax	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x4006caa	          0x4829e8	                            sub rax, rbp	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cad	        0x4883f804	                              cmp rax, 4	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cb1	            0x7519	                           jne 0x4006ccc	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cb3	      0xbf00000000	                              mov edi, 0	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cb8	      0xb904000000	                              mov ecx, 4	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cbd	          0x4889ee	                            mov rsi, rbp	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cc0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cc2	           0xf97c1	                                 seta cl	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cc5	           0xf92c2	                                 setb dl	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cc8	            0x38d1	                              cmp cl, dl	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cca	            0x7426	                            je 0x4006cf2	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006ccc	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x4006cd4	      0x41837f3000	               cmp dword [r15 + 0x30], 0	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cd9	            0x751f	                           jne 0x4006cfa	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4006cdb	            0x89c6	                            mov esi, eax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4006cdd	          0x4889ef	                            mov rdi, rbp	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4006ce0	      0xe800000000	                          call 0x4006ce5	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4006ce5	        0x8944240c	              mov dword [rsp + 0xc], eax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4006ce9	            0x85c0	                           test eax, eax	      5239	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x4006ceb	            0x750d	                           jne 0x4006cfa	      5239	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x4006ced	      0xe9fc040000	                           jmp 0x40071ee	      5239	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x4006cf2	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x4006cfa	          0x4889df	                            mov rdi, rbx	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x4006cfd	      0xe800000000	                          call 0x4006d02	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x4006d02	          0x4889c5	                            mov rbp, rax	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x4006d05	      0xe9ba000000	                           jmp 0x4006dc4	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x4006d0a	      0xbf18000000	                           mov edi, 0x18	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x4006d0f	      0xe800000000	                          call 0x4006d14	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x4006d14	          0x4889c3	                            mov rbx, rax	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x4006d17	          0x4885c0	                           test rax, rax	      5255	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x4006d1a	     0xf847b040000	                            je 0x400719b	      5255	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x4006d20	          0x4963c6	                        movsxd rax, r14d	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4006d23	      0x488b54c460	    mov rdx, qword [rsp + rax*8 + 0x60] 	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4006d28	        0x48895310	             mov qword [rbx + 0x10], rdx	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4006d2c	      0x48895cc460	     mov qword [rsp + rax*8 + 0x60], rbx	      5261	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4006d31	      0xbfa0000000	                           mov edi, 0xa0	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x4006d36	      0xe800000000	                          call 0x4006d3b	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x4006d3b	          0x488903	                    mov qword [rbx], rax	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x4006d3e	          0x4885c0	                           test rax, rax	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x4006d41	     0xf845b040000	                            je 0x40071a2	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x4006d47	          0x4585f6	                         test r14d, r14d	      5273	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x4006d4a	            0x7524	                           jne 0x4006d70	      5273	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x4006d4c	    0xc70500000000	               mov dword [0x04006d56], 1	      5274	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x4006d56	          0x488b33	                    mov rsi, qword [rbx]	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4006d59	          0x4889ef	                            mov rdi, rbp	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4006d5c	      0xe8eda9ffff	                call sym.get_syn_pattern	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4006d61	          0x4889c5	                            mov rbp, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4006d64	    0xc70500000000	               mov dword [0x04006d6e], 0	      5278	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4006d6e	            0xeb48	                           jmp 0x4006db8	      5278	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4006d70	        0x418d46ff	                      lea eax, [r14 - 1]	      5275	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x4006d74	          0x83f801	                              cmp eax, 1	      5275	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x4006d77	            0x770a	                            ja 0x4006d83	      5275	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x4006d79	    0xc70500000000	               mov dword [0x04006d83], 2	      5276	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x4006d83	          0x488b33	                    mov rsi, qword [rbx]	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4006d86	          0x4889ef	                            mov rdi, rbp	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4006d89	      0xe8c0a9ffff	                call sym.get_syn_pattern	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4006d8e	          0x4889c5	                            mov rbp, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4006d91	    0xc70500000000	               mov dword [0x04006d9b], 0	      5278	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4006d9b	        0x4183fe02	                             cmp r14d, 2	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4006d9f	            0x7517	                           jne 0x4006db8	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4006da1	      0xe800000000	                          call 0x4006da6	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4006da6	            0x85c0	                           test eax, eax	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4006da8	            0x740e	                            je 0x4006db8	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4006daa	      0xf644243108	               test byte [rsp + 0x31], 8	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4006daf	            0x7507	                           jne 0x4006db8	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4006db1	          0x488b03	                    mov rax, qword [rbx]	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4006db4	        0x83482408	                or dword [rax + 0x24], 8	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4006db8	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4006dbc	          0x894308	                mov dword [rbx + 8], eax	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4006dbf	      0x8344241801	               add dword [rsp + 0x18], 1	      5283	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4006dc4	          0x4885ed	                           test rbp, rbp	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006dc7	            0x7525	                           jne 0x4006dee	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006dc9	      0xe9d9030000	                           jmp 0x40071a7	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006dce	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006dd6	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006dde	    0x41bd00000000	                             mov r13d, 0	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006de4	    0x49bc01020000	         movabs r12, 0x2000000100000201 	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4006dee	         0xfb67d00	                   movzx edi, byte [rbp]	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006df2	      0xe800000000	                          call 0x4006df7	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006df7	            0x85c0	                           test eax, eax	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006df9	     0xf8438fdffff	                            je 0x4006b37	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006dff	      0xe9a3030000	                           jmp 0x40071a7	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4006e04	    0x48837c246000	               cmp qword [rsp + 0x60], 0	      5293	syntax.c	FUNCTION_81	IF_19
0x4006e0a	     0xf84f8030000	                            je 0x4007208	      5293	syntax.c	FUNCTION_81	IF_19
0x4006e10	    0x48837c247000	               cmp qword [rsp + 0x70], 0	      5293	syntax.c	FUNCTION_81	IF_19
0x4006e16	     0xf851e040000	                           jne 0x400723a	      5293	syntax.c	FUNCTION_81	IF_19
0x4006e1c	      0xe9f9030000	                           jmp 0x400721a	      5293	syntax.c	FUNCTION_81	IF_19
0x4006e21	      0x41837f3000	               cmp dword [r15 + 0x30], 0	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4006e26	     0xf8521020000	                           jne 0x400704d	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4006e2c	    0x488b05000000	            mov rax, qword [0x04006e33] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4006e33	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4006e37	    0x4881c7600200	                          add rdi, 0x260	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4006e3e	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4006e42	      0xe800000000	                          call 0x4006e47	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4006e47	            0x85c0	                           test eax, eax	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4006e49	     0xf841b020000	                            je 0x400706a	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4006e4f	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4006e54	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4006e59	          0x4829c6	                            sub rsi, rax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4006e5c	          0x4889c7	                            mov rdi, rax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4006e5f	      0xe800000000	                          call 0x4006e64	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4006e64	            0x89c3	                            mov ebx, eax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4006e66	            0x85c0	                           test eax, eax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4006e68	     0xf8414020000	                            je 0x4007082	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4006e6e	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x4006e73	            0x89c7	                            mov edi, eax	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x4006e75	      0xe864b4ffff	              call sym.syn_incl_toplevel	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x4006e7a	    0x488b05000000	            mov rax, qword [0x04006e81] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4006e81	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4006e85	    0x448b88600200	           mov r9d, dword [rax + 0x260] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4006e8c	    0x41b800000000	                              mov r8d, 0	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4006e92	      0x4a8b54c460	     mov rdx, qword [rsp + r8*8 + 0x60] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4006e97	          0x4885d2	                           test rdx, rdx	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4006e9a	     0xf846d010000	                            je 0x400700d	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4006ea0	          0x4589c2	                           mov r10d, r8d	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4006ea3	          0x4963c1	                         movsxd rax, r9d	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0x4006ea6	        0x488d0480	                  lea rax, [rax + rax*4]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0x4006eaa	        0x48c1e005	                              shl rax, 5	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0x4006eae	          0x488b32	                    mov rsi, qword [rdx]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0x4006eb1	    0x488b0d000000	            mov rcx, qword [0x04006eb8] 	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0x4006eb8	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0x4006ebc	          0x4889c7	                            mov rdi, rax	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0x4006ebf	    0x4803b9700200	            add rdi, qword [rcx + 0x270]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0x4006ec6	      0xb914000000	                           mov ecx, 0x14	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0x4006ecb	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0x4006ece	    0x488b0d000000	            mov rcx, qword [0x04006ed5] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0x4006ed5	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0x4006ed9	    0x488b89700200	           mov rcx, qword [rcx + 0x270] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0x4006ee0	       0xfb674241c	           movzx esi, byte [rsp + 0x1c] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0x4006ee5	      0x4088740101	           mov byte [rcx + rax + 1], sil	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0x4006eea	    0x488b0d000000	            mov rcx, qword [0x04006ef1] 	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006ef1	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006ef5	          0x4889c6	                            mov rsi, rax	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006ef8	    0x4803b1700200	            add rsi, qword [rcx + 0x270]	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006eff	          0x4585c0	                           test r8d, r8d	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006f02	            0x740c	                            je 0x4006f10	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006f04	        0x4183f801	                              cmp r8d, 1	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006f08	           0xf94c1	                                 sete cl	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006f0b	          0x83c103	                              add ecx, 3	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006f0e	            0xeb05	                           jmp 0x4006f15	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006f10	      0xb902000000	                              mov ecx, 2	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006f15	            0x880e	                      mov byte [rsi], cl	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0x4006f17	    0x488b0d000000	            mov rcx, qword [0x04006f1e] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0x4006f1e	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0x4006f22	          0x4889c7	                            mov rdi, rax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0x4006f25	    0x4803be700200	            add rdi, qword [rsi + 0x270]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0x4006f2c	          0x4889fe	                            mov rsi, rdi	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0x4006f2f	        0x8b7c2430	            mov edi, dword [rsp + 0x30] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0x4006f33	           0x97e24	              or dword [rsi + 0x24], edi	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0x4006f36	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0x4006f3a	    0x488bb6700200	           mov rsi, qword [rsi + 0x270] 	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0x4006f41	      0x66895c0654	         mov word [rsi + rax + 0x54], bx	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0x4006f46	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0x4006f4a	    0x488bb6700200	           mov rsi, qword [rsi + 0x270] 	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0x4006f51	    0x8b3d00000000	            mov edi, dword [0x04006f57] 	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0x4006f57	        0x897c0650	       mov dword [rsi + rax + 0x50], edi	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0x4006f5b	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0x4006f5f	    0x488b89700200	           mov rcx, qword [rcx + 0x270] 	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0x4006f66	          0x8b7208	                mov esi, dword [rdx + 8]	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0x4006f69	      0x6689740102	            mov word [rcx + rax + 2], si	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0x4006f6e	    0x488b0d000000	            mov rcx, qword [0x04006f75] 	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0x4006f75	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0x4006f79	    0x488bb6700200	           mov rsi, qword [rsi + 0x270] 	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0x4006f80	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0x4006f84	        0x897c0628	       mov dword [rsi + rax + 0x28], edi	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0x4006f88	          0x4585d2	                         test r10d, r10d	      5336	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4006f8b	            0x7552	                           jne 0x4006fdf	      5336	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4006f8d	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0x4006f91	    0x488bb6700200	           mov rsi, qword [rsi + 0x270] 	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0x4006f98	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0x4006f9d	      0x48897c0640	       mov qword [rsi + rax + 0x40], rdi	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0x4006fa2	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      5341	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4006fa7	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0x4006fab	    0x488bbf700200	           mov rdi, qword [rdi + 0x270] 	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0x4006fb2	      0x4889740758	       mov qword [rdi + rax + 0x58], rsi	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0x4006fb7	          0x4885f6	                           test rsi, rsi	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x4006fba	            0x740e	                            je 0x4006fca	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x4006fbc	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      5343	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x4006fc0	    0xc78698020000	              mov dword [rsi + 0x298], 1	      5343	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x4006fca	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0x4006fce	    0x488bb6700200	           mov rsi, qword [rsi + 0x270] 	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0x4006fd5	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0x4006fda	      0x48897c0648	       mov qword [rsi + rax + 0x48], rdi	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0x4006fdf	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4006fe3	    0x838060020000	              add dword [rax + 0x260], 1	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4006fea	        0x4183c101	                              add r9d, 1	      5348	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4006fee	      0xf644243120	           test byte [rsp + 0x31], 0x20 	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x4006ff3	            0x740b	                            je 0x4007000	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x4006ff5	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x4006ff9	    0x83800c030000	              add dword [rax + 0x30c], 1	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x4007000	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007004	          0x4885d2	                           test rdx, rdx	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007007	     0xf8596feffff	                           jne 0x4006ea3	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400700d	        0x4983c001	                               add r8, 1	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007011	        0x4983f803	                               cmp r8, 3	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x4007015	     0xf8577feffff	                           jne 0x4006e92	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x400701b	      0xbf23000000	                           mov edi, 0x23	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_42
0x4007020	      0xe800000000	                          call 0x4007025	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_42
0x4007025	    0x488b05000000	            mov rax, qword [0x0400702c] 	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_43
0x400702c	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_43
0x4007030	      0xe800000000	                          call 0x4007035	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_43
0x4007035	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_43
0x400703d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_43
0x4007045	    0x41bd01000000	                             mov r13d, 1	      5358	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400704b	            0xeb68	                           jmp 0x40070b5	      5358	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400704d	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5358	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007055	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5358	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400705d	    0x41bd00000000	                             mov r13d, 0	      5157	syntax.c	FUNCTION_81
0x4007063	      0xbd00000000	                              mov ebp, 0	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x4007068	            0xeb4b	                           jmp 0x40070b5	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x400706a	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x4007072	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x400707a	    0x41bd00000000	                             mov r13d, 0	      5157	syntax.c	FUNCTION_81
0x4007080	            0xeb33	                           jmp 0x40070b5	      5157	syntax.c	FUNCTION_81
0x4007082	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5157	syntax.c	FUNCTION_81
0x400708a	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5157	syntax.c	FUNCTION_81
0x4007092	    0x41bd00000000	                             mov r13d, 0	      5157	syntax.c	FUNCTION_81
0x4007098	            0xeb1b	                           jmp 0x40070b5	      5157	syntax.c	FUNCTION_81
0x400709a	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5157	syntax.c	FUNCTION_81
0x40070a2	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5157	syntax.c	FUNCTION_81
0x40070aa	    0x41bd00000000	                             mov r13d, 0	      5157	syntax.c	FUNCTION_81
0x40070b0	      0xbd00000000	                              mov ebp, 0	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x40070b5	      0x4c8d742460	                   lea r14, [rsp + 0x60]	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x40070ba	        0x4d8d7e18	                   lea r15, [r14 + 0x18]	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x40070be	          0x498b1e	                    mov rbx, qword [r14]	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x40070c1	          0x4885db	                           test rbx, rbx	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x40070c4	            0x7505	                           jne 0x40070cb	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x40070c6	            0xeb39	                           jmp 0x4007101	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x40070c8	          0x4c89e3	                            mov rbx, r12	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x40070cb	          0x4585ed	                         test r13d, r13d	      5368	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26
0x40070ce	            0x7518	                           jne 0x40070e8	      5368	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26
0x40070d0	          0x488b03	                    mov rax, qword [rbx]	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_44
0x40070d3	        0x488b7868	            mov rdi, qword [rax + 0x68] 	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_44
0x40070d7	      0xe800000000	                          call 0x40070dc	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_44
0x40070dc	          0x488b03	                    mov rax, qword [rbx]	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_45
0x40070df	        0x488b7860	            mov rdi, qword [rax + 0x60] 	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_45
0x40070e3	      0xe800000000	                          call 0x40070e8	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_45
0x40070e8	          0x488b3b	                    mov rdi, qword [rbx]	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_46
0x40070eb	      0xe800000000	                          call 0x40070f0	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_46
0x40070f0	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      5374	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x40070f4	          0x4889df	                            mov rdi, rbx	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_47
0x40070f7	      0xe800000000	                          call 0x40070fc	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_47
0x40070fc	          0x4d85e4	                           test r12, r12	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x40070ff	            0x75c7	                           jne 0x40070c8	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x4007101	        0x4983c608	                              add r14, 8	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x4007105	          0x4d39f7	                            cmp r15, r14	      5365	syntax.c	FUNCTION_81	FOR_3
0x4007108	            0x75b4	                           jne 0x40070be	      5365	syntax.c	FUNCTION_81	FOR_3
0x400710a	          0x4585ed	                         test r13d, r13d	      5378	syntax.c	FUNCTION_81	IF_27
0x400710d	     0xf8549010000	                           jne 0x400725c	      5378	syntax.c	FUNCTION_81	IF_27
0x4007113	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5380	syntax.c	FUNCTION_81	IF_27	CALL_48
0x4007118	      0xe800000000	                          call 0x400711d	      5380	syntax.c	FUNCTION_81	IF_27	CALL_48
0x400711d	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      5381	syntax.c	FUNCTION_81	IF_27	CALL_49
0x4007122	      0xe800000000	                          call 0x4007127	      5381	syntax.c	FUNCTION_81	IF_27	CALL_49
0x4007127	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      5382	syntax.c	FUNCTION_81	IF_27	CALL_50
0x400712c	      0xe800000000	                          call 0x4007131	      5382	syntax.c	FUNCTION_81	IF_27	CALL_50
0x4007131	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0x4007136	            0x7426	                            je 0x400715e	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0x4007138	      0xba05000000	                              mov edx, 5	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0x400713d	      0xbe00000000	                              mov esi, 0	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0x4007142	      0xbf00000000	                              mov edi, 0	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0x4007147	      0xe800000000	                          call 0x400714c	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0x400714c	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0x4007151	          0x4889c7	                            mov rdi, rax	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0x4007154	      0xe800000000	                          call 0x4007159	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0x4007159	      0xe9fe000000	                           jmp 0x400725c	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0x400715e	      0x837c241800	               cmp dword [rsp + 0x18], 0	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007163	            0x7509	                           jne 0x400716e	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007165	          0x4885ed	                           test rbp, rbp	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007168	     0xf85ee000000	                           jne 0x400725c	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400716e	      0xba05000000	                              mov edx, 5	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007173	      0xbe00000000	                              mov esi, 0	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007178	      0xbf00000000	                              mov edi, 0	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400717d	      0xe800000000	                          call 0x4007182	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007182	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007187	          0x4889c7	                            mov rdi, rax	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400718a	      0xe800000000	                          call 0x400718f	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400718f	      0xe9c8000000	                           jmp 0x400725c	      5388	syntax.c	FUNCTION_81
0x4007194	      0xbd00000000	                              mov ebp, 0	      5197	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x4007199	            0xeb0c	                           jmp 0x40071a7	      5197	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x400719b	      0xbd00000000	                              mov ebp, 0	      5257	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x40071a0	            0xeb05	                           jmp 0x40071a7	      5257	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x40071a2	      0xbd00000000	                              mov ebp, 0	      5265	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x40071a7	          0x4c89ef	                            mov rdi, r13	      5286	syntax.c	FUNCTION_81	CALL_25
0x40071aa	      0xe800000000	                          call 0x40071af	      5286	syntax.c	FUNCTION_81	CALL_25
0x40071af	          0x4885ed	                           test rbp, rbp	      5293	syntax.c	FUNCTION_81	IF_19
0x40071b2	     0xf854cfcffff	                           jne 0x4006e04	      5293	syntax.c	FUNCTION_81	IF_19
0x40071b8	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5293	syntax.c	FUNCTION_81	IF_19
0x40071c0	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5293	syntax.c	FUNCTION_81	IF_19
0x40071c8	            0xeb60	                           jmp 0x400722a	      5293	syntax.c	FUNCTION_81	IF_19
0x40071ca	    0xc74424180100	               mov dword [rsp + 0x18], 1	      5210	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x40071d2	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5155	syntax.c	FUNCTION_81
0x40071da	            0xeb22	                           jmp 0x40071fe	      5155	syntax.c	FUNCTION_81
0x40071dc	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5156	syntax.c	FUNCTION_81
0x40071e4	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      5227	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x40071ec	            0xeb10	                           jmp 0x40071fe	      5227	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x40071ee	    0xc74424180100	               mov dword [rsp + 0x18], 1	      5241	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x40071f6	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5155	syntax.c	FUNCTION_81
0x40071fe	          0x4c89ef	                            mov rdi, r13	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007201	      0xe800000000	                          call 0x4007206	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007206	            0xeb22	                           jmp 0x400722a	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007208	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007210	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      5296	syntax.c	FUNCTION_81	IF_19
0x4007218	            0xeb10	                           jmp 0x400722a	      5296	syntax.c	FUNCTION_81	IF_19
0x400721a	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5296	syntax.c	FUNCTION_81	IF_19
0x4007222	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      5296	syntax.c	FUNCTION_81	IF_19
0x400722a	    0x41bd00000000	                             mov r13d, 0	      5157	syntax.c	FUNCTION_81
0x4007230	      0xbd00000000	                              mov ebp, 0	      5157	syntax.c	FUNCTION_81
0x4007235	      0xe97bfeffff	                           jmp 0x40070b5	      5157	syntax.c	FUNCTION_81
0x400723a	          0x4889ef	                            mov rdi, rbp	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x400723d	      0xe800000000	                          call 0x4007242	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x4007242	        0x49894708	                mov qword [r15 + 8], rax	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x4007246	         0xfb67d00	                   movzx edi, byte [rbp]	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400724a	      0xe800000000	                          call 0x400724f	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400724f	            0x85c0	                           test eax, eax	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007251	     0xf8443feffff	                            je 0x400709a	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007257	      0xe9c5fbffff	                           jmp 0x4006e21	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400725c	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5388	syntax.c	FUNCTION_81
0x4007261	    0x644833042528	                xor rax, qword fs:[0x28]	      5388	syntax.c	FUNCTION_81
0x400726a	            0x7405	                            je 0x4007271	      5388	syntax.c	FUNCTION_81
0x400726c	      0xe800000000	                          call 0x4007271	      5388	syntax.c	FUNCTION_81
0x4007271	    0x4881c4880000	                           add rsp, 0x88	      5388	syntax.c	FUNCTION_81
0x4007278	              0x5b	                                 pop rbx	      5388	syntax.c	FUNCTION_81
0x4007279	              0x5d	                                 pop rbp	      5388	syntax.c	FUNCTION_81
0x400727a	            0x415c	                                 pop r12	      5388	syntax.c	FUNCTION_81
0x400727c	            0x415d	                                 pop r13	      5388	syntax.c	FUNCTION_81
0x400727e	            0x415e	                                 pop r14	      5388	syntax.c	FUNCTION_81
0x4007280	            0x415f	                                 pop r15	      5388	syntax.c	FUNCTION_81
0x4007282	              0xc3	                                     ret	      5388	syntax.c	FUNCTION_81
store_current_state	IF,13:CALL,15:FOR,3:ELSE,6:SWITCH,0:WHILE,0:DO,0:functions,0	179
0x40030ab	            0x4155	                                push r13	      1471	syntax.c	FUNCTION_19
0x40030ad	            0x4154	                                push r12	      1471	syntax.c	FUNCTION_19
0x40030af	              0x55	                                push rbp	      1471	syntax.c	FUNCTION_19
0x40030b0	              0x53	                                push rbx	      1471	syntax.c	FUNCTION_19
0x40030b1	        0x4883ec08	                              sub rsp, 8	      1471	syntax.c	FUNCTION_19
0x40030b5	    0x488b1d000000	            mov rbx, qword [0x040030bc] 	      1476	syntax.c	FUNCTION_19	CALL_1
0x40030bc	          0x4889df	                            mov rdi, rbx	      1476	syntax.c	FUNCTION_19	CALL_1
0x40030bf	      0xe87ccfffff	           call sym.syn_stack_find_entry	      1476	syntax.c	FUNCTION_19	CALL_1
0x40030c4	          0x4889c5	                            mov rbp, rax	      1476	syntax.c	FUNCTION_19	CALL_1
0x40030c7	    0x8b1500000000	            mov edx, dword [0x040030cd] 	      1482	syntax.c	FUNCTION_19	FOR_1
0x40030cd	          0x83ea01	                              sub edx, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x40030d0	     0xf88da000000	                            js 0x40031b0	      1482	syntax.c	FUNCTION_19	FOR_1
0x40030d6	    0x488b0d000000	            mov rcx, qword [0x040030dd] 	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x40030dd	          0x4863c2	                         movsxd rax, edx	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x40030e0	        0x488d04c0	                  lea rax, [rax + rax*8]	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x40030e4	        0x48c1e004	                              shl rax, 4	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x40030e8	          0x4801c8	                            add rax, rcx	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x40030eb	        0x483b5828	            cmp rbx, qword [rax + 0x28] 	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x40030ef	            0x7e48	                           jle 0x4003139	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x40030f1	        0x483b5818	            cmp rbx, qword [rax + 0x18] 	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x40030f5	            0x7e42	                           jle 0x4003139	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x40030f7	        0x483b5838	            cmp rbx, qword [rax + 0x38] 	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x40030fb	            0x7f22	                            jg 0x400311f	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x40030fd	            0xeb3a	                           jmp 0x4003139	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x40030ff	          0x4863c2	                         movsxd rax, edx	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x4003102	        0x488d04c0	                  lea rax, [rax + rax*8]	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x4003106	        0x48c1e004	                              shl rax, 4	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x400310a	          0x4801c8	                            add rax, rcx	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x400310d	        0x483b5828	            cmp rbx, qword [rax + 0x28] 	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003111	            0x7e26	                           jle 0x4003139	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003113	        0x483b5818	            cmp rbx, qword [rax + 0x18] 	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003117	            0x7e20	                           jle 0x4003139	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003119	        0x483b5838	            cmp rbx, qword [rax + 0x38] 	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400311d	            0x7e1a	                           jle 0x4003139	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400311f	        0x83785800	               cmp dword [rax + 0x58], 0	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003123	            0x7406	                            je 0x400312b	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003125	        0x483b5848	            cmp rbx, qword [rax + 0x48] 	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003129	            0x7e0a	                           jle 0x4003135	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400312b	          0x83ea01	                              sub edx, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x400312e	          0x83faff	             cmp edx, 0xffffffffffffffff	      1482	syntax.c	FUNCTION_19	FOR_1
0x4003131	            0x75cc	                           jne 0x40030ff	      1482	syntax.c	FUNCTION_19	FOR_1
0x4003133	            0xeb7b	                           jmp 0x40031b0	      1482	syntax.c	FUNCTION_19	FOR_1
0x4003135	            0x85d2	                           test edx, edx	      1492	syntax.c	FUNCTION_19	IF_2
0x4003137	            0x7877	                            js 0x40031b0	      1492	syntax.c	FUNCTION_19	IF_2
0x4003139	          0x4885ed	                           test rbp, rbp	      1494	syntax.c	FUNCTION_19	IF_2	IF_3
0x400313c	     0xf8448020000	                            je 0x400338a	      1494	syntax.c	FUNCTION_19	IF_2	IF_3
0x4003142	    0x488b1d000000	            mov rbx, qword [0x04003149] 	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4003149	    0x488b93200300	           mov rdx, qword [rbx + 0x320] 	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4003150	          0x4839d5	                            cmp rbp, rdx	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4003153	            0x7523	                           jne 0x4003178	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4003155	        0x488b4500	                    mov rax, qword [rbp]	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4003159	    0x488983200300	            mov qword [rbx + 0x320], rax	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4003160	            0xeb28	                           jmp 0x400318a	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4003162	          0x488b10	                    mov rdx, qword [rax]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4003165	          0x4839d5	                            cmp rbp, rdx	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4003168	     0xf8410020000	                            je 0x400337e	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x400316e	          0x4889d0	                            mov rax, rdx	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4003171	          0x4885c0	                           test rax, rax	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4003174	            0x75ec	                           jne 0x4003162	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4003176	            0xeb12	                           jmp 0x400318a	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4003178	          0x4885d2	                           test rdx, rdx	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x400317b	            0x740d	                            je 0x400318a	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x400317d	          0x488b02	                    mov rax, qword [rdx]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4003180	          0x4839c5	                            cmp rbp, rax	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4003183	            0x75ec	                           jne 0x4003171	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4003185	      0xe9f1010000	                           jmp 0x400337b	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x400318a	          0x4889ef	                            mov rdi, rbp	      1439	syntax.c	FUNCTION_17	CALL_1
0x400318d	      0xe843d3ffff	                call sym.clear_syn_state	      1439	syntax.c	FUNCTION_17	CALL_1
0x4003192	    0x488b83280300	           mov rax, qword [rbx + 0x328] 	      1440	syntax.c	FUNCTION_17
0x4003199	        0x48894500	                    mov qword [rbp], rax	      1440	syntax.c	FUNCTION_17
0x400319d	    0x4889ab280300	            mov qword [rbx + 0x328], rbp	      1441	syntax.c	FUNCTION_17
0x40031a4	    0x838330030000	              add dword [rbx + 0x330], 1	      1442	syntax.c	FUNCTION_17
0x40031ab	      0xe9da010000	                           jmp 0x400338a	      1442	syntax.c	FUNCTION_17
0x40031b0	          0x4885ed	                           test rbp, rbp	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x40031b3	            0x740a	                            je 0x40031bf	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x40031b5	        0x483b5d08	                cmp rbx, qword [rbp + 8]	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x40031b9	     0xf849c000000	                            je 0x400325b	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x40031bf	    0x488b05000000	            mov rax, qword [0x040031c6] 	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x40031c6	    0x8b9030030000	           mov edx, dword [rax + 0x330] 	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x40031cc	            0x85d2	                           test edx, edx	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x40031ce	            0x7529	                           jne 0x40031f9	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x40031d0	      0xe877d3ffff	              call sym.syn_stack_cleanup	      1521	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_4
0x40031d5	    0x488b3d000000	            mov rdi, qword [0x040031dc] 	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_5
0x40031dc	      0xe85fceffff	           call sym.syn_stack_find_entry	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_5
0x40031e1	          0x4889c5	                            mov rbp, rax	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_5
0x40031e4	    0x488b05000000	            mov rax, qword [0x040031eb] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40031eb	    0x8b9030030000	           mov edx, dword [rax + 0x330] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40031f1	            0x85d2	                           test edx, edx	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40031f3	     0xf8491010000	                            je 0x400338a	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40031f9	    0x4c8ba0280300	           mov r12, qword [rax + 0x328] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003200	        0x498b0c24	                    mov rcx, qword [r12]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003204	    0x488988280300	            mov qword [rax + 0x328], rcx	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x400320b	          0x83ea01	                              sub edx, 1	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x400320e	    0x899030030000	            mov dword [rax + 0x330], edx	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003214	          0x4885ed	                           test rbp, rbp	      1535	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4003217	            0x7514	                           jne 0x400322d	      1535	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4003219	    0x488b90200300	           mov rdx, qword [rax + 0x320] 	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4003220	        0x49891424	                    mov qword [r12], rdx	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4003224	    0x4c89a0200300	            mov qword [rax + 0x320], r12	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x400322b	            0xeb0c	                           jmp 0x4003239	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x400322d	        0x488b4500	                    mov rax, qword [rbp]	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4003231	        0x49890424	                    mov qword [r12], rax	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4003235	        0x4c896500	                    mov qword [rbp], r12	      1545	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4003239	    0x41c78424bc00	               mov dword [r12 + 0xbc], 0	      1548	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003245	    0x488b05000000	            mov rax, qword [0x0400324c] 	      1549	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x400324c	      0x4989442408	                mov qword [r12 + 8], rax	      1549	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003251	          0x4d85e4	                           test r12, r12	      1552	syntax.c	FUNCTION_19	IF_11
0x4003254	            0x7508	                           jne 0x400325e	      1552	syntax.c	FUNCTION_19	IF_11
0x4003256	      0xe935010000	                           jmp 0x4003390	      1552	syntax.c	FUNCTION_19	IF_11
0x400325b	          0x4989ec	                            mov r12, rbp	      1476	syntax.c	FUNCTION_19	CALL_1
0x400325e	          0x4c89e7	                            mov rdi, r12	      1555	syntax.c	FUNCTION_19	IF_11	CALL_6
0x4003261	      0xe86fd2ffff	                call sym.clear_syn_state	      1555	syntax.c	FUNCTION_19	IF_11	CALL_6
0x4003266	    0x8b0500000000	            mov eax, dword [0x0400326c] 	      1556	syntax.c	FUNCTION_19	IF_11
0x400326c	    0x41898424bc00	             mov dword [r12 + 0xbc], eax	      1556	syntax.c	FUNCTION_19	IF_11
0x4003274	      0x4d8d6c2410	                   lea r13, [r12 + 0x10]	      1569	syntax.c	FUNCTION_19	IF_11	ELSE_6
0x4003279	          0x83f807	                              cmp eax, 7	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x400327c	            0x7e42	                           jle 0x40032c0	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x400327e	      0xba01000000	                              mov edx, 1	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_7
0x4003283	      0xbe18000000	                           mov esi, 0x18	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_7
0x4003288	          0x4c89ef	                            mov rdi, r13	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_7
0x400328b	      0xe800000000	                          call 0x4003290	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_7
0x4003290	    0x8b3500000000	            mov esi, dword [0x04003296] 	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x4003296	          0x4c89ef	                            mov rdi, r13	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x4003299	      0xe800000000	                          call 0x400329e	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x400329e	            0x85c0	                           test eax, eax	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x40032a0	            0x750e	                           jne 0x40032b0	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x40032a2	    0x41c78424bc00	               mov dword [r12 + 0xbc], 0	      1563	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13
0x40032ae	            0xeb0b	                           jmp 0x40032bb	      1563	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13
0x40032b0	    0x8b0500000000	            mov eax, dword [0x040032b6] 	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x40032b6	      0x4189442410	             mov dword [r12 + 0x10], eax	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x40032bb	      0x4d8b6c2420	            mov r13, qword [r12 + 0x20] 	      1566	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_9
0x40032c0	    0x4183bc24bc00	               cmp dword [r12 + 0xbc], 0	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x40032c9	            0x7e75	                           jle 0x4003340	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x40032cb	      0xbd00000000	                              mov ebp, 0	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x40032d0	          0x4863c5	                         movsxd rax, ebp	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x40032d3	        0x488d1440	                  lea rdx, [rax + rax*2]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x40032d7	      0x498d5cd500	                  lea rbx, [r13 + rdx*8]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x40032dc	        0x488d04c0	                  lea rax, [rax + rax*8]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x40032e0	        0x48c1e004	                              shl rax, 4	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x40032e4	    0x488b15000000	            mov rdx, qword [0x040032eb] 	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x40032eb	          0x8b1402	              mov edx, dword [rdx + rax]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x40032ee	            0x8913	                    mov dword [rbx], edx	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x40032f0	    0x488b15000000	            mov rdx, qword [0x040032f7] 	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x40032f7	      0x488b540268	      mov rdx, qword [rdx + rax + 0x68] 	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x40032fc	          0x895304	                mov dword [rbx + 4], edx	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x40032ff	    0x488b15000000	            mov rdx, qword [0x04003306] 	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x4003306	        0x8b540270	      mov edx, dword [rdx + rax + 0x70] 	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x400330a	          0x895308	                mov dword [rbx + 8], edx	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x400330d	    0x488b15000000	            mov rdx, qword [0x04003314] 	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x4003314	        0x8b540274	      mov edx, dword [rdx + rax + 0x74] 	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x4003318	          0x89530c	              mov dword [rbx + 0xc], edx	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x400331b	    0x488b15000000	            mov rdx, qword [0x04003322] 	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x4003322	    0x488bbc028800	      mov rdi, qword [rdx + rax + 0x88] 	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x400332a	      0xe800000000	                          call 0x400332f	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x400332f	        0x48894310	             mov qword [rbx + 0x10], rax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x4003333	          0x83c501	                              add ebp, 1	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4003336	    0x4139ac24bc00	            cmp dword [r12 + 0xbc], ebp 	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x400333e	            0x7f90	                            jg 0x40032d0	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4003340	    0x8b0500000000	            mov eax, dword [0x04003346] 	      1580	syntax.c	FUNCTION_19	IF_11
0x4003346	    0x41898424b800	             mov dword [r12 + 0xb8], eax	      1580	syntax.c	FUNCTION_19	IF_11
0x400334e	    0x488b05000000	            mov rax, qword [0x04003355] 	      1581	syntax.c	FUNCTION_19	IF_11
0x4003355	    0x49898424c000	             mov qword [r12 + 0xc0], rax	      1581	syntax.c	FUNCTION_19	IF_11
0x400335d	     0xfb705000000	           movzx eax, word [0x04003364] 	      1582	syntax.c	FUNCTION_19	IF_11
0x4003364	    0x6641898424c8	               mov word [r12 + 0xc8], ax	      1582	syntax.c	FUNCTION_19	IF_11
0x400336d	    0x49c78424d000	               mov qword [r12 + 0xd0], 0	      1583	syntax.c	FUNCTION_19	IF_11
0x4003379	            0xeb15	                           jmp 0x4003390	      1583	syntax.c	FUNCTION_19	IF_11
0x400337b	          0x4889d0	                            mov rax, rdx	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x400337e	        0x488b5500	                    mov rdx, qword [rbp]	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4003382	          0x488910	                    mov qword [rax], rdx	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4003385	      0xe900feffff	                           jmp 0x400318a	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x400338a	    0x41bc00000000	                             mov r12d, 0	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4003390	    0xc70500000000	               mov dword [0x0400339a], 1	      1585	syntax.c	FUNCTION_19
0x400339a	          0x4c89e0	                            mov rax, r12	      1587	syntax.c	FUNCTION_19
0x400339d	        0x4883c408	                              add rsp, 8	      1587	syntax.c	FUNCTION_19
0x40033a1	              0x5b	                                 pop rbx	      1587	syntax.c	FUNCTION_19
0x40033a2	              0x5d	                                 pop rbp	      1587	syntax.c	FUNCTION_19
0x40033a3	            0x415c	                                 pop r12	      1587	syntax.c	FUNCTION_19
0x40033a5	            0x415d	                                 pop r13	      1587	syntax.c	FUNCTION_19
0x40033a7	              0xc3	                                     ret	      1587	syntax.c	FUNCTION_19
syn_add_start_off	IF,5:CALL,5:FOR,0:ELSE,2:SWITCH,0:WHILE,2:DO,0:functions,0	91
0x4000ae7	            0x4155	                                push r13	      3256	syntax.c	FUNCTION_41
0x4000ae9	            0x4154	                                push r12	      3256	syntax.c	FUNCTION_41
0x4000aeb	              0x55	                                push rbp	      3256	syntax.c	FUNCTION_41
0x4000aec	              0x53	                                push rbx	      3256	syntax.c	FUNCTION_41
0x4000aed	        0x4883ec08	                              sub rsp, 8	      3256	syntax.c	FUNCTION_41
0x4000af1	          0x4989fc	                            mov r12, rdi	      3256	syntax.c	FUNCTION_41
0x4000af4	         0xfbf7a04	               movsx edi, word [rdx + 4]	      3262	syntax.c	FUNCTION_41	IF_1
0x4000af8	          0x8d4107	                      lea eax, [rcx + 7]	      3262	syntax.c	FUNCTION_41	IF_1
0x4000afb	           0xfa3c7	                             bt edi, eax	      3262	syntax.c	FUNCTION_41	IF_1
0x4000afe	            0x731e	                           jae 0x4000b1e	      3262	syntax.c	FUNCTION_41	IF_1
0x4000b00	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      3264	syntax.c	FUNCTION_41	IF_1
0x4000b07	        0x49890424	                    mov qword [r12], rax	      3264	syntax.c	FUNCTION_41	IF_1
0x4000b0b	    0x8b9eb0000000	            mov ebx, dword [rsi + 0xb0] 	      3265	syntax.c	FUNCTION_41	IF_1
0x4000b11	          0x4863c9	                         movsxd rcx, ecx	      3266	syntax.c	FUNCTION_41	IF_1
0x4000b14	      0x4403448a08	        add r8d, dword [rdx + rcx*4 + 8]	      3266	syntax.c	FUNCTION_41	IF_1
0x4000b19	          0x4489c5	                            mov ebp, r8d	      3266	syntax.c	FUNCTION_41	IF_1
0x4000b1c	            0xeb12	                           jmp 0x4000b30	      3266	syntax.c	FUNCTION_41	IF_1
0x4000b1e	        0x488b4608	                mov rax, qword [rsi + 8]	      3270	syntax.c	FUNCTION_41	ELSE_1
0x4000b22	        0x49890424	                    mov qword [r12], rax	      3270	syntax.c	FUNCTION_41	ELSE_1
0x4000b26	          0x8b5e10	            mov ebx, dword [rsi + 0x10] 	      3271	syntax.c	FUNCTION_41	ELSE_1
0x4000b29	          0x4863c9	                         movsxd rcx, ecx	      3272	syntax.c	FUNCTION_41	ELSE_1
0x4000b2c	        0x8b6c8a08	       mov ebp, dword [rdx + rcx*4 + 8] 	      3272	syntax.c	FUNCTION_41	ELSE_1
0x4000b30	    0x488b3d000000	            mov rdi, qword [0x04000b37] 	      3274	syntax.c	FUNCTION_41	IF_2
0x4000b37	          0x488b37	                    mov rsi, qword [rdi]	      3274	syntax.c	FUNCTION_41	IF_2
0x4000b3a	        0x49393424	                    cmp qword [r12], rsi	      3274	syntax.c	FUNCTION_41	IF_2
0x4000b3e	            0x7e25	                           jle 0x4000b65	      3274	syntax.c	FUNCTION_41	IF_2
0x4000b40	        0x49893424	                    mov qword [r12], rsi	      3277	syntax.c	FUNCTION_41	IF_2
0x4000b44	      0xba00000000	                              mov edx, 0	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4000b49	      0xe800000000	                          call 0x4000b4e	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4000b4e	          0x4889c7	                            mov rdi, rax	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4000b51	      0xb800000000	                              mov eax, 0	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4000b56	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4000b5d	            0xf2ae	              repne scasb al, byte [rdi]	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4000b5f	          0x48f7d1	                                 not rcx	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4000b62	          0x8d59ff	                      lea ebx, [rcx - 1]	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4000b65	            0x85ed	                           test ebp, ebp	      3280	syntax.c	FUNCTION_41	IF_3
0x4000b67	     0xf8499000000	                            je 0x4000c06	      3280	syntax.c	FUNCTION_41	IF_3
0x4000b6d	      0xba00000000	                              mov edx, 0	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x4000b72	        0x498b3424	                    mov rsi, qword [r12]	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x4000b76	    0x488b3d000000	            mov rdi, qword [0x04000b7d] 	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x4000b7d	      0xe800000000	                          call 0x4000b82	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x4000b82	          0x4989c5	                            mov r13, rax	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x4000b85	          0x4863db	                         movsxd rbx, ebx	      3283	syntax.c	FUNCTION_41	IF_3
0x4000b88	          0x4801c3	                            add rbx, rax	      3283	syntax.c	FUNCTION_41	IF_3
0x4000b8b	            0x85ed	                           test ebp, ebp	      3284	syntax.c	FUNCTION_41	IF_3	IF_4
0x4000b8d	            0x7e33	                           jle 0x4000bc2	      3284	syntax.c	FUNCTION_41	IF_3	IF_4
0x4000b8f	          0x83ed01	                              sub ebp, 1	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x4000b92	          0x803b00	                       cmp byte [rbx], 0	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x4000b95	            0x746c	                            je 0x4000c03	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x4000b97	      0xb801000000	                              mov eax, 1	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x4000b9c	    0x833d00000000	               cmp dword [0x04000ba3], 0	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x4000ba3	            0x7409	                            je 0x4000bae	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x4000ba5	          0x4889df	                            mov rdi, rbx	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x4000ba8	    0xff1500000000	                 call qword [0x04000bae]	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x4000bae	            0x4898	                                    cdqe	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x4000bb0	          0x4801c3	                            add rbx, rax	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x4000bb3	          0x83ed01	                              sub ebp, 1	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x4000bb6	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x4000bb9	            0x7448	                            je 0x4000c03	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x4000bbb	          0x803b00	                       cmp byte [rbx], 0	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x4000bbe	            0x75d7	                           jne 0x4000b97	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x4000bc0	            0xeb41	                           jmp 0x4000c03	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x4000bc2	            0x85ed	                           test ebp, ebp	      3289	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5
0x4000bc4	            0x793d	                           jns 0x4000c03	      3289	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5
0x4000bc6	          0x83c501	                              add ebp, 1	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4000bc9	          0x4839d8	                            cmp rax, rbx	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4000bcc	            0x7335	                           jae 0x4000c03	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4000bce	      0xb801000000	                              mov eax, 1	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4000bd3	    0x833d00000000	               cmp dword [0x04000bda], 0	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4000bda	            0x7410	                            je 0x4000bec	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4000bdc	        0x488d73ff	                      lea rsi, [rbx - 1]	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4000be0	          0x4c89ef	                            mov rdi, r13	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4000be3	    0xff1500000000	                 call qword [0x04000be9]	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4000be9	          0x83c001	                              add eax, 1	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4000bec	            0x4898	                                    cdqe	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4000bee	          0x4829c3	                            sub rbx, rax	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4000bf1	          0x4939dd	                            cmp r13, rbx	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4000bf4	           0xf92c2	                                 setb dl	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4000bf7	            0x85ed	                           test ebp, ebp	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4000bf9	           0xf95c0	                                setne al	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4000bfc	          0x83c501	                              add ebp, 1	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4000bff	            0x84c2	                             test dl, al	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4000c01	            0x75cb	                           jne 0x4000bce	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4000c03	          0x4429eb	                           sub ebx, r13d	      3294	syntax.c	FUNCTION_41	IF_3
0x4000c06	      0x41895c2408	                mov dword [r12 + 8], ebx	      3296	syntax.c	FUNCTION_41
0x4000c0b	        0x4883c408	                              add rsp, 8	      3297	syntax.c	FUNCTION_41
0x4000c0f	              0x5b	                                 pop rbx	      3297	syntax.c	FUNCTION_41
0x4000c10	              0x5d	                                 pop rbp	      3297	syntax.c	FUNCTION_41
0x4000c11	            0x415c	                                 pop r12	      3297	syntax.c	FUNCTION_41
0x4000c13	            0x415d	                                 pop r13	      3297	syntax.c	FUNCTION_41
0x4000c15	              0xc3	                                     ret	      3297	syntax.c	FUNCTION_41
get_syn_pattern	IF,14:CALL,15:FOR,1:ELSE,2:SWITCH,1:WHILE,0:DO,1:functions,0	187
0x400174e	            0x4157	                                push r15	      5739	syntax.c	FUNCTION_90
0x4001750	            0x4156	                                push r14	      5739	syntax.c	FUNCTION_90
0x4001752	            0x4155	                                push r13	      5739	syntax.c	FUNCTION_90
0x4001754	            0x4154	                                push r12	      5739	syntax.c	FUNCTION_90
0x4001756	              0x55	                                push rbp	      5739	syntax.c	FUNCTION_90
0x4001757	              0x53	                                push rbx	      5739	syntax.c	FUNCTION_90
0x4001758	        0x4883ec18	                           sub rsp, 0x18	      5739	syntax.c	FUNCTION_90
0x400175c	    0x64488b042528	                mov rax, qword fs:[0x28]	      5739	syntax.c	FUNCTION_90
0x4001765	      0x4889442408	                mov qword [rsp + 8], rax	      5739	syntax.c	FUNCTION_90
0x400176a	            0x31c0	                            xor eax, eax	      5739	syntax.c	FUNCTION_90
0x400176c	          0x4885ff	                           test rdi, rdi	      5746	syntax.c	FUNCTION_90	IF_1
0x400176f	     0xf8461020000	                            je 0x40019d6	      5746	syntax.c	FUNCTION_90	IF_1
0x4001775	          0x4989ff	                            mov r15, rdi	      5746	syntax.c	FUNCTION_90	IF_1
0x4001778	          0x4989f6	                            mov r14, rsi	      5746	syntax.c	FUNCTION_90	IF_1
0x400177b	           0xfb617	                   movzx edx, byte [rdi]	      5746	syntax.c	FUNCTION_90	IF_1
0x400177e	            0x84d2	                             test dl, dl	      5746	syntax.c	FUNCTION_90	IF_1
0x4001780	     0xf8457020000	                            je 0x40019dd	      5746	syntax.c	FUNCTION_90	IF_1
0x4001786	        0x807f0100	                   cmp byte [rdi + 1], 0	      5746	syntax.c	FUNCTION_90	IF_1
0x400178a	     0xf8454020000	                            je 0x40019e4	      5746	syntax.c	FUNCTION_90	IF_1
0x4001790	        0x807f0200	                   cmp byte [rdi + 2], 0	      5746	syntax.c	FUNCTION_90	IF_1
0x4001794	     0xf8456020000	                            je 0x40019f0	      5746	syntax.c	FUNCTION_90	IF_1
0x400179a	        0x488d5f01	                      lea rbx, [rdi + 1]	      5749	syntax.c	FUNCTION_90	CALL_1
0x400179e	           0xfb6f2	                           movzx esi, dl	      5749	syntax.c	FUNCTION_90	CALL_1
0x40017a1	      0xb900000000	                              mov ecx, 0	      5749	syntax.c	FUNCTION_90	CALL_1
0x40017a6	      0xba01000000	                              mov edx, 1	      5749	syntax.c	FUNCTION_90	CALL_1
0x40017ab	          0x4889df	                            mov rdi, rbx	      5749	syntax.c	FUNCTION_90	CALL_1
0x40017ae	      0xe800000000	                          call 0x40017b3	      5749	syntax.c	FUNCTION_90	CALL_1
0x40017b3	        0x48890424	                    mov qword [rsp], rax	      5749	syntax.c	FUNCTION_90	CALL_1
0x40017b7	        0x410fb60f	                   movzx ecx, byte [r15]	      5750	syntax.c	FUNCTION_90	IF_2
0x40017bb	            0x3808	                      cmp byte [rax], cl	      5750	syntax.c	FUNCTION_90	IF_2
0x40017bd	            0x7429	                            je 0x40017e8	      5750	syntax.c	FUNCTION_90	IF_2
0x40017bf	      0xba05000000	                              mov edx, 5	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x40017c4	      0xbe00000000	                              mov esi, 0	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x40017c9	      0xbf00000000	                              mov edi, 0	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x40017ce	      0xe800000000	                          call 0x40017d3	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x40017d3	          0x4c89fe	                            mov rsi, r15	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x40017d6	          0x4889c7	                            mov rdi, rax	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x40017d9	      0xe800000000	                          call 0x40017de	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x40017de	      0xb800000000	                              mov eax, 0	      5753	syntax.c	FUNCTION_90	IF_2
0x40017e3	      0xe908020000	                           jmp 0x40019f0	      5753	syntax.c	FUNCTION_90	IF_2
0x40017e8	          0x4c29f8	                            sub rax, r15	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x40017eb	          0x8d70ff	                      lea esi, [rax - 1]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x40017ee	          0x4889df	                            mov rdi, rbx	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x40017f1	      0xe800000000	                          call 0x40017f6	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x40017f6	        0x49894660	             mov qword [r14 + 0x60], rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x40017fa	          0x4885c0	                           test rax, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x40017fd	     0xf84ed010000	                            je 0x40019f0	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4001803	    0x488b1d000000	            mov rbx, qword [0x0400180a] 	      5760	syntax.c	FUNCTION_90
0x400180a	    0x48c705000000	               mov qword [0x04001815], 0	      5761	syntax.c	FUNCTION_90
0x4001815	      0xbe01000000	                              mov esi, 1	      5762	syntax.c	FUNCTION_90	CALL_5
0x400181a	          0x4889c7	                            mov rdi, rax	      5762	syntax.c	FUNCTION_90	CALL_5
0x400181d	      0xe800000000	                          call 0x4001822	      5762	syntax.c	FUNCTION_90	CALL_5
0x4001822	        0x49894668	             mov qword [r14 + 0x68], rax	      5762	syntax.c	FUNCTION_90	CALL_5
0x4001826	    0x48891d000000	            mov qword [0x0400182d], rbx 	      5763	syntax.c	FUNCTION_90
0x400182d	          0x4885c0	                           test rax, rax	      5765	syntax.c	FUNCTION_90	IF_4
0x4001830	     0xf84b5010000	                            je 0x40019eb	      5765	syntax.c	FUNCTION_90	IF_4
0x4001836	    0x488b05000000	            mov rax, qword [0x0400183d] 	      5767	syntax.c	FUNCTION_90
0x400183d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5767	syntax.c	FUNCTION_90
0x4001841	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      5767	syntax.c	FUNCTION_90
0x4001847	        0x4189462c	             mov dword [r14 + 0x2c], eax	      5767	syntax.c	FUNCTION_90
0x400184b	        0x498d7e70	                   lea rdi, [r14 + 0x70]	      6691	syntax.c	FUNCTION_108	CALL_1
0x400184f	      0xe800000000	                          call 0x4001854	      6691	syntax.c	FUNCTION_108	CALL_1
0x4001854	    0x498dbe800000	                   lea rdi, [r14 + 0x80]	      6692	syntax.c	FUNCTION_108	CALL_2
0x400185b	      0xe800000000	                          call 0x4001860	      6692	syntax.c	FUNCTION_108	CALL_2
0x4001860	    0x49c786900000	               mov qword [r14 + 0x90], 0	      6693	syntax.c	FUNCTION_108
0x400186b	    0x49c786980000	               mov qword [r14 + 0x98], 0	      6694	syntax.c	FUNCTION_108
0x4001876	      0x4883042401	                      add qword [rsp], 1	      5775	syntax.c	FUNCTION_90
0x400187b	        0x4c8b2424	                    mov r12, qword [rsp]	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400187f	      0xbd00000000	                              mov ebp, 0	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4001884	      0xbb06000000	                              mov ebx, 6	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4001889	        0x448d6b01	                     lea r13d, [rbx + 1]	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x400188d	      0xba03000000	                              mov edx, 3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4001892	        0x488b7500	                    mov rsi, qword [rbp]	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4001896	          0x4c89e7	                            mov rdi, r12	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4001899	      0xe800000000	                          call 0x400189e	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400189e	            0x85c0	                           test eax, eax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40018a0	            0x7411	                            je 0x40018b3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40018a2	          0x83eb01	                              sub ebx, 1	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x40018a5	        0x4883ed08	                              sub rbp, 8	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x40018a9	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x40018ac	            0x75db	                           jne 0x4001889	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x40018ae	      0xe9d3000000	                           jmp 0x4001986	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x40018b3	          0x83fb06	                              cmp ebx, 6	      5784	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7
0x40018b6	     0xf8446010000	                            je 0x4001a02	      5784	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7
0x40018bc	    0x410fb6442403	               movzx eax, byte [r12 + 3]	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x40018c2	            0x3c65	                            cmp al, 0x65	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x40018c4	            0x740e	                            je 0x40018d4	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x40018c6	            0x3c73	                            cmp al, 0x73	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x40018c8	            0x7410	                            je 0x40018da	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x40018ca	            0x3c62	                            cmp al, 0x62	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x40018cc	     0xf85b4000000	                           jne 0x4001986	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x40018d2	            0xeb06	                           jmp 0x40018da	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x40018d4	        0x418d4d06	                      lea ecx, [r13 + 6]	      5789	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x40018d8	            0xeb02	                           jmp 0x40018dc	      5789	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x40018da	            0x89d9	                            mov ecx, ebx	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x40018dc	            0x85c9	                           test ecx, ecx	      5792	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x40018de	     0xf88a2000000	                            js 0x4001986	      5792	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x40018e4	      0xb801000000	                              mov eax, 1	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x40018e9	            0xd3e0	                             shl eax, cl	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x40018eb	      0x6641094604	                   or word [r14 + 4], ax	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x40018f0	          0x83f906	                              cmp ecx, 6	      5795	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x40018f3	            0x7530	                           jne 0x4001925	      5795	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x40018f5	        0x4983c403	                              add r12, 3	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x40018f9	        0x4c892424	                    mov qword [rsp], r12	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x40018fd	          0x4889e7	                            mov rdi, rsp	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x4001900	      0xe800000000	                          call 0x4001905	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x4001905	          0x4863db	                         movsxd rbx, ebx	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x4001908	      0x4189449e08	        mov dword [r14 + rbx*4 + 8], eax	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x400190d	      0x410fb75604	               movzx edx, word [r14 + 4]	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4001912	          0xf6c201	                              test dl, 1	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4001915	            0x7559	                           jne 0x4001970	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4001917	          0x83ca01	                               or edx, 1	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400191a	      0x6641895604	                  mov word [r14 + 4], dx	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400191f	        0x41894608	                mov dword [r14 + 8], eax	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4001923	            0xeb4b	                           jmp 0x4001970	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4001925	      0x498d442404	                      lea rax, [r12 + 4]	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0x400192a	        0x48890424	                    mov qword [rsp], rax	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0x400192e	    0x410fb6442404	               movzx eax, byte [r12 + 4]	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x4001934	            0x3c2b	                            cmp al, 0x2b	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x4001936	            0x751a	                           jne 0x4001952	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x4001938	        0x4983c405	                              add r12, 5	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x400193c	        0x4c892424	                    mov qword [rsp], r12	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x4001940	          0x4889e7	                            mov rdi, rsp	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x4001943	      0xe800000000	                          call 0x4001948	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x4001948	          0x4863db	                         movsxd rbx, ebx	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x400194b	      0x4189449e08	        mov dword [r14 + rbx*4 + 8], eax	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x4001950	            0xeb1e	                           jmp 0x4001970	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x4001952	            0x3c2d	                            cmp al, 0x2d	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x4001954	            0x751a	                           jne 0x4001970	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x4001956	        0x4983c405	                              add r12, 5	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x400195a	        0x4c892424	                    mov qword [rsp], r12	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x400195e	          0x4889e7	                            mov rdi, rsp	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4001961	      0xe800000000	                          call 0x4001966	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4001966	          0x4863db	                         movsxd rbx, ebx	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4001969	            0xf7d8	                                 neg eax	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x400196b	      0x4189449e08	        mov dword [r14 + rbx*4 + 8], eax	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4001970	        0x488b0424	                    mov rax, qword [rsp]	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x4001974	          0x80382c	                    cmp byte [rax], 0x2c	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x4001977	            0x750d	                           jne 0x4001986	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x4001979	        0x4883c001	                              add rax, 1	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400197d	        0x48890424	                    mov qword [rsp], rax	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4001981	      0xe9f5feffff	                           jmp 0x400187b	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4001986	        0x488b0424	                    mov rax, qword [rsp]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400198a	           0xfb638	                   movzx edi, byte [rax]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400198d	      0xe800000000	                          call 0x4001992	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4001992	            0x85c0	                           test eax, eax	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4001994	            0x7535	                           jne 0x40019cb	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4001996	        0x488b0424	                    mov rax, qword [rsp]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400199a	           0xfb600	                   movzx eax, byte [rax]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400199d	            0x3c20	                            cmp al, 0x20	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400199f	            0x742a	                            je 0x40019cb	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x40019a1	            0x3c09	                               cmp al, 9	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x40019a3	            0x7426	                            je 0x40019cb	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x40019a5	      0xba05000000	                              mov edx, 5	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x40019aa	      0xbe00000000	                              mov esi, 0	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x40019af	      0xbf00000000	                              mov edi, 0	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x40019b4	      0xe800000000	                          call 0x40019b9	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x40019b9	          0x4c89fe	                            mov rsi, r15	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x40019bc	          0x4889c7	                            mov rdi, rax	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x40019bf	      0xe800000000	                          call 0x40019c4	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x40019c4	      0xb800000000	                              mov eax, 0	      5831	syntax.c	FUNCTION_90	IF_14
0x40019c9	            0xeb25	                           jmp 0x40019f0	      5831	syntax.c	FUNCTION_90	IF_14
0x40019cb	        0x488b3c24	                    mov rdi, qword [rsp]	      5833	syntax.c	FUNCTION_90	CALL_15
0x40019cf	      0xe800000000	                          call 0x40019d4	      5833	syntax.c	FUNCTION_90	CALL_15
0x40019d4	            0xeb1a	                           jmp 0x40019f0	      5833	syntax.c	FUNCTION_90	CALL_15
0x40019d6	      0xb800000000	                              mov eax, 0	      5747	syntax.c	FUNCTION_90	IF_1
0x40019db	            0xeb13	                           jmp 0x40019f0	      5747	syntax.c	FUNCTION_90	IF_1
0x40019dd	      0xb800000000	                              mov eax, 0	      5747	syntax.c	FUNCTION_90	IF_1
0x40019e2	            0xeb0c	                           jmp 0x40019f0	      5747	syntax.c	FUNCTION_90	IF_1
0x40019e4	      0xb800000000	                              mov eax, 0	      5747	syntax.c	FUNCTION_90	IF_1
0x40019e9	            0xeb05	                           jmp 0x40019f0	      5747	syntax.c	FUNCTION_90	IF_1
0x40019eb	      0xb800000000	                              mov eax, 0	      5766	syntax.c	FUNCTION_90	IF_4
0x40019f0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5834	syntax.c	FUNCTION_90
0x40019f5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5834	syntax.c	FUNCTION_90
0x40019fe	            0x7412	                            je 0x4001a12	      5834	syntax.c	FUNCTION_90
0x4001a00	            0xeb0b	                           jmp 0x4001a0d	      5834	syntax.c	FUNCTION_90
0x4001a02	    0x6641834e0440	                 or word [r14 + 4], 0x40	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4001a08	      0xe9e8feffff	                           jmp 0x40018f5	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4001a0d	      0xe800000000	                          call 0x4001a12	      5834	syntax.c	FUNCTION_90
0x4001a12	        0x4883c418	                           add rsp, 0x18	      5834	syntax.c	FUNCTION_90
0x4001a16	              0x5b	                                 pop rbx	      5834	syntax.c	FUNCTION_90
0x4001a17	              0x5d	                                 pop rbp	      5834	syntax.c	FUNCTION_90
0x4001a18	            0x415c	                                 pop r12	      5834	syntax.c	FUNCTION_90
0x4001a1a	            0x415d	                                 pop r13	      5834	syntax.c	FUNCTION_90
0x4001a1c	            0x415e	                                 pop r14	      5834	syntax.c	FUNCTION_90
0x4001a1e	            0x415f	                                 pop r15	      5834	syntax.c	FUNCTION_90
0x4001a20	              0xc3	                                     ret	      5834	syntax.c	FUNCTION_90
syn_cmd_include	IF,9:CALL,15:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	133
0x4002ae6	            0x4155	                                push r13	      4819	syntax.c	FUNCTION_78
0x4002ae8	            0x4154	                                push r12	      4819	syntax.c	FUNCTION_78
0x4002aea	              0x55	                                push rbp	      4819	syntax.c	FUNCTION_78
0x4002aeb	              0x53	                                push rbx	      4819	syntax.c	FUNCTION_78
0x4002aec	        0x4883ec28	                           sub rsp, 0x28	      4819	syntax.c	FUNCTION_78
0x4002af0	          0x4889fb	                            mov rbx, rdi	      4819	syntax.c	FUNCTION_78
0x4002af3	    0x64488b042528	                mov rax, qword fs:[0x28]	      4819	syntax.c	FUNCTION_78
0x4002afc	      0x4889442418	             mov qword [rsp + 0x18], rax	      4819	syntax.c	FUNCTION_78
0x4002b01	            0x31c0	                            xor eax, eax	      4819	syntax.c	FUNCTION_78
0x4002b03	          0x488b2f	                    mov rbp, qword [rdi]	      4820	syntax.c	FUNCTION_78
0x4002b06	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4824	syntax.c	FUNCTION_78
0x4002b0f	          0x4889ef	                            mov rdi, rbp	      4829	syntax.c	FUNCTION_78	CALL_1
0x4002b12	      0xe800000000	                          call 0x4002b17	      4829	syntax.c	FUNCTION_78	CALL_1
0x4002b17	        0x48894308	                mov qword [rbx + 8], rax	      4829	syntax.c	FUNCTION_78	CALL_1
0x4002b1b	        0x837b3000	               cmp dword [rbx + 0x30], 0	      4830	syntax.c	FUNCTION_78	IF_1
0x4002b1f	     0xf85d7010000	                           jne 0x4002cfc	      4830	syntax.c	FUNCTION_78	IF_1
0x4002b25	    0x41bc01000000	                             mov r12d, 1	      4821	syntax.c	FUNCTION_78
0x4002b2b	        0x807d0040	                    cmp byte [rbp], 0x40	      4833	syntax.c	FUNCTION_78	IF_2
0x4002b2f	            0x7558	                           jne 0x4002b89	      4833	syntax.c	FUNCTION_78	IF_2
0x4002b31	        0x4883c501	                              add rbp, 1	      4835	syntax.c	FUNCTION_78	IF_2
0x4002b35	      0x488d742408	                      lea rsi, [rsp + 8]	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4002b3a	          0x4889ef	                            mov rdi, rbp	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4002b3d	      0xe8c6ebffff	                 call sym.get_group_name	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4002b42	          0x4989c5	                            mov r13, rax	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4002b45	          0x4885c0	                           test rax, rax	      4837	syntax.c	FUNCTION_78	IF_2	IF_3
0x4002b48	            0x7521	                           jne 0x4002b6b	      4837	syntax.c	FUNCTION_78	IF_2	IF_3
0x4002b4a	      0xba05000000	                              mov edx, 5	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4002b4f	      0xbe00000000	                              mov esi, 0	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4002b54	      0xbf00000000	                              mov edi, 0	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4002b59	      0xe800000000	                          call 0x4002b5e	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4002b5e	          0x4889c7	                            mov rdi, rax	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4002b61	      0xe800000000	                          call 0x4002b66	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4002b66	      0xe991010000	                           jmp 0x4002cfc	      4840	syntax.c	FUNCTION_78	IF_2	IF_3
0x4002b6b	      0x488b742408	                mov rsi, qword [rsp + 8]	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4002b70	          0x4829ee	                            sub rsi, rbp	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4002b73	          0x4889ef	                            mov rdi, rbp	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4002b76	      0xe8a6f3ffff	              call sym.syn_check_cluster	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4002b7b	          0x4189c4	                           mov r12d, eax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4002b7e	            0x85c0	                           test eax, eax	      4843	syntax.c	FUNCTION_78	IF_2	IF_4
0x4002b80	     0xf8476010000	                            je 0x4002cfc	      4843	syntax.c	FUNCTION_78	IF_2	IF_4
0x4002b86	          0x4c892b	                    mov qword [rbx], r13	      4846	syntax.c	FUNCTION_78	IF_2
0x4002b89	      0x48834b2818	             or qword [rbx + 0x28], 0x18	      4853	syntax.c	FUNCTION_78
0x4002b8e	          0x4889df	                            mov rdi, rbx	      4854	syntax.c	FUNCTION_78	CALL_6
0x4002b91	      0xe800000000	                          call 0x4002b96	      4854	syntax.c	FUNCTION_78	CALL_6
0x4002b96	          0x488b3b	                    mov rdi, qword [rbx]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002b99	           0xfb607	                   movzx eax, byte [rdi]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002b9c	            0x3c3c	                            cmp al, 0x3c	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002b9e	            0x7411	                            je 0x4002bb1	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002ba0	            0x3c24	                            cmp al, 0x24	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002ba2	            0x740d	                            je 0x4002bb1	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002ba4	      0xe800000000	                          call 0x4002ba9	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002ba9	            0x85c0	                           test eax, eax	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002bab	     0xf8439010000	                            je 0x4002cea	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002bb1	      0x488d542410	                   lea rdx, [rsp + 0x10]	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4002bb6	    0x488b35000000	            mov rsi, qword [0x04002bbd] 	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4002bbd	          0x4889df	                            mov rdi, rbx	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4002bc0	      0xe800000000	                          call 0x4002bc5	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4002bc5	            0x85c0	                           test eax, eax	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4002bc7	     0xf85c6000000	                           jne 0x4002c93	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4002bcd	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x4002bd2	          0x4885ff	                           test rdi, rdi	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x4002bd5	     0xf8421010000	                            je 0x4002cfc	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x4002bdb	      0xe800000000	                          call 0x4002be0	      4864	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_9
0x4002be0	      0xe917010000	                           jmp 0x4002cfc	      4864	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_9
0x4002be5	      0xba05000000	                              mov edx, 5	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002bea	      0xbe00000000	                              mov esi, 0	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002bef	      0xbf00000000	                              mov edi, 0	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002bf4	      0xe800000000	                          call 0x4002bf9	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002bf9	          0x4889c7	                            mov rdi, rax	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002bfc	      0xe800000000	                          call 0x4002c01	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002c01	      0xe9f6000000	                           jmp 0x4002cfc	      4876	syntax.c	FUNCTION_78	IF_8
0x4002c06	            0x84c0	                             test al, al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002c08	            0x7422	                            je 0x4002c2c	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002c0a	          0x488b1b	                    mov rbx, qword [rbx]	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002c0d	      0xba05000000	                              mov edx, 5	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002c12	      0xbe00000000	                              mov esi, 0	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002c17	      0xbf00000000	                              mov edi, 0	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002c1c	      0xe800000000	                          call 0x4002c21	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002c21	          0x4889de	                            mov rsi, rbx	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002c24	          0x4889c7	                            mov rdi, rax	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002c27	      0xe800000000	                          call 0x4002c2c	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002c2c	    0x488b05000000	            mov rax, qword [0x04002c33] 	      4885	syntax.c	FUNCTION_78
0x4002c33	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4885	syntax.c	FUNCTION_78
0x4002c37	    0x4489a8040300	           mov dword [rax + 0x304], r13d	      4885	syntax.c	FUNCTION_78
0x4002c3e	    0x892d00000000	            mov dword [0x04002c44], ebp 	      4886	syntax.c	FUNCTION_78
0x4002c44	      0xe9b3000000	                           jmp 0x4002cfc	      4886	syntax.c	FUNCTION_78
0x4002c49	    0x8b2d00000000	            mov ebp, dword [0x04002c4f] 	      4878	syntax.c	FUNCTION_78
0x4002c4f	          0x83c001	                              add eax, 1	      4879	syntax.c	FUNCTION_78
0x4002c52	    0x890500000000	            mov dword [0x04002c58], eax 	      4879	syntax.c	FUNCTION_78
0x4002c58	    0x890500000000	            mov dword [0x04002c5e], eax 	      4879	syntax.c	FUNCTION_78
0x4002c5e	    0x488b05000000	            mov rax, qword [0x04002c65] 	      4880	syntax.c	FUNCTION_78
0x4002c65	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4880	syntax.c	FUNCTION_78
0x4002c69	    0x448ba8040300	          mov r13d, dword [rax + 0x304] 	      4880	syntax.c	FUNCTION_78
0x4002c70	    0x4489a0040300	           mov dword [rax + 0x304], r12d	      4881	syntax.c	FUNCTION_78
0x4002c77	      0xba00000000	                              mov edx, 0	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002c7c	      0xbe00000000	                              mov esi, 0	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002c81	          0x488b3b	                    mov rdi, qword [rbx]	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002c84	      0xe800000000	                          call 0x4002c89	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002c89	            0x85c0	                           test eax, eax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002c8b	           0xf94c0	                                 sete al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002c8e	      0xe973ffffff	                           jmp 0x4002c06	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002c93	    0x8b0500000000	            mov eax, dword [0x04002c99] 	      4873	syntax.c	FUNCTION_78	IF_8
0x4002c99	      0x3de6030000	                          cmp eax, 0x3e6	      4873	syntax.c	FUNCTION_78	IF_8
0x4002c9e	            0x7ea9	                           jle 0x4002c49	      4873	syntax.c	FUNCTION_78	IF_8
0x4002ca0	      0xe940ffffff	                           jmp 0x4002be5	      4873	syntax.c	FUNCTION_78	IF_8
0x4002ca5	    0x8b2d00000000	            mov ebp, dword [0x04002cab] 	      4878	syntax.c	FUNCTION_78
0x4002cab	          0x83c001	                              add eax, 1	      4879	syntax.c	FUNCTION_78
0x4002cae	    0x890500000000	            mov dword [0x04002cb4], eax 	      4879	syntax.c	FUNCTION_78
0x4002cb4	    0x890500000000	            mov dword [0x04002cba], eax 	      4879	syntax.c	FUNCTION_78
0x4002cba	    0x488b05000000	            mov rax, qword [0x04002cc1] 	      4880	syntax.c	FUNCTION_78
0x4002cc1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4880	syntax.c	FUNCTION_78
0x4002cc5	    0x448ba8040300	          mov r13d, dword [rax + 0x304] 	      4880	syntax.c	FUNCTION_78
0x4002ccc	    0x4489a0040300	           mov dword [rax + 0x304], r12d	      4881	syntax.c	FUNCTION_78
0x4002cd3	      0xbe01000000	                              mov esi, 1	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x4002cd8	          0x488b3b	                    mov rdi, qword [rbx]	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x4002cdb	      0xe800000000	                          call 0x4002ce0	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x4002ce0	            0x85c0	                           test eax, eax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002ce2	           0xf94c0	                                 sete al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002ce5	      0xe91cffffff	                           jmp 0x4002c06	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002cea	    0x8b0500000000	            mov eax, dword [0x04002cf0] 	      4873	syntax.c	FUNCTION_78	IF_8
0x4002cf0	      0x3de6030000	                          cmp eax, 0x3e6	      4873	syntax.c	FUNCTION_78	IF_8
0x4002cf5	            0x7eae	                           jle 0x4002ca5	      4873	syntax.c	FUNCTION_78	IF_8
0x4002cf7	      0xe9e9feffff	                           jmp 0x4002be5	      4873	syntax.c	FUNCTION_78	IF_8
0x4002cfc	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4887	syntax.c	FUNCTION_78
0x4002d01	    0x644833042528	                xor rax, qword fs:[0x28]	      4887	syntax.c	FUNCTION_78
0x4002d0a	            0x7405	                            je 0x4002d11	      4887	syntax.c	FUNCTION_78
0x4002d0c	      0xe800000000	                          call 0x4002d11	      4887	syntax.c	FUNCTION_78
0x4002d11	        0x4883c428	                           add rsp, 0x28	      4887	syntax.c	FUNCTION_78
0x4002d15	              0x5b	                                 pop rbx	      4887	syntax.c	FUNCTION_78
0x4002d16	              0x5d	                                 pop rbp	      4887	syntax.c	FUNCTION_78
0x4002d17	            0x415c	                                 pop r12	      4887	syntax.c	FUNCTION_78
0x4002d19	            0x415d	                                 pop r13	      4887	syntax.c	FUNCTION_78
0x4002d1b	              0xc3	                                     ret	      4887	syntax.c	FUNCTION_78
syn_current_attr	IF,48:CALL,49:FOR,2:ELSE,10:SWITCH,0:WHILE,0:DO,1:functions,0	785
0x4008398	            0x4157	                                push r15	      1904	syntax.c	FUNCTION_28
0x400839a	            0x4156	                                push r14	      1904	syntax.c	FUNCTION_28
0x400839c	            0x4155	                                push r13	      1904	syntax.c	FUNCTION_28
0x400839e	            0x4154	                                push r12	      1904	syntax.c	FUNCTION_28
0x40083a0	              0x55	                                push rbp	      1904	syntax.c	FUNCTION_28
0x40083a1	              0x53	                                push rbx	      1904	syntax.c	FUNCTION_28
0x40083a2	    0x4881eca80200	                          sub rsp, 0x2a8	      1904	syntax.c	FUNCTION_28
0x40083a9	          0x4189fd	                           mov r13d, edi	      1904	syntax.c	FUNCTION_28
0x40083ac	        0x89742408	                mov dword [rsp + 8], esi	      1904	syntax.c	FUNCTION_28
0x40083b0	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1904	syntax.c	FUNCTION_28
0x40083b5	        0x894c2424	             mov dword [rsp + 0x24], ecx	      1904	syntax.c	FUNCTION_28
0x40083b9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1904	syntax.c	FUNCTION_28
0x40083c2	    0x488984249802	            mov qword [rsp + 0x298], rax	      1904	syntax.c	FUNCTION_28
0x40083ca	            0x31c0	                            xor eax, eax	      1904	syntax.c	FUNCTION_28
0x40083cc	      0xe8f085ffff	                 call sym.syn_getcurline	      1940	syntax.c	FUNCTION_28	CALL_1
0x40083d1	    0x8b1500000000	            mov edx, dword [0x040083d7] 	      1941	syntax.c	FUNCTION_28	IF_1
0x40083d7	          0x4863f2	                         movsxd rsi, edx	      1941	syntax.c	FUNCTION_28	IF_1
0x40083da	         0xfb60c30	             movzx ecx, byte [rax + rsi]	      1941	syntax.c	FUNCTION_28	IF_1
0x40083de	            0x84c9	                             test cl, cl	      1941	syntax.c	FUNCTION_28	IF_1
0x40083e0	            0x7546	                           jne 0x4008428	      1941	syntax.c	FUNCTION_28	IF_1
0x40083e2	            0x85d2	                           test edx, edx	      1941	syntax.c	FUNCTION_28	IF_1
0x40083e4	            0x7442	                            je 0x4008428	      1941	syntax.c	FUNCTION_28	IF_1
0x40083e6	    0x833d00000000	               cmp dword [0x040083ed], 0	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x40083ed	            0x781b	                            js 0x400840a	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x40083ef	    0x8b0500000000	            mov eax, dword [0x040083f5] 	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x40083f5	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x40083fa	            0x740e	                            je 0x400840a	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x40083fc	            0x39c2	                            cmp edx, eax	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x40083fe	            0x7f0a	                            jg 0x400840a	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x4008400	      0xbf00000000	                              mov edi, 0	      1948	syntax.c	FUNCTION_28	IF_1	CALL_2
0x4008405	      0xe85dfbffff	                call sym.push_next_match	      1948	syntax.c	FUNCTION_28	IF_1	CALL_2
0x400840a	    0xc70500000000	               mov dword [0x04008414], 1	      1950	syntax.c	FUNCTION_28	IF_1
0x4008414	    0xc70500000000	               mov dword [0x0400841e], 0	      1951	syntax.c	FUNCTION_28	IF_1
0x400841e	      0xb800000000	                              mov eax, 0	      1952	syntax.c	FUNCTION_28	IF_1
0x4008423	      0xe9a00c0000	                           jmp 0x40090c8	      1952	syntax.c	FUNCTION_28	IF_1
0x4008428	            0x84c9	                             test cl, cl	      1956	syntax.c	FUNCTION_28	IF_3
0x400842a	            0x7407	                            je 0x4008433	      1956	syntax.c	FUNCTION_28	IF_3
0x400842c	      0x807c300100	             cmp byte [rax + rsi + 1], 0	      1956	syntax.c	FUNCTION_28	IF_3
0x4008431	            0x7514	                           jne 0x4008447	      1956	syntax.c	FUNCTION_28	IF_3
0x4008433	    0xc70500000000	               mov dword [0x0400843d], 1	      1958	syntax.c	FUNCTION_28	IF_3
0x400843d	    0xc70500000000	               mov dword [0x04008447], 0	      1959	syntax.c	FUNCTION_28	IF_3
0x4008447	    0x833d00000000	               cmp dword [0x0400844e], 0	      1967	syntax.c	FUNCTION_28	IF_4
0x400844e	            0x7414	                            je 0x4008464	      1967	syntax.c	FUNCTION_28	IF_4
0x4008450	    0xc70500000000	     mov dword [0x0400845a], 0xffffffff 	      1969	syntax.c	FUNCTION_28	IF_4
0x400845a	    0xc70500000000	               mov dword [0x04008464], 0	      1970	syntax.c	FUNCTION_28	IF_4
0x4008464	    0xc74424040000	                  mov dword [rsp + 4], 0	      1975	syntax.c	FUNCTION_28
0x400846c	          0x4585ed	                         test r13d, r13d	      1975	syntax.c	FUNCTION_28
0x400846f	            0x7528	                           jne 0x4008499	      1975	syntax.c	FUNCTION_28
0x4008471	    0x488b05000000	            mov rax, qword [0x04008478] 	      1975	syntax.c	FUNCTION_28
0x4008478	    0xc74424040100	                  mov dword [rsp + 4], 1	      1975	syntax.c	FUNCTION_28
0x4008480	      0x4883780800	                  cmp qword [rax + 8], 0	      1975	syntax.c	FUNCTION_28
0x4008485	            0x7512	                           jne 0x4008499	      1975	syntax.c	FUNCTION_28
0x4008487	    0x4883b8300100	              cmp qword [rax + 0x130], 0	      1975	syntax.c	FUNCTION_28
0x400848f	           0xf95c0	                                setne al	      1975	syntax.c	FUNCTION_28
0x4008492	           0xfb6c0	                           movzx eax, al	      1975	syntax.c	FUNCTION_28
0x4008495	        0x89442404	                mov dword [rsp + 4], eax	      1975	syntax.c	FUNCTION_28
0x4008499	      0xba0a000000	                            mov edx, 0xa	      1980	syntax.c	FUNCTION_28	CALL_3
0x400849e	      0xbe04000000	                              mov esi, 4	      1980	syntax.c	FUNCTION_28	CALL_3
0x40084a3	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1980	syntax.c	FUNCTION_28	CALL_3
0x40084ab	      0xe800000000	                          call 0x40084b0	      1980	syntax.c	FUNCTION_28	CALL_3
0x40084b0	    0x488dbc242002	                  lea rdi, [rsp + 0x220]	      1983	syntax.c	FUNCTION_28	CALL_4
0x40084b8	      0xe86982ffff	                   call sym.save_chartab	      1983	syntax.c	FUNCTION_28	CALL_4
0x40084bd	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1933	syntax.c	FUNCTION_28
0x40084c5	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1926	syntax.c	FUNCTION_28
0x40084ce	    0x8b0500000000	            mov eax, dword [0x040084d4] 	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x40084d4	            0x85c0	                           test eax, eax	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x40084d6	            0x7441	                            je 0x4008519	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x40084d8	            0x4898	                                    cdqe	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x40084da	        0x488d04c0	                  lea rax, [rax + rax*8]	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x40084de	        0x48c1e004	                              shl rax, 4	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x40084e2	    0x488b15000000	            mov rdx, qword [0x040084e9] 	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x40084e9	    0x4c8dbc0270ff	             lea r15, [rdx + rax - 0x90]	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x40084f1	          0x4d85ff	                           test r15, r15	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x40084f4	        0x410f94c4	                               sete r12b	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x40084f8	    0x488b05000000	            mov rax, qword [0x040084ff] 	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x40084ff	    0x83b898020000	              cmp dword [rax + 0x298], 0	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4008506	            0x751d	                           jne 0x4008525	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4008508	          0x4584e4	                         test r12b, r12b	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x400850b	            0x7518	                           jne 0x4008525	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x400850d	      0x49837f7800	               cmp qword [r15 + 0x78], 0	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4008512	            0x7511	                           jne 0x4008525	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4008514	      0xe9c40c0000	                           jmp 0x40091dd	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4008519	    0x41bc01000000	                             mov r12d, 1	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x400851f	    0x41bf00000000	                             mov r15d, 0	      2007	syntax.c	FUNCTION_28	DO_1	ELSE_1
0x4008525	      0x837c240400	                  cmp dword [rsp + 4], 0	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x400852a	     0xf844e030000	                            je 0x400887e	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x4008530	      0xe88c84ffff	                 call sym.syn_getcurline	      2018	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	CALL_6
0x4008535	          0x4889c5	                            mov rbp, rax	      2018	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	CALL_6
0x4008538	    0x48633d000000	         movsxd rdi, dword [0x0400853f] 	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x400853f	          0x4801c7	                            add rdi, rax	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4008542	    0x488b35000000	            mov rsi, qword [0x04008549] 	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4008549	      0xe800000000	                          call 0x400854e	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x400854e	            0x85c0	                           test eax, eax	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4008550	     0xf8428030000	                            je 0x400887e	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4008556	    0x8b1d00000000	            mov ebx, dword [0x0400855c] 	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x400855c	            0x85db	                           test ebx, ebx	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x400855e	            0x7444	                            je 0x40085a4	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4008560	    0x4c8b35000000	            mov r14, qword [0x04008567] 	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4008567	          0x4863db	                         movsxd rbx, ebx	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400856a	      0xb800000000	                              mov eax, 0	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x400856f	    0x833d00000000	               cmp dword [0x04008576], 0	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4008576	            0x7410	                            je 0x4008588	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4008578	      0x488d741dff	                lea rsi, [rbp + rbx - 1]	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x400857d	          0x4889ef	                            mov rdi, rbp	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4008580	    0xff1500000000	                 call qword [0x04008586]	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4008586	            0x4898	                                    cdqe	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4008588	        0x488d7bff	                      lea rdi, [rbx - 1]	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400858c	          0x4829c7	                            sub rdi, rax	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400858f	      0x488d7c3d00	                    lea rdi, [rbp + rdi]	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4008594	          0x4c89f6	                            mov rsi, r14	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4008597	      0xe800000000	                          call 0x400859c	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400859c	            0x85c0	                           test eax, eax	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400859e	     0xf85da020000	                           jne 0x400887e	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x40085a4	    0x8b0500000000	            mov eax, dword [0x040085aa] 	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x40085aa	        0x89442420	             mov dword [rsp + 0x20], eax	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x40085ae	          0x4c63f0	                         movsxd r14, eax	      3390	syntax.c	FUNCTION_44
0x40085b1	          0x4901ee	                            add r14, rbp	      3390	syntax.c	FUNCTION_44
0x40085b4	      0xbb00000000	                              mov ebx, 0	      3391	syntax.c	FUNCTION_44
0x40085b9	    0x833d00000000	               cmp dword [0x040085c0], 0	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x40085c0	            0x7410	                            je 0x40085d2	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x40085c2	          0x4863fb	                         movsxd rdi, ebx	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x40085c5	          0x4c01f7	                            add rdi, r14	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x40085c8	    0xff1500000000	                 call qword [0x040085ce]	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x40085ce	             0x1c3	                            add ebx, eax	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x40085d0	            0xeb03	                           jmp 0x40085d5	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x40085d2	          0x83c301	                              add ebx, 1	      3399	syntax.c	FUNCTION_44	DO_1	ELSE_1
0x40085d5	          0x4863eb	                         movsxd rbp, ebx	      3401	syntax.c	FUNCTION_44	CALL_1
0x40085d8	        0x498d3c2e	                    lea rdi, [r14 + rbp]	      3401	syntax.c	FUNCTION_44	CALL_1
0x40085dc	    0x488b35000000	            mov rsi, qword [0x040085e3] 	      3401	syntax.c	FUNCTION_44	CALL_1
0x40085e3	      0xe800000000	                          call 0x40085e8	      3401	syntax.c	FUNCTION_44	CALL_1
0x40085e8	            0x85c0	                           test eax, eax	      3401	syntax.c	FUNCTION_44	CALL_1
0x40085ea	            0x75cd	                           jne 0x40085b9	      3401	syntax.c	FUNCTION_44	CALL_1
0x40085ec	          0x83fb50	                           cmp ebx, 0x50	      3403	syntax.c	FUNCTION_44	IF_2
0x40085ef	     0xf8f89020000	                            jg 0x400887e	      3403	syntax.c	FUNCTION_44	IF_2
0x40085f5	          0x4889ea	                            mov rdx, rbp	      3410	syntax.c	FUNCTION_44	CALL_2
0x40085f8	          0x4c89f6	                            mov rsi, r14	      3410	syntax.c	FUNCTION_44	CALL_2
0x40085fb	    0x488dbc244002	                  lea rdi, [rsp + 0x240]	      3410	syntax.c	FUNCTION_44	CALL_2
0x4008603	      0xe800000000	                          call 0x4008608	      3410	syntax.c	FUNCTION_44	CALL_2
0x4008608	      0xb801000000	                              mov eax, 1	      3417	syntax.c	FUNCTION_44	FOR_1
0x400860d	      0x4c89742428	             mov qword [rsp + 0x28], r14	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4008612	          0x4189c6	                           mov r14d, eax	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4008615	        0x4183fe01	                             cmp r14d, 1	      3419	syntax.c	FUNCTION_44	FOR_1
0x4008619	            0x7514	                           jne 0x400862f	      3419	syntax.c	FUNCTION_44	FOR_1
0x400861b	    0x488b2d000000	            mov rbp, qword [0x04008622] 	      3419	syntax.c	FUNCTION_44	FOR_1
0x4008622	      0x48837d0800	                  cmp qword [rbp + 8], 0	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4008627	     0xf84c30b0000	                            je 0x40091f0	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x400862d	            0xeb1c	                           jmp 0x400864b	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x400862f	    0x488b05000000	            mov rax, qword [0x04008636] 	      3419	syntax.c	FUNCTION_44	FOR_1
0x4008636	    0x488da8280100	                  lea rbp, [rax + 0x128]	      3419	syntax.c	FUNCTION_44	FOR_1
0x400863d	    0x4883b8300100	              cmp qword [rax + 0x130], 0	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4008645	     0xf84f6000000	                            je 0x4008741	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x400864b	        0x4183fe02	                             cmp r14d, 2	      3422	syntax.c	FUNCTION_44	FOR_1	IF_4
0x400864f	            0x7544	                           jne 0x4008695	      3422	syntax.c	FUNCTION_44	FOR_1	IF_4
0x4008651	      0xb951000000	                           mov ecx, 0x51	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4008656	    0x488d94244002	                  lea rdx, [rsp + 0x240]	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x400865e	            0x89de	                            mov esi, ebx	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4008660	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4008665	      0xe800000000	                          call 0x400866a	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x400866a	    0x488db4244002	                  lea rsi, [rsp + 0x240]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4008672	          0x4889ef	                            mov rdi, rbp	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4008675	      0xe800000000	                          call 0x400867a	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x400867a	        0x488b6808	                mov rbp, qword [rax + 8]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x400867e	    0x4881fd000000	                              cmp rbp, 0	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4008685	     0xf84f3010000	                            je 0x400887e	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x400868b	          0x4885ed	                           test rbp, rbp	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x400868e	            0x752f	                           jne 0x40086bf	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4008690	      0xe9e9010000	                           jmp 0x400887e	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4008695	    0x488db4244002	                  lea rsi, [rsp + 0x240]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x400869d	          0x4889ef	                            mov rdi, rbp	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x40086a0	      0xe800000000	                          call 0x40086a5	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x40086a5	        0x488b6808	                mov rbp, qword [rax + 8]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x40086a9	    0x4881fd000000	                              cmp rbp, 0	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x40086b0	     0xf848b000000	                            je 0x4008741	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x40086b6	          0x4885ed	                           test rbp, rbp	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x40086b9	     0xf8482000000	                            je 0x4008741	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x40086bf	        0x4883ed28	                           sub rbp, 0x28	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x40086c3	            0x747c	                            je 0x4008741	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x40086c5	    0x488b35000000	            mov rsi, qword [0x040086cc] 	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086cc	          0x4885f6	                           test rsi, rsi	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086cf	            0x741a	                            je 0x40086eb	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086d1	        0x488d5508	                      lea rdx, [rbp + 8]	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x40086d5	      0xb900000000	                              mov ecx, 0	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x40086da	      0xbf00000000	                              mov edi, 0	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x40086df	      0xe8847bffff	                     call sym.in_id_list	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x40086e4	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086e6	           0xf95c0	                                setne al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086e9	            0xeb2b	                           jmp 0x4008716	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086eb	          0x4584e4	                         test r12b, r12b	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086ee	            0x740b	                            je 0x40086fb	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086f0	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086f3	          0x83f001	                              xor eax, 1	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086f6	          0x83e001	                              and eax, 1	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086f9	            0xeb1b	                           jmp 0x4008716	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40086fb	          0x8b4d20	            mov ecx, dword [rbp + 0x20] 	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x40086fe	          0x83e101	                              and ecx, 1	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x4008701	        0x488d5508	                      lea rdx, [rbp + 8]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x4008705	        0x498b7778	            mov rsi, qword [r15 + 0x78] 	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x4008709	          0x4c89ff	                            mov rdi, r15	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x400870c	      0xe8577bffff	                     call sym.in_id_list	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x4008711	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4008713	           0xf95c0	                                setne al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4008716	            0x84c0	                             test al, al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4008718	            0x741e	                            je 0x4008738	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x400871a	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x400871e	      0x4889442438	             mov qword [rsp + 0x38], rax	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4008723	        0x4c8b6518	            mov r12, qword [rbp + 0x18] 	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4008727	        0x448b7524	           mov r14d, dword [rbp + 0x24] 	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x400872b	         0xfbf6d0c	            movsx ebp, word [rbp + 0xc] 	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x400872f	            0x85ed	                           test ebp, ebp	      2032	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9
0x4008731	            0x7521	                           jne 0x4008754	      2032	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9
0x4008733	      0xe946010000	                           jmp 0x400887e	      2032	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9
0x4008738	        0x488b6d00	                    mov rbp, qword [rbp]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x400873c	          0x4885ed	                           test rbp, rbp	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x400873f	            0x7584	                           jne 0x40086c5	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x4008741	        0x4183c601	                             add r14d, 1	      3417	syntax.c	FUNCTION_44	FOR_1
0x4008745	        0x4183fe03	                             cmp r14d, 3	      3417	syntax.c	FUNCTION_44	FOR_1
0x4008749	     0xf85c6feffff	                           jne 0x4008615	      3417	syntax.c	FUNCTION_44	FOR_1
0x400874f	      0xe92a010000	                           jmp 0x400887e	      3417	syntax.c	FUNCTION_44	FOR_1
0x4008754	      0xbfffffffff	                     mov edi, 0xffffffff	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4008759	      0xe8b884ffff	             call sym.push_current_state	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x400875e	          0x83f801	                              cmp eax, 1	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4008761	     0xf850a010000	                           jne 0x4008871	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4008767	         0x35c2420	             add ebx, dword [rsp + 0x20]	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x400876b	    0x8b0d00000000	            mov ecx, dword [0x04008771] 	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x4008771	          0x4863c1	                         movsxd rax, ecx	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x4008774	        0x488d04c0	                  lea rax, [rax + rax*8]	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x4008778	        0x48c1e004	                              shl rax, 4	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x400877c	    0x488b15000000	            mov rdx, qword [0x04008783] 	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x4008783	    0x4c8dbc0270ff	             lea r15, [rdx + rax - 0x90]	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x400878b	    0x8b1500000000	            mov edx, dword [0x04008791] 	      2037	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4008791	        0x41895710	             mov dword [r15 + 0x10], edx	      2037	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4008795	    0x488b15000000	            mov rdx, qword [0x0400879c] 	      2038	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x400879c	        0x49895728	             mov qword [r15 + 0x28], rdx	      2038	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087a0	    0x41c747300000	               mov dword [r15 + 0x30], 0	      2039	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087a8	        0x49895718	             mov qword [r15 + 0x18], rdx	      2040	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087ac	        0x41895f20	             mov dword [r15 + 0x20], ebx	      2041	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087b0	        0x49895738	             mov qword [r15 + 0x38], rdx	      2042	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087b4	        0x41895f40	             mov dword [r15 + 0x40], ebx	      2043	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087b8	    0x41c7475c0100	               mov dword [r15 + 0x5c], 1	      2044	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087c0	    0x41c747580000	               mov dword [r15 + 0x58], 0	      2045	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087c8	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      2046	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087cd	        0x49895768	             mov qword [r15 + 0x68], rdx	      2046	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087d1	    0x8b3500000000	            mov esi, dword [0x040087d7] 	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087d7	          0x8d7e01	                      lea edi, [rsi + 1]	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087da	    0x893d00000000	            mov dword [0x040087e0], edi 	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087e0	        0x41897770	             mov dword [r15 + 0x70], esi	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087e4	        0x45897774	            mov dword [r15 + 0x74], r14d	      2049	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40087e8	          0x83f901	                              cmp ecx, 1	      2050	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x40087eb	     0xf8ef3080000	                           jle 0x40090e4	      2050	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x40087f1	    0x488d88e0feff	                  lea rcx, [rax - 0x120]	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x40087f8	    0x488b35000000	            mov rsi, qword [0x040087ff] 	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x40087ff	    0x488b840648ff	       mov rax, qword [rsi + rax - 0xb8]	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4008807	      0x2500000200	                        and eax, 0x20000	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x400880c	          0x4809c2	                             or rdx, rax	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x400880f	        0x49895768	             mov qword [r15 + 0x68], rdx	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4008813	        0x41896f04	                mov dword [r15 + 4], ebp	      2055	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4008817	        0x41896f08	                mov dword [r15 + 8], ebp	      2056	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x400881b	      0xf644243802	               test byte [rsp + 0x38], 2	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x4008820	            0x742b	                            je 0x400884d	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x4008822	            0xeb12	                           jmp 0x4008836	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x4008824	    0x41c747600000	               mov dword [r15 + 0x60], 0	      2061	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x400882c	    0x41c747080000	                  mov dword [r15 + 8], 0	      2062	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4008834	            0xeb22	                           jmp 0x4008858	      2062	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4008836	    0x48030d000000	             add rcx, qword [0x0400883d]	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x400883d	          0x8b4160	            mov eax, dword [rcx + 0x60] 	      2067	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4008840	        0x41894760	             mov dword [r15 + 0x60], eax	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x4008844	          0x8b4108	                mov eax, dword [rcx + 8]	      2069	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4008847	        0x41894708	                mov dword [r15 + 8], eax	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x400884b	            0xeb0b	                           jmp 0x4008858	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x400884d	            0x89ef	                            mov edi, ebp	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0x400884f	      0xe800000000	                          call 0x4008854	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0x4008854	        0x41894760	             mov dword [r15 + 0x60], eax	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0x4008858	    0x49c747780000	               mov qword [r15 + 0x78], 0	      2074	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4008860	    0x4d89a7800000	             mov qword [r15 + 0x80], r12	      2075	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4008867	      0xe86578ffff	                  call sym.check_keepend	      2076	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_16
0x400886c	      0xe98b080000	                           jmp 0x40090fc	      2076	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_16
0x4008871	          0x4c89e7	                            mov rdi, r12	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_17
0x4008874	      0xe800000000	                          call 0x4008879	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_17
0x4008879	      0xe97e080000	                           jmp 0x40090fc	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_17
0x400887e	    0x488b05000000	            mov rax, qword [0x04008885] 	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x4008885	    0x8ba860020000	           mov ebp, dword [rax + 0x260] 	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x400888b	            0x85ed	                           test ebp, ebp	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x400888d	     0xf844a090000	                            je 0x40091dd	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x4008893	    0x8b0500000000	            mov eax, dword [0x04008899] 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4008899	            0x85c0	                           test eax, eax	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x400889b	            0x7812	                            js 0x40088af	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x400889d	    0x8b0d00000000	            mov ecx, dword [0x040088a3] 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x40088a3	    0x390d00000000	            cmp dword [0x040088a9], ecx 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x40088a9	     0xf8dd7030000	                           jge 0x4008c86	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x40088af	    0xc70500000000	               mov dword [0x040088b9], 0	      2101	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x40088b9	    0xc70500000000	     mov dword [0x040088c3], 0x7fffffff 	      2102	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x40088c3	      0xe9a7030000	                           jmp 0x4008c6f	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x40088c8	          0x4863c5	                         movsxd rax, ebp	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x40088cb	        0x488d1c80	                  lea rbx, [rax + rax*4]	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x40088cf	        0x48c1e305	                              shl rbx, 5	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x40088d3	    0x488b05000000	            mov rax, qword [0x040088da] 	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x40088da	    0x480398700200	            add rbx, qword [rax + 0x270]	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x40088e1	         0xfbe4301	               movsx eax, byte [rbx + 1]	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40088e5	          0x4139c5	                           cmp r13d, eax	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40088e8	     0xf8581030000	                           jne 0x4008c6f	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40088ee	      0x837c240800	                  cmp dword [rsp + 8], 0	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40088f3	            0x750a	                           jne 0x40088ff	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40088f5	        0xf6432510	           test byte [rbx + 0x25], 0x10 	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40088f9	     0xf8570030000	                           jne 0x4008c6f	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40088ff	           0xfb603	                   movzx eax, byte [rbx]	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008902	          0x83e801	                              sub eax, 1	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008905	            0x3c01	                               cmp al, 1	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008907	     0xf8762030000	                            ja 0x4008c6f	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400890d	    0x488b35000000	            mov rsi, qword [0x04008914] 	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008914	          0x4885f6	                           test rsi, rsi	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008917	            0x741a	                            je 0x4008933	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008919	        0x488d5350	                   lea rdx, [rbx + 0x50]	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x400891d	      0xb900000000	                              mov ecx, 0	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4008922	      0xbf00000000	                              mov edi, 0	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4008927	      0xe83c79ffff	                     call sym.in_id_list	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x400892c	            0x85c0	                           test eax, eax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400892e	           0xf95c0	                                setne al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008931	            0xeb2b	                           jmp 0x400895e	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008933	          0x4d85ff	                           test r15, r15	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008936	            0x750b	                           jne 0x4008943	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008938	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400893b	          0x83f001	                              xor eax, 1	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400893e	          0x83e001	                              and eax, 1	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008941	            0xeb1b	                           jmp 0x400895e	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008943	          0x8b4b24	            mov ecx, dword [rbx + 0x24] 	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x4008946	          0x83e101	                              and ecx, 1	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x4008949	        0x488d5350	                   lea rdx, [rbx + 0x50]	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x400894d	        0x498b7778	            mov rsi, qword [r15 + 0x78] 	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x4008951	          0x4c89ff	                            mov rdi, r15	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x4008954	      0xe80f79ffff	                     call sym.in_id_list	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x4008959	            0x85c0	                           test eax, eax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400895b	           0xf95c0	                                setne al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400895e	            0x84c0	                             test al, al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008960	     0xf8409030000	                            je 0x4008c6f	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008966	    0x8b0500000000	            mov eax, dword [0x0400896c] 	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x400896c	          0x394334	            cmp dword [rbx + 0x34], eax 	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x400896f	            0x750f	                           jne 0x4008980	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4008971	    0x8b0d00000000	            mov ecx, dword [0x04008977] 	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4008977	          0x394b38	            cmp dword [rbx + 0x38], ecx 	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x400897a	     0xf8def020000	                           jge 0x4008c6f	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4008980	          0x894334	             mov dword [rbx + 0x34], eax	      2127	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008983	    0x8b0500000000	            mov eax, dword [0x04008989] 	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008989	          0x2b4320	             sub eax, dword [rbx + 0x20]	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400898c	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      2133	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400898f	    0x899424180200	            mov dword [rsp + 0x218], edx	      2133	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008996	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      2134	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400899a	    0x48899424d000	             mov qword [rsp + 0xd0], rdx	      2134	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40089a2	        0x488d4b70	                   lea rcx, [rbx + 0x70]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x40089a6	            0x85c0	                           test eax, eax	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x40089a8	      0xba00000000	                              mov edx, 0	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x40089ad	           0xf49d0	                         cmovns edx, eax	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x40089b0	    0x488b35000000	            mov rsi, qword [0x040089b7] 	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x40089b7	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x40089bf	      0xe8f77dffff	                    call sym.syn_regexec	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x40089c4	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	      2139	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40089cc	        0x48895368	             mov qword [rbx + 0x68], rdx	      2139	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40089d0	            0x85c0	                           test eax, eax	      2140	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x40089d2	            0x750c	                           jne 0x40089e0	      2140	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x40089d4	    0xc74338ffffff	     mov dword [rbx + 0x38], 0x7fffffff 	      2143	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x40089db	      0xe98f020000	                           jmp 0x4008c6f	      2144	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x40089e0	    0x41b8ffffffff	                     mov r8d, 0xffffffff	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x40089e6	      0xb900000000	                              mov ecx, 0	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x40089eb	          0x4889da	                            mov rdx, rbx	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x40089ee	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x40089f6	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x40089fe	      0xe8e480ffff	              call sym.syn_add_start_off	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x4008a03	    0x488b3d000000	            mov rdi, qword [0x04008a0a] 	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4008a0a	    0x4839bc249000	            cmp qword [rsp + 0x90], rdi 	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4008a12	            0x7e0c	                           jle 0x4008a20	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4008a14	    0xc74338ffffff	     mov dword [rbx + 0x38], 0x7fffffff 	      2156	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4008a1b	      0xe94f020000	                           jmp 0x4008c6f	      2157	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4008a20	    0x448ba4249800	           mov r12d, dword [rsp + 0x98] 	      2159	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008a28	        0x44896338	            mov dword [rbx + 0x38], r12d	      2163	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008a2c	    0x443b25000000	           cmp r12d, dword [0x04008a33] 	      2169	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x4008a33	     0xf8d36020000	                           jge 0x4008c6f	      2169	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x4008a39	    0x8b1500000000	            mov edx, dword [0x04008a3f] 	      2498	syntax.c	FUNCTION_29	FOR_1
0x4008a3f	    0x488b35000000	            mov rsi, qword [0x04008a46] 	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x4008a46	    0x8b0d00000000	            mov ecx, dword [0x04008a4c] 	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x4008a4c	            0xeb20	                           jmp 0x4008a6e	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x4008a4e	          0x4863c2	                         movsxd rax, edx	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x4008a51	        0x488d04c0	                  lea rax, [rax + rax*8]	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x4008a55	        0x48c1e004	                              shl rax, 4	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x4008a59	          0x4801f0	                            add rax, rsi	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x4008a5c	          0x394810	            cmp dword [rax + 0x10], ecx 	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x4008a5f	            0x750d	                           jne 0x4008a6e	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x4008a61	          0x39780c	              cmp dword [rax + 0xc], edi	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x4008a64	            0x7508	                           jne 0x4008a6e	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x4008a66	            0x3b28	                    cmp ebp, dword [rax]	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x4008a68	     0xf84a6060000	                            je 0x4009114	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x4008a6e	          0x83ea01	                              sub edx, 1	      2498	syntax.c	FUNCTION_29	FOR_1
0x4008a71	            0x79db	                           jns 0x4008a4e	      2498	syntax.c	FUNCTION_29	FOR_1
0x4008a73	    0x8b8424b00000	            mov eax, dword [rsp + 0xb0] 	      2506	syntax.c	FUNCTION_29	FOR_2
0x4008a7a	    0x488b8c24c000	            mov rcx, qword [rsp + 0xc0] 	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4008a82	            0xeb0c	                           jmp 0x4008a90	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4008a84	          0x4863d0	                         movsxd rdx, eax	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4008a87	          0x3b2c91	            cmp ebp, dword [rcx + rdx*4]	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4008a8a	     0xf8484060000	                            je 0x4009114	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4008a90	          0x83e801	                              sub eax, 1	      2506	syntax.c	FUNCTION_29	FOR_2
0x4008a93	            0x79ef	                           jns 0x4008a84	      2506	syntax.c	FUNCTION_29	FOR_2
0x4008a95	      0xe989060000	                           jmp 0x4009123	      2506	syntax.c	FUNCTION_29	FOR_2
0x4008a9a	        0xf6432404	               test byte [rbx + 0x24], 4	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4008a9e	     0xf84e0000000	                            je 0x4008b84	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4008aa4	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4008aa9	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4008aae	    0x48898424a000	             mov qword [rsp + 0xa0], rax	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4008ab6	    0x48899424a800	             mov qword [rsp + 0xa8], rdx	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4008abe	        0xff742418	                 push qword [rsp + 0x18]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x4008ac2	      0x488d44243c	                   lea rax, [rsp + 0x3c]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x4008ac7	              0x50	                                push rax	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x4008ac8	    0x4c8d8c249000	                    lea r9, [rsp + 0x90]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x4008ad0	      0x4c8d442448	                    lea r8, [rsp + 0x48]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x4008ad5	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x4008ada	      0x488d542450	                   lea rdx, [rsp + 0x50]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x4008adf	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x4008ae7	            0x89ef	                            mov edi, ebp	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x4008ae9	      0xe8aa81ffff	                    call sym.find_endpos	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x4008aee	        0x4883c410	                           add rsp, 0x10	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4008af2	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4008af8	     0xf8586000000	                           jne 0x4008b84	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4008afe	      0xe96c010000	                           jmp 0x4008c6f	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4008b03	            0x3c01	                               cmp al, 1	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x4008b05	            0x757d	                           jne 0x4008b84	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x4008b07	    0x41b800000000	                              mov r8d, 0	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x4008b0d	      0xb903000000	                              mov ecx, 3	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x4008b12	          0x4889da	                            mov rdx, rbx	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x4008b15	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x4008b1d	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x4008b22	      0xe8bb7effff	                call sym.syn_add_end_off	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x4008b27	    0x41b800000000	                              mov r8d, 0	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x4008b2d	      0xb901000000	                              mov ecx, 1	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x4008b32	          0x4889da	                            mov rdx, rbx	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x4008b35	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x4008b3d	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x4008b42	      0xe89b7effff	                call sym.syn_add_end_off	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x4008b47	    0x488b05000000	            mov rax, qword [0x04008b4e] 	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4008b4e	      0x4839442440	            cmp qword [rsp + 0x40], rax 	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4008b53	            0x752f	                           jne 0x4008b84	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4008b55	          0x4489e8	                           mov eax, r13d	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4008b58	         0x3442448	             add eax, dword [rsp + 0x48]	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4008b5c	          0x4139c4	                           cmp r12d, eax	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4008b5f	            0x7e23	                           jle 0x4008b84	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4008b61	    0x8b8424800100	           mov eax, dword [rsp + 0x180] 	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x4008b68	    0x398424e00000	            cmp dword [rsp + 0xe0], eax 	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x4008b6f	     0xf85fa000000	                           jne 0x4008c6f	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x4008b75	    0xc70500000000	               mov dword [0x04008b7f], 1	      2247	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x4008b7f	      0xe9eb000000	                           jmp 0x4008c6f	      2247	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x4008b84	    0x488b05000000	            mov rax, qword [0x04008b8b] 	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4008b8b	      0x4839442450	            cmp qword [rsp + 0x50], rax 	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4008b90	            0x750c	                           jne 0x4008b9e	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4008b92	      0x443b642458	           cmp r12d, dword [rsp + 0x58] 	      2258	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4008b97	            0x7e05	                           jle 0x4008b9e	      2258	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4008b99	      0x4489642458	            mov dword [rsp + 0x58], r12d	      2259	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4008b9e	      0x488d742440	                   lea rsi, [rsp + 0x40]	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_31
0x4008ba3	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_31
0x4008ba8	      0xe80875ffff	                 call sym.limit_pos_zero	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_31
0x4008bad	    0x892d00000000	            mov dword [0x04008bb3], ebp 	      2262	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bb3	    0x448925000000	           mov dword [0x04008bba], r12d 	      2263	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bba	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bbf	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bc4	    0x488905000000	            mov qword [0x04008bcb], rax 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bcb	    0x488915000000	            mov qword [0x04008bd2], rdx 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bd2	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bd7	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bdc	    0x488905000000	            mov qword [0x04008be3], rax 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008be3	    0x488915000000	            mov qword [0x04008bea], rdx 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bea	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bef	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bf4	    0x488905000000	            mov qword [0x04008bfb], rax 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008bfb	    0x488915000000	            mov qword [0x04008c02], rdx 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c02	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2267	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c07	    0x488905000000	            mov qword [0x04008c0e], rax 	      2267	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c0e	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c13	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c18	    0x488905000000	            mov qword [0x04008c1f], rax 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c1f	    0x488915000000	            mov qword [0x04008c26], rdx 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c26	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c2e	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c36	    0x488905000000	            mov qword [0x04008c3d], rax 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c3d	    0x488915000000	            mov qword [0x04008c44], rdx 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c44	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2270	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c48	    0x890500000000	            mov dword [0x04008c4e], eax 	      2270	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c4e	    0x488b3d000000	            mov rdi, qword [0x04008c55] 	      2271	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_32
0x4008c55	      0xe800000000	                          call 0x4008c5a	      2271	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_32
0x4008c5a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2272	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c5f	    0x488905000000	            mov qword [0x04008c66], rax 	      2272	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c66	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2273	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4008c6f	          0x83ed01	                              sub ebp, 1	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4008c72	     0xf8950fcffff	                           jns 0x40088c8	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4008c78	    0x8b0500000000	            mov eax, dword [0x04008c7e] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4008c7e	            0x85c0	                           test eax, eax	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4008c80	     0xf8857050000	                            js 0x40091dd	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4008c86	    0x8b1500000000	            mov edx, dword [0x04008c8c] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4008c8c	    0x3b1500000000	            cmp edx, dword [0x04008c92] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4008c92	     0xf8545050000	                           jne 0x40091dd	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4008c98	    0x488b0d000000	            mov rcx, qword [0x04008c9f] 	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008c9f	    0x48390d000000	            cmp qword [0x04008ca6], rcx 	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008ca6	     0xf858f000000	                           jne 0x4008d3b	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008cac	    0x3b1500000000	            cmp edx, dword [0x04008cb2] 	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008cb2	     0xf8583000000	                           jne 0x4008d3b	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008cb8	            0x4898	                                    cdqe	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x4008cba	        0x488d0480	                  lea rax, [rax + rax*4]	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x4008cbe	        0x48c1e005	                              shl rax, 5	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x4008cc2	    0x488b15000000	            mov rdx, qword [0x04008cc9] 	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x4008cc9	    0x480382700200	            add rax, qword [rdx + 0x270]	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x4008cd0	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008cd4	          0x4885d2	                           test rdx, rdx	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008cd7	            0x7462	                            je 0x4008d3b	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008cd9	    0x488915000000	            mov qword [0x04008ce0], rdx 	      2292	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008ce0	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2293	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008ce3	    0x890500000000	            mov dword [0x04008ce9], eax 	      2293	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008ce9	      0xbe01000000	                              mov esi, 1	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_34
0x4008cee	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_34
0x4008cf6	      0xe800000000	                          call 0x4008cfb	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_34
0x4008cfb	          0x83f801	                              cmp eax, 1	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_34
0x4008cfe	            0x7524	                           jne 0x4008d24	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_34
0x4008d00	    0x8b8424b00000	            mov eax, dword [rsp + 0xb0] 	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4008d07	          0x8d5001	                      lea edx, [rax + 1]	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4008d0a	    0x899424b00000	             mov dword [rsp + 0xb0], edx	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4008d11	            0x4898	                                    cdqe	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4008d13	    0x8b0d00000000	            mov ecx, dword [0x04008d19] 	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4008d19	    0x488b9424c000	            mov rdx, qword [rsp + 0xc0] 	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4008d21	          0x890c82	            mov dword [rdx + rax*4], ecx	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4008d24	    0xc70500000000	     mov dword [0x04008d2e], 0xffffffff 	      2305	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008d2e	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      2295	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008d36	      0xe993f7ffff	                           jmp 0x40084ce	      2295	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4008d3b	          0x4c89ff	                            mov rdi, r15	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_35
0x4008d3e	      0xe824f2ffff	                call sym.push_next_match	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_35
0x4008d43	          0x4989c7	                            mov r15, rax	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_35
0x4008d46	      0xb801000000	                              mov eax, 1	      2309	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4008d4b	    0x48833d000000	               cmp qword [0x04008d53], 0	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x4008d53	            0x7460	                            je 0x4008db5	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x4008d55	            0xeb39	                           jmp 0x4008d90	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x4008d57	      0xe8657cffff	                 call sym.syn_getcurline	      2326	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	CALL_36
0x4008d5c	    0x8b1500000000	            mov edx, dword [0x04008d62] 	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4008d62	          0xf6c601	                              test dh, 1	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4008d65	            0x7415	                            je 0x4008d7c	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4008d67	    0x48630d000000	         movsxd rcx, dword [0x04008d6e] 	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x4008d6e	         0xfb60c08	             movzx ecx, byte [rax + rcx]	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x4008d72	          0x80f920	                            cmp cl, 0x20	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x4008d75	            0x7446	                            je 0x4008dbd	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x4008d77	          0x80f909	                               cmp cl, 9	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x4008d7a	            0x7441	                            je 0x4008dbd	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x4008d7c	          0xf6c602	                              test dh, 2	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4008d7f	     0xf8474040000	                            je 0x40091f9	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4008d85	          0x803800	                       cmp byte [rax], 0	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4008d88	     0xf856b040000	                           jne 0x40091f9	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4008d8e	            0xeb2d	                           jmp 0x4008dbd	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4008d90	    0x48c705000000	               mov qword [0x04008d9b], 0	      2342	syntax.c	FUNCTION_28	DO_1	IF_32
0x4008d9b	    0xc70500000000	     mov dword [0x04008da5], 0xffffffff 	      2343	syntax.c	FUNCTION_28	DO_1	IF_32
0x4008da5	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x4008daa	     0xf841ef7ffff	                            je 0x40084ce	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x4008db0	      0xb801000000	                              mov eax, 1	      2309	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4008db5	            0x85c0	                           test eax, eax	      2348	syntax.c	FUNCTION_28	DO_1
0x4008db7	     0xf8511f7ffff	                           jne 0x40084ce	      2348	syntax.c	FUNCTION_28	DO_1
0x4008dbd	    0x488dbc242002	                  lea rdi, [rsp + 0x220]	      2350	syntax.c	FUNCTION_28	CALL_38
0x4008dc5	      0xe8b179ffff	                call sym.restore_chartab	      2350	syntax.c	FUNCTION_28	CALL_38
0x4008dca	    0xc70500000000	               mov dword [0x04008dd4], 0	      2356	syntax.c	FUNCTION_28
0x4008dd4	    0xc70500000000	               mov dword [0x04008dde], 0	      2358	syntax.c	FUNCTION_28
0x4008dde	    0xc70500000000	               mov dword [0x04008de8], 0	      2359	syntax.c	FUNCTION_28
0x4008de8	    0xc70500000000	               mov dword [0x04008df2], 0	      2362	syntax.c	FUNCTION_28
0x4008df2	    0xc70500000000	               mov dword [0x04008dfc], 0	      2363	syntax.c	FUNCTION_28
0x4008dfc	          0x4d85ff	                           test r15, r15	      2365	syntax.c	FUNCTION_28	IF_36
0x4008dff	     0xf8413020000	                            je 0x4009018	      2365	syntax.c	FUNCTION_28	IF_36
0x4008e05	    0x8b0500000000	            mov eax, dword [0x04008e0b] 	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4008e0b	          0x83e801	                              sub eax, 1	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4008e0e	     0xf8890000000	                            js 0x4008ea4	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4008e14	    0x488b35000000	            mov rsi, qword [0x04008e1b] 	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x4008e1b	    0x488b0d000000	            mov rcx, qword [0x04008e22] 	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e22	    0x8b3d00000000	            mov edi, dword [0x04008e28] 	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e28	          0x4863d0	                         movsxd rdx, eax	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x4008e2b	        0x488d1cd2	                  lea rbx, [rdx + rdx*8]	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x4008e2f	        0x48c1e304	                              shl rbx, 4	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x4008e33	          0x4801f3	                            add rbx, rsi	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x4008e36	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e3a	          0x4839ca	                            cmp rdx, rcx	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e3d	            0x7c0a	                            jl 0x4008e49	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e3f	          0x4839ca	                            cmp rdx, rcx	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e42	            0x7556	                           jne 0x4008e9a	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e44	          0x397b30	            cmp dword [rbx + 0x30], edi 	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e47	            0x7f51	                            jg 0x4008e9a	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e49	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      2376	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e4d	          0x4839d1	                            cmp rcx, rdx	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e50	            0x7c0f	                            jl 0x4008e61	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e52	          0x4885d2	                           test rdx, rdx	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e55	            0x740a	                            je 0x4008e61	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e57	          0x4839d1	                            cmp rcx, rdx	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e5a	            0x753e	                           jne 0x4008e9a	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e5c	          0x3b7b40	            cmp edi, dword [rbx + 0x40] 	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e5f	            0x7d39	                           jge 0x4008e9a	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e61	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      2381	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e64	    0x890500000000	            mov dword [0x04008e6a], eax 	      2381	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e6a	          0x8b4304	                mov eax, dword [rbx + 4]	      2383	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e6d	    0x890500000000	            mov dword [0x04008e73], eax 	      2383	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e73	          0x8b4308	                mov eax, dword [rbx + 8]	      2385	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e76	    0x890500000000	            mov dword [0x04008e7c], eax 	      2385	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e7c	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      2387	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e80	    0x890500000000	            mov dword [0x04008e86], eax 	      2387	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e86	          0x8b4370	            mov eax, dword [rbx + 0x70] 	      2388	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e89	    0x890500000000	            mov dword [0x04008e8f], eax 	      2388	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e8f	          0x8b4374	            mov eax, dword [rbx + 0x74] 	      2389	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e92	    0x890500000000	            mov dword [0x04008e98], eax 	      2389	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e98	            0xeb0f	                           jmp 0x4008ea9	      2391	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4008e9a	          0x83e801	                              sub eax, 1	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4008e9d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4008ea0	            0x7586	                           jne 0x4008e28	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4008ea2	            0xeb05	                           jmp 0x4008ea9	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4008ea4	      0xbb00000000	                              mov ebx, 0	      1914	syntax.c	FUNCTION_28
0x4008ea9	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2395	syntax.c	FUNCTION_28	IF_36	IF_38
0x4008eaf	     0xf8421010000	                            je 0x4008fd6	      2395	syntax.c	FUNCTION_28	IF_36	IF_38
0x4008eb5	    0x488b2d000000	            mov rbp, qword [0x04008ebc] 	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x4008ebc	    0x8b8590020000	           mov eax, dword [rbp + 0x290] 	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x4008ec2	            0x85c0	                           test eax, eax	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x4008ec4	            0x7578	                           jne 0x4008f3e	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x4008ec6	    0x8b8594020000	           mov eax, dword [rbp + 0x294] 	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4008ecc	            0x85c0	                           test eax, eax	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4008ece	            0x7409	                            je 0x4008ed9	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4008ed0	    0x833d00000000	               cmp dword [0x04008ed7], 0	      2408	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4008ed7	            0x7519	                           jne 0x4008ef2	      2408	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4008ed9	    0x83bd5c020000	              cmp dword [rbp + 0x25c], 2	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4008ee0	           0xf95c0	                                setne al	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4008ee3	           0xfb6c0	                           movzx eax, al	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4008ee6	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4008eeb	            0x8901	                    mov dword [rcx], eax	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4008eed	      0xe9e4000000	                           jmp 0x4008fd6	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4008ef2	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	      2412	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x4008efd	    0x66898424a400	               mov word [rsp + 0xa4], ax	      2413	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x4008f05	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      2414	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x4008f11	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x4008f15	      0xb900000000	                              mov ecx, 0	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x4008f1a	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x4008f22	          0x4889df	                            mov rdi, rbx	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x4008f25	      0xe83e73ffff	                     call sym.in_id_list	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x4008f2a	            0x85c0	                           test eax, eax	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x4008f2c	           0xf94c0	                                 sete al	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x4008f2f	           0xfb6c0	                           movzx eax, al	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x4008f32	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x4008f37	            0x8901	                    mov dword [rcx], eax	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x4008f39	      0xe998000000	                           jmp 0x4008fd6	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x4008f3e	    0x833d00000000	               cmp dword [0x04008f45], 0	      2424	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4008f45	            0x7516	                           jne 0x4008f5d	      2424	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4008f47	    0x83bd5c020000	              cmp dword [rbp + 0x25c], 1	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4008f4e	           0xf94c0	                                 sete al	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4008f51	           0xfb6c0	                           movzx eax, al	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4008f54	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4008f59	            0x8901	                    mov dword [rcx], eax	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4008f5b	            0xeb79	                           jmp 0x4008fd6	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4008f5d	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	      2428	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x4008f68	    0x66898424a400	               mov word [rsp + 0xa4], ax	      2429	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x4008f70	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      2430	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x4008f7c	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x4008f80	      0xb900000000	                              mov ecx, 0	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x4008f85	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x4008f8d	          0x4889df	                            mov rdi, rbx	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x4008f90	      0xe8d372ffff	                     call sym.in_id_list	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x4008f95	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x4008f9a	            0x8901	                    mov dword [rcx], eax	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x4008f9c	    0x8b8594020000	           mov eax, dword [rbp + 0x294] 	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4008fa2	            0x85c0	                           test eax, eax	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4008fa4	            0x7430	                            je 0x4008fd6	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4008fa6	    0x66898424a400	               mov word [rsp + 0xa4], ax	      2435	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4008fae	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x4008fb2	      0xb900000000	                              mov ecx, 0	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x4008fb7	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x4008fbf	          0x4889df	                            mov rdi, rbx	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x4008fc2	      0xe8a172ffff	                     call sym.in_id_list	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x4008fc7	            0x85c0	                           test eax, eax	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x4008fc9	            0x740b	                            je 0x4008fd6	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x4008fcb	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2437	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43
0x4008fd0	    0xc70000000000	                      mov dword [rax], 0	      2437	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43
0x4008fd6	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x4008fda	          0x4409e8	                            or eax, r13d	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x4008fdd	            0x7571	                           jne 0x4009050	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x4008fdf	      0xe8c8ecffff	               call sym.check_state_ends	      2454	syntax.c	FUNCTION_28	IF_36	IF_44	CALL_43
0x4008fe4	    0x833d00000000	               cmp dword [0x04008feb], 0	      2455	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4008feb	            0x7e63	                           jle 0x4009050	      2455	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4008fed	      0xe8cf79ffff	                 call sym.syn_getcurline	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x4008ff2	    0x8b1500000000	            mov edx, dword [0x04008ff8] 	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x4008ff8	          0x4863ca	                         movsxd rcx, edx	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x4008ffb	        0x803c0800	                 cmp byte [rax + rcx], 0	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x4008fff	            0x744f	                            je 0x4009050	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x4009001	          0x83c201	                              add edx, 1	      2458	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4009004	    0x891500000000	            mov dword [0x0400900a], edx 	      2458	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x400900a	      0xe89decffff	               call sym.check_state_ends	      2459	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_45
0x400900f	    0x832d00000000	               sub dword [0x04009016], 1	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4009016	            0xeb38	                           jmp 0x4009050	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4009018	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2464	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x400901e	            0x7430	                            je 0x4009050	      2464	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009020	    0x488b15000000	            mov rdx, qword [0x04009027] 	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009027	    0x8b825c020000	           mov eax, dword [rdx + 0x25c] 	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x400902d	            0x85c0	                           test eax, eax	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x400902f	            0x750f	                           jne 0x4009040	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009031	    0x83ba90020000	              cmp dword [rdx + 0x290], 0	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009038	           0xf94c0	                                 sete al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x400903b	           0xfb6c0	                           movzx eax, al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x400903e	            0xeb09	                           jmp 0x4009049	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009040	          0x83f801	                              cmp eax, 1	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009043	           0xf94c0	                                 sete al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009046	           0xfb6c0	                           movzx eax, al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009049	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x400904e	            0x8901	                    mov dword [rcx], eax	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009050	    0x48833d000000	               cmp qword [0x04009058], 0	      2472	syntax.c	FUNCTION_28	IF_47
0x4009058	            0x7430	                            je 0x400908a	      2472	syntax.c	FUNCTION_28	IF_47
0x400905a	      0xe86279ffff	                 call sym.syn_getcurline	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x400905f	    0x486315000000	         movsxd rdx, dword [0x04009066] 	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x4009066	        0x803c1000	                 cmp byte [rax + rdx], 0	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x400906a	            0x741e	                            je 0x400908a	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x400906c	      0x807c100100	             cmp byte [rax + rdx + 1], 0	      2474	syntax.c	FUNCTION_28	IF_47
0x4009071	            0x7517	                           jne 0x400908a	      2474	syntax.c	FUNCTION_28	IF_47
0x4009073	    0xf70500000000	         test dword [0x0400907d], 0x280 	      2475	syntax.c	FUNCTION_28	IF_47
0x400907d	            0x750b	                           jne 0x400908a	      2475	syntax.c	FUNCTION_28	IF_47
0x400907f	    0x48c705000000	               mov qword [0x0400908a], 0	      2476	syntax.c	FUNCTION_28	IF_47
0x400908a	    0x83bc24b00000	               cmp dword [rsp + 0xb0], 0	      2478	syntax.c	FUNCTION_28	IF_48
0x4009092	            0x7e0d	                           jle 0x40090a1	      2478	syntax.c	FUNCTION_28	IF_48
0x4009094	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      2479	syntax.c	FUNCTION_28	CALL_47
0x400909c	      0xe800000000	                          call 0x40090a1	      2479	syntax.c	FUNCTION_28	CALL_47
0x40090a1	    0x488b3d000000	            mov rdi, qword [0x040090a8] 	      2482	syntax.c	FUNCTION_28	CALL_48
0x40090a8	      0xe800000000	                          call 0x40090ad	      2482	syntax.c	FUNCTION_28	CALL_48
0x40090ad	    0x48c705000000	               mov qword [0x040090b8], 0	      2483	syntax.c	FUNCTION_28
0x40090b8	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2484	syntax.c	FUNCTION_28	CALL_49
0x40090bd	      0xe800000000	                          call 0x40090c2	      2484	syntax.c	FUNCTION_28	CALL_49
0x40090c2	    0x8b0500000000	            mov eax, dword [0x040090c8] 	      2486	syntax.c	FUNCTION_28
0x40090c8	    0x488b8c249802	           mov rcx, qword [rsp + 0x298] 	      2487	syntax.c	FUNCTION_28
0x40090d0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2487	syntax.c	FUNCTION_28
0x40090d9	     0xf8444010000	                            je 0x4009223	      2487	syntax.c	FUNCTION_28
0x40090df	      0xe93a010000	                           jmp 0x400921e	      2487	syntax.c	FUNCTION_28
0x40090e4	        0x41896f04	                mov dword [r15 + 4], ebp	      2055	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40090e8	        0x41896f08	                mov dword [r15 + 8], ebp	      2056	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40090ec	      0xf644243802	               test byte [rsp + 0x38], 2	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x40090f1	     0xf852df7ffff	                           jne 0x4008824	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x40090f7	      0xe951f7ffff	                           jmp 0x400884d	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x40090fc	    0x48833d000000	               cmp qword [0x04009104], 0	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x4009104	     0xf854dfcffff	                           jne 0x4008d57	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x400910a	      0xb800000000	                              mov eax, 0	      1992	syntax.c	FUNCTION_28	DO_1
0x400910f	      0xe9a1fcffff	                           jmp 0x4008db5	      1992	syntax.c	FUNCTION_28	DO_1
0x4009114	    0xc70500000000	               mov dword [0x0400911e], 1	      2179	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22
0x400911e	      0xe94cfbffff	                           jmp 0x4008c6f	      2180	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22
0x4009123	    0x488b84247801	           mov rax, qword [rsp + 0x178] 	      2183	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400912b	      0x4889442440	             mov qword [rsp + 0x40], rax	      2183	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009130	    0x8b8424800100	           mov eax, dword [rsp + 0x180] 	      2184	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009137	        0x89442448	             mov dword [rsp + 0x48], eax	      2184	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400913b	    0x41b8ffffffff	                     mov r8d, 0xffffffff	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x4009141	      0xb902000000	                              mov ecx, 2	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x4009146	          0x4889da	                            mov rdx, rbx	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x4009149	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x4009151	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x4009156	      0xe88c79ffff	              call sym.syn_add_start_off	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x400915b	    0x41b800000000	                              mov r8d, 0	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x4009161	      0xb904000000	                              mov ecx, 4	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x4009166	          0x4889da	                            mov rdx, rbx	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x4009169	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x4009171	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x4009176	      0xe86778ffff	                call sym.syn_add_end_off	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x400917b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2199	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_27
0x4009180	      0xe800000000	                          call 0x4009185	      2199	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_27
0x4009185	    0x488b05000000	            mov rax, qword [0x0400918c] 	      2200	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400918c	      0x4889442418	             mov qword [rsp + 0x18], rax	      2200	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009191	    0x48c705000000	               mov qword [0x0400919c], 0	      2201	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400919c	    0x48c744243800	               mov qword [rsp + 0x38], 0	      2203	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40091a5	    0x48c784248000	               mov qword [rsp + 0x80], 0	      2204	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40091b1	    0xc78424880000	               mov dword [rsp + 0x88], 0	      2205	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40091bc	    0xc74424340000	               mov dword [rsp + 0x34], 0	      2206	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40091c4	    0x48c744246000	               mov qword [rsp + 0x60], 0	      2207	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40091cd	           0xfb603	                   movzx eax, byte [rbx]	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40091d0	            0x3c02	                               cmp al, 2	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40091d2	     0xf852bf9ffff	                           jne 0x4008b03	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40091d8	      0xe9bdf8ffff	                           jmp 0x4008a9a	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40091dd	    0x48833d000000	               cmp qword [0x040091e5], 0	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x40091e5	     0xf84d2fbffff	                            je 0x4008dbd	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x40091eb	      0xe967fbffff	                           jmp 0x4008d57	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x40091f0	        0x4183c601	                             add r14d, 1	      3417	syntax.c	FUNCTION_44	FOR_1
0x40091f4	      0xe91cf4ffff	                           jmp 0x4008615	      3417	syntax.c	FUNCTION_44	FOR_1
0x40091f9	    0x48c705000000	               mov qword [0x04009204], 0	      2342	syntax.c	FUNCTION_28	DO_1	IF_32
0x4009204	    0xc70500000000	     mov dword [0x0400920e], 0xffffffff 	      2343	syntax.c	FUNCTION_28	DO_1	IF_32
0x400920e	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x4009213	     0xf84b5f2ffff	                            je 0x40084ce	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x4009219	      0xe99ffbffff	                           jmp 0x4008dbd	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x400921e	      0xe800000000	                          call 0x4009223	      2487	syntax.c	FUNCTION_28
0x4009223	    0x4881c4a80200	                          add rsp, 0x2a8	      2487	syntax.c	FUNCTION_28
0x400922a	              0x5b	                                 pop rbx	      2487	syntax.c	FUNCTION_28
0x400922b	              0x5d	                                 pop rbp	      2487	syntax.c	FUNCTION_28
0x400922c	            0x415c	                                 pop r12	      2487	syntax.c	FUNCTION_28
0x400922e	            0x415d	                                 pop r13	      2487	syntax.c	FUNCTION_28
0x4009230	            0x415e	                                 pop r14	      2487	syntax.c	FUNCTION_28
0x4009232	            0x415f	                                 pop r15	      2487	syntax.c	FUNCTION_28
0x4009234	              0xc3	                                     ret	      2487	syntax.c	FUNCTION_28
get_group_name	IF,1:CALL,3:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	23
0x4001708	              0x55	                                push rbp	      4579	syntax.c	FUNCTION_75
0x4001709	              0x53	                                push rbx	      4579	syntax.c	FUNCTION_75
0x400170a	        0x4883ec08	                              sub rsp, 8	      4579	syntax.c	FUNCTION_75
0x400170e	          0x4889fd	                            mov rbp, rdi	      4579	syntax.c	FUNCTION_75
0x4001711	          0x4889f3	                            mov rbx, rsi	      4579	syntax.c	FUNCTION_75
0x4001714	      0xe800000000	                          call 0x4001719	      4582	syntax.c	FUNCTION_75	CALL_1
0x4001719	          0x488903	                    mov qword [rbx], rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x400171c	          0x4889c7	                            mov rdi, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x400171f	      0xe800000000	                          call 0x4001724	      4583	syntax.c	FUNCTION_75	CALL_2
0x4001724	          0x4889c3	                            mov rbx, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x4001727	         0xfb67d00	                   movzx edi, byte [rbp]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400172b	      0xe800000000	                          call 0x4001730	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4001730	            0x85c0	                           test eax, eax	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4001732	            0x750e	                           jne 0x4001742	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4001734	          0x803b00	                       cmp byte [rbx], 0	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4001737	      0xb800000000	                              mov eax, 0	      4591	syntax.c	FUNCTION_75
0x400173c	        0x480f45c3	                         cmovne rax, rbx	      4591	syntax.c	FUNCTION_75
0x4001740	            0xeb05	                           jmp 0x4001747	      4591	syntax.c	FUNCTION_75
0x4001742	      0xb800000000	                              mov eax, 0	      4590	syntax.c	FUNCTION_75	IF_1
0x4001747	        0x4883c408	                              add rsp, 8	      4592	syntax.c	FUNCTION_75
0x400174b	              0x5b	                                 pop rbx	      4592	syntax.c	FUNCTION_75
0x400174c	              0x5d	                                 pop rbp	      4592	syntax.c	FUNCTION_75
0x400174d	              0xc3	                                     ret	      4592	syntax.c	FUNCTION_75
syn_id2cterm_bg	IF,0:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	19
0x400b592	              0x55	                                push rbp	      9860	syntax.c	FUNCTION_158
0x400b593	              0x53	                                push rbx	      9860	syntax.c	FUNCTION_158
0x400b594	          0x4889f5	                            mov rbp, rsi	      9860	syntax.c	FUNCTION_158
0x400b597	          0x4889d3	                            mov rbx, rdx	      9860	syntax.c	FUNCTION_158
0x400b59a	      0xe800000000	                          call 0x400b59f	      9863	syntax.c	FUNCTION_158	CALL_1
0x400b59f	            0x4898	                                    cdqe	      9864	syntax.c	FUNCTION_158	CALL_2
0x400b5a1	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9864	syntax.c	FUNCTION_158	CALL_2
0x400b5a5	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9864	syntax.c	FUNCTION_158	CALL_2
0x400b5a9	    0x488b05000000	            mov rax, qword [0x0400b5b0] 	      9864	syntax.c	FUNCTION_158	CALL_2
0x400b5b0	    0x488d94d068ff	           lea rdx, [rax + rdx*8 - 0x98]	      9864	syntax.c	FUNCTION_158	CALL_2
0x400b5b8	          0x8b4234	            mov eax, dword [rdx + 0x34] 	      9865	syntax.c	FUNCTION_158
0x400b5bb	          0x83e801	                              sub eax, 1	      9865	syntax.c	FUNCTION_158
0x400b5be	          0x894500	                    mov dword [rbp], eax	      9865	syntax.c	FUNCTION_158
0x400b5c1	          0x8b4238	            mov eax, dword [rdx + 0x38] 	      9866	syntax.c	FUNCTION_158
0x400b5c4	          0x83e801	                              sub eax, 1	      9866	syntax.c	FUNCTION_158
0x400b5c7	            0x8903	                    mov dword [rbx], eax	      9866	syntax.c	FUNCTION_158
0x400b5c9	              0x5b	                                 pop rbx	      9867	syntax.c	FUNCTION_158
0x400b5ca	              0x5d	                                 pop rbp	      9867	syntax.c	FUNCTION_158
0x400b5cb	              0xc3	                                     ret	      9867	syntax.c	FUNCTION_158
syn_scl_name2id	IF,2:CALL,5:FOR,1:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	46
0x4001e8f	            0x4155	                                push r13	      5535	syntax.c	FUNCTION_84
0x4001e91	            0x4154	                                push r12	      5535	syntax.c	FUNCTION_84
0x4001e93	              0x55	                                push rbp	      5535	syntax.c	FUNCTION_84
0x4001e94	              0x53	                                push rbx	      5535	syntax.c	FUNCTION_84
0x4001e95	        0x4883ec08	                              sub rsp, 8	      5535	syntax.c	FUNCTION_84
0x4001e99	      0xe800000000	                          call 0x4001e9e	      5540	syntax.c	FUNCTION_84	CALL_1
0x4001e9e	          0x4885c0	                           test rax, rax	      5541	syntax.c	FUNCTION_84	IF_1
0x4001ea1	            0x744f	                            je 0x4001ef2	      5541	syntax.c	FUNCTION_84	IF_1
0x4001ea3	          0x4989c5	                            mov r13, rax	      5541	syntax.c	FUNCTION_84	IF_1
0x4001ea6	    0x488b05000000	            mov rax, qword [0x04001ead] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001ead	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001eb1	    0x418b9c247802	           mov ebx, dword [r12 + 0x278] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001eb9	            0xeb2e	                           jmp 0x4001ee9	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001ebb	          0x4863c5	                         movsxd rax, ebp	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4001ebe	        0x488d1440	                  lea rdx, [rax + rax*2]	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4001ec2	        0x48c1e203	                              shl rdx, 3	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4001ec6	    0x490394248802	            add rdx, qword [r12 + 0x288]	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4001ece	        0x488b7208	                mov rsi, qword [rdx + 8]	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4001ed2	          0x4885f6	                           test rsi, rsi	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4001ed5	            0x7410	                            je 0x4001ee7	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4001ed7	          0x4c89ef	                            mov rdi, r13	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0x4001eda	      0xe800000000	                          call 0x4001edf	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0x4001edf	            0x85c0	                           test eax, eax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0x4001ee1	            0x7416	                            je 0x4001ef9	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0x4001ee3	            0x89eb	                            mov ebx, ebp	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0x4001ee5	            0xeb02	                           jmp 0x4001ee9	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0x4001ee7	            0x89eb	                            mov ebx, ebp	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0x4001ee9	            0x89dd	                            mov ebp, ebx	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001eeb	          0x83ed01	                              sub ebp, 1	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001eee	            0x79cb	                           jns 0x4001ebb	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001ef0	            0xeb17	                           jmp 0x4001f09	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001ef2	      0xb800000000	                              mov eax, 0	      5542	syntax.c	FUNCTION_84	IF_1
0x4001ef7	            0xeb1d	                           jmp 0x4001f16	      5542	syntax.c	FUNCTION_84	IF_1
0x4001ef9	          0x4c89ef	                            mov rdi, r13	      5547	syntax.c	FUNCTION_84	CALL_5
0x4001efc	      0xe800000000	                          call 0x4001f01	      5547	syntax.c	FUNCTION_84	CALL_5
0x4001f01	    0x8d83d7590000	                 lea eax, [rbx + 0x59d7]	      5548	syntax.c	FUNCTION_84
0x4001f07	            0xeb0d	                           jmp 0x4001f16	      5548	syntax.c	FUNCTION_84
0x4001f09	          0x4c89ef	                            mov rdi, r13	      5547	syntax.c	FUNCTION_84	CALL_5
0x4001f0c	      0xe800000000	                          call 0x4001f11	      5547	syntax.c	FUNCTION_84	CALL_5
0x4001f11	      0xb800000000	                              mov eax, 0	      5548	syntax.c	FUNCTION_84
0x4001f16	        0x4883c408	                              add rsp, 8	      5549	syntax.c	FUNCTION_84
0x4001f1a	              0x5b	                                 pop rbx	      5549	syntax.c	FUNCTION_84
0x4001f1b	              0x5d	                                 pop rbp	      5549	syntax.c	FUNCTION_84
0x4001f1c	            0x415c	                                 pop r12	      5549	syntax.c	FUNCTION_84
0x4001f1e	            0x415d	                                 pop r13	      5549	syntax.c	FUNCTION_84
0x4001f20	              0xc3	                                     ret	      5549	syntax.c	FUNCTION_84
syntax_present	IF,0:CALL,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	12
0x4003a34	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      6445	syntax.c	FUNCTION_97
0x4003a38	      0xb801000000	                              mov eax, 1	      6448	syntax.c	FUNCTION_97
0x4003a3d	    0x83ba60020000	              cmp dword [rdx + 0x260], 0	      6448	syntax.c	FUNCTION_97
0x4003a44	            0x751e	                           jne 0x4003a64	      6448	syntax.c	FUNCTION_97
0x4003a46	    0x83ba78020000	              cmp dword [rdx + 0x278], 0	      6446	syntax.c	FUNCTION_97
0x4003a4d	            0x7515	                           jne 0x4003a64	      6446	syntax.c	FUNCTION_97
0x4003a4f	      0x48837a0800	                  cmp qword [rdx + 8], 0	      6447	syntax.c	FUNCTION_97
0x4003a54	            0x750e	                           jne 0x4003a64	      6447	syntax.c	FUNCTION_97
0x4003a56	    0x4883ba300100	              cmp qword [rdx + 0x130], 0	      6448	syntax.c	FUNCTION_97
0x4003a5e	           0xf95c0	                                setne al	      6448	syntax.c	FUNCTION_97
0x4003a61	           0xfb6c0	                           movzx eax, al	      6448	syntax.c	FUNCTION_97
0x4003a64	            0xf3c3	                                     ret	      6449	syntax.c	FUNCTION_97
syn_id2colors	IF,0:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	18
0x400b557	              0x55	                                push rbp	      9845	syntax.c	ELSE_2	FUNCTION_157
0x400b558	              0x53	                                push rbx	      9845	syntax.c	ELSE_2	FUNCTION_157
0x400b559	          0x4889f5	                            mov rbp, rsi	      9845	syntax.c	ELSE_2	FUNCTION_157
0x400b55c	          0x4889d3	                            mov rbx, rdx	      9845	syntax.c	ELSE_2	FUNCTION_157
0x400b55f	      0xe800000000	                          call 0x400b564	      9848	syntax.c	ELSE_2	FUNCTION_157	CALL_1
0x400b564	            0x4898	                                    cdqe	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x400b566	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x400b56a	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x400b56e	    0x488b05000000	            mov rax, qword [0x0400b575] 	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x400b575	    0x488d84d068ff	           lea rax, [rax + rdx*8 - 0x98]	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x400b57d	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      9851	syntax.c	ELSE_2	FUNCTION_157
0x400b581	        0x48895500	                    mov qword [rbp], rdx	      9851	syntax.c	ELSE_2	FUNCTION_157
0x400b585	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      9852	syntax.c	ELSE_2	FUNCTION_157
0x400b589	          0x488913	                    mov qword [rbx], rdx	      9852	syntax.c	ELSE_2	FUNCTION_157
0x400b58c	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      9853	syntax.c	ELSE_2	FUNCTION_157
0x400b58f	              0x5b	                                 pop rbx	      9854	syntax.c	ELSE_2	FUNCTION_157
0x400b590	              0x5d	                                 pop rbp	      9854	syntax.c	ELSE_2	FUNCTION_157
0x400b591	              0xc3	                                     ret	      9854	syntax.c	ELSE_2	FUNCTION_157
syn_start_line	IF,1:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	13
0x4007f17	        0x4883ec08	                              sub rsp, 8	      1059	syntax.c	FUNCTION_9
0x4007f1b	    0xc70500000000	               mov dword [0x04007f25], 0	      1060	syntax.c	FUNCTION_9
0x4007f25	    0xc70500000000	               mov dword [0x04007f2f], 0	      1061	syntax.c	FUNCTION_9
0x4007f2f	    0x833d00000000	               cmp dword [0x04007f36], 0	      1067	syntax.c	FUNCTION_9	IF_1
0x4007f36	            0x7e0f	                           jle 0x4007f47	      1067	syntax.c	FUNCTION_9	IF_1
0x4007f38	      0xbf01000000	                              mov edi, 1	      1069	syntax.c	FUNCTION_9	IF_1	CALL_1
0x4007f3d	      0xe88c93ffff	                call sym.syn_update_ends	      1069	syntax.c	FUNCTION_9	IF_1	CALL_1
0x4007f42	      0xe865fdffff	               call sym.check_state_ends	      1070	syntax.c	FUNCTION_9	IF_1	CALL_2
0x4007f47	    0xc70500000000	     mov dword [0x04007f51], 0xffffffff 	      1073	syntax.c	FUNCTION_9
0x4007f51	    0x830500000000	               add dword [0x04007f58], 1	      1074	syntax.c	FUNCTION_9
0x4007f58	    0xc70500000000	               mov dword [0x04007f62], 1	      1076	syntax.c	FUNCTION_9
0x4007f62	        0x4883c408	                              add rsp, 8	      1078	syntax.c	FUNCTION_9
0x4007f66	              0xc3	                                     ret	      1078	syntax.c	FUNCTION_9
syn_list_flags	IF,1:CALL,2:FOR,1:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	33
0x40026e2	            0x8b0f	                    mov ecx, dword [rdi]	      4187	syntax.c	FUNCTION_67	FOR_1
0x40026e4	            0x85c9	                           test ecx, ecx	      4187	syntax.c	FUNCTION_67	FOR_1
0x40026e6	            0x7453	                            je 0x400273b	      4187	syntax.c	FUNCTION_67	FOR_1
0x40026e8	            0x4155	                                push r13	      4184	syntax.c	FUNCTION_67
0x40026ea	            0x4154	                                push r12	      4184	syntax.c	FUNCTION_67
0x40026ec	              0x55	                                push rbp	      4184	syntax.c	FUNCTION_67
0x40026ed	              0x53	                                push rbx	      4184	syntax.c	FUNCTION_67
0x40026ee	        0x4883ec08	                              sub rsp, 8	      4184	syntax.c	FUNCTION_67
0x40026f2	          0x4189d5	                           mov r13d, edx	      4184	syntax.c	FUNCTION_67
0x40026f5	          0x4189f4	                           mov r12d, esi	      4184	syntax.c	FUNCTION_67
0x40026f8	          0x4889fd	                            mov rbp, rdi	      4184	syntax.c	FUNCTION_67
0x40026fb	          0x4889f8	                            mov rax, rdi	      4187	syntax.c	FUNCTION_67	FOR_1
0x40026fe	      0xbb00000000	                              mov ebx, 0	      4187	syntax.c	FUNCTION_67	FOR_1
0x4002703	          0x4185cc	                          test r12d, ecx	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4002706	            0x7416	                            je 0x400271e	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4002708	        0x488b7808	                mov rdi, qword [rax + 8]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x400270c	          0x4489ee	                           mov esi, r13d	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x400270f	      0xe800000000	                          call 0x4002714	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4002714	      0xbf20000000	                           mov edi, 0x20	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x4002719	      0xe800000000	                          call 0x400271e	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x400271e	          0x83c301	                              add ebx, 1	      4187	syntax.c	FUNCTION_67	FOR_1
0x4002721	          0x4863c3	                         movsxd rax, ebx	      4187	syntax.c	FUNCTION_67	FOR_1
0x4002724	        0x48c1e004	                              shl rax, 4	      4187	syntax.c	FUNCTION_67	FOR_1
0x4002728	          0x4801e8	                            add rax, rbp	      4187	syntax.c	FUNCTION_67	FOR_1
0x400272b	            0x8b08	                    mov ecx, dword [rax]	      4187	syntax.c	FUNCTION_67	FOR_1
0x400272d	            0x85c9	                           test ecx, ecx	      4187	syntax.c	FUNCTION_67	FOR_1
0x400272f	            0x75d2	                           jne 0x4002703	      4187	syntax.c	FUNCTION_67	FOR_1
0x4002731	        0x4883c408	                              add rsp, 8	      4193	syntax.c	FUNCTION_67
0x4002735	              0x5b	                                 pop rbx	      4193	syntax.c	FUNCTION_67
0x4002736	              0x5d	                                 pop rbp	      4193	syntax.c	FUNCTION_67
0x4002737	            0x415c	                                 pop r12	      4193	syntax.c	FUNCTION_67
0x4002739	            0x415d	                                 pop r13	      4193	syntax.c	FUNCTION_67
0x400273b	            0xf3c3	                                     ret	      4193	syntax.c	FUNCTION_67
syn_name2attr	IF,1:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	9
0x400b37b	        0x4883ec08	                              sub rsp, 8	      9654	syntax.c	FUNCTION_149
0x400b37f	      0xe800000000	                          call 0x400b384	      9655	syntax.c	FUNCTION_149	CALL_1
0x400b384	            0x89c7	                            mov edi, eax	      9655	syntax.c	FUNCTION_149	CALL_1
0x400b386	      0xb800000000	                              mov eax, 0	      9659	syntax.c	FUNCTION_149
0x400b38b	            0x85ff	                           test edi, edi	      9657	syntax.c	FUNCTION_149	IF_1
0x400b38d	            0x7405	                            je 0x400b394	      9657	syntax.c	FUNCTION_149	IF_1
0x400b38f	      0xe800000000	                          call 0x400b394	      9658	syntax.c	FUNCTION_149	CALL_2
0x400b394	        0x4883c408	                              add rsp, 8	      9660	syntax.c	FUNCTION_149
0x400b398	              0xc3	                                     ret	      9660	syntax.c	FUNCTION_149
load_colors	IF,2:CALL,7:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	49
0x40041a2	      0xb801000000	                              mov eax, 1	      7221	syntax.c	FUNCTION_114	IF_1
0x40041a7	    0x833d00000000	               cmp dword [0x040041ae], 0	      7220	syntax.c	FUNCTION_114	IF_1
0x40041ae	     0xf85bf000000	                           jne 0x4004273	      7220	syntax.c	FUNCTION_114	IF_1
0x40041b4	            0x4154	                                push r12	      7212	syntax.c	FUNCTION_114
0x40041b6	              0x55	                                push rbp	      7212	syntax.c	FUNCTION_114
0x40041b7	              0x53	                                push rbx	      7212	syntax.c	FUNCTION_114
0x40041b8	          0x4889fd	                            mov rbp, rdi	      7212	syntax.c	FUNCTION_114
0x40041bb	    0xc70500000000	               mov dword [0x040041c5], 1	      7223	syntax.c	FUNCTION_114
0x40041c5	      0xb800000000	                              mov eax, 0	      7224	syntax.c	FUNCTION_114	CALL_2
0x40041ca	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7224	syntax.c	FUNCTION_114	CALL_2
0x40041d1	            0xf2ae	              repne scasb al, byte [rdi]	      7224	syntax.c	FUNCTION_114	CALL_2
0x40041d3	          0x48f7d1	                                 not rcx	      7224	syntax.c	FUNCTION_114	CALL_2
0x40041d6	          0x8d790b	                    lea edi, [rcx + 0xb]	      7224	syntax.c	FUNCTION_114	CALL_2
0x40041d9	      0xe800000000	                          call 0x40041de	      7224	syntax.c	FUNCTION_114	CALL_2
0x40041de	          0x4989c4	                            mov r12, rax	      7224	syntax.c	FUNCTION_114	CALL_2
0x40041e1	      0xbb00000000	                              mov ebx, 0	      7214	syntax.c	FUNCTION_114
0x40041e6	          0x4885c0	                           test rax, rax	      7225	syntax.c	FUNCTION_114	IF_2
0x40041e9	            0x7478	                            je 0x4004263	      7225	syntax.c	FUNCTION_114	IF_2
0x40041eb	    0x4c8b05000000	              mov r8, qword [0x040041f2]	      7228	syntax.c	FUNCTION_114	IF_2
0x40041f2	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x40041f9	      0xb900000000	                              mov ecx, 0	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x40041fe	          0x4889ee	                            mov rsi, rbp	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x4004201	      0xbf1a000000	                           mov edi, 0x1a	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x4004206	      0xe800000000	                          call 0x400420b	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x400420b	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_170	CALL_2
0x400420e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x4004213	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_170	CALL_2
0x400421a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_170	CALL_2
0x400421f	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_170	CALL_2
0x4004222	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_170	CALL_2
0x4004227	      0xe800000000	                          call 0x400422c	        33	stdio2.h	FUNCTION_170	CALL_2
0x400422c	      0xbe18000000	                           mov esi, 0x18	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0x4004231	          0x4c89e7	                            mov rdi, r12	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0x4004234	      0xe800000000	                          call 0x4004239	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0x4004239	            0x89c3	                            mov ebx, eax	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0x400423b	          0x4c89e7	                            mov rdi, r12	      7231	syntax.c	FUNCTION_114	IF_2	CALL_6
0x400423e	      0xe800000000	                          call 0x4004243	      7231	syntax.c	FUNCTION_114	IF_2	CALL_6
0x4004243	    0x4c8b05000000	              mov r8, qword [0x0400424a]	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x400424a	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x4004251	      0xb900000000	                              mov ecx, 0	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x4004256	          0x4889ee	                            mov rsi, rbp	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x4004259	      0xbf19000000	                           mov edi, 0x19	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x400425e	      0xe800000000	                          call 0x4004263	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x4004263	    0xc70500000000	               mov dword [0x0400426d], 0	      7234	syntax.c	FUNCTION_114
0x400426d	            0x89d8	                            mov eax, ebx	      7236	syntax.c	FUNCTION_114
0x400426f	              0x5b	                                 pop rbx	      7237	syntax.c	FUNCTION_114
0x4004270	              0x5d	                                 pop rbp	      7237	syntax.c	FUNCTION_114
0x4004271	            0x415c	                                 pop r12	      7237	syntax.c	FUNCTION_114
0x4004273	            0xf3c3	                                     ret	      7237	syntax.c	FUNCTION_114
syn_remove_pattern	IF,1:CALL,3:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	28
0x4001626	            0x4154	                                push r12	      3707	syntax.c	FUNCTION_52
0x4001628	              0x55	                                push rbp	      3707	syntax.c	FUNCTION_52
0x4001629	              0x53	                                push rbx	      3707	syntax.c	FUNCTION_52
0x400162a	          0x4989fc	                            mov r12, rdi	      3707	syntax.c	FUNCTION_52
0x400162d	            0x89f3	                            mov ebx, esi	      3707	syntax.c	FUNCTION_52
0x400162f	          0x4863c6	                         movsxd rax, esi	      3710	syntax.c	FUNCTION_52	CALL_1
0x4001632	        0x488d2c80	                  lea rbp, [rax + rax*4]	      3710	syntax.c	FUNCTION_52	CALL_1
0x4001636	        0x48c1e505	                              shl rbp, 5	      3710	syntax.c	FUNCTION_52	CALL_1
0x400163a	    0x4803af700200	            add rbp, qword [rdi + 0x270]	      3710	syntax.c	FUNCTION_52	CALL_1
0x4001641	        0xf6452520	           test byte [rbp + 0x25], 0x20 	      3712	syntax.c	FUNCTION_52	IF_1
0x4001645	            0x7407	                            je 0x400164e	      3712	syntax.c	FUNCTION_52	IF_1
0x4001647	    0x83af0c030000	              sub dword [rdi + 0x30c], 1	      3713	syntax.c	FUNCTION_52	IF_1
0x400164e	            0x89de	                            mov esi, ebx	      3715	syntax.c	FUNCTION_52	CALL_2
0x4001650	          0x4c89e7	                            mov rdi, r12	      3715	syntax.c	FUNCTION_52	CALL_2
0x4001653	      0xe849ffffff	              call sym.syn_clear_pattern	      3715	syntax.c	FUNCTION_52	CALL_2
0x4001658	            0xf7d3	                                 not ebx	        59	string3.h	FUNCTION_191	CALL_3
0x400165a	    0x41039c246002	            add ebx, dword [r12 + 0x260]	        59	string3.h	FUNCTION_191	CALL_3
0x4001662	          0x4863db	                         movsxd rbx, ebx	        59	string3.h	FUNCTION_191	CALL_3
0x4001665	        0x488d149b	                  lea rdx, [rbx + rbx*4]	        59	string3.h	FUNCTION_191	CALL_3
0x4001669	        0x48c1e205	                              shl rdx, 5	        59	string3.h	FUNCTION_191	CALL_3
0x400166d	    0x488db5a00000	                   lea rsi, [rbp + 0xa0]	        59	string3.h	FUNCTION_191	CALL_3
0x4001674	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_191	CALL_3
0x4001677	      0xe800000000	                          call 0x400167c	        59	string3.h	FUNCTION_191	CALL_3
0x400167c	    0x4183ac246002	              sub dword [r12 + 0x260], 1	      3718	syntax.c	FUNCTION_52
0x4001685	              0x5b	                                 pop rbx	      3719	syntax.c	FUNCTION_52
0x4001686	              0x5d	                                 pop rbp	      3719	syntax.c	FUNCTION_52
0x4001687	            0x415c	                                 pop r12	      3719	syntax.c	FUNCTION_52
0x4001689	              0xc3	                                     ret	      3719	syntax.c	FUNCTION_52
syn_cmd_match	IF,8:CALL,32:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	196
0x4007283	            0x4155	                                push r13	      5027	syntax.c	FUNCTION_80
0x4007285	            0x4154	                                push r12	      5027	syntax.c	FUNCTION_80
0x4007287	              0x55	                                push rbp	      5027	syntax.c	FUNCTION_80
0x4007288	              0x53	                                push rbx	      5027	syntax.c	FUNCTION_80
0x4007289	    0x4881ecf80000	                           sub rsp, 0xf8	      5027	syntax.c	FUNCTION_80
0x4007290	          0x4889fb	                            mov rbx, rdi	      5027	syntax.c	FUNCTION_80
0x4007293	          0x4189f4	                           mov r12d, esi	      5027	syntax.c	FUNCTION_80
0x4007296	    0x64488b042528	                mov rax, qword fs:[0x28]	      5027	syntax.c	FUNCTION_80
0x400729f	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      5027	syntax.c	FUNCTION_80
0x40072a7	            0x31c0	                            xor eax, eax	      5027	syntax.c	FUNCTION_80
0x40072a9	          0x488b2f	                    mov rbp, qword [rdi]	      5028	syntax.c	FUNCTION_80
0x40072ac	    0xc70424000000	                      mov dword [rsp], 0	      5035	syntax.c	FUNCTION_80
0x40072b3	    0xc74424040000	                  mov dword [rsp + 4], 0	      5036	syntax.c	FUNCTION_80
0x40072bb	      0x488d742408	                      lea rsi, [rsp + 8]	      5039	syntax.c	FUNCTION_80	CALL_1
0x40072c0	          0x4889ef	                            mov rdi, rbp	      5039	syntax.c	FUNCTION_80	CALL_1
0x40072c3	      0xe840a4ffff	                 call sym.get_group_name	      5039	syntax.c	FUNCTION_80	CALL_1
0x40072c8	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5042	syntax.c	FUNCTION_80
0x40072d0	    0xc74424140000	               mov dword [rsp + 0x14], 0	      5043	syntax.c	FUNCTION_80
0x40072d8	          0x4889e2	                            mov rdx, rsp	      5044	syntax.c	FUNCTION_80
0x40072db	          0x4585e4	                         test r12d, r12d	      5044	syntax.c	FUNCTION_80
0x40072de	      0xb900000000	                              mov ecx, 0	      5044	syntax.c	FUNCTION_80
0x40072e3	        0x480f44d1	                          cmove rdx, rcx	      5044	syntax.c	FUNCTION_80
0x40072e7	      0x4889542418	             mov qword [rsp + 0x18], rdx	      5044	syntax.c	FUNCTION_80
0x40072ec	      0xc644242001	                mov byte [rsp + 0x20], 1	      5045	syntax.c	FUNCTION_80
0x40072f1	    0x48c744242800	               mov qword [rsp + 0x28], 0	      5046	syntax.c	FUNCTION_80
0x40072fa	    0x48c744243000	               mov qword [rsp + 0x30], 0	      5047	syntax.c	FUNCTION_80
0x4007303	    0x48c744243800	               mov qword [rsp + 0x38], 0	      5048	syntax.c	FUNCTION_80
0x400730c	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      5049	syntax.c	FUNCTION_80	CALL_2
0x400730f	      0x488d542404	                      lea rdx, [rsp + 4]	      5049	syntax.c	FUNCTION_80	CALL_2
0x4007314	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5049	syntax.c	FUNCTION_80	CALL_2
0x4007319	          0x4889c7	                            mov rdi, rax	      5049	syntax.c	FUNCTION_80	CALL_2
0x400731c	      0xe871f0ffff	                call sym.get_syn_options	      5049	syntax.c	FUNCTION_80	CALL_2
0x4007321	          0x4889c2	                            mov rdx, rax	      5049	syntax.c	FUNCTION_80	CALL_2
0x4007324	    0x488b05000000	            mov rax, qword [0x0400732b] 	      5728	syntax.c	FUNCTION_89
0x400732b	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5728	syntax.c	FUNCTION_89
0x400732f	    0xc78168020000	          mov dword [rcx + 0x268], 0xa0 	      5728	syntax.c	FUNCTION_89
0x4007339	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5729	syntax.c	FUNCTION_89
0x400733d	    0xc7806c020000	            mov dword [rax + 0x26c], 0xa	      5729	syntax.c	FUNCTION_89
0x4007347	      0x488d742440	                   lea rsi, [rsp + 0x40]	        90	string3.h	FUNCTION_193	CALL_6
0x400734c	      0xb914000000	                           mov ecx, 0x14	        90	string3.h	FUNCTION_193	CALL_6
0x4007351	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_193	CALL_6
0x4007356	          0x4889f7	                            mov rdi, rsi	        90	string3.h	FUNCTION_193	CALL_6
0x4007359	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_193	CALL_6
0x400735c	          0x4889d7	                            mov rdi, rdx	      5054	syntax.c	FUNCTION_80	CALL_5
0x400735f	      0xe8eaa3ffff	                call sym.get_syn_pattern	      5054	syntax.c	FUNCTION_80	CALL_5
0x4007364	          0x4989c5	                            mov r13, rax	      5054	syntax.c	FUNCTION_80	CALL_5
0x4007367	      0xe800000000	                          call 0x400736c	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x400736c	            0x85c0	                           test eax, eax	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x400736e	            0x7410	                            je 0x4007380	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4007370	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4007374	          0xf6c408	                              test ah, 8	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4007377	            0x7507	                           jne 0x4007380	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4007379	          0x83c808	                               or eax, 8	      5056	syntax.c	FUNCTION_80	IF_1
0x400737c	        0x89442410	             mov dword [rsp + 0x10], eax	      5056	syntax.c	FUNCTION_80	IF_1
0x4007380	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      5059	syntax.c	FUNCTION_80	CALL_7
0x4007383	      0x488d542404	                      lea rdx, [rsp + 4]	      5059	syntax.c	FUNCTION_80	CALL_7
0x4007388	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5059	syntax.c	FUNCTION_80	CALL_7
0x400738d	          0x4c89ef	                            mov rdi, r13	      5059	syntax.c	FUNCTION_80	CALL_7
0x4007390	      0xe8fdefffff	                call sym.get_syn_options	      5059	syntax.c	FUNCTION_80	CALL_7
0x4007395	          0x4989c5	                            mov r13, rax	      5059	syntax.c	FUNCTION_80	CALL_7
0x4007398	          0x4885c0	                           test rax, rax	      5061	syntax.c	FUNCTION_80	IF_2
0x400739b	     0xf840c020000	                            je 0x40075ad	      5061	syntax.c	FUNCTION_80	IF_2
0x40073a1	          0x4889c7	                            mov rdi, rax	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x40073a4	      0xe800000000	                          call 0x40073a9	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x40073a9	        0x48894308	                mov qword [rbx + 8], rax	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x40073ad	      0x410fb67d00	                   movzx edi, byte [r13]	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x40073b2	      0xe800000000	                          call 0x40073b7	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x40073b7	            0x85c0	                           test eax, eax	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x40073b9	     0xf84ee010000	                            je 0x40075ad	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x40073bf	        0x837b3000	               cmp dword [rbx + 0x30], 0	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x40073c3	     0xf85e4010000	                           jne 0x40075ad	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x40073c9	    0x488b05000000	            mov rax, qword [0x040073d0] 	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40073d0	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40073d4	    0x4881c7600200	                          add rdi, 0x260	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40073db	      0xbe01000000	                              mov esi, 1	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40073e0	      0xe800000000	                          call 0x40073e5	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40073e5	            0x85c0	                           test eax, eax	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40073e7	     0xf8486010000	                            je 0x4007573	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40073ed	      0x488b742408	                mov rsi, qword [rsp + 8]	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x40073f2	          0x4829ee	                            sub rsi, rbp	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x40073f5	          0x4889ef	                            mov rdi, rbp	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x40073f8	      0xe800000000	                          call 0x40073fd	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x40073fd	            0x89c3	                            mov ebx, eax	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x40073ff	            0x85c0	                           test eax, eax	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4007401	     0xf846c010000	                            je 0x4007573	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4007407	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x400740c	            0x89c7	                            mov edi, eax	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x400740e	      0xe8cbaeffff	              call sym.syn_incl_toplevel	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x4007413	    0x488b05000000	            mov rax, qword [0x0400741a] 	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400741a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400741e	    0x486382600200	        movsxd rax, dword [rdx + 0x260] 	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x4007425	        0x488d0480	                  lea rax, [rax + rax*4]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x4007429	        0x48c1e005	                              shl rax, 5	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x400742d	          0x4889c7	                            mov rdi, rax	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x4007430	    0x4803ba700200	            add rdi, qword [rdx + 0x270]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x4007437	      0x488d742440	                   lea rsi, [rsp + 0x40]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x400743c	      0xb914000000	                           mov ecx, 0x14	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x4007441	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x4007444	    0x488b15000000	            mov rdx, qword [0x0400744b] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x400744b	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x400744f	    0x488b92700200	           mov rdx, qword [rdx + 0x270] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x4007456	      0x4488640201	          mov byte [rdx + rax + 1], r12b	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x400745b	    0x488b15000000	            mov rdx, qword [0x04007462] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x4007462	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x4007466	    0x488b92700200	           mov rdx, qword [rdx + 0x270] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x400746d	        0xc6040201	                 mov byte [rdx + rax], 1	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x4007471	    0x488b15000000	            mov rdx, qword [0x04007478] 	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x4007478	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x400747c	    0x488b89700200	           mov rcx, qword [rcx + 0x270] 	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x4007483	      0x66895c0154	         mov word [rcx + rax + 0x54], bx	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x4007488	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x400748c	    0x488b89700200	           mov rcx, qword [rcx + 0x270] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x4007493	    0x8b3500000000	            mov esi, dword [0x04007499] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x4007499	        0x89740150	       mov dword [rcx + rax + 0x50], esi	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x400749d	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x40074a1	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x40074a5	    0x488bb6700200	           mov rsi, qword [rsi + 0x270] 	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x40074ac	        0x894c0624	       mov dword [rsi + rax + 0x24], ecx	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x40074b0	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x40074b4	    0x488bb6700200	           mov rsi, qword [rsi + 0x270] 	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x40074bb	          0x8b3c24	                    mov edi, dword [rsp]	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x40074be	        0x897c0630	       mov dword [rsi + rax + 0x30], edi	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x40074c2	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x40074c6	    0x488bb6700200	           mov rsi, qword [rsi + 0x270] 	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x40074cd	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x40074d2	      0x48897c0640	       mov qword [rsi + rax + 0x40], rdi	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x40074d7	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      5087	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40074dc	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x40074e0	    0x488bbf700200	           mov rdi, qword [rdi + 0x270] 	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x40074e7	      0x4889740758	       mov qword [rdi + rax + 0x58], rsi	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x40074ec	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x40074f0	    0x488bbf700200	           mov rdi, qword [rdi + 0x270] 	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x40074f7	      0x448b442404	                mov r8d, dword [rsp + 4]	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x40074fc	      0x4489440728	       mov dword [rdi + rax + 0x28], r8d	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x4007501	          0x4885f6	                           test rsi, rsi	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x4007504	            0x740e	                            je 0x4007514	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x4007506	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      5092	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x400750a	    0xc78698020000	              mov dword [rsi + 0x298], 1	      5092	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x4007514	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x4007518	    0x488bb6700200	           mov rsi, qword [rsi + 0x270] 	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x400751f	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x4007524	      0x48897c0648	       mov qword [rsi + rax + 0x48], rdi	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x4007529	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400752d	    0x838060020000	              add dword [rax + 0x260], 1	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007534	          0xf6c130	                           test cl, 0x30	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x4007537	            0x740b	                            je 0x4007544	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x4007539	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x400753d	    0x83889c020000	               or dword [rax + 0x29c], 2	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x4007544	          0xf6c520	                           test ch, 0x20	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4007547	            0x740b	                            je 0x4007554	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4007549	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x400754d	    0x83800c030000	              add dword [rax + 0x30c], 1	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4007554	      0xbf23000000	                           mov edi, 0x23	      5104	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_24
0x4007559	      0xe800000000	                          call 0x400755e	      5104	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_24
0x400755e	    0x488b05000000	            mov rax, qword [0x04007565] 	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_25
0x4007565	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_25
0x4007569	      0xe800000000	                          call 0x400756e	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_25
0x400756e	      0xe991000000	                           jmp 0x4007604	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_25
0x4007573	    0x488bbc24a800	            mov rdi, qword [rsp + 0xa8] 	      5113	syntax.c	FUNCTION_80	CALL_26
0x400757b	      0xe800000000	                          call 0x4007580	      5113	syntax.c	FUNCTION_80	CALL_26
0x4007580	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	      5114	syntax.c	FUNCTION_80	CALL_27
0x4007588	      0xe800000000	                          call 0x400758d	      5114	syntax.c	FUNCTION_80	CALL_27
0x400758d	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5115	syntax.c	FUNCTION_80	CALL_28
0x4007592	      0xe800000000	                          call 0x4007597	      5115	syntax.c	FUNCTION_80	CALL_28
0x4007597	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      5116	syntax.c	FUNCTION_80	CALL_29
0x400759c	      0xe800000000	                          call 0x40075a1	      5116	syntax.c	FUNCTION_80	CALL_29
0x40075a1	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5117	syntax.c	FUNCTION_80	CALL_30
0x40075a6	      0xe800000000	                          call 0x40075ab	      5117	syntax.c	FUNCTION_80	CALL_30
0x40075ab	            0xeb57	                           jmp 0x4007604	      5117	syntax.c	FUNCTION_80	CALL_30
0x40075ad	    0x488bbc24a800	            mov rdi, qword [rsp + 0xa8] 	      5113	syntax.c	FUNCTION_80	CALL_26
0x40075b5	      0xe800000000	                          call 0x40075ba	      5113	syntax.c	FUNCTION_80	CALL_26
0x40075ba	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	      5114	syntax.c	FUNCTION_80	CALL_27
0x40075c2	      0xe800000000	                          call 0x40075c7	      5114	syntax.c	FUNCTION_80	CALL_27
0x40075c7	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5115	syntax.c	FUNCTION_80	CALL_28
0x40075cc	      0xe800000000	                          call 0x40075d1	      5115	syntax.c	FUNCTION_80	CALL_28
0x40075d1	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      5116	syntax.c	FUNCTION_80	CALL_29
0x40075d6	      0xe800000000	                          call 0x40075db	      5116	syntax.c	FUNCTION_80	CALL_29
0x40075db	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5117	syntax.c	FUNCTION_80	CALL_30
0x40075e0	      0xe800000000	                          call 0x40075e5	      5117	syntax.c	FUNCTION_80	CALL_30
0x40075e5	      0xba05000000	                              mov edx, 5	      5120	syntax.c	FUNCTION_80	CALL_32
0x40075ea	      0xbe00000000	                              mov esi, 0	      5120	syntax.c	FUNCTION_80	CALL_32
0x40075ef	      0xbf00000000	                              mov edi, 0	      5120	syntax.c	FUNCTION_80	CALL_32
0x40075f4	      0xe800000000	                          call 0x40075f9	      5120	syntax.c	FUNCTION_80	CALL_32
0x40075f9	          0x4889ee	                            mov rsi, rbp	      5120	syntax.c	FUNCTION_80	CALL_32
0x40075fc	          0x4889c7	                            mov rdi, rax	      5120	syntax.c	FUNCTION_80	CALL_32
0x40075ff	      0xe800000000	                          call 0x4007604	      5120	syntax.c	FUNCTION_80	CALL_32
0x4007604	    0x488b8424e800	            mov rax, qword [rsp + 0xe8] 	      5121	syntax.c	FUNCTION_80
0x400760c	    0x644833042528	                xor rax, qword fs:[0x28]	      5121	syntax.c	FUNCTION_80
0x4007615	            0x7405	                            je 0x400761c	      5121	syntax.c	FUNCTION_80
0x4007617	      0xe800000000	                          call 0x400761c	      5121	syntax.c	FUNCTION_80
0x400761c	    0x4881c4f80000	                           add rsp, 0xf8	      5121	syntax.c	FUNCTION_80
0x4007623	              0x5b	                                 pop rbx	      5121	syntax.c	FUNCTION_80
0x4007624	              0x5d	                                 pop rbp	      5121	syntax.c	FUNCTION_80
0x4007625	            0x415c	                                 pop r12	      5121	syntax.c	FUNCTION_80
0x4007627	            0x415d	                                 pop r13	      5121	syntax.c	FUNCTION_80
0x4007629	              0xc3	                                     ret	      5121	syntax.c	FUNCTION_80
syn_lines_msg	IF,4:CALL,10:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	51
0x40023ab	        0x4883ec08	                              sub rsp, 8	      4026	syntax.c	FUNCTION_64
0x40023af	    0x488b05000000	            mov rax, qword [0x040023b6] 	      4027	syntax.c	FUNCTION_64	IF_1
0x40023b6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4027	syntax.c	FUNCTION_64	IF_1
0x40023ba	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      4027	syntax.c	FUNCTION_64	IF_1
0x40023c2	            0x7f0e	                            jg 0x40023d2	      4027	syntax.c	FUNCTION_64	IF_1
0x40023c4	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      4028	syntax.c	FUNCTION_64	IF_1
0x40023cc	     0xf8ed5000000	                           jle 0x40024a7	      4028	syntax.c	FUNCTION_64	IF_1
0x40023d2	      0xbf00000000	                              mov edi, 0	      4030	syntax.c	FUNCTION_64	IF_1	CALL_1
0x40023d7	      0xe800000000	                          call 0x40023dc	      4030	syntax.c	FUNCTION_64	IF_1	CALL_1
0x40023dc	    0x488b05000000	            mov rax, qword [0x040023e3] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x40023e3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x40023e7	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x40023ef	            0x7e52	                           jle 0x4002443	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x40023f1	      0xba05000000	                              mov edx, 5	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x40023f6	      0xbe00000000	                              mov esi, 0	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x40023fb	      0xbf00000000	                              mov edi, 0	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4002400	      0xe800000000	                          call 0x4002405	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4002405	          0x4889c7	                            mov rdi, rax	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4002408	      0xe800000000	                          call 0x400240d	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x400240d	    0x488b05000000	            mov rax, qword [0x04002414] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x4002414	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x4002418	    0x488bb8a80200	           mov rdi, qword [rax + 0x2a8] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x400241f	      0xe800000000	                          call 0x4002424	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x4002424	    0x488b05000000	            mov rax, qword [0x0400242b] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x400242b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x400242f	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x4002437	            0x7452	                            je 0x400248b	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x4002439	      0xbf00000000	                              mov edi, 0	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x400243e	      0xe800000000	                          call 0x4002443	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x4002443	    0x488b05000000	            mov rax, qword [0x0400244a] 	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x400244a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x400244e	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x4002456	            0x7e33	                           jle 0x400248b	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x4002458	      0xba05000000	                              mov edx, 5	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x400245d	      0xbe00000000	                              mov esi, 0	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x4002462	      0xbf00000000	                              mov edi, 0	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x4002467	      0xe800000000	                          call 0x400246c	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x400246c	          0x4889c7	                            mov rdi, rax	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x400246f	      0xe800000000	                          call 0x4002474	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x4002474	    0x488b05000000	            mov rax, qword [0x0400247b] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x400247b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x400247f	    0x488bb8b00200	           mov rdi, qword [rax + 0x2b0] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x4002486	      0xe800000000	                          call 0x400248b	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x400248b	      0xba05000000	                              mov edx, 5	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4002490	      0xbe00000000	                              mov esi, 0	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4002495	      0xbf00000000	                              mov edi, 0	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x400249a	      0xe800000000	                          call 0x400249f	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x400249f	          0x4889c7	                            mov rdi, rax	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x40024a2	      0xe800000000	                          call 0x40024a7	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x40024a7	        0x4883c408	                              add rsp, 8	      4045	syntax.c	FUNCTION_64
0x40024ab	              0xc3	                                     ret	      4045	syntax.c	FUNCTION_64
syn_compare_syntime	IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	4
0x40009b3	        0x4883ec08	                              sub rsp, 8	      6753	syntax.c	FUNCTION_111
0x40009b7	      0xe800000000	                          call 0x40009bc	      6757	syntax.c	FUNCTION_111	CALL_1
0x40009bc	        0x4883c408	                              add rsp, 8	      6758	syntax.c	FUNCTION_111
0x40009c0	              0xc3	                                     ret	      6758	syntax.c	FUNCTION_111
hl_set_font_name	IF,1:CALL,5:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	24
0x400575b	              0x55	                                push rbp	      8540	syntax.c	FUNCTION_124
0x400575c	              0x53	                                push rbx	      8540	syntax.c	FUNCTION_124
0x400575d	        0x4883ec08	                              sub rsp, 8	      8540	syntax.c	FUNCTION_124
0x4005761	          0x4889fd	                            mov rbp, rdi	      8540	syntax.c	FUNCTION_124
0x4005764	      0xbf00000000	                              mov edi, 0	      8543	syntax.c	FUNCTION_124	CALL_1
0x4005769	      0xe800000000	                          call 0x400576e	      8543	syntax.c	FUNCTION_124	CALL_1
0x400576e	            0x85c0	                           test eax, eax	      8544	syntax.c	FUNCTION_124	IF_1
0x4005770	            0x7e39	                           jle 0x40057ab	      8544	syntax.c	FUNCTION_124	IF_1
0x4005772	            0x4898	                                    cdqe	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4005774	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4005778	        0x488d0450	                  lea rax, [rax + rdx*2]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x400577c	        0x48c1e003	                              shl rax, 3	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4005780	    0x488d9868ffff	                   lea rbx, [rax - 0x98]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4005787	    0x488b15000000	            mov rdx, qword [0x0400578e] 	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x400578e	      0x488b7c02c8	       mov rdi, qword [rdx + rax - 0x38]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4005793	      0xe800000000	                          call 0x4005798	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4005798	    0x48031d000000	             add rbx, qword [0x0400579f]	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x400579f	          0x4889ef	                            mov rdi, rbp	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x40057a2	      0xe800000000	                          call 0x40057a7	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x40057a7	        0x48894360	             mov qword [rbx + 0x60], rax	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x40057ab	        0x4883c408	                              add rsp, 8	      8549	syntax.c	FUNCTION_124
0x40057af	              0x5b	                                 pop rbx	      8549	syntax.c	FUNCTION_124
0x40057b0	              0x5d	                                 pop rbp	      8549	syntax.c	FUNCTION_124
0x40057b1	              0xc3	                                     ret	      8549	syntax.c	FUNCTION_124
syn_get_stack_item	IF,1:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	15
0x4003c42	    0x393d00000000	            cmp dword [0x04003c48], edi 	      6623	syntax.c	FUNCTION_105	IF_1
0x4003c48	            0x7f1a	                            jg 0x4003c64	      6623	syntax.c	FUNCTION_105	IF_1
0x4003c4a	        0x4883ec08	                              sub rsp, 8	      6622	syntax.c	FUNCTION_105
0x4003c4e	      0xe8a6caffff	       call sym.invalidate_current_state	      6627	syntax.c	FUNCTION_105	IF_1	CALL_1
0x4003c53	    0xc70500000000	     mov dword [0x04003c5d], 0x7fffffff 	      6628	syntax.c	FUNCTION_105	IF_1
0x4003c5d	      0xb8ffffffff	                     mov eax, 0xffffffff	      6629	syntax.c	FUNCTION_105	IF_1
0x4003c62	            0xeb16	                           jmp 0x4003c7a	      6629	syntax.c	FUNCTION_105	IF_1
0x4003c64	          0x4863ff	                         movsxd rdi, edi	      6631	syntax.c	FUNCTION_105	CALL_2
0x4003c67	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      6631	syntax.c	FUNCTION_105	CALL_2
0x4003c6b	        0x48c1e004	                              shl rax, 4	      6631	syntax.c	FUNCTION_105	CALL_2
0x4003c6f	    0x480305000000	             add rax, qword [0x04003c76]	      6631	syntax.c	FUNCTION_105	CALL_2
0x4003c76	          0x8b4004	                mov eax, dword [rax + 4]	      6631	syntax.c	FUNCTION_105	CALL_2
0x4003c79	              0xc3	                                     ret	      6631	syntax.c	FUNCTION_105	CALL_2
0x4003c7a	        0x4883c408	                              add rsp, 8	      6632	syntax.c	FUNCTION_105
0x4003c7e	              0xc3	                                     ret	      6632	syntax.c	FUNCTION_105
clear_syn_state	IF,1:CALL,4:FOR,2:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	38
0x40004d5	            0x4154	                                push r12	       694	syntax.c	FUNCTION_3
0x40004d7	              0x55	                                push rbp	       694	syntax.c	FUNCTION_3
0x40004d8	              0x53	                                push rbx	       694	syntax.c	FUNCTION_3
0x40004d9	          0x4889fd	                            mov rbp, rdi	       694	syntax.c	FUNCTION_3
0x40004dc	    0x8b87bc000000	            mov eax, dword [rdi + 0xbc] 	       698	syntax.c	FUNCTION_3	IF_1
0x40004e2	          0x83f807	                              cmp eax, 7	       698	syntax.c	FUNCTION_3	IF_1
0x40004e5	            0x7f0f	                            jg 0x40004f6	       698	syntax.c	FUNCTION_3	IF_1
0x40004e7	        0x4c8d6720	                   lea r12, [rdi + 0x20]	       698	syntax.c	FUNCTION_3	IF_1
0x40004eb	      0xbb00000000	                              mov ebx, 0	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x40004f0	            0x85c0	                           test eax, eax	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x40004f2	            0x7f3b	                            jg 0x400052f	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x40004f4	            0xeb51	                           jmp 0x4000547	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x40004f6	        0x4c8d6710	                   lea r12, [rdi + 0x10]	       700	syntax.c	FUNCTION_3	IF_1
0x40004fa	        0x837f1000	               cmp dword [rdi + 0x10], 0	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x40004fe	            0x7e25	                           jle 0x4000525	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4000500	      0xbb00000000	                              mov ebx, 0	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4000505	          0x4863c3	                         movsxd rax, ebx	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4000508	        0x488d0440	                  lea rax, [rax + rax*2]	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x400050c	        0x48c1e003	                              shl rax, 3	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4000510	        0x48034520	             add rax, qword [rbp + 0x20]	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4000514	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4000518	      0xe800000000	                          call 0x400051d	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x400051d	          0x83c301	                              add ebx, 1	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4000520	          0x395d10	            cmp dword [rbp + 0x10], ebx 	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4000523	            0x7fe0	                            jg 0x4000505	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4000525	          0x4c89e7	                            mov rdi, r12	       703	syntax.c	FUNCTION_3	IF_1	CALL_3
0x4000528	      0xe800000000	                          call 0x400052d	       703	syntax.c	FUNCTION_3	IF_1	CALL_3
0x400052d	            0xeb18	                           jmp 0x4000547	       703	syntax.c	FUNCTION_3	IF_1	CALL_3
0x400052f	        0x498b3c24	                    mov rdi, qword [r12]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x4000533	      0xe800000000	                          call 0x4000538	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x4000538	          0x83c301	                              add ebx, 1	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x400053b	        0x4983c418	                           add r12, 0x18	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x400053f	    0x399dbc000000	            cmp dword [rbp + 0xbc], ebx 	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4000545	            0x7fe8	                            jg 0x400052f	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4000547	              0x5b	                                 pop rbx	       710	syntax.c	FUNCTION_3
0x4000548	              0x5d	                                 pop rbp	       710	syntax.c	FUNCTION_3
0x4000549	            0x415c	                                 pop r12	       710	syntax.c	FUNCTION_3
0x400054b	              0xc3	                                     ret	       710	syntax.c	FUNCTION_3
syn_get_id	IF,2:CALL,2:FOR,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:functions,0	35
0x4009fd4	            0x4155	                                push r13	      6571	syntax.c	FUNCTION_102
0x4009fd6	            0x4154	                                push r12	      6571	syntax.c	FUNCTION_102
0x4009fd8	              0x55	                                push rbp	      6571	syntax.c	FUNCTION_102
0x4009fd9	              0x53	                                push rbx	      6571	syntax.c	FUNCTION_102
0x4009fda	        0x4883ec08	                              sub rsp, 8	      6571	syntax.c	FUNCTION_102
0x4009fde	            0x89d3	                            mov ebx, edx	      6571	syntax.c	FUNCTION_102
0x4009fe0	            0x89cd	                            mov ebp, ecx	      6571	syntax.c	FUNCTION_102
0x4009fe2	          0x4d89c4	                             mov r12, r8	      6571	syntax.c	FUNCTION_102
0x4009fe5	          0x4589cd	                           mov r13d, r9d	      6571	syntax.c	FUNCTION_102
0x4009fe8	    0x488b05000000	            mov rax, qword [0x04009fef] 	      6574	syntax.c	FUNCTION_102	IF_1
0x4009fef	        0x48394708	                cmp qword [rdi + 8], rax	      6574	syntax.c	FUNCTION_102	IF_1
0x4009ff3	            0x7513	                           jne 0x400a008	      6574	syntax.c	FUNCTION_102	IF_1
0x4009ff5	    0x483935000000	            cmp qword [0x04009ffc], rsi 	      6575	syntax.c	FUNCTION_102	IF_1
0x4009ffc	            0x750a	                           jne 0x400a008	      6575	syntax.c	FUNCTION_102	IF_1
0x4009ffe	    0x8b0500000000	            mov eax, dword [0x0400a004] 	      6576	syntax.c	FUNCTION_102	IF_1
0x400a004	            0x39d0	                            cmp eax, edx	      6576	syntax.c	FUNCTION_102	IF_1
0x400a006	            0x7e07	                           jle 0x400a00f	      6576	syntax.c	FUNCTION_102	IF_1
0x400a008	      0xe800000000	                          call 0x400a00d	      6577	syntax.c	FUNCTION_102	CALL_1
0x400a00d	            0xeb0e	                           jmp 0x400a01d	      6577	syntax.c	FUNCTION_102	CALL_1
0x400a00f	            0x39d0	                            cmp eax, edx	      6580	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400a011	            0x7d0a	                           jge 0x400a01d	      6580	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400a013	    0xc70500000000	     mov dword [0x0400a01d], 0xffffffff 	      6583	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400a01d	          0x4489ea	                           mov edx, r13d	      6585	syntax.c	FUNCTION_102	CALL_2
0x400a020	          0x4c89e6	                            mov rsi, r12	      6585	syntax.c	FUNCTION_102	CALL_2
0x400a023	            0x89df	                            mov edi, ebx	      6585	syntax.c	FUNCTION_102	CALL_2
0x400a025	      0xe800000000	                          call 0x400a02a	      6585	syntax.c	FUNCTION_102	CALL_2
0x400a02a	            0x85ed	                           test ebp, ebp	      6587	syntax.c	FUNCTION_102
0x400a02c	    0x8b0500000000	            mov eax, dword [0x0400a032] 	      6587	syntax.c	FUNCTION_102
0x400a032	     0xf4405000000	           cmove eax, dword [0x0400a039]	      6587	syntax.c	FUNCTION_102
0x400a039	        0x4883c408	                              add rsp, 8	      6588	syntax.c	FUNCTION_102
0x400a03d	              0x5b	                                 pop rbx	      6588	syntax.c	FUNCTION_102
0x400a03e	              0x5d	                                 pop rbp	      6588	syntax.c	FUNCTION_102
0x400a03f	            0x415c	                                 pop r12	      6588	syntax.c	FUNCTION_102
0x400a041	            0x415d	                                 pop r13	      6588	syntax.c	FUNCTION_102
0x400a043	              0xc3	                                     ret	      6588	syntax.c	FUNCTION_102
highlight_gui_started	IF,1:CALL,3:FOR,1:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	19
0x400ba47	              0x53	                                push rbx	      9905	syntax.c	FUNCTION_160
0x400ba48	    0x833d00000000	               cmp dword [0x0400ba4f], 0	      9909	syntax.c	FUNCTION_160	IF_1
0x400ba4f	            0x7509	                           jne 0x400ba5a	      9909	syntax.c	FUNCTION_160	IF_1
0x400ba51	    0x833d00000000	               cmp dword [0x0400ba58], 0	      9909	syntax.c	FUNCTION_160	IF_1
0x400ba58	            0x7405	                            je 0x400ba5f	      9909	syntax.c	FUNCTION_160	IF_1
0x400ba5a	      0xe800000000	                          call 0x400ba5f	      9910	syntax.c	FUNCTION_160	CALL_1
0x400ba5f	    0x833d00000000	               cmp dword [0x0400ba66], 0	      9912	syntax.c	FUNCTION_160	FOR_1
0x400ba66	            0x7e21	                           jle 0x400ba89	      9912	syntax.c	FUNCTION_160	FOR_1
0x400ba68	      0xbb00000000	                              mov ebx, 0	      9912	syntax.c	FUNCTION_160	FOR_1
0x400ba6d	      0xba00000000	                              mov edx, 0	      9913	syntax.c	FUNCTION_160	CALL_2
0x400ba72	      0xbe00000000	                              mov esi, 0	      9913	syntax.c	FUNCTION_160	CALL_2
0x400ba77	            0x89df	                            mov edi, ebx	      9913	syntax.c	FUNCTION_160	CALL_2
0x400ba79	      0xe8b98fffff	               call sym.gui_do_one_color	      9913	syntax.c	FUNCTION_160	CALL_2
0x400ba7e	          0x83c301	                              add ebx, 1	      9912	syntax.c	FUNCTION_160	FOR_1
0x400ba81	    0x391d00000000	            cmp dword [0x0400ba87], ebx 	      9912	syntax.c	FUNCTION_160	FOR_1
0x400ba87	            0x7fe4	                            jg 0x400ba6d	      9912	syntax.c	FUNCTION_160	FOR_1
0x400ba89	      0xe800000000	                          call 0x400ba8e	      9915	syntax.c	FUNCTION_160	CALL_3
0x400ba8e	              0x5b	                                 pop rbx	      9916	syntax.c	FUNCTION_160
0x400ba8f	              0xc3	                                     ret	      9916	syntax.c	FUNCTION_160
push_current_state	IF,1:CALL,4:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	30
0x4000c16	              0x53	                                push rbx	      2897	syntax.c	FUNCTION_35
0x4000c17	            0x89fb	                            mov ebx, edi	      2897	syntax.c	FUNCTION_35
0x4000c19	      0xbe01000000	                              mov esi, 1	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4000c1e	      0xbf00000000	                              mov edi, 0	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4000c23	      0xe800000000	                          call 0x4000c28	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4000c28	            0x85c0	                           test eax, eax	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4000c2a	            0x746a	                            je 0x4000c96	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4000c2c	    0x486305000000	         movsxd rax, dword [0x04000c33] 	        90	string3.h	FUNCTION_193	CALL_6
0x4000c33	        0x488d0cc0	                  lea rcx, [rax + rax*8]	        90	string3.h	FUNCTION_193	CALL_6
0x4000c37	        0x48c1e104	                              shl rcx, 4	        90	string3.h	FUNCTION_193	CALL_6
0x4000c3b	    0x48030d000000	             add rcx, qword [0x04000c42]	        90	string3.h	FUNCTION_193	CALL_6
0x4000c42	    0x48c701000000	                      mov qword [rcx], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4000c49	    0x48c781880000	               mov qword [rcx + 0x88], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4000c54	        0x488d7908	                      lea rdi, [rcx + 8]	        90	string3.h	FUNCTION_193	CALL_6
0x4000c58	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_193	CALL_6
0x4000c5c	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_193	CALL_6
0x4000c5f	    0x81c190000000	                           add ecx, 0x90	        90	string3.h	FUNCTION_193	CALL_6
0x4000c65	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_193	CALL_6
0x4000c68	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_193	CALL_6
0x4000c6a	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_193	CALL_6
0x4000c6f	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_193	CALL_6
0x4000c72	    0x486305000000	         movsxd rax, dword [0x04000c79] 	      2901	syntax.c	FUNCTION_35	CALL_4
0x4000c79	        0x488d04c0	                  lea rax, [rax + rax*8]	      2901	syntax.c	FUNCTION_35	CALL_4
0x4000c7d	        0x48c1e004	                              shl rax, 4	      2901	syntax.c	FUNCTION_35	CALL_4
0x4000c81	    0x480305000000	             add rax, qword [0x04000c88]	      2901	syntax.c	FUNCTION_35	CALL_4
0x4000c88	            0x8918	                    mov dword [rax], ebx	      2901	syntax.c	FUNCTION_35	CALL_4
0x4000c8a	    0x830500000000	               add dword [0x04000c91], 1	      2902	syntax.c	FUNCTION_35
0x4000c91	      0xb801000000	                              mov eax, 1	      2903	syntax.c	FUNCTION_35
0x4000c96	              0x5b	                                 pop rbx	      2904	syntax.c	FUNCTION_35
0x4000c97	              0xc3	                                     ret	      2904	syntax.c	FUNCTION_35
get_highlight_name_ext	IF,7:CALL,2:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	55
0x400d4cc	            0x85f6	                           test esi, esi	     10316	syntax.c	FUNCTION_168	IF_1
0x400d4ce	     0xf88b4000000	                            js 0x400d588	     10316	syntax.c	FUNCTION_168	IF_1
0x400d4d4	            0x85d2	                           test edx, edx	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x400d4d6	            0x742d	                            je 0x400d505	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x400d4d8	    0x3b3500000000	            cmp esi, dword [0x0400d4de] 	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x400d4de	            0x7d25	                           jge 0x400d505	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x400d4e0	          0x4863c6	                         movsxd rax, esi	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x400d4e3	        0x488d14c0	                  lea rdx, [rax + rax*8]	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x400d4e7	        0x488d1450	                  lea rdx, [rax + rdx*2]	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x400d4eb	        0x48c1e203	                              shl rdx, 3	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x400d4ef	    0x480315000000	             add rdx, qword [0x0400d4f6]	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x400d4f6	      0xb800000000	                              mov eax, 0	     10322	syntax.c	FUNCTION_168	IF_2
0x400d4fb	        0x837a1000	               cmp dword [rdx + 0x10], 0	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x400d4ff	     0xf858e000000	                           jne 0x400d593	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x400d505	    0x8b1500000000	            mov edx, dword [0x0400d50b] 	     10325	syntax.c	FUNCTION_168	IF_3
0x400d50b	            0x39d6	                            cmp esi, edx	     10325	syntax.c	FUNCTION_168	IF_3
0x400d50d	            0x7510	                           jne 0x400d51f	     10325	syntax.c	FUNCTION_168	IF_3
0x400d50f	      0xb800000000	                              mov eax, 0	     10326	syntax.c	FUNCTION_168	IF_3
0x400d514	    0x833d00000000	               cmp dword [0x0400d51b], 0	     10325	syntax.c	FUNCTION_168	IF_3
0x400d51b	            0x740e	                            je 0x400d52b	     10325	syntax.c	FUNCTION_168	IF_3
0x400d51d	            0xf3c3	                                     ret	     10325	syntax.c	FUNCTION_168	IF_3
0x400d51f	            0x89d0	                            mov eax, edx	     10327	syntax.c	FUNCTION_168	IF_4
0x400d521	     0x30500000000	             add eax, dword [0x0400d527]	     10327	syntax.c	FUNCTION_168	IF_4
0x400d527	            0x39c6	                            cmp esi, eax	     10327	syntax.c	FUNCTION_168	IF_4
0x400d529	            0x7510	                           jne 0x400d53b	     10327	syntax.c	FUNCTION_168	IF_4
0x400d52b	      0xb800000000	                              mov eax, 0	     10328	syntax.c	FUNCTION_168	IF_4
0x400d530	    0x833d00000000	               cmp dword [0x0400d537], 0	     10327	syntax.c	FUNCTION_168	IF_4
0x400d537	            0x740c	                            je 0x400d545	     10327	syntax.c	FUNCTION_168	IF_4
0x400d539	            0xf3c3	                                     ret	     10327	syntax.c	FUNCTION_168	IF_4
0x400d53b	     0x30500000000	             add eax, dword [0x0400d541]	     10329	syntax.c	FUNCTION_168	IF_5
0x400d541	            0x39c6	                            cmp esi, eax	     10329	syntax.c	FUNCTION_168	IF_5
0x400d543	            0x7510	                           jne 0x400d555	     10329	syntax.c	FUNCTION_168	IF_5
0x400d545	      0xb800000000	                              mov eax, 0	     10331	syntax.c	FUNCTION_168	IF_5
0x400d54a	    0x833d00000000	               cmp dword [0x0400d551], 0	     10330	syntax.c	FUNCTION_168	IF_5
0x400d551	            0x7417	                            je 0x400d56a	     10330	syntax.c	FUNCTION_168	IF_5
0x400d553	            0xf3c3	                                     ret	     10330	syntax.c	FUNCTION_168	IF_5
0x400d555	          0x83c001	                              add eax, 1	     10332	syntax.c	FUNCTION_168	IF_6
0x400d558	            0x39c6	                            cmp esi, eax	     10332	syntax.c	FUNCTION_168	IF_6
0x400d55a	            0x750e	                           jne 0x400d56a	     10332	syntax.c	FUNCTION_168	IF_6
0x400d55c	      0xb800000000	                              mov eax, 0	     10334	syntax.c	FUNCTION_168	IF_6
0x400d561	    0x833d00000000	               cmp dword [0x0400d568], 0	     10333	syntax.c	FUNCTION_168	IF_6
0x400d568	            0x7529	                           jne 0x400d593	     10333	syntax.c	FUNCTION_168	IF_6
0x400d56a	            0x39d6	                            cmp esi, edx	     10336	syntax.c	FUNCTION_168	IF_7
0x400d56c	            0x7d20	                           jge 0x400d58e	     10336	syntax.c	FUNCTION_168	IF_7
0x400d56e	          0x4863f6	                         movsxd rsi, esi	     10338	syntax.c	FUNCTION_168	CALL_2
0x400d571	        0x488d04f6	                  lea rax, [rsi + rsi*8]	     10338	syntax.c	FUNCTION_168	CALL_2
0x400d575	        0x488d0446	                  lea rax, [rsi + rax*2]	     10338	syntax.c	FUNCTION_168	CALL_2
0x400d579	        0x48c1e003	                              shl rax, 3	     10338	syntax.c	FUNCTION_168	CALL_2
0x400d57d	    0x480305000000	             add rax, qword [0x0400d584]	     10338	syntax.c	FUNCTION_168	CALL_2
0x400d584	          0x488b00	                    mov rax, qword [rax]	     10338	syntax.c	FUNCTION_168	CALL_2
0x400d587	              0xc3	                                     ret	     10338	syntax.c	FUNCTION_168	CALL_2
0x400d588	      0xb800000000	                              mov eax, 0	     10317	syntax.c	FUNCTION_168	IF_1
0x400d58d	              0xc3	                                     ret	     10317	syntax.c	FUNCTION_168	IF_1
0x400d58e	      0xb800000000	                              mov eax, 0	     10337	syntax.c	FUNCTION_168	IF_7
0x400d593	            0xf3c3	                                     ret	     10339	syntax.c	FUNCTION_168
put_pattern	IF,9:CALL,19:FOR,2:ELSE,2:SWITCH,0:WHILE,0:DO,0:functions,0	117
0x400273d	            0x4157	                                push r15	      4270	syntax.c	FUNCTION_70
0x400273f	            0x4156	                                push r14	      4270	syntax.c	FUNCTION_70
0x4002741	            0x4155	                                push r13	      4270	syntax.c	FUNCTION_70
0x4002743	            0x4154	                                push r12	      4270	syntax.c	FUNCTION_70
0x4002745	              0x55	                                push rbp	      4270	syntax.c	FUNCTION_70
0x4002746	              0x53	                                push rbx	      4270	syntax.c	FUNCTION_70
0x4002747	        0x4883ec08	                              sub rsp, 8	      4270	syntax.c	FUNCTION_70
0x400274b	          0x4989fd	                            mov r13, rdi	      4270	syntax.c	FUNCTION_70
0x400274e	          0x4189f4	                           mov r12d, esi	      4270	syntax.c	FUNCTION_70
0x4002751	          0x4889d5	                            mov rbp, rdx	      4270	syntax.c	FUNCTION_70
0x4002754	            0x89cb	                            mov ebx, ecx	      4270	syntax.c	FUNCTION_70
0x4002756	         0xfbf4202	               movsx eax, word [rdx + 2]	      4278	syntax.c	FUNCTION_70	IF_1
0x400275a	    0x3b0500000000	            cmp eax, dword [0x04002760] 	      4278	syntax.c	FUNCTION_70	IF_1
0x4002760	            0x745d	                            je 0x40027bf	      4278	syntax.c	FUNCTION_70	IF_1
0x4002762	    0x890500000000	            mov dword [0x04002768], eax 	      4280	syntax.c	FUNCTION_70	IF_1
0x4002768	            0x89ce	                            mov esi, ecx	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x400276a	      0xbf00000000	                              mov edi, 0	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x400276f	      0xe800000000	                          call 0x4002774	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x4002774	      0xbf3d000000	                           mov edi, 0x3d	      4282	syntax.c	FUNCTION_70	IF_1	CALL_2
0x4002779	      0xe800000000	                          call 0x400277e	      4282	syntax.c	FUNCTION_70	IF_1	CALL_2
0x400277e	    0x8b0500000000	            mov eax, dword [0x04002784] 	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x4002784	            0x85c0	                           test eax, eax	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x4002786	            0x750c	                           jne 0x4002794	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x4002788	      0xbf00000000	                              mov edi, 0	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x400278d	      0xe800000000	                          call 0x4002792	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x4002792	            0xeb21	                           jmp 0x40027b5	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x4002794	            0x4898	                                    cdqe	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x4002796	        0x488d14c0	                  lea rdx, [rax + rax*8]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x400279a	        0x488d0450	                  lea rax, [rax + rdx*2]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x400279e	        0x48c1e003	                              shl rax, 3	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x40027a2	    0x480305000000	             add rax, qword [0x040027a9]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x40027a9	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x40027b0	      0xe800000000	                          call 0x40027b5	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x40027b5	      0xbf20000000	                           mov edi, 0x20	      4287	syntax.c	FUNCTION_70	IF_1	CALL_6
0x40027ba	      0xe800000000	                          call 0x40027bf	      4287	syntax.c	FUNCTION_70	IF_1	CALL_6
0x40027bf	            0x89de	                            mov esi, ebx	      4291	syntax.c	FUNCTION_70	CALL_7
0x40027c1	          0x4c89ef	                            mov rdi, r13	      4291	syntax.c	FUNCTION_70	CALL_7
0x40027c4	      0xe800000000	                          call 0x40027c9	      4291	syntax.c	FUNCTION_70	CALL_7
0x40027c9	          0x4489e7	                           mov edi, r12d	      4292	syntax.c	FUNCTION_70	CALL_8
0x40027cc	      0xe800000000	                          call 0x40027d1	      4292	syntax.c	FUNCTION_70	CALL_8
0x40027d1	      0xbb00000000	                              mov ebx, 0	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x40027d6	            0xeb0f	                           jmp 0x40027e7	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x40027d8	          0x83c301	                              add ebx, 1	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x40027db	          0x4863c3	                         movsxd rax, ebx	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x40027de	    0x80b800000000	                       cmp byte [rax], 0	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x40027e5	            0x741a	                            je 0x4002801	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x40027e7	          0x4863c3	                         movsxd rax, ebx	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x40027ea	     0xfbeb0000000	                   movsx esi, byte [rax]	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x40027f1	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x40027f5	      0xe800000000	                          call 0x40027fa	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x40027fa	          0x4885c0	                           test rax, rax	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x40027fd	            0x75d9	                           jne 0x40027d8	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x40027ff	            0xeb05	                           jmp 0x4002806	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x4002801	      0xbb00000000	                              mov ebx, 0	      4298	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4002806	          0x4863db	                         movsxd rbx, ebx	      4301	syntax.c	FUNCTION_70	CALL_10
0x4002809	     0xfbe9b000000	                   movsx ebx, byte [rbx]	      4301	syntax.c	FUNCTION_70	CALL_10
0x4002810	            0x89df	                            mov edi, ebx	      4301	syntax.c	FUNCTION_70	CALL_10
0x4002812	      0xe800000000	                          call 0x4002817	      4301	syntax.c	FUNCTION_70	CALL_10
0x4002817	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      4302	syntax.c	FUNCTION_70	CALL_11
0x400281b	      0xe800000000	                          call 0x4002820	      4302	syntax.c	FUNCTION_70	CALL_11
0x4002820	            0x89df	                            mov edi, ebx	      4303	syntax.c	FUNCTION_70	CALL_12
0x4002822	      0xe800000000	                          call 0x4002827	      4303	syntax.c	FUNCTION_70	CALL_12
0x4002827	      0xbb00000000	                              mov ebx, 0	      4303	syntax.c	FUNCTION_70	CALL_12
0x400282c	      0xbe01000000	                              mov esi, 1	      4306	syntax.c	FUNCTION_70
0x4002831	    0x41be01000000	                             mov r14d, 1	      4309	syntax.c	FUNCTION_70	FOR_2
0x4002837	          0x4189dd	                           mov r13d, ebx	      4309	syntax.c	FUNCTION_70	FOR_2
0x400283a	          0x4589f4	                          mov r12d, r14d	      4309	syntax.c	FUNCTION_70	FOR_2
0x400283d	            0x89d9	                            mov ecx, ebx	      4309	syntax.c	FUNCTION_70	FOR_2
0x400283f	          0x41d3e4	                            shl r12d, cl	      4309	syntax.c	FUNCTION_70	FOR_2
0x4002842	          0x4489e0	                           mov eax, r12d	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4002845	          0xc1e007	                              shl eax, 7	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4002848	          0x4401e0	                           add eax, r12d	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x400284b	         0xfbf5504	               movsx edx, word [rbp + 4]	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x400284f	            0x85d0	                           test eax, edx	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4002851	            0x746f	                            je 0x40028c2	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4002853	            0x85f6	                           test esi, esi	      4312	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_5
0x4002855	            0x750a	                           jne 0x4002861	      4312	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_5
0x4002857	      0xbf2c000000	                           mov edi, 0x2c	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x400285c	      0xe800000000	                          call 0x4002861	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x4002861	    0x488b3cdd0000	                  mov rdi, qword [rbx*8]	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_14
0x4002869	      0xe800000000	                          call 0x400286e	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_14
0x400286e	      0x4c637c9d08	    movsxd r15, dword [rbp + rbx*4 + 8] 	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4002873	        0x4183fd06	                             cmp r13d, 6	      4316	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6
0x4002877	            0x7435	                            je 0x40028ae	      4316	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6
0x4002879	         0xfbf4504	               movsx eax, word [rbp + 4]	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x400287d	          0x4485e0	                          test eax, r12d	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x4002880	            0x740c	                            je 0x400288e	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x4002882	      0xbf73000000	                           mov edi, 0x73	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x4002887	      0xe800000000	                          call 0x400288c	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x400288c	            0xeb0a	                           jmp 0x4002898	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x400288e	      0xbf65000000	                           mov edi, 0x65	      4321	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_16
0x4002893	      0xe800000000	                          call 0x4002898	      4321	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_16
0x4002898	          0x4d85ff	                           test r15, r15	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x400289b	            0x7e0c	                           jle 0x40028a9	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x400289d	      0xbf2b000000	                           mov edi, 0x2b	      4323	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_17
0x40028a2	      0xe800000000	                          call 0x40028a7	      4323	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_17
0x40028a7	            0xeb05	                           jmp 0x40028ae	      4323	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_17
0x40028a9	          0x4d85ff	                           test r15, r15	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x40028ac	            0x740f	                            je 0x40028bd	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x40028ae	          0x4c89ff	                            mov rdi, r15	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_18
0x40028b1	      0xe800000000	                          call 0x40028b6	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_18
0x40028b6	      0xbe00000000	                              mov esi, 0	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40028bb	            0xeb05	                           jmp 0x40028c2	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40028bd	      0xbe00000000	                              mov esi, 0	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40028c2	        0x4883c301	                              add rbx, 1	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40028c6	        0x4883fb07	                              cmp rbx, 7	      4307	syntax.c	FUNCTION_70	FOR_2
0x40028ca	     0xf8567ffffff	                           jne 0x4002837	      4307	syntax.c	FUNCTION_70	FOR_2
0x40028d0	      0xbf20000000	                           mov edi, 0x20	      4330	syntax.c	FUNCTION_70	CALL_19
0x40028d5	      0xe800000000	                          call 0x40028da	      4330	syntax.c	FUNCTION_70	CALL_19
0x40028da	        0x4883c408	                              add rsp, 8	      4331	syntax.c	FUNCTION_70
0x40028de	              0x5b	                                 pop rbx	      4331	syntax.c	FUNCTION_70
0x40028df	              0x5d	                                 pop rbp	      4331	syntax.c	FUNCTION_70
0x40028e0	            0x415c	                                 pop r12	      4331	syntax.c	FUNCTION_70
0x40028e2	            0x415d	                                 pop r13	      4331	syntax.c	FUNCTION_70
0x40028e4	            0x415e	                                 pop r14	      4331	syntax.c	FUNCTION_70
0x40028e6	            0x415f	                                 pop r15	      4331	syntax.c	FUNCTION_70
0x40028e8	              0xc3	                                     ret	      4331	syntax.c	FUNCTION_70
hl_combine_attr	IF,32:CALL,21:FOR,0:ELSE,7:SWITCH,0:WHILE,0:DO,0:functions,0	228
0x4004cf4	              0x55	                                push rbp	      9018	syntax.c	FUNCTION_136
0x4004cf5	              0x53	                                push rbx	      9018	syntax.c	FUNCTION_136
0x4004cf6	        0x4883ec38	                           sub rsp, 0x38	      9018	syntax.c	FUNCTION_136
0x4004cfa	    0x64488b042528	                mov rax, qword fs:[0x28]	      9018	syntax.c	FUNCTION_136
0x4004d03	      0x4889442428	             mov qword [rsp + 0x28], rax	      9018	syntax.c	FUNCTION_136
0x4004d08	            0x31c0	                            xor eax, eax	      9018	syntax.c	FUNCTION_136
0x4004d0a	            0x89f0	                            mov eax, esi	      9024	syntax.c	FUNCTION_136	IF_1
0x4004d0c	            0x85ff	                           test edi, edi	      9023	syntax.c	FUNCTION_136	IF_1
0x4004d0e	     0xf8469030000	                            je 0x400507d	      9023	syntax.c	FUNCTION_136	IF_1
0x4004d14	            0x89fd	                            mov ebp, edi	      9023	syntax.c	FUNCTION_136	IF_1
0x4004d16	            0x89f3	                            mov ebx, esi	      9023	syntax.c	FUNCTION_136	IF_1
0x4004d18	    0x81ffff000000	                           cmp edi, 0xff	      9025	syntax.c	FUNCTION_136	IF_2
0x4004d1e	            0x7f18	                            jg 0x4004d38	      9025	syntax.c	FUNCTION_136	IF_2
0x4004d20	    0x81feff000000	                           cmp esi, 0xff	      9025	syntax.c	FUNCTION_136	IF_2
0x4004d26	            0x7f10	                            jg 0x4004d38	      9025	syntax.c	FUNCTION_136	IF_2
0x4004d28	        0x40f6c640	                          test sil, 0x40	      9026	syntax.c	FUNCTION_136	CALL_1
0x4004d2c	            0x89f8	                            mov eax, edi	      9026	syntax.c	FUNCTION_136	CALL_1
0x4004d2e	           0xf45c6	                         cmovne eax, esi	      9026	syntax.c	FUNCTION_136	CALL_1
0x4004d31	             0x9f0	                             or eax, esi	      9026	syntax.c	FUNCTION_136	CALL_1
0x4004d33	      0xe945030000	                           jmp 0x400507d	      9026	syntax.c	FUNCTION_136	CALL_1
0x4004d38	    0x833d00000000	               cmp dword [0x04004d3f], 0	      9028	syntax.c	FUNCTION_136	IF_3
0x4004d3f	     0xf8403010000	                            je 0x4004e48	      9028	syntax.c	FUNCTION_136	IF_3
0x4004d45	    0x81fdff000000	                           cmp ebp, 0xff	      9030	syntax.c	FUNCTION_136	IF_3	IF_4
0x4004d4b	            0x7e39	                           jle 0x4004d86	      9030	syntax.c	FUNCTION_136	IF_3	IF_4
0x4004d4d	            0x89ef	                            mov edi, ebp	      9031	syntax.c	FUNCTION_136	IF_3	CALL_2
0x4004d4f	      0xe800000000	                          call 0x4004d54	      9031	syntax.c	FUNCTION_136	IF_3	CALL_2
0x4004d54	          0x4885c0	                           test rax, rax	      9032	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d57	            0x742d	                            je 0x4004d86	      9032	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d59	          0x488b10	                    mov rdx, qword [rax]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d5c	        0x48891424	                    mov qword [rsp], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d60	        0x488b5008	                mov rdx, qword [rax + 8]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d64	      0x4889542408	                mov qword [rsp + 8], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d69	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d6d	      0x4889542410	             mov qword [rsp + 0x10], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d72	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d76	      0x4889542418	             mov qword [rsp + 0x18], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d7b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d7f	      0x4889442420	             mov qword [rsp + 0x20], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d84	            0xeb33	                           jmp 0x4004db9	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4004d86	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004d8e	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004d97	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      9037	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x4004d9e	      0x4889442408	                mov qword [rsp + 8], rax	      9037	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x4004da3	      0x4889442410	             mov qword [rsp + 0x10], rax	      9038	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x4004da8	      0x4889442418	             mov qword [rsp + 0x18], rax	      9039	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x4004dad	    0x81fdff000000	                           cmp ebp, 0xff	      9040	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x4004db3	            0x7f04	                            jg 0x4004db9	      9040	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x4004db5	        0x66892c24	                      mov word [rsp], bp	      9041	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x4004db9	    0x81fbff000000	                           cmp ebx, 0xff	      9044	syntax.c	FUNCTION_136	IF_3	IF_7
0x4004dbf	            0x7f12	                            jg 0x4004dd3	      9044	syntax.c	FUNCTION_136	IF_3	IF_7
0x4004dc1	          0xf6c340	                           test bl, 0x40	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x4004dc4	            0x89d8	                            mov eax, ebx	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x4004dc6	      0x660f440424	                    cmove ax, word [rsp]	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x4004dcb	             0x9c3	                             or ebx, eax	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x4004dcd	        0x66891c24	                      mov word [rsp], bx	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x4004dd1	            0xeb63	                           jmp 0x4004e36	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x4004dd3	            0x89df	                            mov edi, ebx	      9048	syntax.c	FUNCTION_136	IF_3	ELSE_2	CALL_5
0x4004dd5	      0xe800000000	                          call 0x4004dda	      9048	syntax.c	FUNCTION_136	IF_3	ELSE_2	CALL_5
0x4004dda	          0x4885c0	                           test rax, rax	      9049	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4004ddd	            0x7457	                            je 0x4004e36	      9049	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4004ddf	           0xfb710	                   movzx edx, word [rax]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x4004de2	          0xf6c240	                           test dl, 0x40	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x4004de5	            0x89d1	                            mov ecx, edx	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x4004de7	      0x660f440c24	                    cmove cx, word [rsp]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x4004dec	             0x9ca	                             or edx, ecx	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x4004dee	        0x66891424	                      mov word [rsp], dx	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x4004df2	        0x488b5008	                mov rdx, qword [rax + 8]	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x4004df6	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x4004dfd	            0x7405	                            je 0x4004e04	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x4004dff	      0x4889542408	                mov qword [rsp + 8], rdx	      9054	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x4004e04	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x4004e08	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x4004e0f	            0x7405	                            je 0x4004e16	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x4004e11	      0x4889542410	             mov qword [rsp + 0x10], rdx	      9056	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x4004e16	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x4004e1a	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x4004e21	            0x7405	                            je 0x4004e28	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x4004e23	      0x4889542418	             mov qword [rsp + 0x18], rdx	      9058	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x4004e28	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x4004e2c	          0x4885c0	                           test rax, rax	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x4004e2f	            0x7405	                            je 0x4004e36	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x4004e31	      0x4889442420	             mov qword [rsp + 0x20], rax	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x4004e36	          0x4889e6	                            mov rsi, rsp	      9067	syntax.c	FUNCTION_136	IF_3	CALL_7
0x4004e39	      0xbf00000000	                              mov edi, 0	      9067	syntax.c	FUNCTION_136	IF_3	CALL_7
0x4004e3e	      0xe8e4f6ffff	                 call sym.get_attr_entry	      9067	syntax.c	FUNCTION_136	IF_3	CALL_7
0x4004e43	      0xe935020000	                           jmp 0x400507d	      9067	syntax.c	FUNCTION_136	IF_3	CALL_7
0x4004e48	    0x833d00000000	               cmp dword [0x04004e4f], 1	      9071	syntax.c	FUNCTION_136	IF_14
0x4004e4f	            0x7f0d	                            jg 0x4004e5e	      9071	syntax.c	FUNCTION_136	IF_14
0x4004e51	    0x833d00000000	               cmp dword [0x04004e58], 0	      9071	syntax.c	FUNCTION_136	IF_14
0x4004e58	     0xf8449010000	                            je 0x4004fa7	      9071	syntax.c	FUNCTION_136	IF_14
0x4004e5e	    0x81fdff000000	                           cmp ebp, 0xff	      9073	syntax.c	FUNCTION_136	IF_14	IF_15
0x4004e64	            0x7e39	                           jle 0x4004e9f	      9073	syntax.c	FUNCTION_136	IF_14	IF_15
0x4004e66	            0x89ef	                            mov edi, ebp	      9074	syntax.c	FUNCTION_136	IF_14	CALL_8
0x4004e68	      0xe800000000	                          call 0x4004e6d	      9074	syntax.c	FUNCTION_136	IF_14	CALL_8
0x4004e6d	          0x4885c0	                           test rax, rax	      9075	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e70	            0x742d	                            je 0x4004e9f	      9075	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e72	          0x488b10	                    mov rdx, qword [rax]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e75	        0x48891424	                    mov qword [rsp], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e79	        0x488b5008	                mov rdx, qword [rax + 8]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e7d	      0x4889542408	                mov qword [rsp + 8], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e82	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e86	      0x4889542410	             mov qword [rsp + 0x10], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e8b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e8f	      0x4889542418	             mov qword [rsp + 0x18], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e94	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e98	      0x4889442420	             mov qword [rsp + 0x20], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e9d	            0xeb37	                           jmp 0x4004ed6	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4004e9f	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004ea7	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004eb0	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004eb9	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      9081	syntax.c	FUNCTION_136	IF_14	ELSE_3
0x4004ec0	      0x4889442418	             mov qword [rsp + 0x18], rax	      9081	syntax.c	FUNCTION_136	IF_14	ELSE_3
0x4004ec5	      0x4889442410	             mov qword [rsp + 0x10], rax	      9082	syntax.c	FUNCTION_136	IF_14	ELSE_3
0x4004eca	    0x81fdff000000	                           cmp ebp, 0xff	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x4004ed0	            0x7f04	                            jg 0x4004ed6	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x4004ed2	        0x66892c24	                      mov word [rsp], bp	      9085	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x4004ed6	    0x81fbff000000	                           cmp ebx, 0xff	      9088	syntax.c	FUNCTION_136	IF_14	IF_18
0x4004edc	            0x7f15	                            jg 0x4004ef3	      9088	syntax.c	FUNCTION_136	IF_14	IF_18
0x4004ede	          0xf6c340	                           test bl, 0x40	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4004ee1	            0x89d8	                            mov eax, ebx	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4004ee3	      0x660f440424	                    cmove ax, word [rsp]	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4004ee8	             0x9c3	                             or ebx, eax	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4004eea	        0x66891c24	                      mov word [rsp], bx	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4004eee	      0xe9a2000000	                           jmp 0x4004f95	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4004ef3	            0x89df	                            mov edi, ebx	      9092	syntax.c	FUNCTION_136	IF_14	ELSE_4	CALL_11
0x4004ef5	      0xe800000000	                          call 0x4004efa	      9092	syntax.c	FUNCTION_136	IF_14	ELSE_4	CALL_11
0x4004efa	          0x4885c0	                           test rax, rax	      9093	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x4004efd	     0xf8492000000	                            je 0x4004f95	      9093	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x4004f03	           0xfb710	                   movzx edx, word [rax]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x4004f06	          0xf6c240	                           test dl, 0x40	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x4004f09	            0x89d1	                            mov ecx, edx	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x4004f0b	      0x660f440c24	                    cmove cx, word [rsp]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x4004f10	             0x9ca	                             or edx, ecx	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x4004f12	        0x66891424	                      mov word [rsp], dx	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x4004f16	         0xfb75008	               movzx edx, word [rax + 8]	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x4004f1a	          0x6685d2	                             test dx, dx	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x4004f1d	            0x7405	                            je 0x4004f24	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x4004f1f	      0x6689542408	                  mov word [rsp + 8], dx	      9098	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x4004f24	         0xfb7500a	            movzx edx, word [rax + 0xa] 	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x4004f28	          0x6685d2	                             test dx, dx	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x4004f2b	            0x7405	                            je 0x4004f32	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x4004f2d	      0x668954240a	                mov word [rsp + 0xa], dx	      9100	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x4004f32	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x4004f36	    0x488d8a672b00	                 lea rcx, [rdx + 0x2b67]	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x4004f3d	        0x4883f901	                              cmp rcx, 1	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x4004f41	            0x7733	                            ja 0x4004f76	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x4004f43	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x4004f47	    0x488d8e672b00	                 lea rcx, [rsi + 0x2b67]	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x4004f4e	        0x4883f901	                              cmp rcx, 1	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x4004f52	            0x7722	                            ja 0x4004f76	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x4004f54	      0x6683780800	                   cmp word [rax + 8], 0	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x4004f59	            0x7409	                            je 0x4004f64	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x4004f5b	    0x48c74424109a	mov qword [rsp + 0x10], 0xffffffffffffd49a	      9108	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x4004f64	      0x6683780a00	                 cmp word [rax + 0xa], 0	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4004f69	            0x742a	                            je 0x4004f95	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4004f6b	    0x48c74424189a	mov qword [rsp + 0x18], 0xffffffffffffd49a	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4004f74	            0xeb1f	                           jmp 0x4004f95	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4004f76	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x4004f7d	            0x7405	                            je 0x4004f84	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x4004f7f	      0x4889542410	             mov qword [rsp + 0x10], rdx	      9115	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x4004f84	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4004f88	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4004f8e	            0x7405	                            je 0x4004f95	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4004f90	      0x4889442418	             mov qword [rsp + 0x18], rax	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4004f95	          0x4889e6	                            mov rsi, rsp	      9122	syntax.c	FUNCTION_136	IF_14	CALL_15
0x4004f98	      0xbf00000000	                              mov edi, 0	      9122	syntax.c	FUNCTION_136	IF_14	CALL_15
0x4004f9d	      0xe885f5ffff	                 call sym.get_attr_entry	      9122	syntax.c	FUNCTION_136	IF_14	CALL_15
0x4004fa2	      0xe9d6000000	                           jmp 0x400507d	      9122	syntax.c	FUNCTION_136	IF_14	CALL_15
0x4004fa7	    0x81fdff000000	                           cmp ebp, 0xff	      9125	syntax.c	FUNCTION_136	IF_27
0x4004fad	            0x7e39	                           jle 0x4004fe8	      9125	syntax.c	FUNCTION_136	IF_27
0x4004faf	            0x89ef	                            mov edi, ebp	      9126	syntax.c	FUNCTION_136	CALL_16
0x4004fb1	      0xe800000000	                          call 0x4004fb6	      9126	syntax.c	FUNCTION_136	CALL_16
0x4004fb6	          0x4885c0	                           test rax, rax	      9127	syntax.c	FUNCTION_136	IF_28
0x4004fb9	            0x742d	                            je 0x4004fe8	      9127	syntax.c	FUNCTION_136	IF_28
0x4004fbb	          0x488b10	                    mov rdx, qword [rax]	      9128	syntax.c	FUNCTION_136	IF_28
0x4004fbe	        0x48891424	                    mov qword [rsp], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4004fc2	        0x488b5008	                mov rdx, qword [rax + 8]	      9128	syntax.c	FUNCTION_136	IF_28
0x4004fc6	      0x4889542408	                mov qword [rsp + 8], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4004fcb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9128	syntax.c	FUNCTION_136	IF_28
0x4004fcf	      0x4889542410	             mov qword [rsp + 0x10], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4004fd4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9128	syntax.c	FUNCTION_136	IF_28
0x4004fd8	      0x4889542418	             mov qword [rsp + 0x18], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4004fdd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9128	syntax.c	FUNCTION_136	IF_28
0x4004fe1	      0x4889442420	             mov qword [rsp + 0x20], rax	      9128	syntax.c	FUNCTION_136	IF_28
0x4004fe6	            0xeb38	                           jmp 0x4005020	      9128	syntax.c	FUNCTION_136	IF_28
0x4004fe8	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004ff0	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4004ff9	    0x48c744241000	               mov qword [rsp + 0x10], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4005002	    0x48c744241800	               mov qword [rsp + 0x18], 0	        90	string3.h	FUNCTION_193	CALL_6
0x400500b	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_193	CALL_6
0x4005014	    0x81fdff000000	                           cmp ebp, 0xff	      9132	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x400501a	            0x7f04	                            jg 0x4005020	      9132	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x400501c	        0x66892c24	                      mov word [rsp], bp	      9133	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x4005020	    0x81fbff000000	                           cmp ebx, 0xff	      9136	syntax.c	FUNCTION_136	IF_30
0x4005026	            0x7f12	                            jg 0x400503a	      9136	syntax.c	FUNCTION_136	IF_30
0x4005028	          0xf6c340	                           test bl, 0x40	      9137	syntax.c	FUNCTION_136	CALL_18
0x400502b	            0x89d8	                            mov eax, ebx	      9137	syntax.c	FUNCTION_136	CALL_18
0x400502d	      0x660f440424	                    cmove ax, word [rsp]	      9137	syntax.c	FUNCTION_136	CALL_18
0x4005032	             0x9c3	                             or ebx, eax	      9137	syntax.c	FUNCTION_136	CALL_18
0x4005034	        0x66891c24	                      mov word [rsp], bx	      9137	syntax.c	FUNCTION_136	CALL_18
0x4005038	            0xeb36	                           jmp 0x4005070	      9137	syntax.c	FUNCTION_136	CALL_18
0x400503a	            0x89df	                            mov edi, ebx	      9140	syntax.c	FUNCTION_136	ELSE_7	CALL_19
0x400503c	      0xe800000000	                          call 0x4005041	      9140	syntax.c	FUNCTION_136	ELSE_7	CALL_19
0x4005041	          0x4885c0	                           test rax, rax	      9141	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4005044	            0x742a	                            je 0x4005070	      9141	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4005046	           0xfb710	                   movzx edx, word [rax]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x4005049	          0xf6c240	                           test dl, 0x40	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x400504c	            0x89d1	                            mov ecx, edx	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x400504e	      0x660f440c24	                    cmove cx, word [rsp]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x4005053	             0x9ca	                             or edx, ecx	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x4005055	        0x66891424	                      mov word [rsp], dx	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x4005059	        0x488b5008	                mov rdx, qword [rax + 8]	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x400505d	          0x4885d2	                           test rdx, rdx	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4005060	            0x740e	                            je 0x4005070	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4005062	      0x4889542408	                mov qword [rsp + 8], rdx	      9146	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4005067	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x400506b	      0x4889442410	             mov qword [rsp + 0x10], rax	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4005070	          0x4889e6	                            mov rsi, rsp	      9151	syntax.c	FUNCTION_136	CALL_21
0x4005073	      0xbf00000000	                              mov edi, 0	      9151	syntax.c	FUNCTION_136	CALL_21
0x4005078	      0xe8aaf4ffff	                 call sym.get_attr_entry	      9151	syntax.c	FUNCTION_136	CALL_21
0x400507d	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      9152	syntax.c	FUNCTION_136
0x4005082	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9152	syntax.c	FUNCTION_136
0x400508b	            0x7405	                            je 0x4005092	      9152	syntax.c	FUNCTION_136
0x400508d	      0xe800000000	                          call 0x4005092	      9152	syntax.c	FUNCTION_136
0x4005092	        0x4883c438	                           add rsp, 0x38	      9152	syntax.c	FUNCTION_136
0x4005096	              0x5b	                                 pop rbx	      9152	syntax.c	FUNCTION_136
0x4005097	              0x5d	                                 pop rbp	      9152	syntax.c	FUNCTION_136
0x4005098	              0xc3	                                     ret	      9152	syntax.c	FUNCTION_136
syn_list_one	IF,12:CALL,37:FOR,1:ELSE,3:SWITCH,0:WHILE,2:DO,0:functions,0	226
0x400a3d2	            0x4157	                                push r15	      4076	syntax.c	FUNCTION_66
0x400a3d4	            0x4156	                                push r14	      4076	syntax.c	FUNCTION_66
0x400a3d6	            0x4155	                                push r13	      4076	syntax.c	FUNCTION_66
0x400a3d8	            0x4154	                                push r12	      4076	syntax.c	FUNCTION_66
0x400a3da	              0x55	                                push rbp	      4076	syntax.c	FUNCTION_66
0x400a3db	              0x53	                                push rbx	      4076	syntax.c	FUNCTION_66
0x400a3dc	        0x4883ec18	                           sub rsp, 0x18	      4076	syntax.c	FUNCTION_66
0x400a3e0	          0x4189fd	                           mov r13d, edi	      4076	syntax.c	FUNCTION_66
0x400a3e3	          0x4189f7	                           mov r15d, esi	      4076	syntax.c	FUNCTION_66
0x400a3e6	        0x8954240c	              mov dword [rsp + 0xc], edx	      4076	syntax.c	FUNCTION_66
0x400a3ea	    0x448b35000000	           mov r14d, dword [0x0400a3f1] 	      4105	syntax.c	FUNCTION_66	CALL_1
0x400a3f1	      0xbf00000000	                              mov edi, 0	      4079	syntax.c	FUNCTION_66
0x400a3f6	            0x85f6	                           test esi, esi	      4108	syntax.c	FUNCTION_66	IF_1
0x400a3f8	            0x753c	                           jne 0x400a436	      4108	syntax.c	FUNCTION_66	IF_1
0x400a3fa	    0x488b05000000	            mov rax, qword [0x0400a401] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400a401	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400a405	          0x4489f1	                           mov ecx, r14d	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400a408	      0xba00000000	                              mov edx, 0	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400a40d	          0x4489ef	                           mov edi, r13d	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400a410	      0xe824fdffff	              call sym.syn_list_keywords	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400a415	    0x488b15000000	            mov rdx, qword [0x0400a41c] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400a41c	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400a420	    0x4881c6280100	                          add rsi, 0x128	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400a427	          0x4489f1	                           mov ecx, r14d	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400a42a	            0x89c2	                            mov edx, eax	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400a42c	          0x4489ef	                           mov edi, r13d	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400a42f	      0xe805fdffff	              call sym.syn_list_keywords	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400a434	            0x89c7	                            mov edi, eax	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400a436	    0x488b05000000	            mov rax, qword [0x0400a43d] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a43d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a441	    0x83ba60020000	              cmp dword [rdx + 0x260], 0	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a448	     0xf8ea3020000	                           jle 0x400a6f1	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a44e	    0x8b0500000000	            mov eax, dword [0x0400a454] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a454	            0x85c0	                           test eax, eax	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a456	     0xf8595020000	                           jne 0x400a6f1	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a45c	      0xbb00000000	                              mov ebx, 0	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a461	          0x4863cb	                         movsxd rcx, ebx	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x400a464	        0x488d2c89	                  lea rbp, [rcx + rcx*4]	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x400a468	        0x48c1e505	                              shl rbp, 5	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x400a46c	          0x4989ec	                            mov r12, rbp	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x400a46f	    0x4c03a2700200	            add r12, qword [rdx + 0x270]	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x400a476	    0x410fbf542454	           movsx edx, word [r12 + 0x54] 	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400a47c	          0x4139d5	                           cmp r13d, edx	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400a47f	     0xf8548020000	                           jne 0x400a6cd	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400a485	    0x410fbe442401	               movsx eax, byte [r12 + 1]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400a48b	          0x4139c7	                           cmp r15d, eax	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400a48e	     0xf8539020000	                           jne 0x400a6cd	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400a494	          0x4489ea	                           mov edx, r13d	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_5
0x400a497	      0xbee7030000	                          mov esi, 0x3e7	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_5
0x400a49c	      0xe8a3fbffff	                call sym.syn_list_header	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_5
0x400a4a1	    0xc70500000000	               mov dword [0x0400a4ab], 0	      4124	syntax.c	FUNCTION_66	FOR_1
0x400a4ab	      0x410fb60424	                   movzx eax, byte [r12]	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x400a4b0	            0x3c01	                               cmp al, 1	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x400a4b2	            0x7524	                           jne 0x400a4d8	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x400a4b4	          0x4489f1	                           mov ecx, r14d	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x400a4b7	          0x4c89e2	                            mov rdx, r12	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x400a4ba	      0xbe20000000	                           mov esi, 0x20	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x400a4bf	      0xbf00000000	                              mov edi, 0	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x400a4c4	      0xe87482ffff	                    call sym.put_pattern	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x400a4c9	      0xbf20000000	                           mov edi, 0x20	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_7
0x400a4ce	      0xe800000000	                          call 0x400a4d3	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_7
0x400a4d3	      0xe9ec000000	                           jmp 0x400a5c4	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_7
0x400a4d8	            0x3c02	                               cmp al, 2	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x400a4da	     0xf85e4000000	                           jne 0x400a5c4	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x400a4e0	    0x488b05000000	            mov rax, qword [0x0400a4e7] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a4e7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a4eb	          0x4889ea	                            mov rdx, rbp	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a4ee	    0x480390700200	            add rdx, qword [rax + 0x270]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a4f5	           0xfb602	                   movzx eax, byte [rdx]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a4f8	            0x3c02	                               cmp al, 2	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a4fa	            0x7539	                           jne 0x400a535	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a4fc	          0x83c301	                              add ebx, 1	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x400a4ff	          0x4489f1	                           mov ecx, r14d	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x400a502	      0xbe3d000000	                           mov esi, 0x3d	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x400a507	      0xbf00000000	                              mov edi, 0	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x400a50c	      0xe82c82ffff	                    call sym.put_pattern	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x400a511	    0x488b05000000	            mov rax, qword [0x0400a518] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a518	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a51c	          0x4863c3	                         movsxd rax, ebx	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a51f	        0x488d1480	                  lea rdx, [rax + rax*4]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a523	        0x48c1e205	                              shl rdx, 5	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a527	    0x480391700200	            add rdx, qword [rcx + 0x270]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a52e	           0xfb602	                   movzx eax, byte [rdx]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a531	            0x3c02	                               cmp al, 2	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a533	            0x74c7	                            je 0x400a4fc	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x400a535	            0x3c04	                               cmp al, 4	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x400a537	            0x7515	                           jne 0x400a54e	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x400a539	          0x83c301	                              add ebx, 1	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x400a53c	          0x4489f1	                           mov ecx, r14d	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x400a53f	      0xbe3d000000	                           mov esi, 0x3d	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x400a544	      0xbf00000000	                              mov edi, 0	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x400a549	      0xe8ef81ffff	                    call sym.put_pattern	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x400a54e	    0x488b05000000	            mov rax, qword [0x0400a555] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400a555	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400a559	    0x3b9860020000	           cmp ebx, dword [rax + 0x260] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400a55f	            0x7d56	                           jge 0x400a5b7	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400a561	          0x4863d3	                         movsxd rdx, ebx	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a564	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a568	        0x48c1e205	                              shl rdx, 5	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a56c	    0x480390700200	            add rdx, qword [rax + 0x270]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a573	          0x803a03	                       cmp byte [rdx], 3	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a576	            0x753f	                           jne 0x400a5b7	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a578	          0x83c301	                              add ebx, 1	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x400a57b	          0x4489f1	                           mov ecx, r14d	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x400a57e	      0xbe3d000000	                           mov esi, 0x3d	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x400a583	      0xbf00000000	                              mov edi, 0	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x400a588	      0xe8b081ffff	                    call sym.put_pattern	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x400a58d	    0x488b05000000	            mov rax, qword [0x0400a594] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400a594	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400a598	    0x399860020000	           cmp dword [rax + 0x260], ebx 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400a59e	            0x7e17	                           jle 0x400a5b7	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400a5a0	          0x4863d3	                         movsxd rdx, ebx	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a5a3	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a5a7	        0x48c1e205	                              shl rdx, 5	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a5ab	    0x480390700200	            add rdx, qword [rax + 0x270]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a5b2	          0x803a03	                       cmp byte [rdx], 3	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a5b5	            0x74c1	                            je 0x400a578	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x400a5b7	          0x83eb01	                              sub ebx, 1	      4139	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x400a5ba	      0xbf20000000	                           mov edi, 0x20	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_17
0x400a5bf	      0xe800000000	                          call 0x400a5c4	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_17
0x400a5c4	      0x418b742424	            mov esi, dword [r12 + 0x24] 	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_18
0x400a5c9	          0x4489f2	                           mov edx, r14d	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_18
0x400a5cc	      0xbf00000000	                              mov edi, 0	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_18
0x400a5d1	      0xe80c81ffff	                 call sym.syn_list_flags	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_18
0x400a5d6	      0x498b742440	            mov rsi, qword [r12 + 0x40] 	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x400a5db	          0x4885f6	                           test rsi, rsi	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x400a5de	            0x740d	                            je 0x400a5ed	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x400a5e0	          0x4489f2	                           mov edx, r14d	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_19
0x400a5e3	      0xbf00000000	                              mov edi, 0	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_19
0x400a5e8	      0xe82d7fffff	                    call sym.put_id_list	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_19
0x400a5ed	      0x498b742458	            mov rsi, qword [r12 + 0x58] 	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x400a5f2	          0x4885f6	                           test rsi, rsi	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x400a5f5	            0x740d	                            je 0x400a604	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x400a5f7	          0x4489f2	                           mov edx, r14d	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_20
0x400a5fa	      0xbf00000000	                              mov edi, 0	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_20
0x400a5ff	      0xe8167fffff	                    call sym.put_id_list	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_20
0x400a604	      0x498b742448	            mov rsi, qword [r12 + 0x48] 	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x400a609	          0x4885f6	                           test rsi, rsi	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x400a60c	            0x741f	                            je 0x400a62d	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x400a60e	          0x4489f2	                           mov edx, r14d	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_21
0x400a611	      0xbf00000000	                              mov edi, 0	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_21
0x400a616	      0xe8ff7effff	                    call sym.put_id_list	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_21
0x400a61b	      0x418b742424	            mov esi, dword [r12 + 0x24] 	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_22
0x400a620	          0x4489f2	                           mov edx, r14d	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_22
0x400a623	      0xbf00000000	                              mov edi, 0	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_22
0x400a628	      0xe8b580ffff	                 call sym.syn_list_flags	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_22
0x400a62d	      0x418b442424	            mov eax, dword [r12 + 0x24] 	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x400a632	      0xbf01000000	                              mov edi, 1	      4123	syntax.c	FUNCTION_66	FOR_1
0x400a637	            0xa830	                           test al, 0x30	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x400a639	     0xf848e000000	                            je 0x400a6cd	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x400a63f	            0xa810	                           test al, 0x10	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x400a641	            0x740f	                            je 0x400a652	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x400a643	          0x4489f6	                           mov esi, r14d	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_23
0x400a646	      0xbf00000000	                              mov edi, 0	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_23
0x400a64b	      0xe800000000	                          call 0x400a650	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_23
0x400a650	            0xeb0d	                           jmp 0x400a65f	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_23
0x400a652	          0x4489f6	                           mov esi, r14d	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_24
0x400a655	      0xbf00000000	                              mov edi, 0	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_24
0x400a65a	      0xe800000000	                          call 0x400a65f	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_24
0x400a65f	      0xbf20000000	                           mov edi, 0x20	      4162	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_25
0x400a664	      0xe800000000	                          call 0x400a669	      4162	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_25
0x400a669	      0x418b442430	            mov eax, dword [r12 + 0x30] 	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400a66e	            0x85c0	                           test eax, eax	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400a670	            0x7842	                            js 0x400a6b4	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400a672	    0x488b15000000	            mov rdx, qword [0x0400a679] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x400a679	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x400a67d	            0x4898	                                    cdqe	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400a67f	        0x488d0480	                  lea rax, [rax + rax*4]	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400a683	        0x48c1e005	                              shl rax, 5	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400a687	    0x480382700200	            add rax, qword [rdx + 0x270]	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400a68e	      0x480fbf4054	           movsx rax, word [rax + 0x54] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x400a693	        0x488d14c0	                  lea rdx, [rax + rax*8]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x400a697	        0x488d0450	                  lea rax, [rax + rdx*2]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x400a69b	        0x48c1e003	                              shl rax, 3	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x400a69f	    0x480305000000	             add rax, qword [0x0400a6a6]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x400a6a6	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x400a6ad	      0xe800000000	                          call 0x400a6b2	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x400a6b2	            0xeb0a	                           jmp 0x400a6be	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x400a6b4	      0xbf00000000	                              mov edi, 0	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_29
0x400a6b9	      0xe800000000	                          call 0x400a6be	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_29
0x400a6be	      0xbf20000000	                           mov edi, 0x20	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_30
0x400a6c3	      0xe800000000	                          call 0x400a6c8	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_30
0x400a6c8	      0xbf01000000	                              mov edi, 1	      4123	syntax.c	FUNCTION_66	FOR_1
0x400a6cd	          0x83c301	                              add ebx, 1	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a6d0	    0x488b15000000	            mov rdx, qword [0x0400a6d7] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a6d7	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a6db	    0x399a60020000	           cmp dword [rdx + 0x260], ebx 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a6e1	            0x7e0e	                           jle 0x400a6f1	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a6e3	    0x8b0d00000000	            mov ecx, dword [0x0400a6e9] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a6e9	            0x85c9	                           test ecx, ecx	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a6eb	     0xf8470fdffff	                            je 0x400a461	      4116	syntax.c	FUNCTION_66	FOR_1
0x400a6f1	          0x4963c5	                        movsxd rax, r13d	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a6f4	        0x488d14c0	                  lea rdx, [rax + rax*8]	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a6f8	        0x488d1c50	                  lea rbx, [rax + rdx*2]	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a6fc	        0x48c1e303	                              shl rbx, 3	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a700	    0x488b05000000	            mov rax, qword [0x0400a707] 	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a707	      0x837c18f000	         cmp dword [rax + rbx - 0x10], 0	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a70c	            0x7457	                            je 0x400a765	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a70e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a712	             0x9f8	                             or eax, edi	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a714	            0x744f	                            je 0x400a765	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a716	    0x8b0500000000	            mov eax, dword [0x0400a71c] 	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a71c	            0x85c0	                           test eax, eax	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a71e	            0x7545	                           jne 0x400a765	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x400a720	          0x4489ea	                           mov edx, r13d	      4175	syntax.c	FUNCTION_66	IF_12	CALL_32
0x400a723	      0xbee7030000	                          mov esi, 0x3e7	      4175	syntax.c	FUNCTION_66	IF_12	CALL_32
0x400a728	      0xe817f9ffff	                call sym.syn_list_header	      4175	syntax.c	FUNCTION_66	IF_12	CALL_32
0x400a72d	          0x4489f6	                           mov esi, r14d	      4176	syntax.c	FUNCTION_66	IF_12	CALL_33
0x400a730	      0xbf00000000	                              mov edi, 0	      4176	syntax.c	FUNCTION_66	IF_12	CALL_33
0x400a735	      0xe800000000	                          call 0x400a73a	      4176	syntax.c	FUNCTION_66	IF_12	CALL_33
0x400a73a	      0xbf20000000	                           mov edi, 0x20	      4177	syntax.c	FUNCTION_66	IF_12	CALL_34
0x400a73f	      0xe800000000	                          call 0x400a744	      4177	syntax.c	FUNCTION_66	IF_12	CALL_34
0x400a744	    0x488b15000000	            mov rdx, qword [0x0400a74b] 	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x400a74b	      0x4863441af0	    movsxd rax, dword [rdx + rbx - 0x10]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x400a750	        0x488d0cc0	                  lea rcx, [rax + rax*8]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x400a754	        0x488d0448	                  lea rax, [rax + rcx*2]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x400a758	    0x488bbcc268ff	     mov rdi, qword [rdx + rax*8 - 0x98]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x400a760	      0xe800000000	                          call 0x400a765	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x400a765	        0x4883c418	                           add rsp, 0x18	      4180	syntax.c	FUNCTION_66
0x400a769	              0x5b	                                 pop rbx	      4180	syntax.c	FUNCTION_66
0x400a76a	              0x5d	                                 pop rbp	      4180	syntax.c	FUNCTION_66
0x400a76b	            0x415c	                                 pop r12	      4180	syntax.c	FUNCTION_66
0x400a76d	            0x415d	                                 pop r13	      4180	syntax.c	FUNCTION_66
0x400a76f	            0x415e	                                 pop r14	      4180	syntax.c	FUNCTION_66
0x400a771	            0x415f	                                 pop r15	      4180	syntax.c	FUNCTION_66
0x400a773	              0xc3	                                     ret	      4180	syntax.c	FUNCTION_66
gui_do_one_color	IF,6:CALL,16:FOR,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	63
0x4004a37	            0x4154	                                push r12	      9923	syntax.c	FUNCTION_161
0x4004a39	              0x55	                                push rbp	      9923	syntax.c	FUNCTION_161
0x4004a3a	              0x53	                                push rbx	      9923	syntax.c	FUNCTION_161
0x4004a3b	          0x4189fc	                           mov r12d, edi	      9923	syntax.c	FUNCTION_161
0x4004a3e	      0xba00000000	                              mov edx, 0	      9924	syntax.c	FUNCTION_161
0x4004a43	    0x833d00000000	               cmp dword [0x04004a4a], 0	      9928	syntax.c	FUNCTION_161	IF_1
0x4004a4a	            0x7448	                            je 0x4004a94	      9928	syntax.c	FUNCTION_161	IF_1
0x4004a4c	          0x4863c7	                         movsxd rax, edi	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x4004a4f	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x4004a53	        0x488d1c50	                  lea rbx, [rax + rdx*2]	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x4004a57	        0x48c1e303	                              shl rbx, 3	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x4004a5b	          0x4889d8	                            mov rax, rbx	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x4004a5e	    0x480305000000	             add rax, qword [0x04004a65]	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x4004a65	        0x488b6860	            mov rbp, qword [rax + 0x60] 	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x4004a69	      0xba00000000	                              mov edx, 0	      9924	syntax.c	FUNCTION_161
0x4004a6e	          0x4885ed	                           test rbp, rbp	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x4004a71	            0x7421	                            je 0x4004a94	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x4004a73	        0x488b7858	            mov rdi, qword [rax + 0x58] 	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x4004a77	      0xe800000000	                          call 0x4004a7c	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x4004a7c	    0x48031d000000	             add rbx, qword [0x04004a83]	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x4004a83	          0x4889ef	                            mov rdi, rbp	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x4004a86	      0xe807e5ffff	               call sym.font_name2handle	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x4004a8b	        0x48894358	             mov qword [rbx + 0x58], rax	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x4004a8f	      0xba01000000	                              mov edx, 1	      9934	syntax.c	FUNCTION_161	IF_1	IF_2
0x4004a94	          0x4963c4	                        movsxd rax, r12d	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x4004a97	        0x488d0cc0	                  lea rcx, [rax + rax*8]	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x4004a9b	        0x488d1c48	                  lea rbx, [rax + rcx*2]	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x4004a9f	        0x48c1e303	                              shl rbx, 3	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x4004aa3	          0x4889dd	                            mov rbp, rbx	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x4004aa6	    0x48032d000000	             add rbp, qword [0x04004aad]	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x4004aad	        0x488b7d70	            mov rdi, qword [rbp + 0x70] 	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x4004ab1	          0x4885ff	                           test rdi, rdi	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x4004ab4	            0x740e	                            je 0x4004ac4	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x4004ab6	      0xe800000000	                          call 0x4004abb	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x4004abb	        0x48894540	            mov qword [rbp + 0x40], rax 	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x4004abf	      0xba01000000	                              mov edx, 1	      9941	syntax.c	FUNCTION_161	IF_3
0x4004ac4	          0x4889dd	                            mov rbp, rbx	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x4004ac7	    0x48032d000000	             add rbp, qword [0x04004ace]	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x4004ace	        0x488b7d78	            mov rdi, qword [rbp + 0x78] 	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x4004ad2	          0x4885ff	                           test rdi, rdi	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x4004ad5	            0x7421	                            je 0x4004af8	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x4004ad7	      0xe800000000	                          call 0x4004adc	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x4004adc	        0x48894548	            mov qword [rbp + 0x48], rax 	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x4004ae0	    0x48031d000000	             add rbx, qword [0x04004ae7]	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x4004ae7	          0x4889dd	                            mov rbp, rbx	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x4004aea	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x4004af1	          0x4885ff	                           test rdi, rdi	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x4004af4	            0x750e	                           jne 0x4004b04	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x4004af6	            0xeb1b	                           jmp 0x4004b13	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x4004af8	    0x488bbd800000	            mov rdi, qword [rbp + 0x80] 	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x4004aff	          0x4885ff	                           test rdi, rdi	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x4004b02	            0x740b	                            je 0x4004b0f	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x4004b04	      0xe800000000	                          call 0x4004b09	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x4004b09	        0x48894550	            mov qword [rbp + 0x50], rax 	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x4004b0d	            0xeb04	                           jmp 0x4004b13	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x4004b0f	            0x85d2	                           test edx, edx	      9957	syntax.c	FUNCTION_161	IF_6
0x4004b11	            0x7408	                            je 0x4004b1b	      9957	syntax.c	FUNCTION_161	IF_6
0x4004b13	          0x4489e7	                           mov edi, r12d	      9958	syntax.c	FUNCTION_161	CALL_16
0x4004b16	      0xe8e8fcffff	                    call sym.set_hl_attr	      9958	syntax.c	FUNCTION_161	CALL_16
0x4004b1b	              0x5b	                                 pop rbx	      9959	syntax.c	FUNCTION_161
0x4004b1c	              0x5d	                                 pop rbp	      9959	syntax.c	FUNCTION_161
0x4004b1d	            0x415c	                                 pop r12	      9959	syntax.c	FUNCTION_161
0x4004b1f	              0xc3	                                     ret	      9959	syntax.c	FUNCTION_161
syn_update_ends	IF,7:CALL,6:FOR,3:ELSE,0:SWITCH,0:WHILE,0:DO,0:functions,0	110
0x40012ce	            0x4156	                                push r14	      1087	syntax.c	FUNCTION_10
0x40012d0	            0x4155	                                push r13	      1087	syntax.c	FUNCTION_10
0x40012d2	            0x4154	                                push r12	      1087	syntax.c	FUNCTION_10
0x40012d4	              0x55	                                push rbp	      1087	syntax.c	FUNCTION_10
0x40012d5	              0x53	                                push rbx	      1087	syntax.c	FUNCTION_10
0x40012d6	          0x4189fc	                           mov r12d, edi	      1087	syntax.c	FUNCTION_10
0x40012d9	            0x85ff	                           test edi, edi	      1092	syntax.c	FUNCTION_10	IF_1
0x40012db	     0xf8493000000	                            je 0x4001374	      1092	syntax.c	FUNCTION_10	IF_1
0x40012e1	    0x8b0500000000	            mov eax, dword [0x040012e7] 	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40012e7	            0x85c0	                           test eax, eax	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40012e9	     0xf8e85000000	                           jle 0x4001374	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40012ef	          0x8d40ff	                      lea eax, [rax - 1]	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40012f2	      0x488d7cc009	              lea rdi, [rax + rax*8 + 9]	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40012f7	        0x48c1e704	                              shl rdi, 4	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40012fb	      0xba00000000	                              mov edx, 0	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4001300	          0x4889d1	                            mov rcx, rdx	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1	CALL_1
0x4001303	    0x48030d000000	             add rcx, qword [0x0400130a]	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1	CALL_1
0x400130a	            0x8b01	                    mov eax, dword [rcx]	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x400130c	            0x85c0	                           test eax, eax	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x400130e	            0x7858	                            js 0x4001368	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001310	            0x4898	                                    cdqe	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0x4001312	        0x488d0480	                  lea rax, [rax + rax*4]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0x4001316	        0x48c1e005	                              shl rax, 5	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0x400131a	    0x488b35000000	            mov rsi, qword [0x04001321] 	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0x4001321	    0x480386700200	            add rax, qword [rsi + 0x270]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0x4001328	          0x803801	                       cmp byte [rax], 1	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0x400132b	            0x753b	                           jne 0x4001368	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0x400132d	    0x488b05000000	            mov rax, qword [0x04001334] 	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001334	        0x48394118	            cmp qword [rcx + 0x18], rax 	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001338	            0x7d2e	                           jge 0x4001368	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x400133a	    0x488149680080	           or qword [rcx + 0x68], 0x8000	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001342	    0x48c741180000	               mov qword [rcx + 0x18], 0	      1105	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x400134a	    0xc74120000000	               mov dword [rcx + 0x20], 0	      1106	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001351	        0x4c8b4918	              mov r9, qword [rcx + 0x18]	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001355	        0x4c8b5120	            mov r10, qword [rcx + 0x20] 	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001359	        0x4c894938	              mov qword [rcx + 0x38], r9	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x400135d	        0x4c895140	             mov qword [rcx + 0x40], r10	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001361	    0xc7415c010000	               mov dword [rcx + 0x5c], 1	      1108	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001368	    0x4881c2900000	                           add rdx, 0x90	      1108	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x400136f	          0x4839d7	                            cmp rdi, rdx	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4001372	            0x758c	                           jne 0x4001300	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4001374	    0x8b0500000000	            mov eax, dword [0x0400137a] 	      1122	syntax.c	FUNCTION_10
0x400137a	          0x8d68ff	                      lea ebp, [rax - 1]	      1122	syntax.c	FUNCTION_10
0x400137d	    0x8b0d00000000	            mov ecx, dword [0x04001383] 	      1123	syntax.c	FUNCTION_10	IF_3
0x4001383	            0x85c9	                           test ecx, ecx	      1123	syntax.c	FUNCTION_10	IF_3
0x4001385	            0x7838	                            js 0x40013bf	      1123	syntax.c	FUNCTION_10	IF_3
0x4001387	            0x39cd	                            cmp ebp, ecx	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4001389	            0x7e34	                           jle 0x40013bf	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x400138b	    0x488b35000000	            mov rsi, qword [0x04001392] 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x4001392	          0x4863d5	                         movsxd rdx, ebp	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x4001395	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x4001399	        0x48c1e204	                              shl rdx, 4	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x400139d	      0xf644166940	     test byte [rsi + rdx + 0x69], 0x40 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x40013a2	            0x7414	                            je 0x40013b8	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x40013a4	            0xeb19	                           jmp 0x40013bf	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x40013a6	          0x4863d5	                         movsxd rdx, ebp	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x40013a9	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x40013ad	        0x48c1e204	                              shl rdx, 4	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x40013b1	      0xf644166940	     test byte [rsi + rdx + 0x69], 0x40 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x40013b6	            0x7507	                           jne 0x40013bf	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x40013b8	          0x83ed01	                              sub ebp, 1	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x40013bb	            0x39e9	                            cmp ecx, ebp	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x40013bd	            0x7ce7	                            jl 0x40013a6	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x40013bf	            0x39c5	                            cmp ebp, eax	      1129	syntax.c	FUNCTION_10	FOR_3
0x40013c1	     0xf8d8a000000	                           jge 0x4001451	      1129	syntax.c	FUNCTION_10	FOR_3
0x40013c7	    0x41bd00000000	                             mov r13d, 0	      1129	syntax.c	FUNCTION_10	FOR_3
0x40013cd	    0x41be01000000	                             mov r14d, 1	      1143	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x40013d3	          0x4863d5	                         movsxd rdx, ebp	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x40013d6	        0x488d1cd2	                  lea rbx, [rdx + rdx*8]	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x40013da	        0x48c1e304	                              shl rbx, 4	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x40013de	    0x48031d000000	             add rbx, qword [0x040013e5]	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x40013e5	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40013e9	          0xf6c604	                              test dh, 4	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40013ec	            0x7516	                           jne 0x4001404	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40013ee	          0x4585ed	                         test r13d, r13d	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40013f1	            0x7405	                            je 0x40013f8	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40013f3	          0x4585e4	                         test r12d, r12d	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40013f6	            0x740c	                            je 0x4001404	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40013f8	          0x83e801	                              sub eax, 1	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40013fb	            0x39e8	                            cmp eax, ebp	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40013fd	            0x7545	                           jne 0x4001444	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40013ff	          0x4585e4	                         test r12d, r12d	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4001402	            0x7440	                            je 0x4001444	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4001404	    0xc74330000000	               mov dword [rbx + 0x30], 0	      1136	syntax.c	FUNCTION_10	FOR_3	IF_5
0x400140b	    0x488b05000000	            mov rax, qword [0x04001412] 	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4001412	        0x48894328	             mov qword [rbx + 0x28], rax	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4001416	          0xf6c680	                           test dh, 0x80	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4001419	            0x7517	                           jne 0x4001432	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x400141b	          0x4585e4	                         test r12d, r12d	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x400141e	           0xf94c2	                                 sete dl	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x4001421	           0xfb6d2	                           movzx edx, dl	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x4001424	    0x8b3500000000	            mov esi, dword [0x0400142a] 	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x400142a	          0x4889df	                            mov rdi, rbx	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x400142d	      0xe842fdffff	                  call sym.update_si_end	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x4001432	          0x4585e4	                         test r12d, r12d	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4001435	            0x750d	                           jne 0x4001444	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4001437	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x400143b	      0x2500040000	                          and eax, 0x400	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4001440	        0x450f45ee	                       cmovne r13d, r14d	      1143	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4001444	          0x83c501	                              add ebp, 1	      1129	syntax.c	FUNCTION_10	FOR_3
0x4001447	    0x8b0500000000	            mov eax, dword [0x0400144d] 	      1129	syntax.c	FUNCTION_10	FOR_3
0x400144d	            0x39e8	                            cmp eax, ebp	      1129	syntax.c	FUNCTION_10	FOR_3
0x400144f	            0x7f82	                            jg 0x40013d3	      1129	syntax.c	FUNCTION_10	FOR_3
0x4001451	      0xe87becffff	                  call sym.check_keepend	      1146	syntax.c	FUNCTION_10	CALL_6
0x4001456	              0x5b	                                 pop rbx	      1147	syntax.c	FUNCTION_10
0x4001457	              0x5d	                                 pop rbp	      1147	syntax.c	FUNCTION_10
0x4001458	            0x415c	                                 pop r12	      1147	syntax.c	FUNCTION_10
0x400145a	            0x415d	                                 pop r13	      1147	syntax.c	FUNCTION_10
0x400145c	            0x415e	                                 pop r14	      1147	syntax.c	FUNCTION_10
0x400145e	              0xc3	                                     ret	      1147	syntax.c	FUNCTION_10
syn_combine_list	IF,15:CALL,7:FOR,5:ELSE,1:SWITCH,0:WHILE,1:DO,0:functions,0	151
0x40020df	          0x488b06	                    mov rax, qword [rsi]	      5423	syntax.c	FUNCTION_83	IF_1
0x40020e2	          0x4885c0	                           test rax, rax	      5423	syntax.c	FUNCTION_83	IF_1
0x40020e5	     0xf84f1010000	                            je 0x40022dc	      5423	syntax.c	FUNCTION_83	IF_1
0x40020eb	            0x4157	                                push r15	      5411	syntax.c	FUNCTION_83
0x40020ed	            0x4156	                                push r14	      5411	syntax.c	FUNCTION_83
0x40020ef	            0x4155	                                push r13	      5411	syntax.c	FUNCTION_83
0x40020f1	            0x4154	                                push r12	      5411	syntax.c	FUNCTION_83
0x40020f3	              0x55	                                push rbp	      5411	syntax.c	FUNCTION_83
0x40020f4	              0x53	                                push rbx	      5411	syntax.c	FUNCTION_83
0x40020f5	        0x4883ec18	                           sub rsp, 0x18	      5411	syntax.c	FUNCTION_83
0x40020f9	          0x4189d4	                           mov r12d, edx	      5411	syntax.c	FUNCTION_83
0x40020fc	          0x4989f5	                            mov r13, rsi	      5411	syntax.c	FUNCTION_83
0x40020ff	          0x4989fe	                            mov r14, rdi	      5411	syntax.c	FUNCTION_83
0x4002102	          0x488b3f	                    mov rdi, qword [rdi]	      5425	syntax.c	FUNCTION_83	IF_2
0x4002105	          0x4885ff	                           test rdi, rdi	      5425	syntax.c	FUNCTION_83	IF_2
0x4002108	            0x7415	                            je 0x400211f	      5425	syntax.c	FUNCTION_83	IF_2
0x400210a	          0x83fa01	                              cmp edx, 1	      5425	syntax.c	FUNCTION_83	IF_2
0x400210d	            0x7410	                            je 0x400211f	      5425	syntax.c	FUNCTION_83	IF_2
0x400210f	          0x4889fa	                            mov rdx, rdi	      5436	syntax.c	FUNCTION_83	FOR_1
0x4002112	      0xbe00000000	                              mov esi, 0	      5436	syntax.c	FUNCTION_83	FOR_1
0x4002117	        0x66833f00	                       cmp word [rdi], 0	      5436	syntax.c	FUNCTION_83	FOR_1
0x400211b	            0x7531	                           jne 0x400214e	      5436	syntax.c	FUNCTION_83	FOR_1
0x400211d	            0xeb3c	                           jmp 0x400215b	      5436	syntax.c	FUNCTION_83	FOR_1
0x400211f	        0x4183fc01	                             cmp r12d, 1	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0x4002123	            0x7505	                           jne 0x400212a	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0x4002125	      0xe800000000	                          call 0x400212a	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x400212a	        0x4183ec01	                             sub r12d, 1	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x400212e	        0x4183fc01	                             cmp r12d, 1	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x4002132	            0x770c	                            ja 0x4002140	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x4002134	        0x498b4500	                    mov rax, qword [r13]	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0x4002138	          0x498906	                    mov qword [r14], rax	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0x400213b	      0xe98e010000	                           jmp 0x40022ce	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0x4002140	        0x498b7d00	                    mov rdi, qword [r13]	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0x4002144	      0xe800000000	                          call 0x4002149	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0x4002149	      0xe980010000	                           jmp 0x40022ce	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0x400214e	          0x83c601	                              add esi, 1	      5437	syntax.c	FUNCTION_83	FOR_1
0x4002151	        0x4883c202	                              add rdx, 2	      5436	syntax.c	FUNCTION_83	FOR_1
0x4002155	        0x66833a00	                       cmp word [rdx], 0	      5436	syntax.c	FUNCTION_83	FOR_1
0x4002159	            0x75f3	                           jne 0x400214e	      5436	syntax.c	FUNCTION_83	FOR_1
0x400215b	        0x66833800	                       cmp word [rax], 0	      5438	syntax.c	FUNCTION_83	FOR_2
0x400215f	            0x7414	                            je 0x4002175	      5438	syntax.c	FUNCTION_83	FOR_2
0x4002161	      0xbb00000000	                              mov ebx, 0	      5438	syntax.c	FUNCTION_83	FOR_2
0x4002166	          0x83c301	                              add ebx, 1	      5439	syntax.c	FUNCTION_83	FOR_2
0x4002169	        0x4883c002	                              add rax, 2	      5438	syntax.c	FUNCTION_83	FOR_2
0x400216d	        0x66833800	                       cmp word [rax], 0	      5438	syntax.c	FUNCTION_83	FOR_2
0x4002171	            0x75f3	                           jne 0x4002166	      5438	syntax.c	FUNCTION_83	FOR_2
0x4002173	            0xeb05	                           jmp 0x400217a	      5438	syntax.c	FUNCTION_83	FOR_2
0x4002175	      0xbb00000000	                              mov ebx, 0	      5438	syntax.c	FUNCTION_83	FOR_2
0x400217a	          0x4863f6	                         movsxd rsi, esi	      5444	syntax.c	FUNCTION_83	CALL_3
0x400217d	      0xb900000000	                              mov ecx, 0	      5444	syntax.c	FUNCTION_83	CALL_3
0x4002182	      0xba02000000	                              mov edx, 2	      5444	syntax.c	FUNCTION_83	CALL_3
0x4002187	      0xe800000000	                          call 0x400218c	      5444	syntax.c	FUNCTION_83	CALL_3
0x400218c	          0x4863f3	                         movsxd rsi, ebx	      5445	syntax.c	FUNCTION_83	CALL_4
0x400218f	      0xb900000000	                              mov ecx, 0	      5445	syntax.c	FUNCTION_83	CALL_4
0x4002194	      0xba02000000	                              mov edx, 2	      5445	syntax.c	FUNCTION_83	CALL_4
0x4002199	        0x498b7d00	                    mov rdi, qword [r13]	      5445	syntax.c	FUNCTION_83	CALL_4
0x400219d	      0xe800000000	                          call 0x40021a2	      5445	syntax.c	FUNCTION_83	CALL_4
0x40021a2	      0xbd01000000	                              mov ebp, 1	      5445	syntax.c	FUNCTION_83	CALL_4
0x40021a7	    0x41bf02000000	                             mov r15d, 2	      5445	syntax.c	FUNCTION_83	CALL_4
0x40021ad	    0x48c744240800	                  mov qword [rsp + 8], 0	      5416	syntax.c	FUNCTION_83
0x40021b6	            0xeb07	                           jmp 0x40021bf	      5416	syntax.c	FUNCTION_83
0x40021b8	        0x4183c701	                             add r15d, 1	      5416	syntax.c	FUNCTION_83
0x40021bc	          0x83c501	                              add ebp, 1	      5416	syntax.c	FUNCTION_83
0x40021bf	          0x498b06	                    mov rax, qword [r14]	      5455	syntax.c	FUNCTION_83	FOR_3
0x40021c2	        0x498b4d00	                    mov rcx, qword [r13]	      5456	syntax.c	FUNCTION_83	FOR_3
0x40021c6	      0xbb00000000	                              mov ebx, 0	      5457	syntax.c	FUNCTION_83	FOR_3
0x40021cb	            0xeb4b	                           jmp 0x4002218	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x40021cd	          0x6639f2	                              cmp dx, si	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x40021d0	            0x7d1a	                           jge 0x40021ec	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x40021d2	          0x83fd02	                              cmp ebp, 2	      5469	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x40021d5	            0x750c	                           jne 0x40021e3	      5469	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x40021d7	          0x4863f3	                         movsxd rsi, ebx	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x40021da	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x40021df	        0x66891477	              mov word [rdi + rsi*2], dx	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x40021e3	          0x83c301	                              add ebx, 1	      5471	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x40021e6	        0x4883c002	                              add rax, 2	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x40021ea	            0xeb2c	                           jmp 0x4002218	      5473	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x40021ec	        0x4183fc02	                             cmp r12d, 2	      5479	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0x40021f0	            0x7514	                           jne 0x4002206	      5479	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0x40021f2	          0x83fd02	                              cmp ebp, 2	      5481	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x40021f5	            0x750c	                           jne 0x4002203	      5481	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x40021f7	          0x4863d3	                         movsxd rdx, ebx	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x40021fa	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x40021ff	        0x66893457	              mov word [rdi + rdx*2], si	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x4002203	          0x83c301	                              add ebx, 1	      5483	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0x4002206	           0xfb730	                   movzx esi, word [rax]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4002209	        0x488d5002	                      lea rdx, [rax + 2]	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x400220d	          0x663b31	                      cmp si, word [rcx]	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4002210	        0x480f44c2	                          cmove rax, rdx	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4002214	        0x4883c102	                              add rcx, 2	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4002218	           0xfb710	                   movzx edx, word [rax]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400221b	          0x6685d2	                             test dx, dx	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400221e	            0x7428	                            je 0x4002248	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4002220	           0xfb731	                   movzx esi, word [rcx]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4002223	          0x6685f6	                             test si, si	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4002226	            0x75a5	                           jne 0x40021cd	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4002228	          0x83fd02	                              cmp ebp, 2	      5496	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400222b	            0x750c	                           jne 0x4002239	      5496	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400222d	          0x4863f3	                         movsxd rsi, ebx	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x4002230	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x4002235	        0x66891477	              mov word [rdi + rsi*2], dx	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x4002239	        0x4883c002	                              add rax, 2	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x400223d	          0x83c301	                              add ebx, 1	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4002240	           0xfb710	                   movzx edx, word [rax]	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4002243	          0x6685d2	                             test dx, dx	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4002246	            0x75e0	                           jne 0x4002228	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4002248	        0x4183fc02	                             cmp r12d, 2	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0x400224c	            0x7528	                           jne 0x4002276	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0x400224e	           0xfb701	                   movzx eax, word [rcx]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4002251	          0x6685c0	                             test ax, ax	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4002254	            0x7420	                            je 0x4002276	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4002256	          0x83fd02	                              cmp ebp, 2	      5500	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x4002259	            0x750c	                           jne 0x4002267	      5500	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400225b	          0x4863d3	                         movsxd rdx, ebx	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400225e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x4002263	        0x66890457	              mov word [rdi + rdx*2], ax	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x4002267	        0x4883c102	                              add rcx, 2	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400226b	          0x83c301	                              add ebx, 1	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400226e	           0xfb701	                   movzx eax, word [rcx]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4002271	          0x6685c0	                             test ax, ax	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4002274	            0x75e0	                           jne 0x4002256	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4002276	          0x83fd01	                              cmp ebp, 1	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4002279	            0x7525	                           jne 0x40022a0	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x400227b	            0x85db	                           test ebx, ebx	      5509	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x400227d	            0x742d	                            je 0x40022ac	      5509	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x400227f	        0x8d7c1b02	                lea edi, [rbx + rbx + 2]	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x4002283	      0xe800000000	                          call 0x4002288	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x4002288	      0x4889442408	                mov qword [rsp + 8], rax	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x400228d	          0x4885c0	                           test rax, rax	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x4002290	            0x7423	                            je 0x40022b5	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x4002292	          0x4863db	                         movsxd rbx, ebx	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4002295	    0x66c704580000	               mov word [rax + rbx*2], 0	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x400229b	      0xe918ffffff	                           jmp 0x40021b8	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x40022a0	        0x4183ff02	                             cmp r15d, 2	      5453	syntax.c	FUNCTION_83	FOR_3
0x40022a4	     0xf8e0effffff	                           jle 0x40021b8	      5453	syntax.c	FUNCTION_83	FOR_3
0x40022aa	            0xeb09	                           jmp 0x40022b5	      5453	syntax.c	FUNCTION_83	FOR_3
0x40022ac	    0x48c744240800	                  mov qword [rsp + 8], 0	      5511	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x40022b5	          0x498b3e	                    mov rdi, qword [r14]	      5524	syntax.c	FUNCTION_83	CALL_6
0x40022b8	      0xe800000000	                          call 0x40022bd	      5524	syntax.c	FUNCTION_83	CALL_6
0x40022bd	        0x498b7d00	                    mov rdi, qword [r13]	      5525	syntax.c	FUNCTION_83	CALL_7
0x40022c1	      0xe800000000	                          call 0x40022c6	      5525	syntax.c	FUNCTION_83	CALL_7
0x40022c6	      0x488b442408	                mov rax, qword [rsp + 8]	      5526	syntax.c	FUNCTION_83
0x40022cb	          0x498906	                    mov qword [r14], rax	      5526	syntax.c	FUNCTION_83
0x40022ce	        0x4883c418	                           add rsp, 0x18	      5527	syntax.c	FUNCTION_83
0x40022d2	              0x5b	                                 pop rbx	      5527	syntax.c	FUNCTION_83
0x40022d3	              0x5d	                                 pop rbp	      5527	syntax.c	FUNCTION_83
0x40022d4	            0x415c	                                 pop r12	      5527	syntax.c	FUNCTION_83
0x40022d6	            0x415d	                                 pop r13	      5527	syntax.c	FUNCTION_83
0x40022d8	            0x415e	                                 pop r14	      5527	syntax.c	FUNCTION_83
0x40022da	            0x415f	                                 pop r15	      5527	syntax.c	FUNCTION_83
0x40022dc	            0xf3c3	                                     ret	      5527	syntax.c	FUNCTION_83
