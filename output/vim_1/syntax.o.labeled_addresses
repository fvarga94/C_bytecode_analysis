limit_pos	functions,0:IF,2:SWITCH,0:FOR,0:CALL,0:ELSE,1:WHILE,0:DO,0	36
0x400541d	              0x55	                                push rbp	      3173	syntax.c	FUNCTION_38
0x400541e	          0x4889e5	                            mov rbp, rsp	      3173	syntax.c	FUNCTION_38
0x4005421	        0x48897df8	                mov qword [rbp - 8], rdi	      3173	syntax.c	FUNCTION_38
0x4005425	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3173	syntax.c	FUNCTION_38
0x4005429	        0x488b45f8	                mov rax, qword [rbp - 8]	      3174	syntax.c	FUNCTION_38	IF_1
0x400542d	          0x488b10	                    mov rdx, qword [rax]	      3174	syntax.c	FUNCTION_38	IF_1
0x4005430	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3174	syntax.c	FUNCTION_38	IF_1
0x4005434	          0x488b00	                    mov rax, qword [rax]	      3174	syntax.c	FUNCTION_38	IF_1
0x4005437	          0x4839c2	                            cmp rdx, rax	      3174	syntax.c	FUNCTION_38	IF_1
0x400543a	            0x7e18	                           jle 0x4005454	      3174	syntax.c	FUNCTION_38	IF_1
0x400543c	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3175	syntax.c	FUNCTION_38	IF_1
0x4005440	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3175	syntax.c	FUNCTION_38	IF_1
0x4005444	        0x488b5008	                mov rdx, qword [rax + 8]	      3175	syntax.c	FUNCTION_38	IF_1
0x4005448	          0x488b00	                    mov rax, qword [rax]	      3175	syntax.c	FUNCTION_38	IF_1
0x400544b	          0x488901	                    mov qword [rcx], rax	      3175	syntax.c	FUNCTION_38	IF_1
0x400544e	        0x48895108	                mov qword [rcx + 8], rdx	      3175	syntax.c	FUNCTION_38	IF_1
0x4005452	            0xeb33	                           jmp 0x4005487	      3178	syntax.c	FUNCTION_38
0x4005454	        0x488b45f8	                mov rax, qword [rbp - 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4005458	          0x488b10	                    mov rdx, qword [rax]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x400545b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x400545f	          0x488b00	                    mov rax, qword [rax]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4005462	          0x4839c2	                            cmp rdx, rax	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4005465	            0x7520	                           jne 0x4005487	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4005467	        0x488b45f8	                mov rax, qword [rbp - 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x400546b	          0x8b5008	                mov edx, dword [rax + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x400546e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4005472	          0x8b4008	                mov eax, dword [rax + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4005475	            0x39c2	                            cmp edx, eax	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4005477	            0x7e0e	                           jle 0x4005487	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4005479	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x400547d	          0x8b5008	                mov edx, dword [rax + 8]	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4005480	        0x488b45f8	                mov rax, qword [rbp - 8]	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4005484	          0x895008	                mov dword [rax + 8], edx	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4005487	              0x90	                                     nop	      3178	syntax.c	FUNCTION_38
0x4005488	              0x5d	                                 pop rbp	      3178	syntax.c	FUNCTION_38
0x4005489	              0xc3	                                     ret	      3178	syntax.c	FUNCTION_38
combine_stl_hlt	functions,0:IF,10:SWITCH,0:FOR,0:CALL,4:ELSE,1:WHILE,0:DO,0	730
0x40137b6	              0x55	                                push rbp	      9975	syntax.c	FUNCTION_162
0x40137b7	          0x4889e5	                            mov rbp, rsp	      9975	syntax.c	FUNCTION_162
0x40137ba	              0x53	                                push rbx	      9975	syntax.c	FUNCTION_162
0x40137bb	        0x4883ec38	                           sub rsp, 0x38	      9975	syntax.c	FUNCTION_162
0x40137bf	          0x897ddc	             mov dword [rbp - 0x24], edi	      9975	syntax.c	FUNCTION_162
0x40137c2	          0x8975d8	             mov dword [rbp - 0x28], esi	      9975	syntax.c	FUNCTION_162
0x40137c5	          0x8955d4	             mov dword [rbp - 0x2c], edx	      9975	syntax.c	FUNCTION_162
0x40137c8	          0x894dd0	             mov dword [rbp - 0x30], ecx	      9975	syntax.c	FUNCTION_162
0x40137cb	        0x448945cc	             mov dword [rbp - 0x34], r8d	      9975	syntax.c	FUNCTION_162
0x40137cf	        0x44894dc8	             mov dword [rbp - 0x38], r9d	      9975	syntax.c	FUNCTION_162
0x40137d3	    0x488b05000000	            mov rax, qword [0x040137da] 	      9976	syntax.c	FUNCTION_162
0x40137da	        0x488945e8	             mov qword [rbp - 0x18], rax	      9976	syntax.c	FUNCTION_162
0x40137de	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9978	syntax.c	FUNCTION_162	IF_1
0x40137e2	     0xf85e5000000	                           jne 0x40138cd	      9978	syntax.c	FUNCTION_162	IF_1
0x40137e8	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40137eb	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40137ee	             0x1d0	                            add eax, edx	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40137f0	          0x4863d0	                         movsxd rdx, eax	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40137f3	          0x4889d0	                            mov rax, rdx	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40137f6	        0x48c1e003	                              shl rax, 3	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40137fa	          0x4801d0	                            add rax, rdx	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40137fd	          0x4801c0	                            add rax, rax	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x4013800	          0x4801d0	                            add rax, rdx	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x4013803	        0x48c1e003	                              shl rax, 3	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x4013807	          0x4889c2	                            mov rdx, rax	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x401380a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x401380e	          0x4801d0	                            add rax, rdx	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x4013811	      0xba98000000	                           mov edx, 0x98	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x4013816	      0xbe00000000	                              mov esi, 0	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x401381b	          0x4889c7	                            mov rdi, rax	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x401381e	      0xe800000000	                          call 0x4013823	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x4013823	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9981	syntax.c	FUNCTION_162	IF_1
0x4013826	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9981	syntax.c	FUNCTION_162	IF_1
0x4013829	             0x1d0	                            add eax, edx	      9981	syntax.c	FUNCTION_162	IF_1
0x401382b	          0x4863d0	                         movsxd rdx, eax	      9981	syntax.c	FUNCTION_162	IF_1
0x401382e	          0x4889d0	                            mov rax, rdx	      9981	syntax.c	FUNCTION_162	IF_1
0x4013831	        0x48c1e003	                              shl rax, 3	      9981	syntax.c	FUNCTION_162	IF_1
0x4013835	          0x4801d0	                            add rax, rdx	      9981	syntax.c	FUNCTION_162	IF_1
0x4013838	          0x4801c0	                            add rax, rax	      9981	syntax.c	FUNCTION_162	IF_1
0x401383b	          0x4801d0	                            add rax, rdx	      9981	syntax.c	FUNCTION_162	IF_1
0x401383e	        0x48c1e003	                              shl rax, 3	      9981	syntax.c	FUNCTION_162	IF_1
0x4013842	          0x4889c2	                            mov rdx, rax	      9981	syntax.c	FUNCTION_162	IF_1
0x4013845	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9981	syntax.c	FUNCTION_162	IF_1
0x4013849	          0x4801c2	                            add rdx, rax	      9981	syntax.c	FUNCTION_162	IF_1
0x401384c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      9981	syntax.c	FUNCTION_162	IF_1
0x401384f	            0x4898	                                    cdqe	      9981	syntax.c	FUNCTION_162	IF_1
0x4013851	    0x8b0485000000	                  mov eax, dword [rax*4]	      9981	syntax.c	FUNCTION_162	IF_1
0x4013858	          0x894214	             mov dword [rdx + 0x14], eax	      9981	syntax.c	FUNCTION_162	IF_1
0x401385b	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9982	syntax.c	FUNCTION_162	IF_1
0x401385e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9982	syntax.c	FUNCTION_162	IF_1
0x4013861	             0x1d0	                            add eax, edx	      9982	syntax.c	FUNCTION_162	IF_1
0x4013863	          0x4863d0	                         movsxd rdx, eax	      9982	syntax.c	FUNCTION_162	IF_1
0x4013866	          0x4889d0	                            mov rax, rdx	      9982	syntax.c	FUNCTION_162	IF_1
0x4013869	        0x48c1e003	                              shl rax, 3	      9982	syntax.c	FUNCTION_162	IF_1
0x401386d	          0x4801d0	                            add rax, rdx	      9982	syntax.c	FUNCTION_162	IF_1
0x4013870	          0x4801c0	                            add rax, rax	      9982	syntax.c	FUNCTION_162	IF_1
0x4013873	          0x4801d0	                            add rax, rdx	      9982	syntax.c	FUNCTION_162	IF_1
0x4013876	        0x48c1e003	                              shl rax, 3	      9982	syntax.c	FUNCTION_162	IF_1
0x401387a	          0x4889c2	                            mov rdx, rax	      9982	syntax.c	FUNCTION_162	IF_1
0x401387d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9982	syntax.c	FUNCTION_162	IF_1
0x4013881	          0x4801c2	                            add rdx, rax	      9982	syntax.c	FUNCTION_162	IF_1
0x4013884	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      9982	syntax.c	FUNCTION_162	IF_1
0x4013887	            0x4898	                                    cdqe	      9982	syntax.c	FUNCTION_162	IF_1
0x4013889	    0x8b0485000000	                  mov eax, dword [rax*4]	      9982	syntax.c	FUNCTION_162	IF_1
0x4013890	          0x89422c	             mov dword [rdx + 0x2c], eax	      9982	syntax.c	FUNCTION_162	IF_1
0x4013893	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9984	syntax.c	FUNCTION_162	IF_1
0x4013896	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9984	syntax.c	FUNCTION_162	IF_1
0x4013899	             0x1d0	                            add eax, edx	      9984	syntax.c	FUNCTION_162	IF_1
0x401389b	          0x4863d0	                         movsxd rdx, eax	      9984	syntax.c	FUNCTION_162	IF_1
0x401389e	          0x4889d0	                            mov rax, rdx	      9984	syntax.c	FUNCTION_162	IF_1
0x40138a1	        0x48c1e003	                              shl rax, 3	      9984	syntax.c	FUNCTION_162	IF_1
0x40138a5	          0x4801d0	                            add rax, rdx	      9984	syntax.c	FUNCTION_162	IF_1
0x40138a8	          0x4801c0	                            add rax, rax	      9984	syntax.c	FUNCTION_162	IF_1
0x40138ab	          0x4801d0	                            add rax, rdx	      9984	syntax.c	FUNCTION_162	IF_1
0x40138ae	        0x48c1e003	                              shl rax, 3	      9984	syntax.c	FUNCTION_162	IF_1
0x40138b2	          0x4889c2	                            mov rdx, rax	      9984	syntax.c	FUNCTION_162	IF_1
0x40138b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9984	syntax.c	FUNCTION_162	IF_1
0x40138b9	          0x4801c2	                            add rdx, rax	      9984	syntax.c	FUNCTION_162	IF_1
0x40138bc	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      9984	syntax.c	FUNCTION_162	IF_1
0x40138bf	            0x4898	                                    cdqe	      9984	syntax.c	FUNCTION_162	IF_1
0x40138c1	    0x8b0485000000	                  mov eax, dword [rax*4]	      9984	syntax.c	FUNCTION_162	IF_1
0x40138c8	          0x89426c	             mov dword [rdx + 0x6c], eax	      9984	syntax.c	FUNCTION_162	IF_1
0x40138cb	            0xeb62	                           jmp 0x401392f	      9984	syntax.c	FUNCTION_162	IF_1
0x40138cd	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138d0	          0x4863d0	                         movsxd rdx, eax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138d3	          0x4889d0	                            mov rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138d6	        0x48c1e003	                              shl rax, 3	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138da	          0x4801d0	                            add rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138dd	          0x4801c0	                            add rax, rax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138e0	          0x4801d0	                            add rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138e3	        0x48c1e003	                              shl rax, 3	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138e7	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138f2	        0x488d0c02	                    lea rcx, [rdx + rax]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138f6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138f9	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138fc	             0x1d0	                            add eax, edx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40138fe	          0x4863d0	                         movsxd rdx, eax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x4013901	          0x4889d0	                            mov rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x4013904	        0x48c1e003	                              shl rax, 3	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x4013908	          0x4801d0	                            add rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x401390b	          0x4801c0	                            add rax, rax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x401390e	          0x4801d0	                            add rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x4013911	        0x48c1e003	                              shl rax, 3	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x4013915	          0x4889c2	                            mov rdx, rax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x4013918	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x401391c	          0x4801d0	                            add rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x401391f	      0xba98000000	                           mov edx, 0x98	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x4013924	          0x4889ce	                            mov rsi, rcx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x4013927	          0x4889c7	                            mov rdi, rax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x401392a	      0xe800000000	                          call 0x401392f	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x401392f	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9991	syntax.c	FUNCTION_162
0x4013932	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9991	syntax.c	FUNCTION_162
0x4013935	             0x1d0	                            add eax, edx	      9991	syntax.c	FUNCTION_162
0x4013937	          0x4863d0	                         movsxd rdx, eax	      9991	syntax.c	FUNCTION_162
0x401393a	          0x4889d0	                            mov rax, rdx	      9991	syntax.c	FUNCTION_162
0x401393d	        0x48c1e003	                              shl rax, 3	      9991	syntax.c	FUNCTION_162
0x4013941	          0x4801d0	                            add rax, rdx	      9991	syntax.c	FUNCTION_162
0x4013944	          0x4801c0	                            add rax, rax	      9991	syntax.c	FUNCTION_162
0x4013947	          0x4801d0	                            add rax, rdx	      9991	syntax.c	FUNCTION_162
0x401394a	        0x48c1e003	                              shl rax, 3	      9991	syntax.c	FUNCTION_162
0x401394e	          0x4889c2	                            mov rdx, rax	      9991	syntax.c	FUNCTION_162
0x4013951	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9991	syntax.c	FUNCTION_162
0x4013955	          0x4801d0	                            add rax, rdx	      9991	syntax.c	FUNCTION_162
0x4013958	    0xc78088000000	               mov dword [rax + 0x88], 0	      9991	syntax.c	FUNCTION_162
0x4013962	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9993	syntax.c	FUNCTION_162
0x4013965	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9993	syntax.c	FUNCTION_162
0x4013968	             0x1d0	                            add eax, edx	      9993	syntax.c	FUNCTION_162
0x401396a	          0x4863d0	                         movsxd rdx, eax	      9993	syntax.c	FUNCTION_162
0x401396d	          0x4889d0	                            mov rax, rdx	      9993	syntax.c	FUNCTION_162
0x4013970	        0x48c1e003	                              shl rax, 3	      9993	syntax.c	FUNCTION_162
0x4013974	          0x4801d0	                            add rax, rdx	      9993	syntax.c	FUNCTION_162
0x4013977	          0x4801c0	                            add rax, rax	      9993	syntax.c	FUNCTION_162
0x401397a	          0x4801d0	                            add rax, rdx	      9993	syntax.c	FUNCTION_162
0x401397d	        0x48c1e003	                              shl rax, 3	      9993	syntax.c	FUNCTION_162
0x4013981	          0x4889c2	                            mov rdx, rax	      9993	syntax.c	FUNCTION_162
0x4013984	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9993	syntax.c	FUNCTION_162
0x4013988	        0x488d0c02	                    lea rcx, [rdx + rax]	      9993	syntax.c	FUNCTION_162
0x401398c	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9993	syntax.c	FUNCTION_162
0x401398f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9993	syntax.c	FUNCTION_162
0x4013992	             0x1d0	                            add eax, edx	      9993	syntax.c	FUNCTION_162
0x4013994	          0x4863d0	                         movsxd rdx, eax	      9993	syntax.c	FUNCTION_162
0x4013997	          0x4889d0	                            mov rax, rdx	      9993	syntax.c	FUNCTION_162
0x401399a	        0x48c1e003	                              shl rax, 3	      9993	syntax.c	FUNCTION_162
0x401399e	          0x4801d0	                            add rax, rdx	      9993	syntax.c	FUNCTION_162
0x40139a1	          0x4801c0	                            add rax, rax	      9993	syntax.c	FUNCTION_162
0x40139a4	          0x4801d0	                            add rax, rdx	      9993	syntax.c	FUNCTION_162
0x40139a7	        0x48c1e003	                              shl rax, 3	      9993	syntax.c	FUNCTION_162
0x40139ab	          0x4889c2	                            mov rdx, rax	      9993	syntax.c	FUNCTION_162
0x40139ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9993	syntax.c	FUNCTION_162
0x40139b2	          0x4801d0	                            add rax, rdx	      9993	syntax.c	FUNCTION_162
0x40139b5	          0x8b7014	            mov esi, dword [rax + 0x14] 	      9993	syntax.c	FUNCTION_162
0x40139b8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9994	syntax.c	FUNCTION_162
0x40139bb	          0x4863d0	                         movsxd rdx, eax	      9994	syntax.c	FUNCTION_162
0x40139be	          0x4889d0	                            mov rax, rdx	      9994	syntax.c	FUNCTION_162
0x40139c1	        0x48c1e003	                              shl rax, 3	      9994	syntax.c	FUNCTION_162
0x40139c5	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x40139c8	          0x4801c0	                            add rax, rax	      9994	syntax.c	FUNCTION_162
0x40139cb	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x40139ce	        0x48c1e003	                              shl rax, 3	      9994	syntax.c	FUNCTION_162
0x40139d2	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9994	syntax.c	FUNCTION_162
0x40139d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9994	syntax.c	FUNCTION_162
0x40139dd	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x40139e0	          0x8b7814	            mov edi, dword [rax + 0x14] 	      9994	syntax.c	FUNCTION_162
0x40139e3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9994	syntax.c	FUNCTION_162
0x40139e6	          0x4863d0	                         movsxd rdx, eax	      9994	syntax.c	FUNCTION_162
0x40139e9	          0x4889d0	                            mov rax, rdx	      9994	syntax.c	FUNCTION_162
0x40139ec	        0x48c1e003	                              shl rax, 3	      9994	syntax.c	FUNCTION_162
0x40139f0	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x40139f3	          0x4801c0	                            add rax, rax	      9994	syntax.c	FUNCTION_162
0x40139f6	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x40139f9	        0x48c1e003	                              shl rax, 3	      9994	syntax.c	FUNCTION_162
0x40139fd	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9994	syntax.c	FUNCTION_162
0x4013a04	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9994	syntax.c	FUNCTION_162
0x4013a08	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x4013a0b	          0x8b4014	            mov eax, dword [rax + 0x14] 	      9994	syntax.c	FUNCTION_162
0x4013a0e	            0x31f8	                            xor eax, edi	      9994	syntax.c	FUNCTION_162
0x4013a10	            0x31f0	                            xor eax, esi	      9993	syntax.c	FUNCTION_162
0x4013a12	          0x894114	             mov dword [rcx + 0x14], eax	      9993	syntax.c	FUNCTION_162
0x4013a15	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a18	          0x4863d0	                         movsxd rdx, eax	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a1b	          0x4889d0	                            mov rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a1e	        0x48c1e003	                              shl rax, 3	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a22	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a25	          0x4801c0	                            add rax, rax	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a28	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a2b	        0x48c1e003	                              shl rax, 3	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a2f	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a3a	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a3d	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a41	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a44	          0x4863d0	                         movsxd rdx, eax	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a47	          0x4889d0	                            mov rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a4a	        0x48c1e003	                              shl rax, 3	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a4e	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a51	          0x4801c0	                            add rax, rax	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a54	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a57	        0x48c1e003	                              shl rax, 3	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a5b	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a66	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a69	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a6d	          0x4839c1	                            cmp rcx, rax	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a70	            0x745a	                            je 0x4013acc	      9995	syntax.c	FUNCTION_162	IF_2
0x4013a72	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a75	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a78	             0x1d0	                            add eax, edx	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a7a	          0x4863d0	                         movsxd rdx, eax	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a7d	          0x4889d0	                            mov rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a80	        0x48c1e003	                              shl rax, 3	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a84	          0x4801d0	                            add rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a87	          0x4801c0	                            add rax, rax	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a8a	          0x4801d0	                            add rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a8d	        0x48c1e003	                              shl rax, 3	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a91	          0x4889c2	                            mov rdx, rax	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a94	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a98	        0x488d0c02	                    lea rcx, [rdx + rax]	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a9c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9996	syntax.c	FUNCTION_162	IF_2
0x4013a9f	          0x4863d0	                         movsxd rdx, eax	      9996	syntax.c	FUNCTION_162	IF_2
0x4013aa2	          0x4889d0	                            mov rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x4013aa5	        0x48c1e003	                              shl rax, 3	      9996	syntax.c	FUNCTION_162	IF_2
0x4013aa9	          0x4801d0	                            add rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x4013aac	          0x4801c0	                            add rax, rax	      9996	syntax.c	FUNCTION_162	IF_2
0x4013aaf	          0x4801d0	                            add rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x4013ab2	        0x48c1e003	                              shl rax, 3	      9996	syntax.c	FUNCTION_162	IF_2
0x4013ab6	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9996	syntax.c	FUNCTION_162	IF_2
0x4013abd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9996	syntax.c	FUNCTION_162	IF_2
0x4013ac1	          0x4801d0	                            add rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x4013ac4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9996	syntax.c	FUNCTION_162	IF_2
0x4013ac8	        0x48894118	             mov qword [rcx + 0x18], rax	      9996	syntax.c	FUNCTION_162	IF_2
0x4013acc	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9997	syntax.c	FUNCTION_162	IF_3
0x4013acf	          0x4863d0	                         movsxd rdx, eax	      9997	syntax.c	FUNCTION_162	IF_3
0x4013ad2	          0x4889d0	                            mov rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x4013ad5	        0x48c1e003	                              shl rax, 3	      9997	syntax.c	FUNCTION_162	IF_3
0x4013ad9	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x4013adc	          0x4801c0	                            add rax, rax	      9997	syntax.c	FUNCTION_162	IF_3
0x4013adf	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x4013ae2	        0x48c1e003	                              shl rax, 3	      9997	syntax.c	FUNCTION_162	IF_3
0x4013ae6	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9997	syntax.c	FUNCTION_162	IF_3
0x4013aed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9997	syntax.c	FUNCTION_162	IF_3
0x4013af1	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x4013af4	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      9997	syntax.c	FUNCTION_162	IF_3
0x4013af8	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9997	syntax.c	FUNCTION_162	IF_3
0x4013afb	          0x4863d0	                         movsxd rdx, eax	      9997	syntax.c	FUNCTION_162	IF_3
0x4013afe	          0x4889d0	                            mov rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b01	        0x48c1e003	                              shl rax, 3	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b05	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b08	          0x4801c0	                            add rax, rax	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b0b	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b0e	        0x48c1e003	                              shl rax, 3	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b12	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b1d	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b20	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b24	          0x4839c1	                            cmp rcx, rax	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b27	            0x745a	                            je 0x4013b83	      9997	syntax.c	FUNCTION_162	IF_3
0x4013b29	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b2c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b2f	             0x1d0	                            add eax, edx	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b31	          0x4863d0	                         movsxd rdx, eax	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b34	          0x4889d0	                            mov rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b37	        0x48c1e003	                              shl rax, 3	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b3b	          0x4801d0	                            add rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b3e	          0x4801c0	                            add rax, rax	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b41	          0x4801d0	                            add rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b44	        0x48c1e003	                              shl rax, 3	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b48	          0x4889c2	                            mov rdx, rax	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b4f	        0x488d0c02	                    lea rcx, [rdx + rax]	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b53	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b56	          0x4863d0	                         movsxd rdx, eax	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b59	          0x4889d0	                            mov rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b5c	        0x48c1e003	                              shl rax, 3	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b60	          0x4801d0	                            add rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b63	          0x4801c0	                            add rax, rax	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b66	          0x4801d0	                            add rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b69	        0x48c1e003	                              shl rax, 3	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b6d	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b78	          0x4801d0	                            add rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b7b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b7f	        0x48894120	             mov qword [rcx + 0x20], rax	      9998	syntax.c	FUNCTION_162	IF_3
0x4013b83	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9999	syntax.c	FUNCTION_162
0x4013b86	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9999	syntax.c	FUNCTION_162
0x4013b89	             0x1d0	                            add eax, edx	      9999	syntax.c	FUNCTION_162
0x4013b8b	          0x4863d0	                         movsxd rdx, eax	      9999	syntax.c	FUNCTION_162
0x4013b8e	          0x4889d0	                            mov rax, rdx	      9999	syntax.c	FUNCTION_162
0x4013b91	        0x48c1e003	                              shl rax, 3	      9999	syntax.c	FUNCTION_162
0x4013b95	          0x4801d0	                            add rax, rdx	      9999	syntax.c	FUNCTION_162
0x4013b98	          0x4801c0	                            add rax, rax	      9999	syntax.c	FUNCTION_162
0x4013b9b	          0x4801d0	                            add rax, rdx	      9999	syntax.c	FUNCTION_162
0x4013b9e	        0x48c1e003	                              shl rax, 3	      9999	syntax.c	FUNCTION_162
0x4013ba2	          0x4889c2	                            mov rdx, rax	      9999	syntax.c	FUNCTION_162
0x4013ba5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9999	syntax.c	FUNCTION_162
0x4013ba9	        0x488d0c02	                    lea rcx, [rdx + rax]	      9999	syntax.c	FUNCTION_162
0x4013bad	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9999	syntax.c	FUNCTION_162
0x4013bb0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9999	syntax.c	FUNCTION_162
0x4013bb3	             0x1d0	                            add eax, edx	      9999	syntax.c	FUNCTION_162
0x4013bb5	          0x4863d0	                         movsxd rdx, eax	      9999	syntax.c	FUNCTION_162
0x4013bb8	          0x4889d0	                            mov rax, rdx	      9999	syntax.c	FUNCTION_162
0x4013bbb	        0x48c1e003	                              shl rax, 3	      9999	syntax.c	FUNCTION_162
0x4013bbf	          0x4801d0	                            add rax, rdx	      9999	syntax.c	FUNCTION_162
0x4013bc2	          0x4801c0	                            add rax, rax	      9999	syntax.c	FUNCTION_162
0x4013bc5	          0x4801d0	                            add rax, rdx	      9999	syntax.c	FUNCTION_162
0x4013bc8	        0x48c1e003	                              shl rax, 3	      9999	syntax.c	FUNCTION_162
0x4013bcc	          0x4889c2	                            mov rdx, rax	      9999	syntax.c	FUNCTION_162
0x4013bcf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9999	syntax.c	FUNCTION_162
0x4013bd3	          0x4801d0	                            add rax, rdx	      9999	syntax.c	FUNCTION_162
0x4013bd6	          0x8b702c	            mov esi, dword [rax + 0x2c] 	      9999	syntax.c	FUNCTION_162
0x4013bd9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10000	syntax.c	FUNCTION_162
0x4013bdc	          0x4863d0	                         movsxd rdx, eax	     10000	syntax.c	FUNCTION_162
0x4013bdf	          0x4889d0	                            mov rax, rdx	     10000	syntax.c	FUNCTION_162
0x4013be2	        0x48c1e003	                              shl rax, 3	     10000	syntax.c	FUNCTION_162
0x4013be6	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x4013be9	          0x4801c0	                            add rax, rax	     10000	syntax.c	FUNCTION_162
0x4013bec	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x4013bef	        0x48c1e003	                              shl rax, 3	     10000	syntax.c	FUNCTION_162
0x4013bf3	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10000	syntax.c	FUNCTION_162
0x4013bfa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10000	syntax.c	FUNCTION_162
0x4013bfe	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x4013c01	          0x8b782c	            mov edi, dword [rax + 0x2c] 	     10000	syntax.c	FUNCTION_162
0x4013c04	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10000	syntax.c	FUNCTION_162
0x4013c07	          0x4863d0	                         movsxd rdx, eax	     10000	syntax.c	FUNCTION_162
0x4013c0a	          0x4889d0	                            mov rax, rdx	     10000	syntax.c	FUNCTION_162
0x4013c0d	        0x48c1e003	                              shl rax, 3	     10000	syntax.c	FUNCTION_162
0x4013c11	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x4013c14	          0x4801c0	                            add rax, rax	     10000	syntax.c	FUNCTION_162
0x4013c17	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x4013c1a	        0x48c1e003	                              shl rax, 3	     10000	syntax.c	FUNCTION_162
0x4013c1e	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10000	syntax.c	FUNCTION_162
0x4013c25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10000	syntax.c	FUNCTION_162
0x4013c29	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x4013c2c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	     10000	syntax.c	FUNCTION_162
0x4013c2f	            0x31f8	                            xor eax, edi	     10000	syntax.c	FUNCTION_162
0x4013c31	            0x31f0	                            xor eax, esi	      9999	syntax.c	FUNCTION_162
0x4013c33	          0x89412c	             mov dword [rcx + 0x2c], eax	      9999	syntax.c	FUNCTION_162
0x4013c36	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c39	          0x4863d0	                         movsxd rdx, eax	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c3c	          0x4889d0	                            mov rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c3f	        0x48c1e003	                              shl rax, 3	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c43	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c46	          0x4801c0	                            add rax, rax	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c49	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c4c	        0x48c1e003	                              shl rax, 3	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c50	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c5b	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c5e	          0x8b4834	            mov ecx, dword [rax + 0x34] 	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c61	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c64	          0x4863d0	                         movsxd rdx, eax	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c67	          0x4889d0	                            mov rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c6a	        0x48c1e003	                              shl rax, 3	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c6e	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c71	          0x4801c0	                            add rax, rax	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c74	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c77	        0x48c1e003	                              shl rax, 3	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c7b	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c86	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c89	          0x8b4034	            mov eax, dword [rax + 0x34] 	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c8c	            0x39c1	                            cmp ecx, eax	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c8e	            0x7458	                            je 0x4013ce8	     10001	syntax.c	FUNCTION_162	IF_4
0x4013c90	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10002	syntax.c	FUNCTION_162	IF_4
0x4013c93	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10002	syntax.c	FUNCTION_162	IF_4
0x4013c96	             0x1d0	                            add eax, edx	     10002	syntax.c	FUNCTION_162	IF_4
0x4013c98	          0x4863d0	                         movsxd rdx, eax	     10002	syntax.c	FUNCTION_162	IF_4
0x4013c9b	          0x4889d0	                            mov rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x4013c9e	        0x48c1e003	                              shl rax, 3	     10002	syntax.c	FUNCTION_162	IF_4
0x4013ca2	          0x4801d0	                            add rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x4013ca5	          0x4801c0	                            add rax, rax	     10002	syntax.c	FUNCTION_162	IF_4
0x4013ca8	          0x4801d0	                            add rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cab	        0x48c1e003	                              shl rax, 3	     10002	syntax.c	FUNCTION_162	IF_4
0x4013caf	          0x4889c2	                            mov rdx, rax	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cb2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cb6	        0x488d0c02	                    lea rcx, [rdx + rax]	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cba	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cbd	          0x4863d0	                         movsxd rdx, eax	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cc0	          0x4889d0	                            mov rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cc3	        0x48c1e003	                              shl rax, 3	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cc7	          0x4801d0	                            add rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cca	          0x4801c0	                            add rax, rax	     10002	syntax.c	FUNCTION_162	IF_4
0x4013ccd	          0x4801d0	                            add rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cd0	        0x48c1e003	                              shl rax, 3	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cd4	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cdb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10002	syntax.c	FUNCTION_162	IF_4
0x4013cdf	          0x4801d0	                            add rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x4013ce2	          0x8b4034	            mov eax, dword [rax + 0x34] 	     10002	syntax.c	FUNCTION_162	IF_4
0x4013ce5	          0x894134	             mov dword [rcx + 0x34], eax	     10002	syntax.c	FUNCTION_162	IF_4
0x4013ce8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10003	syntax.c	FUNCTION_162	IF_5
0x4013ceb	          0x4863d0	                         movsxd rdx, eax	     10003	syntax.c	FUNCTION_162	IF_5
0x4013cee	          0x4889d0	                            mov rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x4013cf1	        0x48c1e003	                              shl rax, 3	     10003	syntax.c	FUNCTION_162	IF_5
0x4013cf5	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x4013cf8	          0x4801c0	                            add rax, rax	     10003	syntax.c	FUNCTION_162	IF_5
0x4013cfb	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x4013cfe	        0x48c1e003	                              shl rax, 3	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d02	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d0d	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d10	          0x8b4838	            mov ecx, dword [rax + 0x38] 	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d13	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d16	          0x4863d0	                         movsxd rdx, eax	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d19	          0x4889d0	                            mov rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d1c	        0x48c1e003	                              shl rax, 3	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d20	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d23	          0x4801c0	                            add rax, rax	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d26	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d29	        0x48c1e003	                              shl rax, 3	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d2d	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d34	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d38	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d3b	          0x8b4038	            mov eax, dword [rax + 0x38] 	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d3e	            0x39c1	                            cmp ecx, eax	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d40	            0x7458	                            je 0x4013d9a	     10003	syntax.c	FUNCTION_162	IF_5
0x4013d42	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d45	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d48	             0x1d0	                            add eax, edx	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d4a	          0x4863d0	                         movsxd rdx, eax	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d4d	          0x4889d0	                            mov rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d50	        0x48c1e003	                              shl rax, 3	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d54	          0x4801d0	                            add rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d57	          0x4801c0	                            add rax, rax	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d5a	          0x4801d0	                            add rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d5d	        0x48c1e003	                              shl rax, 3	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d61	          0x4889c2	                            mov rdx, rax	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d68	        0x488d0c02	                    lea rcx, [rdx + rax]	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d6c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d6f	          0x4863d0	                         movsxd rdx, eax	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d72	          0x4889d0	                            mov rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d75	        0x48c1e003	                              shl rax, 3	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d79	          0x4801d0	                            add rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d7c	          0x4801c0	                            add rax, rax	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d7f	          0x4801d0	                            add rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d82	        0x48c1e003	                              shl rax, 3	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d86	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d91	          0x4801d0	                            add rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d94	          0x8b4038	            mov eax, dword [rax + 0x38] 	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d97	          0x894138	             mov dword [rcx + 0x38], eax	     10004	syntax.c	FUNCTION_162	IF_5
0x4013d9a	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10006	syntax.c	FUNCTION_162
0x4013d9d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10006	syntax.c	FUNCTION_162
0x4013da0	             0x1d0	                            add eax, edx	     10006	syntax.c	FUNCTION_162
0x4013da2	          0x4863d0	                         movsxd rdx, eax	     10006	syntax.c	FUNCTION_162
0x4013da5	          0x4889d0	                            mov rax, rdx	     10006	syntax.c	FUNCTION_162
0x4013da8	        0x48c1e003	                              shl rax, 3	     10006	syntax.c	FUNCTION_162
0x4013dac	          0x4801d0	                            add rax, rdx	     10006	syntax.c	FUNCTION_162
0x4013daf	          0x4801c0	                            add rax, rax	     10006	syntax.c	FUNCTION_162
0x4013db2	          0x4801d0	                            add rax, rdx	     10006	syntax.c	FUNCTION_162
0x4013db5	        0x48c1e003	                              shl rax, 3	     10006	syntax.c	FUNCTION_162
0x4013db9	          0x4889c2	                            mov rdx, rax	     10006	syntax.c	FUNCTION_162
0x4013dbc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10006	syntax.c	FUNCTION_162
0x4013dc0	        0x488d0c02	                    lea rcx, [rdx + rax]	     10006	syntax.c	FUNCTION_162
0x4013dc4	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10006	syntax.c	FUNCTION_162
0x4013dc7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10006	syntax.c	FUNCTION_162
0x4013dca	             0x1d0	                            add eax, edx	     10006	syntax.c	FUNCTION_162
0x4013dcc	          0x4863d0	                         movsxd rdx, eax	     10006	syntax.c	FUNCTION_162
0x4013dcf	          0x4889d0	                            mov rax, rdx	     10006	syntax.c	FUNCTION_162
0x4013dd2	        0x48c1e003	                              shl rax, 3	     10006	syntax.c	FUNCTION_162
0x4013dd6	          0x4801d0	                            add rax, rdx	     10006	syntax.c	FUNCTION_162
0x4013dd9	          0x4801c0	                            add rax, rax	     10006	syntax.c	FUNCTION_162
0x4013ddc	          0x4801d0	                            add rax, rdx	     10006	syntax.c	FUNCTION_162
0x4013ddf	        0x48c1e003	                              shl rax, 3	     10006	syntax.c	FUNCTION_162
0x4013de3	          0x4889c2	                            mov rdx, rax	     10006	syntax.c	FUNCTION_162
0x4013de6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10006	syntax.c	FUNCTION_162
0x4013dea	          0x4801d0	                            add rax, rdx	     10006	syntax.c	FUNCTION_162
0x4013ded	          0x8b706c	            mov esi, dword [rax + 0x6c] 	     10006	syntax.c	FUNCTION_162
0x4013df0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10007	syntax.c	FUNCTION_162
0x4013df3	          0x4863d0	                         movsxd rdx, eax	     10007	syntax.c	FUNCTION_162
0x4013df6	          0x4889d0	                            mov rax, rdx	     10007	syntax.c	FUNCTION_162
0x4013df9	        0x48c1e003	                              shl rax, 3	     10007	syntax.c	FUNCTION_162
0x4013dfd	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x4013e00	          0x4801c0	                            add rax, rax	     10007	syntax.c	FUNCTION_162
0x4013e03	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x4013e06	        0x48c1e003	                              shl rax, 3	     10007	syntax.c	FUNCTION_162
0x4013e0a	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10007	syntax.c	FUNCTION_162
0x4013e11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10007	syntax.c	FUNCTION_162
0x4013e15	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x4013e18	          0x8b786c	            mov edi, dword [rax + 0x6c] 	     10007	syntax.c	FUNCTION_162
0x4013e1b	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10007	syntax.c	FUNCTION_162
0x4013e1e	          0x4863d0	                         movsxd rdx, eax	     10007	syntax.c	FUNCTION_162
0x4013e21	          0x4889d0	                            mov rax, rdx	     10007	syntax.c	FUNCTION_162
0x4013e24	        0x48c1e003	                              shl rax, 3	     10007	syntax.c	FUNCTION_162
0x4013e28	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x4013e2b	          0x4801c0	                            add rax, rax	     10007	syntax.c	FUNCTION_162
0x4013e2e	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x4013e31	        0x48c1e003	                              shl rax, 3	     10007	syntax.c	FUNCTION_162
0x4013e35	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10007	syntax.c	FUNCTION_162
0x4013e3c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10007	syntax.c	FUNCTION_162
0x4013e40	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x4013e43	          0x8b406c	            mov eax, dword [rax + 0x6c] 	     10007	syntax.c	FUNCTION_162
0x4013e46	            0x31f8	                            xor eax, edi	     10007	syntax.c	FUNCTION_162
0x4013e48	            0x31f0	                            xor eax, esi	     10006	syntax.c	FUNCTION_162
0x4013e4a	          0x89416c	             mov dword [rcx + 0x6c], eax	     10006	syntax.c	FUNCTION_162
0x4013e4d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e50	          0x4863d0	                         movsxd rdx, eax	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e53	          0x4889d0	                            mov rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e56	        0x48c1e003	                              shl rax, 3	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e5a	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e5d	          0x4801c0	                            add rax, rax	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e60	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e63	        0x48c1e003	                              shl rax, 3	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e67	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e72	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e75	        0x488b4840	            mov rcx, qword [rax + 0x40] 	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e79	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e7c	          0x4863d0	                         movsxd rdx, eax	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e7f	          0x4889d0	                            mov rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e82	        0x48c1e003	                              shl rax, 3	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e86	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e89	          0x4801c0	                            add rax, rax	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e8c	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e8f	        0x48c1e003	                              shl rax, 3	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e93	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10010	syntax.c	FUNCTION_162	IF_6
0x4013e9e	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x4013ea1	        0x488b4040	            mov rax, qword [rax + 0x40] 	     10010	syntax.c	FUNCTION_162	IF_6
0x4013ea5	          0x4839c1	                            cmp rcx, rax	     10010	syntax.c	FUNCTION_162	IF_6
0x4013ea8	            0x745a	                            je 0x4013f04	     10010	syntax.c	FUNCTION_162	IF_6
0x4013eaa	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ead	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10011	syntax.c	FUNCTION_162	IF_6
0x4013eb0	             0x1d0	                            add eax, edx	     10011	syntax.c	FUNCTION_162	IF_6
0x4013eb2	          0x4863d0	                         movsxd rdx, eax	     10011	syntax.c	FUNCTION_162	IF_6
0x4013eb5	          0x4889d0	                            mov rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x4013eb8	        0x48c1e003	                              shl rax, 3	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ebc	          0x4801d0	                            add rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ebf	          0x4801c0	                            add rax, rax	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ec2	          0x4801d0	                            add rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ec5	        0x48c1e003	                              shl rax, 3	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ec9	          0x4889c2	                            mov rdx, rax	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ecc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ed0	        0x488d0c02	                    lea rcx, [rdx + rax]	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ed4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ed7	          0x4863d0	                         movsxd rdx, eax	     10011	syntax.c	FUNCTION_162	IF_6
0x4013eda	          0x4889d0	                            mov rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x4013edd	        0x48c1e003	                              shl rax, 3	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ee1	          0x4801d0	                            add rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ee4	          0x4801c0	                            add rax, rax	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ee7	          0x4801d0	                            add rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x4013eea	        0x48c1e003	                              shl rax, 3	     10011	syntax.c	FUNCTION_162	IF_6
0x4013eee	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ef5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10011	syntax.c	FUNCTION_162	IF_6
0x4013ef9	          0x4801d0	                            add rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x4013efc	        0x488b4040	            mov rax, qword [rax + 0x40] 	     10011	syntax.c	FUNCTION_162	IF_6
0x4013f00	        0x48894140	             mov qword [rcx + 0x40], rax	     10011	syntax.c	FUNCTION_162	IF_6
0x4013f04	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f07	          0x4863d0	                         movsxd rdx, eax	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f0a	          0x4889d0	                            mov rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f0d	        0x48c1e003	                              shl rax, 3	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f11	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f14	          0x4801c0	                            add rax, rax	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f17	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f1a	        0x48c1e003	                              shl rax, 3	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f1e	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f29	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f2c	        0x488b4848	            mov rcx, qword [rax + 0x48] 	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f30	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f33	          0x4863d0	                         movsxd rdx, eax	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f36	          0x4889d0	                            mov rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f39	        0x48c1e003	                              shl rax, 3	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f3d	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f40	          0x4801c0	                            add rax, rax	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f43	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f46	        0x48c1e003	                              shl rax, 3	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f4a	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f51	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f55	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f58	        0x488b4048	            mov rax, qword [rax + 0x48] 	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f5c	          0x4839c1	                            cmp rcx, rax	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f5f	            0x745a	                            je 0x4013fbb	     10012	syntax.c	FUNCTION_162	IF_7
0x4013f61	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f64	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f67	             0x1d0	                            add eax, edx	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f69	          0x4863d0	                         movsxd rdx, eax	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f6c	          0x4889d0	                            mov rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f6f	        0x48c1e003	                              shl rax, 3	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f73	          0x4801d0	                            add rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f76	          0x4801c0	                            add rax, rax	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f79	          0x4801d0	                            add rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f7c	        0x48c1e003	                              shl rax, 3	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f80	          0x4889c2	                            mov rdx, rax	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f87	        0x488d0c02	                    lea rcx, [rdx + rax]	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f8b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f8e	          0x4863d0	                         movsxd rdx, eax	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f91	          0x4889d0	                            mov rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f94	        0x48c1e003	                              shl rax, 3	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f98	          0x4801d0	                            add rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f9b	          0x4801c0	                            add rax, rax	     10013	syntax.c	FUNCTION_162	IF_7
0x4013f9e	          0x4801d0	                            add rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x4013fa1	        0x48c1e003	                              shl rax, 3	     10013	syntax.c	FUNCTION_162	IF_7
0x4013fa5	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10013	syntax.c	FUNCTION_162	IF_7
0x4013fac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10013	syntax.c	FUNCTION_162	IF_7
0x4013fb0	          0x4801d0	                            add rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x4013fb3	        0x488b4048	            mov rax, qword [rax + 0x48] 	     10013	syntax.c	FUNCTION_162	IF_7
0x4013fb7	        0x48894148	             mov qword [rcx + 0x48], rax	     10013	syntax.c	FUNCTION_162	IF_7
0x4013fbb	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fbe	          0x4863d0	                         movsxd rdx, eax	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fc1	          0x4889d0	                            mov rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fc4	        0x48c1e003	                              shl rax, 3	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fc8	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fcb	          0x4801c0	                            add rax, rax	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fce	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fd1	        0x48c1e003	                              shl rax, 3	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fd5	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fdc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fe0	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fe3	        0x488b4850	            mov rcx, qword [rax + 0x50] 	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fe7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fea	          0x4863d0	                         movsxd rdx, eax	     10014	syntax.c	FUNCTION_162	IF_8
0x4013fed	          0x4889d0	                            mov rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x4013ff0	        0x48c1e003	                              shl rax, 3	     10014	syntax.c	FUNCTION_162	IF_8
0x4013ff4	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x4013ff7	          0x4801c0	                            add rax, rax	     10014	syntax.c	FUNCTION_162	IF_8
0x4013ffa	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x4013ffd	        0x48c1e003	                              shl rax, 3	     10014	syntax.c	FUNCTION_162	IF_8
0x4014001	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10014	syntax.c	FUNCTION_162	IF_8
0x4014008	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10014	syntax.c	FUNCTION_162	IF_8
0x401400c	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x401400f	        0x488b4050	            mov rax, qword [rax + 0x50] 	     10014	syntax.c	FUNCTION_162	IF_8
0x4014013	          0x4839c1	                            cmp rcx, rax	     10014	syntax.c	FUNCTION_162	IF_8
0x4014016	            0x745a	                            je 0x4014072	     10014	syntax.c	FUNCTION_162	IF_8
0x4014018	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10015	syntax.c	FUNCTION_162	IF_8
0x401401b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10015	syntax.c	FUNCTION_162	IF_8
0x401401e	             0x1d0	                            add eax, edx	     10015	syntax.c	FUNCTION_162	IF_8
0x4014020	          0x4863d0	                         movsxd rdx, eax	     10015	syntax.c	FUNCTION_162	IF_8
0x4014023	          0x4889d0	                            mov rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x4014026	        0x48c1e003	                              shl rax, 3	     10015	syntax.c	FUNCTION_162	IF_8
0x401402a	          0x4801d0	                            add rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x401402d	          0x4801c0	                            add rax, rax	     10015	syntax.c	FUNCTION_162	IF_8
0x4014030	          0x4801d0	                            add rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x4014033	        0x48c1e003	                              shl rax, 3	     10015	syntax.c	FUNCTION_162	IF_8
0x4014037	          0x4889c2	                            mov rdx, rax	     10015	syntax.c	FUNCTION_162	IF_8
0x401403a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10015	syntax.c	FUNCTION_162	IF_8
0x401403e	        0x488d0c02	                    lea rcx, [rdx + rax]	     10015	syntax.c	FUNCTION_162	IF_8
0x4014042	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10015	syntax.c	FUNCTION_162	IF_8
0x4014045	          0x4863d0	                         movsxd rdx, eax	     10015	syntax.c	FUNCTION_162	IF_8
0x4014048	          0x4889d0	                            mov rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x401404b	        0x48c1e003	                              shl rax, 3	     10015	syntax.c	FUNCTION_162	IF_8
0x401404f	          0x4801d0	                            add rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x4014052	          0x4801c0	                            add rax, rax	     10015	syntax.c	FUNCTION_162	IF_8
0x4014055	          0x4801d0	                            add rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x4014058	        0x48c1e003	                              shl rax, 3	     10015	syntax.c	FUNCTION_162	IF_8
0x401405c	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10015	syntax.c	FUNCTION_162	IF_8
0x4014063	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10015	syntax.c	FUNCTION_162	IF_8
0x4014067	          0x4801d0	                            add rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x401406a	        0x488b4050	            mov rax, qword [rax + 0x50] 	     10015	syntax.c	FUNCTION_162	IF_8
0x401406e	        0x48894150	             mov qword [rcx + 0x50], rax	     10015	syntax.c	FUNCTION_162	IF_8
0x4014072	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10016	syntax.c	FUNCTION_162	IF_9
0x4014075	          0x4863d0	                         movsxd rdx, eax	     10016	syntax.c	FUNCTION_162	IF_9
0x4014078	          0x4889d0	                            mov rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x401407b	        0x48c1e003	                              shl rax, 3	     10016	syntax.c	FUNCTION_162	IF_9
0x401407f	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x4014082	          0x4801c0	                            add rax, rax	     10016	syntax.c	FUNCTION_162	IF_9
0x4014085	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x4014088	        0x48c1e003	                              shl rax, 3	     10016	syntax.c	FUNCTION_162	IF_9
0x401408c	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10016	syntax.c	FUNCTION_162	IF_9
0x4014093	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10016	syntax.c	FUNCTION_162	IF_9
0x4014097	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x401409a	        0x488b4858	            mov rcx, qword [rax + 0x58] 	     10016	syntax.c	FUNCTION_162	IF_9
0x401409e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10016	syntax.c	FUNCTION_162	IF_9
0x40140a1	          0x4863d0	                         movsxd rdx, eax	     10016	syntax.c	FUNCTION_162	IF_9
0x40140a4	          0x4889d0	                            mov rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x40140a7	        0x48c1e003	                              shl rax, 3	     10016	syntax.c	FUNCTION_162	IF_9
0x40140ab	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x40140ae	          0x4801c0	                            add rax, rax	     10016	syntax.c	FUNCTION_162	IF_9
0x40140b1	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x40140b4	        0x48c1e003	                              shl rax, 3	     10016	syntax.c	FUNCTION_162	IF_9
0x40140b8	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10016	syntax.c	FUNCTION_162	IF_9
0x40140bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10016	syntax.c	FUNCTION_162	IF_9
0x40140c3	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x40140c6	        0x488b4058	            mov rax, qword [rax + 0x58] 	     10016	syntax.c	FUNCTION_162	IF_9
0x40140ca	          0x4839c1	                            cmp rcx, rax	     10016	syntax.c	FUNCTION_162	IF_9
0x40140cd	            0x745a	                            je 0x4014129	     10016	syntax.c	FUNCTION_162	IF_9
0x40140cf	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10017	syntax.c	FUNCTION_162	IF_9
0x40140d2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10017	syntax.c	FUNCTION_162	IF_9
0x40140d5	             0x1d0	                            add eax, edx	     10017	syntax.c	FUNCTION_162	IF_9
0x40140d7	          0x4863d0	                         movsxd rdx, eax	     10017	syntax.c	FUNCTION_162	IF_9
0x40140da	          0x4889d0	                            mov rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x40140dd	        0x48c1e003	                              shl rax, 3	     10017	syntax.c	FUNCTION_162	IF_9
0x40140e1	          0x4801d0	                            add rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x40140e4	          0x4801c0	                            add rax, rax	     10017	syntax.c	FUNCTION_162	IF_9
0x40140e7	          0x4801d0	                            add rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x40140ea	        0x48c1e003	                              shl rax, 3	     10017	syntax.c	FUNCTION_162	IF_9
0x40140ee	          0x4889c2	                            mov rdx, rax	     10017	syntax.c	FUNCTION_162	IF_9
0x40140f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10017	syntax.c	FUNCTION_162	IF_9
0x40140f5	        0x488d0c02	                    lea rcx, [rdx + rax]	     10017	syntax.c	FUNCTION_162	IF_9
0x40140f9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10017	syntax.c	FUNCTION_162	IF_9
0x40140fc	          0x4863d0	                         movsxd rdx, eax	     10017	syntax.c	FUNCTION_162	IF_9
0x40140ff	          0x4889d0	                            mov rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x4014102	        0x48c1e003	                              shl rax, 3	     10017	syntax.c	FUNCTION_162	IF_9
0x4014106	          0x4801d0	                            add rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x4014109	          0x4801c0	                            add rax, rax	     10017	syntax.c	FUNCTION_162	IF_9
0x401410c	          0x4801d0	                            add rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x401410f	        0x48c1e003	                              shl rax, 3	     10017	syntax.c	FUNCTION_162	IF_9
0x4014113	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10017	syntax.c	FUNCTION_162	IF_9
0x401411a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10017	syntax.c	FUNCTION_162	IF_9
0x401411e	          0x4801d0	                            add rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x4014121	        0x488b4058	            mov rax, qword [rax + 0x58] 	     10017	syntax.c	FUNCTION_162	IF_9
0x4014125	        0x48894158	             mov qword [rcx + 0x58], rax	     10017	syntax.c	FUNCTION_162	IF_9
0x4014129	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10023	syntax.c	FUNCTION_162
0x401412c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10023	syntax.c	FUNCTION_162
0x401412f	             0x1d0	                            add eax, edx	     10023	syntax.c	FUNCTION_162
0x4014131	          0x83c001	                              add eax, 1	     10023	syntax.c	FUNCTION_162
0x4014134	    0x890500000000	            mov dword [0x0401413a], eax 	     10023	syntax.c	FUNCTION_162
0x401413a	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10024	syntax.c	FUNCTION_162	CALL_3
0x401413d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10024	syntax.c	FUNCTION_162	CALL_3
0x4014140	             0x1d0	                            add eax, edx	     10024	syntax.c	FUNCTION_162	CALL_3
0x4014142	            0x89c7	                            mov edi, eax	     10024	syntax.c	FUNCTION_162	CALL_3
0x4014144	      0xe871e9ffff	                    call sym.set_hl_attr	     10024	syntax.c	FUNCTION_162	CALL_3
0x4014149	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10025	syntax.c	FUNCTION_162	CALL_4
0x401414c	            0x4898	                                    cdqe	     10025	syntax.c	FUNCTION_162	CALL_4
0x401414e	    0x488d14850000	                        lea rdx, [rax*4]	     10025	syntax.c	FUNCTION_162	CALL_4
0x4014156	        0x488b4510	            mov rax, qword [rbp + 0x10] 	     10025	syntax.c	FUNCTION_162	CALL_4
0x401415a	        0x488d1c02	                    lea rbx, [rdx + rax]	     10025	syntax.c	FUNCTION_162	CALL_4
0x401415e	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10025	syntax.c	FUNCTION_162	CALL_4
0x4014161	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10025	syntax.c	FUNCTION_162	CALL_4
0x4014164	             0x1d0	                            add eax, edx	     10025	syntax.c	FUNCTION_162	CALL_4
0x4014166	          0x83c001	                              add eax, 1	     10025	syntax.c	FUNCTION_162	CALL_4
0x4014169	            0x89c7	                            mov edi, eax	     10025	syntax.c	FUNCTION_162	CALL_4
0x401416b	      0xe800000000	                          call 0x4014170	     10025	syntax.c	FUNCTION_162	CALL_4
0x4014170	            0x8903	                    mov dword [rbx], eax	     10025	syntax.c	FUNCTION_162	CALL_4
0x4014172	              0x90	                                     nop	     10026	syntax.c	FUNCTION_162
0x4014173	        0x4883c438	                           add rsp, 0x38	     10026	syntax.c	FUNCTION_162
0x4014177	              0x5b	                                 pop rbx	     10026	syntax.c	FUNCTION_162
0x4014178	              0x5d	                                 pop rbp	     10026	syntax.c	FUNCTION_162
0x4014179	              0xc3	                                     ret	     10026	syntax.c	FUNCTION_162
syn_lines_msg	functions,0:IF,4:SWITCH,0:FOR,0:CALL,10:ELSE,0:WHILE,0:DO,0	56
0x4007265	              0x55	                                push rbp	      4026	syntax.c	FUNCTION_64
0x4007266	          0x4889e5	                            mov rbp, rsp	      4026	syntax.c	FUNCTION_64
0x4007269	    0x488b05000000	            mov rax, qword [0x04007270] 	      4027	syntax.c	FUNCTION_64	IF_1
0x4007270	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4027	syntax.c	FUNCTION_64	IF_1
0x4007274	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4027	syntax.c	FUNCTION_64	IF_1
0x400727b	          0x4885c0	                           test rax, rax	      4027	syntax.c	FUNCTION_64	IF_1
0x400727e	            0x7f1b	                            jg 0x400729b	      4027	syntax.c	FUNCTION_64	IF_1
0x4007280	    0x488b05000000	            mov rax, qword [0x04007287] 	      4028	syntax.c	FUNCTION_64	IF_1
0x4007287	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4028	syntax.c	FUNCTION_64	IF_1
0x400728b	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      4028	syntax.c	FUNCTION_64	IF_1
0x4007292	          0x4885c0	                           test rax, rax	      4028	syntax.c	FUNCTION_64	IF_1
0x4007295	     0xf8ec3000000	                           jle 0x400735e	      4028	syntax.c	FUNCTION_64	IF_1
0x400729b	      0xbf00000000	                              mov edi, 0	      4030	syntax.c	FUNCTION_64	IF_1	CALL_1
0x40072a0	      0xe800000000	                          call 0x40072a5	      4030	syntax.c	FUNCTION_64	IF_1	CALL_1
0x40072a5	    0x488b05000000	            mov rax, qword [0x040072ac] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x40072ac	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x40072b0	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x40072b7	          0x4885c0	                           test rax, rax	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x40072ba	            0x7e4d	                           jle 0x4007309	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x40072bc	      0xbf00000000	                              mov edi, 0	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x40072c1	      0xe800000000	                          call 0x40072c6	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x40072c6	          0x4889c7	                            mov rdi, rax	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x40072c9	      0xe800000000	                          call 0x40072ce	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x40072ce	    0x488b05000000	            mov rax, qword [0x040072d5] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x40072d5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x40072d9	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x40072e0	          0x4889c7	                            mov rdi, rax	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x40072e3	      0xe800000000	                          call 0x40072e8	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x40072e8	    0x488b05000000	            mov rax, qword [0x040072ef] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x40072ef	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x40072f3	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x40072fa	          0x4885c0	                           test rax, rax	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x40072fd	            0x740a	                            je 0x4007309	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x40072ff	      0xbf00000000	                              mov edi, 0	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x4007304	      0xe800000000	                          call 0x4007309	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x4007309	    0x488b05000000	            mov rax, qword [0x04007310] 	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x4007310	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x4007314	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x400731b	          0x4885c0	                           test rax, rax	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x400731e	            0x7e2c	                           jle 0x400734c	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x4007320	      0xbf00000000	                              mov edi, 0	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x4007325	      0xe800000000	                          call 0x400732a	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x400732a	          0x4889c7	                            mov rdi, rax	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x400732d	      0xe800000000	                          call 0x4007332	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x4007332	    0x488b05000000	            mov rax, qword [0x04007339] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x4007339	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x400733d	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x4007344	          0x4889c7	                            mov rdi, rax	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x4007347	      0xe800000000	                          call 0x400734c	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x400734c	      0xbf00000000	                              mov edi, 0	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4007351	      0xe800000000	                          call 0x4007356	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4007356	          0x4889c7	                            mov rdi, rax	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4007359	      0xe800000000	                          call 0x400735e	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x400735e	              0x90	                                     nop	      4045	syntax.c	FUNCTION_64
0x400735f	              0x5d	                                 pop rbp	      4045	syntax.c	FUNCTION_64
0x4007360	              0xc3	                                     ret	      4045	syntax.c	FUNCTION_64
syn_id2cterm_bg	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	35
0x40133f8	              0x55	                                push rbp	      9860	syntax.c	FUNCTION_158
0x40133f9	          0x4889e5	                            mov rbp, rsp	      9860	syntax.c	FUNCTION_158
0x40133fc	        0x4883ec30	                           sub rsp, 0x30	      9860	syntax.c	FUNCTION_158
0x4013400	          0x897dec	             mov dword [rbp - 0x14], edi	      9860	syntax.c	FUNCTION_158
0x4013403	        0x488975e0	             mov qword [rbp - 0x20], rsi	      9860	syntax.c	FUNCTION_158
0x4013407	        0x488955d8	             mov qword [rbp - 0x28], rdx	      9860	syntax.c	FUNCTION_158
0x401340b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9863	syntax.c	FUNCTION_158	CALL_1
0x401340e	            0x89c7	                            mov edi, eax	      9863	syntax.c	FUNCTION_158	CALL_1
0x4013410	      0xe800000000	                          call 0x4013415	      9863	syntax.c	FUNCTION_158	CALL_1
0x4013415	          0x8945ec	             mov dword [rbp - 0x14], eax	      9863	syntax.c	FUNCTION_158	CALL_1
0x4013418	    0x488b0d000000	            mov rcx, qword [0x0401341f] 	      9864	syntax.c	FUNCTION_158
0x401341f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9864	syntax.c	FUNCTION_158
0x4013422	          0x4863d0	                         movsxd rdx, eax	      9864	syntax.c	FUNCTION_158
0x4013425	          0x4889d0	                            mov rax, rdx	      9864	syntax.c	FUNCTION_158
0x4013428	        0x48c1e003	                              shl rax, 3	      9864	syntax.c	FUNCTION_158
0x401342c	          0x4801d0	                            add rax, rdx	      9864	syntax.c	FUNCTION_158
0x401342f	          0x4801c0	                            add rax, rax	      9864	syntax.c	FUNCTION_158
0x4013432	          0x4801d0	                            add rax, rdx	      9864	syntax.c	FUNCTION_158
0x4013435	        0x48c1e003	                              shl rax, 3	      9864	syntax.c	FUNCTION_158
0x4013439	    0x482d98000000	                           sub rax, 0x98	      9864	syntax.c	FUNCTION_158
0x401343f	          0x4801c8	                            add rax, rcx	      9864	syntax.c	FUNCTION_158
0x4013442	        0x488945f8	                mov qword [rbp - 8], rax	      9864	syntax.c	FUNCTION_158
0x4013446	        0x488b45f8	                mov rax, qword [rbp - 8]	      9865	syntax.c	FUNCTION_158
0x401344a	          0x8b4034	            mov eax, dword [rax + 0x34] 	      9865	syntax.c	FUNCTION_158
0x401344d	          0x8d50ff	                      lea edx, [rax - 1]	      9865	syntax.c	FUNCTION_158
0x4013450	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9865	syntax.c	FUNCTION_158
0x4013454	            0x8910	                    mov dword [rax], edx	      9865	syntax.c	FUNCTION_158
0x4013456	        0x488b45f8	                mov rax, qword [rbp - 8]	      9866	syntax.c	FUNCTION_158
0x401345a	          0x8b4038	            mov eax, dword [rax + 0x38] 	      9866	syntax.c	FUNCTION_158
0x401345d	          0x8d50ff	                      lea edx, [rax - 1]	      9866	syntax.c	FUNCTION_158
0x4013460	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9866	syntax.c	FUNCTION_158
0x4013464	            0x8910	                    mov dword [rax], edx	      9866	syntax.c	FUNCTION_158
0x4013466	              0x90	                                     nop	      9867	syntax.c	FUNCTION_158
0x4013467	              0xc9	                                   leave	      9867	syntax.c	FUNCTION_158
0x4013468	              0xc3	                                     ret	      9867	syntax.c	FUNCTION_158
syn_cmd_sync	functions,0:IF,27:SWITCH,0:FOR,0:CALL,41:ELSE,13:WHILE,1:DO,0	419
0x400b3a7	              0x55	                                push rbp	      5841	syntax.c	FUNCTION_91
0x400b3a8	          0x4889e5	                            mov rbp, rsp	      5841	syntax.c	FUNCTION_91
0x400b3ab	              0x53	                                push rbx	      5841	syntax.c	FUNCTION_91
0x400b3ac	        0x4883ec58	                           sub rsp, 0x58	      5841	syntax.c	FUNCTION_91
0x400b3b0	        0x48897da8	             mov qword [rbp - 0x58], rdi	      5841	syntax.c	FUNCTION_91
0x400b3b4	          0x8975a4	             mov dword [rbp - 0x5c], esi	      5841	syntax.c	FUNCTION_91
0x400b3b7	    0x64488b042528	                mov rax, qword fs:[0x28]	      5841	syntax.c	FUNCTION_91
0x400b3c0	        0x488945e8	             mov qword [rbp - 0x18], rax	      5841	syntax.c	FUNCTION_91
0x400b3c4	            0x31c0	                            xor eax, eax	      5841	syntax.c	FUNCTION_91
0x400b3c6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5842	syntax.c	FUNCTION_91
0x400b3ca	          0x488b00	                    mov rax, qword [rax]	      5842	syntax.c	FUNCTION_91
0x400b3cd	        0x488945c0	             mov qword [rbp - 0x40], rax	      5842	syntax.c	FUNCTION_91
0x400b3d1	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      5844	syntax.c	FUNCTION_91
0x400b3d9	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      5846	syntax.c	FUNCTION_91
0x400b3e0	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      5847	syntax.c	FUNCTION_91
0x400b3e7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400b3eb	           0xfb600	                   movzx eax, byte [rax]	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400b3ee	           0xfb6c0	                           movzx eax, al	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400b3f1	            0x89c7	                            mov edi, eax	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400b3f3	      0xe800000000	                          call 0x400b3f8	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400b3f8	            0x85c0	                           test eax, eax	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400b3fa	     0xf84cc050000	                            je 0x400b9cc	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400b400	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400b404	      0xbe01000000	                              mov esi, 1	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400b409	          0x4889c7	                            mov rdi, rax	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400b40c	      0xe8e3baffff	                   call sym.syn_cmd_list	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400b411	      0xe939060000	                           jmp 0x400ba4f	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400b416	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x400b41a	          0x4889c7	                            mov rdi, rax	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x400b41d	      0xe800000000	                          call 0x400b422	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x400b422	        0x488945b8	             mov qword [rbp - 0x48], rax	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x400b426	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x400b42a	          0x4889c7	                            mov rdi, rax	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x400b42d	      0xe800000000	                          call 0x400b432	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x400b432	        0x488945d0	             mov qword [rbp - 0x30], rax	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x400b436	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0x400b43a	          0x4889c7	                            mov rdi, rax	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0x400b43d	      0xe800000000	                          call 0x400b442	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0x400b442	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400b446	          0x4889c2	                            mov rdx, rax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400b449	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400b44d	          0x4829c2	                            sub rdx, rax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400b450	          0x4889d0	                            mov rax, rdx	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400b453	            0x89c2	                            mov edx, eax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400b455	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400b459	            0x89d6	                            mov esi, edx	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400b45b	          0x4889c7	                            mov rdi, rax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400b45e	      0xe800000000	                          call 0x400b463	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400b463	        0x488945c8	             mov qword [rbp - 0x38], rax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400b467	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400b46b	      0xbe00000000	                              mov esi, 0	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400b470	          0x4889c7	                            mov rdi, rax	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400b473	      0xe800000000	                          call 0x400b478	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400b478	            0x85c0	                           test eax, eax	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400b47a	     0xf85d8000000	                           jne 0x400b558	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400b480	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400b484	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400b487	            0x85c0	                           test eax, eax	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400b489	            0x7525	                           jne 0x400b4b0	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400b48b	    0x488b05000000	            mov rax, qword [0x0400b492] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400b492	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400b496	    0x488b15000000	            mov rdx, qword [0x0400b49d] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400b49d	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400b4a1	    0x8b929c020000	           mov edx, dword [rdx + 0x29c] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400b4a7	          0x83ca01	                               or edx, 1	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400b4aa	    0x89909c020000	            mov dword [rax + 0x29c], edx	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400b4b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400b4b4	           0xfb600	                   movzx eax, byte [rax]	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400b4b7	           0xfb6c0	                           movzx eax, al	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400b4ba	            0x89c7	                            mov edi, eax	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400b4bc	      0xe800000000	                          call 0x400b4c1	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400b4c1	            0x85c0	                           test eax, eax	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400b4c3	            0x7563	                           jne 0x400b528	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400b4c5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x400b4c9	          0x4889c7	                            mov rdi, rax	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x400b4cc	      0xe800000000	                          call 0x400b4d1	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x400b4d1	        0x488945b8	             mov qword [rbp - 0x48], rax	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x400b4d5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400b4d9	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400b4dc	            0x85c0	                           test eax, eax	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400b4de	            0x7533	                           jne 0x400b513	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400b4e0	    0x488b05000000	            mov rax, qword [0x0400b4e7] 	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400b4e7	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400b4eb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5872	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400b4ef	          0x4889c2	                            mov rdx, rax	      5872	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400b4f2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5872	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400b4f6	          0x4829c2	                            sub rdx, rax	      5872	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400b4f9	          0x4889d0	                            mov rax, rdx	      5872	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400b4fc	            0x89c2	                            mov edx, eax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400b4fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400b502	            0x89d6	                            mov esi, edx	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400b504	          0x4889c7	                            mov rdi, rax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400b507	      0xe800000000	                          call 0x400b50c	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400b50c	    0x668983a00200	              mov word [rbx + 0x2a0], ax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400b513	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400b517	          0x4889c7	                            mov rdi, rax	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400b51a	      0xe800000000	                          call 0x400b51f	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400b51f	        0x488945d0	             mov qword [rbp - 0x30], rax	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400b523	      0xe99c040000	                           jmp 0x400b9c4	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400b528	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400b52c	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400b52f	            0x85c0	                           test eax, eax	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400b531	     0xf858d040000	                           jne 0x400b9c4	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400b537	    0x488b05000000	            mov rax, qword [0x0400b53e] 	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400b53e	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400b542	      0xbf00000000	                              mov edi, 0	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400b547	      0xe800000000	                          call 0x400b54c	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400b54c	    0x668983a00200	              mov word [rbx + 0x2a0], ax	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400b553	      0xe96c040000	                           jmp 0x400b9c4	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400b558	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400b55c	      0xba05000000	                              mov edx, 5	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400b561	      0xbe00000000	                              mov esi, 0	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400b566	          0x4889c7	                            mov rdi, rax	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400b569	      0xe800000000	                          call 0x400b56e	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400b56e	            0x85c0	                           test eax, eax	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400b570	            0x7452	                            je 0x400b5c4	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400b572	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400b576	      0xba08000000	                              mov edx, 8	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400b57b	      0xbe00000000	                              mov esi, 0	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400b580	          0x4889c7	                            mov rdi, rax	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400b583	      0xe800000000	                          call 0x400b588	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400b588	            0x85c0	                           test eax, eax	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400b58a	            0x7438	                            je 0x400b5c4	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400b58c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400b590	      0xba08000000	                              mov edx, 8	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400b595	      0xbe00000000	                              mov esi, 0	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400b59a	          0x4889c7	                            mov rdi, rax	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400b59d	      0xe800000000	                          call 0x400b5a2	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400b5a2	            0x85c0	                           test eax, eax	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400b5a4	            0x741e	                            je 0x400b5c4	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400b5a6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400b5aa	      0xba0a000000	                            mov edx, 0xa	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400b5af	      0xbe00000000	                              mov esi, 0	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400b5b4	          0x4889c7	                            mov rdi, rax	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400b5b7	      0xe800000000	                          call 0x400b5bc	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400b5bc	            0x85c0	                           test eax, eax	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400b5be	     0xf85fd000000	                           jne 0x400b6c1	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400b5c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400b5c8	        0x4883c004	                              add rax, 4	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400b5cc	           0xfb600	                   movzx eax, byte [rax]	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400b5cf	            0x3c53	                            cmp al, 0x53	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400b5d1	            0x750e	                           jne 0x400b5e1	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400b5d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400b5d7	        0x4883c006	                              add rax, 6	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400b5db	        0x488945b8	             mov qword [rbp - 0x48], rax	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400b5df	            0xeb25	                           jmp 0x400b606	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400b5e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400b5e5	           0xfb600	                   movzx eax, byte [rax]	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400b5e8	            0x3c4c	                            cmp al, 0x4c	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400b5ea	            0x750e	                           jne 0x400b5fa	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400b5ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400b5f0	        0x4883c00b	                            add rax, 0xb	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400b5f4	        0x488945b8	             mov qword [rbp - 0x48], rax	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400b5f8	            0xeb0c	                           jmp 0x400b606	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400b5fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0x400b5fe	        0x4883c009	                              add rax, 9	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0x400b602	        0x488945b8	             mov qword [rbp - 0x48], rax	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0x400b606	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400b60a	        0x4883e801	                              sub rax, 1	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400b60e	           0xfb600	                   movzx eax, byte [rax]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400b611	            0x3c3d	                            cmp al, 0x3d	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400b613	            0x7512	                           jne 0x400b627	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400b615	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400b619	           0xfb600	                   movzx eax, byte [rax]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400b61c	           0xfb6c0	                           movzx eax, al	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400b61f	          0x83e830	                           sub eax, 0x30	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400b622	          0x83f809	                              cmp eax, 9	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400b625	            0x760c	                           jbe 0x400b633	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400b627	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      5891	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400b62e	      0xe9b2030000	                           jmp 0x400b9e5	      5892	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400b633	        0x488d45b8	                   lea rax, [rbp - 0x48]	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0x400b637	          0x4889c7	                            mov rdi, rax	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0x400b63a	      0xe800000000	                          call 0x400b63f	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0x400b63f	        0x488945e0	             mov qword [rbp - 0x20], rax	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0x400b643	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400b647	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400b64a	            0x85c0	                           test eax, eax	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400b64c	     0xf8572030000	                           jne 0x400b9c4	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400b652	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400b656	        0x4883c004	                              add rax, 4	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400b65a	           0xfb600	                   movzx eax, byte [rax]	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400b65d	            0x3c42	                            cmp al, 0x42	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400b65f	            0x751b	                           jne 0x400b67c	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400b661	    0x488b05000000	            mov rax, qword [0x0400b668] 	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400b668	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400b66c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400b670	    0x488990b80200	            mov qword [rax + 0x2b8], rdx	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400b677	      0xe948030000	                           jmp 0x400b9c4	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400b67c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400b680	        0x4883c001	                              add rax, 1	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400b684	           0xfb600	                   movzx eax, byte [rax]	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400b687	            0x3c41	                            cmp al, 0x41	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400b689	            0x751b	                           jne 0x400b6a6	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400b68b	    0x488b05000000	            mov rax, qword [0x0400b692] 	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400b692	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400b696	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400b69a	    0x488990b00200	            mov qword [rax + 0x2b0], rdx	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400b6a1	      0xe91e030000	                           jmp 0x400b9c4	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400b6a6	    0x488b05000000	            mov rax, qword [0x0400b6ad] 	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x400b6ad	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x400b6b1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x400b6b5	    0x488990a80200	            mov qword [rax + 0x2a8], rdx	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x400b6bc	      0xe903030000	                           jmp 0x400b9c4	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400b6c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400b6c5	      0xbe00000000	                              mov esi, 0	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400b6ca	          0x4889c7	                            mov rdi, rax	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400b6cd	      0xe800000000	                          call 0x400b6d2	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400b6d2	            0x85c0	                           test eax, eax	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400b6d4	            0x7540	                           jne 0x400b716	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400b6d6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400b6da	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400b6dd	            0x85c0	                           test eax, eax	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400b6df	     0xf85df020000	                           jne 0x400b9c4	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400b6e5	    0x488b05000000	            mov rax, qword [0x0400b6ec] 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400b6ec	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400b6f0	    0x48c780a80200	    mov qword [rax + 0x2a8], 0x7fffffff 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400b6fb	    0x488b05000000	            mov rax, qword [0x0400b702] 	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400b702	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400b706	    0x48c780b00200	              mov qword [rax + 0x2b0], 0	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400b711	      0xe9ae020000	                           jmp 0x400b9c4	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400b716	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400b71a	      0xbe00000000	                              mov esi, 0	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400b71f	          0x4889c7	                            mov rdi, rax	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400b722	      0xe800000000	                          call 0x400b727	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400b727	            0x85c0	                           test eax, eax	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400b729	     0xf8502020000	                           jne 0x400b931	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400b72f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400b733	           0xfb600	                   movzx eax, byte [rax]	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400b736	            0x84c0	                             test al, al	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400b738	            0x750c	                           jne 0x400b746	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400b73a	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      5917	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400b741	      0xe99f020000	                           jmp 0x400b9e5	      5918	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400b746	    0x488b05000000	            mov rax, qword [0x0400b74d] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400b74d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400b751	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400b758	          0x4885c0	                           test rax, rax	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400b75b	            0x741e	                            je 0x400b77b	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400b75d	      0xbf00000000	                              mov edi, 0	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400b762	      0xe800000000	                          call 0x400b767	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400b767	          0x4889c7	                            mov rdi, rax	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400b76a	      0xe800000000	                          call 0x400b76f	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400b76f	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      5923	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400b776	      0xe96a020000	                           jmp 0x400b9e5	      5924	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400b77b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400b77f	           0xfb600	                   movzx eax, byte [rax]	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400b782	           0xfb6c0	                           movzx eax, al	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400b785	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400b789	        0x488d7a01	                      lea rdi, [rdx + 1]	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400b78d	      0xb900000000	                              mov ecx, 0	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400b792	      0xba01000000	                              mov edx, 1	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400b797	            0x89c6	                            mov esi, eax	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400b799	      0xe800000000	                          call 0x400b79e	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400b79e	        0x488945b8	             mov qword [rbp - 0x48], rax	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400b7a2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400b7a6	           0xfb610	                   movzx edx, byte [rax]	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400b7a9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400b7ad	           0xfb600	                   movzx eax, byte [rax]	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400b7b0	            0x38c2	                              cmp dl, al	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400b7b2	            0x740c	                            je 0x400b7c0	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400b7b4	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      5929	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400b7bb	      0xe925020000	                           jmp 0x400b9e5	      5930	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400b7c0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b7c4	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b7c7	            0x85c0	                           test eax, eax	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b7c9	     0xf8549010000	                           jne 0x400b918	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b7cf	    0x488b05000000	            mov rax, qword [0x0400b7d6] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b7d6	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b7da	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5937	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0x400b7de	          0x4889c2	                            mov rdx, rax	      5937	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0x400b7e1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5937	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0x400b7e5	          0x4829c2	                            sub rdx, rax	      5937	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0x400b7e8	          0x4889d0	                            mov rax, rdx	      5937	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0x400b7eb	          0x83e801	                              sub eax, 1	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b7ee	            0x89c2	                            mov edx, eax	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b7f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b7f4	        0x4883c001	                              add rax, 1	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b7f8	            0x89d6	                            mov esi, edx	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b7fa	          0x4889c7	                            mov rdi, rax	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b7fd	      0xe800000000	                          call 0x400b802	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b802	    0x488983c00200	            mov qword [rbx + 0x2c0], rax	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b809	    0x488b83c00200	           mov rax, qword [rbx + 0x2c0] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b810	          0x4885c0	                           test rax, rax	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b813	            0x750c	                           jne 0x400b821	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400b815	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      5939	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0x400b81c	      0xe9c4010000	                           jmp 0x400b9e5	      5940	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0x400b821	    0x488b05000000	            mov rax, qword [0x0400b828] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b828	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b82c	    0x488b15000000	            mov rdx, qword [0x0400b833] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b833	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b837	    0x8b9258020000	           mov edx, dword [rdx + 0x258] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b83d	    0x899000030000	            mov dword [rax + 0x300], edx	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b843	    0x488b05000000	            mov rax, qword [0x0400b84a] 	      5945	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b84a	        0x488945d8	             mov qword [rbp - 0x28], rax	      5945	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b84e	    0x48c705000000	               mov qword [0x0400b859], 0	      5946	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b859	    0x488b05000000	            mov rax, qword [0x0400b860] 	      5947	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b860	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5947	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b864	    0x488b05000000	            mov rax, qword [0x0400b86b] 	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400b86b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400b86f	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400b876	      0xbe01000000	                              mov esi, 1	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400b87b	          0x4889c7	                            mov rdi, rax	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400b87e	      0xe800000000	                          call 0x400b883	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400b883	    0x488983c80200	            mov qword [rbx + 0x2c8], rax	      5947	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b88a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5949	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b88e	    0x488905000000	            mov qword [0x0400b895], rax 	      5949	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400b895	    0x488b05000000	            mov rax, qword [0x0400b89c] 	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0x400b89c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0x400b8a0	    0x4805d0020000	                          add rax, 0x2d0	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0x400b8a6	          0x4889c7	                            mov rdi, rax	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0x400b8a9	      0xe8b0150000	                 call sym.syn_clear_time	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0x400b8ae	    0x488b05000000	            mov rax, qword [0x0400b8b5] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400b8b5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400b8b9	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400b8c0	          0x4885c0	                           test rax, rax	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400b8c3	            0x7553	                           jne 0x400b918	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400b8c5	    0x488b05000000	            mov rax, qword [0x0400b8cc] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b8cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b8d0	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b8d7	          0x4885c0	                           test rax, rax	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b8da	            0x7430	                            je 0x400b90c	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b8dc	    0x488b05000000	            mov rax, qword [0x0400b8e3] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b8e3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b8e7	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b8ee	          0x4889c7	                            mov rdi, rax	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b8f1	      0xe800000000	                          call 0x400b8f6	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b8f6	    0x488b05000000	            mov rax, qword [0x0400b8fd] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b8fd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b901	    0x48c780c00200	              mov qword [rax + 0x2c0], 0	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400b90c	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      5957	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400b913	      0xe9cd000000	                           jmp 0x400b9e5	      5958	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400b918	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400b91c	        0x4883c001	                              add rax, 1	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400b920	          0x4889c7	                            mov rdi, rax	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400b923	      0xe800000000	                          call 0x400b928	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400b928	        0x488945d0	             mov qword [rbp - 0x30], rax	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400b92c	      0xe993000000	                           jmp 0x400b9c4	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400b931	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5965	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0x400b935	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      5965	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0x400b939	          0x488910	                    mov qword [rax], rdx	      5965	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0x400b93c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400b940	      0xbe00000000	                              mov esi, 0	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400b945	          0x4889c7	                            mov rdi, rax	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400b948	      0xe800000000	                          call 0x400b94d	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400b94d	            0x85c0	                           test eax, eax	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400b94f	            0x7513	                           jne 0x400b964	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400b951	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400b955	      0xbe01000000	                              mov esi, 1	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400b95a	          0x4889c7	                            mov rdi, rax	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400b95d	      0xe869dbffff	                  call sym.syn_cmd_match	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400b962	            0xeb57	                           jmp 0x400b9bb	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400b964	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400b968	      0xbe00000000	                              mov esi, 0	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400b96d	          0x4889c7	                            mov rdi, rax	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400b970	      0xe800000000	                          call 0x400b975	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400b975	            0x85c0	                           test eax, eax	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400b977	            0x7513	                           jne 0x400b98c	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400b979	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400b97d	      0xbe01000000	                              mov esi, 1	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400b982	          0x4889c7	                            mov rdi, rax	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400b985	      0xe851e1ffff	                 call sym.syn_cmd_region	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400b98a	            0xeb2f	                           jmp 0x400b9bb	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400b98c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400b990	      0xbe00000000	                              mov esi, 0	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400b995	          0x4889c7	                            mov rdi, rax	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400b998	      0xe800000000	                          call 0x400b99d	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400b99d	            0x85c0	                           test eax, eax	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400b99f	            0x7513	                           jne 0x400b9b4	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400b9a1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400b9a5	      0xbe01000000	                              mov esi, 1	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400b9aa	          0x4889c7	                            mov rdi, rax	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400b9ad	      0xe840b0ffff	                  call sym.syn_cmd_clear	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400b9b2	            0xeb07	                           jmp 0x400b9bb	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400b9b4	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      5973	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_12
0x400b9bb	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      5974	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0x400b9c2	            0xeb21	                           jmp 0x400b9e5	      5975	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0x400b9c4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5977	syntax.c	FUNCTION_91	WHILE_1
0x400b9c8	        0x488945c0	             mov qword [rbp - 0x40], rax	      5977	syntax.c	FUNCTION_91	WHILE_1
0x400b9cc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400b9d0	           0xfb600	                   movzx eax, byte [rax]	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400b9d3	           0xfb6c0	                           movzx eax, al	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400b9d6	            0x89c7	                            mov edi, eax	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400b9d8	      0xe800000000	                          call 0x400b9dd	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400b9dd	            0x85c0	                           test eax, eax	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400b9df	     0xf8431faffff	                            je 0x400b416	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400b9e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5979	syntax.c	FUNCTION_91	CALL_36
0x400b9e9	          0x4889c7	                            mov rdi, rax	      5979	syntax.c	FUNCTION_91	CALL_36
0x400b9ec	      0xe800000000	                          call 0x400b9f1	      5979	syntax.c	FUNCTION_91	CALL_36
0x400b9f1	        0x837db000	               cmp dword [rbp - 0x50], 0	      5980	syntax.c	FUNCTION_91	IF_26
0x400b9f5	            0x741e	                            je 0x400ba15	      5980	syntax.c	FUNCTION_91	IF_26
0x400b9f7	      0xbf00000000	                              mov edi, 0	      5981	syntax.c	FUNCTION_91	CALL_38
0x400b9fc	      0xe800000000	                          call 0x400ba01	      5981	syntax.c	FUNCTION_91	CALL_38
0x400ba01	          0x4889c2	                            mov rdx, rax	      5981	syntax.c	FUNCTION_91	CALL_38
0x400ba04	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5981	syntax.c	FUNCTION_91	CALL_38
0x400ba08	          0x4889c6	                            mov rsi, rax	      5981	syntax.c	FUNCTION_91	CALL_38
0x400ba0b	          0x4889d7	                            mov rdi, rdx	      5981	syntax.c	FUNCTION_91	CALL_38
0x400ba0e	      0xe800000000	                          call 0x400ba13	      5981	syntax.c	FUNCTION_91	CALL_38
0x400ba13	            0xeb3a	                           jmp 0x400ba4f	      5981	syntax.c	FUNCTION_91	CALL_38
0x400ba15	        0x837db400	               cmp dword [rbp - 0x4c], 0	      5982	syntax.c	FUNCTION_91	ELSE_13	IF_27
0x400ba19	            0x7534	                           jne 0x400ba4f	      5982	syntax.c	FUNCTION_91	ELSE_13	IF_27
0x400ba1b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400ba1f	          0x4889c7	                            mov rdi, rax	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400ba22	      0xe800000000	                          call 0x400ba27	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400ba27	          0x4889c2	                            mov rdx, rax	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400ba2a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400ba2e	        0x48895008	                mov qword [rax + 8], rdx	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400ba32	      0xbf23000000	                           mov edi, 0x23	      5985	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_40
0x400ba37	      0xe800000000	                          call 0x400ba3c	      5985	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_40
0x400ba3c	    0x488b05000000	            mov rax, qword [0x0400ba43] 	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x400ba43	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x400ba47	          0x4889c7	                            mov rdi, rax	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x400ba4a	      0xe800000000	                          call 0x400ba4f	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x400ba4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5988	syntax.c	FUNCTION_91
0x400ba53	    0x644833042528	                xor rax, qword fs:[0x28]	      5988	syntax.c	FUNCTION_91
0x400ba5c	            0x7405	                            je 0x400ba63	      5988	syntax.c	FUNCTION_91
0x400ba5e	      0xe800000000	                          call 0x400ba63	      5988	syntax.c	FUNCTION_91
0x400ba63	        0x4883c458	                           add rsp, 0x58	      5988	syntax.c	FUNCTION_91
0x400ba67	              0x5b	                                 pop rbx	      5988	syntax.c	FUNCTION_91
0x400ba68	              0x5d	                                 pop rbp	      5988	syntax.c	FUNCTION_91
0x400ba69	              0xc3	                                     ret	      5988	syntax.c	FUNCTION_91
put_id_list	functions,0:IF,6:SWITCH,0:FOR,1:CALL,11:ELSE,5:WHILE,0:DO,0	112
0x4007aa2	              0x55	                                push rbp	      4227	syntax.c	FUNCTION_69
0x4007aa3	          0x4889e5	                            mov rbp, rsp	      4227	syntax.c	FUNCTION_69
0x4007aa6	        0x4883ec30	                           sub rsp, 0x30	      4227	syntax.c	FUNCTION_69
0x4007aaa	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4227	syntax.c	FUNCTION_69
0x4007aae	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4227	syntax.c	FUNCTION_69
0x4007ab2	          0x8955dc	             mov dword [rbp - 0x24], edx	      4227	syntax.c	FUNCTION_69
0x4007ab5	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4230	syntax.c	FUNCTION_69	CALL_1
0x4007ab8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4230	syntax.c	FUNCTION_69	CALL_1
0x4007abc	            0x89d6	                            mov esi, edx	      4230	syntax.c	FUNCTION_69	CALL_1
0x4007abe	          0x4889c7	                            mov rdi, rax	      4230	syntax.c	FUNCTION_69	CALL_1
0x4007ac1	      0xe800000000	                          call 0x4007ac6	      4230	syntax.c	FUNCTION_69	CALL_1
0x4007ac6	      0xbf3d000000	                           mov edi, 0x3d	      4231	syntax.c	FUNCTION_69	CALL_2
0x4007acb	      0xe800000000	                          call 0x4007ad0	      4231	syntax.c	FUNCTION_69	CALL_2
0x4007ad0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4232	syntax.c	FUNCTION_69	FOR_1
0x4007ad4	        0x488945f8	                mov qword [rbp - 8], rax	      4232	syntax.c	FUNCTION_69	FOR_1
0x4007ad8	      0xe94d010000	                           jmp 0x4007c2a	      4232	syntax.c	FUNCTION_69	FOR_1
0x4007add	        0x488b45f8	                mov rax, qword [rbp - 8]	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4007ae1	           0xfb700	                   movzx eax, word [rax]	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4007ae4	        0x663d1f4e	                          cmp ax, 0x4e1f	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4007ae8	            0x7e3b	                           jle 0x4007b25	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4007aea	        0x488b45f8	                mov rax, qword [rbp - 8]	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4007aee	           0xfb700	                   movzx eax, word [rax]	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4007af1	        0x663d0752	                          cmp ax, 0x5207	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4007af5	            0x7f2e	                            jg 0x4007b25	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4007af7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x4007afb	        0x4883c002	                              add rax, 2	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x4007aff	           0xfb700	                   movzx eax, word [rax]	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x4007b02	          0x6685c0	                             test ax, ax	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x4007b05	            0x740f	                            je 0x4007b16	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x4007b07	      0xbf00000000	                              mov edi, 0	      4237	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_3
0x4007b0c	      0xe800000000	                          call 0x4007b11	      4237	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_3
0x4007b11	      0xe9f5000000	                           jmp 0x4007c0b	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x4007b16	      0xbf00000000	                              mov edi, 0	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x4007b1b	      0xe800000000	                          call 0x4007b20	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x4007b20	      0xe9e6000000	                           jmp 0x4007c0b	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x4007b25	        0x488b45f8	                mov rax, qword [rbp - 8]	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4007b29	           0xfb700	                   movzx eax, word [rax]	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4007b2c	        0x663d0752	                          cmp ax, 0x5207	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4007b30	            0x7e1c	                           jle 0x4007b4e	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4007b32	        0x488b45f8	                mov rax, qword [rbp - 8]	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4007b36	           0xfb700	                   movzx eax, word [rax]	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4007b39	        0x663def55	                          cmp ax, 0x55ef	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4007b3d	            0x7f0f	                            jg 0x4007b4e	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4007b3f	      0xbf00000000	                              mov edi, 0	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x4007b44	      0xe800000000	                          call 0x4007b49	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x4007b49	      0xe9bd000000	                           jmp 0x4007c0b	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x4007b4e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4007b52	           0xfb700	                   movzx eax, word [rax]	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4007b55	        0x663def55	                          cmp ax, 0x55ef	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4007b59	            0x7e1c	                           jle 0x4007b77	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4007b5b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4007b5f	           0xfb700	                   movzx eax, word [rax]	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4007b62	        0x663dd759	                          cmp ax, 0x59d7	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4007b66	            0x7f0f	                            jg 0x4007b77	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4007b68	      0xbf00000000	                              mov edi, 0	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x4007b6d	      0xe800000000	                          call 0x4007b72	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x4007b72	      0xe994000000	                           jmp 0x4007c0b	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x4007b77	        0x488b45f8	                mov rax, qword [rbp - 8]	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x4007b7b	           0xfb700	                   movzx eax, word [rax]	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x4007b7e	        0x663dd759	                          cmp ax, 0x59d7	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x4007b82	            0x7e4d	                           jle 0x4007bd1	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x4007b84	        0x488b45f8	                mov rax, qword [rbp - 8]	      4251	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x4007b88	           0xfb700	                   movzx eax, word [rax]	      4251	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x4007b8b	        0x662dd859	                          sub ax, 0x59d8	      4251	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x4007b8f	        0x668945f6	                mov word [rbp - 0xa], ax	      4251	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x4007b93	      0xbf40000000	                           mov edi, 0x40	      4253	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_7
0x4007b98	      0xe800000000	                          call 0x4007b9d	      4253	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_7
0x4007b9d	    0x488b05000000	            mov rax, qword [0x04007ba4] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007ba4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007ba8	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007baf	      0x480fbf55f6	             movsx rdx, word [rbp - 0xa]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007bb4	          0x4889d0	                            mov rax, rdx	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007bb7	          0x4801c0	                            add rax, rax	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007bba	          0x4801d0	                            add rax, rdx	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007bbd	        0x48c1e003	                              shl rax, 3	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007bc1	          0x4801c8	                            add rax, rcx	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007bc4	          0x488b00	                    mov rax, qword [rax]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007bc7	          0x4889c7	                            mov rdi, rax	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007bca	      0xe800000000	                          call 0x4007bcf	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007bcf	            0xeb3a	                           jmp 0x4007c0b	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4007bd1	    0x488b0d000000	            mov rcx, qword [0x04007bd8] 	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007bd8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007bdc	           0xfb700	                   movzx eax, word [rax]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007bdf	        0x480fbfd0	                           movsx rdx, ax	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007be3	          0x4889d0	                            mov rax, rdx	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007be6	        0x48c1e003	                              shl rax, 3	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007bea	          0x4801d0	                            add rax, rdx	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007bed	          0x4801c0	                            add rax, rax	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007bf0	          0x4801d0	                            add rax, rdx	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007bf3	        0x48c1e003	                              shl rax, 3	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007bf7	    0x482d98000000	                           sub rax, 0x98	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007bfd	          0x4801c8	                            add rax, rcx	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007c00	          0x488b00	                    mov rax, qword [rax]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007c03	          0x4889c7	                            mov rdi, rax	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007c06	      0xe800000000	                          call 0x4007c0b	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4007c0b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x4007c0f	        0x4883c002	                              add rax, 2	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x4007c13	           0xfb700	                   movzx eax, word [rax]	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x4007c16	          0x6685c0	                             test ax, ax	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x4007c19	            0x740a	                            je 0x4007c25	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x4007c1b	      0xbf2c000000	                           mov edi, 0x2c	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_10
0x4007c20	      0xe800000000	                          call 0x4007c25	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_10
0x4007c25	      0x488345f802	                  add qword [rbp - 8], 2	      4232	syntax.c	FUNCTION_69	FOR_1
0x4007c2a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4232	syntax.c	FUNCTION_69	FOR_1
0x4007c2e	           0xfb700	                   movzx eax, word [rax]	      4232	syntax.c	FUNCTION_69	FOR_1
0x4007c31	          0x6685c0	                             test ax, ax	      4232	syntax.c	FUNCTION_69	FOR_1
0x4007c34	     0xf85a3feffff	                           jne 0x4007add	      4232	syntax.c	FUNCTION_69	FOR_1
0x4007c3a	      0xbf20000000	                           mov edi, 0x20	      4261	syntax.c	FUNCTION_69	CALL_11
0x4007c3f	      0xe800000000	                          call 0x4007c44	      4261	syntax.c	FUNCTION_69	CALL_11
0x4007c44	              0x90	                                     nop	      4262	syntax.c	FUNCTION_69
0x4007c45	              0xc9	                                   leave	      4262	syntax.c	FUNCTION_69
0x4007c46	              0xc3	                                     ret	      4262	syntax.c	FUNCTION_69
syn_list_flags	functions,0:IF,1:SWITCH,0:FOR,1:CALL,2:ELSE,0:WHILE,0:DO,0	44
0x40078fb	              0x55	                                push rbp	      4184	syntax.c	FUNCTION_67
0x40078fc	          0x4889e5	                            mov rbp, rsp	      4184	syntax.c	FUNCTION_67
0x40078ff	        0x4883ec20	                           sub rsp, 0x20	      4184	syntax.c	FUNCTION_67
0x4007903	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4184	syntax.c	FUNCTION_67
0x4007907	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4184	syntax.c	FUNCTION_67
0x400790a	          0x8955e0	             mov dword [rbp - 0x20], edx	      4184	syntax.c	FUNCTION_67
0x400790d	    0xc745fc000000	                  mov dword [rbp - 4], 0	      4187	syntax.c	FUNCTION_67	FOR_1
0x4007914	            0xeb4e	                           jmp 0x4007964	      4187	syntax.c	FUNCTION_67	FOR_1
0x4007916	          0x8b45fc	                mov eax, dword [rbp - 4]	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4007919	            0x4898	                                    cdqe	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x400791b	        0x48c1e004	                              shl rax, 4	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x400791f	          0x4889c2	                            mov rdx, rax	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4007922	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4007926	          0x4801d0	                            add rax, rdx	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4007929	            0x8b00	                    mov eax, dword [rax]	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x400792b	          0x2345e4	             and eax, dword [rbp - 0x1c]	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x400792e	            0x85c0	                           test eax, eax	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4007930	            0x742e	                            je 0x4007960	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4007932	          0x8b45fc	                mov eax, dword [rbp - 4]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4007935	            0x4898	                                    cdqe	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4007937	        0x48c1e004	                              shl rax, 4	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x400793b	          0x4889c2	                            mov rdx, rax	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x400793e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4007942	          0x4801d0	                            add rax, rdx	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4007945	        0x488b4008	                mov rax, qword [rax + 8]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4007949	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x400794c	            0x89d6	                            mov esi, edx	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x400794e	          0x4889c7	                            mov rdi, rax	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4007951	      0xe800000000	                          call 0x4007956	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4007956	      0xbf20000000	                           mov edi, 0x20	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x400795b	      0xe800000000	                          call 0x4007960	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x4007960	        0x8345fc01	                  add dword [rbp - 4], 1	      4187	syntax.c	FUNCTION_67	FOR_1
0x4007964	          0x8b45fc	                mov eax, dword [rbp - 4]	      4187	syntax.c	FUNCTION_67	FOR_1
0x4007967	            0x4898	                                    cdqe	      4187	syntax.c	FUNCTION_67	FOR_1
0x4007969	        0x48c1e004	                              shl rax, 4	      4187	syntax.c	FUNCTION_67	FOR_1
0x400796d	          0x4889c2	                            mov rdx, rax	      4187	syntax.c	FUNCTION_67	FOR_1
0x4007970	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4187	syntax.c	FUNCTION_67	FOR_1
0x4007974	          0x4801d0	                            add rax, rdx	      4187	syntax.c	FUNCTION_67	FOR_1
0x4007977	            0x8b00	                    mov eax, dword [rax]	      4187	syntax.c	FUNCTION_67	FOR_1
0x4007979	            0x85c0	                           test eax, eax	      4187	syntax.c	FUNCTION_67	FOR_1
0x400797b	            0x7599	                           jne 0x4007916	      4187	syntax.c	FUNCTION_67	FOR_1
0x400797d	              0x90	                                     nop	      4193	syntax.c	FUNCTION_67
0x400797e	              0xc9	                                   leave	      4193	syntax.c	FUNCTION_67
0x400797f	              0xc3	                                     ret	      4193	syntax.c	FUNCTION_67
syntax_start	functions,0:IF,21:SWITCH,0:FOR,1:CALL,18:ELSE,7:WHILE,3:DO,0	271
0x4000056	              0x55	                                push rbp	       515	syntax.c	FUNCTION_2
0x4000057	          0x4889e5	                            mov rbp, rsp	       515	syntax.c	FUNCTION_2
0x400005a	        0x4883ec50	                           sub rsp, 0x50	       515	syntax.c	FUNCTION_2
0x400005e	        0x48897db8	             mov qword [rbp - 0x48], rdi	       515	syntax.c	FUNCTION_2
0x4000062	        0x488975b0	             mov qword [rbp - 0x50], rsi	       515	syntax.c	FUNCTION_2
0x4000066	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       517	syntax.c	FUNCTION_2
0x400006e	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       518	syntax.c	FUNCTION_2
0x4000076	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       519	syntax.c	FUNCTION_2
0x400007e	    0xc70500000000	               mov dword [0x04000088], 0	       526	syntax.c	FUNCTION_2
0x4000088	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       534	syntax.c	FUNCTION_2	IF_1
0x400008c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       534	syntax.c	FUNCTION_2	IF_1
0x4000090	    0x488b05000000	            mov rax, qword [0x04000097] 	       534	syntax.c	FUNCTION_2	IF_1
0x4000097	          0x4839c2	                            cmp rdx, rax	       534	syntax.c	FUNCTION_2	IF_1
0x400009a	            0x752e	                           jne 0x40000ca	       534	syntax.c	FUNCTION_2	IF_1
0x400009c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       535	syntax.c	FUNCTION_2	IF_1
0x40000a0	        0x488b5008	                mov rdx, qword [rax + 8]	       535	syntax.c	FUNCTION_2	IF_1
0x40000a4	    0x488b05000000	            mov rax, qword [0x040000ab] 	       535	syntax.c	FUNCTION_2	IF_1
0x40000ab	          0x4839c2	                            cmp rdx, rax	       535	syntax.c	FUNCTION_2	IF_1
0x40000ae	            0x751a	                           jne 0x40000ca	       535	syntax.c	FUNCTION_2	IF_1
0x40000b0	    0x488b05000000	            mov rax, qword [0x040000b7] 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x40000b7	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x40000be	    0x488b05000000	            mov rax, qword [0x040000c5] 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x40000c5	          0x4839c2	                            cmp rdx, rax	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x40000c8	            0x7423	                            je 0x40000ed	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x40000ca	      0xe817260000	       call sym.invalidate_current_state	       538	syntax.c	FUNCTION_2	IF_1	CALL_2
0x40000cf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       539	syntax.c	FUNCTION_2	IF_1
0x40000d3	        0x488b4008	                mov rax, qword [rax + 8]	       539	syntax.c	FUNCTION_2	IF_1
0x40000d7	    0x488905000000	            mov qword [0x040000de], rax 	       539	syntax.c	FUNCTION_2	IF_1
0x40000de	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       540	syntax.c	FUNCTION_2	IF_1
0x40000e2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       540	syntax.c	FUNCTION_2	IF_1
0x40000e6	    0x488905000000	            mov qword [0x040000ed], rax 	       540	syntax.c	FUNCTION_2	IF_1
0x40000ed	    0x488b05000000	            mov rax, qword [0x040000f4] 	       542	syntax.c	FUNCTION_2	CALL_3
0x40000f4	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       542	syntax.c	FUNCTION_2	CALL_3
0x40000fb	    0x488905000000	            mov qword [0x04000102], rax 	       542	syntax.c	FUNCTION_2	CALL_3
0x4000102	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       543	syntax.c	FUNCTION_2
0x4000106	    0x488905000000	            mov qword [0x0400010d], rax 	       543	syntax.c	FUNCTION_2
0x400010d	      0xe862110000	                call sym.syn_stack_alloc	       548	syntax.c	FUNCTION_2	CALL_4
0x4000112	    0x488b05000000	            mov rax, qword [0x04000119] 	       549	syntax.c	FUNCTION_2	IF_2
0x4000119	    0x488b80100300	           mov rax, qword [rax + 0x310] 	       549	syntax.c	FUNCTION_2	IF_2
0x4000120	          0x4885c0	                           test rax, rax	       549	syntax.c	FUNCTION_2	IF_2
0x4000123	     0xf84c7030000	                            je 0x40004f0	       549	syntax.c	FUNCTION_2	IF_2
0x4000129	    0x488b05000000	            mov rax, qword [0x04000130] 	       551	syntax.c	FUNCTION_2
0x4000130	     0xfb715000000	           movzx edx, word [0x04000137] 	       551	syntax.c	FUNCTION_2
0x4000137	    0x668990400300	              mov word [rax + 0x340], dx	       551	syntax.c	FUNCTION_2
0x400013e	    0x8b0500000000	            mov eax, dword [0x04000144] 	       556	syntax.c	FUNCTION_2	IF_3
0x4000144	            0x85c0	                           test eax, eax	       556	syntax.c	FUNCTION_2	IF_3
0x4000146	            0x7462	                            je 0x40001aa	       556	syntax.c	FUNCTION_2	IF_3
0x4000148	    0x488b05000000	            mov rax, qword [0x0400014f] 	       557	syntax.c	FUNCTION_2	IF_3
0x400014f	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       557	syntax.c	FUNCTION_2	IF_3
0x4000153	            0x7d55	                           jge 0x40001aa	       557	syntax.c	FUNCTION_2	IF_3
0x4000155	    0x488b05000000	            mov rax, qword [0x0400015c] 	       558	syntax.c	FUNCTION_2	IF_3
0x400015c	          0x488b10	                    mov rdx, qword [rax]	       558	syntax.c	FUNCTION_2	IF_3
0x400015f	    0x488b05000000	            mov rax, qword [0x04000166] 	       558	syntax.c	FUNCTION_2	IF_3
0x4000166	          0x4839c2	                            cmp rdx, rax	       558	syntax.c	FUNCTION_2	IF_3
0x4000169	            0x7e3f	                           jle 0x40001aa	       558	syntax.c	FUNCTION_2	IF_3
0x400016b	      0xbf00000000	                              mov edi, 0	       560	syntax.c	FUNCTION_2	IF_3	CALL_5
0x4000170	      0xe847260000	                call sym.syn_finish_line	       560	syntax.c	FUNCTION_2	IF_3	CALL_5
0x4000175	    0x8b0500000000	            mov eax, dword [0x0400017b] 	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x400017b	            0x85c0	                           test eax, eax	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x400017d	            0x7517	                           jne 0x4000196	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x400017f	    0x488b05000000	            mov rax, qword [0x04000186] 	       563	syntax.c	FUNCTION_2	IF_3	IF_4
0x4000186	        0x4883c001	                              add rax, 1	       563	syntax.c	FUNCTION_2	IF_3	IF_4
0x400018a	    0x488905000000	            mov qword [0x04000191], rax 	       563	syntax.c	FUNCTION_2	IF_3	IF_4
0x4000191	      0xe8bb190000	            call sym.store_current_state	       564	syntax.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x4000196	    0x488b05000000	            mov rax, qword [0x0400019d] 	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x400019d	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x40001a1	            0x740c	                            je 0x40001af	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x40001a3	      0xe83e250000	       call sym.invalidate_current_state	       573	syntax.c	FUNCTION_2	IF_3	CALL_7
0x40001a8	            0xeb05	                           jmp 0x40001af	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x40001aa	      0xe837250000	       call sym.invalidate_current_state	       576	syntax.c	FUNCTION_2	CALL_8
0x40001af	    0x8b0500000000	            mov eax, dword [0x040001b5] 	       582	syntax.c	FUNCTION_2	IF_6
0x40001b5	            0x85c0	                           test eax, eax	       582	syntax.c	FUNCTION_2	IF_6
0x40001b7	     0xf85b4000000	                           jne 0x4000271	       582	syntax.c	FUNCTION_2	IF_6
0x40001bd	    0x488b05000000	            mov rax, qword [0x040001c4] 	       582	syntax.c	FUNCTION_2	IF_6
0x40001c4	    0x488b80100300	           mov rax, qword [rax + 0x310] 	       582	syntax.c	FUNCTION_2	IF_6
0x40001cb	          0x4885c0	                           test rax, rax	       582	syntax.c	FUNCTION_2	IF_6
0x40001ce	     0xf849d000000	                            je 0x4000271	       582	syntax.c	FUNCTION_2	IF_6
0x40001d4	    0x488b05000000	            mov rax, qword [0x040001db] 	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x40001db	    0x488b80200300	           mov rax, qword [rax + 0x320] 	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x40001e2	        0x488945c8	             mov qword [rbp - 0x38], rax	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x40001e6	            0xeb6c	                           jmp 0x4000254	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x40001e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x40001ec	        0x488b4008	                mov rax, qword [rax + 8]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x40001f0	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x40001f4	            0x7f67	                            jg 0x400025d	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x40001f6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x40001fa	        0x488b4008	                mov rax, qword [rax + 8]	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x40001fe	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x4000202	            0x7f45	                            jg 0x4000249	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x4000204	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x4000208	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x400020f	          0x4885c0	                           test rax, rax	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x4000212	            0x7535	                           jne 0x4000249	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x4000214	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       591	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x4000218	        0x488945d0	             mov qword [rbp - 0x30], rax	       591	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x400021c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4000220	        0x488b5008	                mov rdx, qword [rax + 8]	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4000224	    0x488b05000000	            mov rax, qword [0x0400022b] 	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400022b	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4000232	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4000236	          0x4829c1	                            sub rcx, rax	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4000239	          0x4889c8	                            mov rax, rcx	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400023c	          0x4839c2	                            cmp rdx, rax	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400023f	            0x7c08	                            jl 0x4000249	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4000241	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       593	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4000245	        0x488945d8	             mov qword [rbp - 0x28], rax	       593	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4000249	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x400024d	          0x488b00	                    mov rax, qword [rax]	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4000250	        0x488945c8	             mov qword [rbp - 0x38], rax	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4000254	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4000259	            0x758d	                           jne 0x40001e8	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x400025b	            0xeb01	                           jmp 0x400025e	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x400025d	              0x90	                                     nop	       588	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400025e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       596	syntax.c	FUNCTION_2	IF_6	IF_10
0x4000263	            0x740c	                            je 0x4000271	       596	syntax.c	FUNCTION_2	IF_6	IF_10
0x4000265	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       597	syntax.c	FUNCTION_2	IF_6	CALL_9
0x4000269	          0x4889c7	                            mov rdi, rax	       597	syntax.c	FUNCTION_2	IF_6	CALL_9
0x400026c	      0xe8c71d0000	             call sym.load_current_state	       597	syntax.c	FUNCTION_2	IF_6	CALL_9
0x4000271	    0x8b0500000000	            mov eax, dword [0x04000277] 	       604	syntax.c	FUNCTION_2	IF_11
0x4000277	            0x85c0	                           test eax, eax	       604	syntax.c	FUNCTION_2	IF_11
0x4000279	            0x754c	                           jne 0x40002c7	       604	syntax.c	FUNCTION_2	IF_11
0x400027b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       606	syntax.c	FUNCTION_2	IF_11	CALL_10
0x400027f	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       606	syntax.c	FUNCTION_2	IF_11	CALL_10
0x4000283	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       606	syntax.c	FUNCTION_2	IF_11	CALL_10
0x4000287	          0x4889ce	                            mov rsi, rcx	       606	syntax.c	FUNCTION_2	IF_11	CALL_10
0x400028a	          0x4889c7	                            mov rdi, rax	       606	syntax.c	FUNCTION_2	IF_11	CALL_10
0x400028d	      0xe885030000	                       call sym.syn_sync	       606	syntax.c	FUNCTION_2	IF_11	CALL_10
0x4000292	    0x488b05000000	            mov rax, qword [0x04000299] 	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x4000299	        0x4883f801	                              cmp rax, 1	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x400029d	            0x750a	                           jne 0x40002a9	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x400029f	    0x48c745f00100	               mov qword [rbp - 0x10], 1	       609	syntax.c	FUNCTION_2	IF_11	IF_12
0x40002a7	            0xeb29	                           jmp 0x40002d2	       609	syntax.c	FUNCTION_2	IF_11	IF_12
0x40002a9	    0x488b05000000	            mov rax, qword [0x040002b0] 	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x40002b0	    0x488b90a80200	           mov rdx, qword [rax + 0x2a8] 	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x40002b7	    0x488b05000000	            mov rax, qword [0x040002be] 	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x40002be	          0x4801d0	                            add rax, rdx	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x40002c1	        0x488945f0	             mov qword [rbp - 0x10], rax	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x40002c5	            0xeb0b	                           jmp 0x40002d2	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x40002c7	    0x488b05000000	            mov rax, qword [0x040002ce] 	       616	syntax.c	FUNCTION_2	ELSE_3
0x40002ce	        0x488945f0	             mov qword [rbp - 0x10], rax	       616	syntax.c	FUNCTION_2	ELSE_3
0x40002d2	    0x488b05000000	            mov rax, qword [0x040002d9] 	       622	syntax.c	FUNCTION_2	IF_13
0x40002d9	    0x8b8018030000	           mov eax, dword [rax + 0x318] 	       622	syntax.c	FUNCTION_2	IF_13
0x40002df	          0x4863d0	                         movsxd rdx, eax	       622	syntax.c	FUNCTION_2	IF_13
0x40002e2	    0x488b05000000	            mov rax, qword [0x040002e9] 	       622	syntax.c	FUNCTION_2	IF_13
0x40002e9	          0x4839c2	                            cmp rdx, rax	       622	syntax.c	FUNCTION_2	IF_13
0x40002ec	            0x7f0c	                            jg 0x40002fa	       622	syntax.c	FUNCTION_2	IF_13
0x40002ee	    0xc745c43f420f	         mov dword [rbp - 0x3c], 0xf423f	       623	syntax.c	FUNCTION_2	IF_13
0x40002f5	      0xe9de010000	                           jmp 0x40004d8	       623	syntax.c	FUNCTION_2	IF_13
0x40002fa	    0x488b05000000	            mov rax, qword [0x04000301] 	       625	syntax.c	FUNCTION_2	ELSE_4
0x4000301	          0x488b00	                    mov rax, qword [rax]	       625	syntax.c	FUNCTION_2	ELSE_4
0x4000304	    0x488b15000000	            mov rdx, qword [0x0400030b] 	       625	syntax.c	FUNCTION_2	ELSE_4
0x400030b	    0x8b9218030000	           mov edx, dword [rdx + 0x318] 	       625	syntax.c	FUNCTION_2	ELSE_4
0x4000311	          0x4863ca	                         movsxd rcx, edx	       625	syntax.c	FUNCTION_2	ELSE_4
0x4000314	    0x488b15000000	            mov rdx, qword [0x0400031b] 	       625	syntax.c	FUNCTION_2	ELSE_4
0x400031b	          0x4829d1	                            sub rcx, rdx	       625	syntax.c	FUNCTION_2	ELSE_4
0x400031e	          0x4889ce	                            mov rsi, rcx	       625	syntax.c	FUNCTION_2	ELSE_4
0x4000321	            0x4899	                                     cqo	       625	syntax.c	FUNCTION_2	ELSE_4
0x4000323	          0x48f7fe	                                idiv rsi	       625	syntax.c	FUNCTION_2	ELSE_4
0x4000326	          0x83c001	                              add eax, 1	       625	syntax.c	FUNCTION_2	ELSE_4
0x4000329	          0x8945c4	             mov dword [rbp - 0x3c], eax	       625	syntax.c	FUNCTION_2	ELSE_4
0x400032c	      0xe9a7010000	                           jmp 0x40004d8	       626	syntax.c	FUNCTION_2	WHILE_1
0x4000331	      0xe8c30b0000	                 call sym.syn_start_line	       628	syntax.c	FUNCTION_2	WHILE_1	CALL_11
0x4000336	      0xbf00000000	                              mov edi, 0	       629	syntax.c	FUNCTION_2	WHILE_1	CALL_12
0x400033b	      0xe87c240000	                call sym.syn_finish_line	       629	syntax.c	FUNCTION_2	WHILE_1	CALL_12
0x4000340	    0x488b05000000	            mov rax, qword [0x04000347] 	       630	syntax.c	FUNCTION_2	WHILE_1
0x4000347	        0x4883c001	                              add rax, 1	       630	syntax.c	FUNCTION_2	WHILE_1
0x400034b	    0x488905000000	            mov qword [0x04000352], rax 	       630	syntax.c	FUNCTION_2	WHILE_1
0x4000352	    0x488b05000000	            mov rax, qword [0x04000359] 	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x4000359	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x400035d	     0xf8c59010000	                            jl 0x40004bc	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x4000363	      0x48837de800	               cmp qword [rbp - 0x18], 0	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x4000368	            0x7517	                           jne 0x4000381	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x400036a	    0x488b05000000	            mov rax, qword [0x04000371] 	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_13
0x4000371	        0x4883e801	                              sub rax, 1	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_13
0x4000375	          0x4889c7	                            mov rdi, rax	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_13
0x4000378	      0xe86b170000	           call sym.syn_stack_find_entry	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_13
0x400037d	        0x488945e8	             mov qword [rbp - 0x18], rax	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_13
0x4000381	      0x48837de800	               cmp qword [rbp - 0x18], 0	       641	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x4000386	            0x7514	                           jne 0x400039c	       641	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x4000388	    0x488b05000000	            mov rax, qword [0x0400038f] 	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x400038f	    0x488b80200300	           mov rax, qword [rax + 0x320] 	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x4000396	        0x488945e0	             mov qword [rbp - 0x20], rax	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x400039a	            0xeb15	                           jmp 0x40003b1	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x400039c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       644	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_5
0x40003a0	        0x488945e0	             mov qword [rbp - 0x20], rax	       644	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_5
0x40003a4	            0xeb0b	                           jmp 0x40003b1	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40003a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       646	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40003aa	          0x488b00	                    mov rax, qword [rax]	       646	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40003ad	        0x488945e0	             mov qword [rbp - 0x20], rax	       646	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40003b1	      0x48837de000	               cmp qword [rbp - 0x20], 0	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40003b6	            0x7414	                            je 0x40003cc	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40003b8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40003bc	        0x488b5008	                mov rdx, qword [rax + 8]	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40003c0	    0x488b05000000	            mov rax, qword [0x040003c7] 	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40003c7	          0x4839c2	                            cmp rdx, rax	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40003ca	            0x7cda	                            jl 0x40003a6	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40003cc	      0x48837de000	               cmp qword [rbp - 0x20], 0	       647	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x40003d1	     0xf84ac000000	                            je 0x4000483	       647	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x40003d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x40003db	        0x488b5008	                mov rdx, qword [rax + 8]	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x40003df	    0x488b05000000	            mov rax, qword [0x040003e6] 	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x40003e6	          0x4839c2	                            cmp rdx, rax	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x40003e9	     0xf8594000000	                           jne 0x4000483	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x40003ef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x40003f3	          0x4889c7	                            mov rdi, rax	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x40003f6	      0xe8c41f0000	                call sym.syn_stack_equal	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x40003fb	            0x85c0	                           test eax, eax	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x40003fd	     0xf8480000000	                            je 0x4000483	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x4000403	    0x488b05000000	            mov rax, qword [0x0400040a] 	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x400040a	        0x488945f8	                mov qword [rbp - 8], rax	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x400040e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       652	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x4000412	        0x488945e8	             mov qword [rbp - 0x18], rax	       652	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x4000416	            0xeb42	                           jmp 0x400045a	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4000418	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x400041c	        0x488b4008	                mov rax, qword [rax + 8]	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x4000420	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x4000424	            0x7f0a	                            jg 0x4000430	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x4000426	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       657	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x400042a	        0x488945e8	             mov qword [rbp - 0x18], rax	       657	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x400042e	            0xeb10	                           jmp 0x4000440	       657	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x4000430	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x4000434	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x400043b	          0x4885c0	                           test rax, rax	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x400043e	            0x7434	                            je 0x4000474	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x4000440	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       661	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4000444	    0x48c780d00000	               mov qword [rax + 0xd0], 0	       661	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400044f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       662	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4000453	          0x488b00	                    mov rax, qword [rax]	       662	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4000456	        0x488945e0	             mov qword [rbp - 0x20], rax	       662	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400045a	      0x48837de000	               cmp qword [rbp - 0x20], 0	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400045f	            0x7414	                            je 0x4000475	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4000461	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4000465	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400046c	        0x483b45f8	                cmp rax, qword [rbp - 8]	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4000470	            0x7ea6	                           jle 0x4000418	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4000472	            0xeb01	                           jmp 0x4000475	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4000474	              0x90	                                     nop	       660	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x4000475	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x4000479	          0x4889c7	                            mov rdi, rax	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x400047c	      0xe8b71b0000	             call sym.load_current_state	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x4000481	            0xeb39	                           jmp 0x40004bc	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x4000483	      0x48837de800	               cmp qword [rbp - 0x18], 0	       669	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4000488	            0x7429	                            je 0x40004b3	       669	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400048a	    0x488b05000000	            mov rax, qword [0x04000491] 	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4000491	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4000495	            0x741c	                            je 0x40004b3	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4000497	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400049b	        0x488b5008	                mov rdx, qword [rax + 8]	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400049f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x40004a2	            0x4898	                                    cdqe	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x40004a4	          0x4801c2	                            add rdx, rax	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x40004a7	    0x488b05000000	            mov rax, qword [0x040004ae] 	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x40004ae	          0x4839c2	                            cmp rdx, rax	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x40004b1	            0x7f09	                            jg 0x40004bc	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x40004b3	      0xe899160000	            call sym.store_current_state	       672	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x40004b8	        0x488945e8	             mov qword [rbp - 0x18], rax	       672	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x40004bc	      0xe800000000	                          call 0x40004c1	       677	syntax.c	FUNCTION_2	WHILE_1	CALL_17
0x40004c1	    0x8b0500000000	            mov eax, dword [0x040004c7] 	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x40004c7	            0x85c0	                           test eax, eax	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x40004c9	            0x740d	                            je 0x40004d8	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x40004cb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       680	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x40004cf	    0x488905000000	            mov qword [0x040004d6], rax 	       680	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x40004d6	            0xeb11	                           jmp 0x40004e9	       681	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x40004d8	    0x488b05000000	            mov rax, qword [0x040004df] 	       626	syntax.c	FUNCTION_2	WHILE_1
0x40004df	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       626	syntax.c	FUNCTION_2	WHILE_1
0x40004e3	     0xf8c48feffff	                            jl 0x4000331	       626	syntax.c	FUNCTION_2	WHILE_1
0x40004e9	      0xe80b0a0000	                 call sym.syn_start_line	       685	syntax.c	FUNCTION_2	CALL_18
0x40004ee	            0xeb01	                           jmp 0x40004f1	       685	syntax.c	FUNCTION_2	CALL_18
0x40004f0	              0x90	                                     nop	       550	syntax.c	FUNCTION_2	IF_2
0x40004f1	              0xc9	                                   leave	       686	syntax.c	FUNCTION_2
0x40004f2	              0xc3	                                     ret	       686	syntax.c	FUNCTION_2
syn_stack_find_entry	functions,0:IF,2:SWITCH,0:FOR,1:CALL,0:ELSE,0:WHILE,0:DO,0	30
0x4001ae8	              0x55	                                push rbp	      1451	syntax.c	FUNCTION_18
0x4001ae9	          0x4889e5	                            mov rbp, rsp	      1451	syntax.c	FUNCTION_18
0x4001aec	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1451	syntax.c	FUNCTION_18
0x4001af0	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1454	syntax.c	FUNCTION_18
0x4001af8	    0x488b05000000	            mov rax, qword [0x04001aff] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001aff	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001b06	        0x488945f0	             mov qword [rbp - 0x10], rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001b0a	            0xeb35	                           jmp 0x4001b41	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001b0c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4001b10	        0x488b4008	                mov rax, qword [rax + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4001b14	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4001b18	            0x7506	                           jne 0x4001b20	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4001b1a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1458	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4001b1e	            0xeb2f	                           jmp 0x4001b4f	      1458	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4001b20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4001b24	        0x488b4008	                mov rax, qword [rax + 8]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4001b28	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4001b2c	            0x7f1c	                            jg 0x4001b4a	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4001b2e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001b32	        0x488945f8	                mov qword [rbp - 8], rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001b36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001b3a	          0x488b00	                    mov rax, qword [rax]	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001b3d	        0x488945f0	             mov qword [rbp - 0x10], rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001b41	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001b46	            0x75c4	                           jne 0x4001b0c	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001b48	            0xeb01	                           jmp 0x4001b4b	      1455	syntax.c	FUNCTION_18	FOR_1
0x4001b4a	              0x90	                                     nop	      1460	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4001b4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1462	syntax.c	FUNCTION_18
0x4001b4f	              0x5d	                                 pop rbp	      1463	syntax.c	FUNCTION_18
0x4001b50	              0xc3	                                     ret	      1463	syntax.c	FUNCTION_18
get_syn_options	functions,0:IF,25:SWITCH,0:FOR,4:CALL,28:ELSE,7:WHILE,0:DO,0	456
0x4008690	              0x55	                                push rbp	      4608	syntax.c	FUNCTION_76
0x4008691	          0x4889e5	                            mov rbp, rsp	      4608	syntax.c	FUNCTION_76
0x4008694	        0x4883ec50	                           sub rsp, 0x50	      4608	syntax.c	FUNCTION_76
0x4008698	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4608	syntax.c	FUNCTION_76
0x400869c	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4608	syntax.c	FUNCTION_76
0x40086a0	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4608	syntax.c	FUNCTION_76
0x40086a4	          0x894db4	             mov dword [rbp - 0x4c], ecx	      4608	syntax.c	FUNCTION_76
0x40086a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4642	syntax.c	FUNCTION_76	IF_1
0x40086ab	          0x4885c0	                           test rax, rax	      4642	syntax.c	FUNCTION_76	IF_1
0x40086ae	            0x750a	                           jne 0x40086ba	      4642	syntax.c	FUNCTION_76	IF_1
0x40086b0	      0xb800000000	                              mov eax, 0	      4643	syntax.c	FUNCTION_76	IF_1
0x40086b5	      0xe921060000	                           jmp 0x4008cdb	      4643	syntax.c	FUNCTION_76	IF_1
0x40086ba	    0x488b05000000	            mov rax, qword [0x040086c1] 	      4646	syntax.c	FUNCTION_76	IF_2
0x40086c1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4646	syntax.c	FUNCTION_76	IF_2
0x40086c5	    0x8b8008030000	           mov eax, dword [rax + 0x308] 	      4646	syntax.c	FUNCTION_76	IF_2
0x40086cb	            0x85c0	                           test eax, eax	      4646	syntax.c	FUNCTION_76	IF_2
0x40086cd	            0x7413	                            je 0x40086e2	      4646	syntax.c	FUNCTION_76	IF_2
0x40086cf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4647	syntax.c	FUNCTION_76	IF_2
0x40086d3	            0x8b00	                    mov eax, dword [rax]	      4647	syntax.c	FUNCTION_76	IF_2
0x40086d5	       0xd00000200	                         or eax, 0x20000	      4647	syntax.c	FUNCTION_76	IF_2
0x40086da	            0x89c2	                            mov edx, eax	      4647	syntax.c	FUNCTION_76	IF_2
0x40086dc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4647	syntax.c	FUNCTION_76	IF_2
0x40086e0	            0x8910	                    mov dword [rax], edx	      4647	syntax.c	FUNCTION_76	IF_2
0x40086e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x40086e6	           0xfb600	                   movzx eax, byte [rax]	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x40086e9	           0xfb6d0	                           movzx edx, al	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x40086ec	    0x488b05000000	            mov rax, qword [0x040086f3] 	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x40086f3	            0x89d6	                            mov esi, edx	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x40086f5	          0x4889c7	                            mov rdi, rax	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x40086f8	      0xe800000000	                          call 0x40086fd	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x40086fd	          0x4885c0	                           test rax, rax	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4008700	     0xf84cd050000	                            je 0x4008cd3	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4008706	    0xc745e0130000	           mov dword [rbp - 0x20], 0x13 	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x400870d	      0xe97b010000	                           jmp 0x400888d	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4008712	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4008715	            0x4898	                                    cdqe	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4008717	        0x48c1e004	                              shl rax, 4	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x400871b	    0x480500000000	                              add rax, 0	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4008721	          0x488b00	                    mov rax, qword [rax]	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4008724	        0x488945e8	             mov qword [rbp - 0x18], rax	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4008728	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400872f	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4008736	            0xeb5d	                           jmp 0x4008795	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4008738	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400873c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400873f	            0x4898	                                    cdqe	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008741	          0x4801d0	                            add rax, rdx	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008744	           0xfb600	                   movzx eax, byte [rax]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008747	           0xfb6d0	                           movzx edx, al	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400874a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400874d	          0x4863c8	                         movsxd rcx, eax	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008750	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008754	          0x4801c8	                            add rax, rcx	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008757	           0xfb600	                   movzx eax, byte [rax]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400875a	           0xfbec0	                           movsx eax, al	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400875d	            0x39c2	                            cmp edx, eax	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400875f	            0x742c	                            je 0x400878d	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008761	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008765	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008768	            0x4898	                                    cdqe	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400876a	          0x4801d0	                            add rax, rdx	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400876d	           0xfb600	                   movzx eax, byte [rax]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008770	           0xfb6d0	                           movzx edx, al	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008773	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008776	            0x4898	                                    cdqe	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008778	        0x488d4801	                      lea rcx, [rax + 1]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400877c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008780	          0x4801c8	                            add rax, rcx	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008783	           0xfb600	                   movzx eax, byte [rax]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008786	           0xfbec0	                           movsx eax, al	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4008789	            0x39c2	                            cmp edx, eax	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400878b	            0x751e	                           jne 0x40087ab	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400878d	        0x8345dc02	               add dword [rbp - 0x24], 2	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4008791	        0x8345d801	               add dword [rbp - 0x28], 1	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4008795	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4008798	          0x4863d0	                         movsxd rdx, eax	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400879b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400879f	          0x4801d0	                            add rax, rdx	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x40087a2	           0xfb600	                   movzx eax, byte [rax]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x40087a5	            0x84c0	                             test al, al	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x40087a7	            0x758f	                           jne 0x4008738	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x40087a9	            0xeb01	                           jmp 0x40087ac	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x40087ab	              0x90	                                     nop	      4665	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x40087ac	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087af	          0x4863d0	                         movsxd rdx, eax	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087b6	          0x4801d0	                            add rax, rdx	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087b9	           0xfb600	                   movzx eax, byte [rax]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087bc	            0x84c0	                             test al, al	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087be	     0xf85c9000000	                           jne 0x400888d	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087c4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087c8	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087cb	            0x4898	                                    cdqe	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087cd	          0x4801d0	                            add rax, rdx	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087d0	           0xfb600	                   movzx eax, byte [rax]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087d3	            0x3c20	                            cmp al, 0x20	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087d5	            0x745a	                            je 0x4008831	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087d7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087db	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087de	            0x4898	                                    cdqe	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087e0	          0x4801d0	                            add rax, rdx	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087e3	           0xfb600	                   movzx eax, byte [rax]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087e6	            0x3c09	                               cmp al, 9	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087e8	            0x7447	                            je 0x4008831	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087ea	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x40087ed	            0x4898	                                    cdqe	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x40087ef	        0x48c1e004	                              shl rax, 4	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x40087f3	    0x480500000000	                              add rax, 0	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x40087f9	            0x8b00	                    mov eax, dword [rax]	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x40087fb	            0x85c0	                           test eax, eax	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087fd	            0x7e15	                           jle 0x4008814	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x40087ff	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4668	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x4008803	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4668	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x4008806	            0x4898	                                    cdqe	      4668	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x4008808	          0x4801d0	                            add rax, rdx	      4668	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400880b	           0xfb600	                   movzx eax, byte [rax]	      4668	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400880e	            0x3c3d	                            cmp al, 0x3d	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x4008810	            0x741f	                            je 0x4008831	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x4008812	            0xeb79	                           jmp 0x400888d	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x4008814	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x4008818	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x400881b	            0x4898	                                    cdqe	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x400881d	          0x4801d0	                            add rax, rdx	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x4008820	           0xfb600	                   movzx eax, byte [rax]	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x4008823	           0xfb6c0	                           movzx eax, al	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x4008826	            0x89c7	                            mov edi, eax	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x4008828	      0xe800000000	                          call 0x400882d	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x400882d	            0x85c0	                           test eax, eax	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400882f	            0x745c	                            je 0x400888d	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x4008831	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008835	          0x8b4004	                mov eax, dword [rax + 4]	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008838	            0x85c0	                           test eax, eax	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400883a	            0x7461	                            je 0x400889d	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400883c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400883f	            0x4898	                                    cdqe	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008841	        0x48c1e004	                              shl rax, 4	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008845	    0x480500000000	                              add rax, 0	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400884b	            0x8b00	                    mov eax, dword [rax]	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400884d	      0x3d00100000	                         cmp eax, 0x1000	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008852	            0x7430	                            je 0x4008884	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008854	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008857	            0x4898	                                    cdqe	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008859	        0x48c1e004	                              shl rax, 4	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400885d	    0x480500000000	                              add rax, 0	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008863	            0x8b00	                    mov eax, dword [rax]	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008865	      0x3d00200000	                         cmp eax, 0x2000	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400886a	            0x7418	                            je 0x4008884	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400886c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400886f	            0x4898	                                    cdqe	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008871	        0x48c1e004	                              shl rax, 4	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008875	    0x480500000000	                              add rax, 0	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400887b	            0x8b00	                    mov eax, dword [rax]	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400887d	      0x3d00400000	                         cmp eax, 0x4000	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008882	            0x7519	                           jne 0x400889d	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4008884	    0xc745e0ffffff	     mov dword [rbp - 0x20], 0xffffffff 	      4676	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400888b	            0xeb10	                           jmp 0x400889d	      4677	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400888d	        0x836de001	               sub dword [rbp - 0x20], 1	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4008891	        0x837de000	               cmp dword [rbp - 0x20], 0	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4008895	     0xf8977feffff	                           jns 0x4008712	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x400889b	            0xeb01	                           jmp 0x400889e	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x400889d	              0x90	                                     nop	      4677	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400889e	        0x837de000	               cmp dword [rbp - 0x20], 0	      4680	syntax.c	FUNCTION_76	FOR_1	IF_7
0x40088a2	     0xf882e040000	                            js 0x4008cd6	      4680	syntax.c	FUNCTION_76	FOR_1	IF_7
0x40088a8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40088ab	            0x4898	                                    cdqe	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40088ad	        0x48c1e004	                              shl rax, 4	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40088b1	    0x480500000000	                              add rax, 0	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40088b7	            0x8b00	                    mov eax, dword [rax]	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40088b9	          0x83f801	                              cmp eax, 1	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40088bc	            0x755b	                           jne 0x4008919	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x40088be	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x40088c2	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x40088c6	            0x84c0	                             test al, al	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x40088c8	            0x751c	                           jne 0x40088e6	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x40088ca	      0xbf00000000	                              mov edi, 0	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x40088cf	      0xe800000000	                          call 0x40088d4	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x40088d4	          0x4889c7	                            mov rdi, rax	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x40088d7	      0xe800000000	                          call 0x40088dc	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x40088dc	      0xb800000000	                              mov eax, 0	      4688	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x40088e1	      0xe9f5030000	                           jmp 0x4008cdb	      4688	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x40088e6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x40088ea	        0x488d7018	                   lea rsi, [rax + 0x18]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x40088ee	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x40088f1	        0x488d45c8	                   lea rax, [rbp - 0x38]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x40088f5	            0x89d1	                            mov ecx, edx	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x40088f7	          0x4889f2	                            mov rdx, rsi	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x40088fa	      0xbe08000000	                              mov esi, 8	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x40088ff	          0x4889c7	                            mov rdi, rax	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4008902	      0xe863310000	                    call sym.get_id_list	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4008907	            0x85c0	                           test eax, eax	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4008909	     0xf85d3fdffff	                           jne 0x40086e2	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400890f	      0xb800000000	                              mov eax, 0	      4691	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10
0x4008914	      0xe9c2030000	                           jmp 0x4008cdb	      4691	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10
0x4008919	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x400891c	            0x4898	                                    cdqe	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x400891e	        0x48c1e004	                              shl rax, 4	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x4008922	    0x480500000000	                              add rax, 0	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x4008928	            0x8b00	                    mov eax, dword [rax]	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x400892a	          0x83f802	                              cmp eax, 2	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x400892d	            0x7533	                           jne 0x4008962	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x400892f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4008933	        0x488d7020	                   lea rsi, [rax + 0x20]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4008937	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400893a	        0x488d45c8	                   lea rax, [rbp - 0x38]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400893e	            0x89d1	                            mov ecx, edx	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4008940	          0x4889f2	                            mov rdx, rsi	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4008943	      0xbe0b000000	                            mov esi, 0xb	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4008948	          0x4889c7	                            mov rdi, rax	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400894b	      0xe81a310000	                    call sym.get_id_list	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4008950	            0x85c0	                           test eax, eax	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4008952	     0xf858afdffff	                           jne 0x40086e2	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4008958	      0xb800000000	                              mov eax, 0	      4696	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12
0x400895d	      0xe979030000	                           jmp 0x4008cdb	      4696	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12
0x4008962	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x4008965	            0x4898	                                    cdqe	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x4008967	        0x48c1e004	                              shl rax, 4	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x400896b	    0x480500000000	                              add rax, 0	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x4008971	            0x8b00	                    mov eax, dword [rax]	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x4008973	          0x83f803	                              cmp eax, 3	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x4008976	            0x7533	                           jne 0x40089ab	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x4008978	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400897c	        0x488d7028	                   lea rsi, [rax + 0x28]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4008980	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4008983	        0x488d45c8	                   lea rax, [rbp - 0x38]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4008987	            0x89d1	                            mov ecx, edx	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4008989	          0x4889f2	                            mov rdx, rsi	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400898c	      0xbe09000000	                              mov esi, 9	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4008991	          0x4889c7	                            mov rdi, rax	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4008994	      0xe8d1300000	                    call sym.get_id_list	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4008999	            0x85c0	                           test eax, eax	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400899b	     0xf8541fdffff	                           jne 0x40086e2	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x40089a1	      0xb800000000	                              mov eax, 0	      4701	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14
0x40089a6	      0xe930030000	                           jmp 0x4008cdb	      4701	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14
0x40089ab	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089ae	            0x4898	                                    cdqe	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089b0	        0x48c1e004	                              shl rax, 4	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089b4	    0x480500000000	                              add rax, 0	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089ba	            0x8b00	                    mov eax, dword [rax]	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089bc	          0x83f80b	                            cmp eax, 0xb	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089bf	     0xf85b9000000	                           jne 0x4008a7e	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089c9	        0x4883c005	                              add rax, 5	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089cd	           0xfb600	                   movzx eax, byte [rax]	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089d0	            0x3c3d	                            cmp al, 0x3d	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089d2	     0xf85a6000000	                           jne 0x4008a7e	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x40089d8	    0x8b0500000000	            mov eax, dword [0x040089de] 	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x40089de	            0x85c0	                           test eax, eax	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x40089e0	            0x7442	                            je 0x4008a24	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x40089e2	    0x488b05000000	            mov rax, qword [0x040089e9] 	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40089e9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40089ed	        0x4883c206	                              add rdx, 6	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40089f1	          0x4889d7	                            mov rdi, rdx	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40089f4	            0xffd0	                                call rax	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40089f6	            0x89c2	                            mov edx, eax	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40089f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40089fc	            0x8910	                    mov dword [rax], edx	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40089fe	    0x488b05000000	            mov rax, qword [0x04008a05] 	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x4008a05	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x4008a09	        0x4883c206	                              add rdx, 6	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x4008a0d	          0x4889d7	                            mov rdi, rdx	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x4008a10	            0xffd0	                                call rax	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x4008a12	          0x83e801	                              sub eax, 1	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x4008a15	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x4008a19	            0x4898	                                    cdqe	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x4008a1b	          0x4801d0	                            add rax, rdx	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x4008a1e	        0x488945c8	             mov qword [rbp - 0x38], rax	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x4008a22	            0xeb14	                           jmp 0x4008a38	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x4008a24	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x4008a28	        0x4883c006	                              add rax, 6	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x4008a2c	           0xfb600	                   movzx eax, byte [rax]	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x4008a2f	           0xfb6d0	                           movzx edx, al	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x4008a32	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x4008a36	            0x8910	                    mov dword [rax], edx	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x4008a38	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x4008a3c	            0x8b00	                    mov eax, dword [rax]	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x4008a3e	            0x89c7	                            mov edi, eax	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x4008a40	      0xe800000000	                          call 0x4008a45	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x4008a45	            0x85c0	                           test eax, eax	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x4008a47	            0x751c	                           jne 0x4008a65	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x4008a49	      0xbf00000000	                              mov edi, 0	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x4008a4e	      0xe800000000	                          call 0x4008a53	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x4008a53	          0x4889c7	                            mov rdi, rax	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x4008a56	      0xe800000000	                          call 0x4008a5b	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x4008a5b	      0xb800000000	                              mov eax, 0	      4727	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17
0x4008a60	      0xe976020000	                           jmp 0x4008cdb	      4727	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17
0x4008a65	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4008a69	        0x4883c007	                              add rax, 7	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4008a6d	          0x4889c7	                            mov rdi, rax	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4008a70	      0xe800000000	                          call 0x4008a75	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4008a75	        0x488945c8	             mov qword [rbp - 0x38], rax	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4008a79	      0xe950020000	                           jmp 0x4008cce	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4008a7e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4008a82	            0x8b10	                    mov edx, dword [rax]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4008a84	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4008a87	            0x4898	                                    cdqe	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4008a89	        0x48c1e004	                              shl rax, 4	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4008a8d	    0x480500000000	                              add rax, 0	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4008a93	            0x8b00	                    mov eax, dword [rax]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4008a95	             0x9c2	                             or edx, eax	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4008a97	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4008a9b	            0x8910	                    mov dword [rax], edx	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4008a9d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4008aa1	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4008aa4	            0x4898	                                    cdqe	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4008aa6	          0x4801d0	                            add rax, rdx	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4008aa9	          0x4889c7	                            mov rdi, rax	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4008aac	      0xe800000000	                          call 0x4008ab1	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4008ab1	        0x488945c8	             mov qword [rbp - 0x38], rax	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4008ab5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008ab8	            0x4898	                                    cdqe	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008aba	        0x48c1e004	                              shl rax, 4	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008abe	    0x480500000000	                              add rax, 0	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008ac4	            0x8b00	                    mov eax, dword [rax]	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008ac6	          0x83f810	                           cmp eax, 0x10	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008ac9	            0x741a	                            je 0x4008ae5	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008acb	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008ace	            0x4898	                                    cdqe	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008ad0	        0x48c1e004	                              shl rax, 4	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008ad4	    0x480500000000	                              add rax, 0	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008ada	            0x8b00	                    mov eax, dword [rax]	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008adc	          0x83f820	                           cmp eax, 0x20	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008adf	     0xf85a7010000	                           jne 0x4008c8c	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008ae5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x4008ae9	        0x488b4008	                mov rax, qword [rax + 8]	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x4008aed	          0x4885c0	                           test rax, rax	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x4008af0	            0x751c	                           jne 0x4008b0e	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x4008af2	      0xbf00000000	                              mov edi, 0	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x4008af7	      0xe800000000	                          call 0x4008afc	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x4008afc	          0x4889c7	                            mov rdi, rax	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x4008aff	      0xe800000000	                          call 0x4008b04	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x4008b04	      0xb800000000	                              mov eax, 0	      4743	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x4008b09	      0xe9cd010000	                           jmp 0x4008cdb	      4743	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x4008b0e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4745	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008b12	        0x488945f0	             mov qword [rbp - 0x10], rax	      4745	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4008b16	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x4008b1a	          0x4889c7	                            mov rdi, rax	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x4008b1d	      0xe800000000	                          call 0x4008b22	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x4008b22	        0x488945c8	             mov qword [rbp - 0x38], rax	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x4008b26	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x4008b2a	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x4008b2e	            0x750a	                           jne 0x4008b3a	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x4008b30	      0xb800000000	                              mov eax, 0	      4748	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x4008b35	      0xe9a1010000	                           jmp 0x4008cdb	      4748	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x4008b3a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4008b3e	          0x4889c2	                            mov rdx, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4008b41	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4008b45	          0x4829c2	                            sub rdx, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4008b48	          0x4889d0	                            mov rax, rdx	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4008b4b	            0x89c2	                            mov edx, eax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4008b4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4008b51	            0x89d6	                            mov esi, edx	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4008b53	          0x4889c7	                            mov rdi, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4008b56	      0xe800000000	                          call 0x4008b5b	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4008b5b	        0x488945f8	                mov qword [rbp - 8], rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4008b5f	      0x48837df800	                  cmp qword [rbp - 8], 0	      4750	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x4008b64	            0x750a	                           jne 0x4008b70	      4750	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x4008b66	      0xb800000000	                              mov eax, 0	      4751	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x4008b6b	      0xe96b010000	                           jmp 0x4008cdb	      4751	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x4008b70	        0x488b45f8	                mov rax, qword [rbp - 8]	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x4008b74	      0xbe00000000	                              mov esi, 0	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x4008b79	          0x4889c7	                            mov rdi, rax	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x4008b7c	      0xe800000000	                          call 0x4008b81	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x4008b81	            0x85c0	                           test eax, eax	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x4008b83	            0x7513	                           jne 0x4008b98	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x4008b85	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x4008b89	        0x488b4008	                mov rax, qword [rax + 8]	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x4008b8d	    0xc700feffffff	            mov dword [rax], 0xfffffffe 	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x4008b93	      0xe9d6000000	                           jmp 0x4008c6e	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x4008b98	        0x488b45f8	                mov rax, qword [rbp - 8]	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x4008b9c	          0x4889c7	                            mov rdi, rax	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x4008b9f	      0xe800000000	                          call 0x4008ba4	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x4008ba4	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x4008ba7	    0x488b05000000	            mov rax, qword [0x04008bae] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4008bae	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4008bb2	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4008bb8	          0x8945dc	             mov dword [rbp - 0x24], eax	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4008bbb	            0xeb72	                           jmp 0x4008c2f	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4008bbd	    0x488b05000000	            mov rax, qword [0x04008bc4] 	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bc4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bc8	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bcf	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bd2	          0x4863d0	                         movsxd rdx, eax	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bd5	          0x4889d0	                            mov rax, rdx	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bd8	        0x48c1e002	                              shl rax, 2	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bdc	          0x4801d0	                            add rax, rdx	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bdf	        0x48c1e005	                              shl rax, 5	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008be3	          0x4801c8	                            add rax, rcx	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008be6	         0xfb74054	           movzx eax, word [rax + 0x54] 	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bea	              0x98	                                    cwde	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008beb	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bee	            0x753f	                           jne 0x4008c2f	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bf0	    0x488b05000000	            mov rax, qword [0x04008bf7] 	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bf7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008bfb	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c02	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c05	          0x4863d0	                         movsxd rdx, eax	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c08	          0x4889d0	                            mov rax, rdx	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c0b	        0x48c1e002	                              shl rax, 2	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c0f	          0x4801d0	                            add rax, rdx	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c12	        0x48c1e005	                              shl rax, 5	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c16	          0x4801c8	                            add rax, rcx	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c19	           0xfb600	                   movzx eax, byte [rax]	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c1c	            0x3c02	                               cmp al, 2	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c1e	            0x750f	                           jne 0x4008c2f	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c20	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c24	        0x488b4008	                mov rax, qword [rax + 8]	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c28	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c2b	            0x8910	                    mov dword [rax], edx	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c2d	            0xeb0a	                           jmp 0x4008c39	      4762	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4008c2f	        0x836ddc01	               sub dword [rbp - 0x24], 1	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4008c33	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4008c37	            0x7984	                           jns 0x4008bbd	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4008c39	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4764	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x4008c3d	            0x792f	                           jns 0x4008c6e	      4764	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x4008c3f	      0xbf00000000	                              mov edi, 0	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x4008c44	      0xe800000000	                          call 0x4008c49	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x4008c49	          0x4889c2	                            mov rdx, rax	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x4008c4c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x4008c50	          0x4889c6	                            mov rsi, rax	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x4008c53	          0x4889d7	                            mov rdi, rdx	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x4008c56	      0xe800000000	                          call 0x4008c5b	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x4008c5b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_24
0x4008c5f	          0x4889c7	                            mov rdi, rax	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_24
0x4008c62	      0xe800000000	                          call 0x4008c67	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_24
0x4008c67	      0xb800000000	                              mov eax, 0	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x4008c6c	            0xeb6d	                           jmp 0x4008cdb	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x4008c6e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_25
0x4008c72	          0x4889c7	                            mov rdi, rax	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_25
0x4008c75	      0xe800000000	                          call 0x4008c7a	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_25
0x4008c7a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x4008c7e	          0x4889c7	                            mov rdi, rax	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x4008c81	      0xe800000000	                          call 0x4008c86	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x4008c86	        0x488945c8	             mov qword [rbp - 0x38], rax	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x4008c8a	            0xeb42	                           jmp 0x4008cce	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x4008c8c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4008c8f	            0x4898	                                    cdqe	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4008c91	        0x48c1e004	                              shl rax, 4	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4008c95	    0x480500000000	                              add rax, 0	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4008c9b	            0x8b00	                    mov eax, dword [rax]	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4008c9d	      0x3d00200000	                         cmp eax, 0x2000	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4008ca2	     0xf853afaffff	                           jne 0x40086e2	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4008ca8	    0x488b05000000	            mov rax, qword [0x04008caf] 	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x4008caf	          0x4889c7	                            mov rdi, rax	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x4008cb2	      0xe800000000	                          call 0x4008cb7	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x4008cb7	            0x85c0	                           test eax, eax	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x4008cb9	     0xf8423faffff	                            je 0x40086e2	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x4008cbf	    0x488b05000000	            mov rax, qword [0x04008cc6] 	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4008cc6	          0x4889c7	                            mov rdi, rax	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4008cc9	      0xe800000000	                          call 0x4008cce	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4008cce	      0xe90ffaffff	                           jmp 0x40086e2	      4782	syntax.c	FUNCTION_76	FOR_1
0x4008cd3	              0x90	                                     nop	      4658	syntax.c	FUNCTION_76	FOR_1	IF_3
0x4008cd4	            0xeb01	                           jmp 0x4008cd7	      4658	syntax.c	FUNCTION_76	FOR_1	IF_3
0x4008cd6	              0x90	                                     nop	      4681	syntax.c	FUNCTION_76	FOR_1	IF_7
0x4008cd7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4784	syntax.c	FUNCTION_76
0x4008cdb	              0xc9	                                   leave	      4785	syntax.c	FUNCTION_76
0x4008cdc	              0xc3	                                     ret	      4785	syntax.c	FUNCTION_76
get_id_list	functions,0:IF,25:SWITCH,0:FOR,3:CALL,40:ELSE,9:WHILE,1:DO,0	430
0x400ba6a	              0x55	                                push rbp	      6004	syntax.c	FUNCTION_92
0x400ba6b	          0x4889e5	                            mov rbp, rsp	      6004	syntax.c	FUNCTION_92
0x400ba6e	              0x53	                                push rbx	      6004	syntax.c	FUNCTION_92
0x400ba6f	    0x4881ec280100	                          sub rsp, 0x128	      6004	syntax.c	FUNCTION_92
0x400ba76	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      6004	syntax.c	FUNCTION_92
0x400ba7d	    0x89b5e4feffff	            mov dword [rbp - 0x11c], esi	      6004	syntax.c	FUNCTION_92
0x400ba83	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      6004	syntax.c	FUNCTION_92
0x400ba8a	    0x898de0feffff	            mov dword [rbp - 0x120], ecx	      6004	syntax.c	FUNCTION_92
0x400ba90	    0x64488b042528	                mov rax, qword fs:[0x28]	      6004	syntax.c	FUNCTION_92
0x400ba99	        0x488945e8	             mov qword [rbp - 0x18], rax	      6004	syntax.c	FUNCTION_92
0x400ba9d	            0x31c0	                            xor eax, eax	      6004	syntax.c	FUNCTION_92
0x400ba9f	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      6005	syntax.c	FUNCTION_92
0x400baaa	    0xc78500ffffff	              mov dword [rbp - 0x100], 0	      6009	syntax.c	FUNCTION_92
0x400bab4	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      6010	syntax.c	FUNCTION_92
0x400babf	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	      6015	syntax.c	FUNCTION_92
0x400bac9	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	      6024	syntax.c	FUNCTION_92	FOR_1
0x400bad3	      0xe9aa060000	                           jmp 0x400c182	      6024	syntax.c	FUNCTION_92	FOR_1
0x400bad8	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400badf	          0x488b10	                    mov rdx, qword [rax]	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400bae2	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400bae8	            0x4898	                                    cdqe	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400baea	          0x4801d0	                            add rax, rdx	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400baed	          0x4889c7	                            mov rdi, rax	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400baf0	      0xe800000000	                          call 0x400baf5	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400baf5	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400bafc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0x400bb03	           0xfb600	                   movzx eax, byte [rax]	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0x400bb06	            0x3c3d	                            cmp al, 0x3d	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0x400bb08	            0x7424	                            je 0x400bb2e	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0x400bb0a	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400bb11	          0x488b18	                    mov rbx, qword [rax]	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400bb14	      0xbf00000000	                              mov edi, 0	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400bb19	      0xe800000000	                          call 0x400bb1e	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400bb1e	          0x4889de	                            mov rsi, rbx	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400bb21	          0x4889c7	                            mov rdi, rax	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400bb24	      0xe800000000	                          call 0x400bb29	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400bb29	      0xe967060000	                           jmp 0x400c195	      6033	syntax.c	FUNCTION_92	FOR_1	IF_1
0x400bb2e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x400bb35	        0x4883c001	                              add rax, 1	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x400bb39	          0x4889c7	                            mov rdi, rax	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x400bb3c	      0xe800000000	                          call 0x400bb41	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x400bb41	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x400bb48	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x400bb4f	           0xfb600	                   movzx eax, byte [rax]	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x400bb52	           0xfb6c0	                           movzx eax, al	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x400bb55	            0x89c7	                            mov edi, eax	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x400bb57	      0xe800000000	                          call 0x400bb5c	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x400bb5c	            0x85c0	                           test eax, eax	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x400bb5e	            0x7424	                            je 0x400bb84	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x400bb60	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400bb67	          0x488b18	                    mov rbx, qword [rax]	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400bb6a	      0xbf00000000	                              mov edi, 0	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400bb6f	      0xe800000000	                          call 0x400bb74	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400bb74	          0x4889de	                            mov rsi, rbx	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400bb77	          0x4889c7	                            mov rdi, rax	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400bb7a	      0xe800000000	                          call 0x400bb7f	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400bb7f	      0xe911060000	                           jmp 0x400c195	      6039	syntax.c	FUNCTION_92	FOR_1	IF_2
0x400bb84	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	      6045	syntax.c	FUNCTION_92	FOR_1
0x400bb8e	      0xe96b050000	                           jmp 0x400c0fe	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400bb93	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bb9a	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bba1	            0xeb08	                           jmp 0x400bbab	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bba3	    0x48838518ffff	               add qword [rbp - 0xe8], 1	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbab	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbb2	           0xfb600	                   movzx eax, byte [rax]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbb5	            0x84c0	                             test al, al	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbb7	            0x742a	                            je 0x400bbe3	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbb9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbc0	           0xfb600	                   movzx eax, byte [rax]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbc3	            0x3c20	                            cmp al, 0x20	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbc5	            0x741c	                            je 0x400bbe3	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbc7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbce	           0xfb600	                   movzx eax, byte [rax]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbd1	            0x3c09	                               cmp al, 9	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbd3	            0x740e	                            je 0x400bbe3	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbd5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbdc	           0xfb600	                   movzx eax, byte [rax]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbdf	            0x3c2c	                            cmp al, 0x2c	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbe1	            0x75c0	                           jne 0x400bba3	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400bbe3	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x400bbea	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x400bbf1	          0x4829c2	                            sub rdx, rax	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x400bbf4	          0x4889d0	                            mov rax, rdx	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x400bbf7	          0x83c003	                              add eax, 3	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x400bbfa	            0x89c7	                            mov edi, eax	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x400bbfc	      0xe800000000	                          call 0x400bc01	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x400bc01	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x400bc08	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      6051	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0x400bc10	            0x750f	                           jne 0x400bc21	      6051	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0x400bc12	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      6053	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0x400bc1c	      0xe9fc040000	                           jmp 0x400c11d	      6054	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0x400bc21	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400bc28	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400bc2f	          0x4829c2	                            sub rdx, rax	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400bc32	          0x4889d0	                            mov rax, rdx	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400bc35	          0x4889c2	                            mov rdx, rax	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400bc38	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400bc3f	        0x488d4801	                      lea rcx, [rax + 1]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400bc43	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400bc4a	          0x4889c6	                            mov rsi, rax	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400bc4d	          0x4889cf	                            mov rdi, rcx	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400bc50	      0xe800000000	                          call 0x400bc55	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400bc55	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400bc5c	        0x4883c001	                              add rax, 1	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400bc60	      0xbe00000000	                              mov esi, 0	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400bc65	          0x4889c7	                            mov rdi, rax	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400bc68	      0xe800000000	                          call 0x400bc6d	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400bc6d	            0x85c0	                           test eax, eax	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400bc6f	            0x7458	                            je 0x400bcc9	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400bc71	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400bc78	        0x4883c001	                              add rax, 1	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400bc7c	      0xbe00000000	                              mov esi, 0	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400bc81	          0x4889c7	                            mov rdi, rax	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400bc84	      0xe800000000	                          call 0x400bc89	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400bc89	            0x85c0	                           test eax, eax	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400bc8b	            0x743c	                            je 0x400bcc9	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400bc8d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400bc94	        0x4883c001	                              add rax, 1	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400bc98	      0xbe00000000	                              mov esi, 0	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400bc9d	          0x4889c7	                            mov rdi, rax	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400bca0	      0xe800000000	                          call 0x400bca5	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400bca5	            0x85c0	                           test eax, eax	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400bca7	            0x7420	                            je 0x400bcc9	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400bca9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400bcb0	        0x4883c001	                              add rax, 1	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400bcb4	      0xbe00000000	                              mov esi, 0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400bcb9	          0x4889c7	                            mov rdi, rax	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400bcbc	      0xe800000000	                          call 0x400bcc1	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400bcc1	            0x85c0	                           test eax, eax	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400bcc3	     0xf8528010000	                           jne 0x400bdf1	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400bcc9	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bcd0	          0x488b00	                    mov rax, qword [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bcd3	           0xfb600	                   movzx eax, byte [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bcd6	            0x3c60	                            cmp al, 0x60	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bcd8	            0x7611	                           jbe 0x400bceb	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bcda	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bce1	          0x488b00	                    mov rax, qword [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bce4	           0xfb600	                   movzx eax, byte [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bce7	            0x3c7a	                            cmp al, 0x7a	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bce9	            0x7614	                           jbe 0x400bcff	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bceb	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bcf2	          0x488b00	                    mov rax, qword [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bcf5	           0xfb600	                   movzx eax, byte [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bcf8	            0x3c43	                            cmp al, 0x43	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bcfa	           0xf95c0	                                setne al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bcfd	            0xeb12	                           jmp 0x400bd11	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bcff	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bd06	          0x488b00	                    mov rax, qword [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bd09	           0xfb600	                   movzx eax, byte [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bd0c	            0x3c63	                            cmp al, 0x63	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bd0e	           0xf95c0	                                setne al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bd11	            0x84c0	                             test al, al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bd13	            0x743e	                            je 0x400bd53	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400bd15	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400bd1c	        0x488d5801	                      lea rbx, [rax + 1]	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400bd20	      0xbf00000000	                              mov edi, 0	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400bd25	      0xe800000000	                          call 0x400bd2a	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400bd2a	          0x4889de	                            mov rsi, rbx	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400bd2d	          0x4889c7	                            mov rdi, rax	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400bd30	      0xe800000000	                          call 0x400bd35	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400bd35	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      6065	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5
0x400bd3f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6066	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_19
0x400bd46	          0x4889c7	                            mov rdi, rax	      6066	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_19
0x400bd49	      0xe800000000	                          call 0x400bd4e	      6066	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_19
0x400bd4e	      0xe9ca030000	                           jmp 0x400c11d	      6067	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5
0x400bd53	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      6069	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x400bd5a	            0x743e	                            je 0x400bd9a	      6069	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x400bd5c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400bd63	        0x488d5801	                      lea rbx, [rax + 1]	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400bd67	      0xbf00000000	                              mov edi, 0	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400bd6c	      0xe800000000	                          call 0x400bd71	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400bd71	          0x4889de	                            mov rsi, rbx	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400bd74	          0x4889c7	                            mov rdi, rax	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400bd77	      0xe800000000	                          call 0x400bd7c	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400bd7c	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      6073	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x400bd86	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0x400bd8d	          0x4889c7	                            mov rdi, rax	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0x400bd90	      0xe800000000	                          call 0x400bd95	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0x400bd95	      0xe983030000	                           jmp 0x400c11d	      6075	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x400bd9a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400bda1	        0x4883c001	                              add rax, 1	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400bda5	           0xfb600	                   movzx eax, byte [rax]	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400bda8	            0x3c41	                            cmp al, 0x41	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400bdaa	            0x750c	                           jne 0x400bdb8	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400bdac	    0xc78504ffffff	          mov dword [rbp - 0xfc], 0x4e20	      6078	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400bdb6	            0xeb28	                           jmp 0x400bde0	      6078	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400bdb8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6079	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x400bdbf	        0x4883c001	                              add rax, 1	      6079	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x400bdc3	           0xfb600	                   movzx eax, byte [rax]	      6079	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x400bdc6	            0x3c54	                            cmp al, 0x54	      6079	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x400bdc8	            0x750c	                           jne 0x400bdd6	      6079	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x400bdca	    0xc78504ffffff	          mov dword [rbp - 0xfc], 0x5208	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x400bdd4	            0xeb0a	                           jmp 0x400bde0	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x400bdd6	    0xc78504ffffff	          mov dword [rbp - 0xfc], 0x55f0	      6082	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x400bde0	    0x8b0500000000	            mov eax, dword [0x0400bde6] 	      6083	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x400bde6	     0x18504ffffff	             add dword [rbp - 0xfc], eax	      6083	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x400bdec	      0xe928020000	                           jmp 0x400c019	      6083	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x400bdf1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0x400bdf8	        0x4883c001	                              add rax, 1	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0x400bdfc	           0xfb600	                   movzx eax, byte [rax]	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0x400bdff	            0x3c40	                            cmp al, 0x40	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0x400be01	            0x7551	                           jne 0x400be54	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0x400be03	    0x83bde0feffff	              cmp dword [rbp - 0x120], 0	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x400be0a	            0x740f	                            je 0x400be1b	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x400be0c	    0xc78504ffffff	     mov dword [rbp - 0xfc], 0xffffffff 	      6088	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x400be16	      0xe9fe010000	                           jmp 0x400c019	      6088	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x400be1b	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be22	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be29	          0x4829c2	                            sub rdx, rax	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be2c	          0x4889d0	                            mov rax, rdx	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be2f	          0x83e801	                              sub eax, 1	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be32	            0x89c2	                            mov edx, eax	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be34	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be3b	        0x4883c002	                              add rax, 2	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be3f	            0x89d6	                            mov esi, edx	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be41	          0x4889c7	                            mov rdi, rax	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be44	      0xe803ecffff	              call sym.syn_check_cluster	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be49	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be4f	      0xe9c5010000	                           jmp 0x400c019	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400be54	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400be5b	        0x4883c001	                              add rax, 1	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400be5f	      0xbe00000000	                              mov esi, 0	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400be64	          0x4889c7	                            mov rdi, rax	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400be67	      0xe800000000	                          call 0x400be6c	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400be6c	          0x4885c0	                           test rax, rax	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400be6f	            0x7536	                           jne 0x400bea7	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400be71	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400be78	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400be7f	          0x4829c2	                            sub rdx, rax	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400be82	          0x4889d0	                            mov rax, rdx	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400be85	            0x89c2	                            mov edx, eax	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400be87	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400be8e	        0x4883c001	                              add rax, 1	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400be92	            0x89d6	                            mov esi, edx	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400be94	          0x4889c7	                            mov rdi, rax	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400be97	      0xe800000000	                          call 0x400be9c	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400be9c	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400bea2	      0xe972010000	                           jmp 0x400c019	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400bea7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6104	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x400beae	          0xc6005e	                    mov byte [rax], 0x5e	      6104	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x400beb1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400beb8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400bebf	          0x4889c2	                            mov rdx, rax	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400bec2	      0xb800000000	                              mov eax, 0	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400bec7	          0x4889d7	                            mov rdi, rdx	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400beca	            0xf2ae	              repne scasb al, byte [rdi]	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400becc	          0x4889c8	                            mov rax, rcx	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400becf	          0x48f7d0	                                 not rax	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400bed2	        0x488d50ff	                      lea rdx, [rax - 1]	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400bed6	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400bedd	          0x4801d0	                            add rax, rdx	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400bee0	      0x66c7002400	                    mov word [rax], 0x24	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0x400bee5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x400beec	      0xbe01000000	                              mov esi, 1	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x400bef1	          0x4889c7	                            mov rdi, rax	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x400bef4	      0xe800000000	                          call 0x400bef9	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x400bef9	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x400bf00	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x400bf07	          0x4885c0	                           test rax, rax	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x400bf0a	            0x751e	                           jne 0x400bf2a	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x400bf0c	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      6109	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x400bf16	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6110	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12	CALL_28
0x400bf1d	          0x4889c7	                            mov rdi, rax	      6110	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12	CALL_28
0x400bf20	      0xe800000000	                          call 0x400bf25	      6110	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12	CALL_28
0x400bf25	      0xe9f3010000	                           jmp 0x400c11d	      6111	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x400bf2a	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      6114	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x400bf31	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      6115	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x400bf3b	    0x8b0500000000	            mov eax, dword [0x0400bf41] 	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400bf41	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400bf47	      0xe9aa000000	                           jmp 0x400bff6	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400bf4c	    0x488b0d000000	            mov rcx, qword [0x0400bf53] 	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf53	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf59	          0x4863d0	                         movsxd rdx, eax	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf5c	          0x4889d0	                            mov rax, rdx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf5f	        0x48c1e003	                              shl rax, 3	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf63	          0x4801d0	                            add rax, rdx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf66	          0x4801c0	                            add rax, rax	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf69	          0x4801d0	                            add rax, rdx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf6c	        0x48c1e003	                              shl rax, 3	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf70	          0x4801c8	                            add rax, rcx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf73	          0x488b08	                    mov rcx, qword [rax]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf76	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf7d	      0xba00000000	                              mov edx, 0	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf82	          0x4889ce	                            mov rsi, rcx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf85	          0x4889c7	                            mov rdi, rax	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf88	      0xe800000000	                          call 0x400bf8d	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf8d	            0x85c0	                           test eax, eax	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf8f	            0x7465	                            je 0x400bff6	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400bf91	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 2	      6121	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14
0x400bf98	            0x754b	                           jne 0x400bfe5	      6121	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14
0x400bf9a	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400bfa0	    0x3b8500ffffff	            cmp eax, dword [rbp - 0x100]	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400bfa6	            0x7c1b	                            jl 0x400bfc3	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400bfa8	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_30
0x400bfaf	          0x4889c7	                            mov rdi, rax	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_30
0x400bfb2	      0xe800000000	                          call 0x400bfb7	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_30
0x400bfb7	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	      6130	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400bfc1	            0xeb22	                           jmp 0x400bfe5	      6130	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400bfc3	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400bfc9	            0x4898	                                    cdqe	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400bfcb	        0x488d1400	                    lea rdx, [rax + rax]	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400bfcf	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400bfd6	          0x4801d0	                            add rax, rdx	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400bfd9	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400bfdf	          0x83c201	                              add edx, 1	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400bfe2	          0x668910	                      mov word [rax], dx	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400bfe5	    0x8385fcfeffff	              add dword [rbp - 0x104], 1	      6135	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x400bfec	    0xc78504ffffff	     mov dword [rbp - 0xfc], 0xffffffff 	      6136	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x400bff6	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400bffd	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400c004	     0xf8942ffffff	                           jns 0x400bf4c	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400c00a	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x400c011	          0x4889c7	                            mov rdi, rax	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x400c014	      0xe800000000	                          call 0x400c019	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x400c019	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x400c020	          0x4889c7	                            mov rdi, rax	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x400c023	      0xe800000000	                          call 0x400c028	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x400c028	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x400c02f	            0x752e	                           jne 0x400c05f	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x400c031	      0xbf00000000	                              mov edi, 0	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400c036	      0xe800000000	                          call 0x400c03b	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400c03b	          0x4889c2	                            mov rdx, rax	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400c03e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400c045	          0x4889c6	                            mov rsi, rax	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400c048	          0x4889d7	                            mov rdi, rdx	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400c04b	      0xe800000000	                          call 0x400c050	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400c050	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      6146	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x400c05a	      0xe9be000000	                           jmp 0x400c11d	      6147	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x400c05f	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      6149	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0x400c066	            0x7e58	                           jle 0x400c0c0	      6149	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0x400c068	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 2	      6151	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18
0x400c06f	            0x7548	                           jne 0x400c0b9	      6151	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18
0x400c071	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400c077	    0x3b8500ffffff	            cmp eax, dword [rbp - 0x100]	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400c07d	            0x7c1b	                            jl 0x400c09a	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400c07f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_35
0x400c086	          0x4889c7	                            mov rdi, rax	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_35
0x400c089	      0xe800000000	                          call 0x400c08e	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_35
0x400c08e	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	      6157	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400c098	            0xeb1f	                           jmp 0x400c0b9	      6157	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400c09a	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400c0a0	            0x4898	                                    cdqe	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400c0a2	        0x488d1400	                    lea rdx, [rax + rax]	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400c0a6	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400c0ad	          0x4801d0	                            add rax, rdx	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400c0b0	    0x8b9504ffffff	             mov edx, dword [rbp - 0xfc]	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400c0b6	          0x668910	                      mov word [rax], dx	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400c0b9	    0x8385fcfeffff	              add dword [rbp - 0x104], 1	      6162	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0x400c0c0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_36
0x400c0c7	          0x4889c7	                            mov rdi, rax	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_36
0x400c0ca	      0xe800000000	                          call 0x400c0cf	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_36
0x400c0cf	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_36
0x400c0d6	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0x400c0dd	           0xfb600	                   movzx eax, byte [rax]	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0x400c0e0	            0x3c2c	                            cmp al, 0x2c	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0x400c0e2	            0x7538	                           jne 0x400c11c	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0x400c0e4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x400c0eb	        0x4883c001	                              add rax, 1	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x400c0ef	          0x4889c7	                            mov rdi, rax	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x400c0f2	      0xe800000000	                          call 0x400c0f7	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x400c0f7	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x400c0fe	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400c105	           0xfb600	                   movzx eax, byte [rax]	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400c108	           0xfb6c0	                           movzx eax, al	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400c10b	            0x89c7	                            mov edi, eax	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400c10d	      0xe800000000	                          call 0x400c112	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400c112	            0x85c0	                           test eax, eax	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400c114	     0xf8479faffff	                            je 0x400bb93	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400c11a	            0xeb01	                           jmp 0x400c11d	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400c11c	              0x90	                                     nop	      6166	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0x400c11d	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	      6169	syntax.c	FUNCTION_92	FOR_1	IF_21
0x400c124	            0x756b	                           jne 0x400c191	      6169	syntax.c	FUNCTION_92	FOR_1	IF_21
0x400c126	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 1	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400c12d	            0x754c	                           jne 0x400c17b	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400c12f	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x400c135	          0x83c001	                              add eax, 1	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x400c138	            0x4898	                                    cdqe	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x400c13a	             0x1c0	                            add eax, eax	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x400c13c	            0x89c7	                            mov edi, eax	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x400c13e	      0xe800000000	                          call 0x400c143	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x400c143	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x400c14a	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      6174	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0x400c152	            0x7440	                            je 0x400c194	      6174	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0x400c154	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400c15a	            0x4898	                                    cdqe	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400c15c	        0x488d1400	                    lea rdx, [rax + rax]	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400c160	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400c167	          0x4801d0	                            add rax, rdx	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400c16a	      0x66c7000000	                       mov word [rax], 0	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400c16f	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6177	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400c175	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      6177	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400c17b	    0x8385f8feffff	              add dword [rbp - 0x108], 1	      6024	syntax.c	FUNCTION_92	FOR_1
0x400c182	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 2	      6024	syntax.c	FUNCTION_92	FOR_1
0x400c189	     0xf8e49f9ffff	                           jle 0x400bad8	      6024	syntax.c	FUNCTION_92	FOR_1
0x400c18f	            0xeb04	                           jmp 0x400c195	      6024	syntax.c	FUNCTION_92	FOR_1
0x400c191	              0x90	                                     nop	      6170	syntax.c	FUNCTION_92	FOR_1	IF_21
0x400c192	            0xeb01	                           jmp 0x400c195	      6170	syntax.c	FUNCTION_92	FOR_1	IF_21
0x400c194	              0x90	                                     nop	      6175	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0x400c195	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6181	syntax.c	FUNCTION_92
0x400c19c	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      6181	syntax.c	FUNCTION_92
0x400c1a3	          0x488910	                    mov qword [rax], rdx	      6181	syntax.c	FUNCTION_92
0x400c1a6	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	      6182	syntax.c	FUNCTION_92	IF_24
0x400c1ad	            0x750a	                           jne 0x400c1b9	      6182	syntax.c	FUNCTION_92	IF_24
0x400c1af	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      6182	syntax.c	FUNCTION_92	IF_24
0x400c1b7	            0x7516	                           jne 0x400c1cf	      6182	syntax.c	FUNCTION_92	IF_24
0x400c1b9	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6184	syntax.c	FUNCTION_92	IF_24	CALL_39
0x400c1c0	          0x4889c7	                            mov rdi, rax	      6184	syntax.c	FUNCTION_92	IF_24	CALL_39
0x400c1c3	      0xe800000000	                          call 0x400c1c8	      6184	syntax.c	FUNCTION_92	IF_24	CALL_39
0x400c1c8	      0xb800000000	                              mov eax, 0	      6185	syntax.c	FUNCTION_92	IF_24
0x400c1cd	            0xeb36	                           jmp 0x400c205	      6185	syntax.c	FUNCTION_92	IF_24
0x400c1cf	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6188	syntax.c	FUNCTION_92	IF_25
0x400c1d6	          0x488b00	                    mov rax, qword [rax]	      6188	syntax.c	FUNCTION_92	IF_25
0x400c1d9	          0x4885c0	                           test rax, rax	      6188	syntax.c	FUNCTION_92	IF_25
0x400c1dc	            0x7513	                           jne 0x400c1f1	      6188	syntax.c	FUNCTION_92	IF_25
0x400c1de	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6189	syntax.c	FUNCTION_92	IF_25
0x400c1e5	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      6189	syntax.c	FUNCTION_92	IF_25
0x400c1ec	          0x488910	                    mov qword [rax], rdx	      6189	syntax.c	FUNCTION_92	IF_25
0x400c1ef	            0xeb0f	                           jmp 0x400c200	      6189	syntax.c	FUNCTION_92	IF_25
0x400c1f1	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6191	syntax.c	FUNCTION_92	CALL_40
0x400c1f8	          0x4889c7	                            mov rdi, rax	      6191	syntax.c	FUNCTION_92	CALL_40
0x400c1fb	      0xe800000000	                          call 0x400c200	      6191	syntax.c	FUNCTION_92	CALL_40
0x400c200	      0xb801000000	                              mov eax, 1	      6193	syntax.c	FUNCTION_92
0x400c205	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      6194	syntax.c	FUNCTION_92
0x400c209	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6194	syntax.c	FUNCTION_92
0x400c212	            0x7405	                            je 0x400c219	      6194	syntax.c	FUNCTION_92
0x400c214	      0xe800000000	                          call 0x400c219	      6194	syntax.c	FUNCTION_92
0x400c219	    0x4881c4280100	                          add rsp, 0x128	      6194	syntax.c	FUNCTION_92
0x400c220	              0x5b	                                 pop rbx	      6194	syntax.c	FUNCTION_92
0x400c221	              0x5d	                                 pop rbp	      6194	syntax.c	FUNCTION_92
0x400c222	              0xc3	                                     ret	      6194	syntax.c	FUNCTION_92
syn_compare_syntime	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	16
0x400cf7f	              0x55	                                push rbp	      6753	syntax.c	FUNCTION_111
0x400cf80	          0x4889e5	                            mov rbp, rsp	      6753	syntax.c	FUNCTION_111
0x400cf83	        0x4883ec20	                           sub rsp, 0x20	      6753	syntax.c	FUNCTION_111
0x400cf87	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6753	syntax.c	FUNCTION_111
0x400cf8b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6753	syntax.c	FUNCTION_111
0x400cf8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6754	syntax.c	FUNCTION_111
0x400cf93	        0x488945f0	             mov qword [rbp - 0x10], rax	      6754	syntax.c	FUNCTION_111
0x400cf97	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6755	syntax.c	FUNCTION_111
0x400cf9b	        0x488945f8	                mov qword [rbp - 8], rax	      6755	syntax.c	FUNCTION_111
0x400cf9f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6757	syntax.c	FUNCTION_111	CALL_1
0x400cfa3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6757	syntax.c	FUNCTION_111	CALL_1
0x400cfa7	          0x4889d6	                            mov rsi, rdx	      6757	syntax.c	FUNCTION_111	CALL_1
0x400cfaa	          0x4889c7	                            mov rdi, rax	      6757	syntax.c	FUNCTION_111	CALL_1
0x400cfad	      0xe800000000	                          call 0x400cfb2	      6757	syntax.c	FUNCTION_111	CALL_1
0x400cfb2	              0xc9	                                   leave	      6758	syntax.c	FUNCTION_111
0x400cfb3	              0xc3	                                     ret	      6758	syntax.c	FUNCTION_111
push_next_match	functions,0:IF,6:SWITCH,0:FOR,0:CALL,9:ELSE,1:WHILE,0:DO,0	233
0x4003dea	              0x55	                                push rbp	      2518	syntax.c	FUNCTION_30
0x4003deb	          0x4889e5	                            mov rbp, rsp	      2518	syntax.c	FUNCTION_30
0x4003dee	        0x4883ec20	                           sub rsp, 0x20	      2518	syntax.c	FUNCTION_30
0x4003df2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2518	syntax.c	FUNCTION_30
0x4003df6	    0x488b05000000	            mov rax, qword [0x04003dfd] 	      2524	syntax.c	FUNCTION_30
0x4003dfd	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2524	syntax.c	FUNCTION_30
0x4003e04	    0x8b0500000000	            mov eax, dword [0x04003e0a] 	      2524	syntax.c	FUNCTION_30
0x4003e0a	          0x4863d0	                         movsxd rdx, eax	      2524	syntax.c	FUNCTION_30
0x4003e0d	          0x4889d0	                            mov rax, rdx	      2524	syntax.c	FUNCTION_30
0x4003e10	        0x48c1e002	                              shl rax, 2	      2524	syntax.c	FUNCTION_30
0x4003e14	          0x4801d0	                            add rax, rdx	      2524	syntax.c	FUNCTION_30
0x4003e17	        0x48c1e005	                              shl rax, 5	      2524	syntax.c	FUNCTION_30
0x4003e1b	          0x4801c8	                            add rax, rcx	      2524	syntax.c	FUNCTION_30
0x4003e1e	        0x488945f8	                mov qword [rbp - 8], rax	      2524	syntax.c	FUNCTION_30
0x4003e22	    0x8b0500000000	            mov eax, dword [0x04003e28] 	      2529	syntax.c	FUNCTION_30	IF_1	CALL_1
0x4003e28	            0x89c7	                            mov edi, eax	      2529	syntax.c	FUNCTION_30	IF_1	CALL_1
0x4003e2a	      0xe8000d0000	             call sym.push_current_state	      2529	syntax.c	FUNCTION_30	IF_1	CALL_1
0x4003e2f	          0x83f801	                              cmp eax, 1	      2529	syntax.c	FUNCTION_30	IF_1	CALL_1
0x4003e32	     0xf8590030000	                           jne 0x40041c8	      2529	syntax.c	FUNCTION_30	IF_1	CALL_1
0x4003e38	    0x488b0d000000	            mov rcx, qword [0x04003e3f] 	      2535	syntax.c	FUNCTION_30	IF_1
0x4003e3f	    0x8b0500000000	            mov eax, dword [0x04003e45] 	      2535	syntax.c	FUNCTION_30	IF_1
0x4003e45	          0x4863d0	                         movsxd rdx, eax	      2535	syntax.c	FUNCTION_30	IF_1
0x4003e48	          0x4889d0	                            mov rax, rdx	      2535	syntax.c	FUNCTION_30	IF_1
0x4003e4b	        0x48c1e003	                              shl rax, 3	      2535	syntax.c	FUNCTION_30	IF_1
0x4003e4f	          0x4801d0	                            add rax, rdx	      2535	syntax.c	FUNCTION_30	IF_1
0x4003e52	        0x48c1e004	                              shl rax, 4	      2535	syntax.c	FUNCTION_30	IF_1
0x4003e56	    0x482d90000000	                           sub rax, 0x90	      2535	syntax.c	FUNCTION_30	IF_1
0x4003e5c	          0x4801c8	                            add rax, rcx	      2535	syntax.c	FUNCTION_30	IF_1
0x4003e5f	        0x488945e8	             mov qword [rbp - 0x18], rax	      2535	syntax.c	FUNCTION_30	IF_1
0x4003e63	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2536	syntax.c	FUNCTION_30	IF_1
0x4003e67	    0x488b05000000	            mov rax, qword [0x04003e6e] 	      2536	syntax.c	FUNCTION_30	IF_1
0x4003e6e	    0x488b15000000	            mov rdx, qword [0x04003e75] 	      2536	syntax.c	FUNCTION_30	IF_1
0x4003e75	        0x48894128	             mov qword [rcx + 0x28], rax	      2536	syntax.c	FUNCTION_30	IF_1
0x4003e79	        0x48895130	             mov qword [rcx + 0x30], rdx	      2536	syntax.c	FUNCTION_30	IF_1
0x4003e7d	    0x8b1500000000	            mov edx, dword [0x04003e83] 	      2537	syntax.c	FUNCTION_30	IF_1
0x4003e83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2537	syntax.c	FUNCTION_30	IF_1
0x4003e87	          0x895010	             mov dword [rax + 0x10], edx	      2537	syntax.c	FUNCTION_30	IF_1
0x4003e8a	    0x488b05000000	            mov rax, qword [0x04003e91] 	      2538	syntax.c	FUNCTION_30	IF_1
0x4003e91	            0x89c2	                            mov edx, eax	      2538	syntax.c	FUNCTION_30	IF_1
0x4003e93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2538	syntax.c	FUNCTION_30	IF_1
0x4003e97	          0x89500c	              mov dword [rax + 0xc], edx	      2538	syntax.c	FUNCTION_30	IF_1
0x4003e9a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2539	syntax.c	FUNCTION_30	IF_1
0x4003e9e	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2539	syntax.c	FUNCTION_30	IF_1
0x4003ea1	          0x4863d0	                         movsxd rdx, eax	      2539	syntax.c	FUNCTION_30	IF_1
0x4003ea4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2539	syntax.c	FUNCTION_30	IF_1
0x4003ea8	        0x48895068	             mov qword [rax + 0x68], rdx	      2539	syntax.c	FUNCTION_30	IF_1
0x4003eac	    0x8b0500000000	            mov eax, dword [0x04003eb2] 	      2541	syntax.c	FUNCTION_30	IF_1
0x4003eb2	          0x8d5001	                      lea edx, [rax + 1]	      2541	syntax.c	FUNCTION_30	IF_1
0x4003eb5	    0x891500000000	            mov dword [0x04003ebb], edx 	      2541	syntax.c	FUNCTION_30	IF_1
0x4003ebb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2541	syntax.c	FUNCTION_30	IF_1
0x4003ebf	          0x894270	             mov dword [rdx + 0x70], eax	      2541	syntax.c	FUNCTION_30	IF_1
0x4003ec2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2542	syntax.c	FUNCTION_30	IF_1
0x4003ec6	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2542	syntax.c	FUNCTION_30	IF_1
0x4003ec9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2542	syntax.c	FUNCTION_30	IF_1
0x4003ecd	          0x895074	             mov dword [rax + 0x74], edx	      2542	syntax.c	FUNCTION_30	IF_1
0x4003ed0	    0x8b0500000000	            mov eax, dword [0x04003ed6] 	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003ed6	          0x83f801	                              cmp eax, 1	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003ed9	            0x7e46	                           jle 0x4003f21	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003edb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003edf	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003ee3	    0x488b35000000	            mov rsi, qword [0x04003eea] 	      2545	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003eea	    0x8b0500000000	            mov eax, dword [0x04003ef0] 	      2545	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003ef0	          0x4863d0	                         movsxd rdx, eax	      2545	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003ef3	          0x4889d0	                            mov rax, rdx	      2545	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003ef6	        0x48c1e003	                              shl rax, 3	      2545	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003efa	          0x4801d0	                            add rax, rdx	      2545	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003efd	        0x48c1e004	                              shl rax, 4	      2545	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003f01	    0x482d20010000	                          sub rax, 0x120	      2545	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003f07	          0x4801f0	                            add rax, rsi	      2545	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003f0a	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2545	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003f0e	      0x2500000200	                        and eax, 0x20000	      2545	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003f13	          0x4809c1	                             or rcx, rax	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003f16	          0x4889ca	                            mov rdx, rcx	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003f19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003f1d	        0x48895068	             mov qword [rax + 0x68], rdx	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4003f21	        0x488b45f8	                mov rax, qword [rbp - 8]	      2547	syntax.c	FUNCTION_30	IF_1
0x4003f25	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2547	syntax.c	FUNCTION_30	IF_1
0x4003f29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2547	syntax.c	FUNCTION_30	IF_1
0x4003f2d	    0x488990800000	             mov qword [rax + 0x80], rdx	      2547	syntax.c	FUNCTION_30	IF_1
0x4003f34	    0x488b05000000	            mov rax, qword [0x04003f3b] 	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4003f3b	          0x4889c7	                            mov rdi, rax	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4003f3e	      0xe800000000	                          call 0x4003f43	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4003f43	          0x4889c2	                            mov rdx, rax	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4003f46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4003f4a	    0x488990880000	             mov qword [rax + 0x88], rdx	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4003f51	        0x488b45f8	                mov rax, qword [rbp - 8]	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4003f55	           0xfb600	                   movzx eax, byte [rax]	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4003f58	            0x3c02	                               cmp al, 2	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4003f5a	            0x7531	                           jne 0x4003f8d	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4003f5c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4003f60	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4003f63	          0x83e004	                              and eax, 4	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4003f66	            0x85c0	                           test eax, eax	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4003f68	            0x7523	                           jne 0x4003f8d	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4003f6a	    0x8b0d00000000	            mov ecx, dword [0x04003f70] 	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4003f70	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4003f74	      0xba01000000	                              mov edx, 1	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4003f79	            0x89ce	                            mov esi, ecx	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4003f7b	          0x4889c7	                            mov rdi, rax	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4003f7e	      0xe8f8090000	                  call sym.update_si_end	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4003f83	      0xe8f9070000	                  call sym.check_keepend	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_4
0x4003f88	      0xe980000000	                           jmp 0x400400d	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_4
0x4003f8d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003f91	    0x488b05000000	            mov rax, qword [0x04003f98] 	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003f98	    0x488b15000000	            mov rdx, qword [0x04003f9f] 	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003f9f	        0x48894118	             mov qword [rcx + 0x18], rax	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fa3	        0x48895120	             mov qword [rcx + 0x20], rdx	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fa7	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fab	    0x488b05000000	            mov rax, qword [0x04003fb2] 	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fb2	    0x488b15000000	            mov rdx, qword [0x04003fb9] 	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fb9	        0x48894138	             mov qword [rcx + 0x38], rax	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fbd	        0x48895140	             mov qword [rcx + 0x40], rdx	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fc1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2559	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fc5	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2559	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fcc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fd0	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fd4	    0x488b05000000	            mov rax, qword [0x04003fdb] 	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fdb	          0x4809c2	                             or rdx, rax	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fde	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fe2	        0x48895068	             mov qword [rax + 0x68], rdx	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fe6	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003fea	    0x488b05000000	            mov rax, qword [0x04003ff1] 	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003ff1	    0x488b15000000	            mov rdx, qword [0x04003ff8] 	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003ff8	        0x48894148	             mov qword [rcx + 0x48], rax	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4003ffc	        0x48895150	             mov qword [rcx + 0x50], rdx	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004000	    0x8b1500000000	            mov edx, dword [0x04004006] 	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004006	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x400400a	          0x895058	             mov dword [rax + 0x58], edx	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x400400d	    0x8b0500000000	            mov eax, dword [0x04004013] 	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4004013	            0x85c0	                           test eax, eax	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4004015	            0x7921	                           jns 0x4004038	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4004017	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x400401b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x400401f	      0x2500040000	                          and eax, 0x400	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4004024	          0x4885c0	                           test rax, rax	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4004027	            0x740f	                            je 0x4004038	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4004029	    0x8b0500000000	            mov eax, dword [0x0400402f] 	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x400402f	          0x83e801	                              sub eax, 1	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x4004032	    0x890500000000	            mov dword [0x04004038], eax 	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x4004038	      0xe844070000	                  call sym.check_keepend	      2566	syntax.c	FUNCTION_30	IF_1	CALL_5
0x400403d	    0x8b0500000000	            mov eax, dword [0x04004043] 	      2567	syntax.c	FUNCTION_30	IF_1	CALL_6
0x4004043	          0x83e801	                              sub eax, 1	      2567	syntax.c	FUNCTION_30	IF_1	CALL_6
0x4004046	            0x89c7	                            mov edi, eax	      2567	syntax.c	FUNCTION_30	IF_1	CALL_6
0x4004048	      0xe8b9040000	                 call sym.update_si_attr	      2567	syntax.c	FUNCTION_30	IF_1	CALL_6
0x400404d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2570	syntax.c	FUNCTION_30	IF_1
0x4004051	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2570	syntax.c	FUNCTION_30	IF_1
0x4004055	      0x2500000600	                        and eax, 0x60000	      2570	syntax.c	FUNCTION_30	IF_1
0x400405a	          0x8945f4	              mov dword [rbp - 0xc], eax	      2570	syntax.c	FUNCTION_30	IF_1
0x400405d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004061	           0xfb600	                   movzx eax, byte [rax]	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004064	            0x3c02	                               cmp al, 2	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004066	     0xf855c010000	                           jne 0x40041c8	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x400406c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004070	         0xfb74002	               movzx eax, word [rax + 2]	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004074	          0x6685c0	                             test ax, ax	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004077	     0xf844b010000	                            je 0x40041c8	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x400407d	    0x8b0500000000	            mov eax, dword [0x04004083] 	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_7
0x4004083	            0x89c7	                            mov edi, eax	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_7
0x4004085	      0xe8a50a0000	             call sym.push_current_state	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_7
0x400408a	          0x83f801	                              cmp eax, 1	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_7
0x400408d	     0xf8535010000	                           jne 0x40041c8	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_7
0x4004093	    0x488b0d000000	            mov rcx, qword [0x0400409a] 	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x400409a	    0x8b0500000000	            mov eax, dword [0x040040a0] 	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040a0	          0x4863d0	                         movsxd rdx, eax	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040a3	          0x4889d0	                            mov rax, rdx	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040a6	        0x48c1e003	                              shl rax, 3	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040aa	          0x4801d0	                            add rax, rdx	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040ad	        0x48c1e004	                              shl rax, 4	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040b1	    0x482d90000000	                           sub rax, 0x90	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040b7	          0x4801c8	                            add rax, rcx	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040ba	        0x488945e8	             mov qword [rbp - 0x18], rax	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040be	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040c2	    0x488b05000000	            mov rax, qword [0x040040c9] 	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040c9	    0x488b15000000	            mov rdx, qword [0x040040d0] 	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040d0	        0x48894128	             mov qword [rcx + 0x28], rax	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040d4	        0x48895130	             mov qword [rcx + 0x30], rdx	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040d8	    0x8b1500000000	            mov edx, dword [0x040040de] 	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040e2	          0x895010	             mov dword [rax + 0x10], edx	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040e5	    0x488b05000000	            mov rax, qword [0x040040ec] 	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040ec	            0x89c2	                            mov edx, eax	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040f2	          0x89500c	              mov dword [rax + 0xc], edx	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040f5	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x40040f9	    0x488b05000000	            mov rax, qword [0x04004100] 	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004100	    0x488b15000000	            mov rdx, qword [0x04004107] 	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004107	        0x48894118	             mov qword [rcx + 0x18], rax	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x400410b	        0x48895120	             mov qword [rcx + 0x20], rdx	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x400410f	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004113	    0x488b05000000	            mov rax, qword [0x0400411a] 	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x400411a	    0x488b15000000	            mov rdx, qword [0x04004121] 	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004121	        0x48894138	             mov qword [rcx + 0x38], rax	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004125	        0x48895140	             mov qword [rcx + 0x40], rdx	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004129	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2586	syntax.c	FUNCTION_30	IF_1	IF_5
0x400412d	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2586	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004134	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2587	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004138	    0xc74058000000	               mov dword [rax + 0x58], 0	      2587	syntax.c	FUNCTION_30	IF_1	IF_5
0x400413f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2588	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004143	    0x48c740684000	           mov qword [rax + 0x68], 0x40 	      2588	syntax.c	FUNCTION_30	IF_1	IF_5
0x400414b	    0x8b0500000000	            mov eax, dword [0x04004151] 	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004151	          0x8d5001	                      lea edx, [rax + 1]	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004154	    0x891500000000	            mov dword [0x0400415a], edx 	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x400415a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x400415e	          0x894270	             mov dword [rdx + 0x70], eax	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004161	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004165	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004169	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x400416c	            0x4898	                                    cdqe	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x400416e	          0x4809c2	                             or rdx, rax	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004171	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004175	        0x48895068	             mov qword [rax + 0x68], rdx	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4004179	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x400417d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4004181	      0x2500000400	                        and eax, 0x40000	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4004186	          0x4885c0	                           test rax, rax	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4004189	            0x7419	                            je 0x40041a4	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x400418b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x400418f	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4004193	    0x480d00000200	                         or rax, 0x20000	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4004199	          0x4889c2	                            mov rdx, rax	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x400419c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x40041a0	        0x48895068	             mov qword [rax + 0x68], rdx	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x40041a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2595	syntax.c	FUNCTION_30	IF_1	IF_5
0x40041a8	    0x48c780800000	               mov qword [rax + 0x80], 0	      2595	syntax.c	FUNCTION_30	IF_1	IF_5
0x40041b3	      0xe8c9050000	                  call sym.check_keepend	      2596	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_8
0x40041b8	    0x8b0500000000	            mov eax, dword [0x040041be] 	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x40041be	          0x83e801	                              sub eax, 1	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x40041c1	            0x89c7	                            mov edi, eax	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x40041c3	      0xe83e030000	                 call sym.update_si_attr	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x40041c8	    0xc70500000000	     mov dword [0x040041d2], 0xffffffff 	      2601	syntax.c	FUNCTION_30
0x40041d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2603	syntax.c	FUNCTION_30
0x40041d6	              0xc9	                                   leave	      2604	syntax.c	FUNCTION_30
0x40041d7	              0xc3	                                     ret	      2604	syntax.c	FUNCTION_30
syn_stack_apply_changes_block	functions,0:IF,7:SWITCH,0:FOR,1:CALL,1:ELSE,2:WHILE,0:DO,0	112
0x400168e	              0x55	                                push rbp	      1322	syntax.c	FUNCTION_15
0x400168f	          0x4889e5	                            mov rbp, rsp	      1322	syntax.c	FUNCTION_15
0x4001692	        0x4883ec30	                           sub rsp, 0x30	      1322	syntax.c	FUNCTION_15
0x4001696	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1322	syntax.c	FUNCTION_15
0x400169a	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1322	syntax.c	FUNCTION_15
0x400169e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1326	syntax.c	FUNCTION_15	IF_1
0x40016a2	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1326	syntax.c	FUNCTION_15	IF_1
0x40016a9	          0x4885c0	                           test rax, rax	      1326	syntax.c	FUNCTION_15	IF_1
0x40016ac	     0xf84c0010000	                            je 0x4001872	      1326	syntax.c	FUNCTION_15	IF_1
0x40016b2	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1329	syntax.c	FUNCTION_15
0x40016ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1330	syntax.c	FUNCTION_15	FOR_1
0x40016be	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1330	syntax.c	FUNCTION_15	FOR_1
0x40016c5	        0x488945e0	             mov qword [rbp - 0x20], rax	      1330	syntax.c	FUNCTION_15	FOR_1
0x40016c9	      0xe997010000	                           jmp 0x4001865	      1330	syntax.c	FUNCTION_15	FOR_1
0x40016ce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40016d2	        0x488b5008	                mov rdx, qword [rax + 8]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40016d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40016da	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40016e1	          0x4801c2	                            add rdx, rax	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40016e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40016e8	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40016ef	          0x4839c2	                            cmp rdx, rax	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40016f2	     0xf8e5a010000	                           jle 0x4001852	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40016f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40016fc	        0x488b5008	                mov rdx, qword [rax + 8]	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4001700	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4001704	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400170b	          0x4801d0	                            add rax, rdx	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400170e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4001712	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x4001716	    0x488b80180100	           mov rax, qword [rax + 0x118] 	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x400171d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x4001721	            0x7c4e	                            jl 0x4001771	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x4001723	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1338	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x4001727	          0x488b00	                    mov rax, qword [rax]	      1338	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x400172a	        0x488945f8	                mov qword [rbp - 8], rax	      1338	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x400172e	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1339	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x4001733	            0x7511	                           jne 0x4001746	      1339	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x4001735	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x4001739	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x400173d	    0x488990200300	            mov qword [rax + 0x320], rdx	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x4001744	            0xeb0b	                           jmp 0x4001751	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x4001746	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1342	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	ELSE_1
0x400174a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1342	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	ELSE_1
0x400174e	          0x488910	                    mov qword [rax], rdx	      1342	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	ELSE_1
0x4001751	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1343	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	CALL_1
0x4001755	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1343	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	CALL_1
0x4001759	          0x4889d6	                            mov rsi, rdx	      1343	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	CALL_1
0x400175c	          0x4889c7	                            mov rdi, rax	      1343	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	CALL_1
0x400175f	      0xe82d030000	           call sym.syn_stack_free_entry	      1343	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	CALL_1
0x4001764	        0x488b45f8	                mov rax, qword [rbp - 8]	      1344	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x4001768	        0x488945e0	             mov qword [rbp - 0x20], rax	      1344	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x400176c	      0xe9f4000000	                           jmp 0x4001865	      1345	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x4001771	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x4001775	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x400177c	          0x4885c0	                           test rax, rax	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x400177f	     0xf8480000000	                            je 0x4001805	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x4001785	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x4001789	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x4001790	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x4001794	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x400179b	          0x4839c2	                            cmp rdx, rax	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x400179e	            0x7e65	                           jle 0x4001805	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x40017a0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017a4	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017af	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017b6	          0x4801c2	                            add rdx, rax	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017bd	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017c4	          0x4839c2	                            cmp rdx, rax	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017c7	            0x7e26	                           jle 0x40017ef	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017c9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017cd	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017d8	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017df	          0x4801c2	                            add rdx, rax	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017e6	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017ed	            0xeb16	                           jmp 0x4001805	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40017ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x40017f3	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x40017fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x40017fe	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x4001805	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1357	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4001809	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      1357	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4001810	          0x4885c0	                           test rax, rax	      1357	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4001813	            0x741b	                            je 0x4001830	      1357	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4001815	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4001819	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4001820	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4001824	    0x488b80180100	           mov rax, qword [rax + 0x118] 	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x400182b	          0x4839c2	                            cmp rdx, rax	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x400182e	            0x7d16	                           jge 0x4001846	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4001830	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4001834	    0x488b90180100	           mov rdx, qword [rax + 0x118] 	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x400183b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x400183f	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4001846	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1361	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400184a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1361	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400184e	        0x48895008	                mov qword [rax + 8], rdx	      1361	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4001852	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1363	syntax.c	FUNCTION_15	FOR_1
0x4001856	        0x488945e8	             mov qword [rbp - 0x18], rax	      1363	syntax.c	FUNCTION_15	FOR_1
0x400185a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1364	syntax.c	FUNCTION_15	FOR_1
0x400185e	          0x488b00	                    mov rax, qword [rax]	      1364	syntax.c	FUNCTION_15	FOR_1
0x4001861	        0x488945e0	             mov qword [rbp - 0x20], rax	      1364	syntax.c	FUNCTION_15	FOR_1
0x4001865	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1330	syntax.c	FUNCTION_15	FOR_1
0x400186a	     0xf855efeffff	                           jne 0x40016ce	      1330	syntax.c	FUNCTION_15	FOR_1
0x4001870	            0xeb01	                           jmp 0x4001873	      1330	syntax.c	FUNCTION_15	FOR_1
0x4001872	              0x90	                                     nop	      1327	syntax.c	FUNCTION_15	IF_1
0x4001873	              0xc9	                                   leave	      1366	syntax.c	FUNCTION_15
0x4001874	              0xc3	                                     ret	      1366	syntax.c	FUNCTION_15
highlight_has_attr	functions,0:IF,4:SWITCH,0:FOR,0:CALL,0:ELSE,2:WHILE,0:DO,0	66
0x401223e	              0x55	                                push rbp	      9331	syntax.c	FUNCTION_143
0x401223f	          0x4889e5	                            mov rbp, rsp	      9331	syntax.c	FUNCTION_143
0x4012242	          0x897dec	             mov dword [rbp - 0x14], edi	      9331	syntax.c	FUNCTION_143
0x4012245	          0x8975e8	             mov dword [rbp - 0x18], esi	      9331	syntax.c	FUNCTION_143
0x4012248	          0x8955e4	             mov dword [rbp - 0x1c], edx	      9331	syntax.c	FUNCTION_143
0x401224b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9334	syntax.c	FUNCTION_143	IF_1
0x401224f	            0x7e0b	                           jle 0x401225c	      9334	syntax.c	FUNCTION_143	IF_1
0x4012251	    0x8b0500000000	            mov eax, dword [0x04012257] 	      9334	syntax.c	FUNCTION_143	IF_1
0x4012257	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      9334	syntax.c	FUNCTION_143	IF_1
0x401225a	            0x7d0a	                           jge 0x4012266	      9334	syntax.c	FUNCTION_143	IF_1
0x401225c	      0xb800000000	                              mov eax, 0	      9335	syntax.c	FUNCTION_143	IF_1
0x4012261	      0xe9b6000000	                           jmp 0x401231c	      9335	syntax.c	FUNCTION_143	IF_1
0x4012266	        0x837de467	           cmp dword [rbp - 0x1c], 0x67 	      9338	syntax.c	FUNCTION_143	IF_2
0x401226a	            0x7532	                           jne 0x401229e	      9338	syntax.c	FUNCTION_143	IF_2
0x401226c	    0x488b0d000000	            mov rcx, qword [0x04012273] 	      9339	syntax.c	FUNCTION_143	IF_2
0x4012273	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9339	syntax.c	FUNCTION_143	IF_2
0x4012276	          0x4863d0	                         movsxd rdx, eax	      9339	syntax.c	FUNCTION_143	IF_2
0x4012279	          0x4889d0	                            mov rax, rdx	      9339	syntax.c	FUNCTION_143	IF_2
0x401227c	        0x48c1e003	                              shl rax, 3	      9339	syntax.c	FUNCTION_143	IF_2
0x4012280	          0x4801d0	                            add rax, rdx	      9339	syntax.c	FUNCTION_143	IF_2
0x4012283	          0x4801c0	                            add rax, rax	      9339	syntax.c	FUNCTION_143	IF_2
0x4012286	          0x4801d0	                            add rax, rdx	      9339	syntax.c	FUNCTION_143	IF_2
0x4012289	        0x48c1e003	                              shl rax, 3	      9339	syntax.c	FUNCTION_143	IF_2
0x401228d	    0x482d98000000	                           sub rax, 0x98	      9339	syntax.c	FUNCTION_143	IF_2
0x4012293	          0x4801c8	                            add rax, rcx	      9339	syntax.c	FUNCTION_143	IF_2
0x4012296	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      9339	syntax.c	FUNCTION_143	IF_2
0x4012299	          0x8945fc	                mov dword [rbp - 4], eax	      9339	syntax.c	FUNCTION_143	IF_2
0x401229c	            0xeb68	                           jmp 0x4012306	      9339	syntax.c	FUNCTION_143	IF_2
0x401229e	        0x837de463	           cmp dword [rbp - 0x1c], 0x63 	      9342	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122a2	            0x7532	                           jne 0x40122d6	      9342	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122a4	    0x488b0d000000	            mov rcx, qword [0x040122ab] 	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122ab	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122ae	          0x4863d0	                         movsxd rdx, eax	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122b1	          0x4889d0	                            mov rax, rdx	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122b4	        0x48c1e003	                              shl rax, 3	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122b8	          0x4801d0	                            add rax, rdx	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122bb	          0x4801c0	                            add rax, rax	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122be	          0x4801d0	                            add rax, rdx	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122c1	        0x48c1e003	                              shl rax, 3	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122c5	    0x482d98000000	                           sub rax, 0x98	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122cb	          0x4801c8	                            add rax, rcx	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122ce	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122d1	          0x8945fc	                mov dword [rbp - 4], eax	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122d4	            0xeb30	                           jmp 0x4012306	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x40122d6	    0x488b0d000000	            mov rcx, qword [0x040122dd] 	      9345	syntax.c	FUNCTION_143	ELSE_2
0x40122dd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9345	syntax.c	FUNCTION_143	ELSE_2
0x40122e0	          0x4863d0	                         movsxd rdx, eax	      9345	syntax.c	FUNCTION_143	ELSE_2
0x40122e3	          0x4889d0	                            mov rax, rdx	      9345	syntax.c	FUNCTION_143	ELSE_2
0x40122e6	        0x48c1e003	                              shl rax, 3	      9345	syntax.c	FUNCTION_143	ELSE_2
0x40122ea	          0x4801d0	                            add rax, rdx	      9345	syntax.c	FUNCTION_143	ELSE_2
0x40122ed	          0x4801c0	                            add rax, rax	      9345	syntax.c	FUNCTION_143	ELSE_2
0x40122f0	          0x4801d0	                            add rax, rdx	      9345	syntax.c	FUNCTION_143	ELSE_2
0x40122f3	        0x48c1e003	                              shl rax, 3	      9345	syntax.c	FUNCTION_143	ELSE_2
0x40122f7	    0x482d98000000	                           sub rax, 0x98	      9345	syntax.c	FUNCTION_143	ELSE_2
0x40122fd	          0x4801c8	                            add rax, rcx	      9345	syntax.c	FUNCTION_143	ELSE_2
0x4012300	          0x8b4014	            mov eax, dword [rax + 0x14] 	      9345	syntax.c	FUNCTION_143	ELSE_2
0x4012303	          0x8945fc	                mov dword [rbp - 4], eax	      9345	syntax.c	FUNCTION_143	ELSE_2
0x4012306	          0x8b45fc	                mov eax, dword [rbp - 4]	      9347	syntax.c	FUNCTION_143	IF_4
0x4012309	          0x2345e8	             and eax, dword [rbp - 0x18]	      9347	syntax.c	FUNCTION_143	IF_4
0x401230c	            0x85c0	                           test eax, eax	      9347	syntax.c	FUNCTION_143	IF_4
0x401230e	            0x7407	                            je 0x4012317	      9347	syntax.c	FUNCTION_143	IF_4
0x4012310	      0xb800000000	                              mov eax, 0	      9348	syntax.c	FUNCTION_143	IF_4
0x4012315	            0xeb05	                           jmp 0x401231c	      9348	syntax.c	FUNCTION_143	IF_4
0x4012317	      0xb800000000	                              mov eax, 0	      9349	syntax.c	FUNCTION_143
0x401231c	              0x5d	                                 pop rbp	      9350	syntax.c	FUNCTION_143
0x401231d	              0xc3	                                     ret	      9350	syntax.c	FUNCTION_143
clear_syn_state	functions,0:IF,1:SWITCH,0:FOR,2:CALL,3:ELSE,1:WHILE,0:DO,0	56
0x40004f3	              0x55	                                push rbp	       694	syntax.c	FUNCTION_3
0x40004f4	          0x4889e5	                            mov rbp, rsp	       694	syntax.c	FUNCTION_3
0x40004f7	        0x4883ec20	                           sub rsp, 0x20	       694	syntax.c	FUNCTION_3
0x40004fb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       694	syntax.c	FUNCTION_3
0x40004ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       698	syntax.c	FUNCTION_3	IF_1
0x4000503	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	       698	syntax.c	FUNCTION_3	IF_1
0x4000509	          0x83f807	                              cmp eax, 7	       698	syntax.c	FUNCTION_3	IF_1
0x400050c	            0x7e5c	                           jle 0x400056a	       698	syntax.c	FUNCTION_3	IF_1
0x400050e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       700	syntax.c	FUNCTION_3	IF_1
0x4000512	        0x4883c010	                           add rax, 0x10	       700	syntax.c	FUNCTION_3	IF_1
0x4000516	        0x488945f8	                mov qword [rbp - 8], rax	       700	syntax.c	FUNCTION_3	IF_1
0x400051a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4000521	            0xeb2e	                           jmp 0x4000551	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4000523	        0x488b45f8	                mov rax, qword [rbp - 8]	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4000527	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x400052b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x400052e	          0x4863d0	                         movsxd rdx, eax	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4000531	          0x4889d0	                            mov rax, rdx	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4000534	          0x4801c0	                            add rax, rax	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4000537	          0x4801d0	                            add rax, rdx	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x400053a	        0x48c1e003	                              shl rax, 3	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x400053e	          0x4801c8	                            add rax, rcx	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4000541	        0x488b4010	            mov rax, qword [rax + 0x10] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4000545	          0x4889c7	                            mov rdi, rax	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4000548	      0xe800000000	                          call 0x400054d	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x400054d	        0x8345f401	                add dword [rbp - 0xc], 1	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4000551	        0x488b45f8	                mov rax, qword [rbp - 8]	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4000555	            0x8b00	                    mov eax, dword [rax]	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4000557	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400055a	            0x7fc7	                            jg 0x4000523	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400055c	        0x488b45f8	                mov rax, qword [rbp - 8]	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4000560	          0x4889c7	                            mov rdi, rax	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4000563	      0xe800000000	                          call 0x4000568	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4000568	            0xeb45	                           jmp 0x40005af	       710	syntax.c	FUNCTION_3
0x400056a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4000571	            0xeb2d	                           jmp 0x40005a0	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4000573	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4000577	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x400057a	          0x4863d0	                         movsxd rdx, eax	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x400057d	          0x4889d0	                            mov rax, rdx	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4000580	          0x4801c0	                            add rax, rax	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4000583	          0x4801d0	                            add rax, rdx	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4000586	        0x48c1e003	                              shl rax, 3	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x400058a	          0x4801c8	                            add rax, rcx	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x400058d	        0x4883c020	                           add rax, 0x20	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4000591	          0x488b00	                    mov rax, qword [rax]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4000594	          0x4889c7	                            mov rdi, rax	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4000597	      0xe800000000	                          call 0x400059c	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x400059c	        0x8345f401	                add dword [rbp - 0xc], 1	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x40005a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x40005a4	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x40005aa	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x40005ad	            0x7fc4	                            jg 0x4000573	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x40005af	              0x90	                                     nop	       710	syntax.c	FUNCTION_3
0x40005b0	              0xc9	                                   leave	       710	syntax.c	FUNCTION_3
0x40005b1	              0xc3	                                     ret	       710	syntax.c	FUNCTION_3
syn_remove_pattern	functions,0:IF,1:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	54
0x4006764	              0x55	                                push rbp	      3707	syntax.c	FUNCTION_52
0x4006765	          0x4889e5	                            mov rbp, rsp	      3707	syntax.c	FUNCTION_52
0x4006768	        0x4883ec20	                           sub rsp, 0x20	      3707	syntax.c	FUNCTION_52
0x400676c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3707	syntax.c	FUNCTION_52
0x4006770	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3707	syntax.c	FUNCTION_52
0x4006773	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3710	syntax.c	FUNCTION_52
0x4006777	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3710	syntax.c	FUNCTION_52
0x400677e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3710	syntax.c	FUNCTION_52
0x4006781	          0x4863d0	                         movsxd rdx, eax	      3710	syntax.c	FUNCTION_52
0x4006784	          0x4889d0	                            mov rax, rdx	      3710	syntax.c	FUNCTION_52
0x4006787	        0x48c1e002	                              shl rax, 2	      3710	syntax.c	FUNCTION_52
0x400678b	          0x4801d0	                            add rax, rdx	      3710	syntax.c	FUNCTION_52
0x400678e	        0x48c1e005	                              shl rax, 5	      3710	syntax.c	FUNCTION_52
0x4006792	          0x4801c8	                            add rax, rcx	      3710	syntax.c	FUNCTION_52
0x4006795	        0x488945f8	                mov qword [rbp - 8], rax	      3710	syntax.c	FUNCTION_52
0x4006799	        0x488b45f8	                mov rax, qword [rbp - 8]	      3712	syntax.c	FUNCTION_52	IF_1
0x400679d	          0x8b4024	            mov eax, dword [rax + 0x24] 	      3712	syntax.c	FUNCTION_52	IF_1
0x40067a0	      0x2500200000	                         and eax, 0x2000	      3712	syntax.c	FUNCTION_52	IF_1
0x40067a5	            0x85c0	                           test eax, eax	      3712	syntax.c	FUNCTION_52	IF_1
0x40067a7	            0x7417	                            je 0x40067c0	      3712	syntax.c	FUNCTION_52	IF_1
0x40067a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3713	syntax.c	FUNCTION_52	IF_1
0x40067ad	    0x8b800c030000	           mov eax, dword [rax + 0x30c] 	      3713	syntax.c	FUNCTION_52	IF_1
0x40067b3	          0x8d50ff	                      lea edx, [rax - 1]	      3713	syntax.c	FUNCTION_52	IF_1
0x40067b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3713	syntax.c	FUNCTION_52	IF_1
0x40067ba	    0x89900c030000	            mov dword [rax + 0x30c], edx	      3713	syntax.c	FUNCTION_52	IF_1
0x40067c0	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      3715	syntax.c	FUNCTION_52	CALL_1
0x40067c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3715	syntax.c	FUNCTION_52	CALL_1
0x40067c7	            0x89d6	                            mov esi, edx	      3715	syntax.c	FUNCTION_52	CALL_1
0x40067c9	          0x4889c7	                            mov rdi, rax	      3715	syntax.c	FUNCTION_52	CALL_1
0x40067cc	      0xe858000000	              call sym.syn_clear_pattern	      3715	syntax.c	FUNCTION_52	CALL_1
0x40067d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3716	syntax.c	FUNCTION_52	CALL_2
0x40067d5	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3716	syntax.c	FUNCTION_52	CALL_2
0x40067db	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      3716	syntax.c	FUNCTION_52	CALL_2
0x40067de	          0x83e801	                              sub eax, 1	      3716	syntax.c	FUNCTION_52	CALL_2
0x40067e1	          0x4863d0	                         movsxd rdx, eax	      3716	syntax.c	FUNCTION_52	CALL_2
0x40067e4	          0x4889d0	                            mov rax, rdx	      3716	syntax.c	FUNCTION_52	CALL_2
0x40067e7	        0x48c1e002	                              shl rax, 2	      3716	syntax.c	FUNCTION_52	CALL_2
0x40067eb	          0x4801d0	                            add rax, rdx	      3716	syntax.c	FUNCTION_52	CALL_2
0x40067ee	        0x48c1e005	                              shl rax, 5	      3716	syntax.c	FUNCTION_52	CALL_2
0x40067f2	          0x4889c2	                            mov rdx, rax	      3716	syntax.c	FUNCTION_52	CALL_2
0x40067f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3716	syntax.c	FUNCTION_52	CALL_2
0x40067f9	    0x488d88a00000	                   lea rcx, [rax + 0xa0]	      3716	syntax.c	FUNCTION_52	CALL_2
0x4006800	        0x488b45f8	                mov rax, qword [rbp - 8]	      3716	syntax.c	FUNCTION_52	CALL_2
0x4006804	          0x4889ce	                            mov rsi, rcx	      3716	syntax.c	FUNCTION_52	CALL_2
0x4006807	          0x4889c7	                            mov rdi, rax	      3716	syntax.c	FUNCTION_52	CALL_2
0x400680a	      0xe800000000	                          call 0x400680f	      3716	syntax.c	FUNCTION_52	CALL_2
0x400680f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3718	syntax.c	FUNCTION_52
0x4006813	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3718	syntax.c	FUNCTION_52
0x4006819	          0x8d50ff	                      lea edx, [rax - 1]	      3718	syntax.c	FUNCTION_52
0x400681c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3718	syntax.c	FUNCTION_52
0x4006820	    0x899060020000	            mov dword [rax + 0x260], edx	      3718	syntax.c	FUNCTION_52
0x4006826	              0x90	                                     nop	      3719	syntax.c	FUNCTION_52
0x4006827	              0xc9	                                   leave	      3719	syntax.c	FUNCTION_52
0x4006828	              0xc3	                                     ret	      3719	syntax.c	FUNCTION_52
syn_get_sub_char	functions,0:IF,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	5
0x400cc80	              0x55	                                push rbp	      6609	syntax.c	FUNCTION_104
0x400cc81	          0x4889e5	                            mov rbp, rsp	      6609	syntax.c	FUNCTION_104
0x400cc84	    0x8b0500000000	            mov eax, dword [0x0400cc8a] 	      6610	syntax.c	FUNCTION_104
0x400cc8a	              0x5d	                                 pop rbp	      6611	syntax.c	FUNCTION_104
0x400cc8b	              0xc3	                                     ret	      6611	syntax.c	FUNCTION_104
syn_list_header	functions,0:IF,8:SWITCH,0:FOR,0:CALL,7:ELSE,2:WHILE,0:DO,0	82
0x4012984	              0x55	                                push rbp	      9478	syntax.c	FUNCTION_146
0x4012985	          0x4889e5	                            mov rbp, rsp	      9478	syntax.c	FUNCTION_146
0x4012988	        0x4883ec20	                           sub rsp, 0x20	      9478	syntax.c	FUNCTION_146
0x401298c	          0x897dec	             mov dword [rbp - 0x14], edi	      9478	syntax.c	FUNCTION_146
0x401298f	          0x8975e8	             mov dword [rbp - 0x18], esi	      9478	syntax.c	FUNCTION_146
0x4012992	          0x8955e4	             mov dword [rbp - 0x1c], edx	      9478	syntax.c	FUNCTION_146
0x4012995	    0xc745f8130000	               mov dword [rbp - 8], 0x13	      9479	syntax.c	FUNCTION_146
0x401299c	    0xc745fc010000	                  mov dword [rbp - 4], 1	      9480	syntax.c	FUNCTION_146
0x40129a3	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9482	syntax.c	FUNCTION_146	IF_1
0x40129a7	            0x755c	                           jne 0x4012a05	      9482	syntax.c	FUNCTION_146	IF_1
0x40129a9	      0xbf0a000000	                            mov edi, 0xa	      9484	syntax.c	FUNCTION_146	IF_1	CALL_1
0x40129ae	      0xe800000000	                          call 0x40129b3	      9484	syntax.c	FUNCTION_146	IF_1	CALL_1
0x40129b3	    0x8b0500000000	            mov eax, dword [0x040129b9] 	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x40129b9	            0x85c0	                           test eax, eax	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x40129bb	            0x740a	                            je 0x40129c7	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x40129bd	      0xb801000000	                              mov eax, 1	      9486	syntax.c	FUNCTION_146	IF_1	IF_2
0x40129c2	      0xe9f1000000	                           jmp 0x4012ab8	      9486	syntax.c	FUNCTION_146	IF_1	IF_2
0x40129c7	    0x488b0d000000	            mov rcx, qword [0x040129ce] 	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129ce	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129d1	          0x4863d0	                         movsxd rdx, eax	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129d4	          0x4889d0	                            mov rax, rdx	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129d7	        0x48c1e003	                              shl rax, 3	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129db	          0x4801d0	                            add rax, rdx	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129de	          0x4801c0	                            add rax, rax	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129e1	          0x4801d0	                            add rax, rdx	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129e4	        0x48c1e003	                              shl rax, 3	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129e8	    0x482d98000000	                           sub rax, 0x98	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129ee	          0x4801c8	                            add rax, rcx	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129f1	          0x488b00	                    mov rax, qword [rax]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129f4	          0x4889c7	                            mov rdi, rax	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129f7	      0xe800000000	                          call 0x40129fc	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x40129fc	    0xc745f80f0000	                mov dword [rbp - 8], 0xf	      9488	syntax.c	FUNCTION_146	IF_1
0x4012a03	            0xeb4a	                           jmp 0x4012a4f	      9488	syntax.c	FUNCTION_146	IF_1
0x4012a05	    0x8b1500000000	            mov edx, dword [0x04012a0b] 	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x4012a0b	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x4012a0e	             0x1d0	                            add eax, edx	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x4012a10	          0x83c001	                              add eax, 1	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x4012a13	          0x4863d0	                         movsxd rdx, eax	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x4012a16	    0x488b05000000	            mov rax, qword [0x04012a1d] 	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x4012a1d	          0x4839c2	                            cmp rdx, rax	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x4012a20	            0x7c1b	                            jl 0x4012a3d	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x4012a22	      0xbf0a000000	                            mov edi, 0xa	      9492	syntax.c	FUNCTION_146	ELSE_1	IF_3	CALL_3
0x4012a27	      0xe800000000	                          call 0x4012a2c	      9492	syntax.c	FUNCTION_146	ELSE_1	IF_3	CALL_3
0x4012a2c	    0x8b0500000000	            mov eax, dword [0x04012a32] 	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x4012a32	            0x85c0	                           test eax, eax	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x4012a34	            0x7419	                            je 0x4012a4f	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x4012a36	      0xb801000000	                              mov eax, 1	      9494	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x4012a3b	            0xeb7b	                           jmp 0x4012ab8	      9494	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x4012a3d	    0x8b0500000000	            mov eax, dword [0x04012a43] 	      9498	syntax.c	FUNCTION_146	ELSE_2	IF_5
0x4012a43	          0x3b45f8	                cmp eax, dword [rbp - 8]	      9498	syntax.c	FUNCTION_146	ELSE_2	IF_5
0x4012a46	            0x7c07	                            jl 0x4012a4f	      9498	syntax.c	FUNCTION_146	ELSE_2	IF_5
0x4012a48	    0xc745fc000000	                  mov dword [rbp - 4], 0	      9499	syntax.c	FUNCTION_146	ELSE_2	IF_5
0x4012a4f	    0x8b0500000000	            mov eax, dword [0x04012a55] 	      9502	syntax.c	FUNCTION_146	IF_6
0x4012a55	          0x3b45f8	                cmp eax, dword [rbp - 8]	      9502	syntax.c	FUNCTION_146	IF_6
0x4012a58	            0x7c0c	                            jl 0x4012a66	      9502	syntax.c	FUNCTION_146	IF_6
0x4012a5a	    0x8b0500000000	            mov eax, dword [0x04012a60] 	      9503	syntax.c	FUNCTION_146	IF_6
0x4012a60	          0x83c001	                              add eax, 1	      9503	syntax.c	FUNCTION_146	IF_6
0x4012a63	          0x8945f8	                mov dword [rbp - 8], eax	      9503	syntax.c	FUNCTION_146	IF_6
0x4012a66	          0x8b45f8	                mov eax, dword [rbp - 8]	      9504	syntax.c	FUNCTION_146	IF_7
0x4012a69	          0x4863d0	                         movsxd rdx, eax	      9504	syntax.c	FUNCTION_146	IF_7
0x4012a6c	    0x488b05000000	            mov rax, qword [0x04012a73] 	      9504	syntax.c	FUNCTION_146	IF_7
0x4012a73	          0x4839c2	                            cmp rdx, rax	      9504	syntax.c	FUNCTION_146	IF_7
0x4012a76	            0x7c0d	                            jl 0x4012a85	      9504	syntax.c	FUNCTION_146	IF_7
0x4012a78	    0x488b05000000	            mov rax, qword [0x04012a7f] 	      9505	syntax.c	FUNCTION_146	IF_7
0x4012a7f	          0x83e801	                              sub eax, 1	      9505	syntax.c	FUNCTION_146	IF_7
0x4012a82	          0x8945f8	                mov dword [rbp - 8], eax	      9505	syntax.c	FUNCTION_146	IF_7
0x4012a85	          0x8b45f8	                mov eax, dword [rbp - 8]	      9507	syntax.c	FUNCTION_146	CALL_4
0x4012a88	            0x89c7	                            mov edi, eax	      9507	syntax.c	FUNCTION_146	CALL_4
0x4012a8a	      0xe800000000	                          call 0x4012a8f	      9507	syntax.c	FUNCTION_146	CALL_4
0x4012a8f	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9510	syntax.c	FUNCTION_146	IF_8
0x4012a93	            0x7520	                           jne 0x4012ab5	      9510	syntax.c	FUNCTION_146	IF_8
0x4012a95	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x4012a98	            0x89c7	                            mov edi, eax	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x4012a9a	      0xe800000000	                          call 0x4012a9f	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x4012a9f	            0x89c6	                            mov esi, eax	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x4012aa1	      0xbf00000000	                              mov edi, 0	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x4012aa6	      0xe800000000	                          call 0x4012aab	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x4012aab	      0xbf20000000	                           mov edi, 0x20	      9513	syntax.c	FUNCTION_146	IF_8	CALL_7
0x4012ab0	      0xe800000000	                          call 0x4012ab5	      9513	syntax.c	FUNCTION_146	IF_8	CALL_7
0x4012ab5	          0x8b45fc	                mov eax, dword [rbp - 4]	      9516	syntax.c	FUNCTION_146
0x4012ab8	              0xc9	                                   leave	      9517	syntax.c	FUNCTION_146
0x4012ab9	              0xc3	                                     ret	      9517	syntax.c	FUNCTION_146
clear_current_state	functions,0:IF,0:SWITCH,0:FOR,1:CALL,2:ELSE,0:WHILE,0:DO,0	28
0x40005b2	              0x55	                                push rbp	       717	syntax.c	FUNCTION_4
0x40005b3	          0x4889e5	                            mov rbp, rsp	       717	syntax.c	FUNCTION_4
0x40005b6	        0x4883ec10	                           sub rsp, 0x10	       717	syntax.c	FUNCTION_4
0x40005ba	    0x488b05000000	            mov rax, qword [0x040005c1] 	       721	syntax.c	FUNCTION_4
0x40005c1	        0x488945f8	                mov qword [rbp - 8], rax	       721	syntax.c	FUNCTION_4
0x40005c5	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       722	syntax.c	FUNCTION_4	FOR_1
0x40005cc	            0xeb31	                           jmp 0x40005ff	       722	syntax.c	FUNCTION_4	FOR_1
0x40005ce	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       723	syntax.c	FUNCTION_4	CALL_1
0x40005d1	          0x4863d0	                         movsxd rdx, eax	       723	syntax.c	FUNCTION_4	CALL_1
0x40005d4	          0x4889d0	                            mov rax, rdx	       723	syntax.c	FUNCTION_4	CALL_1
0x40005d7	        0x48c1e003	                              shl rax, 3	       723	syntax.c	FUNCTION_4	CALL_1
0x40005db	          0x4801d0	                            add rax, rdx	       723	syntax.c	FUNCTION_4	CALL_1
0x40005de	        0x48c1e004	                              shl rax, 4	       723	syntax.c	FUNCTION_4	CALL_1
0x40005e2	          0x4889c2	                            mov rdx, rax	       723	syntax.c	FUNCTION_4	CALL_1
0x40005e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       723	syntax.c	FUNCTION_4	CALL_1
0x40005e9	          0x4801d0	                            add rax, rdx	       723	syntax.c	FUNCTION_4	CALL_1
0x40005ec	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       723	syntax.c	FUNCTION_4	CALL_1
0x40005f3	          0x4889c7	                            mov rdi, rax	       723	syntax.c	FUNCTION_4	CALL_1
0x40005f6	      0xe800000000	                          call 0x40005fb	       723	syntax.c	FUNCTION_4	CALL_1
0x40005fb	        0x8345f401	                add dword [rbp - 0xc], 1	       722	syntax.c	FUNCTION_4	FOR_1
0x40005ff	    0x8b0500000000	            mov eax, dword [0x04000605] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4000605	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       722	syntax.c	FUNCTION_4	FOR_1
0x4000608	            0x7fc4	                            jg 0x40005ce	       722	syntax.c	FUNCTION_4	FOR_1
0x400060a	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x400060f	      0xe800000000	                          call 0x4000614	       724	syntax.c	FUNCTION_4	CALL_2
0x4000614	              0x90	                                     nop	       725	syntax.c	FUNCTION_4
0x4000615	              0xc9	                                   leave	       725	syntax.c	FUNCTION_4
0x4000616	              0xc3	                                     ret	       725	syntax.c	FUNCTION_4
syn_stack_equal	functions,0:IF,10:SWITCH,0:FOR,2:CALL,2:ELSE,1:WHILE,0:DO,0	190
0x40023bf	              0x55	                                push rbp	      1641	syntax.c	FUNCTION_21
0x40023c0	          0x4889e5	                            mov rbp, rsp	      1641	syntax.c	FUNCTION_21
0x40023c3	        0x4883ec30	                           sub rsp, 0x30	      1641	syntax.c	FUNCTION_21
0x40023c7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1641	syntax.c	FUNCTION_21
0x40023cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1647	syntax.c	FUNCTION_21	IF_1
0x40023cf	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      1647	syntax.c	FUNCTION_21	IF_1
0x40023d5	    0x8b0500000000	            mov eax, dword [0x040023db] 	      1647	syntax.c	FUNCTION_21	IF_1
0x40023db	            0x39c2	                            cmp edx, eax	      1647	syntax.c	FUNCTION_21	IF_1
0x40023dd	     0xf8597020000	                           jne 0x400267a	      1647	syntax.c	FUNCTION_21	IF_1
0x40023e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1648	syntax.c	FUNCTION_21	IF_1
0x40023e7	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	      1648	syntax.c	FUNCTION_21	IF_1
0x40023ee	    0x488b05000000	            mov rax, qword [0x040023f5] 	      1648	syntax.c	FUNCTION_21	IF_1
0x40023f5	          0x4839c2	                            cmp rdx, rax	      1648	syntax.c	FUNCTION_21	IF_1
0x40023f8	     0xf857c020000	                           jne 0x400267a	      1648	syntax.c	FUNCTION_21	IF_1
0x40023fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x4002402	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x4002408	          0x83f807	                              cmp eax, 7	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x400240b	            0x7e0e	                           jle 0x400241b	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x400240d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1652	syntax.c	FUNCTION_21	IF_1	IF_2
0x4002411	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1652	syntax.c	FUNCTION_21	IF_1	IF_2
0x4002415	        0x488945e8	             mov qword [rbp - 0x18], rax	      1652	syntax.c	FUNCTION_21	IF_1	IF_2
0x4002419	            0xeb0c	                           jmp 0x4002427	      1652	syntax.c	FUNCTION_21	IF_1	IF_2
0x400241b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1654	syntax.c	FUNCTION_21	IF_1	ELSE_1
0x400241f	        0x4883c010	                           add rax, 0x10	      1654	syntax.c	FUNCTION_21	IF_1	ELSE_1
0x4002423	        0x488945e8	             mov qword [rbp - 0x18], rax	      1654	syntax.c	FUNCTION_21	IF_1	ELSE_1
0x4002427	    0x8b0500000000	            mov eax, dword [0x0400242d] 	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x400242d	          0x8945e0	             mov dword [rbp - 0x20], eax	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x4002430	      0xe924020000	                           jmp 0x4002659	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x4002435	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002438	          0x4863d0	                         movsxd rdx, eax	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x400243b	          0x4889d0	                            mov rax, rdx	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x400243e	          0x4801c0	                            add rax, rax	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002441	          0x4801d0	                            add rax, rdx	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002444	        0x48c1e003	                              shl rax, 3	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002448	          0x4889c2	                            mov rdx, rax	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x400244b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x400244f	          0x4801d0	                            add rax, rdx	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002452	            0x8b08	                    mov ecx, dword [rax]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002454	    0x488b35000000	            mov rsi, qword [0x0400245b] 	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x400245b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x400245e	          0x4863d0	                         movsxd rdx, eax	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002461	          0x4889d0	                            mov rax, rdx	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002464	        0x48c1e003	                              shl rax, 3	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002468	          0x4801d0	                            add rax, rdx	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x400246b	        0x48c1e004	                              shl rax, 4	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x400246f	          0x4801f0	                            add rax, rsi	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002472	            0x8b00	                    mov eax, dword [rax]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002474	            0x39c1	                            cmp ecx, eax	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x4002476	     0xf85ed010000	                           jne 0x4002669	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x400247c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x400247f	          0x4863d0	                         movsxd rdx, eax	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x4002482	          0x4889d0	                            mov rax, rdx	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x4002485	          0x4801c0	                            add rax, rax	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x4002488	          0x4801d0	                            add rax, rdx	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x400248b	        0x48c1e003	                              shl rax, 3	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x400248f	          0x4889c2	                            mov rdx, rax	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x4002492	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x4002496	          0x4801d0	                            add rax, rdx	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x4002499	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x400249d	    0x488b35000000	            mov rsi, qword [0x040024a4] 	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024a4	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024a7	          0x4863d0	                         movsxd rdx, eax	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024aa	          0x4889d0	                            mov rax, rdx	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024ad	        0x48c1e003	                              shl rax, 3	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024b1	          0x4801d0	                            add rax, rdx	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024b4	        0x48c1e004	                              shl rax, 4	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024b8	          0x4801f0	                            add rax, rsi	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024bb	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024c2	          0x4839c1	                            cmp rcx, rax	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024c5	     0xf848e010000	                            je 0x4002659	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024cb	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024ce	          0x4863d0	                         movsxd rdx, eax	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024d1	          0x4889d0	                            mov rax, rdx	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024d4	          0x4801c0	                            add rax, rax	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024d7	          0x4801d0	                            add rax, rdx	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024da	        0x48c1e003	                              shl rax, 3	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024de	          0x4889c2	                            mov rdx, rax	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024e5	          0x4801d0	                            add rax, rdx	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024e8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024ec	        0x488945f0	             mov qword [rbp - 0x10], rax	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024f0	    0x488b0d000000	            mov rcx, qword [0x040024f7] 	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024f7	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024fa	          0x4863d0	                         movsxd rdx, eax	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40024fd	          0x4889d0	                            mov rax, rdx	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x4002500	        0x48c1e003	                              shl rax, 3	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x4002504	          0x4801d0	                            add rax, rdx	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x4002507	        0x48c1e004	                              shl rax, 4	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x400250b	          0x4801c8	                            add rax, rcx	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x400250e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x4002515	        0x488945f8	                mov qword [rbp - 8], rax	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x4002519	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x400251e	     0xf8449010000	                            je 0x400266d	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4002524	      0x48837df800	                  cmp qword [rbp - 8], 0	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4002529	     0xf843e010000	                            je 0x400266d	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x400252f	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x4002536	      0xe90b010000	                           jmp 0x4002646	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x400253b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x400253f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4002542	          0x4863d2	                         movsxd rdx, edx	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4002545	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x400254a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x400254e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4002551	          0x4863d2	                         movsxd rdx, edx	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4002554	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4002559	          0x4839c1	                            cmp rcx, rax	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x400255c	     0xf84e0000000	                            je 0x4002642	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4002562	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4002566	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4002569	          0x4863d2	                         movsxd rdx, edx	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x400256c	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4002571	          0x4885c0	                           test rax, rax	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4002574	     0xf84d9000000	                            je 0x4002653	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x400257a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x400257e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4002581	          0x4863d2	                         movsxd rdx, edx	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4002584	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4002589	          0x4885c0	                           test rax, rax	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x400258c	     0xf84c1000000	                            je 0x4002653	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4002592	    0x488b05000000	            mov rax, qword [0x04002599] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4002599	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025a0	    0x488b35000000	            mov rsi, qword [0x040025a7] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025a7	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025aa	          0x4863d0	                         movsxd rdx, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025ad	          0x4889d0	                            mov rax, rdx	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025b0	        0x48c1e003	                              shl rax, 3	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025b4	          0x4801d0	                            add rax, rdx	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025b7	        0x48c1e004	                              shl rax, 4	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025bb	          0x4801f0	                            add rax, rsi	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025be	            0x8b00	                    mov eax, dword [rax]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025c0	          0x4863d0	                         movsxd rdx, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025c3	          0x4889d0	                            mov rax, rdx	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025c6	        0x48c1e002	                              shl rax, 2	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025ca	          0x4801d0	                            add rax, rdx	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025cd	        0x48c1e005	                              shl rax, 5	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025d1	          0x4801c8	                            add rax, rcx	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025d4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025d7	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025d9	            0x7435	                            je 0x4002610	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40025db	        0x488b45f8	                mov rax, qword [rbp - 8]	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x40025df	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x40025e2	          0x4863d2	                         movsxd rdx, edx	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x40025e5	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x40025ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x40025ee	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x40025f1	          0x4863d2	                         movsxd rdx, edx	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x40025f4	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x40025f9	      0xbaffffff7f	                     mov edx, 0x7fffffff	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x40025fe	          0x4889ce	                            mov rsi, rcx	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x4002601	          0x4889c7	                            mov rdi, rax	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x4002604	      0xe800000000	                          call 0x4002609	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x4002609	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400260b	           0xf95c0	                                setne al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400260e	            0xeb2e	                           jmp 0x400263e	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4002610	        0x488b45f8	                mov rax, qword [rbp - 8]	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x4002614	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x4002617	          0x4863d2	                         movsxd rdx, edx	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x400261a	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x400261f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x4002623	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x4002626	          0x4863c9	                         movsxd rcx, ecx	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x4002629	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x400262e	          0x4889d6	                            mov rsi, rdx	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x4002631	          0x4889c7	                            mov rdi, rax	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x4002634	      0xe800000000	                          call 0x4002639	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x4002639	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400263b	           0xf95c0	                                setne al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400263e	            0x84c0	                             test al, al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4002640	            0x7510	                           jne 0x4002652	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4002642	        0x8345e401	               add dword [rbp - 0x1c], 1	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x4002646	        0x837de409	               cmp dword [rbp - 0x1c], 9	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x400264a	     0xf8eebfeffff	                           jle 0x400253b	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x4002650	            0xeb01	                           jmp 0x4002653	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x4002652	              0x90	                                     nop	      1688	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4002653	        0x837de40a	            cmp dword [rbp - 0x1c], 0xa 	      1691	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_9
0x4002657	            0x7513	                           jne 0x400266c	      1691	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_9
0x4002659	        0x836de001	               sub dword [rbp - 0x20], 1	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x400265d	        0x837de000	               cmp dword [rbp - 0x20], 0	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x4002661	     0xf89cefdffff	                           jns 0x4002435	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x4002667	            0xeb04	                           jmp 0x400266d	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x4002669	              0x90	                                     nop	      1660	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x400266a	            0xeb01	                           jmp 0x400266d	      1660	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x400266c	              0x90	                                     nop	      1692	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_9
0x400266d	        0x837de000	               cmp dword [rbp - 0x20], 0	      1695	syntax.c	FUNCTION_21	IF_1	IF_10
0x4002671	            0x7907	                           jns 0x400267a	      1695	syntax.c	FUNCTION_21	IF_1	IF_10
0x4002673	      0xb801000000	                              mov eax, 1	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
0x4002678	            0xeb05	                           jmp 0x400267f	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
0x400267a	      0xb800000000	                              mov eax, 0	      1698	syntax.c	FUNCTION_21
0x400267f	              0xc9	                                   leave	      1699	syntax.c	FUNCTION_21
0x4002680	              0xc3	                                     ret	      1699	syntax.c	FUNCTION_21
push_current_state	functions,0:IF,1:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	39
0x4004b2f	              0x55	                                push rbp	      2897	syntax.c	FUNCTION_35
0x4004b30	          0x4889e5	                            mov rbp, rsp	      2897	syntax.c	FUNCTION_35
0x4004b33	        0x4883ec10	                           sub rsp, 0x10	      2897	syntax.c	FUNCTION_35
0x4004b37	          0x897dfc	                mov dword [rbp - 4], edi	      2897	syntax.c	FUNCTION_35
0x4004b3a	      0xbe01000000	                              mov esi, 1	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4004b3f	      0xbf00000000	                              mov edi, 0	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4004b44	      0xe800000000	                          call 0x4004b49	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4004b49	            0x85c0	                           test eax, eax	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4004b4b	            0x7507	                           jne 0x4004b54	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4004b4d	      0xb800000000	                              mov eax, 0	      2899	syntax.c	FUNCTION_35	IF_1
0x4004b52	            0xeb6e	                           jmp 0x4004bc2	      2899	syntax.c	FUNCTION_35	IF_1
0x4004b54	    0x488b0d000000	            mov rcx, qword [0x04004b5b] 	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b5b	    0x8b0500000000	            mov eax, dword [0x04004b61] 	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b61	          0x4863d0	                         movsxd rdx, eax	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b64	          0x4889d0	                            mov rax, rdx	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b67	        0x48c1e003	                              shl rax, 3	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b6b	          0x4801d0	                            add rax, rdx	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b6e	        0x48c1e004	                              shl rax, 4	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b72	          0x4801c8	                            add rax, rcx	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b75	      0xba90000000	                           mov edx, 0x90	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b7a	      0xbe00000000	                              mov esi, 0	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b7f	          0x4889c7	                            mov rdi, rax	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b82	      0xe800000000	                          call 0x4004b87	      2900	syntax.c	FUNCTION_35	CALL_2
0x4004b87	    0x488b0d000000	            mov rcx, qword [0x04004b8e] 	      2901	syntax.c	FUNCTION_35
0x4004b8e	    0x8b0500000000	            mov eax, dword [0x04004b94] 	      2901	syntax.c	FUNCTION_35
0x4004b94	          0x4863d0	                         movsxd rdx, eax	      2901	syntax.c	FUNCTION_35
0x4004b97	          0x4889d0	                            mov rax, rdx	      2901	syntax.c	FUNCTION_35
0x4004b9a	        0x48c1e003	                              shl rax, 3	      2901	syntax.c	FUNCTION_35
0x4004b9e	          0x4801d0	                            add rax, rdx	      2901	syntax.c	FUNCTION_35
0x4004ba1	        0x48c1e004	                              shl rax, 4	      2901	syntax.c	FUNCTION_35
0x4004ba5	        0x488d1401	                    lea rdx, [rcx + rax]	      2901	syntax.c	FUNCTION_35
0x4004ba9	          0x8b45fc	                mov eax, dword [rbp - 4]	      2901	syntax.c	FUNCTION_35
0x4004bac	            0x8902	                    mov dword [rdx], eax	      2901	syntax.c	FUNCTION_35
0x4004bae	    0x8b0500000000	            mov eax, dword [0x04004bb4] 	      2902	syntax.c	FUNCTION_35
0x4004bb4	          0x83c001	                              add eax, 1	      2902	syntax.c	FUNCTION_35
0x4004bb7	    0x890500000000	            mov dword [0x04004bbd], eax 	      2902	syntax.c	FUNCTION_35
0x4004bbd	      0xb801000000	                              mov eax, 1	      2903	syntax.c	FUNCTION_35
0x4004bc2	              0xc9	                                   leave	      2904	syntax.c	FUNCTION_35
0x4004bc3	              0xc3	                                     ret	      2904	syntax.c	FUNCTION_35
syn_cmd_list	functions,0:IF,11:SWITCH,0:FOR,2:CALL,39:ELSE,7:WHILE,1:DO,0	226
0x4006ef4	              0x55	                                push rbp	      3935	syntax.c	FUNCTION_63
0x4006ef5	          0x4889e5	                            mov rbp, rsp	      3935	syntax.c	FUNCTION_63
0x4006ef8	        0x4883ec30	                           sub rsp, 0x30	      3935	syntax.c	FUNCTION_63
0x4006efc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3935	syntax.c	FUNCTION_63
0x4006f00	          0x8975d4	             mov dword [rbp - 0x2c], esi	      3935	syntax.c	FUNCTION_63
0x4006f03	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3936	syntax.c	FUNCTION_63
0x4006f07	          0x488b00	                    mov rax, qword [rax]	      3936	syntax.c	FUNCTION_63
0x4006f0a	        0x488945f0	             mov qword [rbp - 0x10], rax	      3936	syntax.c	FUNCTION_63
0x4006f0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3940	syntax.c	FUNCTION_63	CALL_1
0x4006f12	          0x4889c7	                            mov rdi, rax	      3940	syntax.c	FUNCTION_63	CALL_1
0x4006f15	      0xe800000000	                          call 0x4006f1a	      3940	syntax.c	FUNCTION_63	CALL_1
0x4006f1a	          0x4889c2	                            mov rdx, rax	      3940	syntax.c	FUNCTION_63	CALL_1
0x4006f1d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3940	syntax.c	FUNCTION_63	CALL_1
0x4006f21	        0x48895008	                mov qword [rax + 8], rdx	      3940	syntax.c	FUNCTION_63	CALL_1
0x4006f25	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3941	syntax.c	FUNCTION_63	IF_1
0x4006f29	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3941	syntax.c	FUNCTION_63	IF_1
0x4006f2c	            0x85c0	                           test eax, eax	      3941	syntax.c	FUNCTION_63	IF_1
0x4006f2e	     0xf852e030000	                           jne 0x4007262	      3941	syntax.c	FUNCTION_63	IF_1
0x4006f34	    0x488b05000000	            mov rax, qword [0x04006f3b] 	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x4006f3b	          0x4889c7	                            mov rdi, rax	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x4006f3e	      0xe800000000	                          call 0x4006f43	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x4006f43	            0x85c0	                           test eax, eax	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x4006f45	            0x7517	                           jne 0x4006f5e	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x4006f47	      0xbf00000000	                              mov edi, 0	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x4006f4c	      0xe800000000	                          call 0x4006f51	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x4006f51	          0x4889c7	                            mov rdi, rax	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x4006f54	      0xe800000000	                          call 0x4006f59	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x4006f59	      0xe905030000	                           jmp 0x4007263	      3947	syntax.c	FUNCTION_63	IF_2
0x4006f5e	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3950	syntax.c	FUNCTION_63	IF_3
0x4006f62	     0xf843c010000	                            je 0x40070a4	      3950	syntax.c	FUNCTION_63	IF_3
0x4006f68	    0x488b05000000	            mov rax, qword [0x04006f6f] 	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x4006f6f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x4006f73	    0x8b809c020000	           mov eax, dword [rax + 0x29c] 	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x4006f79	          0x83e001	                              and eax, 1	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x4006f7c	            0x85c0	                           test eax, eax	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x4006f7e	            0x7421	                            je 0x4006fa1	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x4006f80	      0xbf00000000	                              mov edi, 0	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x4006f85	      0xe800000000	                          call 0x4006f8a	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x4006f8a	          0x4889c7	                            mov rdi, rax	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x4006f8d	      0xe800000000	                          call 0x4006f92	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x4006f92	      0xe8ce020000	                  call sym.syn_lines_msg	      3955	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_7
0x4006f97	      0xe8c5030000	                  call sym.syn_match_msg	      3956	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_8
0x4006f9c	      0xe9c2020000	                           jmp 0x4007263	      3957	syntax.c	FUNCTION_63	IF_3	IF_4
0x4006fa1	    0x488b05000000	            mov rax, qword [0x04006fa8] 	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x4006fa8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x4006fac	    0x8b809c020000	           mov eax, dword [rax + 0x29c] 	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x4006fb2	          0x83e002	                              and eax, 2	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x4006fb5	            0x85c0	                           test eax, eax	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x4006fb7	            0x7576	                           jne 0x400702f	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x4006fb9	    0x488b05000000	            mov rax, qword [0x04006fc0] 	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x4006fc0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x4006fc4	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x4006fcb	          0x4885c0	                           test rax, rax	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x4006fce	            0x7517	                           jne 0x4006fe7	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x4006fd0	      0xbf00000000	                              mov edi, 0	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x4006fd5	      0xe800000000	                          call 0x4006fda	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x4006fda	          0x4889c7	                            mov rdi, rax	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x4006fdd	      0xe800000000	                          call 0x4006fe2	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x4006fe2	      0xe97c020000	                           jmp 0x4007263	      3970	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x4006fe7	      0xbf00000000	                              mov edi, 0	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x4006fec	      0xe800000000	                          call 0x4006ff1	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x4006ff1	          0x4889c7	                            mov rdi, rax	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x4006ff4	      0xe800000000	                          call 0x4006ff9	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x4006ff9	    0x488b05000000	            mov rax, qword [0x04007000] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x4007000	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x4007004	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x400700b	          0x4889c7	                            mov rdi, rax	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x400700e	      0xe800000000	                          call 0x4007013	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x4007013	      0xbf00000000	                              mov edi, 0	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x4007018	      0xe800000000	                          call 0x400701d	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400701d	          0x4889c7	                            mov rdi, rax	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x4007020	      0xe800000000	                          call 0x4007025	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x4007025	      0xe837030000	                  call sym.syn_match_msg	      3968	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_16
0x400702a	      0xe934020000	                           jmp 0x4007263	      3970	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x400702f	      0xbf00000000	                              mov edi, 0	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x4007034	      0xe800000000	                          call 0x4007039	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x4007039	          0x4889c7	                            mov rdi, rax	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400703c	      0xe800000000	                          call 0x4007041	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x4007041	    0x488b05000000	            mov rax, qword [0x04007048] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x4007048	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x400704c	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x4007053	          0x4885c0	                           test rax, rax	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x4007056	            0x7f2e	                            jg 0x4007086	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x4007058	    0x488b05000000	            mov rax, qword [0x0400705f] 	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x400705f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x4007063	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x400706a	          0x4885c0	                           test rax, rax	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x400706d	            0x7f17	                            jg 0x4007086	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x400706f	    0x488b05000000	            mov rax, qword [0x04007076] 	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x4007076	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x400707a	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x4007081	          0x4885c0	                           test rax, rax	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x4007084	            0x7e30	                           jle 0x40070b6	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x4007086	      0xbf00000000	                              mov edi, 0	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400708b	      0xe800000000	                          call 0x4007090	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x4007090	          0x4889c7	                            mov rdi, rax	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x4007093	      0xe800000000	                          call 0x4007098	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x4007098	      0xe8c8010000	                  call sym.syn_lines_msg	      3978	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_21
0x400709d	      0xe8bf020000	                  call sym.syn_match_msg	      3979	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_22
0x40070a2	            0xeb12	                           jmp 0x40070b6	      3979	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_22
0x40070a4	      0xbf00000000	                              mov edi, 0	      3983	syntax.c	FUNCTION_63	CALL_24
0x40070a9	      0xe800000000	                          call 0x40070ae	      3983	syntax.c	FUNCTION_63	CALL_24
0x40070ae	          0x4889c7	                            mov rdi, rax	      3983	syntax.c	FUNCTION_63	CALL_24
0x40070b1	      0xe800000000	                          call 0x40070b6	      3983	syntax.c	FUNCTION_63	CALL_24
0x40070b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x40070ba	           0xfb600	                   movzx eax, byte [rax]	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x40070bd	           0xfb6c0	                           movzx eax, al	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x40070c0	            0x89c7	                            mov edi, eax	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x40070c2	      0xe800000000	                          call 0x40070c7	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x40070c7	            0x85c0	                           test eax, eax	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x40070c9	     0xf8457010000	                            je 0x4007226	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x40070cf	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40070d6	            0xeb18	                           jmp 0x40070f0	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40070d8	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x40070db	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x40070de	      0xba00000000	                              mov edx, 0	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x40070e3	            0x89ce	                            mov esi, ecx	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x40070e5	            0x89c7	                            mov edi, eax	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x40070e7	      0xe8d1020000	                   call sym.syn_list_one	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x40070ec	        0x8345ec01	               add dword [rbp - 0x14], 1	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40070f0	    0x8b0500000000	            mov eax, dword [0x040070f6] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40070f6	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40070f9	            0x7c0a	                            jl 0x4007105	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40070fb	    0x8b0500000000	            mov eax, dword [0x04007101] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x4007101	            0x85c0	                           test eax, eax	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x4007103	            0x74d3	                            je 0x40070d8	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x4007105	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400710c	            0xeb0e	                           jmp 0x400711c	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400710e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3992	syntax.c	FUNCTION_63	IF_8	CALL_27
0x4007111	            0x89c7	                            mov edi, eax	      3992	syntax.c	FUNCTION_63	IF_8	CALL_27
0x4007113	      0xe868080000	               call sym.syn_list_cluster	      3992	syntax.c	FUNCTION_63	IF_8	CALL_27
0x4007118	        0x8345ec01	               add dword [rbp - 0x14], 1	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400711c	    0x488b05000000	            mov rax, qword [0x04007123] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4007123	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4007127	    0x8b8078020000	           mov eax, dword [rax + 0x278] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400712d	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4007130	     0xf8e13010000	                           jle 0x4007249	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4007136	    0x8b0500000000	            mov eax, dword [0x0400713c] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400713c	            0x85c0	                           test eax, eax	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400713e	            0x74ce	                            je 0x400710e	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4007140	      0xe904010000	                           jmp 0x4007249	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4007145	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x4007149	          0x4889c7	                            mov rdi, rax	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x400714c	      0xe800000000	                          call 0x4007151	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x4007151	        0x488945f8	                mov qword [rbp - 8], rax	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x4007155	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x4007159	           0xfb600	                   movzx eax, byte [rax]	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x400715c	            0x3c40	                            cmp al, 0x40	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x400715e	            0x755d	                           jne 0x40071bd	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x4007160	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x4007164	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x4007168	          0x4829c2	                            sub rdx, rax	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x400716b	          0x4889d0	                            mov rax, rdx	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x400716e	          0x83e801	                              sub eax, 1	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x4007171	            0x89c2	                            mov edx, eax	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x4007173	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x4007177	        0x4883c001	                              add rax, 1	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x400717b	            0x89d6	                            mov esi, edx	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x400717d	          0x4889c7	                            mov rdi, rax	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x4007180	      0xe875380000	               call sym.syn_scl_namen2id	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x4007185	          0x8945ec	             mov dword [rbp - 0x14], eax	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x4007188	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4005	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	IF_10
0x400718c	            0x751e	                           jne 0x40071ac	      4005	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	IF_10
0x400718e	      0xbf00000000	                              mov edi, 0	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x4007193	      0xe800000000	                          call 0x4007198	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x4007198	          0x4889c2	                            mov rdx, rax	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400719b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400719f	          0x4889c6	                            mov rsi, rax	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x40071a2	          0x4889d7	                            mov rdi, rdx	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x40071a5	      0xe800000000	                          call 0x40071aa	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x40071aa	            0xeb6a	                           jmp 0x4007216	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x40071ac	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x40071af	      0x2dd8590000	                         sub eax, 0x59d8	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x40071b4	            0x89c7	                            mov edi, eax	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x40071b6	      0xe8c5070000	               call sym.syn_list_cluster	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x40071bb	            0xeb59	                           jmp 0x4007216	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x40071bd	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x40071c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x40071c5	          0x4829c2	                            sub rdx, rax	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x40071c8	          0x4889d0	                            mov rax, rdx	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x40071cb	            0x89c2	                            mov edx, eax	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x40071cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x40071d1	            0x89d6	                            mov esi, edx	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x40071d3	          0x4889c7	                            mov rdi, rax	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x40071d6	      0xe800000000	                          call 0x40071db	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x40071db	          0x8945ec	             mov dword [rbp - 0x14], eax	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x40071de	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x40071e2	            0x751e	                           jne 0x4007202	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x40071e4	      0xbf00000000	                              mov edi, 0	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40071e9	      0xe800000000	                          call 0x40071ee	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40071ee	          0x4889c2	                            mov rdx, rax	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40071f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40071f5	          0x4889c6	                            mov rsi, rax	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40071f8	          0x4889d7	                            mov rdi, rdx	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40071fb	      0xe800000000	                          call 0x4007200	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x4007200	            0xeb14	                           jmp 0x4007216	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x4007202	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x4007205	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x4007208	      0xba01000000	                              mov edx, 1	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400720d	            0x89ce	                            mov esi, ecx	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400720f	            0x89c7	                            mov edi, eax	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x4007211	      0xe8a7010000	                   call sym.syn_list_one	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x4007216	        0x488b45f8	                mov rax, qword [rbp - 8]	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x400721a	          0x4889c7	                            mov rdi, rax	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x400721d	      0xe800000000	                          call 0x4007222	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x4007222	        0x488945f0	             mov qword [rbp - 0x10], rax	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x4007226	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400722a	           0xfb600	                   movzx eax, byte [rax]	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400722d	           0xfb6c0	                           movzx eax, al	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x4007230	            0x89c7	                            mov edi, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x4007232	      0xe800000000	                          call 0x4007237	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x4007237	            0x85c0	                           test eax, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x4007239	            0x750e	                           jne 0x4007249	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400723b	    0x8b0500000000	            mov eax, dword [0x04007241] 	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x4007241	            0x85c0	                           test eax, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x4007243	     0xf84fcfeffff	                            je 0x4007145	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x4007249	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4021	syntax.c	FUNCTION_63	CALL_39
0x400724d	          0x4889c7	                            mov rdi, rax	      4021	syntax.c	FUNCTION_63	CALL_39
0x4007250	      0xe800000000	                          call 0x4007255	      4021	syntax.c	FUNCTION_63	CALL_39
0x4007255	          0x4889c2	                            mov rdx, rax	      4021	syntax.c	FUNCTION_63	CALL_39
0x4007258	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4021	syntax.c	FUNCTION_63	CALL_39
0x400725c	        0x48895008	                mov qword [rax + 8], rdx	      4021	syntax.c	FUNCTION_63	CALL_39
0x4007260	            0xeb01	                           jmp 0x4007263	      4021	syntax.c	FUNCTION_63	CALL_39
0x4007262	              0x90	                                     nop	      3942	syntax.c	FUNCTION_63	IF_1
0x4007263	              0xc9	                                   leave	      4022	syntax.c	FUNCTION_63
0x4007264	              0xc3	                                     ret	      4022	syntax.c	FUNCTION_63
highlight_gui_started	functions,0:IF,1:SWITCH,0:FOR,1:CALL,3:ELSE,0:WHILE,0:DO,0	25
0x40134fd	              0x55	                                push rbp	      9905	syntax.c	FUNCTION_160
0x40134fe	          0x4889e5	                            mov rbp, rsp	      9905	syntax.c	FUNCTION_160
0x4013501	        0x4883ec10	                           sub rsp, 0x10	      9905	syntax.c	FUNCTION_160
0x4013505	    0x8b0500000000	            mov eax, dword [0x0401350b] 	      9909	syntax.c	FUNCTION_160	IF_1
0x401350b	            0x85c0	                           test eax, eax	      9909	syntax.c	FUNCTION_160	IF_1
0x401350d	            0x750a	                           jne 0x4013519	      9909	syntax.c	FUNCTION_160	IF_1
0x401350f	    0x8b0500000000	            mov eax, dword [0x04013515] 	      9909	syntax.c	FUNCTION_160	IF_1
0x4013515	            0x85c0	                           test eax, eax	      9909	syntax.c	FUNCTION_160	IF_1
0x4013517	            0x7405	                            je 0x401351e	      9909	syntax.c	FUNCTION_160	IF_1
0x4013519	      0xe800000000	                          call 0x401351e	      9910	syntax.c	FUNCTION_160	CALL_1
0x401351e	    0xc745fc000000	                  mov dword [rbp - 4], 0	      9912	syntax.c	FUNCTION_160	FOR_1
0x4013525	            0xeb18	                           jmp 0x401353f	      9912	syntax.c	FUNCTION_160	FOR_1
0x4013527	          0x8b45fc	                mov eax, dword [rbp - 4]	      9913	syntax.c	FUNCTION_160	CALL_2
0x401352a	      0xba00000000	                              mov edx, 0	      9913	syntax.c	FUNCTION_160	CALL_2
0x401352f	      0xbe00000000	                              mov esi, 0	      9913	syntax.c	FUNCTION_160	CALL_2
0x4013534	            0x89c7	                            mov edi, eax	      9913	syntax.c	FUNCTION_160	CALL_2
0x4013536	      0xe817000000	               call sym.gui_do_one_color	      9913	syntax.c	FUNCTION_160	CALL_2
0x401353b	        0x8345fc01	                  add dword [rbp - 4], 1	      9912	syntax.c	FUNCTION_160	FOR_1
0x401353f	    0x8b0500000000	            mov eax, dword [0x04013545] 	      9912	syntax.c	FUNCTION_160	FOR_1
0x4013545	          0x3b45fc	                cmp eax, dword [rbp - 4]	      9912	syntax.c	FUNCTION_160	FOR_1
0x4013548	            0x7fdd	                            jg 0x4013527	      9912	syntax.c	FUNCTION_160	FOR_1
0x401354a	      0xe800000000	                          call 0x401354f	      9915	syntax.c	FUNCTION_160	CALL_3
0x401354f	              0x90	                                     nop	      9916	syntax.c	FUNCTION_160
0x4013550	              0xc9	                                   leave	      9916	syntax.c	FUNCTION_160
0x4013551	              0xc3	                                     ret	      9916	syntax.c	FUNCTION_160
syn_update_ends	functions,0:IF,7:SWITCH,0:FOR,3:CALL,2:ELSE,0:WHILE,0:DO,0	146
0x4000f50	              0x55	                                push rbp	      1087	syntax.c	FUNCTION_10
0x4000f51	          0x4889e5	                            mov rbp, rsp	      1087	syntax.c	FUNCTION_10
0x4000f54	        0x4883ec20	                           sub rsp, 0x20	      1087	syntax.c	FUNCTION_10
0x4000f58	          0x897dec	             mov dword [rbp - 0x14], edi	      1087	syntax.c	FUNCTION_10
0x4000f5b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1092	syntax.c	FUNCTION_10	IF_1
0x4000f5f	     0xf84e2000000	                            je 0x4001047	      1092	syntax.c	FUNCTION_10	IF_1
0x4000f65	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4000f6c	      0xe9c7000000	                           jmp 0x4001038	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4000f71	    0x488b0d000000	            mov rcx, qword [0x04000f78] 	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4000f78	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4000f7b	          0x4863d0	                         movsxd rdx, eax	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4000f7e	          0x4889d0	                            mov rax, rdx	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4000f81	        0x48c1e003	                              shl rax, 3	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4000f85	          0x4801d0	                            add rax, rdx	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4000f88	        0x48c1e004	                              shl rax, 4	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4000f8c	          0x4801c8	                            add rax, rcx	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4000f8f	        0x488945f8	                mov qword [rbp - 8], rax	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4000f93	        0x488b45f8	                mov rax, qword [rbp - 8]	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000f97	            0x8b00	                    mov eax, dword [rax]	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000f99	            0x85c0	                           test eax, eax	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000f9b	     0xf8893000000	                            js 0x4001034	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fa1	    0x488b05000000	            mov rax, qword [0x04000fa8] 	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fa8	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000faf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fb3	            0x8b00	                    mov eax, dword [rax]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fb5	          0x4863d0	                         movsxd rdx, eax	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fb8	          0x4889d0	                            mov rax, rdx	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fbb	        0x48c1e002	                              shl rax, 2	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fbf	          0x4801d0	                            add rax, rdx	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fc2	        0x48c1e005	                              shl rax, 5	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fc6	          0x4801c8	                            add rax, rcx	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fc9	           0xfb600	                   movzx eax, byte [rax]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fcc	            0x3c01	                               cmp al, 1	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fce	            0x7564	                           jne 0x4001034	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fd0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fd4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fd8	    0x488b05000000	            mov rax, qword [0x04000fdf] 	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fdf	          0x4839c2	                            cmp rdx, rax	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fe2	            0x7d50	                           jge 0x4001034	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fe4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fe8	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fec	          0x80cc80	                             or ah, 0x80	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000fef	          0x4889c2	                            mov rdx, rax	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000ff2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000ff6	        0x48895068	             mov qword [rax + 0x68], rdx	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000ffa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1105	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4000ffe	    0x48c740180000	               mov qword [rax + 0x18], 0	      1105	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001006	        0x488b45f8	                mov rax, qword [rbp - 8]	      1106	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x400100a	    0xc74020000000	               mov dword [rax + 0x20], 0	      1106	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001011	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001015	        0x488b45f8	                mov rax, qword [rbp - 8]	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001019	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x400101d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001021	        0x48894138	             mov qword [rcx + 0x38], rax	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001025	        0x48895140	             mov qword [rcx + 0x40], rdx	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001029	        0x488b45f8	                mov rax, qword [rbp - 8]	      1108	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x400102d	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1108	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4001034	        0x8345f001	               add dword [rbp - 0x10], 1	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4001038	    0x8b0500000000	            mov eax, dword [0x0400103e] 	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x400103e	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4001041	     0xf8f2affffff	                            jg 0x4000f71	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4001047	    0x8b0500000000	            mov eax, dword [0x0400104d] 	      1122	syntax.c	FUNCTION_10
0x400104d	          0x83e801	                              sub eax, 1	      1122	syntax.c	FUNCTION_10
0x4001050	          0x8945f0	             mov dword [rbp - 0x10], eax	      1122	syntax.c	FUNCTION_10
0x4001053	    0x8b0500000000	            mov eax, dword [0x04001059] 	      1123	syntax.c	FUNCTION_10	IF_3
0x4001059	            0x85c0	                           test eax, eax	      1123	syntax.c	FUNCTION_10	IF_3
0x400105b	            0x7840	                            js 0x400109d	      1123	syntax.c	FUNCTION_10	IF_3
0x400105d	            0xeb30	                           jmp 0x400108f	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x400105f	    0x488b0d000000	            mov rcx, qword [0x04001066] 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4001066	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4001069	          0x4863d0	                         movsxd rdx, eax	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x400106c	          0x4889d0	                            mov rax, rdx	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x400106f	        0x48c1e003	                              shl rax, 3	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4001073	          0x4801d0	                            add rax, rdx	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4001076	        0x48c1e004	                              shl rax, 4	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x400107a	          0x4801c8	                            add rax, rcx	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x400107d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4001081	      0x2500400000	                         and eax, 0x4000	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4001086	          0x4885c0	                           test rax, rax	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4001089	            0x7511	                           jne 0x400109c	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x400108b	        0x836df001	               sub dword [rbp - 0x10], 1	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x400108f	    0x8b0500000000	            mov eax, dword [0x04001095] 	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4001095	          0x3945f0	            cmp dword [rbp - 0x10], eax 	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4001098	            0x7fc5	                            jg 0x400105f	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x400109a	            0xeb01	                           jmp 0x400109d	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x400109c	              0x90	                                     nop	      1126	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x400109d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1128	syntax.c	FUNCTION_10
0x40010a4	      0xe9c1000000	                           jmp 0x400116a	      1129	syntax.c	FUNCTION_10	FOR_3
0x40010a9	    0x488b0d000000	            mov rcx, qword [0x040010b0] 	      1131	syntax.c	FUNCTION_10	FOR_3
0x40010b0	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1131	syntax.c	FUNCTION_10	FOR_3
0x40010b3	          0x4863d0	                         movsxd rdx, eax	      1131	syntax.c	FUNCTION_10	FOR_3
0x40010b6	          0x4889d0	                            mov rax, rdx	      1131	syntax.c	FUNCTION_10	FOR_3
0x40010b9	        0x48c1e003	                              shl rax, 3	      1131	syntax.c	FUNCTION_10	FOR_3
0x40010bd	          0x4801d0	                            add rax, rdx	      1131	syntax.c	FUNCTION_10	FOR_3
0x40010c0	        0x48c1e004	                              shl rax, 4	      1131	syntax.c	FUNCTION_10	FOR_3
0x40010c4	          0x4801c8	                            add rax, rcx	      1131	syntax.c	FUNCTION_10	FOR_3
0x40010c7	        0x488945f8	                mov qword [rbp - 8], rax	      1131	syntax.c	FUNCTION_10	FOR_3
0x40010cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010cf	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010d3	      0x2500040000	                          and eax, 0x400	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010d8	          0x4885c0	                           test rax, rax	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010db	            0x7520	                           jne 0x40010fd	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010dd	        0x837df400	                cmp dword [rbp - 0xc], 0	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010e1	            0x7406	                            je 0x40010e9	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010e3	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010e7	            0x7414	                            je 0x40010fd	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010e9	    0x8b0500000000	            mov eax, dword [0x040010ef] 	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010ef	          0x83e801	                              sub eax, 1	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010f2	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010f5	            0x756f	                           jne 0x4001166	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010f7	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010fb	            0x7469	                            je 0x4001166	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40010fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1136	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4001101	    0xc74030000000	               mov dword [rax + 0x30], 0	      1136	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4001108	    0x488b15000000	            mov rdx, qword [0x0400110f] 	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x400110f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4001113	        0x48895028	             mov qword [rax + 0x28], rdx	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4001117	        0x488b45f8	                mov rax, qword [rbp - 8]	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x400111b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x400111f	      0x2500800000	                         and eax, 0x8000	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4001124	          0x4885c0	                           test rax, rax	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4001127	            0x751e	                           jne 0x4001147	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4001129	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x400112d	           0xf94c0	                                 sete al	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4001130	           0xfb6d0	                           movzx edx, al	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4001133	    0x8b0d00000000	            mov ecx, dword [0x04001139] 	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4001139	        0x488b45f8	                mov rax, qword [rbp - 8]	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x400113d	            0x89ce	                            mov esi, ecx	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x400113f	          0x4889c7	                            mov rdi, rax	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4001142	      0xe834380000	                  call sym.update_si_end	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4001147	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x400114b	            0x7519	                           jne 0x4001166	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x400114d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4001151	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4001155	      0x2500040000	                          and eax, 0x400	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x400115a	          0x4885c0	                           test rax, rax	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x400115d	            0x7407	                            je 0x4001166	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x400115f	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      1143	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4001166	        0x8345f001	               add dword [rbp - 0x10], 1	      1129	syntax.c	FUNCTION_10	FOR_3
0x400116a	    0x8b0500000000	            mov eax, dword [0x04001170] 	      1129	syntax.c	FUNCTION_10	FOR_3
0x4001170	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1129	syntax.c	FUNCTION_10	FOR_3
0x4001173	     0xf8f30ffffff	                            jg 0x40010a9	      1129	syntax.c	FUNCTION_10	FOR_3
0x4001179	      0xe803360000	                  call sym.check_keepend	      1146	syntax.c	FUNCTION_10	CALL_2
0x400117e	              0x90	                                     nop	      1147	syntax.c	FUNCTION_10
0x400117f	              0xc9	                                   leave	      1147	syntax.c	FUNCTION_10
0x4001180	              0xc3	                                     ret	      1147	syntax.c	FUNCTION_10
syntax_end_parsing	functions,0:IF,2:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	29
0x4002681	              0x55	                                push rbp	      1713	syntax.c	FUNCTION_22
0x4002682	          0x4889e5	                            mov rbp, rsp	      1713	syntax.c	FUNCTION_22
0x4002685	        0x4883ec18	                           sub rsp, 0x18	      1713	syntax.c	FUNCTION_22
0x4002689	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1713	syntax.c	FUNCTION_22
0x400268d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1716	syntax.c	FUNCTION_22	CALL_1
0x4002691	          0x4889c7	                            mov rdi, rax	      1716	syntax.c	FUNCTION_22	CALL_1
0x4002694	      0xe84ff4ffff	           call sym.syn_stack_find_entry	      1716	syntax.c	FUNCTION_22	CALL_1
0x4002699	        0x488945f8	                mov qword [rbp - 8], rax	      1716	syntax.c	FUNCTION_22	CALL_1
0x400269d	      0x48837df800	                  cmp qword [rbp - 8], 0	      1717	syntax.c	FUNCTION_22	IF_1
0x40026a2	            0x7419	                            je 0x40026bd	      1717	syntax.c	FUNCTION_22	IF_1
0x40026a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1717	syntax.c	FUNCTION_22	IF_1
0x40026a8	        0x488b4008	                mov rax, qword [rax + 8]	      1717	syntax.c	FUNCTION_22	IF_1
0x40026ac	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1717	syntax.c	FUNCTION_22	IF_1
0x40026b0	            0x7d0b	                           jge 0x40026bd	      1717	syntax.c	FUNCTION_22	IF_1
0x40026b2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1718	syntax.c	FUNCTION_22	IF_1
0x40026b6	          0x488b00	                    mov rax, qword [rax]	      1718	syntax.c	FUNCTION_22	IF_1
0x40026b9	        0x488945f8	                mov qword [rbp - 8], rax	      1718	syntax.c	FUNCTION_22	IF_1
0x40026bd	      0x48837df800	                  cmp qword [rbp - 8], 0	      1720	syntax.c	FUNCTION_22	IF_2
0x40026c2	            0x741f	                            je 0x40026e3	      1720	syntax.c	FUNCTION_22	IF_2
0x40026c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1720	syntax.c	FUNCTION_22	IF_2
0x40026c8	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      1720	syntax.c	FUNCTION_22	IF_2
0x40026cf	          0x4885c0	                           test rax, rax	      1720	syntax.c	FUNCTION_22	IF_2
0x40026d2	            0x740f	                            je 0x40026e3	      1720	syntax.c	FUNCTION_22	IF_2
0x40026d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1721	syntax.c	FUNCTION_22	IF_2
0x40026d8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1721	syntax.c	FUNCTION_22	IF_2
0x40026dc	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      1721	syntax.c	FUNCTION_22	IF_2
0x40026e3	              0x90	                                     nop	      1722	syntax.c	FUNCTION_22
0x40026e4	              0xc9	                                   leave	      1722	syntax.c	FUNCTION_22
0x40026e5	              0xc3	                                     ret	      1722	syntax.c	FUNCTION_22
set_context_in_highlight_cmd	functions,0:IF,8:SWITCH,0:FOR,0:CALL,11:ELSE,0:WHILE,0:DO,0	119
0x4014661	              0x55	                                push rbp	     10228	syntax.c	FUNCTION_164
0x4014662	          0x4889e5	                            mov rbp, rsp	     10228	syntax.c	FUNCTION_164
0x4014665	        0x4883ec20	                           sub rsp, 0x20	     10228	syntax.c	FUNCTION_164
0x4014669	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10228	syntax.c	FUNCTION_164
0x401466d	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10228	syntax.c	FUNCTION_164
0x4014671	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10232	syntax.c	FUNCTION_164
0x4014675	    0xc7000d000000	                    mov dword [rax], 0xd	     10232	syntax.c	FUNCTION_164
0x401467b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10233	syntax.c	FUNCTION_164
0x401467f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10233	syntax.c	FUNCTION_164
0x4014683	        0x48895008	                mov qword [rax + 8], rdx	     10233	syntax.c	FUNCTION_164
0x4014687	    0xc70500000000	               mov dword [0x04014691], 2	     10234	syntax.c	FUNCTION_164
0x4014691	    0xc70500000000	               mov dword [0x0401469b], 1	     10235	syntax.c	FUNCTION_164
0x401469b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10238	syntax.c	FUNCTION_164	IF_1
0x401469f	           0xfb600	                   movzx eax, byte [rax]	     10238	syntax.c	FUNCTION_164	IF_1
0x40146a2	            0x84c0	                             test al, al	     10238	syntax.c	FUNCTION_164	IF_1
0x40146a4	     0xf8475010000	                            je 0x401481f	     10238	syntax.c	FUNCTION_164	IF_1
0x40146aa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x40146ae	          0x4889c7	                            mov rdi, rax	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x40146b1	      0xe800000000	                          call 0x40146b6	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x40146b6	        0x488945f8	                mov qword [rbp - 8], rax	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x40146ba	        0x488b45f8	                mov rax, qword [rbp - 8]	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x40146be	           0xfb600	                   movzx eax, byte [rax]	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x40146c1	            0x84c0	                             test al, al	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x40146c3	     0xf8456010000	                            je 0x401481f	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x40146c9	    0xc70500000000	               mov dword [0x040146d3], 0	     10243	syntax.c	FUNCTION_164	IF_1	IF_2
0x40146d3	        0x488b55f8	                mov rdx, qword [rbp - 8]	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40146d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40146db	          0x4829c2	                            sub rdx, rax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40146de	          0x4889d0	                            mov rax, rdx	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40146e1	          0x4889c2	                            mov rdx, rax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40146e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40146e8	          0x4889c6	                            mov rsi, rax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40146eb	      0xbf00000000	                              mov edi, 0	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40146f0	      0xe800000000	                          call 0x40146f5	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40146f5	            0x85c0	                           test eax, eax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40146f7	            0x752c	                           jne 0x4014725	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40146f9	        0x488b45f8	                mov rax, qword [rbp - 8]	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x40146fd	          0x4889c7	                            mov rdi, rax	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x4014700	      0xe800000000	                          call 0x4014705	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x4014705	        0x488945e0	             mov qword [rbp - 0x20], rax	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x4014709	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10247	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3
0x401470d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10247	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3
0x4014711	        0x48895008	                mov qword [rax + 8], rdx	     10247	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3
0x4014715	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x4014719	          0x4889c7	                            mov rdi, rax	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x401471c	      0xe800000000	                          call 0x4014721	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x4014721	        0x488945f8	                mov qword [rbp - 8], rax	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x4014725	        0x488b45f8	                mov rax, qword [rbp - 8]	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x4014729	           0xfb600	                   movzx eax, byte [rax]	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x401472c	            0x84c0	                             test al, al	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x401472e	     0xf84eb000000	                            je 0x401481f	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x4014734	    0xc70500000000	               mov dword [0x0401473e], 0	     10252	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x401473e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x4014742	        0x4883c001	                              add rax, 1	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x4014746	           0xfb600	                   movzx eax, byte [rax]	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x4014749	            0x3c69	                            cmp al, 0x69	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x401474b	            0x7510	                           jne 0x401475d	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x401474d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x4014751	           0xfb600	                   movzx eax, byte [rax]	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x4014754	            0x3c4e	                            cmp al, 0x4e	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x4014756	            0x7505	                           jne 0x401475d	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x4014758	      0xe8c5000000	                 call sym.highlight_list	     10254	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	CALL_5
0x401475d	        0x488b55f8	                mov rdx, qword [rbp - 8]	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x4014761	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x4014765	          0x4829c2	                            sub rdx, rax	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x4014768	          0x4889d0	                            mov rax, rdx	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x401476b	          0x4889c2	                            mov rdx, rax	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x401476e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x4014772	          0x4889c6	                            mov rsi, rax	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x4014775	      0xbf00000000	                              mov edi, 0	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x401477a	      0xe800000000	                          call 0x401477f	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x401477f	            0x85c0	                           test eax, eax	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x4014781	            0x7426	                            je 0x40147a9	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x4014783	        0x488b55f8	                mov rdx, qword [rbp - 8]	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x4014787	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x401478b	          0x4829c2	                            sub rdx, rax	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x401478e	          0x4889d0	                            mov rax, rdx	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x4014791	          0x4889c2	                            mov rdx, rax	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x4014794	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x4014798	          0x4889c6	                            mov rsi, rax	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x401479b	      0xbf00000000	                              mov edi, 0	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40147a0	      0xe800000000	                          call 0x40147a5	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40147a5	            0x85c0	                           test eax, eax	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40147a7	            0x7561	                           jne 0x401480a	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40147a9	        0x488b45f8	                mov rax, qword [rbp - 8]	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x40147ad	          0x4889c7	                            mov rdi, rax	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x40147b0	      0xe800000000	                          call 0x40147b5	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x40147b5	          0x4889c2	                            mov rdx, rax	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x40147b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x40147bc	        0x48895008	                mov qword [rax + 8], rdx	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x40147c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x40147c4	        0x488b4008	                mov rax, qword [rax + 8]	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x40147c8	          0x4889c7	                            mov rdi, rax	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x40147cb	      0xe800000000	                          call 0x40147d0	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x40147d0	        0x488945f8	                mov qword [rbp - 8], rax	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x40147d4	        0x488b45f8	                mov rax, qword [rbp - 8]	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x40147d8	           0xfb600	                   movzx eax, byte [rax]	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x40147db	            0x84c0	                             test al, al	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x40147dd	            0x742b	                            je 0x401480a	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x40147df	        0x488b45f8	                mov rax, qword [rbp - 8]	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x40147e3	          0x4889c7	                            mov rdi, rax	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x40147e6	      0xe800000000	                          call 0x40147eb	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x40147eb	          0x4889c2	                            mov rdx, rax	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x40147ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x40147f2	        0x48895008	                mov qword [rax + 8], rdx	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x40147f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x40147fa	        0x488b4008	                mov rax, qword [rax + 8]	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x40147fe	          0x4889c7	                            mov rdi, rax	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x4014801	      0xe800000000	                          call 0x4014806	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x4014806	        0x488945f8	                mov qword [rbp - 8], rax	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x401480a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x401480e	           0xfb600	                   movzx eax, byte [rax]	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x4014811	            0x84c0	                             test al, al	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x4014813	            0x740a	                            je 0x401481f	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x4014815	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10267	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x4014819	    0xc70000000000	                      mov dword [rax], 0	     10267	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x401481f	              0x90	                                     nop	     10271	syntax.c	FUNCTION_164
0x4014820	              0xc9	                                   leave	     10271	syntax.c	FUNCTION_164
0x4014821	              0xc3	                                     ret	     10271	syntax.c	FUNCTION_164
syn_compare_stub	functions,0:IF,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	27
0x400a5e1	              0x55	                                push rbp	      5398	syntax.c	FUNCTION_82
0x400a5e2	          0x4889e5	                            mov rbp, rsp	      5398	syntax.c	FUNCTION_82
0x400a5e5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5398	syntax.c	FUNCTION_82
0x400a5e9	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5398	syntax.c	FUNCTION_82
0x400a5ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5399	syntax.c	FUNCTION_82
0x400a5f1	        0x488945f0	             mov qword [rbp - 0x10], rax	      5399	syntax.c	FUNCTION_82
0x400a5f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5400	syntax.c	FUNCTION_82
0x400a5f9	        0x488945f8	                mov qword [rbp - 8], rax	      5400	syntax.c	FUNCTION_82
0x400a5fd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5402	syntax.c	FUNCTION_82
0x400a601	           0xfb710	                   movzx edx, word [rax]	      5402	syntax.c	FUNCTION_82
0x400a604	        0x488b45f8	                mov rax, qword [rbp - 8]	      5402	syntax.c	FUNCTION_82
0x400a608	           0xfb700	                   movzx eax, word [rax]	      5402	syntax.c	FUNCTION_82
0x400a60b	          0x6639c2	                              cmp dx, ax	      5402	syntax.c	FUNCTION_82
0x400a60e	            0x7f21	                            jg 0x400a631	      5402	syntax.c	FUNCTION_82
0x400a610	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5402	syntax.c	FUNCTION_82
0x400a614	           0xfb710	                   movzx edx, word [rax]	      5402	syntax.c	FUNCTION_82
0x400a617	        0x488b45f8	                mov rax, qword [rbp - 8]	      5402	syntax.c	FUNCTION_82
0x400a61b	           0xfb700	                   movzx eax, word [rax]	      5402	syntax.c	FUNCTION_82
0x400a61e	          0x6639c2	                              cmp dx, ax	      5402	syntax.c	FUNCTION_82
0x400a621	            0x7d07	                           jge 0x400a62a	      5402	syntax.c	FUNCTION_82
0x400a623	      0xb8ffffffff	                     mov eax, 0xffffffff	      5402	syntax.c	FUNCTION_82
0x400a628	            0xeb0c	                           jmp 0x400a636	      5402	syntax.c	FUNCTION_82
0x400a62a	      0xb800000000	                              mov eax, 0	      5402	syntax.c	FUNCTION_82
0x400a62f	            0xeb05	                           jmp 0x400a636	      5402	syntax.c	FUNCTION_82
0x400a631	      0xb801000000	                              mov eax, 1	      5402	syntax.c	FUNCTION_82
0x400a636	              0x5d	                                 pop rbp	      5403	syntax.c	FUNCTION_82
0x400a637	              0xc3	                                     ret	      5403	syntax.c	FUNCTION_82
syn_cmd_keyword	functions,0:IF,14:SWITCH,0:FOR,3:CALL,26:ELSE,3:WHILE,1:DO,0	273
0x400907b	              0x55	                                push rbp	      4894	syntax.c	FUNCTION_79
0x400907c	          0x4889e5	                            mov rbp, rsp	      4894	syntax.c	FUNCTION_79
0x400907f	              0x53	                                push rbx	      4894	syntax.c	FUNCTION_79
0x4009080	    0x4881ec980000	                           sub rsp, 0x98	      4894	syntax.c	FUNCTION_79
0x4009087	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      4894	syntax.c	FUNCTION_79
0x400908e	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      4894	syntax.c	FUNCTION_79
0x4009094	    0x64488b042528	                mov rax, qword fs:[0x28]	      4894	syntax.c	FUNCTION_79
0x400909d	        0x488945e8	             mov qword [rbp - 0x18], rax	      4894	syntax.c	FUNCTION_79
0x40090a1	            0x31c0	                            xor eax, eax	      4894	syntax.c	FUNCTION_79
0x40090a3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4895	syntax.c	FUNCTION_79
0x40090aa	          0x488b00	                    mov rax, qword [rax]	      4895	syntax.c	FUNCTION_79
0x40090ad	        0x488945a8	             mov qword [rbp - 0x58], rax	      4895	syntax.c	FUNCTION_79
0x40090b1	    0x48c745900000	               mov qword [rbp - 0x70], 0	      4899	syntax.c	FUNCTION_79
0x40090b9	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	      4904	syntax.c	FUNCTION_79
0x40090c3	        0x488d5580	                   lea rdx, [rbp - 0x80]	      4906	syntax.c	FUNCTION_79	CALL_1
0x40090c7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4906	syntax.c	FUNCTION_79	CALL_1
0x40090cb	          0x4889d6	                            mov rsi, rdx	      4906	syntax.c	FUNCTION_79	CALL_1
0x40090ce	          0x4889c7	                            mov rdi, rax	      4906	syntax.c	FUNCTION_79	CALL_1
0x40090d1	      0xe854f5ffff	                 call sym.get_group_name	      4906	syntax.c	FUNCTION_79	CALL_1
0x40090d6	        0x48894588	             mov qword [rbp - 0x78], rax	      4906	syntax.c	FUNCTION_79	CALL_1
0x40090da	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4908	syntax.c	FUNCTION_79	IF_1
0x40090df	     0xf846b030000	                            je 0x4009450	      4908	syntax.c	FUNCTION_79	IF_1
0x40090e5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x40090ec	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x40090ef	            0x85c0	                           test eax, eax	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x40090f1	            0x740c	                            je 0x40090ff	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x40090f3	    0xc78574ffffff	     mov dword [rbp - 0x8c], 0xffffffff 	      4911	syntax.c	FUNCTION_79	IF_1	IF_2
0x40090fd	            0xeb27	                           jmp 0x4009126	      4911	syntax.c	FUNCTION_79	IF_1	IF_2
0x40090ff	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4009103	          0x4889c2	                            mov rdx, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4009106	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400910a	          0x4829c2	                            sub rdx, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400910d	          0x4889d0	                            mov rax, rdx	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4009110	            0x89c2	                            mov edx, eax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4009112	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4009116	            0x89d6	                            mov esi, edx	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4009118	          0x4889c7	                            mov rdi, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400911b	      0xe800000000	                          call 0x4009120	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4009120	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4009126	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x400912d	            0x741a	                            je 0x4009149	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x400912f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x4009133	          0x4889c7	                            mov rdi, rax	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x4009136	      0xe800000000	                          call 0x400913b	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x400913b	          0x83c001	                              add eax, 1	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x400913e	            0x89c7	                            mov edi, eax	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x4009140	      0xe800000000	                          call 0x4009145	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x4009145	        0x48894590	             mov qword [rbp - 0x70], rax	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x4009149	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      4917	syntax.c	FUNCTION_79	IF_1	IF_4
0x400914e	     0xf84fc020000	                            je 0x4009450	      4917	syntax.c	FUNCTION_79	IF_1	IF_4
0x4009154	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      4919	syntax.c	FUNCTION_79	IF_1	IF_4
0x400915b	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      4920	syntax.c	FUNCTION_79	IF_1	IF_4
0x4009162	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      4921	syntax.c	FUNCTION_79	IF_1	IF_4
0x400916a	        0xc645c000	                mov byte [rbp - 0x40], 0	      4922	syntax.c	FUNCTION_79	IF_1	IF_4
0x400916e	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4923	syntax.c	FUNCTION_79	IF_1	IF_4
0x4009176	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      4924	syntax.c	FUNCTION_79	IF_1	IF_4
0x400917e	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      4931	syntax.c	FUNCTION_79	IF_1	IF_4
0x4009188	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4932	syntax.c	FUNCTION_79	IF_1	IF_4
0x400918c	        0x48894598	             mov qword [rbp - 0x68], rax	      4932	syntax.c	FUNCTION_79	IF_1	IF_4
0x4009190	      0xe9ce000000	                           jmp 0x4009263	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4009195	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x400919c	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x400919f	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40091a6	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40091aa	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40091ae	          0x4889c7	                            mov rdi, rax	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40091b1	      0xe8daf4ffff	                call sym.get_syn_options	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40091b6	        0x48894588	             mov qword [rbp - 0x78], rax	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x40091ba	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40091bf	     0xf84be000000	                            je 0x4009283	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40091c5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40091c9	           0xfb600	                   movzx eax, byte [rax]	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40091cc	           0xfb6c0	                           movzx eax, al	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40091cf	            0x89c7	                            mov edi, eax	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40091d1	      0xe800000000	                          call 0x40091d6	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40091d6	            0x85c0	                           test eax, eax	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40091d8	     0xf85a5000000	                           jne 0x4009283	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x40091de	            0xeb3c	                           jmp 0x400921c	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x40091e0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40091e4	           0xfb600	                   movzx eax, byte [rax]	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40091e7	            0x3c5c	                            cmp al, 0x5c	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40091e9	            0x7514	                           jne 0x40091ff	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40091eb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40091ef	        0x4883c001	                              add rax, 1	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40091f3	           0xfb600	                   movzx eax, byte [rax]	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40091f6	            0x84c0	                             test al, al	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40091f8	            0x7405	                            je 0x40091ff	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40091fa	      0x4883458801	               add qword [rbp - 0x78], 1	      4943	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40091ff	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x4009203	        0x488d5001	                      lea rdx, [rax + 1]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x4009207	        0x48895598	             mov qword [rbp - 0x68], rdx	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x400920b	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x400920f	        0x488d4a01	                      lea rcx, [rdx + 1]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x4009213	        0x48894d88	             mov qword [rbp - 0x78], rcx	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x4009217	           0xfb612	                   movzx edx, byte [rdx]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x400921a	            0x8810	                      mov byte [rax], dl	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x400921c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4009220	           0xfb600	                   movzx eax, byte [rax]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4009223	            0x84c0	                             test al, al	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4009225	            0x7416	                            je 0x400923d	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4009227	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400922b	           0xfb600	                   movzx eax, byte [rax]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400922e	            0x3c20	                            cmp al, 0x20	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4009230	            0x740b	                            je 0x400923d	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4009232	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4009236	           0xfb600	                   movzx eax, byte [rax]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4009239	            0x3c09	                               cmp al, 9	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400923b	            0x75a3	                           jne 0x40091e0	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400923d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x4009241	        0x488d5001	                      lea rdx, [rax + 1]	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x4009245	        0x48895598	             mov qword [rbp - 0x68], rdx	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x4009249	          0xc60000	                       mov byte [rax], 0	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x400924c	    0x838578ffffff	               add dword [rbp - 0x88], 1	      4947	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x4009253	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4009257	          0x4889c7	                            mov rdi, rax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400925a	      0xe800000000	                          call 0x400925f	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400925f	        0x48894588	             mov qword [rbp - 0x78], rax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4009263	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4009268	            0x7419	                            je 0x4009283	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400926a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400926e	           0xfb600	                   movzx eax, byte [rax]	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4009271	           0xfb6c0	                           movzx eax, al	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4009274	            0x89c7	                            mov edi, eax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4009276	      0xe800000000	                          call 0x400927b	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400927b	            0x85c0	                           test eax, eax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400927d	     0xf8412ffffff	                            je 0x4009195	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4009283	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x400928a	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x400928d	            0x85c0	                           test eax, eax	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x400928f	     0xf8597010000	                           jne 0x400942c	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x4009295	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x4009299	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x400929f	          0x4889d6	                            mov rsi, rdx	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x40092a2	            0x89c7	                            mov edi, eax	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x40092a4	      0xe834faffff	              call sym.syn_incl_toplevel	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x40092a9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40092ad	        0x488945a0	             mov qword [rbp - 0x60], rax	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40092b1	      0xe962010000	                           jmp 0x4009418	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40092b6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x40092ba	      0xbe5b000000	                           mov esi, 0x5b	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x40092bf	          0x4889c7	                            mov rdi, rax	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x40092c2	      0xe800000000	                          call 0x40092c7	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x40092c7	        0x48894598	             mov qword [rbp - 0x68], rax	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x40092cb	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x40092d0	            0x7407	                            je 0x40092d9	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x40092d2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4963	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x40092d6	          0xc60000	                       mov byte [rax], 0	      4963	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x40092d9	    0x448b8570ffff	             mov r8d, dword [rbp - 0x90]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40092e0	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40092e4	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40092e8	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40092eb	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40092f1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40092f5	          0x4589c1	                            mov r9d, r8d	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40092f8	          0x4989f8	                             mov r8, rdi	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40092fb	          0x4889c7	                            mov rdi, rax	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x40092fe	      0xe8cef0ffff	                    call sym.add_keyword	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x4009303	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x4009308	     0xf84f5000000	                            je 0x4009403	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x400930e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4009312	        0x4883c001	                              add rax, 1	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4009316	           0xfb600	                   movzx eax, byte [rax]	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4009319	            0x84c0	                             test al, al	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x400931b	            0x7521	                           jne 0x400933e	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x400931d	      0xbf00000000	                              mov edi, 0	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4009322	      0xe800000000	                          call 0x4009327	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4009327	          0x4889c2	                            mov rdx, rax	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x400932a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x400932e	          0x4889c6	                            mov rsi, rax	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4009331	          0x4889d7	                            mov rdi, rdx	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4009334	      0xe800000000	                          call 0x4009339	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4009339	      0xe9ee000000	                           jmp 0x400942c	      4972	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x400933e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x4009342	        0x4883c001	                              add rax, 1	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x4009346	           0xfb600	                   movzx eax, byte [rax]	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x4009349	            0x3c5d	                            cmp al, 0x5d	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x400934b	            0x7549	                           jne 0x4009396	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x400934d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4009351	        0x4883c002	                              add rax, 2	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4009355	           0xfb600	                   movzx eax, byte [rax]	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4009358	            0x84c0	                             test al, al	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x400935a	            0x742c	                            je 0x4009388	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x400935c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4009360	        0x488d5802	                      lea rbx, [rax + 2]	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4009364	      0xbf00000000	                              mov edi, 0	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4009369	      0xe800000000	                          call 0x400936e	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x400936e	          0x4889c1	                            mov rcx, rax	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4009371	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4009375	          0x4889da	                            mov rdx, rbx	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4009378	          0x4889c6	                            mov rsi, rax	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x400937b	          0x4889cf	                            mov rdi, rcx	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x400937e	      0xe800000000	                          call 0x4009383	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4009383	      0xe9a4000000	                           jmp 0x400942c	      4980	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4009388	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x400938c	        0x4883c001	                              add rax, 1	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x4009390	        0x488945a0	             mov qword [rbp - 0x60], rax	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x4009394	            0xeb6e	                           jmp 0x4009404	      4983	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x4009396	    0x8b0500000000	            mov eax, dword [0x0400939c] 	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x400939c	            0x85c0	                           test eax, eax	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x400939e	            0x744b	                            je 0x40093eb	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40093a0	    0x488b05000000	            mov rax, qword [0x040093a7] 	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40093a7	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40093ab	        0x4883c201	                              add rdx, 1	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40093af	          0x4889d7	                            mov rdi, rdx	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40093b2	            0xffd0	                                call rax	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40093b4	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40093ba	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x40093c0	          0x4863d0	                         movsxd rdx, eax	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x40093c3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x40093c7	        0x488d4801	                      lea rcx, [rax + 1]	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x40093cb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x40093cf	          0x4889ce	                            mov rsi, rcx	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x40093d2	          0x4889c7	                            mov rdi, rax	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x40093d5	      0xe800000000	                          call 0x40093da	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x40093da	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40093e0	            0x4898	                                    cdqe	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40093e2	        0x48014598	            add qword [rbp - 0x68], rax 	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40093e6	      0xe9e0feffff	                           jmp 0x40092cb	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40093eb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4996	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x40093ef	         0xfb65001	               movzx edx, byte [rax + 1]	      4996	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x40093f3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4996	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x40093f7	            0x8810	                      mov byte [rax], dl	      4996	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x40093f9	      0x4883459801	               add qword [rbp - 0x68], 1	      4997	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x40093fe	      0xe9c8feffff	                           jmp 0x40092cb	      4999	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3
0x4009403	              0x90	                                     nop	      4968	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x4009404	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4009408	          0x4889c7	                            mov rdi, rax	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400940b	      0xe800000000	                          call 0x4009410	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4009410	        0x4883c001	                              add rax, 1	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4009414	        0x480145a0	            add qword [rbp - 0x60], rax 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4009418	    0x83ad78ffffff	               sub dword [rbp - 0x88], 1	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400941f	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4009426	     0xf898afeffff	                           jns 0x40092b6	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400942c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x4009430	          0x4889c7	                            mov rdi, rax	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x4009433	      0xe800000000	                          call 0x4009438	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x4009438	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x400943c	          0x4889c7	                            mov rdi, rax	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x400943f	      0xe800000000	                          call 0x4009444	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x4009444	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x4009448	          0x4889c7	                            mov rdi, rax	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x400944b	      0xe800000000	                          call 0x4009450	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x4009450	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5009	syntax.c	FUNCTION_79	IF_14
0x4009455	            0x741c	                            je 0x4009473	      5009	syntax.c	FUNCTION_79	IF_14
0x4009457	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5010	syntax.c	FUNCTION_79	CALL_22
0x400945b	          0x4889c7	                            mov rdi, rax	      5010	syntax.c	FUNCTION_79	CALL_22
0x400945e	      0xe800000000	                          call 0x4009463	      5010	syntax.c	FUNCTION_79	CALL_22
0x4009463	          0x4889c2	                            mov rdx, rax	      5010	syntax.c	FUNCTION_79	CALL_22
0x4009466	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5010	syntax.c	FUNCTION_79	CALL_22
0x400946d	        0x48895008	                mov qword [rax + 8], rdx	      5010	syntax.c	FUNCTION_79	CALL_22
0x4009471	            0xeb1c	                           jmp 0x400948f	      5010	syntax.c	FUNCTION_79	CALL_22
0x4009473	      0xbf00000000	                              mov edi, 0	      5012	syntax.c	FUNCTION_79	CALL_24
0x4009478	      0xe800000000	                          call 0x400947d	      5012	syntax.c	FUNCTION_79	CALL_24
0x400947d	          0x4889c2	                            mov rdx, rax	      5012	syntax.c	FUNCTION_79	CALL_24
0x4009480	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5012	syntax.c	FUNCTION_79	CALL_24
0x4009484	          0x4889c6	                            mov rsi, rax	      5012	syntax.c	FUNCTION_79	CALL_24
0x4009487	          0x4889d7	                            mov rdi, rdx	      5012	syntax.c	FUNCTION_79	CALL_24
0x400948a	      0xe800000000	                          call 0x400948f	      5012	syntax.c	FUNCTION_79	CALL_24
0x400948f	      0xbf23000000	                           mov edi, 0x23	      5014	syntax.c	FUNCTION_79	CALL_25
0x4009494	      0xe800000000	                          call 0x4009499	      5014	syntax.c	FUNCTION_79	CALL_25
0x4009499	    0x488b05000000	            mov rax, qword [0x040094a0] 	      5015	syntax.c	FUNCTION_79	CALL_26
0x40094a0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5015	syntax.c	FUNCTION_79	CALL_26
0x40094a4	          0x4889c7	                            mov rdi, rax	      5015	syntax.c	FUNCTION_79	CALL_26
0x40094a7	      0xe800000000	                          call 0x40094ac	      5015	syntax.c	FUNCTION_79	CALL_26
0x40094ac	              0x90	                                     nop	      5016	syntax.c	FUNCTION_79
0x40094ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5016	syntax.c	FUNCTION_79
0x40094b1	    0x644833042528	                xor rax, qword fs:[0x28]	      5016	syntax.c	FUNCTION_79
0x40094ba	            0x7405	                            je 0x40094c1	      5016	syntax.c	FUNCTION_79
0x40094bc	      0xe800000000	                          call 0x40094c1	      5016	syntax.c	FUNCTION_79
0x40094c1	    0x4881c4980000	                           add rsp, 0x98	      5016	syntax.c	FUNCTION_79
0x40094c8	              0x5b	                                 pop rbx	      5016	syntax.c	FUNCTION_79
0x40094c9	              0x5d	                                 pop rbp	      5016	syntax.c	FUNCTION_79
0x40094ca	              0xc3	                                     ret	      5016	syntax.c	FUNCTION_79
hl_has_settings	functions,0:IF,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	142
0x4010152	              0x55	                                push rbp	      8339	syntax.c	FUNCTION_119
0x4010153	          0x4889e5	                            mov rbp, rsp	      8339	syntax.c	FUNCTION_119
0x4010156	          0x897dfc	                mov dword [rbp - 4], edi	      8339	syntax.c	FUNCTION_119
0x4010159	          0x8975f8	                mov dword [rbp - 8], esi	      8339	syntax.c	FUNCTION_119
0x401015c	    0x488b0d000000	            mov rcx, qword [0x04010163] 	      8340	syntax.c	FUNCTION_119
0x4010163	          0x8b45fc	                mov eax, dword [rbp - 4]	      8340	syntax.c	FUNCTION_119
0x4010166	          0x4863d0	                         movsxd rdx, eax	      8340	syntax.c	FUNCTION_119
0x4010169	          0x4889d0	                            mov rax, rdx	      8340	syntax.c	FUNCTION_119
0x401016c	        0x48c1e003	                              shl rax, 3	      8340	syntax.c	FUNCTION_119
0x4010170	          0x4801d0	                            add rax, rdx	      8340	syntax.c	FUNCTION_119
0x4010173	          0x4801c0	                            add rax, rax	      8340	syntax.c	FUNCTION_119
0x4010176	          0x4801d0	                            add rax, rdx	      8340	syntax.c	FUNCTION_119
0x4010179	        0x48c1e003	                              shl rax, 3	      8340	syntax.c	FUNCTION_119
0x401017d	          0x4801c8	                            add rax, rcx	      8340	syntax.c	FUNCTION_119
0x4010180	          0x8b4028	            mov eax, dword [rax + 0x28] 	      8340	syntax.c	FUNCTION_119
0x4010183	            0x85c0	                           test eax, eax	      8351	syntax.c	FUNCTION_119
0x4010185	     0xf85b2010000	                           jne 0x401033d	      8351	syntax.c	FUNCTION_119
0x401018b	    0x488b0d000000	            mov rcx, qword [0x04010192] 	      8341	syntax.c	FUNCTION_119
0x4010192	          0x8b45fc	                mov eax, dword [rbp - 4]	      8341	syntax.c	FUNCTION_119
0x4010195	          0x4863d0	                         movsxd rdx, eax	      8341	syntax.c	FUNCTION_119
0x4010198	          0x4889d0	                            mov rax, rdx	      8341	syntax.c	FUNCTION_119
0x401019b	        0x48c1e003	                              shl rax, 3	      8341	syntax.c	FUNCTION_119
0x401019f	          0x4801d0	                            add rax, rdx	      8341	syntax.c	FUNCTION_119
0x40101a2	          0x4801c0	                            add rax, rax	      8341	syntax.c	FUNCTION_119
0x40101a5	          0x4801d0	                            add rax, rdx	      8341	syntax.c	FUNCTION_119
0x40101a8	        0x48c1e003	                              shl rax, 3	      8341	syntax.c	FUNCTION_119
0x40101ac	          0x4801c8	                            add rax, rcx	      8341	syntax.c	FUNCTION_119
0x40101af	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      8341	syntax.c	FUNCTION_119
0x40101b2	            0x85c0	                           test eax, eax	      8341	syntax.c	FUNCTION_119
0x40101b4	     0xf8583010000	                           jne 0x401033d	      8341	syntax.c	FUNCTION_119
0x40101ba	    0x488b0d000000	            mov rcx, qword [0x040101c1] 	      8342	syntax.c	FUNCTION_119
0x40101c1	          0x8b45fc	                mov eax, dword [rbp - 4]	      8342	syntax.c	FUNCTION_119
0x40101c4	          0x4863d0	                         movsxd rdx, eax	      8342	syntax.c	FUNCTION_119
0x40101c7	          0x4889d0	                            mov rax, rdx	      8342	syntax.c	FUNCTION_119
0x40101ca	        0x48c1e003	                              shl rax, 3	      8342	syntax.c	FUNCTION_119
0x40101ce	          0x4801d0	                            add rax, rdx	      8342	syntax.c	FUNCTION_119
0x40101d1	          0x4801c0	                            add rax, rax	      8342	syntax.c	FUNCTION_119
0x40101d4	          0x4801d0	                            add rax, rdx	      8342	syntax.c	FUNCTION_119
0x40101d7	        0x48c1e003	                              shl rax, 3	      8342	syntax.c	FUNCTION_119
0x40101db	          0x4801c8	                            add rax, rcx	      8342	syntax.c	FUNCTION_119
0x40101de	          0x8b4034	            mov eax, dword [rax + 0x34] 	      8342	syntax.c	FUNCTION_119
0x40101e1	            0x85c0	                           test eax, eax	      8342	syntax.c	FUNCTION_119
0x40101e3	     0xf8554010000	                           jne 0x401033d	      8342	syntax.c	FUNCTION_119
0x40101e9	    0x488b0d000000	            mov rcx, qword [0x040101f0] 	      8343	syntax.c	FUNCTION_119
0x40101f0	          0x8b45fc	                mov eax, dword [rbp - 4]	      8343	syntax.c	FUNCTION_119
0x40101f3	          0x4863d0	                         movsxd rdx, eax	      8343	syntax.c	FUNCTION_119
0x40101f6	          0x4889d0	                            mov rax, rdx	      8343	syntax.c	FUNCTION_119
0x40101f9	        0x48c1e003	                              shl rax, 3	      8343	syntax.c	FUNCTION_119
0x40101fd	          0x4801d0	                            add rax, rdx	      8343	syntax.c	FUNCTION_119
0x4010200	          0x4801c0	                            add rax, rax	      8343	syntax.c	FUNCTION_119
0x4010203	          0x4801d0	                            add rax, rdx	      8343	syntax.c	FUNCTION_119
0x4010206	        0x48c1e003	                              shl rax, 3	      8343	syntax.c	FUNCTION_119
0x401020a	          0x4801c8	                            add rax, rcx	      8343	syntax.c	FUNCTION_119
0x401020d	          0x8b4038	            mov eax, dword [rax + 0x38] 	      8343	syntax.c	FUNCTION_119
0x4010210	            0x85c0	                           test eax, eax	      8343	syntax.c	FUNCTION_119
0x4010212	     0xf8525010000	                           jne 0x401033d	      8343	syntax.c	FUNCTION_119
0x4010218	    0x488b0d000000	            mov rcx, qword [0x0401021f] 	      8345	syntax.c	FUNCTION_119
0x401021f	          0x8b45fc	                mov eax, dword [rbp - 4]	      8345	syntax.c	FUNCTION_119
0x4010222	          0x4863d0	                         movsxd rdx, eax	      8345	syntax.c	FUNCTION_119
0x4010225	          0x4889d0	                            mov rax, rdx	      8345	syntax.c	FUNCTION_119
0x4010228	        0x48c1e003	                              shl rax, 3	      8345	syntax.c	FUNCTION_119
0x401022c	          0x4801d0	                            add rax, rdx	      8345	syntax.c	FUNCTION_119
0x401022f	          0x4801c0	                            add rax, rax	      8345	syntax.c	FUNCTION_119
0x4010232	          0x4801d0	                            add rax, rdx	      8345	syntax.c	FUNCTION_119
0x4010235	        0x48c1e003	                              shl rax, 3	      8345	syntax.c	FUNCTION_119
0x4010239	          0x4801c8	                            add rax, rcx	      8345	syntax.c	FUNCTION_119
0x401023c	          0x8b4068	            mov eax, dword [rax + 0x68] 	      8345	syntax.c	FUNCTION_119
0x401023f	            0x85c0	                           test eax, eax	      8345	syntax.c	FUNCTION_119
0x4010241	     0xf85f6000000	                           jne 0x401033d	      8345	syntax.c	FUNCTION_119
0x4010247	    0x488b0d000000	            mov rcx, qword [0x0401024e] 	      8346	syntax.c	FUNCTION_119
0x401024e	          0x8b45fc	                mov eax, dword [rbp - 4]	      8346	syntax.c	FUNCTION_119
0x4010251	          0x4863d0	                         movsxd rdx, eax	      8346	syntax.c	FUNCTION_119
0x4010254	          0x4889d0	                            mov rax, rdx	      8346	syntax.c	FUNCTION_119
0x4010257	        0x48c1e003	                              shl rax, 3	      8346	syntax.c	FUNCTION_119
0x401025b	          0x4801d0	                            add rax, rdx	      8346	syntax.c	FUNCTION_119
0x401025e	          0x4801c0	                            add rax, rax	      8346	syntax.c	FUNCTION_119
0x4010261	          0x4801d0	                            add rax, rdx	      8346	syntax.c	FUNCTION_119
0x4010264	        0x48c1e003	                              shl rax, 3	      8346	syntax.c	FUNCTION_119
0x4010268	          0x4801c8	                            add rax, rcx	      8346	syntax.c	FUNCTION_119
0x401026b	        0x488b4070	            mov rax, qword [rax + 0x70] 	      8346	syntax.c	FUNCTION_119
0x401026f	          0x4885c0	                           test rax, rax	      8346	syntax.c	FUNCTION_119
0x4010272	     0xf85c5000000	                           jne 0x401033d	      8346	syntax.c	FUNCTION_119
0x4010278	    0x488b0d000000	            mov rcx, qword [0x0401027f] 	      8347	syntax.c	FUNCTION_119
0x401027f	          0x8b45fc	                mov eax, dword [rbp - 4]	      8347	syntax.c	FUNCTION_119
0x4010282	          0x4863d0	                         movsxd rdx, eax	      8347	syntax.c	FUNCTION_119
0x4010285	          0x4889d0	                            mov rax, rdx	      8347	syntax.c	FUNCTION_119
0x4010288	        0x48c1e003	                              shl rax, 3	      8347	syntax.c	FUNCTION_119
0x401028c	          0x4801d0	                            add rax, rdx	      8347	syntax.c	FUNCTION_119
0x401028f	          0x4801c0	                            add rax, rax	      8347	syntax.c	FUNCTION_119
0x4010292	          0x4801d0	                            add rax, rdx	      8347	syntax.c	FUNCTION_119
0x4010295	        0x48c1e003	                              shl rax, 3	      8347	syntax.c	FUNCTION_119
0x4010299	          0x4801c8	                            add rax, rcx	      8347	syntax.c	FUNCTION_119
0x401029c	        0x488b4078	            mov rax, qword [rax + 0x78] 	      8347	syntax.c	FUNCTION_119
0x40102a0	          0x4885c0	                           test rax, rax	      8347	syntax.c	FUNCTION_119
0x40102a3	     0xf8594000000	                           jne 0x401033d	      8347	syntax.c	FUNCTION_119
0x40102a9	    0x488b0d000000	            mov rcx, qword [0x040102b0] 	      8348	syntax.c	FUNCTION_119
0x40102b0	          0x8b45fc	                mov eax, dword [rbp - 4]	      8348	syntax.c	FUNCTION_119
0x40102b3	          0x4863d0	                         movsxd rdx, eax	      8348	syntax.c	FUNCTION_119
0x40102b6	          0x4889d0	                            mov rax, rdx	      8348	syntax.c	FUNCTION_119
0x40102b9	        0x48c1e003	                              shl rax, 3	      8348	syntax.c	FUNCTION_119
0x40102bd	          0x4801d0	                            add rax, rdx	      8348	syntax.c	FUNCTION_119
0x40102c0	          0x4801c0	                            add rax, rax	      8348	syntax.c	FUNCTION_119
0x40102c3	          0x4801d0	                            add rax, rdx	      8348	syntax.c	FUNCTION_119
0x40102c6	        0x48c1e003	                              shl rax, 3	      8348	syntax.c	FUNCTION_119
0x40102ca	          0x4801c8	                            add rax, rcx	      8348	syntax.c	FUNCTION_119
0x40102cd	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      8348	syntax.c	FUNCTION_119
0x40102d4	          0x4885c0	                           test rax, rax	      8348	syntax.c	FUNCTION_119
0x40102d7	            0x7564	                           jne 0x401033d	      8348	syntax.c	FUNCTION_119
0x40102d9	    0x488b0d000000	            mov rcx, qword [0x040102e0] 	      8349	syntax.c	FUNCTION_119
0x40102e0	          0x8b45fc	                mov eax, dword [rbp - 4]	      8349	syntax.c	FUNCTION_119
0x40102e3	          0x4863d0	                         movsxd rdx, eax	      8349	syntax.c	FUNCTION_119
0x40102e6	          0x4889d0	                            mov rax, rdx	      8349	syntax.c	FUNCTION_119
0x40102e9	        0x48c1e003	                              shl rax, 3	      8349	syntax.c	FUNCTION_119
0x40102ed	          0x4801d0	                            add rax, rdx	      8349	syntax.c	FUNCTION_119
0x40102f0	          0x4801c0	                            add rax, rax	      8349	syntax.c	FUNCTION_119
0x40102f3	          0x4801d0	                            add rax, rdx	      8349	syntax.c	FUNCTION_119
0x40102f6	        0x48c1e003	                              shl rax, 3	      8349	syntax.c	FUNCTION_119
0x40102fa	          0x4801c8	                            add rax, rcx	      8349	syntax.c	FUNCTION_119
0x40102fd	        0x488b4060	            mov rax, qword [rax + 0x60] 	      8349	syntax.c	FUNCTION_119
0x4010301	          0x4885c0	                           test rax, rax	      8349	syntax.c	FUNCTION_119
0x4010304	            0x7537	                           jne 0x401033d	      8349	syntax.c	FUNCTION_119
0x4010306	        0x837df800	                  cmp dword [rbp - 8], 0	      8351	syntax.c	FUNCTION_119
0x401030a	            0x7438	                            je 0x4010344	      8351	syntax.c	FUNCTION_119
0x401030c	    0x488b0d000000	            mov rcx, qword [0x04010313] 	      8351	syntax.c	FUNCTION_119
0x4010313	          0x8b45fc	                mov eax, dword [rbp - 4]	      8351	syntax.c	FUNCTION_119
0x4010316	          0x4863d0	                         movsxd rdx, eax	      8351	syntax.c	FUNCTION_119
0x4010319	          0x4889d0	                            mov rax, rdx	      8351	syntax.c	FUNCTION_119
0x401031c	        0x48c1e003	                              shl rax, 3	      8351	syntax.c	FUNCTION_119
0x4010320	          0x4801d0	                            add rax, rdx	      8351	syntax.c	FUNCTION_119
0x4010323	          0x4801c0	                            add rax, rax	      8351	syntax.c	FUNCTION_119
0x4010326	          0x4801d0	                            add rax, rdx	      8351	syntax.c	FUNCTION_119
0x4010329	        0x48c1e003	                              shl rax, 3	      8351	syntax.c	FUNCTION_119
0x401032d	          0x4801c8	                            add rax, rcx	      8351	syntax.c	FUNCTION_119
0x4010330	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8351	syntax.c	FUNCTION_119
0x4010336	          0x83e008	                              and eax, 8	      8351	syntax.c	FUNCTION_119
0x4010339	            0x85c0	                           test eax, eax	      8351	syntax.c	FUNCTION_119
0x401033b	            0x7407	                            je 0x4010344	      8351	syntax.c	FUNCTION_119
0x401033d	      0xb801000000	                              mov eax, 1	      8351	syntax.c	FUNCTION_119
0x4010342	            0xeb05	                           jmp 0x4010349	      8351	syntax.c	FUNCTION_119
0x4010344	      0xb800000000	                              mov eax, 0	      8351	syntax.c	FUNCTION_119
0x4010349	              0x5d	                                 pop rbp	      8352	syntax.c	FUNCTION_119
0x401034a	              0xc3	                                     ret	      8352	syntax.c	FUNCTION_119
save_chartab	functions,0:IF,1:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	28
0x4000d51	              0x55	                                push rbp	      1013	syntax.c	FUNCTION_6
0x4000d52	          0x4889e5	                            mov rbp, rsp	      1013	syntax.c	FUNCTION_6
0x4000d55	        0x4883ec10	                           sub rsp, 0x10	      1013	syntax.c	FUNCTION_6
0x4000d59	        0x48897df8	                mov qword [rbp - 8], rdi	      1013	syntax.c	FUNCTION_6
0x4000d5d	    0x488b05000000	            mov rax, qword [0x04000d64] 	      1014	syntax.c	FUNCTION_6	IF_1
0x4000d64	    0x488b90b00400	           mov rdx, qword [rax + 0x4b0] 	      1014	syntax.c	FUNCTION_6	IF_1
0x4000d6b	    0x488b05000000	            mov rax, qword [0x04000d72] 	      1014	syntax.c	FUNCTION_6	IF_1
0x4000d72	          0x4839c2	                            cmp rdx, rax	      1014	syntax.c	FUNCTION_6	IF_1
0x4000d75	            0x7451	                            je 0x4000dc8	      1014	syntax.c	FUNCTION_6	IF_1
0x4000d77	    0x488b05000000	            mov rax, qword [0x04000d7e] 	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x4000d7e	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x4000d85	        0x488b45f8	                mov rax, qword [rbp - 8]	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x4000d89	      0xba20000000	                           mov edx, 0x20	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x4000d8e	          0x4889ce	                            mov rsi, rcx	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x4000d91	          0x4889c7	                            mov rdi, rax	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x4000d94	      0xe800000000	                          call 0x4000d99	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x4000d99	    0x488b05000000	            mov rax, qword [0x04000da0] 	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4000da0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4000da4	    0x488d888c0400	                  lea rcx, [rax + 0x48c]	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4000dab	    0x488b05000000	            mov rax, qword [0x04000db2] 	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4000db2	    0x4805a0090000	                          add rax, 0x9a0	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4000db8	      0xba20000000	                           mov edx, 0x20	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4000dbd	          0x4889ce	                            mov rsi, rcx	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4000dc0	          0x4889c7	                            mov rdi, rax	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4000dc3	      0xe800000000	                          call 0x4000dc8	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4000dc8	              0x90	                                     nop	      1020	syntax.c	FUNCTION_6
0x4000dc9	              0xc9	                                   leave	      1020	syntax.c	FUNCTION_6
0x4000dca	              0xc3	                                     ret	      1020	syntax.c	FUNCTION_6
syn_stack_free_entry	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	23
0x4001a91	              0x55	                                push rbp	      1438	syntax.c	FUNCTION_17
0x4001a92	          0x4889e5	                            mov rbp, rsp	      1438	syntax.c	FUNCTION_17
0x4001a95	        0x4883ec10	                           sub rsp, 0x10	      1438	syntax.c	FUNCTION_17
0x4001a99	        0x48897df8	                mov qword [rbp - 8], rdi	      1438	syntax.c	FUNCTION_17
0x4001a9d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1438	syntax.c	FUNCTION_17
0x4001aa1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1439	syntax.c	FUNCTION_17	CALL_1
0x4001aa5	          0x4889c7	                            mov rdi, rax	      1439	syntax.c	FUNCTION_17	CALL_1
0x4001aa8	      0xe846eaffff	                call sym.clear_syn_state	      1439	syntax.c	FUNCTION_17	CALL_1
0x4001aad	        0x488b45f8	                mov rax, qword [rbp - 8]	      1440	syntax.c	FUNCTION_17
0x4001ab1	    0x488b90280300	           mov rdx, qword [rax + 0x328] 	      1440	syntax.c	FUNCTION_17
0x4001ab8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1440	syntax.c	FUNCTION_17
0x4001abc	          0x488910	                    mov qword [rax], rdx	      1440	syntax.c	FUNCTION_17
0x4001abf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1441	syntax.c	FUNCTION_17
0x4001ac3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1441	syntax.c	FUNCTION_17
0x4001ac7	    0x488990280300	            mov qword [rax + 0x328], rdx	      1441	syntax.c	FUNCTION_17
0x4001ace	        0x488b45f8	                mov rax, qword [rbp - 8]	      1442	syntax.c	FUNCTION_17
0x4001ad2	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1442	syntax.c	FUNCTION_17
0x4001ad8	          0x8d5001	                      lea edx, [rax + 1]	      1442	syntax.c	FUNCTION_17
0x4001adb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1442	syntax.c	FUNCTION_17
0x4001adf	    0x899030030000	            mov dword [rax + 0x330], edx	      1442	syntax.c	FUNCTION_17
0x4001ae5	              0x90	                                     nop	      1443	syntax.c	FUNCTION_17
0x4001ae6	              0xc9	                                   leave	      1443	syntax.c	FUNCTION_17
0x4001ae7	              0xc3	                                     ret	      1443	syntax.c	FUNCTION_17
clear_hl_tables	functions,0:IF,0:SWITCH,0:FOR,1:CALL,5:ELSE,0:WHILE,0:DO,0	35
0x4011650	              0x55	                                push rbp	      8989	syntax.c	FUNCTION_135
0x4011651	          0x4889e5	                            mov rbp, rsp	      8989	syntax.c	FUNCTION_135
0x4011654	        0x4883ec10	                           sub rsp, 0x10	      8989	syntax.c	FUNCTION_135
0x4011658	      0xbf00000000	                              mov edi, 0	      8994	syntax.c	FUNCTION_135	CALL_1
0x401165d	      0xe800000000	                          call 0x4011662	      8994	syntax.c	FUNCTION_135	CALL_1
0x4011662	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      8996	syntax.c	FUNCTION_135	FOR_1
0x4011669	            0xeb46	                           jmp 0x40116b1	      8996	syntax.c	FUNCTION_135	FOR_1
0x401166b	    0x488b0d000000	            mov rcx, qword [0x04011672] 	      8998	syntax.c	FUNCTION_135	FOR_1
0x4011672	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8998	syntax.c	FUNCTION_135	FOR_1
0x4011675	          0x4863d0	                         movsxd rdx, eax	      8998	syntax.c	FUNCTION_135	FOR_1
0x4011678	          0x4889d0	                            mov rax, rdx	      8998	syntax.c	FUNCTION_135	FOR_1
0x401167b	        0x48c1e002	                              shl rax, 2	      8998	syntax.c	FUNCTION_135	FOR_1
0x401167f	          0x4801d0	                            add rax, rdx	      8998	syntax.c	FUNCTION_135	FOR_1
0x4011682	        0x48c1e003	                              shl rax, 3	      8998	syntax.c	FUNCTION_135	FOR_1
0x4011686	          0x4801c8	                            add rax, rcx	      8998	syntax.c	FUNCTION_135	FOR_1
0x4011689	        0x488945f8	                mov qword [rbp - 8], rax	      8998	syntax.c	FUNCTION_135	FOR_1
0x401168d	        0x488b45f8	                mov rax, qword [rbp - 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x4011691	        0x488b4008	                mov rax, qword [rax + 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x4011695	          0x4889c7	                            mov rdi, rax	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x4011698	      0xe800000000	                          call 0x401169d	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x401169d	        0x488b45f8	                mov rax, qword [rbp - 8]	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x40116a1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x40116a5	          0x4889c7	                            mov rdi, rax	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x40116a8	      0xe800000000	                          call 0x40116ad	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x40116ad	        0x8345f401	                add dword [rbp - 0xc], 1	      8996	syntax.c	FUNCTION_135	FOR_1
0x40116b1	    0x8b0500000000	            mov eax, dword [0x040116b7] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x40116b7	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      8996	syntax.c	FUNCTION_135	FOR_1
0x40116ba	            0x7faf	                            jg 0x401166b	      8996	syntax.c	FUNCTION_135	FOR_1
0x40116bc	      0xbf00000000	                              mov edi, 0	      9002	syntax.c	FUNCTION_135	CALL_4
0x40116c1	      0xe800000000	                          call 0x40116c6	      9002	syntax.c	FUNCTION_135	CALL_4
0x40116c6	      0xbf00000000	                              mov edi, 0	      9003	syntax.c	FUNCTION_135	CALL_5
0x40116cb	      0xe800000000	                          call 0x40116d0	      9003	syntax.c	FUNCTION_135	CALL_5
0x40116d0	              0x90	                                     nop	      9004	syntax.c	FUNCTION_135
0x40116d1	              0xc9	                                   leave	      9004	syntax.c	FUNCTION_135
0x40116d2	              0xc3	                                     ret	      9004	syntax.c	FUNCTION_135
highlight_color	functions,0:IF,17:SWITCH,0:FOR,0:CALL,13:ELSE,6:WHILE,0:DO,0	419
0x401231e	              0x55	                                push rbp	      9362	syntax.c	FUNCTION_144
0x401231f	          0x4889e5	                            mov rbp, rsp	      9362	syntax.c	FUNCTION_144
0x4012322	        0x4883ec30	                           sub rsp, 0x30	      9362	syntax.c	FUNCTION_144
0x4012326	          0x897ddc	             mov dword [rbp - 0x24], edi	      9362	syntax.c	FUNCTION_144
0x4012329	        0x488975d0	             mov qword [rbp - 0x30], rsi	      9362	syntax.c	FUNCTION_144
0x401232d	          0x8955d8	             mov dword [rbp - 0x28], edx	      9362	syntax.c	FUNCTION_144
0x4012330	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      9365	syntax.c	FUNCTION_144
0x4012337	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      9366	syntax.c	FUNCTION_144
0x401233e	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      9367	syntax.c	FUNCTION_144
0x4012345	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9369	syntax.c	FUNCTION_144	IF_1
0x4012349	            0x7e0b	                           jle 0x4012356	      9369	syntax.c	FUNCTION_144	IF_1
0x401234b	    0x8b0500000000	            mov eax, dword [0x04012351] 	      9369	syntax.c	FUNCTION_144	IF_1
0x4012351	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      9369	syntax.c	FUNCTION_144	IF_1
0x4012354	            0x7d0a	                           jge 0x4012360	      9369	syntax.c	FUNCTION_144	IF_1
0x4012356	      0xb800000000	                              mov eax, 0	      9370	syntax.c	FUNCTION_144	IF_1
0x401235b	      0xe95b050000	                           jmp 0x40128bb	      9370	syntax.c	FUNCTION_144	IF_1
0x4012360	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012364	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012367	            0x3c40	                            cmp al, 0x40	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012369	            0x760b	                           jbe 0x4012376	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x401236b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x401236f	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012372	            0x3c5a	                            cmp al, 0x5a	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012374	            0x760d	                           jbe 0x4012383	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012376	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x401237a	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x401237d	            0x3c66	                            cmp al, 0x66	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x401237f	            0x7557	                           jne 0x40123d8	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012381	            0xeb0b	                           jmp 0x401238e	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012383	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012387	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x401238a	            0x3c46	                            cmp al, 0x46	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x401238c	            0x754a	                           jne 0x40123d8	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x401238e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012392	        0x4883c001	                              add rax, 1	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012396	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4012399	            0x3c40	                            cmp al, 0x40	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x401239b	            0x760f	                           jbe 0x40123ac	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x401239d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123a1	        0x4883c001	                              add rax, 1	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123a5	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123a8	            0x3c5a	                            cmp al, 0x5a	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123aa	            0x7611	                           jbe 0x40123bd	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123ac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123b0	        0x4883c001	                              add rax, 1	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123b4	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123b7	            0x3c67	                            cmp al, 0x67	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123b9	            0x751d	                           jne 0x40123d8	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123bb	            0xeb0f	                           jmp 0x40123cc	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123bd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123c1	        0x4883c001	                              add rax, 1	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123c5	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123c8	            0x3c47	                            cmp al, 0x47	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123ca	            0x750c	                           jne 0x40123d8	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x40123cc	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      9373	syntax.c	FUNCTION_144	IF_2
0x40123d3	      0xe9ef010000	                           jmp 0x40125c7	      9373	syntax.c	FUNCTION_144	IF_2
0x40123d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123dc	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123df	            0x3c40	                            cmp al, 0x40	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123e1	            0x760b	                           jbe 0x40123ee	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123e3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123e7	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123ea	            0x3c5a	                            cmp al, 0x5a	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123ec	            0x7611	                           jbe 0x40123ff	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123f2	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123f5	            0x3c66	                            cmp al, 0x66	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123f7	     0xf85df000000	                           jne 0x40124dc	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123fd	            0xeb0f	                           jmp 0x401240e	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40123ff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012403	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012406	            0x3c46	                            cmp al, 0x46	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012408	     0xf85ce000000	                           jne 0x40124dc	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x401240e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012412	        0x4883c001	                              add rax, 1	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012416	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012419	            0x3c40	                            cmp al, 0x40	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x401241b	            0x760f	                           jbe 0x401242c	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x401241d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012421	        0x4883c001	                              add rax, 1	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012425	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012428	            0x3c5a	                            cmp al, 0x5a	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x401242a	            0x7615	                           jbe 0x4012441	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x401242c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012430	        0x4883c001	                              add rax, 1	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012434	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012437	            0x3c6f	                            cmp al, 0x6f	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012439	     0xf859d000000	                           jne 0x40124dc	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x401243f	            0xeb13	                           jmp 0x4012454	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012441	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012445	        0x4883c001	                              add rax, 1	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012449	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x401244c	            0x3c4f	                            cmp al, 0x4f	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x401244e	     0xf8588000000	                           jne 0x40124dc	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012454	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4012458	        0x4883c002	                              add rax, 2	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x401245c	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x401245f	            0x3c40	                            cmp al, 0x40	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012461	            0x760f	                           jbe 0x4012472	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4012463	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4012467	        0x4883c002	                              add rax, 2	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x401246b	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x401246e	            0x3c5a	                            cmp al, 0x5a	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4012470	            0x7611	                           jbe 0x4012483	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4012472	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4012476	        0x4883c002	                              add rax, 2	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x401247a	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x401247d	            0x3c6e	                            cmp al, 0x6e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x401247f	            0x755b	                           jne 0x40124dc	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4012481	            0xeb0f	                           jmp 0x4012492	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4012483	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4012487	        0x4883c002	                              add rax, 2	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x401248b	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x401248e	            0x3c4e	                            cmp al, 0x4e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4012490	            0x754a	                           jne 0x40124dc	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4012492	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4012496	        0x4883c003	                              add rax, 3	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x401249a	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x401249d	            0x3c40	                            cmp al, 0x40	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x401249f	            0x760f	                           jbe 0x40124b0	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x40124a1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124a5	        0x4883c003	                              add rax, 3	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124a9	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124ac	            0x3c5a	                            cmp al, 0x5a	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124ae	            0x7611	                           jbe 0x40124c1	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124b4	        0x4883c003	                              add rax, 3	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124b8	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124bb	            0x3c74	                            cmp al, 0x74	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124bd	            0x751d	                           jne 0x40124dc	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124bf	            0xeb0f	                           jmp 0x40124d0	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124c5	        0x4883c003	                              add rax, 3	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124c9	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124cc	            0x3c54	                            cmp al, 0x54	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124ce	            0x750c	                           jne 0x40124dc	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x40124d0	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      9376	syntax.c	FUNCTION_144	ELSE_1	IF_3
0x40124d7	      0xe9eb000000	                           jmp 0x40125c7	      9376	syntax.c	FUNCTION_144	ELSE_1	IF_3
0x40124dc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124e0	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124e3	            0x3c40	                            cmp al, 0x40	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124e5	            0x760b	                           jbe 0x40124f2	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124eb	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124ee	            0x3c5a	                            cmp al, 0x5a	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124f0	            0x760d	                           jbe 0x40124ff	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124f2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124f6	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124f9	            0x3c73	                            cmp al, 0x73	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124fb	            0x7554	                           jne 0x4012551	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124fd	            0xeb0b	                           jmp 0x401250a	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x40124ff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012503	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012506	            0x3c53	                            cmp al, 0x53	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012508	            0x7547	                           jne 0x4012551	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x401250a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x401250e	        0x4883c001	                              add rax, 1	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012512	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012515	            0x3c40	                            cmp al, 0x40	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012517	            0x760f	                           jbe 0x4012528	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012519	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x401251d	        0x4883c001	                              add rax, 1	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012521	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012524	            0x3c5a	                            cmp al, 0x5a	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012526	            0x7611	                           jbe 0x4012539	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012528	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x401252c	        0x4883c001	                              add rax, 1	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012530	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012533	            0x3c70	                            cmp al, 0x70	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012535	            0x751a	                           jne 0x4012551	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012537	            0xeb0f	                           jmp 0x4012548	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012539	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x401253d	        0x4883c001	                              add rax, 1	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012541	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012544	            0x3c50	                            cmp al, 0x50	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012546	            0x7509	                           jne 0x4012551	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4012548	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      9378	syntax.c	FUNCTION_144	ELSE_2	IF_4
0x401254f	            0xeb76	                           jmp 0x40125c7	      9378	syntax.c	FUNCTION_144	ELSE_2	IF_4
0x4012551	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012555	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012558	            0x3c40	                            cmp al, 0x40	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401255a	            0x760b	                           jbe 0x4012567	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401255c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012560	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012563	            0x3c5a	                            cmp al, 0x5a	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012565	            0x760d	                           jbe 0x4012574	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012567	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401256b	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401256e	            0x3c62	                            cmp al, 0x62	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012570	            0x754b	                           jne 0x40125bd	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012572	            0xeb0b	                           jmp 0x401257f	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012574	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012578	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401257b	            0x3c42	                            cmp al, 0x42	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401257d	            0x753e	                           jne 0x40125bd	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401257f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012583	        0x4883c001	                              add rax, 1	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012587	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401258a	            0x3c40	                            cmp al, 0x40	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401258c	            0x760f	                           jbe 0x401259d	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401258e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012592	        0x4883c001	                              add rax, 1	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012596	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4012599	            0x3c5a	                            cmp al, 0x5a	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401259b	            0x7611	                           jbe 0x40125ae	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x401259d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40125a1	        0x4883c001	                              add rax, 1	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40125a5	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40125a8	            0x3c67	                            cmp al, 0x67	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40125aa	            0x7511	                           jne 0x40125bd	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40125ac	            0xeb19	                           jmp 0x40125c7	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40125ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40125b2	        0x4883c001	                              add rax, 1	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40125b6	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40125b9	            0x3c47	                            cmp al, 0x47	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40125bb	            0x740a	                            je 0x40125c7	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x40125bd	      0xb800000000	                              mov eax, 0	      9380	syntax.c	FUNCTION_144	ELSE_3	IF_5
0x40125c2	      0xe9f4020000	                           jmp 0x40128bb	      9380	syntax.c	FUNCTION_144	ELSE_3	IF_5
0x40125c7	        0x837dd867	           cmp dword [rbp - 0x28], 0x67 	      9381	syntax.c	FUNCTION_144	IF_6
0x40125cb	     0xf852a020000	                           jne 0x40127fb	      9381	syntax.c	FUNCTION_144	IF_6
0x40125d1	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9386	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125d5	            0x7433	                            je 0x401260a	      9386	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125d7	    0x488b0d000000	            mov rcx, qword [0x040125de] 	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125de	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125e1	          0x4863d0	                         movsxd rdx, eax	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125e4	          0x4889d0	                            mov rax, rdx	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125e7	        0x48c1e003	                              shl rax, 3	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125eb	          0x4801d0	                            add rax, rdx	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125ee	          0x4801c0	                            add rax, rax	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125f1	          0x4801d0	                            add rax, rdx	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125f4	        0x48c1e003	                              shl rax, 3	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125f8	    0x482d98000000	                           sub rax, 0x98	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x40125fe	          0x4801c8	                            add rax, rcx	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x4012601	        0x488b4060	            mov rax, qword [rax + 0x60] 	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x4012605	      0xe9b1020000	                           jmp 0x40128bb	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x401260a	    0x8b0500000000	            mov eax, dword [0x04012610] 	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4012610	            0x85c0	                           test eax, eax	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4012612	            0x750e	                           jne 0x4012622	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4012614	    0x8b0500000000	            mov eax, dword [0x0401261a] 	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x401261a	            0x85c0	                           test eax, eax	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x401261c	     0xf8431010000	                            je 0x4012753	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4012622	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4012626	        0x4883c002	                              add rax, 2	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x401262a	           0xfb600	                   movzx eax, byte [rax]	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x401262d	            0x3c23	                            cmp al, 0x23	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x401262f	     0xf851e010000	                           jne 0x4012753	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4012635	        0x837de400	               cmp dword [rbp - 0x1c], 0	      9397	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4012639	            0x7434	                            je 0x401266f	      9397	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x401263b	    0x488b0d000000	            mov rcx, qword [0x04012642] 	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4012642	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4012645	          0x4863d0	                         movsxd rdx, eax	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4012648	          0x4889d0	                            mov rax, rdx	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x401264b	        0x48c1e003	                              shl rax, 3	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x401264f	          0x4801d0	                            add rax, rdx	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4012652	          0x4801c0	                            add rax, rax	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4012655	          0x4801d0	                            add rax, rdx	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4012658	        0x48c1e003	                              shl rax, 3	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x401265c	    0x482d98000000	                           sub rax, 0x98	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4012662	          0x4801c8	                            add rax, rcx	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4012665	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4012669	        0x488945f0	             mov qword [rbp - 0x10], rax	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x401266d	            0xeb6c	                           jmp 0x40126db	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x401266f	        0x837de800	               cmp dword [rbp - 0x18], 0	      9399	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4012673	            0x7434	                            je 0x40126a9	      9399	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4012675	    0x488b0d000000	            mov rcx, qword [0x0401267c] 	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x401267c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x401267f	          0x4863d0	                         movsxd rdx, eax	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4012682	          0x4889d0	                            mov rax, rdx	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4012685	        0x48c1e003	                              shl rax, 3	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4012689	          0x4801d0	                            add rax, rdx	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x401268c	          0x4801c0	                            add rax, rax	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x401268f	          0x4801d0	                            add rax, rdx	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4012692	        0x48c1e003	                              shl rax, 3	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4012696	    0x482d98000000	                           sub rax, 0x98	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x401269c	          0x4801c8	                            add rax, rcx	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x401269f	        0x488b4050	            mov rax, qword [rax + 0x50] 	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x40126a3	        0x488945f0	             mov qword [rbp - 0x10], rax	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x40126a7	            0xeb32	                           jmp 0x40126db	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x40126a9	    0x488b0d000000	            mov rcx, qword [0x040126b0] 	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126b0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126b3	          0x4863d0	                         movsxd rdx, eax	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126b6	          0x4889d0	                            mov rax, rdx	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126b9	        0x48c1e003	                              shl rax, 3	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126bd	          0x4801d0	                            add rax, rdx	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126c0	          0x4801c0	                            add rax, rax	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126c3	          0x4801d0	                            add rax, rdx	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126c6	        0x48c1e003	                              shl rax, 3	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126ca	    0x482d98000000	                           sub rax, 0x98	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126d0	          0x4801c8	                            add rax, rcx	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126d3	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126d7	        0x488945f0	             mov qword [rbp - 0x10], rax	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x40126db	    0x48817df099d4	cmp qword [rbp - 0x10], 0xffffffffffffd499	      9407	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x40126e3	            0x750a	                           jne 0x40126ef	      9407	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x40126e5	      0xb800000000	                              mov eax, 0	      9408	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x40126ea	      0xe9cc010000	                           jmp 0x40128bb	      9408	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x40126ef	    0x8b0500000000	            mov eax, dword [0x040126f5] 	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x40126f5	            0x85c0	                           test eax, eax	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x40126f7	            0x7407	                            je 0x4012700	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x40126f9	      0xba00000000	                              mov edx, 0	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x40126fe	            0xeb05	                           jmp 0x4012705	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x4012700	      0xba00000000	                              mov edx, 0	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x4012705	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x4012709	          0x4889c7	                            mov rdi, rax	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x401270c	            0xffd2	                                call rdx	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x401270e	        0x488945f8	                mov qword [rbp - 8], rax	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x4012712	        0x488b45f8	                mov rax, qword [rbp - 8]	      9413	syntax.c	FUNCTION_144	IF_6	IF_8
0x4012716	           0xfb6d0	                           movzx edx, al	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x4012719	        0x488b45f8	                mov rax, qword [rbp - 8]	      9412	syntax.c	FUNCTION_144	IF_6	IF_8
0x401271d	        0x48c1e808	                              shr rax, 8	      9412	syntax.c	FUNCTION_144	IF_6	IF_8
0x4012721	           0xfb6c0	                           movzx eax, al	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x4012724	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9411	syntax.c	FUNCTION_144	IF_6	IF_8
0x4012728	        0x48c1e910	                           shr rcx, 0x10	      9411	syntax.c	FUNCTION_144	IF_6	IF_8
0x401272c	            0x89ce	                            mov esi, ecx	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x401272e	          0x4189d0	                            mov r8d, edx	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x4012731	            0x89c1	                            mov ecx, eax	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x4012733	            0x89f2	                            mov edx, esi	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x4012735	      0xbe00000000	                              mov esi, 0	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x401273a	      0xbf00000000	                              mov edi, 0	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x401273f	      0xb800000000	                              mov eax, 0	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x4012744	      0xe800000000	                          call 0x4012749	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x4012749	      0xb800000000	                              mov eax, 0	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x401274e	      0xe968010000	                           jmp 0x40128bb	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x4012753	        0x837de400	               cmp dword [rbp - 0x1c], 0	      9417	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012757	            0x7433	                            je 0x401278c	      9417	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012759	    0x488b0d000000	            mov rcx, qword [0x04012760] 	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012760	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012763	          0x4863d0	                         movsxd rdx, eax	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012766	          0x4889d0	                            mov rax, rdx	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012769	        0x48c1e003	                              shl rax, 3	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x401276d	          0x4801d0	                            add rax, rdx	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012770	          0x4801c0	                            add rax, rax	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012773	          0x4801d0	                            add rax, rdx	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012776	        0x48c1e003	                              shl rax, 3	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x401277a	    0x482d98000000	                           sub rax, 0x98	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012780	          0x4801c8	                            add rax, rcx	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012783	        0x488b4070	            mov rax, qword [rax + 0x70] 	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4012787	      0xe92f010000	                           jmp 0x40128bb	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x401278c	        0x837de800	               cmp dword [rbp - 0x18], 0	      9419	syntax.c	FUNCTION_144	IF_6	IF_13
0x4012790	            0x7436	                            je 0x40127c8	      9419	syntax.c	FUNCTION_144	IF_6	IF_13
0x4012792	    0x488b0d000000	            mov rcx, qword [0x04012799] 	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x4012799	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x401279c	          0x4863d0	                         movsxd rdx, eax	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x401279f	          0x4889d0	                            mov rax, rdx	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x40127a2	        0x48c1e003	                              shl rax, 3	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x40127a6	          0x4801d0	                            add rax, rdx	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x40127a9	          0x4801c0	                            add rax, rax	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x40127ac	          0x4801d0	                            add rax, rdx	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x40127af	        0x48c1e003	                              shl rax, 3	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x40127b3	    0x482d98000000	                           sub rax, 0x98	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x40127b9	          0x4801c8	                            add rax, rcx	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x40127bc	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x40127c3	      0xe9f3000000	                           jmp 0x40128bb	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x40127c8	    0x488b0d000000	            mov rcx, qword [0x040127cf] 	      9421	syntax.c	FUNCTION_144	IF_6
0x40127cf	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9421	syntax.c	FUNCTION_144	IF_6
0x40127d2	          0x4863d0	                         movsxd rdx, eax	      9421	syntax.c	FUNCTION_144	IF_6
0x40127d5	          0x4889d0	                            mov rax, rdx	      9421	syntax.c	FUNCTION_144	IF_6
0x40127d8	        0x48c1e003	                              shl rax, 3	      9421	syntax.c	FUNCTION_144	IF_6
0x40127dc	          0x4801d0	                            add rax, rdx	      9421	syntax.c	FUNCTION_144	IF_6
0x40127df	          0x4801c0	                            add rax, rax	      9421	syntax.c	FUNCTION_144	IF_6
0x40127e2	          0x4801d0	                            add rax, rdx	      9421	syntax.c	FUNCTION_144	IF_6
0x40127e5	        0x48c1e003	                              shl rax, 3	      9421	syntax.c	FUNCTION_144	IF_6
0x40127e9	    0x482d98000000	                           sub rax, 0x98	      9421	syntax.c	FUNCTION_144	IF_6
0x40127ef	          0x4801c8	                            add rax, rcx	      9421	syntax.c	FUNCTION_144	IF_6
0x40127f2	        0x488b4078	            mov rax, qword [rax + 0x78] 	      9421	syntax.c	FUNCTION_144	IF_6
0x40127f6	      0xe9c0000000	                           jmp 0x40128bb	      9421	syntax.c	FUNCTION_144	IF_6
0x40127fb	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9423	syntax.c	FUNCTION_144	IF_14
0x40127ff	            0x7506	                           jne 0x4012807	      9423	syntax.c	FUNCTION_144	IF_14
0x4012801	        0x837de800	               cmp dword [rbp - 0x18], 0	      9423	syntax.c	FUNCTION_144	IF_14
0x4012805	            0x740a	                            je 0x4012811	      9423	syntax.c	FUNCTION_144	IF_14
0x4012807	      0xb800000000	                              mov eax, 0	      9424	syntax.c	FUNCTION_144	IF_14
0x401280c	      0xe9aa000000	                           jmp 0x40128bb	      9424	syntax.c	FUNCTION_144	IF_14
0x4012811	        0x837dd863	           cmp dword [rbp - 0x28], 0x63 	      9425	syntax.c	FUNCTION_144	IF_15
0x4012815	     0xf859b000000	                           jne 0x40128b6	      9425	syntax.c	FUNCTION_144	IF_15
0x401281b	        0x837de400	               cmp dword [rbp - 0x1c], 0	      9427	syntax.c	FUNCTION_144	IF_15	IF_16
0x401281f	            0x7435	                            je 0x4012856	      9427	syntax.c	FUNCTION_144	IF_15	IF_16
0x4012821	    0x488b0d000000	            mov rcx, qword [0x04012828] 	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4012828	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x401282b	          0x4863d0	                         movsxd rdx, eax	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x401282e	          0x4889d0	                            mov rax, rdx	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4012831	        0x48c1e003	                              shl rax, 3	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4012835	          0x4801d0	                            add rax, rdx	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4012838	          0x4801c0	                            add rax, rax	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x401283b	          0x4801d0	                            add rax, rdx	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x401283e	        0x48c1e003	                              shl rax, 3	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4012842	    0x482d98000000	                           sub rax, 0x98	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4012848	          0x4801c8	                            add rax, rcx	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x401284b	          0x8b4034	            mov eax, dword [rax + 0x34] 	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x401284e	          0x83e801	                              sub eax, 1	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4012851	          0x8945e0	             mov dword [rbp - 0x20], eax	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4012854	            0xeb33	                           jmp 0x4012889	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4012856	    0x488b0d000000	            mov rcx, qword [0x0401285d] 	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x401285d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4012860	          0x4863d0	                         movsxd rdx, eax	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4012863	          0x4889d0	                            mov rax, rdx	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4012866	        0x48c1e003	                              shl rax, 3	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x401286a	          0x4801d0	                            add rax, rdx	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x401286d	          0x4801c0	                            add rax, rax	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4012870	          0x4801d0	                            add rax, rdx	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4012873	        0x48c1e003	                              shl rax, 3	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4012877	    0x482d98000000	                           sub rax, 0x98	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x401287d	          0x4801c8	                            add rax, rcx	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4012880	          0x8b4038	            mov eax, dword [rax + 0x38] 	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4012883	          0x83e801	                              sub eax, 1	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4012886	          0x8945e0	             mov dword [rbp - 0x20], eax	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4012889	        0x837de000	               cmp dword [rbp - 0x20], 0	      9431	syntax.c	FUNCTION_144	IF_15	IF_17
0x401288d	            0x7907	                           jns 0x4012896	      9431	syntax.c	FUNCTION_144	IF_15	IF_17
0x401288f	      0xb800000000	                              mov eax, 0	      9432	syntax.c	FUNCTION_144	IF_15	IF_17
0x4012894	            0xeb25	                           jmp 0x40128bb	      9432	syntax.c	FUNCTION_144	IF_15	IF_17
0x4012896	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      9433	syntax.c	FUNCTION_144	IF_15	CALL_13
0x4012899	            0x89c2	                            mov edx, eax	      9433	syntax.c	FUNCTION_144	IF_15	CALL_13
0x401289b	      0xbe00000000	                              mov esi, 0	      9433	syntax.c	FUNCTION_144	IF_15	CALL_13
0x40128a0	      0xbf00000000	                              mov edi, 0	      9433	syntax.c	FUNCTION_144	IF_15	CALL_13
0x40128a5	      0xb800000000	                              mov eax, 0	      9433	syntax.c	FUNCTION_144	IF_15	CALL_13
0x40128aa	      0xe800000000	                          call 0x40128af	      9433	syntax.c	FUNCTION_144	IF_15	CALL_13
0x40128af	      0xb800000000	                              mov eax, 0	      9434	syntax.c	FUNCTION_144	IF_15
0x40128b4	            0xeb05	                           jmp 0x40128bb	      9434	syntax.c	FUNCTION_144	IF_15
0x40128b6	      0xb800000000	                              mov eax, 0	      9437	syntax.c	FUNCTION_144
0x40128bb	              0xc9	                                   leave	      9438	syntax.c	FUNCTION_144
0x40128bc	              0xc3	                                     ret	      9438	syntax.c	FUNCTION_144
color_name2handle	functions,0:IF,7:SWITCH,0:FOR,0:CALL,8:ELSE,0:WHILE,0:DO,0	99
0x4010f49	              0x55	                                push rbp	      8723	syntax.c	FUNCTION_130
0x4010f4a	          0x4889e5	                            mov rbp, rsp	      8723	syntax.c	FUNCTION_130
0x4010f4d	        0x4883ec10	                           sub rsp, 0x10	      8723	syntax.c	FUNCTION_130
0x4010f51	        0x48897df8	                mov qword [rbp - 8], rdi	      8723	syntax.c	FUNCTION_130
0x4010f55	        0x488b45f8	                mov rax, qword [rbp - 8]	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x4010f59	      0xbe00000000	                              mov esi, 0	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x4010f5e	          0x4889c7	                            mov rdi, rax	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x4010f61	      0xe800000000	                          call 0x4010f66	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x4010f66	            0x85c0	                           test eax, eax	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x4010f68	            0x750c	                           jne 0x4010f76	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x4010f6a	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      8725	syntax.c	FUNCTION_130	IF_1
0x4010f71	      0xe940010000	                           jmp 0x40110b6	      8725	syntax.c	FUNCTION_130	IF_1
0x4010f76	        0x488b45f8	                mov rax, qword [rbp - 8]	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010f7a	      0xbe00000000	                              mov esi, 0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010f7f	          0x4889c7	                            mov rdi, rax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010f82	      0xe800000000	                          call 0x4010f87	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010f87	            0x85c0	                           test eax, eax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010f89	            0x7415	                            je 0x4010fa0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010f8b	        0x488b45f8	                mov rax, qword [rbp - 8]	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010f8f	      0xbe00000000	                              mov esi, 0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010f94	          0x4889c7	                            mov rdi, rax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010f97	      0xe800000000	                          call 0x4010f9c	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010f9c	            0x85c0	                           test eax, eax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010f9e	            0x756b	                           jne 0x401100b	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4010fa0	    0x8b0500000000	            mov eax, dword [0x04010fa6] 	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x4010fa6	            0x85c0	                           test eax, eax	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x4010fa8	            0x740c	                            je 0x4010fb6	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x4010faa	    0x488b05000000	            mov rax, qword [0x04010fb1] 	      8733	syntax.c	FUNCTION_130	IF_2	IF_3
0x4010fb1	      0xe900010000	                           jmp 0x40110b6	      8733	syntax.c	FUNCTION_130	IF_2	IF_3
0x4010fb6	    0x488b05000000	            mov rax, qword [0x04010fbd] 	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x4010fbd	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x4010fc3	            0x740c	                            je 0x4010fd1	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x4010fc5	    0x488b05000000	            mov rax, qword [0x04010fcc] 	      8737	syntax.c	FUNCTION_130	IF_2	IF_4
0x4010fcc	      0xe9e5000000	                           jmp 0x40110b6	      8737	syntax.c	FUNCTION_130	IF_2	IF_4
0x4010fd1	    0x8b0500000000	            mov eax, dword [0x04010fd7] 	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010fd7	            0x85c0	                           test eax, eax	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010fd9	            0x7407	                            je 0x4010fe2	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010fdb	      0xba00000000	                              mov edx, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010fe0	            0xeb05	                           jmp 0x4010fe7	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010fe2	      0xba00000000	                              mov edx, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010fe7	    0x488b05000000	            mov rax, qword [0x04010fee] 	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010fee	           0xfb600	                   movzx eax, byte [rax]	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010ff1	            0x3c6c	                            cmp al, 0x6c	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010ff3	            0x7507	                           jne 0x4010ffc	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010ff5	      0xb800000000	                              mov eax, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010ffa	            0xeb05	                           jmp 0x4011001	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4010ffc	      0xb800000000	                              mov eax, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4011001	          0x4889c7	                            mov rdi, rax	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4011004	            0xffd2	                                call rdx	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4011006	      0xe9ab000000	                           jmp 0x40110b6	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x401100b	        0x488b45f8	                mov rax, qword [rbp - 8]	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x401100f	      0xbe00000000	                              mov esi, 0	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4011014	          0x4889c7	                            mov rdi, rax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4011017	      0xe800000000	                          call 0x401101c	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x401101c	            0x85c0	                           test eax, eax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x401101e	            0x7415	                            je 0x4011035	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4011020	        0x488b45f8	                mov rax, qword [rbp - 8]	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4011024	      0xbe00000000	                              mov esi, 0	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4011029	          0x4889c7	                            mov rdi, rax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x401102c	      0xe800000000	                          call 0x4011031	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4011031	            0x85c0	                           test eax, eax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4011033	            0x7562	                           jne 0x4011097	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4011035	    0x8b0500000000	            mov eax, dword [0x0401103b] 	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x401103b	            0x85c0	                           test eax, eax	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x401103d	            0x7409	                            je 0x4011048	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x401103f	    0x488b05000000	            mov rax, qword [0x04011046] 	      8748	syntax.c	FUNCTION_130	IF_5	IF_6
0x4011046	            0xeb6e	                           jmp 0x40110b6	      8748	syntax.c	FUNCTION_130	IF_5	IF_6
0x4011048	    0x488b05000000	            mov rax, qword [0x0401104f] 	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x401104f	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x4011055	            0x7409	                            je 0x4011060	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x4011057	    0x488b05000000	            mov rax, qword [0x0401105e] 	      8752	syntax.c	FUNCTION_130	IF_5	IF_7
0x401105e	            0xeb56	                           jmp 0x40110b6	      8752	syntax.c	FUNCTION_130	IF_5	IF_7
0x4011060	    0x8b0500000000	            mov eax, dword [0x04011066] 	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011066	            0x85c0	                           test eax, eax	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011068	            0x7407	                            je 0x4011071	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x401106a	      0xba00000000	                              mov edx, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x401106f	            0xeb05	                           jmp 0x4011076	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011071	      0xba00000000	                              mov edx, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011076	    0x488b05000000	            mov rax, qword [0x0401107d] 	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x401107d	           0xfb600	                   movzx eax, byte [rax]	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011080	            0x3c6c	                            cmp al, 0x6c	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011082	            0x7507	                           jne 0x401108b	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011084	      0xb800000000	                              mov eax, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011089	            0xeb05	                           jmp 0x4011090	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x401108b	      0xb800000000	                              mov eax, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011090	          0x4889c7	                            mov rdi, rax	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011093	            0xffd2	                                call rdx	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011095	            0xeb1f	                           jmp 0x40110b6	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4011097	    0x8b0500000000	            mov eax, dword [0x0401109d] 	      8758	syntax.c	FUNCTION_130	CALL_8
0x401109d	            0x85c0	                           test eax, eax	      8758	syntax.c	FUNCTION_130	CALL_8
0x401109f	            0x7407	                            je 0x40110a8	      8758	syntax.c	FUNCTION_130	CALL_8
0x40110a1	      0xba00000000	                              mov edx, 0	      8758	syntax.c	FUNCTION_130	CALL_8
0x40110a6	            0xeb05	                           jmp 0x40110ad	      8758	syntax.c	FUNCTION_130	CALL_8
0x40110a8	      0xba00000000	                              mov edx, 0	      8758	syntax.c	FUNCTION_130	CALL_8
0x40110ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      8758	syntax.c	FUNCTION_130	CALL_8
0x40110b1	          0x4889c7	                            mov rdi, rax	      8758	syntax.c	FUNCTION_130	CALL_8
0x40110b4	            0xffd2	                                call rdx	      8758	syntax.c	FUNCTION_130	CALL_8
0x40110b6	              0xc9	                                   leave	      8759	syntax.c	FUNCTION_130
0x40110b7	              0xc3	                                     ret	      8759	syntax.c	FUNCTION_130
syn_cmd_on	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	12
0x4006d54	              0x55	                                push rbp	      3865	syntax.c	FUNCTION_57
0x4006d55	          0x4889e5	                            mov rbp, rsp	      3865	syntax.c	FUNCTION_57
0x4006d58	        0x4883ec10	                           sub rsp, 0x10	      3865	syntax.c	FUNCTION_57
0x4006d5c	        0x48897df8	                mov qword [rbp - 8], rdi	      3865	syntax.c	FUNCTION_57
0x4006d60	          0x8975f4	              mov dword [rbp - 0xc], esi	      3865	syntax.c	FUNCTION_57
0x4006d63	        0x488b45f8	                mov rax, qword [rbp - 8]	      3866	syntax.c	FUNCTION_57	CALL_1
0x4006d67	      0xbe00000000	                              mov esi, 0	      3866	syntax.c	FUNCTION_57	CALL_1
0x4006d6c	          0x4889c7	                            mov rdi, rax	      3866	syntax.c	FUNCTION_57	CALL_1
0x4006d6f	      0xe8e9000000	                  call sym.syn_cmd_onoff	      3866	syntax.c	FUNCTION_57	CALL_1
0x4006d74	              0x90	                                     nop	      3867	syntax.c	FUNCTION_57
0x4006d75	              0xc9	                                   leave	      3867	syntax.c	FUNCTION_57
0x4006d76	              0xc3	                                     ret	      3867	syntax.c	FUNCTION_57
update_si_attr	functions,0:IF,7:SWITCH,0:FOR,0:CALL,1:ELSE,3:WHILE,0:DO,0	168
0x4004506	              0x55	                                push rbp	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4004507	          0x4889e5	                            mov rbp, rsp	      2716	syntax.c	ELSE_2	FUNCTION_32
0x400450a	        0x4883ec20	                           sub rsp, 0x20	      2716	syntax.c	ELSE_2	FUNCTION_32
0x400450e	          0x897dec	             mov dword [rbp - 0x14], edi	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4004511	    0x488b0d000000	            mov rcx, qword [0x04004518] 	      2717	syntax.c	ELSE_2	FUNCTION_32
0x4004518	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2717	syntax.c	ELSE_2	FUNCTION_32
0x400451b	          0x4863d0	                         movsxd rdx, eax	      2717	syntax.c	ELSE_2	FUNCTION_32
0x400451e	          0x4889d0	                            mov rax, rdx	      2717	syntax.c	ELSE_2	FUNCTION_32
0x4004521	        0x48c1e003	                              shl rax, 3	      2717	syntax.c	ELSE_2	FUNCTION_32
0x4004525	          0x4801d0	                            add rax, rdx	      2717	syntax.c	ELSE_2	FUNCTION_32
0x4004528	        0x48c1e004	                              shl rax, 4	      2717	syntax.c	ELSE_2	FUNCTION_32
0x400452c	          0x4801c8	                            add rax, rcx	      2717	syntax.c	ELSE_2	FUNCTION_32
0x400452f	        0x488945f0	             mov qword [rbp - 0x10], rax	      2717	syntax.c	ELSE_2	FUNCTION_32
0x4004533	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x4004537	            0x8b00	                    mov eax, dword [rax]	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x4004539	            0x85c0	                           test eax, eax	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x400453b	     0xf883d020000	                            js 0x400477e	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x4004541	    0x488b05000000	            mov rax, qword [0x04004548] 	      2724	syntax.c	ELSE_2	FUNCTION_32
0x4004548	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2724	syntax.c	ELSE_2	FUNCTION_32
0x400454f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2724	syntax.c	ELSE_2	FUNCTION_32
0x4004553	            0x8b00	                    mov eax, dword [rax]	      2724	syntax.c	ELSE_2	FUNCTION_32
0x4004555	          0x4863d0	                         movsxd rdx, eax	      2724	syntax.c	ELSE_2	FUNCTION_32
0x4004558	          0x4889d0	                            mov rax, rdx	      2724	syntax.c	ELSE_2	FUNCTION_32
0x400455b	        0x48c1e002	                              shl rax, 2	      2724	syntax.c	ELSE_2	FUNCTION_32
0x400455f	          0x4801d0	                            add rax, rdx	      2724	syntax.c	ELSE_2	FUNCTION_32
0x4004562	        0x48c1e005	                              shl rax, 5	      2724	syntax.c	ELSE_2	FUNCTION_32
0x4004566	          0x4801c8	                            add rax, rcx	      2724	syntax.c	ELSE_2	FUNCTION_32
0x4004569	        0x488945f8	                mov qword [rbp - 8], rax	      2724	syntax.c	ELSE_2	FUNCTION_32
0x400456d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4004571	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4004575	          0x83e040	                           and eax, 0x40	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4004578	          0x4885c0	                           test rax, rax	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x400457b	            0x7414	                            je 0x4004591	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x400457d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4004581	         0xfb74002	               movzx eax, word [rax + 2]	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4004585	           0xfbfd0	                           movsx edx, ax	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4004588	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x400458c	          0x895004	                mov dword [rax + 4], edx	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x400458f	            0xeb12	                           jmp 0x40045a3	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4004591	        0x488b45f8	                mov rax, qword [rbp - 8]	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x4004595	         0xfb74054	           movzx eax, word [rax + 0x54] 	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x4004599	           0xfbfd0	                           movsx edx, ax	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x400459c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x40045a0	          0x895004	                mov dword [rax + 4], edx	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x40045a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40045a7	          0x8b4004	                mov eax, dword [rax + 4]	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40045aa	            0x89c7	                            mov edi, eax	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40045ac	      0xe800000000	                          call 0x40045b1	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40045b1	            0x89c2	                            mov edx, eax	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40045b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40045b7	          0x895060	             mov dword [rax + 0x60], edx	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40045ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2730	syntax.c	ELSE_2	FUNCTION_32
0x40045be	          0x8b5004	                mov edx, dword [rax + 4]	      2730	syntax.c	ELSE_2	FUNCTION_32
0x40045c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2730	syntax.c	ELSE_2	FUNCTION_32
0x40045c5	          0x895008	                mov dword [rax + 8], edx	      2730	syntax.c	ELSE_2	FUNCTION_32
0x40045c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x40045cc	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x40045d0	          0x83e040	                           and eax, 0x40	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x40045d3	          0x4885c0	                           test rax, rax	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x40045d6	            0x740e	                            je 0x40045e6	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x40045d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2732	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x40045dc	    0x48c740780000	               mov qword [rax + 0x78], 0	      2732	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x40045e4	            0xeb10	                           jmp 0x40045f6	      2732	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x40045e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2734	syntax.c	FUNCTION_32
0x40045ea	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2734	syntax.c	FUNCTION_32
0x40045ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2734	syntax.c	FUNCTION_32
0x40045f2	        0x48895078	             mov qword [rax + 0x78], rdx	      2734	syntax.c	FUNCTION_32
0x40045f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2741	syntax.c	FUNCTION_32	IF_4
0x40045fa	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2741	syntax.c	FUNCTION_32	IF_4
0x40045fd	          0x83e002	                              and eax, 2	      2741	syntax.c	FUNCTION_32	IF_4
0x4004600	            0x85c0	                           test eax, eax	      2741	syntax.c	FUNCTION_32	IF_4
0x4004602	     0xf8477010000	                            je 0x400477f	      2741	syntax.c	FUNCTION_32	IF_4
0x4004608	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2741	syntax.c	FUNCTION_32	IF_4
0x400460c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2741	syntax.c	FUNCTION_32	IF_4
0x4004610	          0x83e040	                           and eax, 0x40	      2741	syntax.c	FUNCTION_32	IF_4
0x4004613	          0x4885c0	                           test rax, rax	      2741	syntax.c	FUNCTION_32	IF_4
0x4004616	     0xf8563010000	                           jne 0x400477f	      2741	syntax.c	FUNCTION_32	IF_4
0x400461c	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2743	syntax.c	FUNCTION_32	IF_4	IF_5
0x4004620	            0x7538	                           jne 0x400465a	      2743	syntax.c	FUNCTION_32	IF_4	IF_5
0x4004622	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2745	syntax.c	FUNCTION_32	IF_4	IF_5
0x4004626	    0xc74060000000	               mov dword [rax + 0x60], 0	      2745	syntax.c	FUNCTION_32	IF_4	IF_5
0x400462d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2746	syntax.c	FUNCTION_32	IF_4	IF_5
0x4004631	    0xc74008000000	                  mov dword [rax + 8], 0	      2746	syntax.c	FUNCTION_32	IF_4	IF_5
0x4004638	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x400463c	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4004640	          0x4885c0	                           test rax, rax	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4004643	     0xf8536010000	                           jne 0x400477f	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4004649	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x400464d	    0x48c74078ffff	mov qword [rax + 0x78], 0xffffffffffffffff	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4004655	      0xe925010000	                           jmp 0x400477f	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x400465a	    0x488b0d000000	            mov rcx, qword [0x04004661] 	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004661	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004664	          0x4863d0	                         movsxd rdx, eax	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004667	          0x4889d0	                            mov rax, rdx	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400466a	        0x48c1e003	                              shl rax, 3	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400466e	          0x4801d0	                            add rax, rdx	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004671	        0x48c1e004	                              shl rax, 4	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004675	    0x482d90000000	                           sub rax, 0x90	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400467b	          0x4801c8	                            add rax, rcx	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400467e	          0x8b5060	            mov edx, dword [rax + 0x60] 	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004681	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004685	          0x895060	             mov dword [rax + 0x60], edx	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004688	    0x488b0d000000	            mov rcx, qword [0x0400468f] 	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400468f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004692	          0x4863d0	                         movsxd rdx, eax	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004695	          0x4889d0	                            mov rax, rdx	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004698	        0x48c1e003	                              shl rax, 3	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400469c	          0x4801d0	                            add rax, rdx	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400469f	        0x48c1e004	                              shl rax, 4	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046a3	    0x482d90000000	                           sub rax, 0x90	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046a9	          0x4801c8	                            add rax, rcx	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046ac	          0x8b5008	                mov edx, dword [rax + 8]	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046b3	          0x895008	                mov dword [rax + 8], edx	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046b6	    0x488b0d000000	            mov rcx, qword [0x040046bd] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046bd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046c0	          0x4863d0	                         movsxd rdx, eax	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046c3	          0x4889d0	                            mov rax, rdx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046c6	        0x48c1e003	                              shl rax, 3	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046ca	          0x4801d0	                            add rax, rdx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046cd	        0x48c1e004	                              shl rax, 4	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046d1	    0x482d90000000	                           sub rax, 0x90	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046d7	          0x4801c8	                            add rax, rcx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046da	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046de	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046e2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046e6	        0x48894128	             mov qword [rcx + 0x28], rax	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046ea	        0x48895130	             mov qword [rcx + 0x30], rdx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046ee	    0x488b0d000000	            mov rcx, qword [0x040046f5] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046f5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046f8	          0x4863d0	                         movsxd rdx, eax	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046fb	          0x4889d0	                            mov rax, rdx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40046fe	        0x48c1e003	                              shl rax, 3	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004702	          0x4801d0	                            add rax, rdx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004705	        0x48c1e004	                              shl rax, 4	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004709	    0x482d90000000	                           sub rax, 0x90	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400470f	          0x4801c8	                            add rax, rcx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004712	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004716	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400471a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400471e	        0x48894138	             mov qword [rcx + 0x38], rax	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004722	        0x48895140	             mov qword [rcx + 0x40], rdx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004726	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400472a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400472e	          0x4885c0	                           test rax, rax	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004731	            0x754c	                           jne 0x400477f	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004733	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004737	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400473b	    0x480d00000100	                         or rax, 0x10000	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004741	          0x4889c2	                            mov rdx, rax	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004744	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004748	        0x48895068	             mov qword [rax + 0x68], rdx	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400474c	    0x488b0d000000	            mov rcx, qword [0x04004753] 	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004753	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004756	          0x4863d0	                         movsxd rdx, eax	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004759	          0x4889d0	                            mov rax, rdx	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400475c	        0x48c1e003	                              shl rax, 3	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004760	          0x4801d0	                            add rax, rdx	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004763	        0x48c1e004	                              shl rax, 4	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004767	    0x482d90000000	                           sub rax, 0x90	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400476d	          0x4801c8	                            add rax, rcx	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004770	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004774	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004778	        0x48895078	             mov qword [rax + 0x78], rdx	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400477c	            0xeb01	                           jmp 0x400477f	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400477e	              0x90	                                     nop	      2722	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x400477f	              0xc9	                                   leave	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4004780	              0xc3	                                     ret	      2763	syntax.c	FUNCTION_32	ELSE_2
get_syntax_attr	functions,0:IF,4:SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,1:DO,0	73
0x40028cf	              0x55	                                push rbp	      1849	syntax.c	FUNCTION_27
0x40028d0	          0x4889e5	                            mov rbp, rsp	      1849	syntax.c	FUNCTION_27
0x40028d3	        0x4883ec20	                           sub rsp, 0x20	      1849	syntax.c	FUNCTION_27
0x40028d7	          0x897dec	             mov dword [rbp - 0x14], edi	      1849	syntax.c	FUNCTION_27
0x40028da	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1849	syntax.c	FUNCTION_27
0x40028de	          0x8955e8	             mov dword [rbp - 0x18], edx	      1849	syntax.c	FUNCTION_27
0x40028e1	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1850	syntax.c	FUNCTION_27
0x40028e8	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1852	syntax.c	FUNCTION_27	IF_1
0x40028ed	            0x7444	                            je 0x4002933	      1852	syntax.c	FUNCTION_27	IF_1
0x40028ef	    0x488b05000000	            mov rax, qword [0x040028f6] 	      1855	syntax.c	FUNCTION_27	IF_1
0x40028f6	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      1855	syntax.c	FUNCTION_27	IF_1
0x40028fc	            0x85c0	                           test eax, eax	      1857	syntax.c	FUNCTION_27	IF_1
0x40028fe	            0x7517	                           jne 0x4002917	      1857	syntax.c	FUNCTION_27	IF_1
0x4002900	    0x488b05000000	            mov rax, qword [0x04002907] 	      1856	syntax.c	FUNCTION_27	IF_1
0x4002907	    0x8b8090020000	           mov eax, dword [rax + 0x290] 	      1856	syntax.c	FUNCTION_27	IF_1
0x400290d	            0x85c0	                           test eax, eax	      1856	syntax.c	FUNCTION_27	IF_1
0x400290f	           0xf94c0	                                 sete al	      1856	syntax.c	FUNCTION_27	IF_1
0x4002912	           0xfb6c0	                           movzx eax, al	      1857	syntax.c	FUNCTION_27	IF_1
0x4002915	            0xeb16	                           jmp 0x400292d	      1857	syntax.c	FUNCTION_27	IF_1
0x4002917	    0x488b05000000	            mov rax, qword [0x0400291e] 	      1857	syntax.c	FUNCTION_27	IF_1
0x400291e	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      1857	syntax.c	FUNCTION_27	IF_1
0x4002924	          0x83f801	                              cmp eax, 1	      1857	syntax.c	FUNCTION_27	IF_1
0x4002927	           0xf94c0	                                 sete al	      1857	syntax.c	FUNCTION_27	IF_1
0x400292a	           0xfb6c0	                           movzx eax, al	      1857	syntax.c	FUNCTION_27	IF_1
0x400292d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1855	syntax.c	FUNCTION_27	IF_1
0x4002931	            0x8902	                    mov dword [rdx], eax	      1855	syntax.c	FUNCTION_27	IF_1
0x4002933	    0x488b05000000	            mov rax, qword [0x0400293a] 	      1860	syntax.c	FUNCTION_27	IF_2
0x400293a	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1860	syntax.c	FUNCTION_27	IF_2
0x4002941	          0x4885c0	                           test rax, rax	      1860	syntax.c	FUNCTION_27	IF_2
0x4002944	            0x750a	                           jne 0x4002950	      1860	syntax.c	FUNCTION_27	IF_2
0x4002946	      0xb800000000	                              mov eax, 0	      1861	syntax.c	FUNCTION_27	IF_2
0x400294b	      0xe9b5000000	                           jmp 0x4002a05	      1861	syntax.c	FUNCTION_27	IF_2
0x4002950	    0x488b05000000	            mov rax, qword [0x04002957] 	      1864	syntax.c	FUNCTION_27	IF_3
0x4002957	    0x488b80981500	          mov rax, qword [rax + 0x1598] 	      1864	syntax.c	FUNCTION_27	IF_3
0x400295e	          0x4885c0	                           test rax, rax	      1864	syntax.c	FUNCTION_27	IF_3
0x4002961	            0x7e47	                           jle 0x40029aa	      1864	syntax.c	FUNCTION_27	IF_3
0x4002963	    0x488b05000000	            mov rax, qword [0x0400296a] 	      1864	syntax.c	FUNCTION_27	IF_3
0x400296a	    0x488b80981500	          mov rax, qword [rax + 0x1598] 	      1864	syntax.c	FUNCTION_27	IF_3
0x4002971	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1864	syntax.c	FUNCTION_27	IF_3
0x4002974	            0x7f34	                            jg 0x40029aa	      1864	syntax.c	FUNCTION_27	IF_3
0x4002976	      0xe837dcffff	            call sym.clear_current_state	      1866	syntax.c	FUNCTION_27	IF_3	CALL_1
0x400297b	    0xc70500000000	               mov dword [0x04002985], 0	      1868	syntax.c	FUNCTION_27	IF_3
0x4002985	    0xc70500000000	               mov dword [0x0400298f], 0	      1869	syntax.c	FUNCTION_27	IF_3
0x400298f	    0xc70500000000	               mov dword [0x04002999], 0	      1872	syntax.c	FUNCTION_27	IF_3
0x4002999	    0xc70500000000	               mov dword [0x040029a3], 0	      1873	syntax.c	FUNCTION_27	IF_3
0x40029a3	      0xb800000000	                              mov eax, 0	      1875	syntax.c	FUNCTION_27	IF_3
0x40029a8	            0xeb5b	                           jmp 0x4002a05	      1875	syntax.c	FUNCTION_27	IF_3
0x40029aa	    0x8b0500000000	            mov eax, dword [0x040029b0] 	      1879	syntax.c	FUNCTION_27	IF_4
0x40029b0	            0x85c0	                           test eax, eax	      1879	syntax.c	FUNCTION_27	IF_4
0x40029b2	            0x7543	                           jne 0x40029f7	      1879	syntax.c	FUNCTION_27	IF_4
0x40029b4	      0xe858fdffff	         call sym.validate_current_state	      1880	syntax.c	FUNCTION_27	CALL_2
0x40029b9	            0xeb3c	                           jmp 0x40029f7	      1885	syntax.c	FUNCTION_27	WHILE_1
0x40029bb	    0x8b0500000000	            mov eax, dword [0x040029c1] 	      1888	syntax.c	FUNCTION_27	WHILE_1
0x40029c1	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x40029c4	            0x7505	                           jne 0x40029cb	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x40029c6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x40029c9	            0xeb05	                           jmp 0x40029d0	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x40029cb	      0xb800000000	                              mov eax, 0	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x40029d0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x40029d4	            0x89c1	                            mov ecx, eax	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x40029d6	      0xbe01000000	                              mov esi, 1	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x40029db	      0xbf00000000	                              mov edi, 0	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x40029e0	      0xe822000000	               call sym.syn_current_attr	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x40029e5	          0x8945fc	                mov dword [rbp - 4], eax	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x40029e8	    0x8b0500000000	            mov eax, dword [0x040029ee] 	      1889	syntax.c	FUNCTION_27	WHILE_1
0x40029ee	          0x83c001	                              add eax, 1	      1889	syntax.c	FUNCTION_27	WHILE_1
0x40029f1	    0x890500000000	            mov dword [0x040029f7], eax 	      1889	syntax.c	FUNCTION_27	WHILE_1
0x40029f7	    0x8b0500000000	            mov eax, dword [0x040029fd] 	      1885	syntax.c	FUNCTION_27	WHILE_1
0x40029fd	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1885	syntax.c	FUNCTION_27	WHILE_1
0x4002a00	            0x7eb9	                           jle 0x40029bb	      1885	syntax.c	FUNCTION_27	WHILE_1
0x4002a02	          0x8b45fc	                mov eax, dword [rbp - 4]	      1892	syntax.c	FUNCTION_27
0x4002a05	              0xc9	                                   leave	      1893	syntax.c	FUNCTION_27
0x4002a06	              0xc3	                                     ret	      1893	syntax.c	FUNCTION_27
highlight_list_one	functions,0:IF,3:SWITCH,0:FOR,0:CALL,18:ELSE,0:WHILE,0:DO,0	202
0x4011cfc	              0x55	                                push rbp	      9216	syntax.c	FUNCTION_141
0x4011cfd	          0x4889e5	                            mov rbp, rsp	      9216	syntax.c	FUNCTION_141
0x4011d00	        0x4883ec20	                           sub rsp, 0x20	      9216	syntax.c	FUNCTION_141
0x4011d04	          0x897dec	             mov dword [rbp - 0x14], edi	      9216	syntax.c	FUNCTION_141
0x4011d07	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      9218	syntax.c	FUNCTION_141
0x4011d0e	    0x488b0d000000	            mov rcx, qword [0x04011d15] 	      9220	syntax.c	FUNCTION_141
0x4011d15	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9220	syntax.c	FUNCTION_141
0x4011d18	          0x4863d0	                         movsxd rdx, eax	      9220	syntax.c	FUNCTION_141
0x4011d1b	          0x4889d0	                            mov rax, rdx	      9220	syntax.c	FUNCTION_141
0x4011d1e	        0x48c1e003	                              shl rax, 3	      9220	syntax.c	FUNCTION_141
0x4011d22	          0x4801d0	                            add rax, rdx	      9220	syntax.c	FUNCTION_141
0x4011d25	          0x4801c0	                            add rax, rax	      9220	syntax.c	FUNCTION_141
0x4011d28	          0x4801d0	                            add rax, rdx	      9220	syntax.c	FUNCTION_141
0x4011d2b	        0x48c1e003	                              shl rax, 3	      9220	syntax.c	FUNCTION_141
0x4011d2f	    0x482d98000000	                           sub rax, 0x98	      9220	syntax.c	FUNCTION_141
0x4011d35	          0x4801c8	                            add rax, rcx	      9220	syntax.c	FUNCTION_141
0x4011d38	        0x488945f8	                mov qword [rbp - 8], rax	      9220	syntax.c	FUNCTION_141
0x4011d3c	        0x488b45f8	                mov rax, qword [rbp - 8]	      9222	syntax.c	FUNCTION_141	CALL_1
0x4011d40	          0x8b5014	            mov edx, dword [rax + 0x14] 	      9222	syntax.c	FUNCTION_141	CALL_1
0x4011d43	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9222	syntax.c	FUNCTION_141	CALL_1
0x4011d46	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9222	syntax.c	FUNCTION_141	CALL_1
0x4011d49	    0x41b900000000	                              mov r9d, 0	      9222	syntax.c	FUNCTION_141	CALL_1
0x4011d4f	    0x41b800000000	                              mov r8d, 0	      9222	syntax.c	FUNCTION_141	CALL_1
0x4011d55	            0x89d1	                            mov ecx, edx	      9222	syntax.c	FUNCTION_141	CALL_1
0x4011d57	      0xba01000000	                              mov edx, 1	      9222	syntax.c	FUNCTION_141	CALL_1
0x4011d5c	            0x89c7	                            mov edi, eax	      9222	syntax.c	FUNCTION_141	CALL_1
0x4011d5e	      0xe8b0020000	             call sym.highlight_list_arg	      9222	syntax.c	FUNCTION_141	CALL_1
0x4011d63	          0x8945f4	              mov dword [rbp - 0xc], eax	      9222	syntax.c	FUNCTION_141	CALL_1
0x4011d66	        0x488b45f8	                mov rax, qword [rbp - 8]	      9224	syntax.c	FUNCTION_141	CALL_2
0x4011d6a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9224	syntax.c	FUNCTION_141	CALL_2
0x4011d6e	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9224	syntax.c	FUNCTION_141	CALL_2
0x4011d71	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9224	syntax.c	FUNCTION_141	CALL_2
0x4011d74	    0x41b900000000	                              mov r9d, 0	      9224	syntax.c	FUNCTION_141	CALL_2
0x4011d7a	          0x4989d0	                             mov r8, rdx	      9224	syntax.c	FUNCTION_141	CALL_2
0x4011d7d	      0xb900000000	                              mov ecx, 0	      9224	syntax.c	FUNCTION_141	CALL_2
0x4011d82	      0xba02000000	                              mov edx, 2	      9224	syntax.c	FUNCTION_141	CALL_2
0x4011d87	            0x89c7	                            mov edi, eax	      9224	syntax.c	FUNCTION_141	CALL_2
0x4011d89	      0xe885020000	             call sym.highlight_list_arg	      9224	syntax.c	FUNCTION_141	CALL_2
0x4011d8e	          0x8945f4	              mov dword [rbp - 0xc], eax	      9224	syntax.c	FUNCTION_141	CALL_2
0x4011d91	        0x488b45f8	                mov rax, qword [rbp - 8]	      9226	syntax.c	FUNCTION_141	CALL_3
0x4011d95	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      9226	syntax.c	FUNCTION_141	CALL_3
0x4011d99	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9226	syntax.c	FUNCTION_141	CALL_3
0x4011d9c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9226	syntax.c	FUNCTION_141	CALL_3
0x4011d9f	    0x41b900000000	                              mov r9d, 0	      9226	syntax.c	FUNCTION_141	CALL_3
0x4011da5	          0x4989d0	                             mov r8, rdx	      9226	syntax.c	FUNCTION_141	CALL_3
0x4011da8	      0xb900000000	                              mov ecx, 0	      9226	syntax.c	FUNCTION_141	CALL_3
0x4011dad	      0xba02000000	                              mov edx, 2	      9226	syntax.c	FUNCTION_141	CALL_3
0x4011db2	            0x89c7	                            mov edi, eax	      9226	syntax.c	FUNCTION_141	CALL_3
0x4011db4	      0xe85a020000	             call sym.highlight_list_arg	      9226	syntax.c	FUNCTION_141	CALL_3
0x4011db9	          0x8945f4	              mov dword [rbp - 0xc], eax	      9226	syntax.c	FUNCTION_141	CALL_3
0x4011dbc	        0x488b45f8	                mov rax, qword [rbp - 8]	      9229	syntax.c	FUNCTION_141	CALL_4
0x4011dc0	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      9229	syntax.c	FUNCTION_141	CALL_4
0x4011dc3	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9229	syntax.c	FUNCTION_141	CALL_4
0x4011dc6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9229	syntax.c	FUNCTION_141	CALL_4
0x4011dc9	    0x41b900000000	                              mov r9d, 0	      9229	syntax.c	FUNCTION_141	CALL_4
0x4011dcf	    0x41b800000000	                              mov r8d, 0	      9229	syntax.c	FUNCTION_141	CALL_4
0x4011dd5	            0x89d1	                            mov ecx, edx	      9229	syntax.c	FUNCTION_141	CALL_4
0x4011dd7	      0xba01000000	                              mov edx, 1	      9229	syntax.c	FUNCTION_141	CALL_4
0x4011ddc	            0x89c7	                            mov edi, eax	      9229	syntax.c	FUNCTION_141	CALL_4
0x4011dde	      0xe830020000	             call sym.highlight_list_arg	      9229	syntax.c	FUNCTION_141	CALL_4
0x4011de3	          0x8945f4	              mov dword [rbp - 0xc], eax	      9229	syntax.c	FUNCTION_141	CALL_4
0x4011de6	        0x488b45f8	                mov rax, qword [rbp - 8]	      9231	syntax.c	FUNCTION_141	CALL_5
0x4011dea	          0x8b5034	            mov edx, dword [rax + 0x34] 	      9231	syntax.c	FUNCTION_141	CALL_5
0x4011ded	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9231	syntax.c	FUNCTION_141	CALL_5
0x4011df0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9231	syntax.c	FUNCTION_141	CALL_5
0x4011df3	    0x41b900000000	                              mov r9d, 0	      9231	syntax.c	FUNCTION_141	CALL_5
0x4011df9	    0x41b800000000	                              mov r8d, 0	      9231	syntax.c	FUNCTION_141	CALL_5
0x4011dff	            0x89d1	                            mov ecx, edx	      9231	syntax.c	FUNCTION_141	CALL_5
0x4011e01	      0xba03000000	                              mov edx, 3	      9231	syntax.c	FUNCTION_141	CALL_5
0x4011e06	            0x89c7	                            mov edi, eax	      9231	syntax.c	FUNCTION_141	CALL_5
0x4011e08	      0xe806020000	             call sym.highlight_list_arg	      9231	syntax.c	FUNCTION_141	CALL_5
0x4011e0d	          0x8945f4	              mov dword [rbp - 0xc], eax	      9231	syntax.c	FUNCTION_141	CALL_5
0x4011e10	        0x488b45f8	                mov rax, qword [rbp - 8]	      9233	syntax.c	FUNCTION_141	CALL_6
0x4011e14	          0x8b5038	            mov edx, dword [rax + 0x38] 	      9233	syntax.c	FUNCTION_141	CALL_6
0x4011e17	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9233	syntax.c	FUNCTION_141	CALL_6
0x4011e1a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9233	syntax.c	FUNCTION_141	CALL_6
0x4011e1d	    0x41b900000000	                              mov r9d, 0	      9233	syntax.c	FUNCTION_141	CALL_6
0x4011e23	    0x41b800000000	                              mov r8d, 0	      9233	syntax.c	FUNCTION_141	CALL_6
0x4011e29	            0x89d1	                            mov ecx, edx	      9233	syntax.c	FUNCTION_141	CALL_6
0x4011e2b	      0xba03000000	                              mov edx, 3	      9233	syntax.c	FUNCTION_141	CALL_6
0x4011e30	            0x89c7	                            mov edi, eax	      9233	syntax.c	FUNCTION_141	CALL_6
0x4011e32	      0xe8dc010000	             call sym.highlight_list_arg	      9233	syntax.c	FUNCTION_141	CALL_6
0x4011e37	          0x8945f4	              mov dword [rbp - 0xc], eax	      9233	syntax.c	FUNCTION_141	CALL_6
0x4011e3a	        0x488b45f8	                mov rax, qword [rbp - 8]	      9237	syntax.c	FUNCTION_141	CALL_7
0x4011e3e	          0x8b506c	            mov edx, dword [rax + 0x6c] 	      9237	syntax.c	FUNCTION_141	CALL_7
0x4011e41	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9237	syntax.c	FUNCTION_141	CALL_7
0x4011e44	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9237	syntax.c	FUNCTION_141	CALL_7
0x4011e47	    0x41b900000000	                              mov r9d, 0	      9237	syntax.c	FUNCTION_141	CALL_7
0x4011e4d	    0x41b800000000	                              mov r8d, 0	      9237	syntax.c	FUNCTION_141	CALL_7
0x4011e53	            0x89d1	                            mov ecx, edx	      9237	syntax.c	FUNCTION_141	CALL_7
0x4011e55	      0xba01000000	                              mov edx, 1	      9237	syntax.c	FUNCTION_141	CALL_7
0x4011e5a	            0x89c7	                            mov edi, eax	      9237	syntax.c	FUNCTION_141	CALL_7
0x4011e5c	      0xe8b2010000	             call sym.highlight_list_arg	      9237	syntax.c	FUNCTION_141	CALL_7
0x4011e61	          0x8945f4	              mov dword [rbp - 0xc], eax	      9237	syntax.c	FUNCTION_141	CALL_7
0x4011e64	        0x488b45f8	                mov rax, qword [rbp - 8]	      9239	syntax.c	FUNCTION_141	CALL_8
0x4011e68	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      9239	syntax.c	FUNCTION_141	CALL_8
0x4011e6c	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9239	syntax.c	FUNCTION_141	CALL_8
0x4011e6f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9239	syntax.c	FUNCTION_141	CALL_8
0x4011e72	    0x41b900000000	                              mov r9d, 0	      9239	syntax.c	FUNCTION_141	CALL_8
0x4011e78	          0x4989d0	                             mov r8, rdx	      9239	syntax.c	FUNCTION_141	CALL_8
0x4011e7b	      0xb900000000	                              mov ecx, 0	      9239	syntax.c	FUNCTION_141	CALL_8
0x4011e80	      0xba02000000	                              mov edx, 2	      9239	syntax.c	FUNCTION_141	CALL_8
0x4011e85	            0x89c7	                            mov edi, eax	      9239	syntax.c	FUNCTION_141	CALL_8
0x4011e87	      0xe887010000	             call sym.highlight_list_arg	      9239	syntax.c	FUNCTION_141	CALL_8
0x4011e8c	          0x8945f4	              mov dword [rbp - 0xc], eax	      9239	syntax.c	FUNCTION_141	CALL_8
0x4011e8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      9241	syntax.c	FUNCTION_141	CALL_9
0x4011e93	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      9241	syntax.c	FUNCTION_141	CALL_9
0x4011e97	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9241	syntax.c	FUNCTION_141	CALL_9
0x4011e9a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9241	syntax.c	FUNCTION_141	CALL_9
0x4011e9d	    0x41b900000000	                              mov r9d, 0	      9241	syntax.c	FUNCTION_141	CALL_9
0x4011ea3	          0x4989d0	                             mov r8, rdx	      9241	syntax.c	FUNCTION_141	CALL_9
0x4011ea6	      0xb900000000	                              mov ecx, 0	      9241	syntax.c	FUNCTION_141	CALL_9
0x4011eab	      0xba02000000	                              mov edx, 2	      9241	syntax.c	FUNCTION_141	CALL_9
0x4011eb0	            0x89c7	                            mov edi, eax	      9241	syntax.c	FUNCTION_141	CALL_9
0x4011eb2	      0xe85c010000	             call sym.highlight_list_arg	      9241	syntax.c	FUNCTION_141	CALL_9
0x4011eb7	          0x8945f4	              mov dword [rbp - 0xc], eax	      9241	syntax.c	FUNCTION_141	CALL_9
0x4011eba	        0x488b45f8	                mov rax, qword [rbp - 8]	      9243	syntax.c	FUNCTION_141	CALL_10
0x4011ebe	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      9243	syntax.c	FUNCTION_141	CALL_10
0x4011ec5	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9243	syntax.c	FUNCTION_141	CALL_10
0x4011ec8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9243	syntax.c	FUNCTION_141	CALL_10
0x4011ecb	    0x41b900000000	                              mov r9d, 0	      9243	syntax.c	FUNCTION_141	CALL_10
0x4011ed1	          0x4989d0	                             mov r8, rdx	      9243	syntax.c	FUNCTION_141	CALL_10
0x4011ed4	      0xb900000000	                              mov ecx, 0	      9243	syntax.c	FUNCTION_141	CALL_10
0x4011ed9	      0xba02000000	                              mov edx, 2	      9243	syntax.c	FUNCTION_141	CALL_10
0x4011ede	            0x89c7	                            mov edi, eax	      9243	syntax.c	FUNCTION_141	CALL_10
0x4011ee0	      0xe82e010000	             call sym.highlight_list_arg	      9243	syntax.c	FUNCTION_141	CALL_10
0x4011ee5	          0x8945f4	              mov dword [rbp - 0xc], eax	      9243	syntax.c	FUNCTION_141	CALL_10
0x4011ee8	        0x488b45f8	                mov rax, qword [rbp - 8]	      9247	syntax.c	FUNCTION_141	CALL_11
0x4011eec	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      9247	syntax.c	FUNCTION_141	CALL_11
0x4011ef0	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9247	syntax.c	FUNCTION_141	CALL_11
0x4011ef3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9247	syntax.c	FUNCTION_141	CALL_11
0x4011ef6	    0x41b900000000	                              mov r9d, 0	      9247	syntax.c	FUNCTION_141	CALL_11
0x4011efc	          0x4989d0	                             mov r8, rdx	      9247	syntax.c	FUNCTION_141	CALL_11
0x4011eff	      0xb900000000	                              mov ecx, 0	      9247	syntax.c	FUNCTION_141	CALL_11
0x4011f04	      0xba02000000	                              mov edx, 2	      9247	syntax.c	FUNCTION_141	CALL_11
0x4011f09	            0x89c7	                            mov edi, eax	      9247	syntax.c	FUNCTION_141	CALL_11
0x4011f0b	      0xe803010000	             call sym.highlight_list_arg	      9247	syntax.c	FUNCTION_141	CALL_11
0x4011f10	          0x8945f4	              mov dword [rbp - 0xc], eax	      9247	syntax.c	FUNCTION_141	CALL_11
0x4011f13	        0x488b45f8	                mov rax, qword [rbp - 8]	      9251	syntax.c	FUNCTION_141	IF_1
0x4011f17	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      9251	syntax.c	FUNCTION_141	IF_1
0x4011f1d	            0x85c0	                           test eax, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x4011f1f	     0xf84a5000000	                            je 0x4011fca	      9251	syntax.c	FUNCTION_141	IF_1
0x4011f25	    0x8b0500000000	            mov eax, dword [0x04011f2b] 	      9251	syntax.c	FUNCTION_141	IF_1
0x4011f2b	            0x85c0	                           test eax, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x4011f2d	     0xf8597000000	                           jne 0x4011fca	      9251	syntax.c	FUNCTION_141	IF_1
0x4011f33	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x4011f36	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x4011f39	      0xbe0f270000	                         mov esi, 0x270f	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x4011f3e	            0x89c7	                            mov edi, eax	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x4011f40	      0xe83f0a0000	                call sym.syn_list_header	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x4011f45	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      9254	syntax.c	FUNCTION_141	IF_1
0x4011f4c	    0x8b0500000000	            mov eax, dword [0x04011f52] 	      9255	syntax.c	FUNCTION_141	IF_1	CALL_14
0x4011f52	            0x89c6	                            mov esi, eax	      9255	syntax.c	FUNCTION_141	IF_1	CALL_14
0x4011f54	      0xbf00000000	                              mov edi, 0	      9255	syntax.c	FUNCTION_141	IF_1	CALL_14
0x4011f59	      0xe800000000	                          call 0x4011f5e	      9255	syntax.c	FUNCTION_141	IF_1	CALL_14
0x4011f5e	      0xbf20000000	                           mov edi, 0x20	      9256	syntax.c	FUNCTION_141	IF_1	CALL_15
0x4011f63	      0xe800000000	                          call 0x4011f68	      9256	syntax.c	FUNCTION_141	IF_1	CALL_15
0x4011f68	    0x488b0d000000	            mov rcx, qword [0x04011f6f] 	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f6f	    0x488b35000000	            mov rsi, qword [0x04011f76] 	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f76	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f79	          0x4863d0	                         movsxd rdx, eax	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f7c	          0x4889d0	                            mov rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f7f	        0x48c1e003	                              shl rax, 3	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f83	          0x4801d0	                            add rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f86	          0x4801c0	                            add rax, rax	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f89	          0x4801d0	                            add rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f8c	        0x48c1e003	                              shl rax, 3	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f90	    0x482d98000000	                           sub rax, 0x98	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f96	          0x4801f0	                            add rax, rsi	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f99	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011f9f	          0x4863d0	                         movsxd rdx, eax	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011fa2	          0x4889d0	                            mov rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011fa5	        0x48c1e003	                              shl rax, 3	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011fa9	          0x4801d0	                            add rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011fac	          0x4801c0	                            add rax, rax	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011faf	          0x4801d0	                            add rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011fb2	        0x48c1e003	                              shl rax, 3	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011fb6	    0x482d98000000	                           sub rax, 0x98	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011fbc	          0x4801c8	                            add rax, rcx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011fbf	          0x488b00	                    mov rax, qword [rax]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011fc2	          0x4889c7	                            mov rdi, rax	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011fc5	      0xe800000000	                          call 0x4011fca	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4011fca	        0x837df400	                cmp dword [rbp - 0xc], 0	      9260	syntax.c	FUNCTION_141	IF_2
0x4011fce	            0x7523	                           jne 0x4011ff3	      9260	syntax.c	FUNCTION_141	IF_2
0x4011fd0	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9261	syntax.c	FUNCTION_141	CALL_17
0x4011fd3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9261	syntax.c	FUNCTION_141	CALL_17
0x4011fd6	    0x41b900000000	                              mov r9d, 0	      9261	syntax.c	FUNCTION_141	CALL_17
0x4011fdc	    0x41b800000000	                              mov r8d, 0	      9261	syntax.c	FUNCTION_141	CALL_17
0x4011fe2	      0xb900000000	                              mov ecx, 0	      9261	syntax.c	FUNCTION_141	CALL_17
0x4011fe7	      0xba02000000	                              mov edx, 2	      9261	syntax.c	FUNCTION_141	CALL_17
0x4011fec	            0x89c7	                            mov edi, eax	      9261	syntax.c	FUNCTION_141	CALL_17
0x4011fee	      0xe820000000	             call sym.highlight_list_arg	      9261	syntax.c	FUNCTION_141	CALL_17
0x4011ff3	    0x488b05000000	            mov rax, qword [0x04011ffa] 	      9263	syntax.c	FUNCTION_141	IF_3
0x4011ffa	          0x4885c0	                           test rax, rax	      9263	syntax.c	FUNCTION_141	IF_3
0x4011ffd	            0x7e11	                           jle 0x4012010	      9263	syntax.c	FUNCTION_141	IF_3
0x4011fff	        0x488b45f8	                mov rax, qword [rbp - 8]	      9264	syntax.c	FUNCTION_141	CALL_18
0x4012003	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      9264	syntax.c	FUNCTION_141	CALL_18
0x4012009	            0x89c7	                            mov edi, eax	      9264	syntax.c	FUNCTION_141	CALL_18
0x401200b	      0xe800000000	                          call 0x4012010	      9264	syntax.c	FUNCTION_141	CALL_18
0x4012010	              0x90	                                     nop	      9266	syntax.c	FUNCTION_141
0x4012011	              0xc9	                                   leave	      9266	syntax.c	FUNCTION_141
0x4012012	              0xc3	                                     ret	      9266	syntax.c	FUNCTION_141
set_context_in_echohl_cmd	functions,0:IF,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	13
0x400c908	              0x55	                                push rbp	      6477	syntax.c	FUNCTION_99
0x400c909	          0x4889e5	                            mov rbp, rsp	      6477	syntax.c	FUNCTION_99
0x400c90c	        0x48897df8	                mov qword [rbp - 8], rdi	      6477	syntax.c	FUNCTION_99
0x400c910	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6477	syntax.c	FUNCTION_99
0x400c914	        0x488b45f8	                mov rax, qword [rbp - 8]	      6478	syntax.c	FUNCTION_99
0x400c918	    0xc7000d000000	                    mov dword [rax], 0xd	      6478	syntax.c	FUNCTION_99
0x400c91e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6479	syntax.c	FUNCTION_99
0x400c922	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6479	syntax.c	FUNCTION_99
0x400c926	        0x48895008	                mov qword [rax + 8], rdx	      6479	syntax.c	FUNCTION_99
0x400c92a	    0xc70500000000	               mov dword [0x0400c934], 1	      6480	syntax.c	FUNCTION_99
0x400c934	              0x90	                                     nop	      6481	syntax.c	FUNCTION_99
0x400c935	              0x5d	                                 pop rbp	      6481	syntax.c	FUNCTION_99
0x400c936	              0xc3	                                     ret	      6481	syntax.c	FUNCTION_99
highlight_exists	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	12
0x4012ebd	              0x55	                                push rbp	      9668	syntax.c	FUNCTION_150
0x4012ebe	          0x4889e5	                            mov rbp, rsp	      9668	syntax.c	FUNCTION_150
0x4012ec1	        0x4883ec10	                           sub rsp, 0x10	      9668	syntax.c	FUNCTION_150
0x4012ec5	        0x48897df8	                mov qword [rbp - 8], rdi	      9668	syntax.c	FUNCTION_150
0x4012ec9	        0x488b45f8	                mov rax, qword [rbp - 8]	      9669	syntax.c	FUNCTION_150	CALL_1
0x4012ecd	          0x4889c7	                            mov rdi, rax	      9669	syntax.c	FUNCTION_150	CALL_1
0x4012ed0	      0xe800000000	                          call 0x4012ed5	      9669	syntax.c	FUNCTION_150	CALL_1
0x4012ed5	            0x85c0	                           test eax, eax	      9669	syntax.c	FUNCTION_150	CALL_1
0x4012ed7	           0xf9fc0	                                 setg al	      9669	syntax.c	FUNCTION_150	CALL_1
0x4012eda	           0xfb6c0	                           movzx eax, al	      9669	syntax.c	FUNCTION_150	CALL_1
0x4012edd	              0xc9	                                   leave	      9670	syntax.c	FUNCTION_150
0x4012ede	              0xc3	                                     ret	      9670	syntax.c	FUNCTION_150
add_keyword	functions,0:IF,5:SWITCH,0:FOR,0:CALL,11:ELSE,3:WHILE,0:DO,0	138
0x40083d1	              0x55	                                push rbp	      4523	syntax.c	FUNCTION_74
0x40083d2	          0x4889e5	                            mov rbp, rsp	      4523	syntax.c	FUNCTION_74
0x40083d5	    0x4881ecc00000	                           sub rsp, 0xc0	      4523	syntax.c	FUNCTION_74
0x40083dc	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      4523	syntax.c	FUNCTION_74
0x40083e3	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      4523	syntax.c	FUNCTION_74
0x40083e9	    0x899560ffffff	             mov dword [rbp - 0xa0], edx	      4523	syntax.c	FUNCTION_74
0x40083ef	    0x48898d58ffff	             mov qword [rbp - 0xa8], rcx	      4523	syntax.c	FUNCTION_74
0x40083f6	    0x4c898550ffff	              mov qword [rbp - 0xb0], r8	      4523	syntax.c	FUNCTION_74
0x40083fd	    0x44898d4cffff	             mov dword [rbp - 0xb4], r9d	      4523	syntax.c	FUNCTION_74
0x4008404	    0x64488b042528	                mov rax, qword fs:[0x28]	      4523	syntax.c	FUNCTION_74
0x400840d	        0x488945f8	                mov qword [rbp - 8], rax	      4523	syntax.c	FUNCTION_74
0x4008411	            0x31c0	                            xor eax, eax	      4523	syntax.c	FUNCTION_74
0x4008413	    0x488b05000000	            mov rax, qword [0x0400841a] 	      4531	syntax.c	FUNCTION_74	IF_1
0x400841a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4531	syntax.c	FUNCTION_74	IF_1
0x400841e	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      4531	syntax.c	FUNCTION_74	IF_1
0x4008424	            0x85c0	                           test eax, eax	      4531	syntax.c	FUNCTION_74	IF_1
0x4008426	            0x742f	                            je 0x4008457	      4531	syntax.c	FUNCTION_74	IF_1
0x4008428	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400842f	          0x4889c7	                            mov rdi, rax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008432	      0xe800000000	                          call 0x4008437	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008437	            0x89c6	                            mov esi, eax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008439	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400843d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008444	      0xb951000000	                           mov ecx, 0x51	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008449	          0x4889c7	                            mov rdi, rax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400844c	      0xe800000000	                          call 0x4008451	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008451	        0x48894580	             mov qword [rbp - 0x80], rax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008455	            0xeb0b	                           jmp 0x4008462	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008457	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4535	syntax.c	FUNCTION_74	ELSE_1
0x400845e	        0x48894580	             mov qword [rbp - 0x80], rax	      4535	syntax.c	FUNCTION_74	ELSE_1
0x4008462	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4536	syntax.c	FUNCTION_74	CALL_4
0x4008466	          0x4889c7	                            mov rdi, rax	      4536	syntax.c	FUNCTION_74	CALL_4
0x4008469	      0xe800000000	                          call 0x400846e	      4536	syntax.c	FUNCTION_74	CALL_4
0x400846e	          0x83c030	                           add eax, 0x30	      4536	syntax.c	FUNCTION_74	CALL_4
0x4008471	            0x89c7	                            mov edi, eax	      4536	syntax.c	FUNCTION_74	CALL_4
0x4008473	      0xe800000000	                          call 0x4008478	      4536	syntax.c	FUNCTION_74	CALL_4
0x4008478	        0x48894588	             mov qword [rbp - 0x78], rax	      4536	syntax.c	FUNCTION_74	CALL_4
0x400847c	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4537	syntax.c	FUNCTION_74	IF_2
0x4008481	     0xf848c010000	                            je 0x4008613	      4537	syntax.c	FUNCTION_74	IF_2
0x4008487	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4539	syntax.c	FUNCTION_74	CALL_5
0x400848b	        0x488d5028	                   lea rdx, [rax + 0x28]	      4539	syntax.c	FUNCTION_74	CALL_5
0x400848f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4539	syntax.c	FUNCTION_74	CALL_5
0x4008493	          0x4889c6	                            mov rsi, rax	      4539	syntax.c	FUNCTION_74	CALL_5
0x4008496	          0x4889d7	                            mov rdi, rdx	      4539	syntax.c	FUNCTION_74	CALL_5
0x4008499	      0xe800000000	                          call 0x400849e	      4539	syntax.c	FUNCTION_74	CALL_5
0x400849e	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      4540	syntax.c	FUNCTION_74
0x40084a4	            0x89c2	                            mov edx, eax	      4540	syntax.c	FUNCTION_74
0x40084a6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4540	syntax.c	FUNCTION_74
0x40084aa	        0x6689500c	                mov word [rax + 0xc], dx	      4540	syntax.c	FUNCTION_74
0x40084ae	    0x8b1500000000	            mov edx, dword [0x040084b4] 	      4541	syntax.c	FUNCTION_74
0x40084b4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4541	syntax.c	FUNCTION_74
0x40084b8	          0x895008	                mov dword [rax + 8], edx	      4541	syntax.c	FUNCTION_74
0x40084bb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4542	syntax.c	FUNCTION_74
0x40084bf	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      4542	syntax.c	FUNCTION_74
0x40084c5	          0x895020	             mov dword [rax + 0x20], edx	      4542	syntax.c	FUNCTION_74
0x40084c8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4543	syntax.c	FUNCTION_74
0x40084cc	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      4543	syntax.c	FUNCTION_74
0x40084d2	          0x895024	             mov dword [rax + 0x24], edx	      4543	syntax.c	FUNCTION_74
0x40084d5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4544	syntax.c	FUNCTION_74	CALL_6
0x40084dc	          0x4889c7	                            mov rdi, rax	      4544	syntax.c	FUNCTION_74	CALL_6
0x40084df	      0xe83f3d0000	                   call sym.copy_id_list	      4544	syntax.c	FUNCTION_74	CALL_6
0x40084e4	          0x4889c2	                            mov rdx, rax	      4544	syntax.c	FUNCTION_74	CALL_6
0x40084e7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4544	syntax.c	FUNCTION_74	CALL_6
0x40084eb	        0x48895010	             mov qword [rax + 0x10], rdx	      4544	syntax.c	FUNCTION_74	CALL_6
0x40084ef	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4545	syntax.c	FUNCTION_74	IF_3
0x40084f7	            0x7415	                            je 0x400850e	      4545	syntax.c	FUNCTION_74	IF_3
0x40084f9	    0x488b05000000	            mov rax, qword [0x04008500] 	      4546	syntax.c	FUNCTION_74	IF_3
0x4008500	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4546	syntax.c	FUNCTION_74	IF_3
0x4008504	    0xc78098020000	              mov dword [rax + 0x298], 1	      4546	syntax.c	FUNCTION_74	IF_3
0x400850e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4547	syntax.c	FUNCTION_74	CALL_7
0x4008515	          0x4889c7	                            mov rdi, rax	      4547	syntax.c	FUNCTION_74	CALL_7
0x4008518	      0xe8063d0000	                   call sym.copy_id_list	      4547	syntax.c	FUNCTION_74	CALL_7
0x400851d	          0x4889c2	                            mov rdx, rax	      4547	syntax.c	FUNCTION_74	CALL_7
0x4008520	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4547	syntax.c	FUNCTION_74	CALL_7
0x4008524	        0x48895018	             mov qword [rax + 0x18], rdx	      4547	syntax.c	FUNCTION_74	CALL_7
0x4008528	    0x488b05000000	            mov rax, qword [0x0400852f] 	      4549	syntax.c	FUNCTION_74	IF_4
0x400852f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4549	syntax.c	FUNCTION_74	IF_4
0x4008533	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      4549	syntax.c	FUNCTION_74	IF_4
0x4008539	            0x85c0	                           test eax, eax	      4549	syntax.c	FUNCTION_74	IF_4
0x400853b	            0x741a	                            je 0x4008557	      4549	syntax.c	FUNCTION_74	IF_4
0x400853d	    0x488b05000000	            mov rax, qword [0x04008544] 	      4550	syntax.c	FUNCTION_74	IF_4
0x4008544	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4550	syntax.c	FUNCTION_74	IF_4
0x4008548	    0x480528010000	                          add rax, 0x128	      4550	syntax.c	FUNCTION_74	IF_4
0x400854e	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4550	syntax.c	FUNCTION_74	IF_4
0x4008555	            0xeb12	                           jmp 0x4008569	      4550	syntax.c	FUNCTION_74	IF_4
0x4008557	    0x488b05000000	            mov rax, qword [0x0400855e] 	      4552	syntax.c	FUNCTION_74	ELSE_2
0x400855e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4552	syntax.c	FUNCTION_74	ELSE_2
0x4008562	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4552	syntax.c	FUNCTION_74	ELSE_2
0x4008569	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4554	syntax.c	FUNCTION_74	CALL_8
0x400856d	        0x4883c028	                           add rax, 0x28	      4554	syntax.c	FUNCTION_74	CALL_8
0x4008571	          0x4889c7	                            mov rdi, rax	      4554	syntax.c	FUNCTION_74	CALL_8
0x4008574	      0xe800000000	                          call 0x4008579	      4554	syntax.c	FUNCTION_74	CALL_8
0x4008579	        0x48894590	             mov qword [rbp - 0x70], rax	      4554	syntax.c	FUNCTION_74	CALL_8
0x400857d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4555	syntax.c	FUNCTION_74	CALL_9
0x4008581	        0x488d4828	                   lea rcx, [rax + 0x28]	      4555	syntax.c	FUNCTION_74	CALL_9
0x4008585	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4555	syntax.c	FUNCTION_74	CALL_9
0x4008589	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4555	syntax.c	FUNCTION_74	CALL_9
0x4008590	          0x4889ce	                            mov rsi, rcx	      4555	syntax.c	FUNCTION_74	CALL_9
0x4008593	          0x4889c7	                            mov rdi, rax	      4555	syntax.c	FUNCTION_74	CALL_9
0x4008596	      0xe800000000	                          call 0x400859b	      4555	syntax.c	FUNCTION_74	CALL_9
0x400859b	        0x48894598	             mov qword [rbp - 0x68], rax	      4555	syntax.c	FUNCTION_74	CALL_9
0x400859f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40085a3	        0x488b4008	                mov rax, qword [rax + 8]	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40085a7	          0x4885c0	                           test rax, rax	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40085aa	            0x7410	                            je 0x40085bc	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40085ac	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40085b0	        0x488b4008	                mov rax, qword [rax + 8]	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40085b4	    0x483d00000000	                              cmp rax, 0	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40085ba	            0x7532	                           jne 0x40085ee	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x40085bc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4559	syntax.c	FUNCTION_74	IF_5
0x40085c0	    0x48c700000000	                      mov qword [rax], 0	      4559	syntax.c	FUNCTION_74	IF_5
0x40085c7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40085cb	        0x488d7828	                   lea rdi, [rax + 0x28]	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40085cf	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40085d3	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40085d7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40085de	          0x4889d1	                            mov rcx, rdx	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40085e1	          0x4889fa	                            mov rdx, rdi	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40085e4	          0x4889c7	                            mov rdi, rax	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40085e7	      0xe800000000	                          call 0x40085ec	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40085ec	            0xeb26	                           jmp 0x4008614	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40085ee	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4565	syntax.c	FUNCTION_74	ELSE_3
0x40085f2	        0x488b4008	                mov rax, qword [rax + 8]	      4565	syntax.c	FUNCTION_74	ELSE_3
0x40085f6	        0x488d50d8	                   lea rdx, [rax - 0x28]	      4565	syntax.c	FUNCTION_74	ELSE_3
0x40085fa	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4565	syntax.c	FUNCTION_74	ELSE_3
0x40085fe	          0x488910	                    mov qword [rax], rdx	      4565	syntax.c	FUNCTION_74	ELSE_3
0x4008601	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4566	syntax.c	FUNCTION_74	ELSE_3
0x4008605	        0x488d5028	                   lea rdx, [rax + 0x28]	      4566	syntax.c	FUNCTION_74	ELSE_3
0x4008609	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4566	syntax.c	FUNCTION_74	ELSE_3
0x400860d	        0x48895008	                mov qword [rax + 8], rdx	      4566	syntax.c	FUNCTION_74	ELSE_3
0x4008611	            0xeb01	                           jmp 0x4008614	      4566	syntax.c	FUNCTION_74	ELSE_3
0x4008613	              0x90	                                     nop	      4538	syntax.c	FUNCTION_74	IF_2
0x4008614	        0x488b45f8	                mov rax, qword [rbp - 8]	      4568	syntax.c	FUNCTION_74
0x4008618	    0x644833042528	                xor rax, qword fs:[0x28]	      4568	syntax.c	FUNCTION_74
0x4008621	            0x7405	                            je 0x4008628	      4568	syntax.c	FUNCTION_74
0x4008623	      0xe800000000	                          call 0x4008628	      4568	syntax.c	FUNCTION_74
0x4008628	              0xc9	                                   leave	      4568	syntax.c	FUNCTION_74
0x4008629	              0xc3	                                     ret	      4568	syntax.c	FUNCTION_74
syn_clear_keyword	functions,0:IF,4:SWITCH,0:FOR,2:CALL,7:ELSE,3:WHILE,0:DO,0	86
0x40081bd	              0x55	                                push rbp	      4437	syntax.c	FUNCTION_72
0x40081be	          0x4889e5	                            mov rbp, rsp	      4437	syntax.c	FUNCTION_72
0x40081c1	        0x4883ec40	                           sub rsp, 0x40	      4437	syntax.c	FUNCTION_72
0x40081c5	          0x897dcc	             mov dword [rbp - 0x34], edi	      4437	syntax.c	FUNCTION_72
0x40081c8	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4437	syntax.c	FUNCTION_72
0x40081cc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4444	syntax.c	FUNCTION_72	CALL_1
0x40081d0	          0x4889c7	                            mov rdi, rax	      4444	syntax.c	FUNCTION_72	CALL_1
0x40081d3	      0xe800000000	                          call 0x40081d8	      4444	syntax.c	FUNCTION_72	CALL_1
0x40081d8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4445	syntax.c	FUNCTION_72
0x40081dc	        0x488b4008	                mov rax, qword [rax + 8]	      4445	syntax.c	FUNCTION_72
0x40081e0	          0x8945dc	             mov dword [rbp - 0x24], eax	      4445	syntax.c	FUNCTION_72
0x40081e3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4446	syntax.c	FUNCTION_72	FOR_1
0x40081e7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4446	syntax.c	FUNCTION_72	FOR_1
0x40081eb	        0x488945e0	             mov qword [rbp - 0x20], rax	      4446	syntax.c	FUNCTION_72	FOR_1
0x40081ef	      0xe9fc000000	                           jmp 0x40082f0	      4446	syntax.c	FUNCTION_72	FOR_1
0x40081f4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x40081f8	        0x488b4008	                mov rax, qword [rax + 8]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x40081fc	          0x4885c0	                           test rax, rax	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x40081ff	     0xf84e6000000	                            je 0x40082eb	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4008205	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4008209	        0x488b4008	                mov rax, qword [rax + 8]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x400820d	    0x483d00000000	                              cmp rax, 0	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4008213	     0xf84d2000000	                            je 0x40082eb	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4008219	        0x836ddc01	               sub dword [rbp - 0x24], 1	      4450	syntax.c	FUNCTION_72	FOR_1	IF_1
0x400821d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4451	syntax.c	FUNCTION_72	FOR_1	IF_1
0x4008225	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4008229	        0x488b4008	                mov rax, qword [rax + 8]	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400822d	        0x4883e828	                           sub rax, 0x28	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4008231	        0x488945e8	             mov qword [rbp - 0x18], rax	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4008235	      0xe9a6000000	                           jmp 0x40082e0	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400823a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400823e	         0xfb7400c	            movzx eax, word [rax + 0xc] 	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4008242	              0x98	                                    cwde	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4008243	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4008246	     0xf8581000000	                           jne 0x40082cd	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400824c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4008250	          0x488b00	                    mov rax, qword [rax]	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4008253	        0x488945f8	                mov qword [rbp - 8], rax	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4008257	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400825c	            0x752e	                           jne 0x400828c	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400825e	      0x48837df800	                  cmp qword [rbp - 8], 0	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x4008263	            0x7515	                           jne 0x400827a	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x4008265	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x4008269	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x400826d	          0x4889d6	                            mov rsi, rdx	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x4008270	          0x4889c7	                            mov rdi, rax	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x4008273	      0xe800000000	                          call 0x4008278	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x4008278	            0xeb1d	                           jmp 0x4008297	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x400827a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x400827e	        0x488d5028	                   lea rdx, [rax + 0x28]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x4008282	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x4008286	        0x48895008	                mov qword [rax + 8], rdx	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x400828a	            0xeb0b	                           jmp 0x4008297	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x400828c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4465	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	ELSE_2
0x4008290	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4465	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	ELSE_2
0x4008294	          0x488910	                    mov qword [rax], rdx	      4465	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	ELSE_2
0x4008297	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_4
0x400829b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_4
0x400829f	          0x4889c7	                            mov rdi, rax	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_4
0x40082a2	      0xe800000000	                          call 0x40082a7	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_4
0x40082a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_5
0x40082ab	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_5
0x40082af	          0x4889c7	                            mov rdi, rax	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_5
0x40082b2	      0xe800000000	                          call 0x40082b7	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_5
0x40082b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x40082bb	          0x4889c7	                            mov rdi, rax	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x40082be	      0xe800000000	                          call 0x40082c3	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x40082c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4469	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x40082c7	        0x488945e8	             mov qword [rbp - 0x18], rax	      4469	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x40082cb	            0xeb13	                           jmp 0x40082e0	      4469	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x40082cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4473	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x40082d1	        0x488945f0	             mov qword [rbp - 0x10], rax	      4473	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x40082d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x40082d9	          0x488b00	                    mov rax, qword [rax]	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x40082dc	        0x488945e8	             mov qword [rbp - 0x18], rax	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x40082e0	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x40082e5	     0xf854fffffff	                           jne 0x400823a	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x40082eb	      0x488345e010	            add qword [rbp - 0x20], 0x10	      4446	syntax.c	FUNCTION_72	FOR_1
0x40082f0	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4446	syntax.c	FUNCTION_72	FOR_1
0x40082f4	     0xf8ffafeffff	                            jg 0x40081f4	      4446	syntax.c	FUNCTION_72	FOR_1
0x40082fa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4479	syntax.c	FUNCTION_72	CALL_7
0x40082fe	          0x4889c7	                            mov rdi, rax	      4479	syntax.c	FUNCTION_72	CALL_7
0x4008301	      0xe800000000	                          call 0x4008306	      4479	syntax.c	FUNCTION_72	CALL_7
0x4008306	              0x90	                                     nop	      4480	syntax.c	FUNCTION_72
0x4008307	              0xc9	                                   leave	      4480	syntax.c	FUNCTION_72
0x4008308	              0xc3	                                     ret	      4480	syntax.c	FUNCTION_72
get_syntime_arg	functions,0:IF,0:SWITCH,1:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	28
0x400cf32	              0x55	                                push rbp	      6725	syntax.c	FUNCTION_110
0x400cf33	          0x4889e5	                            mov rbp, rsp	      6725	syntax.c	FUNCTION_110
0x400cf36	        0x48897df8	                mov qword [rbp - 8], rdi	      6725	syntax.c	FUNCTION_110
0x400cf3a	          0x8975f4	              mov dword [rbp - 0xc], esi	      6725	syntax.c	FUNCTION_110
0x400cf3d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf40	          0x83f801	                              cmp eax, 1	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf43	            0x741e	                            je 0x400cf63	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf45	          0x83f801	                              cmp eax, 1	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf48	            0x7f06	                            jg 0x400cf50	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf4a	            0x85c0	                           test eax, eax	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf4c	            0x740e	                            je 0x400cf5c	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf4e	            0xeb28	                           jmp 0x400cf78	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf50	          0x83f802	                              cmp eax, 2	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf53	            0x7415	                            je 0x400cf6a	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf55	          0x83f803	                              cmp eax, 3	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf58	            0x7417	                            je 0x400cf71	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf5a	            0xeb1c	                           jmp 0x400cf78	      6726	syntax.c	FUNCTION_110	SWITCH_1
0x400cf5c	      0xb800000000	                              mov eax, 0	      6728	syntax.c	FUNCTION_110	SWITCH_1
0x400cf61	            0xeb1a	                           jmp 0x400cf7d	      6728	syntax.c	FUNCTION_110	SWITCH_1
0x400cf63	      0xb800000000	                              mov eax, 0	      6729	syntax.c	FUNCTION_110	SWITCH_1
0x400cf68	            0xeb13	                           jmp 0x400cf7d	      6729	syntax.c	FUNCTION_110	SWITCH_1
0x400cf6a	      0xb800000000	                              mov eax, 0	      6730	syntax.c	FUNCTION_110	SWITCH_1
0x400cf6f	            0xeb0c	                           jmp 0x400cf7d	      6730	syntax.c	FUNCTION_110	SWITCH_1
0x400cf71	      0xb800000000	                              mov eax, 0	      6731	syntax.c	FUNCTION_110	SWITCH_1
0x400cf76	            0xeb05	                           jmp 0x400cf7d	      6731	syntax.c	FUNCTION_110	SWITCH_1
0x400cf78	      0xb800000000	                              mov eax, 0	      6733	syntax.c	FUNCTION_110
0x400cf7d	              0x5d	                                 pop rbp	      6734	syntax.c	FUNCTION_110
0x400cf7e	              0xc3	                                     ret	      6734	syntax.c	FUNCTION_110
syn_stack_cleanup	functions,0:IF,7:SWITCH,0:FOR,2:CALL,1:ELSE,2:WHILE,0:DO,0	129
0x4001875	              0x55	                                push rbp	      1374	syntax.c	FUNCTION_16
0x4001876	          0x4889e5	                            mov rbp, rsp	      1374	syntax.c	FUNCTION_16
0x4001879	        0x4883ec20	                           sub rsp, 0x20	      1374	syntax.c	FUNCTION_16
0x400187d	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1379	syntax.c	FUNCTION_16
0x4001884	    0x488b05000000	            mov rax, qword [0x0400188b] 	      1381	syntax.c	FUNCTION_16	IF_1
0x400188b	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1381	syntax.c	FUNCTION_16	IF_1
0x4001892	          0x4885c0	                           test rax, rax	      1381	syntax.c	FUNCTION_16	IF_1
0x4001895	            0x7413	                            je 0x40018aa	      1381	syntax.c	FUNCTION_16	IF_1
0x4001897	    0x488b05000000	            mov rax, qword [0x0400189e] 	      1381	syntax.c	FUNCTION_16	IF_1
0x400189e	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1381	syntax.c	FUNCTION_16	IF_1
0x40018a5	          0x4885c0	                           test rax, rax	      1381	syntax.c	FUNCTION_16	IF_1
0x40018a8	            0x7508	                           jne 0x40018b2	      1381	syntax.c	FUNCTION_16	IF_1
0x40018aa	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1382	syntax.c	FUNCTION_16	IF_1
0x40018ad	      0xe9dd010000	                           jmp 0x4001a8f	      1382	syntax.c	FUNCTION_16	IF_1
0x40018b2	    0x488b05000000	            mov rax, qword [0x040018b9] 	      1385	syntax.c	FUNCTION_16	IF_2
0x40018b9	    0x8b8018030000	           mov eax, dword [rax + 0x318] 	      1385	syntax.c	FUNCTION_16	IF_2
0x40018bf	          0x4863d0	                         movsxd rdx, eax	      1385	syntax.c	FUNCTION_16	IF_2
0x40018c2	    0x488b05000000	            mov rax, qword [0x040018c9] 	      1385	syntax.c	FUNCTION_16	IF_2
0x40018c9	          0x4839c2	                            cmp rdx, rax	      1385	syntax.c	FUNCTION_16	IF_2
0x40018cc	            0x7f09	                            jg 0x40018d7	      1385	syntax.c	FUNCTION_16	IF_2
0x40018ce	    0xc745e83f420f	         mov dword [rbp - 0x18], 0xf423f	      1386	syntax.c	FUNCTION_16	IF_2
0x40018d5	            0xeb32	                           jmp 0x4001909	      1386	syntax.c	FUNCTION_16	IF_2
0x40018d7	    0x488b05000000	            mov rax, qword [0x040018de] 	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40018de	          0x488b00	                    mov rax, qword [rax]	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40018e1	    0x488b15000000	            mov rdx, qword [0x040018e8] 	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40018e8	    0x8b9218030000	           mov edx, dword [rdx + 0x318] 	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40018ee	          0x4863ca	                         movsxd rcx, edx	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40018f1	    0x488b15000000	            mov rdx, qword [0x040018f8] 	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40018f8	          0x4829d1	                            sub rcx, rdx	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40018fb	          0x4889ce	                            mov rsi, rcx	      1388	syntax.c	FUNCTION_16	ELSE_1
0x40018fe	            0x4899	                                     cqo	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4001900	          0x48f7fe	                                idiv rsi	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4001903	          0x83c001	                              add eax, 1	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4001906	          0x8945e8	             mov dword [rbp - 0x18], eax	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4001909	    0x488b05000000	            mov rax, qword [0x04001910] 	      1395	syntax.c	FUNCTION_16
0x4001910	     0xfb780400300	          movzx eax, word [rax + 0x340] 	      1395	syntax.c	FUNCTION_16
0x4001917	        0x668945e2	               mov word [rbp - 0x1e], ax	      1395	syntax.c	FUNCTION_16
0x400191b	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1396	syntax.c	FUNCTION_16
0x4001922	    0x488b05000000	            mov rax, qword [0x04001929] 	      1397	syntax.c	FUNCTION_16
0x4001929	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1397	syntax.c	FUNCTION_16
0x4001930	        0x488945f8	                mov qword [rbp - 8], rax	      1397	syntax.c	FUNCTION_16
0x4001934	        0x488b45f8	                mov rax, qword [rbp - 8]	      1398	syntax.c	FUNCTION_16	FOR_1
0x4001938	          0x488b00	                    mov rax, qword [rax]	      1398	syntax.c	FUNCTION_16	FOR_1
0x400193b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1398	syntax.c	FUNCTION_16	FOR_1
0x400193f	      0xe9a3000000	                           jmp 0x40019e7	      1398	syntax.c	FUNCTION_16	FOR_1
0x4001944	        0x488b45f8	                mov rax, qword [rbp - 8]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4001948	        0x488b5008	                mov rdx, qword [rax + 8]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x400194c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x400194f	            0x4898	                                    cdqe	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4001951	          0x4801c2	                            add rdx, rax	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4001954	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4001958	        0x488b4008	                mov rax, qword [rax + 8]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x400195c	          0x4839c2	                            cmp rdx, rax	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x400195f	            0x7e73	                           jle 0x40019d4	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4001961	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4001965	     0xfb790c80000	           movzx edx, word [rax + 0xc8] 	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x400196c	    0x488b05000000	            mov rax, qword [0x04001973] 	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4001973	     0xfb780400300	          movzx eax, word [rax + 0x340] 	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x400197a	          0x6639c2	                              cmp dx, ax	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x400197d	            0x762f	                           jbe 0x40019ae	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x400197f	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4001983	            0x7411	                            je 0x4001996	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4001985	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4001989	     0xfb780c80000	           movzx eax, word [rax + 0xc8] 	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4001990	        0x663b45e2	               cmp ax, word [rbp - 0x1e]	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4001994	            0x730f	                           jae 0x40019a5	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4001996	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1405	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x400199a	     0xfb780c80000	           movzx eax, word [rax + 0xc8] 	      1405	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x40019a1	        0x668945e2	               mov word [rbp - 0x1e], ax	      1405	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x40019a5	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x40019ac	            0xeb26	                           jmp 0x40019d4	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x40019ae	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x40019b2	            0x7520	                           jne 0x40019d4	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x40019b4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x40019b8	     0xfb780c80000	           movzx eax, word [rax + 0xc8] 	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x40019bf	        0x663b45e2	               cmp ax, word [rbp - 0x1e]	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x40019c3	            0x730f	                           jae 0x40019d4	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x40019c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1409	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x40019c9	     0xfb780c80000	           movzx eax, word [rax + 0xc8] 	      1409	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x40019d0	        0x668945e2	               mov word [rbp - 0x1e], ax	      1409	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x40019d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1398	syntax.c	FUNCTION_16	FOR_1
0x40019d8	        0x488945f8	                mov qword [rbp - 8], rax	      1398	syntax.c	FUNCTION_16	FOR_1
0x40019dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1398	syntax.c	FUNCTION_16	FOR_1
0x40019e0	          0x488b00	                    mov rax, qword [rax]	      1398	syntax.c	FUNCTION_16	FOR_1
0x40019e3	        0x488945f0	             mov qword [rbp - 0x10], rax	      1398	syntax.c	FUNCTION_16	FOR_1
0x40019e7	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1398	syntax.c	FUNCTION_16	FOR_1
0x40019ec	     0xf8552ffffff	                           jne 0x4001944	      1398	syntax.c	FUNCTION_16	FOR_1
0x40019f2	    0x488b05000000	            mov rax, qword [0x040019f9] 	      1417	syntax.c	FUNCTION_16
0x40019f9	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1417	syntax.c	FUNCTION_16
0x4001a00	        0x488945f8	                mov qword [rbp - 8], rax	      1417	syntax.c	FUNCTION_16
0x4001a04	        0x488b45f8	                mov rax, qword [rbp - 8]	      1418	syntax.c	FUNCTION_16	FOR_2
0x4001a08	          0x488b00	                    mov rax, qword [rax]	      1418	syntax.c	FUNCTION_16	FOR_2
0x4001a0b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1418	syntax.c	FUNCTION_16	FOR_2
0x4001a0f	            0xeb74	                           jmp 0x4001a85	      1418	syntax.c	FUNCTION_16	FOR_2
0x4001a11	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a15	     0xfb780c80000	           movzx eax, word [rax + 0xc8] 	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a1c	        0x663b45e2	               cmp ax, word [rbp - 0x1e]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a20	            0x7550	                           jne 0x4001a72	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a22	        0x488b45f8	                mov rax, qword [rbp - 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a26	        0x488b5008	                mov rdx, qword [rax + 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a2a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a2d	            0x4898	                                    cdqe	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a2f	          0x4801c2	                            add rdx, rax	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a32	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a36	        0x488b4008	                mov rax, qword [rax + 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a3a	          0x4839c2	                            cmp rdx, rax	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a3d	            0x7e33	                           jle 0x4001a72	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a3f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a43	          0x488b10	                    mov rdx, qword [rax]	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a46	        0x488b45f8	                mov rax, qword [rbp - 8]	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a4a	          0x488910	                    mov qword [rax], rdx	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a4d	    0x488b05000000	            mov rax, qword [0x04001a54] 	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x4001a54	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x4001a58	          0x4889d6	                            mov rsi, rdx	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x4001a5b	          0x4889c7	                            mov rdi, rax	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x4001a5e	      0xe82e000000	           call sym.syn_stack_free_entry	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x4001a63	        0x488b45f8	                mov rax, qword [rbp - 8]	      1425	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a67	        0x488945f0	             mov qword [rbp - 0x10], rax	      1425	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a6b	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      1426	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4001a72	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1418	syntax.c	FUNCTION_16	FOR_2
0x4001a76	        0x488945f8	                mov qword [rbp - 8], rax	      1418	syntax.c	FUNCTION_16	FOR_2
0x4001a7a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1418	syntax.c	FUNCTION_16	FOR_2
0x4001a7e	          0x488b00	                    mov rax, qword [rax]	      1418	syntax.c	FUNCTION_16	FOR_2
0x4001a81	        0x488945f0	             mov qword [rbp - 0x10], rax	      1418	syntax.c	FUNCTION_16	FOR_2
0x4001a85	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1418	syntax.c	FUNCTION_16	FOR_2
0x4001a8a	            0x7585	                           jne 0x4001a11	      1418	syntax.c	FUNCTION_16	FOR_2
0x4001a8c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1429	syntax.c	FUNCTION_16
0x4001a8f	              0xc9	                                   leave	      1430	syntax.c	FUNCTION_16
0x4001a90	              0xc3	                                     ret	      1430	syntax.c	FUNCTION_16
get_syntax_info	functions,0:IF,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	9
0x400cc64	              0x55	                                push rbp	      6599	syntax.c	FUNCTION_103
0x400cc65	          0x4889e5	                            mov rbp, rsp	      6599	syntax.c	FUNCTION_103
0x400cc68	        0x48897df8	                mov qword [rbp - 8], rdi	      6599	syntax.c	FUNCTION_103
0x400cc6c	    0x8b1500000000	            mov edx, dword [0x0400cc72] 	      6600	syntax.c	FUNCTION_103
0x400cc72	        0x488b45f8	                mov rax, qword [rbp - 8]	      6600	syntax.c	FUNCTION_103
0x400cc76	            0x8910	                    mov dword [rax], edx	      6600	syntax.c	FUNCTION_103
0x400cc78	    0x8b0500000000	            mov eax, dword [0x0400cc7e] 	      6601	syntax.c	FUNCTION_103
0x400cc7e	              0x5d	                                 pop rbp	      6602	syntax.c	FUNCTION_103
0x400cc7f	              0xc3	                                     ret	      6602	syntax.c	FUNCTION_103
get_cterm_attr_idx	functions,0:IF,0:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	32
0x40114bc	              0x55	                                push rbp	      8924	syntax.c	FUNCTION_132
0x40114bd	          0x4889e5	                            mov rbp, rsp	      8924	syntax.c	FUNCTION_132
0x40114c0	        0x4883ec40	                           sub rsp, 0x40	      8924	syntax.c	FUNCTION_132
0x40114c4	          0x897dcc	             mov dword [rbp - 0x34], edi	      8924	syntax.c	FUNCTION_132
0x40114c7	          0x8975c8	             mov dword [rbp - 0x38], esi	      8924	syntax.c	FUNCTION_132
0x40114ca	          0x8955c4	             mov dword [rbp - 0x3c], edx	      8924	syntax.c	FUNCTION_132
0x40114cd	    0x64488b042528	                mov rax, qword fs:[0x28]	      8924	syntax.c	FUNCTION_132
0x40114d6	        0x488945f8	                mov qword [rbp - 8], rax	      8924	syntax.c	FUNCTION_132
0x40114da	            0x31c0	                            xor eax, eax	      8924	syntax.c	FUNCTION_132
0x40114dc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8927	syntax.c	FUNCTION_132	CALL_1
0x40114e0	      0xba28000000	                           mov edx, 0x28	      8927	syntax.c	FUNCTION_132	CALL_1
0x40114e5	      0xbe00000000	                              mov esi, 0	      8927	syntax.c	FUNCTION_132	CALL_1
0x40114ea	          0x4889c7	                            mov rdi, rax	      8927	syntax.c	FUNCTION_132	CALL_1
0x40114ed	      0xe800000000	                          call 0x40114f2	      8927	syntax.c	FUNCTION_132	CALL_1
0x40114f2	    0x48c745e099d4	mov qword [rbp - 0x20], 0xffffffffffffd499	      8929	syntax.c	FUNCTION_132
0x40114fa	    0x48c745e899d4	mov qword [rbp - 0x18], 0xffffffffffffd499	      8930	syntax.c	FUNCTION_132
0x4011502	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8932	syntax.c	FUNCTION_132
0x4011505	        0x668945d0	               mov word [rbp - 0x30], ax	      8932	syntax.c	FUNCTION_132
0x4011509	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      8933	syntax.c	FUNCTION_132
0x401150c	        0x668945d8	               mov word [rbp - 0x28], ax	      8933	syntax.c	FUNCTION_132
0x4011510	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      8934	syntax.c	FUNCTION_132
0x4011513	        0x668945da	               mov word [rbp - 0x26], ax	      8934	syntax.c	FUNCTION_132
0x4011517	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8935	syntax.c	FUNCTION_132	CALL_2
0x401151b	          0x4889c6	                            mov rsi, rax	      8935	syntax.c	FUNCTION_132	CALL_2
0x401151e	      0xbf00000000	                              mov edi, 0	      8935	syntax.c	FUNCTION_132	CALL_2
0x4011523	      0xe890fbffff	                 call sym.get_attr_entry	      8935	syntax.c	FUNCTION_132	CALL_2
0x4011528	        0x488b4df8	                mov rcx, qword [rbp - 8]	      8936	syntax.c	FUNCTION_132
0x401152c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8936	syntax.c	FUNCTION_132
0x4011535	            0x7405	                            je 0x401153c	      8936	syntax.c	FUNCTION_132
0x4011537	      0xe800000000	                          call 0x401153c	      8936	syntax.c	FUNCTION_132
0x401153c	              0xc9	                                   leave	      8936	syntax.c	FUNCTION_132
0x401153d	              0xc3	                                     ret	      8936	syntax.c	FUNCTION_132
syn_stack_free_block	functions,0:IF,1:SWITCH,0:FOR,1:CALL,2:ELSE,0:WHILE,0:DO,0	35
0x4001181	              0x55	                                push rbp	      1187	syntax.c	FUNCTION_11
0x4001182	          0x4889e5	                            mov rbp, rsp	      1187	syntax.c	FUNCTION_11
0x4001185	        0x4883ec20	                           sub rsp, 0x20	      1187	syntax.c	FUNCTION_11
0x4001189	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1187	syntax.c	FUNCTION_11
0x400118d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1190	syntax.c	FUNCTION_11	IF_1
0x4001191	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1190	syntax.c	FUNCTION_11	IF_1
0x4001198	          0x4885c0	                           test rax, rax	      1190	syntax.c	FUNCTION_11	IF_1
0x400119b	            0x746f	                            je 0x400120c	      1190	syntax.c	FUNCTION_11	IF_1
0x400119d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40011a1	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40011a8	        0x488945f8	                mov qword [rbp - 8], rax	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40011ac	            0xeb17	                           jmp 0x40011c5	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40011ae	        0x488b45f8	                mov rax, qword [rbp - 8]	      1193	syntax.c	FUNCTION_11	IF_1	CALL_1
0x40011b2	          0x4889c7	                            mov rdi, rax	      1193	syntax.c	FUNCTION_11	IF_1	CALL_1
0x40011b5	      0xe839f3ffff	                call sym.clear_syn_state	      1193	syntax.c	FUNCTION_11	IF_1	CALL_1
0x40011ba	        0x488b45f8	                mov rax, qword [rbp - 8]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40011be	          0x488b00	                    mov rax, qword [rax]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40011c1	        0x488945f8	                mov qword [rbp - 8], rax	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40011c5	      0x48837df800	                  cmp qword [rbp - 8], 0	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40011ca	            0x75e2	                           jne 0x40011ae	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x40011cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40011d0	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40011d7	          0x4885c0	                           test rax, rax	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40011da	            0x7422	                            je 0x40011fe	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40011dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40011e0	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40011e7	          0x4889c7	                            mov rdi, rax	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40011ea	      0xe800000000	                          call 0x40011ef	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40011ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40011f3	    0x48c780100300	              mov qword [rax + 0x310], 0	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x40011fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	syntax.c	FUNCTION_11	IF_1
0x4001202	    0xc78018030000	              mov dword [rax + 0x318], 0	      1195	syntax.c	FUNCTION_11	IF_1
0x400120c	              0x90	                                     nop	      1197	syntax.c	FUNCTION_11
0x400120d	              0xc9	                                   leave	      1197	syntax.c	FUNCTION_11
0x400120e	              0xc3	                                     ret	      1197	syntax.c	FUNCTION_11
store_current_state	functions,0:IF,13:SWITCH,0:FOR,3:CALL,8:ELSE,6:WHILE,0:DO,0	305
0x4001b51	              0x55	                                push rbp	      1471	syntax.c	FUNCTION_19
0x4001b52	          0x4889e5	                            mov rbp, rsp	      1471	syntax.c	FUNCTION_19
0x4001b55	              0x53	                                push rbx	      1471	syntax.c	FUNCTION_19
0x4001b56	        0x4883ec38	                           sub rsp, 0x38	      1471	syntax.c	FUNCTION_19
0x4001b5a	    0x488b05000000	            mov rax, qword [0x04001b61] 	      1476	syntax.c	FUNCTION_19	CALL_1
0x4001b61	          0x4889c7	                            mov rdi, rax	      1476	syntax.c	FUNCTION_19	CALL_1
0x4001b64	      0xe87fffffff	           call sym.syn_stack_find_entry	      1476	syntax.c	FUNCTION_19	CALL_1
0x4001b69	        0x488945e0	             mov qword [rbp - 0x20], rax	      1476	syntax.c	FUNCTION_19	CALL_1
0x4001b6d	    0x8b0500000000	            mov eax, dword [0x04001b73] 	      1482	syntax.c	FUNCTION_19	FOR_1
0x4001b73	          0x83e801	                              sub eax, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x4001b76	          0x8945cc	             mov dword [rbp - 0x34], eax	      1482	syntax.c	FUNCTION_19	FOR_1
0x4001b79	      0xe981000000	                           jmp 0x4001bff	      1482	syntax.c	FUNCTION_19	FOR_1
0x4001b7e	    0x488b0d000000	            mov rcx, qword [0x04001b85] 	      1484	syntax.c	FUNCTION_19	FOR_1
0x4001b85	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1484	syntax.c	FUNCTION_19	FOR_1
0x4001b88	          0x4863d0	                         movsxd rdx, eax	      1484	syntax.c	FUNCTION_19	FOR_1
0x4001b8b	          0x4889d0	                            mov rax, rdx	      1484	syntax.c	FUNCTION_19	FOR_1
0x4001b8e	        0x48c1e003	                              shl rax, 3	      1484	syntax.c	FUNCTION_19	FOR_1
0x4001b92	          0x4801d0	                            add rax, rdx	      1484	syntax.c	FUNCTION_19	FOR_1
0x4001b95	        0x48c1e004	                              shl rax, 4	      1484	syntax.c	FUNCTION_19	FOR_1
0x4001b99	          0x4801c8	                            add rax, rcx	      1484	syntax.c	FUNCTION_19	FOR_1
0x4001b9c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1484	syntax.c	FUNCTION_19	FOR_1
0x4001ba0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001ba4	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001ba8	    0x488b05000000	            mov rax, qword [0x04001baf] 	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001baf	          0x4839c2	                            cmp rdx, rax	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bb2	            0x7d55	                           jge 0x4001c09	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bb8	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bbc	    0x488b05000000	            mov rax, qword [0x04001bc3] 	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bc3	          0x4839c2	                            cmp rdx, rax	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bc6	            0x7d41	                           jge 0x4001c09	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bcc	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bd0	    0x488b05000000	            mov rax, qword [0x04001bd7] 	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bd7	          0x4839c2	                            cmp rdx, rax	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bda	            0x7d2d	                           jge 0x4001c09	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bdc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001be0	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001be3	            0x85c0	                           test eax, eax	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001be5	            0x7414	                            je 0x4001bfb	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001be7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001beb	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bef	    0x488b05000000	            mov rax, qword [0x04001bf6] 	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bf6	          0x4839c2	                            cmp rdx, rax	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bf9	            0x7d0e	                           jge 0x4001c09	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4001bfb	        0x836dcc01	               sub dword [rbp - 0x34], 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x4001bff	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1482	syntax.c	FUNCTION_19	FOR_1
0x4001c03	     0xf8975ffffff	                           jns 0x4001b7e	      1482	syntax.c	FUNCTION_19	FOR_1
0x4001c09	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1492	syntax.c	FUNCTION_19	IF_2
0x4001c0d	     0xf88a4000000	                            js 0x4001cb7	      1492	syntax.c	FUNCTION_19	IF_2
0x4001c13	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1494	syntax.c	FUNCTION_19	IF_2	IF_3
0x4001c18	     0xf84aa010000	                            je 0x4001dc8	      1494	syntax.c	FUNCTION_19	IF_2	IF_3
0x4001c1e	    0x488b05000000	            mov rax, qword [0x04001c25] 	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4001c25	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4001c2c	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4001c30	            0x7517	                           jne 0x4001c49	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4001c32	    0x488b05000000	            mov rax, qword [0x04001c39] 	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4001c39	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4001c3d	          0x488b12	                    mov rdx, qword [rdx]	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4001c40	    0x488990200300	            mov qword [rax + 0x320], rdx	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4001c47	            0xeb4b	                           jmp 0x4001c94	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4001c49	    0x488b05000000	            mov rax, qword [0x04001c50] 	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4001c50	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4001c57	        0x488945d0	             mov qword [rbp - 0x30], rax	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4001c5b	            0xeb18	                           jmp 0x4001c75	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4001c5d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4001c61	          0x488b00	                    mov rax, qword [rax]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4001c64	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4001c68	            0x7414	                            je 0x4001c7e	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4001c6a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4001c6e	          0x488b00	                    mov rax, qword [rax]	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4001c71	        0x488945d0	             mov qword [rbp - 0x30], rax	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4001c75	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4001c7a	            0x75e1	                           jne 0x4001c5d	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4001c7c	            0xeb01	                           jmp 0x4001c7f	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4001c7e	              0x90	                                     nop	      1505	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4001c7f	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1506	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4001c84	            0x740e	                            je 0x4001c94	      1506	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4001c86	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4001c8a	          0x488b10	                    mov rdx, qword [rax]	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4001c8d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4001c91	          0x488910	                    mov qword [rax], rdx	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4001c94	    0x488b05000000	            mov rax, qword [0x04001c9b] 	      1509	syntax.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4001c9b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1509	syntax.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4001c9f	          0x4889d6	                            mov rsi, rdx	      1509	syntax.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4001ca2	          0x4889c7	                            mov rdi, rax	      1509	syntax.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4001ca5	      0xe8e7fdffff	           call sym.syn_stack_free_entry	      1509	syntax.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4001caa	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1510	syntax.c	FUNCTION_19	IF_2	IF_3
0x4001cb2	      0xe911010000	                           jmp 0x4001dc8	      1510	syntax.c	FUNCTION_19	IF_2	IF_3
0x4001cb7	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x4001cbc	            0x7418	                            je 0x4001cd6	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x4001cbe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x4001cc2	        0x488b5008	                mov rdx, qword [rax + 8]	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x4001cc6	    0x488b05000000	            mov rax, qword [0x04001ccd] 	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x4001ccd	          0x4839c2	                            cmp rdx, rax	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x4001cd0	     0xf84f2000000	                            je 0x4001dc8	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x4001cd6	    0x488b05000000	            mov rax, qword [0x04001cdd] 	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x4001cdd	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x4001ce3	            0x85c0	                           test eax, eax	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x4001ce5	            0x7518	                           jne 0x4001cff	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x4001ce7	      0xe889fbffff	              call sym.syn_stack_cleanup	      1521	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_3
0x4001cec	    0x488b05000000	            mov rax, qword [0x04001cf3] 	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_4
0x4001cf3	          0x4889c7	                            mov rdi, rax	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_4
0x4001cf6	      0xe8edfdffff	           call sym.syn_stack_find_entry	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_4
0x4001cfb	        0x488945e0	             mov qword [rbp - 0x20], rax	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_4
0x4001cff	    0x488b05000000	            mov rax, qword [0x04001d06] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4001d06	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4001d0c	            0x85c0	                           test eax, eax	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4001d0e	            0x750d	                           jne 0x4001d1d	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4001d10	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1527	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4001d18	      0xe9ab000000	                           jmp 0x4001dc8	      1527	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4001d1d	    0x488b05000000	            mov rax, qword [0x04001d24] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001d24	    0x488b80280300	           mov rax, qword [rax + 0x328] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001d2b	        0x488945d0	             mov qword [rbp - 0x30], rax	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001d2f	    0x488b05000000	            mov rax, qword [0x04001d36] 	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001d36	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001d3a	          0x488b12	                    mov rdx, qword [rdx]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001d3d	    0x488990280300	            mov qword [rax + 0x328], rdx	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001d44	    0x488b05000000	            mov rax, qword [0x04001d4b] 	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001d4b	    0x8b9030030000	           mov edx, dword [rax + 0x330] 	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001d51	          0x83ea01	                              sub edx, 1	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001d54	    0x899030030000	            mov dword [rax + 0x330], edx	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001d5a	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1535	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4001d5f	            0x7529	                           jne 0x4001d8a	      1535	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4001d61	    0x488b05000000	            mov rax, qword [0x04001d68] 	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4001d68	    0x488b90200300	           mov rdx, qword [rax + 0x320] 	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4001d6f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4001d73	          0x488910	                    mov qword [rax], rdx	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4001d76	    0x488b05000000	            mov rax, qword [0x04001d7d] 	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4001d7d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4001d81	    0x488990200300	            mov qword [rax + 0x320], rdx	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4001d88	            0xeb19	                           jmp 0x4001da3	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4001d8a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4001d8e	          0x488b10	                    mov rdx, qword [rax]	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4001d91	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4001d95	          0x488910	                    mov qword [rax], rdx	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4001d98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1545	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4001d9c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1545	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4001da0	          0x488910	                    mov qword [rax], rdx	      1545	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4001da3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1547	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001da7	        0x488945e0	             mov qword [rbp - 0x20], rax	      1547	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001dab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1548	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001daf	    0xc780bc000000	               mov dword [rax + 0xbc], 0	      1548	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001db9	    0x488b15000000	            mov rdx, qword [0x04001dc0] 	      1549	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001dc0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1549	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001dc4	        0x48895008	                mov qword [rax + 8], rdx	      1549	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4001dc8	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1552	syntax.c	FUNCTION_19	IF_11
0x4001dcd	     0xf8450020000	                            je 0x4002023	      1552	syntax.c	FUNCTION_19	IF_11
0x4001dd3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1555	syntax.c	FUNCTION_19	IF_11	CALL_5
0x4001dd7	          0x4889c7	                            mov rdi, rax	      1555	syntax.c	FUNCTION_19	IF_11	CALL_5
0x4001dda	      0xe814e7ffff	                call sym.clear_syn_state	      1555	syntax.c	FUNCTION_19	IF_11	CALL_5
0x4001ddf	    0x8b1500000000	            mov edx, dword [0x04001de5] 	      1556	syntax.c	FUNCTION_19	IF_11
0x4001de5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1556	syntax.c	FUNCTION_19	IF_11
0x4001de9	    0x8990bc000000	             mov dword [rax + 0xbc], edx	      1556	syntax.c	FUNCTION_19	IF_11
0x4001def	    0x8b0500000000	            mov eax, dword [0x04001df5] 	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x4001df5	          0x83f807	                              cmp eax, 7	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x4001df8	            0x7e61	                           jle 0x4001e5b	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x4001dfa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x4001dfe	        0x4883c010	                           add rax, 0x10	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x4001e02	      0xba01000000	                              mov edx, 1	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x4001e07	      0xbe18000000	                           mov esi, 0x18	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x4001e0c	          0x4889c7	                            mov rdi, rax	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x4001e0f	      0xe800000000	                          call 0x4001e14	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x4001e14	    0x8b0500000000	            mov eax, dword [0x04001e1a] 	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4001e1a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4001e1e	        0x4883c210	                           add rdx, 0x10	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4001e22	            0x89c6	                            mov esi, eax	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4001e24	          0x4889d7	                            mov rdi, rdx	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4001e27	      0xe800000000	                          call 0x4001e2c	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4001e2c	            0x85c0	                           test eax, eax	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4001e2e	            0x7510	                           jne 0x4001e40	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4001e30	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1563	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13
0x4001e34	    0xc780bc000000	               mov dword [rax + 0xbc], 0	      1563	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13
0x4001e3e	            0xeb0d	                           jmp 0x4001e4d	      1563	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13
0x4001e40	    0x8b1500000000	            mov edx, dword [0x04001e46] 	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x4001e46	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x4001e4a	          0x895010	             mov dword [rax + 0x10], edx	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x4001e4d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1566	syntax.c	FUNCTION_19	IF_11	IF_12
0x4001e51	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1566	syntax.c	FUNCTION_19	IF_11	IF_12
0x4001e55	        0x488945d8	             mov qword [rbp - 0x28], rax	      1566	syntax.c	FUNCTION_19	IF_11	IF_12
0x4001e59	            0xeb0c	                           jmp 0x4001e67	      1566	syntax.c	FUNCTION_19	IF_11	IF_12
0x4001e5b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1569	syntax.c	FUNCTION_19	IF_11	ELSE_6
0x4001e5f	        0x4883c010	                           add rax, 0x10	      1569	syntax.c	FUNCTION_19	IF_11	ELSE_6
0x4001e63	        0x488945d8	             mov qword [rbp - 0x28], rax	      1569	syntax.c	FUNCTION_19	IF_11	ELSE_6
0x4001e67	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e6e	      0xe95a010000	                           jmp 0x4001fcd	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e73	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e76	          0x4863d0	                         movsxd rdx, eax	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e79	          0x4889d0	                            mov rax, rdx	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e7c	          0x4801c0	                            add rax, rax	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e7f	          0x4801d0	                            add rax, rdx	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e82	        0x48c1e003	                              shl rax, 3	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e86	          0x4889c2	                            mov rdx, rax	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e8d	        0x488d0c02	                    lea rcx, [rdx + rax]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e91	    0x488b35000000	            mov rsi, qword [0x04001e98] 	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e98	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e9b	          0x4863d0	                         movsxd rdx, eax	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001e9e	          0x4889d0	                            mov rax, rdx	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ea1	        0x48c1e003	                              shl rax, 3	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ea5	          0x4801d0	                            add rax, rdx	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ea8	        0x48c1e004	                              shl rax, 4	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001eac	          0x4801f0	                            add rax, rsi	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001eaf	            0x8b00	                    mov eax, dword [rax]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001eb1	            0x8901	                    mov dword [rcx], eax	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001eb3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001eb6	          0x4863d0	                         movsxd rdx, eax	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001eb9	          0x4889d0	                            mov rax, rdx	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ebc	          0x4801c0	                            add rax, rax	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ebf	          0x4801d0	                            add rax, rdx	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ec2	        0x48c1e003	                              shl rax, 3	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ec6	          0x4889c2	                            mov rdx, rax	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ec9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ecd	        0x488d0c02	                    lea rcx, [rdx + rax]	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ed1	    0x488b35000000	            mov rsi, qword [0x04001ed8] 	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ed8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001edb	          0x4863d0	                         movsxd rdx, eax	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ede	          0x4889d0	                            mov rax, rdx	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ee1	        0x48c1e003	                              shl rax, 3	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ee5	          0x4801d0	                            add rax, rdx	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ee8	        0x48c1e004	                              shl rax, 4	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001eec	          0x4801f0	                            add rax, rsi	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001eef	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ef3	          0x894104	                mov dword [rcx + 4], eax	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ef6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001ef9	          0x4863d0	                         movsxd rdx, eax	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001efc	          0x4889d0	                            mov rax, rdx	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001eff	          0x4801c0	                            add rax, rax	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f02	          0x4801d0	                            add rax, rdx	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f05	        0x48c1e003	                              shl rax, 3	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f09	          0x4889c2	                            mov rdx, rax	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f0c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f10	        0x488d0c02	                    lea rcx, [rdx + rax]	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f14	    0x488b35000000	            mov rsi, qword [0x04001f1b] 	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f1b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f1e	          0x4863d0	                         movsxd rdx, eax	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f21	          0x4889d0	                            mov rax, rdx	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f24	        0x48c1e003	                              shl rax, 3	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f28	          0x4801d0	                            add rax, rdx	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f2b	        0x48c1e004	                              shl rax, 4	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f2f	          0x4801f0	                            add rax, rsi	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f32	          0x8b4070	            mov eax, dword [rax + 0x70] 	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f35	          0x894108	                mov dword [rcx + 8], eax	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f38	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f3b	          0x4863d0	                         movsxd rdx, eax	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f3e	          0x4889d0	                            mov rax, rdx	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f41	          0x4801c0	                            add rax, rax	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f44	          0x4801d0	                            add rax, rdx	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f47	        0x48c1e003	                              shl rax, 3	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f4b	          0x4889c2	                            mov rdx, rax	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f4e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f52	        0x488d0c02	                    lea rcx, [rdx + rax]	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f56	    0x488b35000000	            mov rsi, qword [0x04001f5d] 	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f5d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f60	          0x4863d0	                         movsxd rdx, eax	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f63	          0x4889d0	                            mov rax, rdx	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f66	        0x48c1e003	                              shl rax, 3	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f6a	          0x4801d0	                            add rax, rdx	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f6d	        0x48c1e004	                              shl rax, 4	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f71	          0x4801f0	                            add rax, rsi	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f74	          0x8b4074	            mov eax, dword [rax + 0x74] 	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f77	          0x89410c	              mov dword [rcx + 0xc], eax	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001f7a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001f7d	          0x4863d0	                         movsxd rdx, eax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001f80	          0x4889d0	                            mov rax, rdx	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001f83	          0x4801c0	                            add rax, rax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001f86	          0x4801d0	                            add rax, rdx	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001f89	        0x48c1e003	                              shl rax, 3	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001f8d	          0x4889c2	                            mov rdx, rax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001f90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001f94	        0x488d1c02	                    lea rbx, [rdx + rax]	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001f98	    0x488b0d000000	            mov rcx, qword [0x04001f9f] 	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001f9f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001fa2	          0x4863d0	                         movsxd rdx, eax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001fa5	          0x4889d0	                            mov rax, rdx	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001fa8	        0x48c1e003	                              shl rax, 3	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001fac	          0x4801d0	                            add rax, rdx	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001faf	        0x48c1e004	                              shl rax, 4	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001fb3	          0x4801c8	                            add rax, rcx	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001fb6	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001fbd	          0x4889c7	                            mov rdi, rax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001fc0	      0xe800000000	                          call 0x4001fc5	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001fc5	        0x48894310	             mov qword [rbx + 0x10], rax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4001fc9	        0x8345cc01	               add dword [rbp - 0x34], 1	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001fcd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001fd1	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001fd7	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001fda	     0xf8f93feffff	                            jg 0x4001e73	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4001fe0	    0x8b1500000000	            mov edx, dword [0x04001fe6] 	      1580	syntax.c	FUNCTION_19	IF_11
0x4001fe6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1580	syntax.c	FUNCTION_19	IF_11
0x4001fea	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      1580	syntax.c	FUNCTION_19	IF_11
0x4001ff0	    0x488b15000000	            mov rdx, qword [0x04001ff7] 	      1581	syntax.c	FUNCTION_19	IF_11
0x4001ff7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1581	syntax.c	FUNCTION_19	IF_11
0x4001ffb	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      1581	syntax.c	FUNCTION_19	IF_11
0x4002002	     0xfb715000000	           movzx edx, word [0x04002009] 	      1582	syntax.c	FUNCTION_19	IF_11
0x4002009	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1582	syntax.c	FUNCTION_19	IF_11
0x400200d	    0x668990c80000	               mov word [rax + 0xc8], dx	      1582	syntax.c	FUNCTION_19	IF_11
0x4002014	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1583	syntax.c	FUNCTION_19	IF_11
0x4002018	    0x48c780d00000	               mov qword [rax + 0xd0], 0	      1583	syntax.c	FUNCTION_19	IF_11
0x4002023	    0xc70500000000	               mov dword [0x0400202d], 1	      1585	syntax.c	FUNCTION_19
0x400202d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1586	syntax.c	FUNCTION_19
0x4002031	        0x4883c438	                           add rsp, 0x38	      1587	syntax.c	FUNCTION_19
0x4002035	              0x5b	                                 pop rbx	      1587	syntax.c	FUNCTION_19
0x4002036	              0x5d	                                 pop rbp	      1587	syntax.c	FUNCTION_19
0x4002037	              0xc3	                                     ret	      1587	syntax.c	FUNCTION_19
syn_cmd_reset	functions,0:IF,1:SWITCH,0:FOR,0:CALL,4:ELSE,0:WHILE,0:DO,0	27
0x4006db8	              0x55	                                push rbp	      3886	syntax.c	FUNCTION_59
0x4006db9	          0x4889e5	                            mov rbp, rsp	      3886	syntax.c	FUNCTION_59
0x4006dbc	        0x4883ec10	                           sub rsp, 0x10	      3886	syntax.c	FUNCTION_59
0x4006dc0	        0x48897df8	                mov qword [rbp - 8], rdi	      3886	syntax.c	FUNCTION_59
0x4006dc4	          0x8975f4	              mov dword [rbp - 0xc], esi	      3886	syntax.c	FUNCTION_59
0x4006dc7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3887	syntax.c	FUNCTION_59	CALL_1
0x4006dcb	          0x488b00	                    mov rax, qword [rax]	      3887	syntax.c	FUNCTION_59	CALL_1
0x4006dce	          0x4889c7	                            mov rdi, rax	      3887	syntax.c	FUNCTION_59	CALL_1
0x4006dd1	      0xe800000000	                          call 0x4006dd6	      3887	syntax.c	FUNCTION_59	CALL_1
0x4006dd6	          0x4889c2	                            mov rdx, rax	      3887	syntax.c	FUNCTION_59	CALL_1
0x4006dd9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3887	syntax.c	FUNCTION_59	CALL_1
0x4006ddd	        0x48895008	                mov qword [rax + 8], rdx	      3887	syntax.c	FUNCTION_59	CALL_1
0x4006de1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3888	syntax.c	FUNCTION_59	IF_1
0x4006de5	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3888	syntax.c	FUNCTION_59	IF_1
0x4006de8	            0x85c0	                           test eax, eax	      3888	syntax.c	FUNCTION_59	IF_1
0x4006dea	            0x7528	                           jne 0x4006e14	      3888	syntax.c	FUNCTION_59	IF_1
0x4006dec	      0xbe00000000	                              mov esi, 0	      3890	syntax.c	FUNCTION_59	IF_1	CALL_2
0x4006df1	      0xbf00000000	                              mov edi, 0	      3890	syntax.c	FUNCTION_59	IF_1	CALL_2
0x4006df6	      0xe800000000	                          call 0x4006dfb	      3890	syntax.c	FUNCTION_59	IF_1	CALL_2
0x4006dfb	      0xbf00000000	                              mov edi, 0	      3891	syntax.c	FUNCTION_59	IF_1	CALL_3
0x4006e00	      0xe800000000	                          call 0x4006e05	      3891	syntax.c	FUNCTION_59	IF_1	CALL_3
0x4006e05	      0xbe01000000	                              mov esi, 1	      3892	syntax.c	FUNCTION_59	IF_1	CALL_4
0x4006e0a	      0xbf00000000	                              mov edi, 0	      3892	syntax.c	FUNCTION_59	IF_1	CALL_4
0x4006e0f	      0xe800000000	                          call 0x4006e14	      3892	syntax.c	FUNCTION_59	IF_1	CALL_4
0x4006e14	              0x90	                                     nop	      3894	syntax.c	FUNCTION_59
0x4006e15	              0xc9	                                   leave	      3894	syntax.c	FUNCTION_59
0x4006e16	              0xc3	                                     ret	      3894	syntax.c	FUNCTION_59
syn_id2colors	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	34
0x4013383	              0x55	                                push rbp	      9845	syntax.c	ELSE_2	FUNCTION_157
0x4013384	          0x4889e5	                            mov rbp, rsp	      9845	syntax.c	ELSE_2	FUNCTION_157
0x4013387	        0x4883ec30	                           sub rsp, 0x30	      9845	syntax.c	ELSE_2	FUNCTION_157
0x401338b	          0x897dec	             mov dword [rbp - 0x14], edi	      9845	syntax.c	ELSE_2	FUNCTION_157
0x401338e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      9845	syntax.c	ELSE_2	FUNCTION_157
0x4013392	        0x488955d8	             mov qword [rbp - 0x28], rdx	      9845	syntax.c	ELSE_2	FUNCTION_157
0x4013396	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9848	syntax.c	ELSE_2	FUNCTION_157	CALL_1
0x4013399	            0x89c7	                            mov edi, eax	      9848	syntax.c	ELSE_2	FUNCTION_157	CALL_1
0x401339b	      0xe800000000	                          call 0x40133a0	      9848	syntax.c	ELSE_2	FUNCTION_157	CALL_1
0x40133a0	          0x8945ec	             mov dword [rbp - 0x14], eax	      9848	syntax.c	ELSE_2	FUNCTION_157	CALL_1
0x40133a3	    0x488b0d000000	            mov rcx, qword [0x040133aa] 	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133aa	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133ad	          0x4863d0	                         movsxd rdx, eax	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133b0	          0x4889d0	                            mov rax, rdx	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133b3	        0x48c1e003	                              shl rax, 3	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133b7	          0x4801d0	                            add rax, rdx	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133ba	          0x4801c0	                            add rax, rax	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133bd	          0x4801d0	                            add rax, rdx	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133c0	        0x48c1e003	                              shl rax, 3	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133c4	    0x482d98000000	                           sub rax, 0x98	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133ca	          0x4801c8	                            add rax, rcx	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133cd	        0x488945f8	                mov qword [rbp - 8], rax	      9849	syntax.c	ELSE_2	FUNCTION_157
0x40133d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      9851	syntax.c	ELSE_2	FUNCTION_157
0x40133d5	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      9851	syntax.c	ELSE_2	FUNCTION_157
0x40133d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9851	syntax.c	ELSE_2	FUNCTION_157
0x40133dd	          0x488910	                    mov qword [rax], rdx	      9851	syntax.c	ELSE_2	FUNCTION_157
0x40133e0	        0x488b45f8	                mov rax, qword [rbp - 8]	      9852	syntax.c	ELSE_2	FUNCTION_157
0x40133e4	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      9852	syntax.c	ELSE_2	FUNCTION_157
0x40133e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9852	syntax.c	ELSE_2	FUNCTION_157
0x40133ec	          0x488910	                    mov qword [rax], rdx	      9852	syntax.c	ELSE_2	FUNCTION_157
0x40133ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      9853	syntax.c	ELSE_2	FUNCTION_157
0x40133f3	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      9853	syntax.c	ELSE_2	FUNCTION_157
0x40133f6	              0xc9	                                   leave	      9854	syntax.c	ELSE_2	FUNCTION_157
0x40133f7	              0xc3	                                     ret	      9854	syntax.c	ELSE_2	FUNCTION_157
get_tgc_attr_idx	functions,0:IF,1:SWITCH,0:FOR,0:CALL,2:ELSE,1:WHILE,0:DO,0	37
0x401153e	              0x55	                                push rbp	      8945	syntax.c	FUNCTION_133
0x401153f	          0x4889e5	                            mov rbp, rsp	      8945	syntax.c	FUNCTION_133
0x4011542	        0x4883ec50	                           sub rsp, 0x50	      8945	syntax.c	FUNCTION_133
0x4011546	          0x897dcc	             mov dword [rbp - 0x34], edi	      8945	syntax.c	FUNCTION_133
0x4011549	        0x488975c0	             mov qword [rbp - 0x40], rsi	      8945	syntax.c	FUNCTION_133
0x401154d	        0x488955b8	             mov qword [rbp - 0x48], rdx	      8945	syntax.c	FUNCTION_133
0x4011551	    0x64488b042528	                mov rax, qword fs:[0x28]	      8945	syntax.c	FUNCTION_133
0x401155a	        0x488945f8	                mov qword [rbp - 8], rax	      8945	syntax.c	FUNCTION_133
0x401155e	            0x31c0	                            xor eax, eax	      8945	syntax.c	FUNCTION_133
0x4011560	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8948	syntax.c	FUNCTION_133	CALL_1
0x4011564	      0xba28000000	                           mov edx, 0x28	      8948	syntax.c	FUNCTION_133	CALL_1
0x4011569	      0xbe00000000	                              mov esi, 0	      8948	syntax.c	FUNCTION_133	CALL_1
0x401156e	          0x4889c7	                            mov rdi, rax	      8948	syntax.c	FUNCTION_133	CALL_1
0x4011571	      0xe800000000	                          call 0x4011576	      8948	syntax.c	FUNCTION_133	CALL_1
0x4011576	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8949	syntax.c	FUNCTION_133
0x4011579	        0x668945d0	               mov word [rbp - 0x30], ax	      8949	syntax.c	FUNCTION_133
0x401157d	    0x48817dc099d4	cmp qword [rbp - 0x40], 0xffffffffffffd499	      8950	syntax.c	FUNCTION_133	IF_1
0x4011585	            0x751c	                           jne 0x40115a3	      8950	syntax.c	FUNCTION_133	IF_1
0x4011587	    0x48817db899d4	cmp qword [rbp - 0x48], 0xffffffffffffd499	      8950	syntax.c	FUNCTION_133	IF_1
0x401158f	            0x7512	                           jne 0x40115a3	      8950	syntax.c	FUNCTION_133	IF_1
0x4011591	    0x48c745e09ad4	mov qword [rbp - 0x20], 0xffffffffffffd49a	      8954	syntax.c	FUNCTION_133	IF_1
0x4011599	    0x48c745e89ad4	mov qword [rbp - 0x18], 0xffffffffffffd49a	      8955	syntax.c	FUNCTION_133	IF_1
0x40115a1	            0xeb10	                           jmp 0x40115b3	      8955	syntax.c	FUNCTION_133	IF_1
0x40115a3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8959	syntax.c	FUNCTION_133	ELSE_1
0x40115a7	        0x488945e0	             mov qword [rbp - 0x20], rax	      8959	syntax.c	FUNCTION_133	ELSE_1
0x40115ab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8960	syntax.c	FUNCTION_133	ELSE_1
0x40115af	        0x488945e8	             mov qword [rbp - 0x18], rax	      8960	syntax.c	FUNCTION_133	ELSE_1
0x40115b3	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8962	syntax.c	FUNCTION_133	CALL_2
0x40115b7	          0x4889c6	                            mov rsi, rax	      8962	syntax.c	FUNCTION_133	CALL_2
0x40115ba	      0xbf00000000	                              mov edi, 0	      8962	syntax.c	FUNCTION_133	CALL_2
0x40115bf	      0xe8f4faffff	                 call sym.get_attr_entry	      8962	syntax.c	FUNCTION_133	CALL_2
0x40115c4	        0x488b4df8	                mov rcx, qword [rbp - 8]	      8963	syntax.c	FUNCTION_133
0x40115c8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8963	syntax.c	FUNCTION_133
0x40115d1	            0x7405	                            je 0x40115d8	      8963	syntax.c	FUNCTION_133
0x40115d3	      0xe800000000	                          call 0x40115d8	      8963	syntax.c	FUNCTION_133
0x40115d8	              0xc9	                                   leave	      8963	syntax.c	FUNCTION_133
0x40115d9	              0xc3	                                     ret	      8963	syntax.c	FUNCTION_133
syn_add_group	functions,0:IF,5:SWITCH,0:FOR,1:CALL,16:ELSE,1:WHILE,0:DO,0	167
0x4012fe8	              0x55	                                push rbp	      9736	syntax.c	FUNCTION_154
0x4012fe9	          0x4889e5	                            mov rbp, rsp	      9736	syntax.c	FUNCTION_154
0x4012fec	              0x53	                                push rbx	      9736	syntax.c	FUNCTION_154
0x4012fed	        0x4883ec28	                           sub rsp, 0x28	      9736	syntax.c	FUNCTION_154
0x4012ff1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      9736	syntax.c	FUNCTION_154
0x4012ff5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9740	syntax.c	FUNCTION_154	FOR_1
0x4012ff9	        0x488945e8	             mov qword [rbp - 0x18], rax	      9740	syntax.c	FUNCTION_154	FOR_1
0x4012ffd	      0xe9a4000000	                           jmp 0x40130a6	      9740	syntax.c	FUNCTION_154	FOR_1
0x4013002	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x4013006	           0xfb600	                   movzx eax, byte [rax]	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x4013009	           0xfb6c0	                           movzx eax, al	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x401300c	            0x89c7	                            mov edi, eax	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x401300e	      0xe800000000	                          call 0x4013013	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x4013013	            0x85c0	                           test eax, eax	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x4013015	            0x7528	                           jne 0x401303f	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x4013017	      0xbf00000000	                              mov edi, 0	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x401301c	      0xe800000000	                          call 0x4013021	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x4013021	          0x4889c7	                            mov rdi, rax	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x4013024	      0xe800000000	                          call 0x4013029	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x4013029	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x401302d	          0x4889c7	                            mov rdi, rax	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x4013030	      0xe800000000	                          call 0x4013035	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x4013035	      0xb800000000	                              mov eax, 0	      9746	syntax.c	FUNCTION_154	FOR_1	IF_1
0x401303a	      0xe936020000	                           jmp 0x4013275	      9746	syntax.c	FUNCTION_154	FOR_1	IF_1
0x401303f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013043	           0xfb600	                   movzx eax, byte [rax]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013046	           0xfb6c0	                           movzx eax, al	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013049	          0x83e841	                           sub eax, 0x41	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x401304c	          0x83f819	                           cmp eax, 0x19	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x401304f	            0x7650	                           jbe 0x40130a1	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013051	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013055	           0xfb600	                   movzx eax, byte [rax]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013058	           0xfb6c0	                           movzx eax, al	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x401305b	          0x83e861	                           sub eax, 0x61	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x401305e	          0x83f819	                           cmp eax, 0x19	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013061	            0x763e	                           jbe 0x40130a1	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013063	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013067	           0xfb600	                   movzx eax, byte [rax]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x401306a	           0xfb6c0	                           movzx eax, al	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x401306d	          0x83e830	                           sub eax, 0x30	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013070	          0x83f809	                              cmp eax, 9	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013073	            0x762c	                           jbe 0x40130a1	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013075	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013079	           0xfb600	                   movzx eax, byte [rax]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x401307c	            0x3c5f	                            cmp al, 0x5f	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x401307e	            0x7421	                            je 0x40130a1	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4013080	    0x8b0500000000	            mov eax, dword [0x04013086] 	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x4013086	            0x89c7	                            mov edi, eax	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x4013088	      0xe800000000	                          call 0x401308d	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x401308d	      0xbf00000000	                              mov edi, 0	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4013092	      0xe800000000	                          call 0x4013097	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4013097	          0x4889c7	                            mov rdi, rax	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x401309a	      0xe800000000	                          call 0x401309f	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x401309f	            0xeb14	                           jmp 0x40130b5	      9754	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2
0x40130a1	      0x488345e801	               add qword [rbp - 0x18], 1	      9740	syntax.c	FUNCTION_154	FOR_1
0x40130a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9740	syntax.c	FUNCTION_154	FOR_1
0x40130aa	           0xfb600	                   movzx eax, byte [rax]	      9740	syntax.c	FUNCTION_154	FOR_1
0x40130ad	            0x84c0	                             test al, al	      9740	syntax.c	FUNCTION_154	FOR_1
0x40130af	     0xf854dffffff	                           jne 0x4013002	      9740	syntax.c	FUNCTION_154	FOR_1
0x40130b5	    0x488b05000000	            mov rax, qword [0x040130bc] 	      9761	syntax.c	FUNCTION_154	IF_3
0x40130bc	          0x4885c0	                           test rax, rax	      9761	syntax.c	FUNCTION_154	IF_3
0x40130bf	            0x7514	                           jne 0x40130d5	      9761	syntax.c	FUNCTION_154	IF_3
0x40130c1	    0xc70500000000	           mov dword [0x040130cb], 0x98 	      9763	syntax.c	FUNCTION_154	IF_3
0x40130cb	    0xc70500000000	            mov dword [0x040130d5], 0xa 	      9764	syntax.c	FUNCTION_154	IF_3
0x40130d5	    0x8b0500000000	            mov eax, dword [0x040130db] 	      9767	syntax.c	FUNCTION_154	IF_4
0x40130db	      0x3d1f4e0000	                         cmp eax, 0x4e1f	      9767	syntax.c	FUNCTION_154	IF_4
0x40130e0	            0x7e28	                           jle 0x401310a	      9767	syntax.c	FUNCTION_154	IF_4
0x40130e2	      0xbf00000000	                              mov edi, 0	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x40130e7	      0xe800000000	                          call 0x40130ec	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x40130ec	          0x4889c7	                            mov rdi, rax	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x40130ef	      0xe800000000	                          call 0x40130f4	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x40130f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x40130f8	          0x4889c7	                            mov rdi, rax	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x40130fb	      0xe800000000	                          call 0x4013100	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x4013100	      0xb800000000	                              mov eax, 0	      9771	syntax.c	FUNCTION_154	IF_4
0x4013105	      0xe96b010000	                           jmp 0x4013275	      9771	syntax.c	FUNCTION_154	IF_4
0x401310a	      0xbe01000000	                              mov esi, 1	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x401310f	      0xbf00000000	                              mov edi, 0	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4013114	      0xe800000000	                          call 0x4013119	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4013119	            0x85c0	                           test eax, eax	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x401311b	            0x7516	                           jne 0x4013133	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x401311d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9779	syntax.c	FUNCTION_154	IF_5	CALL_14
0x4013121	          0x4889c7	                            mov rdi, rax	      9779	syntax.c	FUNCTION_154	IF_5	CALL_14
0x4013124	      0xe800000000	                          call 0x4013129	      9779	syntax.c	FUNCTION_154	IF_5	CALL_14
0x4013129	      0xb800000000	                              mov eax, 0	      9780	syntax.c	FUNCTION_154	IF_5
0x401312e	      0xe942010000	                           jmp 0x4013275	      9780	syntax.c	FUNCTION_154	IF_5
0x4013133	    0x488b0d000000	            mov rcx, qword [0x0401313a] 	      9783	syntax.c	FUNCTION_154	CALL_15
0x401313a	    0x8b0500000000	            mov eax, dword [0x04013140] 	      9783	syntax.c	FUNCTION_154	CALL_15
0x4013140	          0x4863d0	                         movsxd rdx, eax	      9783	syntax.c	FUNCTION_154	CALL_15
0x4013143	          0x4889d0	                            mov rax, rdx	      9783	syntax.c	FUNCTION_154	CALL_15
0x4013146	        0x48c1e003	                              shl rax, 3	      9783	syntax.c	FUNCTION_154	CALL_15
0x401314a	          0x4801d0	                            add rax, rdx	      9783	syntax.c	FUNCTION_154	CALL_15
0x401314d	          0x4801c0	                            add rax, rax	      9783	syntax.c	FUNCTION_154	CALL_15
0x4013150	          0x4801d0	                            add rax, rdx	      9783	syntax.c	FUNCTION_154	CALL_15
0x4013153	        0x48c1e003	                              shl rax, 3	      9783	syntax.c	FUNCTION_154	CALL_15
0x4013157	          0x4801c8	                            add rax, rcx	      9783	syntax.c	FUNCTION_154	CALL_15
0x401315a	      0xba98000000	                           mov edx, 0x98	      9783	syntax.c	FUNCTION_154	CALL_15
0x401315f	      0xbe00000000	                              mov esi, 0	      9783	syntax.c	FUNCTION_154	CALL_15
0x4013164	          0x4889c7	                            mov rdi, rax	      9783	syntax.c	FUNCTION_154	CALL_15
0x4013167	      0xe800000000	                          call 0x401316c	      9783	syntax.c	FUNCTION_154	CALL_15
0x401316c	    0x488b0d000000	            mov rcx, qword [0x04013173] 	      9784	syntax.c	FUNCTION_154
0x4013173	    0x8b0500000000	            mov eax, dword [0x04013179] 	      9784	syntax.c	FUNCTION_154
0x4013179	          0x4863d0	                         movsxd rdx, eax	      9784	syntax.c	FUNCTION_154
0x401317c	          0x4889d0	                            mov rax, rdx	      9784	syntax.c	FUNCTION_154
0x401317f	        0x48c1e003	                              shl rax, 3	      9784	syntax.c	FUNCTION_154
0x4013183	          0x4801d0	                            add rax, rdx	      9784	syntax.c	FUNCTION_154
0x4013186	          0x4801c0	                            add rax, rax	      9784	syntax.c	FUNCTION_154
0x4013189	          0x4801d0	                            add rax, rdx	      9784	syntax.c	FUNCTION_154
0x401318c	        0x48c1e003	                              shl rax, 3	      9784	syntax.c	FUNCTION_154
0x4013190	        0x488d1401	                    lea rdx, [rcx + rax]	      9784	syntax.c	FUNCTION_154
0x4013194	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9784	syntax.c	FUNCTION_154
0x4013198	          0x488902	                    mov qword [rdx], rax	      9784	syntax.c	FUNCTION_154
0x401319b	    0x488b0d000000	            mov rcx, qword [0x040131a2] 	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131a2	    0x8b0500000000	            mov eax, dword [0x040131a8] 	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131a8	          0x4863d0	                         movsxd rdx, eax	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131ab	          0x4889d0	                            mov rax, rdx	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131ae	        0x48c1e003	                              shl rax, 3	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131b2	          0x4801d0	                            add rax, rdx	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131b5	          0x4801c0	                            add rax, rax	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131b8	          0x4801d0	                            add rax, rdx	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131bb	        0x48c1e003	                              shl rax, 3	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131bf	        0x488d1c01	                    lea rbx, [rcx + rax]	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131c7	          0x4889c7	                            mov rdi, rax	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131ca	      0xe800000000	                          call 0x40131cf	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131cf	        0x48894308	                mov qword [rbx + 8], rax	      9785	syntax.c	FUNCTION_154	CALL_16
0x40131d3	    0x488b0d000000	            mov rcx, qword [0x040131da] 	      9787	syntax.c	FUNCTION_154
0x40131da	    0x8b0500000000	            mov eax, dword [0x040131e0] 	      9787	syntax.c	FUNCTION_154
0x40131e0	          0x4863d0	                         movsxd rdx, eax	      9787	syntax.c	FUNCTION_154
0x40131e3	          0x4889d0	                            mov rax, rdx	      9787	syntax.c	FUNCTION_154
0x40131e6	        0x48c1e003	                              shl rax, 3	      9787	syntax.c	FUNCTION_154
0x40131ea	          0x4801d0	                            add rax, rdx	      9787	syntax.c	FUNCTION_154
0x40131ed	          0x4801c0	                            add rax, rax	      9787	syntax.c	FUNCTION_154
0x40131f0	          0x4801d0	                            add rax, rdx	      9787	syntax.c	FUNCTION_154
0x40131f3	        0x48c1e003	                              shl rax, 3	      9787	syntax.c	FUNCTION_154
0x40131f7	          0x4801c8	                            add rax, rcx	      9787	syntax.c	FUNCTION_154
0x40131fa	    0x48c7404899d4	mov qword [rax + 0x48], 0xffffffffffffd499	      9787	syntax.c	FUNCTION_154
0x4013202	    0x488b0d000000	            mov rcx, qword [0x04013209] 	      9788	syntax.c	FUNCTION_154
0x4013209	    0x8b0500000000	            mov eax, dword [0x0401320f] 	      9788	syntax.c	FUNCTION_154
0x401320f	          0x4863d0	                         movsxd rdx, eax	      9788	syntax.c	FUNCTION_154
0x4013212	          0x4889d0	                            mov rax, rdx	      9788	syntax.c	FUNCTION_154
0x4013215	        0x48c1e003	                              shl rax, 3	      9788	syntax.c	FUNCTION_154
0x4013219	          0x4801d0	                            add rax, rdx	      9788	syntax.c	FUNCTION_154
0x401321c	          0x4801c0	                            add rax, rax	      9788	syntax.c	FUNCTION_154
0x401321f	          0x4801d0	                            add rax, rdx	      9788	syntax.c	FUNCTION_154
0x4013222	        0x48c1e003	                              shl rax, 3	      9788	syntax.c	FUNCTION_154
0x4013226	          0x4801c8	                            add rax, rcx	      9788	syntax.c	FUNCTION_154
0x4013229	    0x48c7404099d4	mov qword [rax + 0x40], 0xffffffffffffd499	      9788	syntax.c	FUNCTION_154
0x4013231	    0x488b0d000000	            mov rcx, qword [0x04013238] 	      9790	syntax.c	FUNCTION_154
0x4013238	    0x8b0500000000	            mov eax, dword [0x0401323e] 	      9790	syntax.c	FUNCTION_154
0x401323e	          0x4863d0	                         movsxd rdx, eax	      9790	syntax.c	FUNCTION_154
0x4013241	          0x4889d0	                            mov rax, rdx	      9790	syntax.c	FUNCTION_154
0x4013244	        0x48c1e003	                              shl rax, 3	      9790	syntax.c	FUNCTION_154
0x4013248	          0x4801d0	                            add rax, rdx	      9790	syntax.c	FUNCTION_154
0x401324b	          0x4801c0	                            add rax, rax	      9790	syntax.c	FUNCTION_154
0x401324e	          0x4801d0	                            add rax, rdx	      9790	syntax.c	FUNCTION_154
0x4013251	        0x48c1e003	                              shl rax, 3	      9790	syntax.c	FUNCTION_154
0x4013255	          0x4801c8	                            add rax, rcx	      9790	syntax.c	FUNCTION_154
0x4013258	    0x48c7405099d4	mov qword [rax + 0x50], 0xffffffffffffd499	      9790	syntax.c	FUNCTION_154
0x4013260	    0x8b0500000000	            mov eax, dword [0x04013266] 	      9793	syntax.c	FUNCTION_154
0x4013266	          0x83c001	                              add eax, 1	      9793	syntax.c	FUNCTION_154
0x4013269	    0x890500000000	            mov dword [0x0401326f], eax 	      9793	syntax.c	FUNCTION_154
0x401326f	    0x8b0500000000	            mov eax, dword [0x04013275] 	      9795	syntax.c	FUNCTION_154
0x4013275	        0x4883c428	                           add rsp, 0x28	      9796	syntax.c	FUNCTION_154
0x4013279	              0x5b	                                 pop rbx	      9796	syntax.c	FUNCTION_154
0x401327a	              0x5d	                                 pop rbp	      9796	syntax.c	FUNCTION_154
0x401327b	              0xc3	                                     ret	      9796	syntax.c	FUNCTION_154
syntime_clear	functions,0:IF,1:SWITCH,0:FOR,1:CALL,4:ELSE,0:WHILE,0:DO,0	38
0x400cea1	              0x55	                                push rbp	      6702	syntax.c	FUNCTION_109
0x400cea2	          0x4889e5	                            mov rbp, rsp	      6702	syntax.c	FUNCTION_109
0x400cea5	        0x4883ec10	                           sub rsp, 0x10	      6702	syntax.c	FUNCTION_109
0x400cea9	    0x488b05000000	            mov rax, qword [0x0400ceb0] 	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0x400ceb0	          0x4889c7	                            mov rdi, rax	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0x400ceb3	      0xe800000000	                          call 0x400ceb8	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0x400ceb8	            0x85c0	                           test eax, eax	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0x400ceba	            0x7514	                           jne 0x400ced0	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0x400cebc	      0xbf00000000	                              mov edi, 0	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0x400cec1	      0xe800000000	                          call 0x400cec6	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0x400cec6	          0x4889c7	                            mov rdi, rax	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0x400cec9	      0xe800000000	                          call 0x400cece	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0x400cece	            0xeb60	                           jmp 0x400cf30	      6709	syntax.c	FUNCTION_109	IF_1
0x400ced0	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      6711	syntax.c	FUNCTION_109	FOR_1
0x400ced7	            0xeb41	                           jmp 0x400cf1a	      6711	syntax.c	FUNCTION_109	FOR_1
0x400ced9	    0x488b05000000	            mov rax, qword [0x0400cee0] 	      6713	syntax.c	FUNCTION_109	FOR_1
0x400cee0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6713	syntax.c	FUNCTION_109	FOR_1
0x400cee4	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      6713	syntax.c	FUNCTION_109	FOR_1
0x400ceeb	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6713	syntax.c	FUNCTION_109	FOR_1
0x400ceee	          0x4863d0	                         movsxd rdx, eax	      6713	syntax.c	FUNCTION_109	FOR_1
0x400cef1	          0x4889d0	                            mov rax, rdx	      6713	syntax.c	FUNCTION_109	FOR_1
0x400cef4	        0x48c1e002	                              shl rax, 2	      6713	syntax.c	FUNCTION_109	FOR_1
0x400cef8	          0x4801d0	                            add rax, rdx	      6713	syntax.c	FUNCTION_109	FOR_1
0x400cefb	        0x48c1e005	                              shl rax, 5	      6713	syntax.c	FUNCTION_109	FOR_1
0x400ceff	          0x4801c8	                            add rax, rcx	      6713	syntax.c	FUNCTION_109	FOR_1
0x400cf02	        0x488945f8	                mov qword [rbp - 8], rax	      6713	syntax.c	FUNCTION_109	FOR_1
0x400cf06	        0x488b45f8	                mov rax, qword [rbp - 8]	      6714	syntax.c	FUNCTION_109	FOR_1	CALL_4
0x400cf0a	        0x4883c070	                           add rax, 0x70	      6714	syntax.c	FUNCTION_109	FOR_1	CALL_4
0x400cf0e	          0x4889c7	                            mov rdi, rax	      6714	syntax.c	FUNCTION_109	FOR_1	CALL_4
0x400cf11	      0xe848ffffff	                 call sym.syn_clear_time	      6714	syntax.c	FUNCTION_109	FOR_1	CALL_4
0x400cf16	        0x8345f401	                add dword [rbp - 0xc], 1	      6711	syntax.c	FUNCTION_109	FOR_1
0x400cf1a	    0x488b05000000	            mov rax, qword [0x0400cf21] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x400cf21	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x400cf25	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x400cf2b	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      6711	syntax.c	FUNCTION_109	FOR_1
0x400cf2e	            0x7fa9	                            jg 0x400ced9	      6711	syntax.c	FUNCTION_109	FOR_1
0x400cf30	              0xc9	                                   leave	      6716	syntax.c	FUNCTION_109
0x400cf31	              0xc3	                                     ret	      6716	syntax.c	FUNCTION_109
syn_id2name	functions,0:IF,1:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	24
0x4012edf	              0x55	                                push rbp	      9679	syntax.c	FUNCTION_151
0x4012ee0	          0x4889e5	                            mov rbp, rsp	      9679	syntax.c	FUNCTION_151
0x4012ee3	          0x897dfc	                mov dword [rbp - 4], edi	      9679	syntax.c	FUNCTION_151
0x4012ee6	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9680	syntax.c	FUNCTION_151	IF_1
0x4012eea	            0x7e0b	                           jle 0x4012ef7	      9680	syntax.c	FUNCTION_151	IF_1
0x4012eec	    0x8b0500000000	            mov eax, dword [0x04012ef2] 	      9680	syntax.c	FUNCTION_151	IF_1
0x4012ef2	          0x3b45fc	                cmp eax, dword [rbp - 4]	      9680	syntax.c	FUNCTION_151	IF_1
0x4012ef5	            0x7d07	                           jge 0x4012efe	      9680	syntax.c	FUNCTION_151	IF_1
0x4012ef7	      0xb800000000	                              mov eax, 0	      9681	syntax.c	FUNCTION_151	IF_1
0x4012efc	            0xeb2d	                           jmp 0x4012f2b	      9681	syntax.c	FUNCTION_151	IF_1
0x4012efe	    0x488b0d000000	            mov rcx, qword [0x04012f05] 	      9682	syntax.c	FUNCTION_151
0x4012f05	          0x8b45fc	                mov eax, dword [rbp - 4]	      9682	syntax.c	FUNCTION_151
0x4012f08	          0x4863d0	                         movsxd rdx, eax	      9682	syntax.c	FUNCTION_151
0x4012f0b	          0x4889d0	                            mov rax, rdx	      9682	syntax.c	FUNCTION_151
0x4012f0e	        0x48c1e003	                              shl rax, 3	      9682	syntax.c	FUNCTION_151
0x4012f12	          0x4801d0	                            add rax, rdx	      9682	syntax.c	FUNCTION_151
0x4012f15	          0x4801c0	                            add rax, rax	      9682	syntax.c	FUNCTION_151
0x4012f18	          0x4801d0	                            add rax, rdx	      9682	syntax.c	FUNCTION_151
0x4012f1b	        0x48c1e003	                              shl rax, 3	      9682	syntax.c	FUNCTION_151
0x4012f1f	    0x482d98000000	                           sub rax, 0x98	      9682	syntax.c	FUNCTION_151
0x4012f25	          0x4801c8	                            add rax, rcx	      9682	syntax.c	FUNCTION_151
0x4012f28	          0x488b00	                    mov rax, qword [rax]	      9682	syntax.c	FUNCTION_151
0x4012f2b	              0x5d	                                 pop rbp	      9683	syntax.c	FUNCTION_151
0x4012f2c	              0xc3	                                     ret	      9683	syntax.c	FUNCTION_151
put_pattern	functions,0:IF,9:SWITCH,0:FOR,2:CALL,18:ELSE,2:WHILE,0:DO,0	166
0x4007c47	              0x55	                                push rbp	      4270	syntax.c	FUNCTION_70
0x4007c48	          0x4889e5	                            mov rbp, rsp	      4270	syntax.c	FUNCTION_70
0x4007c4b	        0x4883ec40	                           sub rsp, 0x40	      4270	syntax.c	FUNCTION_70
0x4007c4f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4270	syntax.c	FUNCTION_70
0x4007c53	          0x8975d4	             mov dword [rbp - 0x2c], esi	      4270	syntax.c	FUNCTION_70
0x4007c56	        0x488955c8	             mov qword [rbp - 0x38], rdx	      4270	syntax.c	FUNCTION_70
0x4007c5a	          0x894dd0	             mov dword [rbp - 0x30], ecx	      4270	syntax.c	FUNCTION_70
0x4007c5d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4278	syntax.c	FUNCTION_70	IF_1
0x4007c61	         0xfb74002	               movzx eax, word [rax + 2]	      4278	syntax.c	FUNCTION_70	IF_1
0x4007c65	           0xfbfd0	                           movsx edx, ax	      4278	syntax.c	FUNCTION_70	IF_1
0x4007c68	    0x8b0500000000	            mov eax, dword [0x04007c6e] 	      4278	syntax.c	FUNCTION_70	IF_1
0x4007c6e	            0x39c2	                            cmp edx, eax	      4278	syntax.c	FUNCTION_70	IF_1
0x4007c70	     0xf8480000000	                            je 0x4007cf6	      4278	syntax.c	FUNCTION_70	IF_1
0x4007c76	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4280	syntax.c	FUNCTION_70	IF_1
0x4007c7a	         0xfb74002	               movzx eax, word [rax + 2]	      4280	syntax.c	FUNCTION_70	IF_1
0x4007c7e	              0x98	                                    cwde	      4280	syntax.c	FUNCTION_70	IF_1
0x4007c7f	    0x890500000000	            mov dword [0x04007c85], eax 	      4280	syntax.c	FUNCTION_70	IF_1
0x4007c85	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x4007c88	            0x89c6	                            mov esi, eax	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x4007c8a	      0xbf00000000	                              mov edi, 0	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x4007c8f	      0xe800000000	                          call 0x4007c94	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x4007c94	      0xbf3d000000	                           mov edi, 0x3d	      4282	syntax.c	FUNCTION_70	IF_1	CALL_2
0x4007c99	      0xe800000000	                          call 0x4007c9e	      4282	syntax.c	FUNCTION_70	IF_1	CALL_2
0x4007c9e	    0x8b0500000000	            mov eax, dword [0x04007ca4] 	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x4007ca4	            0x85c0	                           test eax, eax	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x4007ca6	            0x750c	                           jne 0x4007cb4	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x4007ca8	      0xbf00000000	                              mov edi, 0	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x4007cad	      0xe800000000	                          call 0x4007cb2	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x4007cb2	            0xeb38	                           jmp 0x4007cec	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x4007cb4	    0x488b0d000000	            mov rcx, qword [0x04007cbb] 	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007cbb	    0x8b0500000000	            mov eax, dword [0x04007cc1] 	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007cc1	          0x4863d0	                         movsxd rdx, eax	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007cc4	          0x4889d0	                            mov rax, rdx	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007cc7	        0x48c1e003	                              shl rax, 3	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007ccb	          0x4801d0	                            add rax, rdx	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007cce	          0x4801c0	                            add rax, rax	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007cd1	          0x4801d0	                            add rax, rdx	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007cd4	        0x48c1e003	                              shl rax, 3	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007cd8	    0x482d98000000	                           sub rax, 0x98	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007cde	          0x4801c8	                            add rax, rcx	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007ce1	          0x488b00	                    mov rax, qword [rax]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007ce4	          0x4889c7	                            mov rdi, rax	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007ce7	      0xe800000000	                          call 0x4007cec	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4007cec	      0xbf20000000	                           mov edi, 0x20	      4287	syntax.c	FUNCTION_70	IF_1	CALL_5
0x4007cf1	      0xe800000000	                          call 0x4007cf6	      4287	syntax.c	FUNCTION_70	IF_1	CALL_5
0x4007cf6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4291	syntax.c	FUNCTION_70	CALL_6
0x4007cf9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4291	syntax.c	FUNCTION_70	CALL_6
0x4007cfd	            0x89d6	                            mov esi, edx	      4291	syntax.c	FUNCTION_70	CALL_6
0x4007cff	          0x4889c7	                            mov rdi, rax	      4291	syntax.c	FUNCTION_70	CALL_6
0x4007d02	      0xe800000000	                          call 0x4007d07	      4291	syntax.c	FUNCTION_70	CALL_6
0x4007d07	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4292	syntax.c	FUNCTION_70	CALL_7
0x4007d0a	            0x89c7	                            mov edi, eax	      4292	syntax.c	FUNCTION_70	CALL_7
0x4007d0c	      0xe800000000	                          call 0x4007d11	      4292	syntax.c	FUNCTION_70	CALL_7
0x4007d11	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d18	            0xeb23	                           jmp 0x4007d3d	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d1a	    0x488b15000000	            mov rdx, qword [0x04007d21] 	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4007d21	        0x8345f001	               add dword [rbp - 0x10], 1	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4007d25	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4007d28	            0x4898	                                    cdqe	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4007d2a	          0x4801d0	                            add rax, rdx	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4007d2d	           0xfb600	                   movzx eax, byte [rax]	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4007d30	            0x84c0	                             test al, al	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4007d32	            0x7509	                           jne 0x4007d3d	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4007d34	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4298	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4007d3b	            0xeb2c	                           jmp 0x4007d69	      4299	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4007d3d	    0x488b15000000	            mov rdx, qword [0x04007d44] 	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d44	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d47	            0x4898	                                    cdqe	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d49	          0x4801d0	                            add rax, rdx	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d4c	           0xfb600	                   movzx eax, byte [rax]	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d4f	           0xfbed0	                           movsx edx, al	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d52	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d56	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d5a	            0x89d6	                            mov esi, edx	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d5c	          0x4889c7	                            mov rdi, rax	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d5f	      0xe800000000	                          call 0x4007d64	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d64	          0x4885c0	                           test rax, rax	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d67	            0x75b1	                           jne 0x4007d1a	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4007d69	    0x488b15000000	            mov rdx, qword [0x04007d70] 	      4301	syntax.c	FUNCTION_70	CALL_9
0x4007d70	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4301	syntax.c	FUNCTION_70	CALL_9
0x4007d73	            0x4898	                                    cdqe	      4301	syntax.c	FUNCTION_70	CALL_9
0x4007d75	          0x4801d0	                            add rax, rdx	      4301	syntax.c	FUNCTION_70	CALL_9
0x4007d78	           0xfb600	                   movzx eax, byte [rax]	      4301	syntax.c	FUNCTION_70	CALL_9
0x4007d7b	           0xfbec0	                           movsx eax, al	      4301	syntax.c	FUNCTION_70	CALL_9
0x4007d7e	            0x89c7	                            mov edi, eax	      4301	syntax.c	FUNCTION_70	CALL_9
0x4007d80	      0xe800000000	                          call 0x4007d85	      4301	syntax.c	FUNCTION_70	CALL_9
0x4007d85	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4302	syntax.c	FUNCTION_70	CALL_10
0x4007d89	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4302	syntax.c	FUNCTION_70	CALL_10
0x4007d8d	          0x4889c7	                            mov rdi, rax	      4302	syntax.c	FUNCTION_70	CALL_10
0x4007d90	      0xe800000000	                          call 0x4007d95	      4302	syntax.c	FUNCTION_70	CALL_10
0x4007d95	    0x488b15000000	            mov rdx, qword [0x04007d9c] 	      4303	syntax.c	FUNCTION_70	CALL_11
0x4007d9c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4303	syntax.c	FUNCTION_70	CALL_11
0x4007d9f	            0x4898	                                    cdqe	      4303	syntax.c	FUNCTION_70	CALL_11
0x4007da1	          0x4801d0	                            add rax, rdx	      4303	syntax.c	FUNCTION_70	CALL_11
0x4007da4	           0xfb600	                   movzx eax, byte [rax]	      4303	syntax.c	FUNCTION_70	CALL_11
0x4007da7	           0xfbec0	                           movsx eax, al	      4303	syntax.c	FUNCTION_70	CALL_11
0x4007daa	            0x89c7	                            mov edi, eax	      4303	syntax.c	FUNCTION_70	CALL_11
0x4007dac	      0xe800000000	                          call 0x4007db1	      4303	syntax.c	FUNCTION_70	CALL_11
0x4007db1	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      4306	syntax.c	FUNCTION_70
0x4007db8	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4307	syntax.c	FUNCTION_70	FOR_2
0x4007dbf	      0xe9cb000000	                           jmp 0x4007e8f	      4307	syntax.c	FUNCTION_70	FOR_2
0x4007dc4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4309	syntax.c	FUNCTION_70	FOR_2
0x4007dc7	      0xba01000000	                              mov edx, 1	      4309	syntax.c	FUNCTION_70	FOR_2
0x4007dcc	            0x89c1	                            mov ecx, eax	      4309	syntax.c	FUNCTION_70	FOR_2
0x4007dce	            0xd3e2	                             shl edx, cl	      4309	syntax.c	FUNCTION_70	FOR_2
0x4007dd0	            0x89d0	                            mov eax, edx	      4309	syntax.c	FUNCTION_70	FOR_2
0x4007dd2	          0x8945f4	              mov dword [rbp - 0xc], eax	      4309	syntax.c	FUNCTION_70	FOR_2
0x4007dd5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007dd9	         0xfb74004	               movzx eax, word [rax + 4]	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007ddd	              0x98	                                    cwde	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007dde	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007de1	            0x89d1	                            mov ecx, edx	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007de3	          0xc1e107	                              shl ecx, 7	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007de6	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007de9	             0x1ca	                            add edx, ecx	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007deb	            0x21d0	                            and eax, edx	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007ded	            0x85c0	                           test eax, eax	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007def	     0xf8496000000	                            je 0x4007e8b	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007df5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4312	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_5
0x4007df9	            0x750a	                           jne 0x4007e05	      4312	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_5
0x4007dfb	      0xbf2c000000	                           mov edi, 0x2c	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_12
0x4007e00	      0xe800000000	                          call 0x4007e05	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_12
0x4007e05	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x4007e08	            0x4898	                                    cdqe	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x4007e0a	    0x488b04c50000	                  mov rax, qword [rax*8]	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x4007e12	          0x4889c7	                            mov rdi, rax	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x4007e15	      0xe800000000	                          call 0x4007e1a	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x4007e1a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007e1e	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007e21	          0x4863d2	                         movsxd rdx, edx	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007e24	        0x8b449008	       mov eax, dword [rax + rdx*4 + 8] 	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007e28	            0x4898	                                    cdqe	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007e2a	        0x488945f8	                mov qword [rbp - 8], rax	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007e2e	        0x837df006	               cmp dword [rbp - 0x10], 6	      4316	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6
0x4007e32	            0x7437	                            je 0x4007e6b	      4316	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6
0x4007e34	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x4007e38	         0xfb74004	               movzx eax, word [rax + 4]	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x4007e3c	              0x98	                                    cwde	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x4007e3d	          0x2345f4	              and eax, dword [rbp - 0xc]	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x4007e40	            0x85c0	                           test eax, eax	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x4007e42	            0x740c	                            je 0x4007e50	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x4007e44	      0xbf73000000	                           mov edi, 0x73	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_14
0x4007e49	      0xe800000000	                          call 0x4007e4e	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_14
0x4007e4e	            0xeb0a	                           jmp 0x4007e5a	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_14
0x4007e50	      0xbf65000000	                           mov edi, 0x65	      4321	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x4007e55	      0xe800000000	                          call 0x4007e5a	      4321	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x4007e5a	      0x48837df800	                  cmp qword [rbp - 8], 0	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x4007e5f	            0x7e0a	                           jle 0x4007e6b	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x4007e61	      0xbf2b000000	                           mov edi, 0x2b	      4323	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_16
0x4007e66	      0xe800000000	                          call 0x4007e6b	      4323	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_16
0x4007e6b	      0x48837df800	                  cmp qword [rbp - 8], 0	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x4007e70	            0x7506	                           jne 0x4007e78	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x4007e72	        0x837df006	               cmp dword [rbp - 0x10], 6	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x4007e76	            0x750c	                           jne 0x4007e84	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x4007e78	        0x488b45f8	                mov rax, qword [rbp - 8]	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_17
0x4007e7c	          0x4889c7	                            mov rdi, rax	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_17
0x4007e7f	      0xe800000000	                          call 0x4007e84	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_17
0x4007e84	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4007e8b	        0x8345f001	               add dword [rbp - 0x10], 1	      4307	syntax.c	FUNCTION_70	FOR_2
0x4007e8f	        0x837df006	               cmp dword [rbp - 0x10], 6	      4307	syntax.c	FUNCTION_70	FOR_2
0x4007e93	     0xf8e2bffffff	                           jle 0x4007dc4	      4307	syntax.c	FUNCTION_70	FOR_2
0x4007e99	      0xbf20000000	                           mov edi, 0x20	      4330	syntax.c	FUNCTION_70	CALL_18
0x4007e9e	      0xe800000000	                          call 0x4007ea3	      4330	syntax.c	FUNCTION_70	CALL_18
0x4007ea3	              0x90	                                     nop	      4331	syntax.c	FUNCTION_70
0x4007ea4	              0xc9	                                   leave	      4331	syntax.c	FUNCTION_70
0x4007ea5	              0xc3	                                     ret	      4331	syntax.c	FUNCTION_70
syn_clear_one	functions,0:IF,2:SWITCH,0:FOR,1:CALL,3:ELSE,0:WHILE,0:DO,0	60
0x4006c7e	              0x55	                                push rbp	      3839	syntax.c	FUNCTION_56
0x4006c7f	          0x4889e5	                            mov rbp, rsp	      3839	syntax.c	FUNCTION_56
0x4006c82	        0x4883ec20	                           sub rsp, 0x20	      3839	syntax.c	FUNCTION_56
0x4006c86	          0x897dec	             mov dword [rbp - 0x14], edi	      3839	syntax.c	FUNCTION_56
0x4006c89	          0x8975e8	             mov dword [rbp - 0x18], esi	      3839	syntax.c	FUNCTION_56
0x4006c8c	        0x837de800	               cmp dword [rbp - 0x18], 0	      3844	syntax.c	FUNCTION_56	IF_1
0x4006c90	            0x753a	                           jne 0x4006ccc	      3844	syntax.c	FUNCTION_56	IF_1
0x4006c92	    0x488b05000000	            mov rax, qword [0x04006c99] 	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4006c99	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4006c9d	          0x4889c2	                            mov rdx, rax	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4006ca0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4006ca3	          0x4889d6	                            mov rsi, rdx	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4006ca6	            0x89c7	                            mov edi, eax	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4006ca8	      0xe810150000	              call sym.syn_clear_keyword	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4006cad	    0x488b05000000	            mov rax, qword [0x04006cb4] 	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4006cb4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4006cb8	    0x488d90280100	                  lea rdx, [rax + 0x128]	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4006cbf	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4006cc2	          0x4889d6	                            mov rsi, rdx	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4006cc5	            0x89c7	                            mov edi, eax	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4006cc7	      0xe8f1140000	              call sym.syn_clear_keyword	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x4006ccc	    0x488b05000000	            mov rax, qword [0x04006cd3] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x4006cd3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x4006cd7	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x4006cdd	          0x8945f4	              mov dword [rbp - 0xc], eax	      3851	syntax.c	FUNCTION_56	FOR_1
0x4006ce0	            0xeb65	                           jmp 0x4006d47	      3851	syntax.c	FUNCTION_56	FOR_1
0x4006ce2	    0x488b05000000	            mov rax, qword [0x04006ce9] 	      3853	syntax.c	FUNCTION_56	FOR_1
0x4006ce9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3853	syntax.c	FUNCTION_56	FOR_1
0x4006ced	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3853	syntax.c	FUNCTION_56	FOR_1
0x4006cf4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3853	syntax.c	FUNCTION_56	FOR_1
0x4006cf7	          0x4863d0	                         movsxd rdx, eax	      3853	syntax.c	FUNCTION_56	FOR_1
0x4006cfa	          0x4889d0	                            mov rax, rdx	      3853	syntax.c	FUNCTION_56	FOR_1
0x4006cfd	        0x48c1e002	                              shl rax, 2	      3853	syntax.c	FUNCTION_56	FOR_1
0x4006d01	          0x4801d0	                            add rax, rdx	      3853	syntax.c	FUNCTION_56	FOR_1
0x4006d04	        0x48c1e005	                              shl rax, 5	      3853	syntax.c	FUNCTION_56	FOR_1
0x4006d08	          0x4801c8	                            add rax, rcx	      3853	syntax.c	FUNCTION_56	FOR_1
0x4006d0b	        0x488945f8	                mov qword [rbp - 8], rax	      3853	syntax.c	FUNCTION_56	FOR_1
0x4006d0f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4006d13	         0xfb74054	           movzx eax, word [rax + 0x54] 	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4006d17	              0x98	                                    cwde	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4006d18	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4006d1b	            0x752a	                           jne 0x4006d47	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4006d1d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4006d21	         0xfb64001	               movzx eax, byte [rax + 1]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4006d25	           0xfbec0	                           movsx eax, al	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4006d28	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4006d2b	            0x7402	                            je 0x4006d2f	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4006d2d	            0xeb18	                           jmp 0x4006d47	      3855	syntax.c	FUNCTION_56	FOR_1	IF_2
0x4006d2f	    0x488b05000000	            mov rax, qword [0x04006d36] 	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4006d36	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4006d3a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4006d3d	            0x89d6	                            mov esi, edx	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4006d3f	          0x4889c7	                            mov rdi, rax	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4006d42	      0xe81dfaffff	             call sym.syn_remove_pattern	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x4006d47	        0x836df401	                sub dword [rbp - 0xc], 1	      3851	syntax.c	FUNCTION_56	FOR_1
0x4006d4b	        0x837df400	                cmp dword [rbp - 0xc], 0	      3851	syntax.c	FUNCTION_56	FOR_1
0x4006d4f	            0x7991	                           jns 0x4006ce2	      3851	syntax.c	FUNCTION_56	FOR_1
0x4006d51	              0x90	                                     nop	      3858	syntax.c	FUNCTION_56
0x4006d52	              0xc9	                                   leave	      3858	syntax.c	FUNCTION_56
0x4006d53	              0xc3	                                     ret	      3858	syntax.c	FUNCTION_56
set_context_in_syntax_cmd	functions,0:IF,7:SWITCH,0:FOR,0:CALL,10:ELSE,5:WHILE,0:DO,0	132
0x400c937	              0x55	                                push rbp	      6488	syntax.c	FUNCTION_100
0x400c938	          0x4889e5	                            mov rbp, rsp	      6488	syntax.c	FUNCTION_100
0x400c93b	        0x4883ec20	                           sub rsp, 0x20	      6488	syntax.c	FUNCTION_100
0x400c93f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6488	syntax.c	FUNCTION_100
0x400c943	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6488	syntax.c	FUNCTION_100
0x400c947	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6492	syntax.c	FUNCTION_100
0x400c94b	    0xc7000c000000	                    mov dword [rax], 0xc	      6492	syntax.c	FUNCTION_100
0x400c951	    0xc70500000000	               mov dword [0x0400c95b], 0	      6493	syntax.c	FUNCTION_100
0x400c95b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6494	syntax.c	FUNCTION_100
0x400c95f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6494	syntax.c	FUNCTION_100
0x400c963	        0x48895008	                mov qword [rax + 8], rdx	      6494	syntax.c	FUNCTION_100
0x400c967	    0xc70500000000	               mov dword [0x0400c971], 0	      6495	syntax.c	FUNCTION_100
0x400c971	    0xc70500000000	               mov dword [0x0400c97b], 0	      6496	syntax.c	FUNCTION_100
0x400c97b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6499	syntax.c	FUNCTION_100	IF_1
0x400c97f	           0xfb600	                   movzx eax, byte [rax]	      6499	syntax.c	FUNCTION_100	IF_1
0x400c982	            0x84c0	                             test al, al	      6499	syntax.c	FUNCTION_100	IF_1
0x400c984	     0xf84a9010000	                            je 0x400cb33	      6499	syntax.c	FUNCTION_100	IF_1
0x400c98a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x400c98e	          0x4889c7	                            mov rdi, rax	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x400c991	      0xe800000000	                          call 0x400c996	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x400c996	        0x488945f8	                mov qword [rbp - 8], rax	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x400c99a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0x400c99e	           0xfb600	                   movzx eax, byte [rax]	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0x400c9a1	            0x84c0	                             test al, al	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0x400c9a3	     0xf848a010000	                            je 0x400cb33	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0x400c9a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x400c9ad	          0x4889c7	                            mov rdi, rax	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x400c9b0	      0xe800000000	                          call 0x400c9b5	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x400c9b5	          0x4889c2	                            mov rdx, rax	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x400c9b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x400c9bc	        0x48895008	                mov qword [rax + 8], rdx	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x400c9c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x400c9c4	        0x488b4008	                mov rax, qword [rax + 8]	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x400c9c8	          0x4889c7	                            mov rdi, rax	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x400c9cb	      0xe800000000	                          call 0x400c9d0	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x400c9d0	           0xfb600	                   movzx eax, byte [rax]	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x400c9d3	            0x84c0	                             test al, al	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x400c9d5	            0x740f	                            je 0x400c9e6	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x400c9d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0x400c9db	    0xc70000000000	                      mov dword [rax], 0	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0x400c9e1	      0xe94d010000	                           jmp 0x400cb33	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400c9e6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400c9ea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400c9ee	          0x4829c2	                            sub rdx, rax	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400c9f1	          0x4889d0	                            mov rax, rdx	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400c9f4	          0x4889c2	                            mov rdx, rax	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400c9f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400c9fb	      0xbe00000000	                              mov esi, 0	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400ca00	          0x4889c7	                            mov rdi, rax	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400ca03	      0xe800000000	                          call 0x400ca08	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400ca08	            0x85c0	                           test eax, eax	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400ca0a	            0x750f	                           jne 0x400ca1b	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400ca0c	    0xc70500000000	               mov dword [0x0400ca16], 1	      6508	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4
0x400ca16	      0xe918010000	                           jmp 0x400cb33	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400ca1b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400ca1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400ca23	          0x4829c2	                            sub rdx, rax	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400ca26	          0x4889d0	                            mov rax, rdx	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400ca29	          0x4889c2	                            mov rdx, rax	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400ca2c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400ca30	      0xbe00000000	                              mov esi, 0	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400ca35	          0x4889c7	                            mov rdi, rax	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400ca38	      0xe800000000	                          call 0x400ca3d	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400ca3d	            0x85c0	                           test eax, eax	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400ca3f	            0x750f	                           jne 0x400ca50	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400ca41	    0xc70500000000	               mov dword [0x0400ca4b], 2	      6510	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5
0x400ca4b	      0xe9e3000000	                           jmp 0x400cb33	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400ca50	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400ca54	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400ca58	          0x4829c2	                            sub rdx, rax	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400ca5b	          0x4889d0	                            mov rax, rdx	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400ca5e	          0x4889c2	                            mov rdx, rax	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400ca61	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400ca65	      0xbe00000000	                              mov esi, 0	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400ca6a	          0x4889c7	                            mov rdi, rax	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400ca6d	      0xe800000000	                          call 0x400ca72	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400ca72	            0x85c0	                           test eax, eax	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400ca74	            0x750f	                           jne 0x400ca85	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400ca76	    0xc70500000000	               mov dword [0x0400ca80], 3	      6512	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6
0x400ca80	      0xe9ae000000	                           jmp 0x400cb33	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400ca85	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400ca89	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400ca8d	          0x4829c2	                            sub rdx, rax	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400ca90	          0x4889d0	                            mov rax, rdx	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400ca93	          0x4889c2	                            mov rdx, rax	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400ca96	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400ca9a	      0xbe00000000	                              mov esi, 0	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400ca9f	          0x4889c7	                            mov rdi, rax	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400caa2	      0xe800000000	                          call 0x400caa7	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400caa7	            0x85c0	                           test eax, eax	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400caa9	            0x7472	                            je 0x400cb1d	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400caab	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400caaf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400cab3	          0x4829c2	                            sub rdx, rax	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400cab6	          0x4889d0	                            mov rax, rdx	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400cab9	          0x4889c2	                            mov rdx, rax	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400cabc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400cac0	      0xbe00000000	                              mov esi, 0	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400cac5	          0x4889c7	                            mov rdi, rax	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400cac8	      0xe800000000	                          call 0x400cacd	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400cacd	            0x85c0	                           test eax, eax	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400cacf	            0x744c	                            je 0x400cb1d	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400cad1	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400cad5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400cad9	          0x4829c2	                            sub rdx, rax	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400cadc	          0x4889d0	                            mov rax, rdx	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400cadf	          0x4889c2	                            mov rdx, rax	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400cae2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400cae6	      0xbe00000000	                              mov esi, 0	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400caeb	          0x4889c7	                            mov rdi, rax	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400caee	      0xe800000000	                          call 0x400caf3	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400caf3	            0x85c0	                           test eax, eax	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400caf5	            0x7426	                            je 0x400cb1d	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400caf7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400cafb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400caff	          0x4829c2	                            sub rdx, rax	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400cb02	          0x4889d0	                            mov rax, rdx	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400cb05	          0x4889c2	                            mov rdx, rax	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400cb08	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400cb0c	      0xbe00000000	                              mov esi, 0	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400cb11	          0x4889c7	                            mov rdi, rax	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400cb14	      0xe800000000	                          call 0x400cb19	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400cb19	            0x85c0	                           test eax, eax	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400cb1b	            0x750c	                           jne 0x400cb29	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400cb1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6517	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7
0x400cb21	    0xc7000d000000	                    mov dword [rax], 0xd	      6517	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7
0x400cb27	            0xeb0a	                           jmp 0x400cb33	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400cb29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6519	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_5
0x400cb2d	    0xc70000000000	                      mov dword [rax], 0	      6519	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_5
0x400cb33	              0x90	                                     nop	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400cb34	              0xc9	                                   leave	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400cb35	              0xc3	                                     ret	      6522	syntax.c	FUNCTION_100	ELSE_5
syn_cmd_conceal	functions,0:IF,5:SWITCH,0:FOR,0:CALL,10:ELSE,4:WHILE,0:DO,0	86
0x4005cfc	              0x55	                                push rbp	      3461	syntax.c	FUNCTION_45
0x4005cfd	          0x4889e5	                            mov rbp, rsp	      3461	syntax.c	FUNCTION_45
0x4005d00	        0x4883ec20	                           sub rsp, 0x20	      3461	syntax.c	FUNCTION_45
0x4005d04	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3461	syntax.c	FUNCTION_45
0x4005d08	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3461	syntax.c	FUNCTION_45
0x4005d0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3463	syntax.c	FUNCTION_45
0x4005d0f	          0x488b00	                    mov rax, qword [rax]	      3463	syntax.c	FUNCTION_45
0x4005d12	        0x488945f0	             mov qword [rbp - 0x10], rax	      3463	syntax.c	FUNCTION_45
0x4005d16	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3466	syntax.c	FUNCTION_45	CALL_1
0x4005d1a	          0x4889c7	                            mov rdi, rax	      3466	syntax.c	FUNCTION_45	CALL_1
0x4005d1d	      0xe800000000	                          call 0x4005d22	      3466	syntax.c	FUNCTION_45	CALL_1
0x4005d22	          0x4889c2	                            mov rdx, rax	      3466	syntax.c	FUNCTION_45	CALL_1
0x4005d25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3466	syntax.c	FUNCTION_45	CALL_1
0x4005d29	        0x48895008	                mov qword [rax + 8], rdx	      3466	syntax.c	FUNCTION_45	CALL_1
0x4005d2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3467	syntax.c	FUNCTION_45	IF_1
0x4005d31	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3467	syntax.c	FUNCTION_45	IF_1
0x4005d34	            0x85c0	                           test eax, eax	      3467	syntax.c	FUNCTION_45	IF_1
0x4005d36	     0xf8506010000	                           jne 0x4005e42	      3467	syntax.c	FUNCTION_45	IF_1
0x4005d3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3470	syntax.c	FUNCTION_45	CALL_2
0x4005d40	          0x4889c7	                            mov rdi, rax	      3470	syntax.c	FUNCTION_45	CALL_2
0x4005d43	      0xe800000000	                          call 0x4005d48	      3470	syntax.c	FUNCTION_45	CALL_2
0x4005d48	        0x488945f8	                mov qword [rbp - 8], rax	      3470	syntax.c	FUNCTION_45	CALL_2
0x4005d4c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3471	syntax.c	FUNCTION_45	IF_2
0x4005d50	           0xfb600	                   movzx eax, byte [rax]	      3471	syntax.c	FUNCTION_45	IF_2
0x4005d53	            0x84c0	                             test al, al	      3471	syntax.c	FUNCTION_45	IF_2
0x4005d55	            0x7543	                           jne 0x4005d9a	      3471	syntax.c	FUNCTION_45	IF_2
0x4005d57	    0x488b05000000	            mov rax, qword [0x04005d5e] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4005d5e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4005d62	    0x8b8008030000	           mov eax, dword [rax + 0x308] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4005d68	            0x85c0	                           test eax, eax	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4005d6a	            0x7417	                            je 0x4005d83	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4005d6c	      0xbf00000000	                              mov edi, 0	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4005d71	      0xe800000000	                          call 0x4005d76	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4005d76	          0x4889c7	                            mov rdi, rax	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4005d79	      0xe800000000	                          call 0x4005d7e	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4005d7e	      0xe9c0000000	                           jmp 0x4005e43	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4005d83	      0xbf00000000	                              mov edi, 0	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4005d88	      0xe800000000	                          call 0x4005d8d	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4005d8d	          0x4889c7	                            mov rdi, rax	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4005d90	      0xe800000000	                          call 0x4005d95	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4005d95	      0xe9a9000000	                           jmp 0x4005e43	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4005d9a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005d9e	      0xba02000000	                              mov edx, 2	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005da3	      0xbe00000000	                              mov esi, 0	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005da8	          0x4889c7	                            mov rdi, rax	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005dab	      0xe800000000	                          call 0x4005db0	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005db0	            0x85c0	                           test eax, eax	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005db2	            0x752b	                           jne 0x4005ddf	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005db4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005db8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005dbc	          0x4829c2	                            sub rdx, rax	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005dbf	          0x4889d0	                            mov rax, rdx	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005dc2	        0x4883f802	                              cmp rax, 2	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005dc6	            0x7517	                           jne 0x4005ddf	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4005dc8	    0x488b05000000	            mov rax, qword [0x04005dcf] 	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4005dcf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4005dd3	    0xc78008030000	              mov dword [rax + 0x308], 1	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4005ddd	            0xeb64	                           jmp 0x4005e43	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4005ddf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005de3	      0xba03000000	                              mov edx, 3	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005de8	      0xbe00000000	                              mov esi, 0	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005ded	          0x4889c7	                            mov rdi, rax	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005df0	      0xe800000000	                          call 0x4005df5	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005df5	            0x85c0	                           test eax, eax	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005df7	            0x752b	                           jne 0x4005e24	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005df9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005dfd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005e01	          0x4829c2	                            sub rdx, rax	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005e04	          0x4889d0	                            mov rax, rdx	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005e07	        0x4883f803	                              cmp rax, 3	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005e0b	            0x7517	                           jne 0x4005e24	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4005e0d	    0x488b05000000	            mov rax, qword [0x04005e14] 	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4005e14	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4005e18	    0xc78008030000	              mov dword [rax + 0x308], 0	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4005e22	            0xeb1f	                           jmp 0x4005e43	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4005e24	      0xbf00000000	                              mov edi, 0	      3483	syntax.c	FUNCTION_45	CALL_10
0x4005e29	      0xe800000000	                          call 0x4005e2e	      3483	syntax.c	FUNCTION_45	CALL_10
0x4005e2e	          0x4889c2	                            mov rdx, rax	      3483	syntax.c	FUNCTION_45	CALL_10
0x4005e31	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3483	syntax.c	FUNCTION_45	CALL_10
0x4005e35	          0x4889c6	                            mov rsi, rax	      3483	syntax.c	FUNCTION_45	CALL_10
0x4005e38	          0x4889d7	                            mov rdi, rdx	      3483	syntax.c	FUNCTION_45	CALL_10
0x4005e3b	      0xe800000000	                          call 0x4005e40	      3483	syntax.c	FUNCTION_45	CALL_10
0x4005e40	            0xeb01	                           jmp 0x4005e43	      3483	syntax.c	FUNCTION_45	CALL_10
0x4005e42	              0x90	                                     nop	      3468	syntax.c	FUNCTION_45	IF_1
0x4005e43	              0xc9	                                   leave	      3485	syntax.c	FUNCTION_45
0x4005e44	              0xc3	                                     ret	      3485	syntax.c	FUNCTION_45
syn_list_keywords	functions,0:IF,10:SWITCH,0:FOR,2:CALL,16:ELSE,1:WHILE,0:DO,0	200
0x4007ea6	              0x55	                                push rbp	      4343	syntax.c	FUNCTION_71
0x4007ea7	          0x4889e5	                            mov rbp, rsp	      4343	syntax.c	FUNCTION_71
0x4007eaa	        0x4883ec60	                           sub rsp, 0x60	      4343	syntax.c	FUNCTION_71
0x4007eae	          0x897dbc	             mov dword [rbp - 0x44], edi	      4343	syntax.c	FUNCTION_71
0x4007eb1	        0x488975b0	             mov qword [rbp - 0x50], rsi	      4343	syntax.c	FUNCTION_71
0x4007eb5	          0x8955b8	             mov dword [rbp - 0x48], edx	      4343	syntax.c	FUNCTION_71
0x4007eb8	          0x894dac	             mov dword [rbp - 0x54], ecx	      4343	syntax.c	FUNCTION_71
0x4007ebb	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4348	syntax.c	FUNCTION_71
0x4007ec2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4349	syntax.c	FUNCTION_71
0x4007eca	    0x48c745f80000	                  mov qword [rbp - 8], 0	      4350	syntax.c	FUNCTION_71
0x4007ed2	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      4351	syntax.c	FUNCTION_71
0x4007ed9	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      4352	syntax.c	FUNCTION_71
0x4007ee0	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      4353	syntax.c	FUNCTION_71
0x4007ee7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4359	syntax.c	FUNCTION_71
0x4007eeb	        0x488b4008	                mov rax, qword [rax + 8]	      4359	syntax.c	FUNCTION_71
0x4007eef	          0x8945cc	             mov dword [rbp - 0x34], eax	      4359	syntax.c	FUNCTION_71
0x4007ef2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4360	syntax.c	FUNCTION_71	FOR_1
0x4007ef6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4360	syntax.c	FUNCTION_71	FOR_1
0x4007efa	        0x488945e0	             mov qword [rbp - 0x20], rax	      4360	syntax.c	FUNCTION_71	FOR_1
0x4007efe	      0xe9a1020000	                           jmp 0x40081a4	      4360	syntax.c	FUNCTION_71	FOR_1
0x4007f03	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x4007f07	        0x488b4008	                mov rax, qword [rax + 8]	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x4007f0b	          0x4885c0	                           test rax, rax	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x4007f0e	     0xf848b020000	                            je 0x400819f	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x4007f14	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x4007f18	        0x488b4008	                mov rax, qword [rax + 8]	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x4007f1c	    0x483d00000000	                              cmp rax, 0	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x4007f22	     0xf8477020000	                            je 0x400819f	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x4007f28	        0x836dcc01	               sub dword [rbp - 0x34], 1	      4364	syntax.c	FUNCTION_71	FOR_1	IF_1
0x4007f2c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x4007f30	        0x488b4008	                mov rax, qword [rax + 8]	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x4007f34	        0x4883e828	                           sub rax, 0x28	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x4007f38	        0x488945e8	             mov qword [rbp - 0x18], rax	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x4007f3c	      0xe949020000	                           jmp 0x400818a	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x4007f41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x4007f45	         0xfb7400c	            movzx eax, word [rax + 0xc] 	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x4007f49	              0x98	                                    cwde	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x4007f4a	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x4007f4d	     0xf852c020000	                           jne 0x400817f	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x4007f53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f57	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f5a	          0x83e001	                              and eax, 1	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f5d	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f60	            0x754f	                           jne 0x4007fb1	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f66	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f69	      0x2580000000	                           and eax, 0x80	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f6e	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f71	            0x753e	                           jne 0x4007fb1	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f77	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f7a	      0x2500010000	                          and eax, 0x100	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f7f	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f82	            0x752d	                           jne 0x4007fb1	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f84	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f88	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f8b	      0x2500020000	                          and eax, 0x200	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f90	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f93	            0x751c	                           jne 0x4007fb1	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4373	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f99	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4373	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007f9d	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4373	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007fa1	            0x750e	                           jne 0x4007fb1	      4373	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007fa3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4374	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007fa7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4374	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007fab	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4374	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007faf	            0x7409	                            je 0x4007fba	      4374	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007fb1	    0xc745c80f2700	          mov dword [rbp - 0x38], 0x270f	      4375	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007fb8	            0xeb13	                           jmp 0x4007fcd	      4375	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4007fba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4007fbe	        0x4883c028	                           add rax, 0x28	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4007fc2	          0x4889c7	                            mov rdi, rax	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4007fc5	      0xe800000000	                          call 0x4007fca	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4007fca	          0x8945c8	             mov dword [rbp - 0x38], eax	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4007fcd	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_3
0x4007fd0	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_3
0x4007fd3	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_3
0x4007fd6	            0x89ce	                            mov esi, ecx	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_3
0x4007fd8	            0x89c7	                            mov edi, eax	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_3
0x4007fda	      0xe8a5a90000	                call sym.syn_list_header	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_3
0x4007fdf	            0x85c0	                           test eax, eax	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_3
0x4007fe1	            0x742c	                            je 0x400800f	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_3
0x4007fe3	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4381	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x4007fea	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4382	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x4007ff2	    0x48c745f80000	                  mov qword [rbp - 8], 0	      4383	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x4007ffa	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      4384	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x4008001	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      4385	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x4008008	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      4386	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x400800f	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      4388	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x4008016	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x400801a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x400801d	          0x83e001	                              and eax, 1	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x4008020	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x4008023	            0x7426	                            je 0x400804b	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x4008025	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4391	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_4
0x4008028	            0x89c6	                            mov esi, eax	      4391	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_4
0x400802a	      0xbf00000000	                              mov edi, 0	      4391	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_4
0x400802f	      0xe800000000	                          call 0x4008034	      4391	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_4
0x4008034	      0xbf20000000	                           mov edi, 0x20	      4392	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_5
0x4008039	      0xe800000000	                          call 0x400803e	      4392	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_5
0x400803e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x4008042	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x4008045	          0x83e001	                              and eax, 1	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x4008048	          0x8945d0	             mov dword [rbp - 0x30], eax	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x400804b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4395	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x400804f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4395	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x4008053	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4395	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x4008057	            0x742e	                            je 0x4008087	      4395	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x4008059	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_6
0x400805d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_6
0x4008061	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_6
0x4008064	          0x4889c6	                            mov rsi, rax	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_6
0x4008067	      0xbf00000000	                              mov edi, 0	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_6
0x400806c	      0xe831faffff	                    call sym.put_id_list	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_6
0x4008071	      0xbf20000000	                           mov edi, 0x20	      4399	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_7
0x4008076	      0xe800000000	                          call 0x400807b	      4399	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_7
0x400807b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4400	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x400807f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4400	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x4008083	        0x488945f8	                mov qword [rbp - 8], rax	      4400	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x4008087	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4402	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x400808b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4402	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x400808f	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4402	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x4008093	     0xf84d6000000	                            je 0x400816f	      4402	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x4008099	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_8
0x400809d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_8
0x40080a1	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_8
0x40080a4	          0x4889c6	                            mov rsi, rax	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_8
0x40080a7	      0xbf00000000	                              mov edi, 0	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_8
0x40080ac	      0xe8f1f9ffff	                    call sym.put_id_list	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_8
0x40080b1	      0xbf20000000	                           mov edi, 0x20	      4405	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_9
0x40080b6	      0xe800000000	                          call 0x40080bb	      4405	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_9
0x40080bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4406	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x40080bf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4406	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x40080c3	        0x488945f0	             mov qword [rbp - 0x10], rax	      4406	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x40080c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x40080cb	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x40080ce	      0x2580000000	                           and eax, 0x80	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x40080d3	            0x85c0	                           test eax, eax	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x40080d5	            0x7428	                            je 0x40080ff	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x40080d7	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4409	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_10
0x40080da	            0x89c6	                            mov esi, eax	      4409	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_10
0x40080dc	      0xbf00000000	                              mov edi, 0	      4409	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_10
0x40080e1	      0xe800000000	                          call 0x40080e6	      4409	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_10
0x40080e6	      0xbf20000000	                           mov edi, 0x20	      4410	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_11
0x40080eb	      0xe800000000	                          call 0x40080f0	      4410	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_11
0x40080f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4411	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x40080f4	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4411	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x40080f7	      0x2580000000	                           and eax, 0x80	      4411	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x40080fc	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4411	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x40080ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x4008103	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x4008106	      0x2500010000	                          and eax, 0x100	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x400810b	            0x85c0	                           test eax, eax	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x400810d	            0x7428	                            je 0x4008137	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x400810f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4415	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_12
0x4008112	            0x89c6	                            mov esi, eax	      4415	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_12
0x4008114	      0xbf00000000	                              mov edi, 0	      4415	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_12
0x4008119	      0xe800000000	                          call 0x400811e	      4415	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_12
0x400811e	      0xbf20000000	                           mov edi, 0x20	      4416	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_13
0x4008123	      0xe800000000	                          call 0x4008128	      4416	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_13
0x4008128	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4417	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x400812c	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4417	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x400812f	      0x2500010000	                          and eax, 0x100	      4417	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x4008134	          0x8945d8	             mov dword [rbp - 0x28], eax	      4417	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x4008137	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x400813b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x400813e	      0x2500020000	                          and eax, 0x200	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x4008143	            0x85c0	                           test eax, eax	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x4008145	            0x7428	                            je 0x400816f	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x4008147	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4421	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_14
0x400814a	            0x89c6	                            mov esi, eax	      4421	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_14
0x400814c	      0xbf00000000	                              mov edi, 0	      4421	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_14
0x4008151	      0xe800000000	                          call 0x4008156	      4421	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_14
0x4008156	      0xbf20000000	                           mov edi, 0x20	      4422	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_15
0x400815b	      0xe800000000	                          call 0x4008160	      4422	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_15
0x4008160	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x4008164	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x4008167	      0x2500020000	                          and eax, 0x200	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x400816c	          0x8945dc	             mov dword [rbp - 0x24], eax	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x400816f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4426	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_16
0x4008173	        0x4883c028	                           add rax, 0x28	      4426	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_16
0x4008177	          0x4889c7	                            mov rdi, rax	      4426	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_16
0x400817a	      0xe800000000	                          call 0x400817f	      4426	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_16
0x400817f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x4008183	          0x488b00	                    mov rax, qword [rax]	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x4008186	        0x488945e8	             mov qword [rbp - 0x18], rax	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x400818a	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x400818f	            0x740e	                            je 0x400819f	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x4008191	    0x8b0500000000	            mov eax, dword [0x04008197] 	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x4008197	            0x85c0	                           test eax, eax	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x4008199	     0xf84a2fdffff	                            je 0x4007f41	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2
0x400819f	      0x488345e010	            add qword [rbp - 0x20], 0x10	      4360	syntax.c	FUNCTION_71	FOR_1
0x40081a4	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      4360	syntax.c	FUNCTION_71	FOR_1
0x40081a8	            0x7e0e	                           jle 0x40081b8	      4360	syntax.c	FUNCTION_71	FOR_1
0x40081aa	    0x8b0500000000	            mov eax, dword [0x040081b0] 	      4360	syntax.c	FUNCTION_71	FOR_1
0x40081b0	            0x85c0	                           test eax, eax	      4360	syntax.c	FUNCTION_71	FOR_1
0x40081b2	     0xf844bfdffff	                            je 0x4007f03	      4360	syntax.c	FUNCTION_71	FOR_1
0x40081b8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      4432	syntax.c	FUNCTION_71
0x40081bb	              0xc9	                                   leave	      4433	syntax.c	FUNCTION_71
0x40081bc	              0xc3	                                     ret	      4433	syntax.c	FUNCTION_71
syn_finish_line	functions,0:IF,3:SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,1:DO,0	71
0x40027bc	              0x55	                                push rbp	      1800	syntax.c	FUNCTION_26
0x40027bd	          0x4889e5	                            mov rbp, rsp	      1800	syntax.c	FUNCTION_26
0x40027c0	        0x4883ec20	                           sub rsp, 0x20	      1800	syntax.c	FUNCTION_26
0x40027c4	          0x897dec	             mov dword [rbp - 0x14], edi	      1800	syntax.c	FUNCTION_26
0x40027c7	      0xe9ee000000	                           jmp 0x40028ba	      1804	syntax.c	FUNCTION_26	WHILE_1
0x40027cc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x40027cf	      0xb900000000	                              mov ecx, 0	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x40027d4	      0xba00000000	                              mov edx, 0	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x40027d9	      0xbe00000000	                              mov esi, 0	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x40027de	            0x89c7	                            mov edi, eax	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x40027e0	      0xe822020000	               call sym.syn_current_attr	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x40027e5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x40027e9	     0xf84bc000000	                            je 0x40028ab	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x40027ef	    0x8b0500000000	            mov eax, dword [0x040027f5] 	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x40027f5	            0x85c0	                           test eax, eax	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x40027f7	     0xf84ae000000	                            je 0x40028ab	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x40027fd	    0x488b0d000000	            mov rcx, qword [0x04002804] 	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4002804	    0x8b0500000000	            mov eax, dword [0x0400280a] 	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400280a	          0x4863d0	                         movsxd rdx, eax	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400280d	          0x4889d0	                            mov rax, rdx	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4002810	        0x48c1e003	                              shl rax, 3	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4002814	          0x4801d0	                            add rax, rdx	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4002817	        0x48c1e004	                              shl rax, 4	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400281b	    0x482d90000000	                           sub rax, 0x90	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4002821	          0x4801c8	                            add rax, rcx	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4002824	        0x488945f8	                mov qword [rbp - 8], rax	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4002828	        0x488b45f8	                mov rax, qword [rbp - 8]	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400282c	            0x8b00	                    mov eax, dword [rax]	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400282e	            0x85c0	                           test eax, eax	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002830	            0x7839	                            js 0x400286b	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002832	    0x488b05000000	            mov rax, qword [0x04002839] 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002839	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002840	        0x488b45f8	                mov rax, qword [rbp - 8]	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002844	            0x8b00	                    mov eax, dword [rax]	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002846	          0x4863d0	                         movsxd rdx, eax	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002849	          0x4889d0	                            mov rax, rdx	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400284c	        0x48c1e002	                              shl rax, 2	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002850	          0x4801d0	                            add rax, rdx	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002853	        0x48c1e005	                              shl rax, 5	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002857	          0x4801c8	                            add rax, rcx	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400285a	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400285d	          0x83e030	                           and eax, 0x30	      1818	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002860	            0x85c0	                           test eax, eax	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002862	            0x7407	                            je 0x400286b	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002864	      0xb801000000	                              mov eax, 1	      1819	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4002869	            0xeb62	                           jmp 0x40028cd	      1819	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400286b	    0x8b0500000000	            mov eax, dword [0x04002871] 	      1824	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4002871	          0x8945f4	              mov dword [rbp - 0xc], eax	      1824	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4002874	      0xe8f42f0000	                 call sym.syn_getcurline	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x4002879	          0x4889c2	                            mov rdx, rax	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x400287c	    0x8b0500000000	            mov eax, dword [0x04002882] 	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x4002882	            0x4898	                                    cdqe	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x4002884	          0x4801d0	                            add rax, rdx	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x4002887	           0xfb600	                   movzx eax, byte [rax]	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x400288a	            0x84c0	                             test al, al	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x400288c	            0x740f	                            je 0x400289d	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x400288e	    0x8b0500000000	            mov eax, dword [0x04002894] 	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x4002894	          0x83c001	                              add eax, 1	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x4002897	    0x890500000000	            mov dword [0x0400289d], eax 	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x400289d	      0xe836190000	               call sym.check_state_ends	      1827	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_3
0x40028a2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1828	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x40028a5	    0x890500000000	            mov dword [0x040028ab], eax 	      1828	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x40028ab	    0x8b0500000000	            mov eax, dword [0x040028b1] 	      1830	syntax.c	FUNCTION_26	WHILE_1
0x40028b1	          0x83c001	                              add eax, 1	      1830	syntax.c	FUNCTION_26	WHILE_1
0x40028b4	    0x890500000000	            mov dword [0x040028ba], eax 	      1830	syntax.c	FUNCTION_26	WHILE_1
0x40028ba	    0x8b0500000000	            mov eax, dword [0x040028c0] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x40028c0	            0x85c0	                           test eax, eax	      1804	syntax.c	FUNCTION_26	WHILE_1
0x40028c2	     0xf8404ffffff	                            je 0x40027cc	      1804	syntax.c	FUNCTION_26	WHILE_1
0x40028c8	      0xb800000000	                              mov eax, 0	      1832	syntax.c	FUNCTION_26
0x40028cd	              0xc9	                                   leave	      1833	syntax.c	FUNCTION_26
0x40028ce	              0xc3	                                     ret	      1833	syntax.c	FUNCTION_26
syn_name2attr	functions,0:IF,1:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	17
0x4012e89	              0x55	                                push rbp	      9654	syntax.c	FUNCTION_149
0x4012e8a	          0x4889e5	                            mov rbp, rsp	      9654	syntax.c	FUNCTION_149
0x4012e8d	        0x4883ec20	                           sub rsp, 0x20	      9654	syntax.c	FUNCTION_149
0x4012e91	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9654	syntax.c	FUNCTION_149
0x4012e95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9655	syntax.c	FUNCTION_149	CALL_1
0x4012e99	          0x4889c7	                            mov rdi, rax	      9655	syntax.c	FUNCTION_149	CALL_1
0x4012e9c	      0xe800000000	                          call 0x4012ea1	      9655	syntax.c	FUNCTION_149	CALL_1
0x4012ea1	          0x8945fc	                mov dword [rbp - 4], eax	      9655	syntax.c	FUNCTION_149	CALL_1
0x4012ea4	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9657	syntax.c	FUNCTION_149	IF_1
0x4012ea8	            0x740c	                            je 0x4012eb6	      9657	syntax.c	FUNCTION_149	IF_1
0x4012eaa	          0x8b45fc	                mov eax, dword [rbp - 4]	      9658	syntax.c	FUNCTION_149	CALL_2
0x4012ead	            0x89c7	                            mov edi, eax	      9658	syntax.c	FUNCTION_149	CALL_2
0x4012eaf	      0xe800000000	                          call 0x4012eb4	      9658	syntax.c	FUNCTION_149	CALL_2
0x4012eb4	            0xeb05	                           jmp 0x4012ebb	      9658	syntax.c	FUNCTION_149	CALL_2
0x4012eb6	      0xb800000000	                              mov eax, 0	      9659	syntax.c	FUNCTION_149
0x4012ebb	              0xc9	                                   leave	      9660	syntax.c	FUNCTION_149
0x4012ebc	              0xc3	                                     ret	      9660	syntax.c	FUNCTION_149
did_match_already	functions,0:IF,2:SWITCH,0:FOR,2:CALL,0:ELSE,0:WHILE,0:DO,0	68
0x4003d01	              0x55	                                push rbp	      2495	syntax.c	FUNCTION_29
0x4003d02	          0x4889e5	                            mov rbp, rsp	      2495	syntax.c	FUNCTION_29
0x4003d05	          0x897dec	             mov dword [rbp - 0x14], edi	      2495	syntax.c	FUNCTION_29
0x4003d08	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2495	syntax.c	FUNCTION_29
0x4003d0c	    0x8b0500000000	            mov eax, dword [0x04003d12] 	      2498	syntax.c	FUNCTION_29	FOR_1
0x4003d12	          0x8945fc	                mov dword [rbp - 4], eax	      2498	syntax.c	FUNCTION_29	FOR_1
0x4003d15	      0xe983000000	                           jmp 0x4003d9d	      2498	syntax.c	FUNCTION_29	FOR_1
0x4003d1a	    0x488b0d000000	            mov rcx, qword [0x04003d21] 	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d21	          0x8b45fc	                mov eax, dword [rbp - 4]	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d24	          0x4863d0	                         movsxd rdx, eax	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d27	          0x4889d0	                            mov rax, rdx	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d2a	        0x48c1e003	                              shl rax, 3	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d2e	          0x4801d0	                            add rax, rdx	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d31	        0x48c1e004	                              shl rax, 4	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d35	          0x4801c8	                            add rax, rcx	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d38	          0x8b5010	            mov edx, dword [rax + 0x10] 	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d3b	    0x8b0500000000	            mov eax, dword [0x04003d41] 	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d41	            0x39c2	                            cmp edx, eax	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d43	            0x7558	                           jne 0x4003d9d	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d45	    0x488b0d000000	            mov rcx, qword [0x04003d4c] 	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d4c	          0x8b45fc	                mov eax, dword [rbp - 4]	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d4f	          0x4863d0	                         movsxd rdx, eax	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d52	          0x4889d0	                            mov rax, rdx	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d55	        0x48c1e003	                              shl rax, 3	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d59	          0x4801d0	                            add rax, rdx	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d5c	        0x48c1e004	                              shl rax, 4	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d60	          0x4801c8	                            add rax, rcx	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d63	          0x8b400c	              mov eax, dword [rax + 0xc]	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d66	    0x488b15000000	            mov rdx, qword [0x04003d6d] 	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d6d	            0x39d0	                            cmp eax, edx	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d6f	            0x752c	                           jne 0x4003d9d	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d71	    0x488b0d000000	            mov rcx, qword [0x04003d78] 	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d78	          0x8b45fc	                mov eax, dword [rbp - 4]	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d7b	          0x4863d0	                         movsxd rdx, eax	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d7e	          0x4889d0	                            mov rax, rdx	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d81	        0x48c1e003	                              shl rax, 3	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d85	          0x4801d0	                            add rax, rdx	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d88	        0x48c1e004	                              shl rax, 4	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d8c	          0x4801c8	                            add rax, rcx	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d8f	            0x8b00	                    mov eax, dword [rax]	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d91	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d94	            0x7507	                           jne 0x4003d9d	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d96	      0xb801000000	                              mov eax, 1	      2502	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d9b	            0xeb4b	                           jmp 0x4003de8	      2502	syntax.c	FUNCTION_29	FOR_1	IF_1
0x4003d9d	        0x836dfc01	                  sub dword [rbp - 4], 1	      2498	syntax.c	FUNCTION_29	FOR_1
0x4003da1	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2498	syntax.c	FUNCTION_29	FOR_1
0x4003da5	     0xf896fffffff	                           jns 0x4003d1a	      2498	syntax.c	FUNCTION_29	FOR_1
0x4003dab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2506	syntax.c	FUNCTION_29	FOR_2
0x4003daf	            0x8b00	                    mov eax, dword [rax]	      2506	syntax.c	FUNCTION_29	FOR_2
0x4003db1	          0x8945fc	                mov dword [rbp - 4], eax	      2506	syntax.c	FUNCTION_29	FOR_2
0x4003db4	            0xeb23	                           jmp 0x4003dd9	      2506	syntax.c	FUNCTION_29	FOR_2
0x4003db6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4003dba	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4003dbe	          0x8b55fc	                mov edx, dword [rbp - 4]	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4003dc1	          0x4863d2	                         movsxd rdx, edx	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4003dc4	        0x48c1e202	                              shl rdx, 2	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4003dc8	          0x4801d0	                            add rax, rdx	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4003dcb	            0x8b00	                    mov eax, dword [rax]	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4003dcd	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4003dd0	            0x7507	                           jne 0x4003dd9	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4003dd2	      0xb801000000	                              mov eax, 1	      2508	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4003dd7	            0xeb0f	                           jmp 0x4003de8	      2508	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4003dd9	        0x836dfc01	                  sub dword [rbp - 4], 1	      2506	syntax.c	FUNCTION_29	FOR_2
0x4003ddd	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2506	syntax.c	FUNCTION_29	FOR_2
0x4003de1	            0x79d3	                           jns 0x4003db6	      2506	syntax.c	FUNCTION_29	FOR_2
0x4003de3	      0xb800000000	                              mov eax, 0	      2510	syntax.c	FUNCTION_29
0x4003de8	              0x5d	                                 pop rbp	      2511	syntax.c	FUNCTION_29
0x4003de9	              0xc3	                                     ret	      2511	syntax.c	FUNCTION_29
syn_add_start_off	functions,0:IF,5:SWITCH,0:FOR,0:CALL,5:ELSE,2:WHILE,2:DO,0	143
0x4005688	              0x55	                                push rbp	      3256	syntax.c	FUNCTION_41
0x4005689	          0x4889e5	                            mov rbp, rsp	      3256	syntax.c	FUNCTION_41
0x400568c	        0x4883ec40	                           sub rsp, 0x40	      3256	syntax.c	FUNCTION_41
0x4005690	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3256	syntax.c	FUNCTION_41
0x4005694	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3256	syntax.c	FUNCTION_41
0x4005698	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3256	syntax.c	FUNCTION_41
0x400569c	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      3256	syntax.c	FUNCTION_41
0x400569f	        0x448945c0	             mov dword [rbp - 0x40], r8d	      3256	syntax.c	FUNCTION_41
0x40056a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3262	syntax.c	FUNCTION_41	IF_1
0x40056a7	         0xfb74004	               movzx eax, word [rax + 4]	      3262	syntax.c	FUNCTION_41	IF_1
0x40056ab	           0xfbfd0	                           movsx edx, ax	      3262	syntax.c	FUNCTION_41	IF_1
0x40056ae	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3262	syntax.c	FUNCTION_41	IF_1
0x40056b1	          0x83c007	                              add eax, 7	      3262	syntax.c	FUNCTION_41	IF_1
0x40056b4	            0x89c1	                            mov ecx, eax	      3262	syntax.c	FUNCTION_41	IF_1
0x40056b6	            0xd3fa	                             sar edx, cl	      3262	syntax.c	FUNCTION_41	IF_1
0x40056b8	            0x89d0	                            mov eax, edx	      3262	syntax.c	FUNCTION_41	IF_1
0x40056ba	          0x83e001	                              and eax, 1	      3262	syntax.c	FUNCTION_41	IF_1
0x40056bd	            0x85c0	                           test eax, eax	      3262	syntax.c	FUNCTION_41	IF_1
0x40056bf	            0x7437	                            je 0x40056f8	      3262	syntax.c	FUNCTION_41	IF_1
0x40056c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3264	syntax.c	FUNCTION_41	IF_1
0x40056c5	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      3264	syntax.c	FUNCTION_41	IF_1
0x40056cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3264	syntax.c	FUNCTION_41	IF_1
0x40056d0	          0x488910	                    mov qword [rax], rdx	      3264	syntax.c	FUNCTION_41	IF_1
0x40056d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3265	syntax.c	FUNCTION_41	IF_1
0x40056d7	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      3265	syntax.c	FUNCTION_41	IF_1
0x40056dd	          0x8945e8	             mov dword [rbp - 0x18], eax	      3265	syntax.c	FUNCTION_41	IF_1
0x40056e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3266	syntax.c	FUNCTION_41	IF_1
0x40056e4	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3266	syntax.c	FUNCTION_41	IF_1
0x40056e7	          0x4863d2	                         movsxd rdx, edx	      3266	syntax.c	FUNCTION_41	IF_1
0x40056ea	        0x8b549008	       mov edx, dword [rax + rdx*4 + 8] 	      3266	syntax.c	FUNCTION_41	IF_1
0x40056ee	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3266	syntax.c	FUNCTION_41	IF_1
0x40056f1	             0x1d0	                            add eax, edx	      3266	syntax.c	FUNCTION_41	IF_1
0x40056f3	          0x8945ec	             mov dword [rbp - 0x14], eax	      3266	syntax.c	FUNCTION_41	IF_1
0x40056f6	            0xeb2a	                           jmp 0x4005722	      3266	syntax.c	FUNCTION_41	IF_1
0x40056f8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3270	syntax.c	FUNCTION_41	ELSE_1
0x40056fc	        0x488b5008	                mov rdx, qword [rax + 8]	      3270	syntax.c	FUNCTION_41	ELSE_1
0x4005700	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3270	syntax.c	FUNCTION_41	ELSE_1
0x4005704	          0x488910	                    mov qword [rax], rdx	      3270	syntax.c	FUNCTION_41	ELSE_1
0x4005707	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3271	syntax.c	FUNCTION_41	ELSE_1
0x400570b	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3271	syntax.c	FUNCTION_41	ELSE_1
0x400570e	          0x8945e8	             mov dword [rbp - 0x18], eax	      3271	syntax.c	FUNCTION_41	ELSE_1
0x4005711	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3272	syntax.c	FUNCTION_41	ELSE_1
0x4005715	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3272	syntax.c	FUNCTION_41	ELSE_1
0x4005718	          0x4863d2	                         movsxd rdx, edx	      3272	syntax.c	FUNCTION_41	ELSE_1
0x400571b	        0x8b449008	       mov eax, dword [rax + rdx*4 + 8] 	      3272	syntax.c	FUNCTION_41	ELSE_1
0x400571f	          0x8945ec	             mov dword [rbp - 0x14], eax	      3272	syntax.c	FUNCTION_41	ELSE_1
0x4005722	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3274	syntax.c	FUNCTION_41	IF_2
0x4005726	          0x488b10	                    mov rdx, qword [rax]	      3274	syntax.c	FUNCTION_41	IF_2
0x4005729	    0x488b05000000	            mov rax, qword [0x04005730] 	      3274	syntax.c	FUNCTION_41	IF_2
0x4005730	          0x488b00	                    mov rax, qword [rax]	      3274	syntax.c	FUNCTION_41	IF_2
0x4005733	          0x4839c2	                            cmp rdx, rax	      3274	syntax.c	FUNCTION_41	IF_2
0x4005736	            0x7e3a	                           jle 0x4005772	      3274	syntax.c	FUNCTION_41	IF_2
0x4005738	    0x488b05000000	            mov rax, qword [0x0400573f] 	      3277	syntax.c	FUNCTION_41	IF_2
0x400573f	          0x488b10	                    mov rdx, qword [rax]	      3277	syntax.c	FUNCTION_41	IF_2
0x4005742	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3277	syntax.c	FUNCTION_41	IF_2
0x4005746	          0x488910	                    mov qword [rax], rdx	      3277	syntax.c	FUNCTION_41	IF_2
0x4005749	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x400574d	          0x488b08	                    mov rcx, qword [rax]	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4005750	    0x488b05000000	            mov rax, qword [0x04005757] 	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4005757	      0xba00000000	                              mov edx, 0	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x400575c	          0x4889ce	                            mov rsi, rcx	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x400575f	          0x4889c7	                            mov rdi, rax	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4005762	      0xe800000000	                          call 0x4005767	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4005767	          0x4889c7	                            mov rdi, rax	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x400576a	      0xe800000000	                          call 0x400576f	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x400576f	          0x8945e8	             mov dword [rbp - 0x18], eax	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x4005772	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3280	syntax.c	FUNCTION_41	IF_3
0x4005776	     0xf84e4000000	                            je 0x4005860	      3280	syntax.c	FUNCTION_41	IF_3
0x400577c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x4005780	          0x488b08	                    mov rcx, qword [rax]	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x4005783	    0x488b05000000	            mov rax, qword [0x0400578a] 	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x400578a	      0xba00000000	                              mov edx, 0	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x400578f	          0x4889ce	                            mov rsi, rcx	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x4005792	          0x4889c7	                            mov rdi, rax	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x4005795	      0xe800000000	                          call 0x400579a	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x400579a	        0x488945f8	                mov qword [rbp - 8], rax	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x400579e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3283	syntax.c	FUNCTION_41	IF_3
0x40057a1	          0x4863d0	                         movsxd rdx, eax	      3283	syntax.c	FUNCTION_41	IF_3
0x40057a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3283	syntax.c	FUNCTION_41	IF_3
0x40057a8	          0x4801d0	                            add rax, rdx	      3283	syntax.c	FUNCTION_41	IF_3
0x40057ab	        0x488945f0	             mov qword [rbp - 0x10], rax	      3283	syntax.c	FUNCTION_41	IF_3
0x40057af	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3284	syntax.c	FUNCTION_41	IF_3	IF_4
0x40057b3	            0x7e43	                           jle 0x40057f8	      3284	syntax.c	FUNCTION_41	IF_3	IF_4
0x40057b5	            0xeb27	                           jmp 0x40057de	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x40057b7	    0x8b0500000000	            mov eax, dword [0x040057bd] 	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40057bd	            0x85c0	                           test eax, eax	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40057bf	            0x7412	                            je 0x40057d3	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40057c1	    0x488b05000000	            mov rax, qword [0x040057c8] 	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40057c8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40057cc	          0x4889d7	                            mov rdi, rdx	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40057cf	            0xffd0	                                call rax	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40057d1	            0xeb05	                           jmp 0x40057d8	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40057d3	      0xb801000000	                              mov eax, 1	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40057d8	            0x4898	                                    cdqe	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40057da	        0x480145f0	            add qword [rbp - 0x10], rax 	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40057de	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x40057e1	          0x8d50ff	                      lea edx, [rax - 1]	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x40057e4	          0x8955ec	             mov dword [rbp - 0x14], edx	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x40057e7	            0x85c0	                           test eax, eax	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x40057e9	            0x7464	                            je 0x400584f	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x40057eb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x40057ef	           0xfb600	                   movzx eax, byte [rax]	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x40057f2	            0x84c0	                             test al, al	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x40057f4	            0x75c1	                           jne 0x40057b7	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x40057f6	            0xeb57	                           jmp 0x400584f	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x40057f8	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3289	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5
0x40057fc	            0x7951	                           jns 0x400584f	      3289	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5
0x40057fe	            0xeb38	                           jmp 0x4005838	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4005800	    0x8b0500000000	            mov eax, dword [0x04005806] 	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005806	            0x85c0	                           test eax, eax	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005808	            0x7420	                            je 0x400582a	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x400580a	    0x488b05000000	            mov rax, qword [0x04005811] 	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005811	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005815	        0x488d4aff	                      lea rcx, [rdx - 1]	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005819	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x400581d	          0x4889ce	                            mov rsi, rcx	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005820	          0x4889d7	                            mov rdi, rdx	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005823	            0xffd0	                                call rax	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005825	          0x83c001	                              add eax, 1	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005828	            0xeb05	                           jmp 0x400582f	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x400582a	      0xb801000000	                              mov eax, 1	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x400582f	            0x4898	                                    cdqe	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005831	          0x48f7d8	                                 neg rax	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005834	        0x480145f0	            add qword [rbp - 0x10], rax 	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x4005838	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x400583b	          0x8d5001	                      lea edx, [rax + 1]	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x400583e	          0x8955ec	             mov dword [rbp - 0x14], edx	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4005841	            0x85c0	                           test eax, eax	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4005843	            0x740a	                            je 0x400584f	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4005845	        0x488b45f8	                mov rax, qword [rbp - 8]	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x4005849	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x400584d	            0x72b1	                            jb 0x4005800	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x400584f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3294	syntax.c	FUNCTION_41	IF_3
0x4005853	        0x488b45f8	                mov rax, qword [rbp - 8]	      3294	syntax.c	FUNCTION_41	IF_3
0x4005857	          0x4829c2	                            sub rdx, rax	      3294	syntax.c	FUNCTION_41	IF_3
0x400585a	          0x4889d0	                            mov rax, rdx	      3294	syntax.c	FUNCTION_41	IF_3
0x400585d	          0x8945e8	             mov dword [rbp - 0x18], eax	      3294	syntax.c	FUNCTION_41	IF_3
0x4005860	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3296	syntax.c	FUNCTION_41
0x4005864	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      3296	syntax.c	FUNCTION_41
0x4005867	          0x895008	                mov dword [rax + 8], edx	      3296	syntax.c	FUNCTION_41
0x400586a	              0x90	                                     nop	      3297	syntax.c	FUNCTION_41
0x400586b	              0xc9	                                   leave	      3297	syntax.c	FUNCTION_41
0x400586c	              0xc3	                                     ret	      3297	syntax.c	FUNCTION_41
syn_get_final_id	functions,0:IF,2:SWITCH,0:FOR,1:CALL,0:ELSE,0:WHILE,0:DO,0	42
0x4013469	              0x55	                                push rbp	      9875	syntax.c	FUNCTION_159
0x401346a	          0x4889e5	                            mov rbp, rsp	      9875	syntax.c	FUNCTION_159
0x401346d	          0x897dec	             mov dword [rbp - 0x14], edi	      9875	syntax.c	FUNCTION_159
0x4013470	    0x8b0500000000	            mov eax, dword [0x04013476] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4013476	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      9879	syntax.c	FUNCTION_159	IF_1
0x4013479	            0x7c06	                            jl 0x4013481	      9879	syntax.c	FUNCTION_159	IF_1
0x401347b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9879	syntax.c	FUNCTION_159	IF_1
0x401347f	            0x7f07	                            jg 0x4013488	      9879	syntax.c	FUNCTION_159	IF_1
0x4013481	      0xb800000000	                              mov eax, 0	      9880	syntax.c	FUNCTION_159	IF_1
0x4013486	            0xeb73	                           jmp 0x40134fb	      9880	syntax.c	FUNCTION_159	IF_1
0x4013488	    0xc745f4640000	            mov dword [rbp - 0xc], 0x64 	      9886	syntax.c	FUNCTION_159	FOR_1
0x401348f	            0xeb5d	                           jmp 0x40134ee	      9886	syntax.c	FUNCTION_159	FOR_1
0x4013491	    0x488b0d000000	            mov rcx, qword [0x04013498] 	      9888	syntax.c	FUNCTION_159	FOR_1
0x4013498	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9888	syntax.c	FUNCTION_159	FOR_1
0x401349b	          0x4863d0	                         movsxd rdx, eax	      9888	syntax.c	FUNCTION_159	FOR_1
0x401349e	          0x4889d0	                            mov rax, rdx	      9888	syntax.c	FUNCTION_159	FOR_1
0x40134a1	        0x48c1e003	                              shl rax, 3	      9888	syntax.c	FUNCTION_159	FOR_1
0x40134a5	          0x4801d0	                            add rax, rdx	      9888	syntax.c	FUNCTION_159	FOR_1
0x40134a8	          0x4801c0	                            add rax, rax	      9888	syntax.c	FUNCTION_159	FOR_1
0x40134ab	          0x4801d0	                            add rax, rdx	      9888	syntax.c	FUNCTION_159	FOR_1
0x40134ae	        0x48c1e003	                              shl rax, 3	      9888	syntax.c	FUNCTION_159	FOR_1
0x40134b2	    0x482d98000000	                           sub rax, 0x98	      9888	syntax.c	FUNCTION_159	FOR_1
0x40134b8	          0x4801c8	                            add rax, rcx	      9888	syntax.c	FUNCTION_159	FOR_1
0x40134bb	        0x488945f8	                mov qword [rbp - 8], rax	      9888	syntax.c	FUNCTION_159	FOR_1
0x40134bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40134c3	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40134c9	            0x85c0	                           test eax, eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40134cb	            0x742b	                            je 0x40134f8	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40134cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40134d1	    0x8b9088000000	            mov edx, dword [rax + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40134d7	    0x8b0500000000	            mov eax, dword [0x040134dd] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40134dd	            0x39c2	                            cmp edx, eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40134df	            0x7f17	                            jg 0x40134f8	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40134e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      9891	syntax.c	FUNCTION_159	FOR_1
0x40134e5	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      9891	syntax.c	FUNCTION_159	FOR_1
0x40134eb	          0x8945ec	             mov dword [rbp - 0x14], eax	      9891	syntax.c	FUNCTION_159	FOR_1
0x40134ee	        0x836df401	                sub dword [rbp - 0xc], 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x40134f2	        0x837df400	                cmp dword [rbp - 0xc], 0	      9886	syntax.c	FUNCTION_159	FOR_1
0x40134f6	            0x7999	                           jns 0x4013491	      9886	syntax.c	FUNCTION_159	FOR_1
0x40134f8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9894	syntax.c	FUNCTION_159
0x40134fb	              0x5d	                                 pop rbp	      9895	syntax.c	FUNCTION_159
0x40134fc	              0xc3	                                     ret	      9895	syntax.c	FUNCTION_159
get_syn_pattern	functions,0:IF,14:SWITCH,1:FOR,1:CALL,15:ELSE,2:WHILE,0:DO,1	264
0x400affe	              0x55	                                push rbp	      5739	syntax.c	FUNCTION_90
0x400afff	          0x4889e5	                            mov rbp, rsp	      5739	syntax.c	FUNCTION_90
0x400b002	        0x4883ec40	                           sub rsp, 0x40	      5739	syntax.c	FUNCTION_90
0x400b006	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5739	syntax.c	FUNCTION_90
0x400b00a	        0x488975c0	             mov qword [rbp - 0x40], rsi	      5739	syntax.c	FUNCTION_90
0x400b00e	    0x64488b042528	                mov rax, qword fs:[0x28]	      5739	syntax.c	FUNCTION_90
0x400b017	        0x488945f8	                mov qword [rbp - 8], rax	      5739	syntax.c	FUNCTION_90
0x400b01b	            0x31c0	                            xor eax, eax	      5739	syntax.c	FUNCTION_90
0x400b01d	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      5746	syntax.c	FUNCTION_90	IF_1
0x400b022	            0x7429	                            je 0x400b04d	      5746	syntax.c	FUNCTION_90	IF_1
0x400b024	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5746	syntax.c	FUNCTION_90	IF_1
0x400b028	           0xfb600	                   movzx eax, byte [rax]	      5746	syntax.c	FUNCTION_90	IF_1
0x400b02b	            0x84c0	                             test al, al	      5746	syntax.c	FUNCTION_90	IF_1
0x400b02d	            0x741e	                            je 0x400b04d	      5746	syntax.c	FUNCTION_90	IF_1
0x400b02f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5746	syntax.c	FUNCTION_90	IF_1
0x400b033	        0x4883c001	                              add rax, 1	      5746	syntax.c	FUNCTION_90	IF_1
0x400b037	           0xfb600	                   movzx eax, byte [rax]	      5746	syntax.c	FUNCTION_90	IF_1
0x400b03a	            0x84c0	                             test al, al	      5746	syntax.c	FUNCTION_90	IF_1
0x400b03c	            0x740f	                            je 0x400b04d	      5746	syntax.c	FUNCTION_90	IF_1
0x400b03e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5746	syntax.c	FUNCTION_90	IF_1
0x400b042	        0x4883c002	                              add rax, 2	      5746	syntax.c	FUNCTION_90	IF_1
0x400b046	           0xfb600	                   movzx eax, byte [rax]	      5746	syntax.c	FUNCTION_90	IF_1
0x400b049	            0x84c0	                             test al, al	      5746	syntax.c	FUNCTION_90	IF_1
0x400b04b	            0x750a	                           jne 0x400b057	      5746	syntax.c	FUNCTION_90	IF_1
0x400b04d	      0xb800000000	                              mov eax, 0	      5747	syntax.c	FUNCTION_90	IF_1
0x400b052	      0xe93a030000	                           jmp 0x400b391	      5747	syntax.c	FUNCTION_90	IF_1
0x400b057	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5749	syntax.c	FUNCTION_90	CALL_1
0x400b05b	           0xfb600	                   movzx eax, byte [rax]	      5749	syntax.c	FUNCTION_90	CALL_1
0x400b05e	           0xfb6c0	                           movzx eax, al	      5749	syntax.c	FUNCTION_90	CALL_1
0x400b061	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5749	syntax.c	FUNCTION_90	CALL_1
0x400b065	        0x488d7a01	                      lea rdi, [rdx + 1]	      5749	syntax.c	FUNCTION_90	CALL_1
0x400b069	      0xb900000000	                              mov ecx, 0	      5749	syntax.c	FUNCTION_90	CALL_1
0x400b06e	      0xba01000000	                              mov edx, 1	      5749	syntax.c	FUNCTION_90	CALL_1
0x400b073	            0x89c6	                            mov esi, eax	      5749	syntax.c	FUNCTION_90	CALL_1
0x400b075	      0xe800000000	                          call 0x400b07a	      5749	syntax.c	FUNCTION_90	CALL_1
0x400b07a	        0x488945e0	             mov qword [rbp - 0x20], rax	      5749	syntax.c	FUNCTION_90	CALL_1
0x400b07e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5750	syntax.c	FUNCTION_90	IF_2
0x400b082	           0xfb610	                   movzx edx, byte [rax]	      5750	syntax.c	FUNCTION_90	IF_2
0x400b085	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5750	syntax.c	FUNCTION_90	IF_2
0x400b089	           0xfb600	                   movzx eax, byte [rax]	      5750	syntax.c	FUNCTION_90	IF_2
0x400b08c	            0x38c2	                              cmp dl, al	      5750	syntax.c	FUNCTION_90	IF_2
0x400b08e	            0x7426	                            je 0x400b0b6	      5750	syntax.c	FUNCTION_90	IF_2
0x400b090	      0xbf00000000	                              mov edi, 0	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x400b095	      0xe800000000	                          call 0x400b09a	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x400b09a	          0x4889c2	                            mov rdx, rax	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x400b09d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x400b0a1	          0x4889c6	                            mov rsi, rax	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x400b0a4	          0x4889d7	                            mov rdi, rdx	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x400b0a7	      0xe800000000	                          call 0x400b0ac	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x400b0ac	      0xb800000000	                              mov eax, 0	      5753	syntax.c	FUNCTION_90	IF_2
0x400b0b1	      0xe9db020000	                           jmp 0x400b391	      5753	syntax.c	FUNCTION_90	IF_2
0x400b0b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0ba	          0x4889c2	                            mov rdx, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0bd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0c1	          0x4829c2	                            sub rdx, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0c4	          0x4889d0	                            mov rax, rdx	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0c7	          0x83e801	                              sub eax, 1	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0ca	            0x89c2	                            mov edx, eax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0d0	        0x4883c001	                              add rax, 1	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0d4	            0x89d6	                            mov esi, edx	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0d6	          0x4889c7	                            mov rdi, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0d9	      0xe800000000	                          call 0x400b0de	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0de	          0x4889c2	                            mov rdx, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0e1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0e5	        0x48895060	             mov qword [rax + 0x60], rdx	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0e9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0ed	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0f1	          0x4885c0	                           test rax, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0f4	            0x750a	                           jne 0x400b100	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400b0f6	      0xb800000000	                              mov eax, 0	      5757	syntax.c	FUNCTION_90	IF_3
0x400b0fb	      0xe991020000	                           jmp 0x400b391	      5757	syntax.c	FUNCTION_90	IF_3
0x400b100	    0x488b05000000	            mov rax, qword [0x0400b107] 	      5760	syntax.c	FUNCTION_90
0x400b107	        0x488945e8	             mov qword [rbp - 0x18], rax	      5760	syntax.c	FUNCTION_90
0x400b10b	    0x48c705000000	               mov qword [0x0400b116], 0	      5761	syntax.c	FUNCTION_90
0x400b116	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5762	syntax.c	FUNCTION_90	CALL_5
0x400b11a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5762	syntax.c	FUNCTION_90	CALL_5
0x400b11e	      0xbe01000000	                              mov esi, 1	      5762	syntax.c	FUNCTION_90	CALL_5
0x400b123	          0x4889c7	                            mov rdi, rax	      5762	syntax.c	FUNCTION_90	CALL_5
0x400b126	      0xe800000000	                          call 0x400b12b	      5762	syntax.c	FUNCTION_90	CALL_5
0x400b12b	          0x4889c2	                            mov rdx, rax	      5762	syntax.c	FUNCTION_90	CALL_5
0x400b12e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5762	syntax.c	FUNCTION_90	CALL_5
0x400b132	        0x48895068	             mov qword [rax + 0x68], rdx	      5762	syntax.c	FUNCTION_90	CALL_5
0x400b136	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5763	syntax.c	FUNCTION_90
0x400b13a	    0x488905000000	            mov qword [0x0400b141], rax 	      5763	syntax.c	FUNCTION_90
0x400b141	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5765	syntax.c	FUNCTION_90	IF_4
0x400b145	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5765	syntax.c	FUNCTION_90	IF_4
0x400b149	          0x4885c0	                           test rax, rax	      5765	syntax.c	FUNCTION_90	IF_4
0x400b14c	            0x750a	                           jne 0x400b158	      5765	syntax.c	FUNCTION_90	IF_4
0x400b14e	      0xb800000000	                              mov eax, 0	      5766	syntax.c	FUNCTION_90	IF_4
0x400b153	      0xe939020000	                           jmp 0x400b391	      5766	syntax.c	FUNCTION_90	IF_4
0x400b158	    0x488b05000000	            mov rax, qword [0x0400b15f] 	      5767	syntax.c	FUNCTION_90
0x400b15f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5767	syntax.c	FUNCTION_90
0x400b163	    0x8b9058020000	           mov edx, dword [rax + 0x258] 	      5767	syntax.c	FUNCTION_90
0x400b169	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5767	syntax.c	FUNCTION_90
0x400b16d	          0x89502c	             mov dword [rax + 0x2c], edx	      5767	syntax.c	FUNCTION_90
0x400b170	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5769	syntax.c	FUNCTION_90	CALL_6
0x400b174	        0x4883c070	                           add rax, 0x70	      5769	syntax.c	FUNCTION_90	CALL_6
0x400b178	          0x4889c7	                            mov rdi, rax	      5769	syntax.c	FUNCTION_90	CALL_6
0x400b17b	      0xe8de1c0000	                 call sym.syn_clear_time	      5769	syntax.c	FUNCTION_90	CALL_6
0x400b180	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5775	syntax.c	FUNCTION_90
0x400b184	        0x4883c001	                              add rax, 1	      5775	syntax.c	FUNCTION_90
0x400b188	        0x488945e0	             mov qword [rbp - 0x20], rax	      5775	syntax.c	FUNCTION_90
0x400b18c	    0xc745dc070000	               mov dword [rbp - 0x24], 7	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x400b193	            0xeb25	                           jmp 0x400b1ba	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x400b195	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400b198	            0x4898	                                    cdqe	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400b19a	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400b1a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400b1a6	      0xba03000000	                              mov edx, 3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400b1ab	          0x4889ce	                            mov rsi, rcx	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400b1ae	          0x4889c7	                            mov rdi, rax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400b1b1	      0xe800000000	                          call 0x400b1b6	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400b1b6	            0x85c0	                           test eax, eax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400b1b8	            0x740c	                            je 0x400b1c6	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400b1ba	        0x836ddc01	               sub dword [rbp - 0x24], 1	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x400b1be	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x400b1c2	            0x79d1	                           jns 0x400b195	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x400b1c4	            0xeb01	                           jmp 0x400b1c7	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x400b1c6	              0x90	                                     nop	      5780	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5
0x400b1c7	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5781	syntax.c	FUNCTION_90	DO_1	IF_6
0x400b1cb	     0xf8859010000	                            js 0x400b32a	      5781	syntax.c	FUNCTION_90	DO_1	IF_6
0x400b1d1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0x400b1d4	            0x4898	                                    cdqe	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0x400b1d6	    0x488d14850000	                        lea rdx, [rax*4]	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0x400b1de	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0x400b1e2	          0x4801d0	                            add rax, rdx	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0x400b1e5	        0x4883c008	                              add rax, 8	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0x400b1e9	        0x488945f0	             mov qword [rbp - 0x10], rax	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0x400b1ed	        0x837ddc06	               cmp dword [rbp - 0x24], 6	      5784	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7
0x400b1f1	            0x7432	                            je 0x400b225	      5784	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7
0x400b1f3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b1f7	        0x4883c003	                              add rax, 3	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b1fb	           0xfb600	                   movzx eax, byte [rax]	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b1fe	           0xfb6c0	                           movzx eax, al	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b201	          0x83f865	                           cmp eax, 0x65	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b204	            0x740c	                            je 0x400b212	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b206	          0x83f873	                           cmp eax, 0x73	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b209	            0x7416	                            je 0x400b221	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b20b	          0x83f862	                           cmp eax, 0x62	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b20e	            0x7414	                            je 0x400b224	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b210	            0xeb06	                           jmp 0x400b218	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b212	        0x8345dc07	               add dword [rbp - 0x24], 7	      5789	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b216	            0xeb0d	                           jmp 0x400b225	      5789	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b218	    0xc745dcffffff	     mov dword [rbp - 0x24], 0xffffffff 	      5790	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b21f	            0xeb04	                           jmp 0x400b225	      5790	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b221	              0x90	                                     nop	      5787	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b222	            0xeb01	                           jmp 0x400b225	      5787	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b224	              0x90	                                     nop	      5788	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400b225	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5792	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b229	     0xf88fb000000	                            js 0x400b32a	      5792	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b22f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b233	         0xfb75004	               movzx edx, word [rax + 4]	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b237	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b23a	      0xbe01000000	                              mov esi, 1	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b23f	            0x89c1	                            mov ecx, eax	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b241	            0xd3e6	                             shl esi, cl	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b243	            0x89f0	                            mov eax, esi	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b245	             0x9c2	                             or edx, eax	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b247	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b24b	        0x66895004	                  mov word [rax + 4], dx	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b24f	        0x837ddc06	               cmp dword [rbp - 0x24], 6	      5795	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x400b253	            0x7558	                           jne 0x400b2ad	      5795	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x400b255	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x400b259	        0x4883c003	                              add rax, 3	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x400b25d	        0x488945e0	             mov qword [rbp - 0x20], rax	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x400b261	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x400b265	          0x4889c7	                            mov rdi, rax	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x400b268	      0xe800000000	                          call 0x400b26d	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x400b26d	            0x89c2	                            mov edx, eax	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x400b26f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x400b273	            0x8910	                    mov dword [rax], edx	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x400b275	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b279	         0xfb74004	               movzx eax, word [rax + 4]	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b27d	              0x98	                                    cwde	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b27e	          0x83e001	                              and eax, 1	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b281	            0x85c0	                           test eax, eax	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b283	     0xf858a000000	                           jne 0x400b313	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b289	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b28d	         0xfb74004	               movzx eax, word [rax + 4]	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b291	          0x83c801	                               or eax, 1	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b294	            0x89c2	                            mov edx, eax	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b296	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b29a	        0x66895004	                  mov word [rax + 4], dx	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b29e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b2a2	            0x8b10	                    mov edx, dword [rax]	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b2a4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b2a8	          0x895008	                mov dword [rax + 8], edx	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b2ab	            0xeb66	                           jmp 0x400b313	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x400b2ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0x400b2b1	        0x4883c004	                              add rax, 4	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0x400b2b5	        0x488945e0	             mov qword [rbp - 0x20], rax	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0x400b2b9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x400b2bd	           0xfb600	                   movzx eax, byte [rax]	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x400b2c0	            0x3c2b	                            cmp al, 0x2b	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x400b2c2	            0x7522	                           jne 0x400b2e6	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x400b2c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x400b2c8	        0x4883c001	                              add rax, 1	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x400b2cc	        0x488945e0	             mov qword [rbp - 0x20], rax	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x400b2d0	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x400b2d4	          0x4889c7	                            mov rdi, rax	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x400b2d7	      0xe800000000	                          call 0x400b2dc	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x400b2dc	            0x89c2	                            mov edx, eax	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x400b2de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x400b2e2	            0x8910	                    mov dword [rax], edx	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x400b2e4	            0xeb2d	                           jmp 0x400b313	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x400b2e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x400b2ea	           0xfb600	                   movzx eax, byte [rax]	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x400b2ed	            0x3c2d	                            cmp al, 0x2d	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x400b2ef	            0x7522	                           jne 0x400b313	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x400b2f1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x400b2f5	        0x4883c001	                              add rax, 1	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x400b2f9	        0x488945e0	             mov qword [rbp - 0x20], rax	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x400b2fd	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x400b301	          0x4889c7	                            mov rdi, rax	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x400b304	      0xe800000000	                          call 0x400b309	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x400b309	            0xf7d8	                                 neg eax	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x400b30b	            0x89c2	                            mov edx, eax	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x400b30d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x400b311	            0x8910	                    mov dword [rax], edx	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x400b313	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x400b317	           0xfb600	                   movzx eax, byte [rax]	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x400b31a	            0x3c2c	                            cmp al, 0x2c	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x400b31c	            0x7518	                           jne 0x400b336	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x400b31e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b322	        0x4883c001	                              add rax, 1	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b326	        0x488945e0	             mov qword [rbp - 0x20], rax	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400b32a	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5826	syntax.c	FUNCTION_90	DO_1
0x400b32e	     0xf8958feffff	                           jns 0x400b18c	      5826	syntax.c	FUNCTION_90	DO_1
0x400b334	            0xeb01	                           jmp 0x400b337	      5826	syntax.c	FUNCTION_90	DO_1
0x400b336	              0x90	                                     nop	      5822	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x400b337	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b33b	           0xfb600	                   movzx eax, byte [rax]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b33e	           0xfb6c0	                           movzx eax, al	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b341	            0x89c7	                            mov edi, eax	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b343	      0xe800000000	                          call 0x400b348	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b348	            0x85c0	                           test eax, eax	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b34a	            0x7539	                           jne 0x400b385	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b34c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b350	           0xfb600	                   movzx eax, byte [rax]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b353	            0x3c20	                            cmp al, 0x20	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b355	            0x742e	                            je 0x400b385	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b357	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b35b	           0xfb600	                   movzx eax, byte [rax]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b35e	            0x3c09	                               cmp al, 9	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b360	            0x7423	                            je 0x400b385	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400b362	      0xbf00000000	                              mov edi, 0	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x400b367	      0xe800000000	                          call 0x400b36c	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x400b36c	          0x4889c2	                            mov rdx, rax	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x400b36f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x400b373	          0x4889c6	                            mov rsi, rax	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x400b376	          0x4889d7	                            mov rdi, rdx	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x400b379	      0xe800000000	                          call 0x400b37e	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x400b37e	      0xb800000000	                              mov eax, 0	      5831	syntax.c	FUNCTION_90	IF_14
0x400b383	            0xeb0c	                           jmp 0x400b391	      5831	syntax.c	FUNCTION_90	IF_14
0x400b385	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5833	syntax.c	FUNCTION_90	CALL_15
0x400b389	          0x4889c7	                            mov rdi, rax	      5833	syntax.c	FUNCTION_90	CALL_15
0x400b38c	      0xe800000000	                          call 0x400b391	      5833	syntax.c	FUNCTION_90	CALL_15
0x400b391	        0x488b4df8	                mov rcx, qword [rbp - 8]	      5834	syntax.c	FUNCTION_90
0x400b395	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5834	syntax.c	FUNCTION_90
0x400b39e	            0x7405	                            je 0x400b3a5	      5834	syntax.c	FUNCTION_90
0x400b3a0	      0xe800000000	                          call 0x400b3a5	      5834	syntax.c	FUNCTION_90
0x400b3a5	              0xc9	                                   leave	      5834	syntax.c	FUNCTION_90
0x400b3a6	              0xc3	                                     ret	      5834	syntax.c	FUNCTION_90
syntime_report	functions,0:IF,6:SWITCH,0:FOR,2:CALL,44:ELSE,1:WHILE,0:DO,0	275
0x400cfb4	              0x55	                                push rbp	      6765	syntax.c	FUNCTION_112
0x400cfb5	          0x4889e5	                            mov rbp, rsp	      6765	syntax.c	FUNCTION_112
0x400cfb8	        0x4883ec60	                           sub rsp, 0x60	      6765	syntax.c	FUNCTION_112
0x400cfbc	    0x64488b042528	                mov rax, qword fs:[0x28]	      6765	syntax.c	FUNCTION_112
0x400cfc5	        0x488945f8	                mov qword [rbp - 8], rax	      6765	syntax.c	FUNCTION_112
0x400cfc9	            0x31c0	                            xor eax, eax	      6765	syntax.c	FUNCTION_112
0x400cfcb	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      6773	syntax.c	FUNCTION_112
0x400cfd2	    0x488b05000000	            mov rax, qword [0x0400cfd9] 	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0x400cfd9	          0x4889c7	                            mov rdi, rax	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0x400cfdc	      0xe800000000	                          call 0x400cfe1	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0x400cfe1	            0x85c0	                           test eax, eax	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0x400cfe3	            0x7517	                           jne 0x400cffc	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0x400cfe5	      0xbf00000000	                              mov edi, 0	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400cfea	      0xe800000000	                          call 0x400cfef	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400cfef	          0x4889c7	                            mov rdi, rax	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400cff2	      0xe800000000	                          call 0x400cff7	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400cff7	      0xe904040000	                           jmp 0x400d400	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400cffc	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6783	syntax.c	FUNCTION_112	CALL_4
0x400d000	      0xba32000000	                           mov edx, 0x32	      6783	syntax.c	FUNCTION_112	CALL_4
0x400d005	      0xbe48000000	                           mov esi, 0x48	      6783	syntax.c	FUNCTION_112	CALL_4
0x400d00a	          0x4889c7	                            mov rdi, rax	      6783	syntax.c	FUNCTION_112	CALL_4
0x400d00d	      0xe800000000	                          call 0x400d012	      6783	syntax.c	FUNCTION_112	CALL_4
0x400d012	        0x488d45d0	                   lea rax, [rbp - 0x30]	      6784	syntax.c	FUNCTION_112	CALL_5
0x400d016	          0x4889c7	                            mov rdi, rax	      6784	syntax.c	FUNCTION_112	CALL_5
0x400d019	      0xe800000000	                          call 0x400d01e	      6784	syntax.c	FUNCTION_112	CALL_5
0x400d01e	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      6785	syntax.c	FUNCTION_112	FOR_1
0x400d025	      0xe961010000	                           jmp 0x400d18b	      6785	syntax.c	FUNCTION_112	FOR_1
0x400d02a	    0x488b05000000	            mov rax, qword [0x0400d031] 	      6787	syntax.c	FUNCTION_112	FOR_1
0x400d031	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6787	syntax.c	FUNCTION_112	FOR_1
0x400d035	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      6787	syntax.c	FUNCTION_112	FOR_1
0x400d03c	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6787	syntax.c	FUNCTION_112	FOR_1
0x400d03f	          0x4863d0	                         movsxd rdx, eax	      6787	syntax.c	FUNCTION_112	FOR_1
0x400d042	          0x4889d0	                            mov rax, rdx	      6787	syntax.c	FUNCTION_112	FOR_1
0x400d045	        0x48c1e002	                              shl rax, 2	      6787	syntax.c	FUNCTION_112	FOR_1
0x400d049	          0x4801d0	                            add rax, rdx	      6787	syntax.c	FUNCTION_112	FOR_1
0x400d04c	        0x48c1e005	                              shl rax, 5	      6787	syntax.c	FUNCTION_112	FOR_1
0x400d050	          0x4801c8	                            add rax, rcx	      6787	syntax.c	FUNCTION_112	FOR_1
0x400d053	        0x488945b0	             mov qword [rbp - 0x50], rax	      6787	syntax.c	FUNCTION_112	FOR_1
0x400d057	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d05b	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d062	          0x4885c0	                           test rax, rax	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d065	     0xf8e1c010000	                           jle 0x400d187	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d06b	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_6
0x400d06f	      0xbe01000000	                              mov esi, 1	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_6
0x400d074	          0x4889c7	                            mov rdi, rax	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_6
0x400d077	      0xe800000000	                          call 0x400d07c	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_6
0x400d07c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d080	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d083	          0x4863d0	                         movsxd rdx, eax	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d086	          0x4889d0	                            mov rax, rdx	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d089	        0x48c1e003	                              shl rax, 3	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d08d	          0x4801d0	                            add rax, rdx	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d090	        0x48c1e003	                              shl rax, 3	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d094	          0x4801c8	                            add rax, rcx	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d097	        0x488945b8	             mov qword [rbp - 0x48], rax	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d09b	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d09f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0a3	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0a7	        0x488b4070	            mov rax, qword [rax + 0x70] 	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0ab	          0x488901	                    mov qword [rcx], rax	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0ae	        0x48895108	                mov qword [rcx + 8], rdx	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0b2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x400d0b6	        0x488d5070	                   lea rdx, [rax + 0x70]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x400d0ba	        0x488d45d0	                   lea rax, [rbp - 0x30]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x400d0be	          0x4889d6	                            mov rsi, rdx	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x400d0c1	          0x4889c7	                            mov rdi, rax	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x400d0c4	      0xe800000000	                          call 0x400d0c9	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x400d0c9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0cd	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0d4	            0x89c2	                            mov edx, eax	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0d6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0da	          0x895010	             mov dword [rax + 0x10], edx	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0dd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0e1	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0e8	            0x89c2	                            mov edx, eax	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0ea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0ee	          0x895014	             mov dword [rax + 0x14], edx	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0f1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0f5	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0fc	            0x89c2	                            mov edx, eax	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d0fe	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d101	             0x1d0	                            add eax, edx	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d103	          0x8945ac	             mov dword [rbp - 0x54], eax	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d106	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d10a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d10e	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d115	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d11c	        0x48894118	             mov qword [rcx + 0x18], rax	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d120	        0x48895120	             mov qword [rcx + 0x20], rdx	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d124	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400d128	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400d12f	            0x89c6	                            mov esi, eax	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400d131	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400d135	        0x488d4870	                   lea rcx, [rax + 0x70]	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400d139	        0x488d45c0	                   lea rax, [rbp - 0x40]	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400d13d	          0x4889c2	                            mov rdx, rax	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400d140	          0x4889cf	                            mov rdi, rcx	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400d143	      0xe800000000	                          call 0x400d148	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400d148	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d14c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d150	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d154	        0x48894128	             mov qword [rcx + 0x28], rax	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d158	        0x48895130	             mov qword [rcx + 0x30], rdx	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d15c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d160	         0xfb74054	           movzx eax, word [rax + 0x54] 	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d164	           0xfbfd0	                           movsx edx, ax	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d167	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d16b	          0x895038	             mov dword [rax + 0x38], edx	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d16e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d172	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d176	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d17a	        0x48895040	             mov qword [rax + 0x40], rdx	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d17e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6804	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d181	          0x83c001	                              add eax, 1	      6804	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d184	          0x8945e0	             mov dword [rbp - 0x20], eax	      6804	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400d187	        0x8345a401	               add dword [rbp - 0x5c], 1	      6785	syntax.c	FUNCTION_112	FOR_1
0x400d18b	    0x488b05000000	            mov rax, qword [0x0400d192] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x400d192	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x400d196	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x400d19c	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      6785	syntax.c	FUNCTION_112	FOR_1
0x400d19f	     0xf8f85feffff	                            jg 0x400d02a	      6785	syntax.c	FUNCTION_112	FOR_1
0x400d1a5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6810	syntax.c	FUNCTION_112	IF_3
0x400d1a8	          0x83f801	                              cmp eax, 1	      6810	syntax.c	FUNCTION_112	IF_3
0x400d1ab	            0x7e1c	                           jle 0x400d1c9	      6810	syntax.c	FUNCTION_112	IF_3
0x400d1ad	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x400d1b0	          0x4863f0	                         movsxd rsi, eax	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x400d1b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x400d1b7	      0xb900000000	                              mov ecx, 0	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x400d1bc	      0xba48000000	                           mov edx, 0x48	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x400d1c1	          0x4889c7	                            mov rdi, rax	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x400d1c4	      0xe800000000	                          call 0x400d1c9	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x400d1c9	      0xbf00000000	                              mov edi, 0	      6814	syntax.c	FUNCTION_112	CALL_11
0x400d1ce	      0xe800000000	                          call 0x400d1d3	      6814	syntax.c	FUNCTION_112	CALL_11
0x400d1d3	          0x4889c7	                            mov rdi, rax	      6814	syntax.c	FUNCTION_112	CALL_11
0x400d1d6	      0xe800000000	                          call 0x400d1db	      6814	syntax.c	FUNCTION_112	CALL_11
0x400d1db	      0xbf00000000	                              mov edi, 0	      6815	syntax.c	FUNCTION_112	CALL_12
0x400d1e0	      0xe800000000	                          call 0x400d1e5	      6815	syntax.c	FUNCTION_112	CALL_12
0x400d1e5	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      6816	syntax.c	FUNCTION_112	FOR_2
0x400d1ec	      0xe9a4010000	                           jmp 0x400d395	      6816	syntax.c	FUNCTION_112	FOR_2
0x400d1f1	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      6818	syntax.c	FUNCTION_112	FOR_2
0x400d1f5	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6818	syntax.c	FUNCTION_112	FOR_2
0x400d1f8	          0x4863d0	                         movsxd rdx, eax	      6818	syntax.c	FUNCTION_112	FOR_2
0x400d1fb	          0x4889d0	                            mov rax, rdx	      6818	syntax.c	FUNCTION_112	FOR_2
0x400d1fe	        0x48c1e003	                              shl rax, 3	      6818	syntax.c	FUNCTION_112	FOR_2
0x400d202	          0x4801d0	                            add rax, rdx	      6818	syntax.c	FUNCTION_112	FOR_2
0x400d205	        0x48c1e003	                              shl rax, 3	      6818	syntax.c	FUNCTION_112	FOR_2
0x400d209	          0x4801c8	                            add rax, rcx	      6818	syntax.c	FUNCTION_112	FOR_2
0x400d20c	        0x488945b8	             mov qword [rbp - 0x48], rax	      6818	syntax.c	FUNCTION_112	FOR_2
0x400d210	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x400d214	          0x4889c7	                            mov rdi, rax	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x400d217	      0xe800000000	                          call 0x400d21c	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x400d21c	          0x4889c7	                            mov rdi, rax	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x400d21f	      0xe800000000	                          call 0x400d224	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x400d224	      0xbf00000000	                              mov edi, 0	      6821	syntax.c	FUNCTION_112	FOR_2	CALL_15
0x400d229	      0xe800000000	                          call 0x400d22e	      6821	syntax.c	FUNCTION_112	FOR_2	CALL_15
0x400d22e	      0xbf0d000000	                            mov edi, 0xd	      6822	syntax.c	FUNCTION_112	FOR_2	CALL_16
0x400d233	      0xe800000000	                          call 0x400d238	      6822	syntax.c	FUNCTION_112	FOR_2	CALL_16
0x400d238	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_17
0x400d23c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_17
0x400d23f	            0x4898	                                    cdqe	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_17
0x400d241	          0x4889c7	                            mov rdi, rax	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_17
0x400d244	      0xe800000000	                          call 0x400d249	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_17
0x400d249	      0xbf00000000	                              mov edi, 0	      6824	syntax.c	FUNCTION_112	FOR_2	CALL_18
0x400d24e	      0xe800000000	                          call 0x400d253	      6824	syntax.c	FUNCTION_112	FOR_2	CALL_18
0x400d253	      0xbf14000000	                           mov edi, 0x14	      6825	syntax.c	FUNCTION_112	FOR_2	CALL_19
0x400d258	      0xe800000000	                          call 0x400d25d	      6825	syntax.c	FUNCTION_112	FOR_2	CALL_19
0x400d25d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_20
0x400d261	          0x8b4014	            mov eax, dword [rax + 0x14] 	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_20
0x400d264	            0x4898	                                    cdqe	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_20
0x400d266	          0x4889c7	                            mov rdi, rax	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_20
0x400d269	      0xe800000000	                          call 0x400d26e	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_20
0x400d26e	      0xbf00000000	                              mov edi, 0	      6827	syntax.c	FUNCTION_112	FOR_2	CALL_21
0x400d273	      0xe800000000	                          call 0x400d278	      6827	syntax.c	FUNCTION_112	FOR_2	CALL_21
0x400d278	      0xbf1a000000	                           mov edi, 0x1a	      6828	syntax.c	FUNCTION_112	FOR_2	CALL_22
0x400d27d	      0xe800000000	                          call 0x400d282	      6828	syntax.c	FUNCTION_112	FOR_2	CALL_22
0x400d282	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x400d286	        0x4883c018	                           add rax, 0x18	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x400d28a	          0x4889c7	                            mov rdi, rax	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x400d28d	      0xe800000000	                          call 0x400d292	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x400d292	          0x4889c7	                            mov rdi, rax	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x400d295	      0xe800000000	                          call 0x400d29a	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x400d29a	      0xbf00000000	                              mov edi, 0	      6830	syntax.c	FUNCTION_112	FOR_2	CALL_25
0x400d29f	      0xe800000000	                          call 0x400d2a4	      6830	syntax.c	FUNCTION_112	FOR_2	CALL_25
0x400d2a4	      0xbf26000000	                           mov edi, 0x26	      6831	syntax.c	FUNCTION_112	FOR_2	CALL_26
0x400d2a9	      0xe800000000	                          call 0x400d2ae	      6831	syntax.c	FUNCTION_112	FOR_2	CALL_26
0x400d2ae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x400d2b2	        0x4883c028	                           add rax, 0x28	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x400d2b6	          0x4889c7	                            mov rdi, rax	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x400d2b9	      0xe800000000	                          call 0x400d2be	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x400d2be	          0x4889c7	                            mov rdi, rax	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x400d2c1	      0xe800000000	                          call 0x400d2c6	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x400d2c6	      0xbf00000000	                              mov edi, 0	      6834	syntax.c	FUNCTION_112	FOR_2	CALL_29
0x400d2cb	      0xe800000000	                          call 0x400d2d0	      6834	syntax.c	FUNCTION_112	FOR_2	CALL_29
0x400d2d0	      0xbf32000000	                           mov edi, 0x32	      6836	syntax.c	FUNCTION_112	FOR_2	CALL_30
0x400d2d5	      0xe800000000	                          call 0x400d2da	      6836	syntax.c	FUNCTION_112	FOR_2	CALL_30
0x400d2da	    0x488b0d000000	            mov rcx, qword [0x0400d2e1] 	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d2e1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d2e5	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d2e8	          0x4863d0	                         movsxd rdx, eax	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d2eb	          0x4889d0	                            mov rax, rdx	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d2ee	        0x48c1e003	                              shl rax, 3	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d2f2	          0x4801d0	                            add rax, rdx	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d2f5	          0x4801c0	                            add rax, rax	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d2f8	          0x4801d0	                            add rax, rdx	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d2fb	        0x48c1e003	                              shl rax, 3	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d2ff	    0x482d98000000	                           sub rax, 0x98	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d305	          0x4801c8	                            add rax, rcx	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d308	          0x488b00	                    mov rax, qword [rax]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d30b	          0x4889c7	                            mov rdi, rax	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d30e	      0xe800000000	                          call 0x400d313	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400d313	      0xbf00000000	                              mov edi, 0	      6838	syntax.c	FUNCTION_112	FOR_2	CALL_32
0x400d318	      0xe800000000	                          call 0x400d31d	      6838	syntax.c	FUNCTION_112	FOR_2	CALL_32
0x400d31d	      0xbf45000000	                           mov edi, 0x45	      6840	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x400d322	      0xe800000000	                          call 0x400d327	      6840	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x400d327	    0x488b05000000	            mov rax, qword [0x0400d32e] 	      6841	syntax.c	FUNCTION_112	FOR_2	IF_4
0x400d32e	        0x4883f84f	                           cmp rax, 0x4f	      6841	syntax.c	FUNCTION_112	FOR_2	IF_4
0x400d332	            0x7f09	                            jg 0x400d33d	      6841	syntax.c	FUNCTION_112	FOR_2	IF_4
0x400d334	    0xc745a8140000	           mov dword [rbp - 0x58], 0x14 	      6842	syntax.c	FUNCTION_112	FOR_2	IF_4
0x400d33b	            0xeb0d	                           jmp 0x400d34a	      6842	syntax.c	FUNCTION_112	FOR_2	IF_4
0x400d33d	    0x488b05000000	            mov rax, qword [0x0400d344] 	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x400d344	          0x83e846	                           sub eax, 0x46	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x400d347	          0x8945a8	             mov dword [rbp - 0x58], eax	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x400d34a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x400d34e	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x400d352	          0x4889c7	                            mov rdi, rax	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x400d355	      0xe800000000	                          call 0x400d35a	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x400d35a	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x400d35d	            0x7d13	                           jge 0x400d372	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x400d35f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6846	syntax.c	FUNCTION_112	FOR_2	CALL_35
0x400d363	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6846	syntax.c	FUNCTION_112	FOR_2	CALL_35
0x400d367	          0x4889c7	                            mov rdi, rax	      6846	syntax.c	FUNCTION_112	FOR_2	CALL_35
0x400d36a	      0xe800000000	                          call 0x400d36f	      6846	syntax.c	FUNCTION_112	FOR_2	CALL_35
0x400d36f	          0x8945a8	             mov dword [rbp - 0x58], eax	      6846	syntax.c	FUNCTION_112	FOR_2	CALL_35
0x400d372	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400d376	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400d37a	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400d37d	            0x89d6	                            mov esi, edx	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400d37f	          0x4889c7	                            mov rdi, rax	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400d382	      0xe800000000	                          call 0x400d387	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400d387	      0xbf00000000	                              mov edi, 0	      6848	syntax.c	FUNCTION_112	FOR_2	CALL_37
0x400d38c	      0xe800000000	                          call 0x400d391	      6848	syntax.c	FUNCTION_112	FOR_2	CALL_37
0x400d391	        0x8345a401	               add dword [rbp - 0x5c], 1	      6816	syntax.c	FUNCTION_112	FOR_2
0x400d395	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6816	syntax.c	FUNCTION_112	FOR_2
0x400d398	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      6816	syntax.c	FUNCTION_112	FOR_2
0x400d39b	            0x7e0e	                           jle 0x400d3ab	      6816	syntax.c	FUNCTION_112	FOR_2
0x400d39d	    0x8b0500000000	            mov eax, dword [0x0400d3a3] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x400d3a3	            0x85c0	                           test eax, eax	      6816	syntax.c	FUNCTION_112	FOR_2
0x400d3a5	     0xf8446feffff	                            je 0x400d1f1	      6816	syntax.c	FUNCTION_112	FOR_2
0x400d3ab	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6850	syntax.c	FUNCTION_112	CALL_38
0x400d3af	          0x4889c7	                            mov rdi, rax	      6850	syntax.c	FUNCTION_112	CALL_38
0x400d3b2	      0xe800000000	                          call 0x400d3b7	      6850	syntax.c	FUNCTION_112	CALL_38
0x400d3b7	    0x8b0500000000	            mov eax, dword [0x0400d3bd] 	      6851	syntax.c	FUNCTION_112	IF_6
0x400d3bd	            0x85c0	                           test eax, eax	      6851	syntax.c	FUNCTION_112	IF_6
0x400d3bf	            0x753f	                           jne 0x400d400	      6851	syntax.c	FUNCTION_112	IF_6
0x400d3c1	      0xbf00000000	                              mov edi, 0	      6853	syntax.c	FUNCTION_112	IF_6	CALL_39
0x400d3c6	      0xe800000000	                          call 0x400d3cb	      6853	syntax.c	FUNCTION_112	IF_6	CALL_39
0x400d3cb	        0x488d45d0	                   lea rax, [rbp - 0x30]	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x400d3cf	          0x4889c7	                            mov rdi, rax	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x400d3d2	      0xe800000000	                          call 0x400d3d7	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x400d3d7	          0x4889c7	                            mov rdi, rax	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x400d3da	      0xe800000000	                          call 0x400d3df	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x400d3df	      0xbf0d000000	                            mov edi, 0xd	      6855	syntax.c	FUNCTION_112	IF_6	CALL_42
0x400d3e4	      0xe800000000	                          call 0x400d3e9	      6855	syntax.c	FUNCTION_112	IF_6	CALL_42
0x400d3e9	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6856	syntax.c	FUNCTION_112	IF_6	CALL_43
0x400d3ec	            0x4898	                                    cdqe	      6856	syntax.c	FUNCTION_112	IF_6	CALL_43
0x400d3ee	          0x4889c7	                            mov rdi, rax	      6856	syntax.c	FUNCTION_112	IF_6	CALL_43
0x400d3f1	      0xe800000000	                          call 0x400d3f6	      6856	syntax.c	FUNCTION_112	IF_6	CALL_43
0x400d3f6	      0xbf00000000	                              mov edi, 0	      6857	syntax.c	FUNCTION_112	IF_6	CALL_44
0x400d3fb	      0xe800000000	                          call 0x400d400	      6857	syntax.c	FUNCTION_112	IF_6	CALL_44
0x400d400	        0x488b45f8	                mov rax, qword [rbp - 8]	      6859	syntax.c	FUNCTION_112
0x400d404	    0x644833042528	                xor rax, qword fs:[0x28]	      6859	syntax.c	FUNCTION_112
0x400d40d	            0x7405	                            je 0x400d414	      6859	syntax.c	FUNCTION_112
0x400d40f	      0xe800000000	                          call 0x400d414	      6859	syntax.c	FUNCTION_112
0x400d414	              0xc9	                                   leave	      6859	syntax.c	FUNCTION_112
0x400d415	              0xc3	                                     ret	      6859	syntax.c	FUNCTION_112
invalidate_current_state	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	9
0x40026e6	              0x55	                                push rbp	      1730	syntax.c	FUNCTION_23
0x40026e7	          0x4889e5	                            mov rbp, rsp	      1730	syntax.c	FUNCTION_23
0x40026ea	      0xe8c3deffff	            call sym.clear_current_state	      1731	syntax.c	FUNCTION_23	CALL_1
0x40026ef	    0xc70500000000	               mov dword [0x040026f9], 0	      1732	syntax.c	FUNCTION_23
0x40026f9	    0x48c705000000	               mov qword [0x04002704], 0	      1733	syntax.c	FUNCTION_23
0x4002704	    0xc70500000000	     mov dword [0x0400270e], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x400270e	              0x90	                                     nop	      1735	syntax.c	FUNCTION_23
0x400270f	              0x5d	                                 pop rbp	      1735	syntax.c	FUNCTION_23
0x4002710	              0xc3	                                     ret	      1735	syntax.c	FUNCTION_23
syn_cmd_enable	functions,0:IF,0:SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,0:DO,0	18
0x4006d77	              0x55	                                push rbp	      3874	syntax.c	FUNCTION_58
0x4006d78	          0x4889e5	                            mov rbp, rsp	      3874	syntax.c	FUNCTION_58
0x4006d7b	        0x4883ec10	                           sub rsp, 0x10	      3874	syntax.c	FUNCTION_58
0x4006d7f	        0x48897df8	                mov qword [rbp - 8], rdi	      3874	syntax.c	FUNCTION_58
0x4006d83	          0x8975f4	              mov dword [rbp - 0xc], esi	      3874	syntax.c	FUNCTION_58
0x4006d86	      0xbe00000000	                              mov esi, 0	      3875	syntax.c	FUNCTION_58	CALL_1
0x4006d8b	      0xbf00000000	                              mov edi, 0	      3875	syntax.c	FUNCTION_58	CALL_1
0x4006d90	      0xe800000000	                          call 0x4006d95	      3875	syntax.c	FUNCTION_58	CALL_1
0x4006d95	        0x488b45f8	                mov rax, qword [rbp - 8]	      3876	syntax.c	FUNCTION_58	CALL_2
0x4006d99	      0xbe00000000	                              mov esi, 0	      3876	syntax.c	FUNCTION_58	CALL_2
0x4006d9e	          0x4889c7	                            mov rdi, rax	      3876	syntax.c	FUNCTION_58	CALL_2
0x4006da1	      0xe8b7000000	                  call sym.syn_cmd_onoff	      3876	syntax.c	FUNCTION_58	CALL_2
0x4006da6	      0xbe01000000	                              mov esi, 1	      3877	syntax.c	FUNCTION_58	CALL_3
0x4006dab	      0xbf00000000	                              mov edi, 0	      3877	syntax.c	FUNCTION_58	CALL_3
0x4006db0	      0xe800000000	                          call 0x4006db5	      3877	syntax.c	FUNCTION_58	CALL_3
0x4006db5	              0x90	                                     nop	      3878	syntax.c	FUNCTION_58
0x4006db6	              0xc9	                                   leave	      3878	syntax.c	FUNCTION_58
0x4006db7	              0xc3	                                     ret	      3878	syntax.c	FUNCTION_58
syntax_clear	functions,0:IF,0:SWITCH,0:FOR,2:CALL,11:ELSE,0:WHILE,0:DO,0	97
0x40063b6	              0x55	                                push rbp	      3609	syntax.c	FUNCTION_49
0x40063b7	          0x4889e5	                            mov rbp, rsp	      3609	syntax.c	FUNCTION_49
0x40063ba	        0x4883ec20	                           sub rsp, 0x20	      3609	syntax.c	FUNCTION_49
0x40063be	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3609	syntax.c	FUNCTION_49
0x40063c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3612	syntax.c	FUNCTION_49
0x40063c6	    0xc78050020000	              mov dword [rax + 0x250], 0	      3612	syntax.c	FUNCTION_49
0x40063d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3614	syntax.c	FUNCTION_49
0x40063d4	    0xc78054020000	              mov dword [rax + 0x254], 0	      3614	syntax.c	FUNCTION_49
0x40063de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3616	syntax.c	FUNCTION_49
0x40063e2	    0xc78058020000	              mov dword [rax + 0x258], 0	      3616	syntax.c	FUNCTION_49
0x40063ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3617	syntax.c	FUNCTION_49
0x40063f0	    0xc7805c020000	              mov dword [rax + 0x25c], 0	      3617	syntax.c	FUNCTION_49
0x40063fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3618	syntax.c	FUNCTION_49
0x40063fe	    0xc78098020000	              mov dword [rax + 0x298], 0	      3618	syntax.c	FUNCTION_49
0x4006408	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3620	syntax.c	FUNCTION_49
0x400640c	    0xc78008030000	              mov dword [rax + 0x308], 0	      3620	syntax.c	FUNCTION_49
0x4006416	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3624	syntax.c	FUNCTION_49	CALL_1
0x400641a	          0x4889c7	                            mov rdi, rax	      3624	syntax.c	FUNCTION_49	CALL_1
0x400641d	      0xe8e71e0000	                  call sym.clear_keywtab	      3624	syntax.c	FUNCTION_49	CALL_1
0x4006422	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3625	syntax.c	FUNCTION_49	CALL_2
0x4006426	    0x480528010000	                          add rax, 0x128	      3625	syntax.c	FUNCTION_49	CALL_2
0x400642c	          0x4889c7	                            mov rdi, rax	      3625	syntax.c	FUNCTION_49	CALL_2
0x400642f	      0xe8d51e0000	                  call sym.clear_keywtab	      3625	syntax.c	FUNCTION_49	CALL_2
0x4006434	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3628	syntax.c	FUNCTION_49	FOR_1
0x4006438	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3628	syntax.c	FUNCTION_49	FOR_1
0x400643e	          0x8945fc	                mov dword [rbp - 4], eax	      3628	syntax.c	FUNCTION_49	FOR_1
0x4006441	            0xeb11	                           jmp 0x4006454	      3628	syntax.c	FUNCTION_49	FOR_1
0x4006443	          0x8b55fc	                mov edx, dword [rbp - 4]	      3629	syntax.c	FUNCTION_49	CALL_3
0x4006446	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3629	syntax.c	FUNCTION_49	CALL_3
0x400644a	            0x89d6	                            mov esi, edx	      3629	syntax.c	FUNCTION_49	CALL_3
0x400644c	          0x4889c7	                            mov rdi, rax	      3629	syntax.c	FUNCTION_49	CALL_3
0x400644f	      0xe8d5030000	              call sym.syn_clear_pattern	      3629	syntax.c	FUNCTION_49	CALL_3
0x4006454	        0x836dfc01	                  sub dword [rbp - 4], 1	      3628	syntax.c	FUNCTION_49	FOR_1
0x4006458	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3628	syntax.c	FUNCTION_49	FOR_1
0x400645c	            0x79e5	                           jns 0x4006443	      3628	syntax.c	FUNCTION_49	FOR_1
0x400645e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3630	syntax.c	FUNCTION_49	CALL_4
0x4006462	    0x480560020000	                          add rax, 0x260	      3630	syntax.c	FUNCTION_49	CALL_4
0x4006468	          0x4889c7	                            mov rdi, rax	      3630	syntax.c	FUNCTION_49	CALL_4
0x400646b	      0xe800000000	                          call 0x4006470	      3630	syntax.c	FUNCTION_49	CALL_4
0x4006470	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3633	syntax.c	FUNCTION_49	FOR_2
0x4006474	    0x8b8078020000	           mov eax, dword [rax + 0x278] 	      3633	syntax.c	FUNCTION_49	FOR_2
0x400647a	          0x8945fc	                mov dword [rbp - 4], eax	      3633	syntax.c	FUNCTION_49	FOR_2
0x400647d	            0xeb11	                           jmp 0x4006490	      3633	syntax.c	FUNCTION_49	FOR_2
0x400647f	          0x8b55fc	                mov edx, dword [rbp - 4]	      3634	syntax.c	FUNCTION_49	CALL_5
0x4006482	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3634	syntax.c	FUNCTION_49	CALL_5
0x4006486	            0x89d6	                            mov esi, edx	      3634	syntax.c	FUNCTION_49	CALL_5
0x4006488	          0x4889c7	                            mov rdi, rax	      3634	syntax.c	FUNCTION_49	CALL_5
0x400648b	      0xe8ca040000	              call sym.syn_clear_cluster	      3634	syntax.c	FUNCTION_49	CALL_5
0x4006490	        0x836dfc01	                  sub dword [rbp - 4], 1	      3633	syntax.c	FUNCTION_49	FOR_2
0x4006494	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3633	syntax.c	FUNCTION_49	FOR_2
0x4006498	            0x79e5	                           jns 0x400647f	      3633	syntax.c	FUNCTION_49	FOR_2
0x400649a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3635	syntax.c	FUNCTION_49	CALL_6
0x400649e	    0x480578020000	                          add rax, 0x278	      3635	syntax.c	FUNCTION_49	CALL_6
0x40064a4	          0x4889c7	                            mov rdi, rax	      3635	syntax.c	FUNCTION_49	CALL_6
0x40064a7	      0xe800000000	                          call 0x40064ac	      3635	syntax.c	FUNCTION_49	CALL_6
0x40064ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3636	syntax.c	FUNCTION_49
0x40064b0	    0xc78090020000	              mov dword [rax + 0x290], 0	      3636	syntax.c	FUNCTION_49
0x40064ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3637	syntax.c	FUNCTION_49
0x40064be	    0xc78094020000	              mov dword [rax + 0x294], 0	      3637	syntax.c	FUNCTION_49
0x40064c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3639	syntax.c	FUNCTION_49
0x40064cc	    0xc7809c020000	              mov dword [rax + 0x29c], 0	      3639	syntax.c	FUNCTION_49
0x40064d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3640	syntax.c	FUNCTION_49
0x40064da	    0x48c780a80200	              mov qword [rax + 0x2a8], 0	      3640	syntax.c	FUNCTION_49
0x40064e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3641	syntax.c	FUNCTION_49
0x40064e9	    0x48c780b00200	              mov qword [rax + 0x2b0], 0	      3641	syntax.c	FUNCTION_49
0x40064f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3642	syntax.c	FUNCTION_49
0x40064f8	    0x48c780b80200	              mov qword [rax + 0x2b8], 0	      3642	syntax.c	FUNCTION_49
0x4006503	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3644	syntax.c	FUNCTION_49	CALL_7
0x4006507	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      3644	syntax.c	FUNCTION_49	CALL_7
0x400650e	          0x4889c7	                            mov rdi, rax	      3644	syntax.c	FUNCTION_49	CALL_7
0x4006511	      0xe800000000	                          call 0x4006516	      3644	syntax.c	FUNCTION_49	CALL_7
0x4006516	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3645	syntax.c	FUNCTION_49
0x400651a	    0x48c780c80200	              mov qword [rax + 0x2c8], 0	      3645	syntax.c	FUNCTION_49
0x4006525	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3646	syntax.c	FUNCTION_49	CALL_8
0x4006529	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      3646	syntax.c	FUNCTION_49	CALL_8
0x4006530	          0x4885c0	                           test rax, rax	      3646	syntax.c	FUNCTION_49	CALL_8
0x4006533	            0x7422	                            je 0x4006557	      3646	syntax.c	FUNCTION_49	CALL_8
0x4006535	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3646	syntax.c	FUNCTION_49	CALL_8
0x4006539	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      3646	syntax.c	FUNCTION_49	CALL_8
0x4006540	          0x4889c7	                            mov rdi, rax	      3646	syntax.c	FUNCTION_49	CALL_8
0x4006543	      0xe800000000	                          call 0x4006548	      3646	syntax.c	FUNCTION_49	CALL_8
0x4006548	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3646	syntax.c	FUNCTION_49	CALL_8
0x400654c	    0x48c780c00200	              mov qword [rax + 0x2c0], 0	      3646	syntax.c	FUNCTION_49	CALL_8
0x4006557	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3648	syntax.c	FUNCTION_49
0x400655b	    0xc7800c030000	              mov dword [rax + 0x30c], 0	      3648	syntax.c	FUNCTION_49
0x4006565	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3650	syntax.c	FUNCTION_49	CALL_9
0x4006569	    0x4805b0040000	                          add rax, 0x4b0	      3650	syntax.c	FUNCTION_49	CALL_9
0x400656f	          0x4889c7	                            mov rdi, rax	      3650	syntax.c	FUNCTION_49	CALL_9
0x4006572	      0xe800000000	                          call 0x4006577	      3650	syntax.c	FUNCTION_49	CALL_9
0x4006577	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3653	syntax.c	FUNCTION_49	CALL_10
0x400657b	          0x4889c7	                            mov rdi, rax	      3653	syntax.c	FUNCTION_49	CALL_10
0x400657e	      0xe800000000	                          call 0x4006583	      3653	syntax.c	FUNCTION_49	CALL_10
0x4006583	      0xe85ec1ffff	       call sym.invalidate_current_state	      3654	syntax.c	FUNCTION_49	CALL_11
0x4006588	    0xc70500000000	               mov dword [0x04006592], 0	      3657	syntax.c	FUNCTION_49
0x4006592	              0x90	                                     nop	      3658	syntax.c	FUNCTION_49
0x4006593	              0xc9	                                   leave	      3658	syntax.c	FUNCTION_49
0x4006594	              0xc3	                                     ret	      3658	syntax.c	FUNCTION_49
get_gui_attr_idx	functions,0:IF,0:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	30
0x40115da	              0x55	                                push rbp	      8973	syntax.c	FUNCTION_134
0x40115db	          0x4889e5	                            mov rbp, rsp	      8973	syntax.c	FUNCTION_134
0x40115de	        0x4883ec50	                           sub rsp, 0x50	      8973	syntax.c	FUNCTION_134
0x40115e2	          0x897dcc	             mov dword [rbp - 0x34], edi	      8973	syntax.c	FUNCTION_134
0x40115e5	        0x488975c0	             mov qword [rbp - 0x40], rsi	      8973	syntax.c	FUNCTION_134
0x40115e9	        0x488955b8	             mov qword [rbp - 0x48], rdx	      8973	syntax.c	FUNCTION_134
0x40115ed	    0x64488b042528	                mov rax, qword fs:[0x28]	      8973	syntax.c	FUNCTION_134
0x40115f6	        0x488945f8	                mov qword [rbp - 8], rax	      8973	syntax.c	FUNCTION_134
0x40115fa	            0x31c0	                            xor eax, eax	      8973	syntax.c	FUNCTION_134
0x40115fc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8976	syntax.c	FUNCTION_134	CALL_1
0x4011600	      0xba28000000	                           mov edx, 0x28	      8976	syntax.c	FUNCTION_134	CALL_1
0x4011605	      0xbe00000000	                              mov esi, 0	      8976	syntax.c	FUNCTION_134	CALL_1
0x401160a	          0x4889c7	                            mov rdi, rax	      8976	syntax.c	FUNCTION_134	CALL_1
0x401160d	      0xe800000000	                          call 0x4011612	      8976	syntax.c	FUNCTION_134	CALL_1
0x4011612	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8977	syntax.c	FUNCTION_134
0x4011615	        0x668945d0	               mov word [rbp - 0x30], ax	      8977	syntax.c	FUNCTION_134
0x4011619	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8978	syntax.c	FUNCTION_134
0x401161d	        0x488945d8	             mov qword [rbp - 0x28], rax	      8978	syntax.c	FUNCTION_134
0x4011621	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8979	syntax.c	FUNCTION_134
0x4011625	        0x488945e0	             mov qword [rbp - 0x20], rax	      8979	syntax.c	FUNCTION_134
0x4011629	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8980	syntax.c	FUNCTION_134	CALL_2
0x401162d	          0x4889c6	                            mov rsi, rax	      8980	syntax.c	FUNCTION_134	CALL_2
0x4011630	      0xbf00000000	                              mov edi, 0	      8980	syntax.c	FUNCTION_134	CALL_2
0x4011635	      0xe87efaffff	                 call sym.get_attr_entry	      8980	syntax.c	FUNCTION_134	CALL_2
0x401163a	        0x488b4df8	                mov rcx, qword [rbp - 8]	      8981	syntax.c	FUNCTION_134
0x401163e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8981	syntax.c	FUNCTION_134
0x4011647	            0x7405	                            je 0x401164e	      8981	syntax.c	FUNCTION_134
0x4011649	      0xe800000000	                          call 0x401164e	      8981	syntax.c	FUNCTION_134
0x401164e	              0xc9	                                   leave	      8981	syntax.c	FUNCTION_134
0x401164f	              0xc3	                                     ret	      8981	syntax.c	FUNCTION_134
ex_ownsyntax	functions,0:IF,4:SWITCH,0:FOR,0:CALL,16:ELSE,1:WHILE,0:DO,0	99
0x400c6c2	              0x55	                                push rbp	      6398	syntax.c	FUNCTION_96
0x400c6c3	          0x4889e5	                            mov rbp, rsp	      6398	syntax.c	FUNCTION_96
0x400c6c6	              0x53	                                push rbx	      6398	syntax.c	FUNCTION_96
0x400c6c7	        0x4883ec28	                           sub rsp, 0x28	      6398	syntax.c	FUNCTION_96
0x400c6cb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6398	syntax.c	FUNCTION_96
0x400c6cf	    0x488b05000000	            mov rax, qword [0x0400c6d6] 	      6402	syntax.c	FUNCTION_96	IF_1
0x400c6d6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6402	syntax.c	FUNCTION_96	IF_1
0x400c6da	    0x488b05000000	            mov rax, qword [0x0400c6e1] 	      6402	syntax.c	FUNCTION_96	IF_1
0x400c6e1	        0x488b4008	                mov rax, qword [rax + 8]	      6402	syntax.c	FUNCTION_96	IF_1
0x400c6e5	    0x480568170000	                         add rax, 0x1768	      6402	syntax.c	FUNCTION_96	IF_1
0x400c6eb	          0x4839c2	                            cmp rdx, rax	      6402	syntax.c	FUNCTION_96	IF_1
0x400c6ee	     0xf85d3000000	                           jne 0x400c7c7	      6402	syntax.c	FUNCTION_96	IF_1
0x400c6f4	    0x488b1d000000	            mov rbx, qword [0x0400c6fb] 	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x400c6fb	      0xbfb8040000	                          mov edi, 0x4b8	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x400c700	      0xe800000000	                          call 0x400c705	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x400c705	        0x48894310	             mov qword [rbx + 0x10], rax	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x400c709	    0x488b05000000	            mov rax, qword [0x0400c710] 	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0x400c710	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0x400c714	      0xbab8040000	                          mov edx, 0x4b8	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0x400c719	      0xbe00000000	                              mov esi, 0	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0x400c71e	          0x4889c7	                            mov rdi, rax	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0x400c721	      0xe800000000	                          call 0x400c726	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0x400c726	    0x488b05000000	            mov rax, qword [0x0400c72d] 	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x400c72d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x400c731	          0x4889c7	                            mov rdi, rax	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x400c734	      0xe800000000	                          call 0x400c739	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x400c739	    0x488b05000000	            mov rax, qword [0x0400c740] 	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x400c740	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x400c744	    0x480528010000	                          add rax, 0x128	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x400c74a	          0x4889c7	                            mov rdi, rax	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x400c74d	      0xe800000000	                          call 0x400c752	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x400c752	    0x488b05000000	            mov rax, qword [0x0400c759] 	      6410	syntax.c	FUNCTION_96	IF_1
0x400c759	    0xc78068020000	              mov dword [rax + 0x268], 0	      6410	syntax.c	FUNCTION_96	IF_1
0x400c763	    0x488b05000000	            mov rax, qword [0x0400c76a] 	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400c76a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400c76e	    0x480568040000	                          add rax, 0x468	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400c774	          0x4889c7	                            mov rdi, rax	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400c777	      0xe800000000	                          call 0x400c77c	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400c77c	    0x488b05000000	            mov rax, qword [0x0400c783] 	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x400c783	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x400c787	    0x480578040000	                          add rax, 0x478	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x400c78d	          0x4889c7	                            mov rdi, rax	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x400c790	      0xe800000000	                          call 0x400c795	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x400c795	    0x488b05000000	            mov rax, qword [0x0400c79c] 	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x400c79c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x400c7a0	    0x480580040000	                          add rax, 0x480	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x400c7a6	          0x4889c7	                            mov rdi, rax	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x400c7a9	      0xe800000000	                          call 0x400c7ae	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x400c7ae	    0x488b05000000	            mov rax, qword [0x0400c7b5] 	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x400c7b5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x400c7b9	    0x4805b0040000	                          add rax, 0x4b0	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x400c7bf	          0x4889c7	                            mov rdi, rax	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x400c7c2	      0xe800000000	                          call 0x400c7c7	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x400c7c7	      0xbf00000000	                              mov edi, 0	      6419	syntax.c	FUNCTION_96	CALL_9
0x400c7cc	      0xe800000000	                          call 0x400c7d1	      6419	syntax.c	FUNCTION_96	CALL_9
0x400c7d1	        0x488945e0	             mov qword [rbp - 0x20], rax	      6419	syntax.c	FUNCTION_96	CALL_9
0x400c7d5	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6420	syntax.c	FUNCTION_96	IF_2
0x400c7da	            0x7410	                            je 0x400c7ec	      6420	syntax.c	FUNCTION_96	IF_2
0x400c7dc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6421	syntax.c	FUNCTION_96	CALL_10
0x400c7e0	          0x4889c7	                            mov rdi, rax	      6421	syntax.c	FUNCTION_96	CALL_10
0x400c7e3	      0xe800000000	                          call 0x400c7e8	      6421	syntax.c	FUNCTION_96	CALL_10
0x400c7e8	        0x488945e0	             mov qword [rbp - 0x20], rax	      6421	syntax.c	FUNCTION_96	CALL_10
0x400c7ec	    0x488b0d000000	            mov rcx, qword [0x0400c7f3] 	      6425	syntax.c	FUNCTION_96	CALL_11
0x400c7f3	    0x488b05000000	            mov rax, qword [0x0400c7fa] 	      6425	syntax.c	FUNCTION_96	CALL_11
0x400c7fa	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      6425	syntax.c	FUNCTION_96	CALL_11
0x400c801	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6425	syntax.c	FUNCTION_96	CALL_11
0x400c805	          0x488b00	                    mov rax, qword [rax]	      6425	syntax.c	FUNCTION_96	CALL_11
0x400c808	          0x4989c8	                             mov r8, rcx	      6425	syntax.c	FUNCTION_96	CALL_11
0x400c80b	      0xb901000000	                              mov ecx, 1	      6425	syntax.c	FUNCTION_96	CALL_11
0x400c810	          0x4889c6	                            mov rsi, rax	      6425	syntax.c	FUNCTION_96	CALL_11
0x400c813	      0xbf4c000000	                           mov edi, 0x4c	      6425	syntax.c	FUNCTION_96	CALL_11
0x400c818	      0xe800000000	                          call 0x400c81d	      6425	syntax.c	FUNCTION_96	CALL_11
0x400c81d	      0xbf00000000	                              mov edi, 0	      6428	syntax.c	FUNCTION_96	CALL_12
0x400c822	      0xe800000000	                          call 0x400c827	      6428	syntax.c	FUNCTION_96	CALL_12
0x400c827	        0x488945e8	             mov qword [rbp - 0x18], rax	      6428	syntax.c	FUNCTION_96	CALL_12
0x400c82b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      6429	syntax.c	FUNCTION_96	IF_3
0x400c830	            0x7411	                            je 0x400c843	      6429	syntax.c	FUNCTION_96	IF_3
0x400c832	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6430	syntax.c	FUNCTION_96	CALL_13
0x400c836	          0x4889c6	                            mov rsi, rax	      6430	syntax.c	FUNCTION_96	CALL_13
0x400c839	      0xbf00000000	                              mov edi, 0	      6430	syntax.c	FUNCTION_96	CALL_13
0x400c83e	      0xe800000000	                          call 0x400c843	      6430	syntax.c	FUNCTION_96	CALL_13
0x400c843	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6433	syntax.c	FUNCTION_96	IF_4
0x400c848	            0x7511	                           jne 0x400c85b	      6433	syntax.c	FUNCTION_96	IF_4
0x400c84a	      0xbe01000000	                              mov esi, 1	      6434	syntax.c	FUNCTION_96	CALL_14
0x400c84f	      0xbf00000000	                              mov edi, 0	      6434	syntax.c	FUNCTION_96	CALL_14
0x400c854	      0xe800000000	                          call 0x400c859	      6434	syntax.c	FUNCTION_96	CALL_14
0x400c859	            0xeb1d	                           jmp 0x400c878	      6440	syntax.c	FUNCTION_96
0x400c85b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x400c85f	          0x4889c6	                            mov rsi, rax	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x400c862	      0xbf00000000	                              mov edi, 0	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x400c867	      0xe800000000	                          call 0x400c86c	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x400c86c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0x400c870	          0x4889c7	                            mov rdi, rax	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0x400c873	      0xe800000000	                          call 0x400c878	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0x400c878	              0x90	                                     nop	      6440	syntax.c	FUNCTION_96
0x400c879	        0x4883c428	                           add rsp, 0x28	      6440	syntax.c	FUNCTION_96
0x400c87d	              0x5b	                                 pop rbx	      6440	syntax.c	FUNCTION_96
0x400c87e	              0x5d	                                 pop rbp	      6440	syntax.c	FUNCTION_96
0x400c87f	              0xc3	                                     ret	      6440	syntax.c	FUNCTION_96
syn_getcurline	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	10
0x400586d	              0x55	                                push rbp	      3304	syntax.c	FUNCTION_42
0x400586e	          0x4889e5	                            mov rbp, rsp	      3304	syntax.c	FUNCTION_42
0x4005871	    0x488b0d000000	            mov rcx, qword [0x04005878] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x4005878	    0x488b05000000	            mov rax, qword [0x0400587f] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x400587f	      0xba00000000	                              mov edx, 0	      3305	syntax.c	FUNCTION_42	CALL_1
0x4005884	          0x4889ce	                            mov rsi, rcx	      3305	syntax.c	FUNCTION_42	CALL_1
0x4005887	          0x4889c7	                            mov rdi, rax	      3305	syntax.c	FUNCTION_42	CALL_1
0x400588a	      0xe800000000	                          call 0x400588f	      3305	syntax.c	FUNCTION_42	CALL_1
0x400588f	              0x5d	                                 pop rbp	      3306	syntax.c	FUNCTION_42
0x4005890	              0xc3	                                     ret	      3306	syntax.c	FUNCTION_42
in_id_list	functions,0:IF,14:SWITCH,0:FOR,0:CALL,2:ELSE,3:WHILE,2:DO,0	176
0x400c2a1	              0x55	                                push rbp	      6232	syntax.c	FUNCTION_94
0x400c2a2	          0x4889e5	                            mov rbp, rsp	      6232	syntax.c	FUNCTION_94
0x400c2a5	        0x4883ec40	                           sub rsp, 0x40	      6232	syntax.c	FUNCTION_94
0x400c2a9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6232	syntax.c	FUNCTION_94
0x400c2ad	        0x488975d0	             mov qword [rbp - 0x30], rsi	      6232	syntax.c	FUNCTION_94
0x400c2b1	        0x488955c8	             mov qword [rbp - 0x38], rdx	      6232	syntax.c	FUNCTION_94
0x400c2b5	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      6232	syntax.c	FUNCTION_94
0x400c2b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6236	syntax.c	FUNCTION_94
0x400c2bc	         0xfb74004	               movzx eax, word [rax + 4]	      6236	syntax.c	FUNCTION_94
0x400c2c0	        0x668945ee	               mov word [rbp - 0x12], ax	      6236	syntax.c	FUNCTION_94
0x400c2c4	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      6241	syntax.c	FUNCTION_94	IF_1
0x400c2c9	     0xf84d7000000	                            je 0x400c3a6	      6241	syntax.c	FUNCTION_94	IF_1
0x400c2cf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6241	syntax.c	FUNCTION_94	IF_1
0x400c2d3	        0x488b4008	                mov rax, qword [rax + 8]	      6241	syntax.c	FUNCTION_94	IF_1
0x400c2d7	          0x4885c0	                           test rax, rax	      6241	syntax.c	FUNCTION_94	IF_1
0x400c2da	     0xf84c6000000	                            je 0x400c3a6	      6241	syntax.c	FUNCTION_94	IF_1
0x400c2e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6242	syntax.c	FUNCTION_94	IF_1
0x400c2e4	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6242	syntax.c	FUNCTION_94	IF_1
0x400c2e8	          0x83e040	                           and eax, 0x40	      6242	syntax.c	FUNCTION_94	IF_1
0x400c2eb	          0x4885c0	                           test rax, rax	      6242	syntax.c	FUNCTION_94	IF_1
0x400c2ee	     0xf85b2000000	                           jne 0x400c3a6	      6242	syntax.c	FUNCTION_94	IF_1
0x400c2f4	            0xeb08	                           jmp 0x400c2fe	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400c2f6	    0x48816dd89000	            sub qword [rbp - 0x28], 0x90	      6248	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400c2fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400c302	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400c306	      0x2500000100	                        and eax, 0x10000	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400c30b	          0x4885c0	                           test rax, rax	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400c30e	            0x740d	                            je 0x400c31d	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400c310	    0x488b05000000	            mov rax, qword [0x0400c317] 	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400c317	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400c31b	            0x72d9	                            jb 0x400c2f6	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400c31d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c321	            0x8b00	                    mov eax, dword [rax]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c323	            0x85c0	                           test eax, eax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c325	            0x787f	                            js 0x400c3a6	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c327	    0x488b05000000	            mov rax, qword [0x0400c32e] 	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c32e	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c335	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c339	            0x8b00	                    mov eax, dword [rax]	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c33b	          0x4863d0	                         movsxd rdx, eax	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c33e	          0x4889d0	                            mov rax, rdx	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c341	        0x48c1e002	                              shl rax, 2	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c345	          0x4801d0	                            add rax, rdx	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c348	        0x48c1e005	                              shl rax, 5	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c34c	          0x4801c8	                            add rax, rcx	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c34f	          0x8b4024	            mov eax, dword [rax + 0x24] 	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c352	          0x83e001	                              and eax, 1	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c355	            0x89c1	                            mov ecx, eax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c357	    0x488b05000000	            mov rax, qword [0x0400c35e] 	      6251	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c35e	    0x488bb0700200	           mov rsi, qword [rax + 0x270] 	      6251	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c365	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6251	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c369	            0x8b00	                    mov eax, dword [rax]	      6251	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c36b	          0x4863d0	                         movsxd rdx, eax	      6251	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c36e	          0x4889d0	                            mov rax, rdx	      6251	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c371	        0x48c1e002	                              shl rax, 2	      6251	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c375	          0x4801d0	                            add rax, rdx	      6251	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c378	        0x48c1e005	                              shl rax, 5	      6251	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c37c	          0x4801f0	                            add rax, rsi	      6251	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c37f	        0x488d5050	                   lea rdx, [rax + 0x50]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c383	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c387	        0x488b4008	                mov rax, qword [rax + 8]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c38b	          0x4889c6	                            mov rsi, rax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c38e	      0xbf00000000	                              mov edi, 0	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c393	      0xe809ffffff	                     call sym.in_id_list	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c398	            0x85c0	                           test eax, eax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c39a	            0x740a	                            je 0x400c3a6	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x400c39c	      0xb801000000	                              mov eax, 1	      6253	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c3a1	      0xe9af010000	                           jmp 0x400c555	      6253	syntax.c	FUNCTION_94	IF_1	IF_2
0x400c3a6	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      6256	syntax.c	FUNCTION_94	IF_3
0x400c3ab	            0x750a	                           jne 0x400c3b7	      6256	syntax.c	FUNCTION_94	IF_3
0x400c3ad	      0xb800000000	                              mov eax, 0	      6257	syntax.c	FUNCTION_94	IF_3
0x400c3b2	      0xe99e010000	                           jmp 0x400c555	      6257	syntax.c	FUNCTION_94	IF_3
0x400c3b7	      0x48837dd0ff	cmp qword [rbp - 0x30], 0xffffffffffffffff	      6263	syntax.c	FUNCTION_94	IF_4
0x400c3bc	            0x750f	                           jne 0x400c3cd	      6263	syntax.c	FUNCTION_94	IF_4
0x400c3be	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      6264	syntax.c	FUNCTION_94	IF_4
0x400c3c2	           0xf94c0	                                 sete al	      6264	syntax.c	FUNCTION_94	IF_4
0x400c3c5	           0xfb6c0	                           movzx eax, al	      6264	syntax.c	FUNCTION_94	IF_4
0x400c3c8	      0xe988010000	                           jmp 0x400c555	      6264	syntax.c	FUNCTION_94	IF_4
0x400c3cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6271	syntax.c	FUNCTION_94
0x400c3d1	           0xfb700	                   movzx eax, word [rax]	      6271	syntax.c	FUNCTION_94
0x400c3d4	        0x668945ec	               mov word [rbp - 0x14], ax	      6271	syntax.c	FUNCTION_94
0x400c3d8	    0x66817dec1f4e	          cmp word [rbp - 0x14], 0x4e1f 	      6272	syntax.c	FUNCTION_94	IF_5
0x400c3de	     0xf8e9b000000	                           jle 0x400c47f	      6272	syntax.c	FUNCTION_94	IF_5
0x400c3e4	    0x66817decd759	          cmp word [rbp - 0x14], 0x59d7 	      6272	syntax.c	FUNCTION_94	IF_5
0x400c3ea	     0xf8f8f000000	                            jg 0x400c47f	      6272	syntax.c	FUNCTION_94	IF_5
0x400c3f0	    0x66817dec0752	          cmp word [rbp - 0x14], 0x5207 	      6274	syntax.c	FUNCTION_94	IF_5	IF_6
0x400c3f6	            0x7f1e	                            jg 0x400c416	      6274	syntax.c	FUNCTION_94	IF_5	IF_6
0x400c3f8	         0xfbf45ec	            movsx eax, word [rbp - 0x14]	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x400c3fc	    0x8d90e0b1ffff	                 lea edx, [rax - 0x4e20]	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x400c402	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x400c406	            0x8b00	                    mov eax, dword [rax]	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x400c408	            0x39c2	                            cmp edx, eax	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x400c40a	            0x745a	                            je 0x400c466	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x400c40c	      0xb800000000	                              mov eax, 0	      6278	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x400c411	      0xe93f010000	                           jmp 0x400c555	      6278	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x400c416	    0x66817decef55	          cmp word [rbp - 0x14], 0x55ef 	      6280	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8
0x400c41c	            0x7f24	                            jg 0x400c442	      6280	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8
0x400c41e	         0xfbf45ec	            movsx eax, word [rbp - 0x14]	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400c422	    0x8d90f8adffff	                 lea edx, [rax - 0x5208]	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400c428	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400c42c	            0x8b00	                    mov eax, dword [rax]	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400c42e	            0x39c2	                            cmp edx, eax	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400c430	            0x7506	                           jne 0x400c438	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400c432	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400c436	            0x742e	                            je 0x400c466	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400c438	      0xb800000000	                              mov eax, 0	      6284	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400c43d	      0xe913010000	                           jmp 0x400c555	      6284	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x400c442	         0xfbf45ec	            movsx eax, word [rbp - 0x14]	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400c446	    0x8d9010aaffff	                 lea edx, [rax - 0x55f0]	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400c44c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400c450	            0x8b00	                    mov eax, dword [rax]	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400c452	            0x39c2	                            cmp edx, eax	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400c454	            0x7506	                           jne 0x400c45c	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400c456	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400c45a	            0x750a	                           jne 0x400c466	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400c45c	      0xb800000000	                              mov eax, 0	      6290	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400c461	      0xe9ef000000	                           jmp 0x400c555	      6290	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400c466	      0x488345d002	               add qword [rbp - 0x30], 2	      6292	syntax.c	FUNCTION_94	IF_5
0x400c46b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6292	syntax.c	FUNCTION_94	IF_5
0x400c46f	           0xfb700	                   movzx eax, word [rax]	      6292	syntax.c	FUNCTION_94	IF_5
0x400c472	        0x668945ec	               mov word [rbp - 0x14], ax	      6292	syntax.c	FUNCTION_94	IF_5
0x400c476	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      6293	syntax.c	FUNCTION_94	IF_5
0x400c47d	            0xeb07	                           jmp 0x400c486	      6293	syntax.c	FUNCTION_94	IF_5
0x400c47f	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      6296	syntax.c	FUNCTION_94	ELSE_3
0x400c486	      0xe9b5000000	                           jmp 0x400c540	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x400c48b	         0xfb745ec	            movzx eax, word [rbp - 0x14]	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x400c48f	        0x663b45ee	               cmp ax, word [rbp - 0x12]	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x400c493	            0x7508	                           jne 0x400c49d	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x400c495	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      6304	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x400c498	      0xe9b8000000	                           jmp 0x400c555	      6304	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x400c49d	    0x66817decd759	          cmp word [rbp - 0x14], 0x59d7 	      6305	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4a3	     0xf8e87000000	                           jle 0x400c530	      6305	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4a9	    0x488b05000000	            mov rax, qword [0x0400c4b0] 	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4b0	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4b7	      0x480fbf55ec	            movsx rdx, word [rbp - 0x14]	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4bc	          0x4889d0	                            mov rax, rdx	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4bf	          0x4801c0	                            add rax, rax	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4c2	          0x4801d0	                            add rax, rdx	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4c5	        0x48c1e003	                              shl rax, 3	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4c9	    0x482d406c0800	                        sub rax, 0x86c40	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4cf	          0x4801c8	                            add rax, rcx	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4d2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4d6	        0x488945f8	                mov qword [rbp - 8], rax	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400c4da	      0x48837df800	                  cmp qword [rbp - 8], 0	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400c4df	            0x744f	                            je 0x400c530	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400c4e1	    0x8b0500000000	            mov eax, dword [0x0400c4e7] 	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400c4e7	          0x83f81d	                           cmp eax, 0x1d	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400c4ea	            0x7f44	                            jg 0x400c530	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400c4ec	    0x8b0500000000	            mov eax, dword [0x0400c4f2] 	      6312	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400c4f2	          0x83c001	                              add eax, 1	      6312	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400c4f5	    0x890500000000	            mov dword [0x0400c4fb], eax 	      6312	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400c4fb	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_2
0x400c4fe	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_2
0x400c502	        0x488b45f8	                mov rax, qword [rbp - 8]	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_2
0x400c506	          0x4889c6	                            mov rsi, rax	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_2
0x400c509	      0xbf00000000	                              mov edi, 0	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_2
0x400c50e	      0xe88efdffff	                     call sym.in_id_list	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_2
0x400c513	          0x8945f4	              mov dword [rbp - 0xc], eax	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_2
0x400c516	    0x8b0500000000	            mov eax, dword [0x0400c51c] 	      6314	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400c51c	          0x83e801	                              sub eax, 1	      6314	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400c51f	    0x890500000000	            mov dword [0x0400c525], eax 	      6314	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400c525	        0x837df400	                cmp dword [rbp - 0xc], 0	      6315	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0x400c529	            0x7405	                            je 0x400c530	      6315	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0x400c52b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      6316	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0x400c52e	            0xeb25	                           jmp 0x400c555	      6316	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0x400c530	      0x488345d002	               add qword [rbp - 0x30], 2	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x400c535	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x400c539	           0xfb700	                   movzx eax, word [rax]	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x400c53c	        0x668945ec	               mov word [rbp - 0x14], ax	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x400c540	      0x66837dec00	                cmp word [rbp - 0x14], 0	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x400c545	     0xf8540ffffff	                           jne 0x400c48b	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x400c54b	        0x837df000	               cmp dword [rbp - 0x10], 0	      6321	syntax.c	FUNCTION_94
0x400c54f	           0xf94c0	                                 sete al	      6321	syntax.c	FUNCTION_94
0x400c552	           0xfb6c0	                           movzx eax, al	      6321	syntax.c	FUNCTION_94
0x400c555	              0xc9	                                   leave	      6322	syntax.c	FUNCTION_94
0x400c556	              0xc3	                                     ret	      6322	syntax.c	FUNCTION_94
font_name2handle	functions,0:IF,1:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	18
0x4010e39	              0x55	                                push rbp	      8599	syntax.c	FUNCTION_127
0x4010e3a	          0x4889e5	                            mov rbp, rsp	      8599	syntax.c	FUNCTION_127
0x4010e3d	        0x4883ec10	                           sub rsp, 0x10	      8599	syntax.c	FUNCTION_127
0x4010e41	        0x48897df8	                mov qword [rbp - 8], rdi	      8599	syntax.c	FUNCTION_127
0x4010e45	        0x488b45f8	                mov rax, qword [rbp - 8]	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4010e49	      0xbe00000000	                              mov esi, 0	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4010e4e	          0x4889c7	                            mov rdi, rax	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4010e51	      0xe800000000	                          call 0x4010e56	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4010e56	            0x85c0	                           test eax, eax	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4010e58	            0x7507	                           jne 0x4010e61	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4010e5a	      0xb800000000	                              mov eax, 0	      8601	syntax.c	FUNCTION_127	IF_1
0x4010e5f	            0xeb11	                           jmp 0x4010e72	      8601	syntax.c	FUNCTION_127	IF_1
0x4010e61	        0x488b45f8	                mov rax, qword [rbp - 8]	      8603	syntax.c	FUNCTION_127	CALL_2
0x4010e65	      0xbe01000000	                              mov esi, 1	      8603	syntax.c	FUNCTION_127	CALL_2
0x4010e6a	          0x4889c7	                            mov rdi, rax	      8603	syntax.c	FUNCTION_127	CALL_2
0x4010e6d	      0xe800000000	                          call 0x4010e72	      8603	syntax.c	FUNCTION_127	CALL_2
0x4010e72	              0xc9	                                   leave	      8604	syntax.c	FUNCTION_127
0x4010e73	              0xc3	                                     ret	      8604	syntax.c	FUNCTION_127
syn_name2id	functions,0:IF,1:SWITCH,0:FOR,1:CALL,3:ELSE,0:WHILE,0:DO,0	62
0x4012d86	              0x55	                                push rbp	      9632	syntax.c	FUNCTION_148
0x4012d87	          0x4889e5	                            mov rbp, rsp	      9632	syntax.c	FUNCTION_148
0x4012d8a	    0x4881ecf00000	                           sub rsp, 0xf0	      9632	syntax.c	FUNCTION_148
0x4012d91	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	      9632	syntax.c	FUNCTION_148
0x4012d98	    0x64488b042528	                mov rax, qword fs:[0x28]	      9632	syntax.c	FUNCTION_148
0x4012da1	        0x488945f8	                mov qword [rbp - 8], rax	      9632	syntax.c	FUNCTION_148
0x4012da5	            0x31c0	                            xor eax, eax	      9632	syntax.c	FUNCTION_148
0x4012da7	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	      9639	syntax.c	FUNCTION_148	CALL_1
0x4012dae	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      9639	syntax.c	FUNCTION_148	CALL_1
0x4012db5	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x4012dba	          0x4889ce	                            mov rsi, rcx	      9639	syntax.c	FUNCTION_148	CALL_1
0x4012dbd	          0x4889c7	                            mov rdi, rax	      9639	syntax.c	FUNCTION_148	CALL_1
0x4012dc0	      0xe800000000	                          call 0x4012dc5	      9639	syntax.c	FUNCTION_148	CALL_1
0x4012dc5	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      9640	syntax.c	FUNCTION_148	CALL_2
0x4012dcc	          0x4889c7	                            mov rdi, rax	      9640	syntax.c	FUNCTION_148	CALL_2
0x4012dcf	      0xe800000000	                          call 0x4012dd4	      9640	syntax.c	FUNCTION_148	CALL_2
0x4012dd4	    0x8b0500000000	            mov eax, dword [0x04012dda] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x4012dda	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      9641	syntax.c	FUNCTION_148	FOR_1
0x4012de0	            0xeb71	                           jmp 0x4012e53	      9641	syntax.c	FUNCTION_148	FOR_1
0x4012de2	    0x488b0d000000	            mov rcx, qword [0x04012de9] 	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012de9	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012def	          0x4863d0	                         movsxd rdx, eax	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012df2	          0x4889d0	                            mov rax, rdx	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012df5	        0x48c1e003	                              shl rax, 3	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012df9	          0x4801d0	                            add rax, rdx	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012dfc	          0x4801c0	                            add rax, rax	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012dff	          0x4801d0	                            add rax, rdx	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012e02	        0x48c1e003	                              shl rax, 3	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012e06	          0x4801c8	                            add rax, rcx	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012e09	        0x488b4008	                mov rax, qword [rax + 8]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012e0d	          0x4885c0	                           test rax, rax	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012e10	            0x7441	                            je 0x4012e53	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012e12	    0x488b0d000000	            mov rcx, qword [0x04012e19] 	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e19	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e1f	          0x4863d0	                         movsxd rdx, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e22	          0x4889d0	                            mov rax, rdx	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e25	        0x48c1e003	                              shl rax, 3	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e29	          0x4801d0	                            add rax, rdx	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e2c	          0x4801c0	                            add rax, rax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e2f	          0x4801d0	                            add rax, rdx	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e32	        0x48c1e003	                              shl rax, 3	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e36	          0x4801c8	                            add rax, rcx	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e39	        0x488b5008	                mov rdx, qword [rax + 8]	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e3d	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e44	          0x4889d6	                            mov rsi, rdx	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e47	          0x4889c7	                            mov rdi, rax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e4a	      0xe800000000	                          call 0x4012e4f	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e4f	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e51	            0x7416	                            je 0x4012e69	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4012e53	    0x83ad2cffffff	               sub dword [rbp - 0xd4], 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x4012e5a	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      9641	syntax.c	FUNCTION_148	FOR_1
0x4012e61	     0xf897bffffff	                           jns 0x4012de2	      9641	syntax.c	FUNCTION_148	FOR_1
0x4012e67	            0xeb01	                           jmp 0x4012e6a	      9641	syntax.c	FUNCTION_148	FOR_1
0x4012e69	              0x90	                                     nop	      9644	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4012e6a	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      9645	syntax.c	FUNCTION_148
0x4012e70	          0x83c001	                              add eax, 1	      9645	syntax.c	FUNCTION_148
0x4012e73	        0x488b75f8	                mov rsi, qword [rbp - 8]	      9646	syntax.c	FUNCTION_148
0x4012e77	    0x644833342528	                xor rsi, qword fs:[0x28]	      9646	syntax.c	FUNCTION_148
0x4012e80	            0x7405	                            je 0x4012e87	      9646	syntax.c	FUNCTION_148
0x4012e82	      0xe800000000	                          call 0x4012e87	      9646	syntax.c	FUNCTION_148
0x4012e87	              0xc9	                                   leave	      9646	syntax.c	FUNCTION_148
0x4012e88	              0xc3	                                     ret	      9646	syntax.c	FUNCTION_148
syn_stack_alloc	functions,0:IF,10:SWITCH,0:FOR,1:CALL,3:ELSE,3:WHILE,2:DO,0	209
0x4001274	              0x55	                                push rbp	      1229	syntax.c	FUNCTION_13
0x4001275	          0x4889e5	                            mov rbp, rsp	      1229	syntax.c	FUNCTION_13
0x4001278	        0x4883ec20	                           sub rsp, 0x20	      1229	syntax.c	FUNCTION_13
0x400127c	    0x488b05000000	            mov rax, qword [0x04001283] 	      1234	syntax.c	FUNCTION_13
0x4001283	          0x488b00	                    mov rax, qword [rax]	      1234	syntax.c	FUNCTION_13
0x4001286	        0x488d500f	                    lea rdx, [rax + 0xf]	      1234	syntax.c	FUNCTION_13
0x400128a	          0x4885c0	                           test rax, rax	      1234	syntax.c	FUNCTION_13
0x400128d	        0x480f48c2	                          cmovs rax, rdx	      1234	syntax.c	FUNCTION_13
0x4001291	        0x48c1f804	                              sar rax, 4	      1234	syntax.c	FUNCTION_13
0x4001295	          0x4889c2	                            mov rdx, rax	      1234	syntax.c	FUNCTION_13
0x4001298	    0x488b05000000	            mov rax, qword [0x0400129f] 	      1234	syntax.c	FUNCTION_13
0x400129f	          0x4801c0	                            add rax, rax	      1234	syntax.c	FUNCTION_13
0x40012a2	          0x4801d0	                            add rax, rdx	      1234	syntax.c	FUNCTION_13
0x40012a5	        0x488945e0	             mov qword [rbp - 0x20], rax	      1234	syntax.c	FUNCTION_13
0x40012a9	    0x48817de09500	           cmp qword [rbp - 0x20], 0x95 	      1235	syntax.c	FUNCTION_13	IF_1
0x40012b1	            0x7f0a	                            jg 0x40012bd	      1235	syntax.c	FUNCTION_13	IF_1
0x40012b3	    0x48c745e09600	           mov qword [rbp - 0x20], 0x96 	      1236	syntax.c	FUNCTION_13	IF_1
0x40012bb	            0xeb12	                           jmp 0x40012cf	      1236	syntax.c	FUNCTION_13	IF_1
0x40012bd	    0x48817de0e803	          cmp qword [rbp - 0x20], 0x3e8 	      1237	syntax.c	FUNCTION_13	ELSE_1	IF_2
0x40012c5	            0x7e08	                           jle 0x40012cf	      1237	syntax.c	FUNCTION_13	ELSE_1	IF_2
0x40012c7	    0x48c745e0e803	          mov qword [rbp - 0x20], 0x3e8 	      1238	syntax.c	FUNCTION_13	ELSE_1	IF_2
0x40012cf	    0x488b05000000	            mov rax, qword [0x040012d6] 	      1239	syntax.c	FUNCTION_13	IF_3
0x40012d6	    0x8b8018030000	           mov eax, dword [rax + 0x318] 	      1239	syntax.c	FUNCTION_13	IF_3
0x40012dc	            0x4898	                                    cdqe	      1239	syntax.c	FUNCTION_13	IF_3
0x40012de	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1239	syntax.c	FUNCTION_13	IF_3
0x40012e2	          0x4801d2	                            add rdx, rdx	      1239	syntax.c	FUNCTION_13	IF_3
0x40012e5	          0x4839d0	                            cmp rax, rdx	      1239	syntax.c	FUNCTION_13	IF_3
0x40012e8	            0x7f19	                            jg 0x4001303	      1239	syntax.c	FUNCTION_13	IF_3
0x40012ea	    0x488b05000000	            mov rax, qword [0x040012f1] 	      1239	syntax.c	FUNCTION_13	IF_3
0x40012f1	    0x8b8018030000	           mov eax, dword [rax + 0x318] 	      1239	syntax.c	FUNCTION_13	IF_3
0x40012f7	            0x4898	                                    cdqe	      1239	syntax.c	FUNCTION_13	IF_3
0x40012f9	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1239	syntax.c	FUNCTION_13	IF_3
0x40012fd	     0xf8d03030000	                           jge 0x4001606	      1239	syntax.c	FUNCTION_13	IF_3
0x4001303	    0x488b05000000	            mov rax, qword [0x0400130a] 	      1242	syntax.c	FUNCTION_13	IF_3
0x400130a	          0x488b00	                    mov rax, qword [rax]	      1242	syntax.c	FUNCTION_13	IF_3
0x400130d	        0x488945e0	             mov qword [rbp - 0x20], rax	      1242	syntax.c	FUNCTION_13	IF_3
0x4001311	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1243	syntax.c	FUNCTION_13	IF_3
0x4001315	          0x4889c2	                            mov rdx, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x4001318	        0x48c1ea3f	                           shr rdx, 0x3f	      1243	syntax.c	FUNCTION_13	IF_3
0x400131c	          0x4801d0	                            add rax, rdx	      1243	syntax.c	FUNCTION_13	IF_3
0x400131f	          0x48d1f8	                              sar rax, 1	      1243	syntax.c	FUNCTION_13	IF_3
0x4001322	          0x4889c2	                            mov rdx, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x4001325	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1243	syntax.c	FUNCTION_13	IF_3
0x4001329	          0x4801d0	                            add rax, rdx	      1243	syntax.c	FUNCTION_13	IF_3
0x400132c	        0x488d500f	                    lea rdx, [rax + 0xf]	      1243	syntax.c	FUNCTION_13	IF_3
0x4001330	          0x4885c0	                           test rax, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x4001333	        0x480f48c2	                          cmovs rax, rdx	      1243	syntax.c	FUNCTION_13	IF_3
0x4001337	        0x48c1f804	                              sar rax, 4	      1243	syntax.c	FUNCTION_13	IF_3
0x400133b	          0x4889c2	                            mov rdx, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x400133e	    0x488b05000000	            mov rax, qword [0x04001345] 	      1243	syntax.c	FUNCTION_13	IF_3
0x4001345	          0x4801c0	                            add rax, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x4001348	          0x4801d0	                            add rax, rdx	      1243	syntax.c	FUNCTION_13	IF_3
0x400134b	        0x488945e0	             mov qword [rbp - 0x20], rax	      1243	syntax.c	FUNCTION_13	IF_3
0x400134f	    0x48817de09500	           cmp qword [rbp - 0x20], 0x95 	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x4001357	            0x7f0a	                            jg 0x4001363	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x4001359	    0x48c745e09600	           mov qword [rbp - 0x20], 0x96 	      1245	syntax.c	FUNCTION_13	IF_3	IF_4
0x4001361	            0xeb12	                           jmp 0x4001375	      1245	syntax.c	FUNCTION_13	IF_3	IF_4
0x4001363	    0x48817de0e803	          cmp qword [rbp - 0x20], 0x3e8 	      1246	syntax.c	FUNCTION_13	IF_3	ELSE_2	IF_5
0x400136b	            0x7e08	                           jle 0x4001375	      1246	syntax.c	FUNCTION_13	IF_3	ELSE_2	IF_5
0x400136d	    0x48c745e0e803	          mov qword [rbp - 0x20], 0x3e8 	      1247	syntax.c	FUNCTION_13	IF_3	ELSE_2	IF_5
0x4001375	    0x488b05000000	            mov rax, qword [0x0400137c] 	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x400137c	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x4001383	          0x4885c0	                           test rax, rax	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x4001386	     0xf8483000000	                            je 0x400140f	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x400138c	              0x90	                                     nop	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400138d	    0x488b05000000	            mov rax, qword [0x04001394] 	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x4001394	    0x8b9018030000	           mov edx, dword [rax + 0x318] 	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400139a	    0x488b05000000	            mov rax, qword [0x040013a1] 	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x40013a1	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x40013a7	            0x29c2	                            sub edx, eax	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x40013a9	            0x89d0	                            mov eax, edx	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x40013ab	          0x83c002	                              add eax, 2	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x40013ae	            0x4898	                                    cdqe	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x40013b0	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x40013b4	            0x7e09	                           jle 0x40013bf	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x40013b6	      0xe8ba040000	              call sym.syn_stack_cleanup	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x40013bb	            0x85c0	                           test eax, eax	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x40013bd	            0x75ce	                           jne 0x400138d	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x40013bf	    0x488b05000000	            mov rax, qword [0x040013c6] 	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013c6	    0x8b9018030000	           mov edx, dword [rax + 0x318] 	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013cc	    0x488b05000000	            mov rax, qword [0x040013d3] 	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013d3	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013d9	            0x29c2	                            sub edx, eax	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013db	            0x89d0	                            mov eax, edx	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013dd	          0x83c002	                              add eax, 2	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013e0	            0x4898	                                    cdqe	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013e2	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013e6	            0x7e27	                           jle 0x400140f	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013e8	    0x488b05000000	            mov rax, qword [0x040013ef] 	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013ef	    0x8b9018030000	           mov edx, dword [rax + 0x318] 	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013f5	    0x488b05000000	            mov rax, qword [0x040013fc] 	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x40013fc	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x4001402	            0x29c2	                            sub edx, eax	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x4001404	            0x89d0	                            mov eax, edx	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x4001406	          0x83c002	                              add eax, 2	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x4001409	            0x4898	                                    cdqe	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x400140b	        0x488945e0	             mov qword [rbp - 0x20], rax	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x400140f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x4001413	    0x69c0d8000000	                     imul eax, eax, 0xd8	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x4001419	            0x89c7	                            mov edi, eax	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x400141b	      0xe800000000	                          call 0x4001420	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x4001420	        0x488945f8	                mov qword [rbp - 8], rax	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x4001424	      0x48837df800	                  cmp qword [rbp - 8], 0	      1261	syntax.c	FUNCTION_13	IF_3	IF_8
0x4001429	     0xf84d6010000	                            je 0x4001605	      1261	syntax.c	FUNCTION_13	IF_3	IF_8
0x400142f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1264	syntax.c	FUNCTION_13	IF_3
0x4001433	    0x482dd8000000	                           sub rax, 0xd8	      1264	syntax.c	FUNCTION_13	IF_3
0x4001439	        0x488945e8	             mov qword [rbp - 0x18], rax	      1264	syntax.c	FUNCTION_13	IF_3
0x400143d	    0x488b05000000	            mov rax, qword [0x04001444] 	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x4001444	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x400144b	          0x4885c0	                           test rax, rax	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x400144e	            0x7459	                            je 0x40014a9	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x4001450	    0x488b05000000	            mov rax, qword [0x04001457] 	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001457	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400145e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001462	            0xeb3e	                           jmp 0x40014a2	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001464	    0x488145e8d800	            add qword [rbp - 0x18], 0xd8	      1271	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400146c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001470	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001474	          0x4889c6	                            mov rsi, rax	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001477	      0xb81b000000	                           mov eax, 0x1b	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400147c	          0x4889d7	                            mov rdi, rdx	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400147f	          0x4889c1	                            mov rcx, rax	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001482	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001485	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001489	    0x488d90d80000	                   lea rdx, [rax + 0xd8]	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001490	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001494	          0x488910	                    mov qword [rax], rdx	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4001497	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1269	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400149b	          0x488b00	                    mov rax, qword [rax]	      1269	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400149e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1269	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40014a2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40014a7	            0x75bb	                           jne 0x4001464	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40014a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014ad	    0x482dd8000000	                           sub rax, 0xd8	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014b3	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014b7	            0x745c	                            je 0x4001515	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1278	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014bd	    0x48c700000000	                      mov qword [rax], 0	      1278	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014c4	    0x488b05000000	            mov rax, qword [0x040014cb] 	      1279	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014cb	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1279	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014cf	    0x488990200300	            mov qword [rax + 0x320], rdx	      1279	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014d6	    0x488b05000000	            mov rax, qword [0x040014dd] 	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014dd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014e1	            0x89d6	                            mov esi, edx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014e3	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014e7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014eb	          0x4829d1	                            sub rcx, rdx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014ee	          0x4889ca	                            mov rdx, rcx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014f1	          0x4889d1	                            mov rcx, rdx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014f4	        0x48c1f903	                              sar rcx, 3	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40014f8	    0x48ba13da4b68	          movabs rdx, 0x84bda12f684bda13	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x4001502	        0x480fafd1	                           imul rdx, rcx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x4001506	            0x29d6	                            sub esi, edx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x4001508	            0x89f2	                            mov edx, esi	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x400150a	          0x83ea01	                              sub edx, 1	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x400150d	    0x899030030000	            mov dword [rax + 0x330], edx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x4001513	            0xeb23	                           jmp 0x4001538	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x4001515	    0x488b05000000	            mov rax, qword [0x0400151c] 	      1284	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x400151c	    0x48c780200300	              mov qword [rax + 0x320], 0	      1284	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x4001527	    0x488b05000000	            mov rax, qword [0x0400152e] 	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x400152e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x4001532	    0x899030030000	            mov dword [rax + 0x330], edx	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x4001538	    0x488b05000000	            mov rax, qword [0x0400153f] 	      1289	syntax.c	FUNCTION_13	IF_3
0x400153f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1289	syntax.c	FUNCTION_13	IF_3
0x4001543	    0x4881c2d80000	                           add rdx, 0xd8	      1289	syntax.c	FUNCTION_13	IF_3
0x400154a	    0x488990280300	            mov qword [rax + 0x328], rdx	      1289	syntax.c	FUNCTION_13	IF_3
0x4001551	            0xeb12	                           jmp 0x4001565	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001553	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001557	    0x488d90d80000	                   lea rdx, [rax + 0xd8]	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400155e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001562	          0x488910	                    mov qword [rax], rdx	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001565	    0x488145e8d800	            add qword [rbp - 0x18], 0xd8	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400156d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001571	          0x4889d0	                            mov rax, rdx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001574	          0x4801c0	                            add rax, rax	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001577	          0x4801d0	                            add rax, rdx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400157a	    0x488d14c50000	                        lea rdx, [rax*8]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001582	          0x4801d0	                            add rax, rdx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001585	        0x48c1e003	                              shl rax, 3	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001589	          0x4889c2	                            mov rdx, rax	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400158c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001590	          0x4801d0	                            add rax, rdx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001593	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001597	            0x72ba	                            jb 0x4001553	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4001599	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1292	syntax.c	FUNCTION_13	IF_3
0x400159d	          0x4889d0	                            mov rax, rdx	      1292	syntax.c	FUNCTION_13	IF_3
0x40015a0	          0x4801c0	                            add rax, rax	      1292	syntax.c	FUNCTION_13	IF_3
0x40015a3	          0x4801d0	                            add rax, rdx	      1292	syntax.c	FUNCTION_13	IF_3
0x40015a6	    0x488d14c50000	                        lea rdx, [rax*8]	      1292	syntax.c	FUNCTION_13	IF_3
0x40015ae	          0x4801d0	                            add rax, rdx	      1292	syntax.c	FUNCTION_13	IF_3
0x40015b1	        0x48c1e003	                              shl rax, 3	      1292	syntax.c	FUNCTION_13	IF_3
0x40015b5	    0x488d9028ffff	                   lea rdx, [rax - 0xd8]	      1292	syntax.c	FUNCTION_13	IF_3
0x40015bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1292	syntax.c	FUNCTION_13	IF_3
0x40015c0	          0x4801d0	                            add rax, rdx	      1292	syntax.c	FUNCTION_13	IF_3
0x40015c3	    0x48c700000000	                      mov qword [rax], 0	      1292	syntax.c	FUNCTION_13	IF_3
0x40015ca	    0x488b05000000	            mov rax, qword [0x040015d1] 	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x40015d1	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x40015d8	          0x4889c7	                            mov rdi, rax	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x40015db	      0xe800000000	                          call 0x40015e0	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x40015e0	    0x488b05000000	            mov rax, qword [0x040015e7] 	      1295	syntax.c	FUNCTION_13	IF_3
0x40015e7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1295	syntax.c	FUNCTION_13	IF_3
0x40015eb	    0x488990100300	            mov qword [rax + 0x310], rdx	      1295	syntax.c	FUNCTION_13	IF_3
0x40015f2	    0x488b05000000	            mov rax, qword [0x040015f9] 	      1296	syntax.c	FUNCTION_13	IF_3
0x40015f9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1296	syntax.c	FUNCTION_13	IF_3
0x40015fd	    0x899018030000	            mov dword [rax + 0x318], edx	      1296	syntax.c	FUNCTION_13	IF_3
0x4001603	            0xeb01	                           jmp 0x4001606	      1296	syntax.c	FUNCTION_13	IF_3
0x4001605	              0x90	                                     nop	      1262	syntax.c	FUNCTION_13	IF_3	IF_8
0x4001606	              0xc9	                                   leave	      1298	syntax.c	FUNCTION_13
0x4001607	              0xc3	                                     ret	      1298	syntax.c	FUNCTION_13
syn_incl_toplevel	functions,0:IF,3:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	70
0x4008cdd	              0x55	                                push rbp	      4794	syntax.c	FUNCTION_77
0x4008cde	          0x4889e5	                            mov rbp, rsp	      4794	syntax.c	FUNCTION_77
0x4008ce1	        0x4883ec30	                           sub rsp, 0x30	      4794	syntax.c	FUNCTION_77
0x4008ce5	          0x897ddc	             mov dword [rbp - 0x24], edi	      4794	syntax.c	FUNCTION_77
0x4008ce8	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4794	syntax.c	FUNCTION_77
0x4008cec	    0x64488b042528	                mov rax, qword fs:[0x28]	      4794	syntax.c	FUNCTION_77
0x4008cf5	        0x488945f8	                mov qword [rbp - 8], rax	      4794	syntax.c	FUNCTION_77
0x4008cf9	            0x31c0	                            xor eax, eax	      4794	syntax.c	FUNCTION_77
0x4008cfb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4795	syntax.c	FUNCTION_77	IF_1
0x4008cff	            0x8b00	                    mov eax, dword [rax]	      4795	syntax.c	FUNCTION_77	IF_1
0x4008d01	          0x83e001	                              and eax, 1	      4795	syntax.c	FUNCTION_77	IF_1
0x4008d04	            0x85c0	                           test eax, eax	      4795	syntax.c	FUNCTION_77	IF_1
0x4008d06	     0xf85cf000000	                           jne 0x4008ddb	      4795	syntax.c	FUNCTION_77	IF_1
0x4008d0c	    0x488b05000000	            mov rax, qword [0x04008d13] 	      4795	syntax.c	FUNCTION_77	IF_1
0x4008d13	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4795	syntax.c	FUNCTION_77	IF_1
0x4008d17	    0x8b8004030000	           mov eax, dword [rax + 0x304] 	      4795	syntax.c	FUNCTION_77	IF_1
0x4008d1d	            0x85c0	                           test eax, eax	      4795	syntax.c	FUNCTION_77	IF_1
0x4008d1f	     0xf84b6000000	                            je 0x4008ddb	      4795	syntax.c	FUNCTION_77	IF_1
0x4008d25	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4797	syntax.c	FUNCTION_77
0x4008d29	            0x8b00	                    mov eax, dword [rax]	      4797	syntax.c	FUNCTION_77
0x4008d2b	          0x83c801	                               or eax, 1	      4797	syntax.c	FUNCTION_77
0x4008d2e	            0x89c2	                            mov edx, eax	      4797	syntax.c	FUNCTION_77
0x4008d30	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4797	syntax.c	FUNCTION_77
0x4008d34	            0x8910	                    mov dword [rax], edx	      4797	syntax.c	FUNCTION_77
0x4008d36	    0x488b05000000	            mov rax, qword [0x04008d3d] 	      4798	syntax.c	FUNCTION_77	IF_2
0x4008d3d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4798	syntax.c	FUNCTION_77	IF_2
0x4008d41	    0x8b8004030000	           mov eax, dword [rax + 0x304] 	      4798	syntax.c	FUNCTION_77	IF_2
0x4008d47	      0x3dd7590000	                         cmp eax, 0x59d7	      4798	syntax.c	FUNCTION_77	IF_2
0x4008d4c	     0xf8e8a000000	                           jle 0x4008ddc	      4798	syntax.c	FUNCTION_77	IF_2
0x4008d52	      0xbf04000000	                              mov edi, 4	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x4008d57	      0xe800000000	                          call 0x4008d5c	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x4008d5c	        0x488945f0	             mov qword [rbp - 0x10], rax	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x4008d60	    0x488b05000000	            mov rax, qword [0x04008d67] 	      4802	syntax.c	FUNCTION_77	IF_2
0x4008d67	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4802	syntax.c	FUNCTION_77	IF_2
0x4008d6b	    0x8b8004030000	           mov eax, dword [rax + 0x304] 	      4802	syntax.c	FUNCTION_77	IF_2
0x4008d71	      0x2dd8590000	                         sub eax, 0x59d8	      4802	syntax.c	FUNCTION_77	IF_2
0x4008d76	          0x8945ec	             mov dword [rbp - 0x14], eax	      4802	syntax.c	FUNCTION_77	IF_2
0x4008d79	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x4008d7d	          0x4885c0	                           test rax, rax	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x4008d80	            0x745a	                            je 0x4008ddc	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x4008d82	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x4008d86	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x4008d89	          0x668910	                      mov word [rax], dx	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x4008d8c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x4008d90	        0x4883c002	                              add rax, 2	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x4008d94	      0x66c7000000	                       mov word [rax], 0	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x4008d99	    0x488b05000000	            mov rax, qword [0x04008da0] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008da0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008da4	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008dab	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008dae	          0x4863d0	                         movsxd rdx, eax	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008db1	          0x4889d0	                            mov rax, rdx	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008db4	          0x4801c0	                            add rax, rax	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008db7	          0x4801d0	                            add rax, rdx	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008dba	        0x48c1e003	                              shl rax, 3	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008dbe	          0x4801c8	                            add rax, rcx	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008dc1	        0x488d4810	                   lea rcx, [rax + 0x10]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008dc5	        0x488d45f0	                   lea rax, [rbp - 0x10]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008dc9	      0xba02000000	                              mov edx, 2	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008dce	          0x4889c6	                            mov rsi, rax	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008dd1	          0x4889cf	                            mov rdi, rcx	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008dd4	      0xe85f180000	               call sym.syn_combine_list	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008dd9	            0xeb01	                           jmp 0x4008ddc	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4008ddb	              0x90	                                     nop	      4796	syntax.c	FUNCTION_77	IF_1
0x4008ddc	        0x488b45f8	                mov rax, qword [rbp - 8]	      4812	syntax.c	FUNCTION_77
0x4008de0	    0x644833042528	                xor rax, qword fs:[0x28]	      4812	syntax.c	FUNCTION_77
0x4008de9	            0x7405	                            je 0x4008df0	      4812	syntax.c	FUNCTION_77
0x4008deb	      0xe800000000	                          call 0x4008df0	      4812	syntax.c	FUNCTION_77
0x4008df0	              0xc9	                                   leave	      4812	syntax.c	FUNCTION_77
0x4008df1	              0xc3	                                     ret	      4812	syntax.c	FUNCTION_77
hl_set_bg_color_name	functions,0:IF,2:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	41
0x4010d15	              0x55	                                push rbp	      8558	syntax.c	FUNCTION_125
0x4010d16	          0x4889e5	                            mov rbp, rsp	      8558	syntax.c	FUNCTION_125
0x4010d19	        0x4883ec20	                           sub rsp, 0x20	      8558	syntax.c	FUNCTION_125
0x4010d1d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8558	syntax.c	FUNCTION_125
0x4010d21	      0x48837de800	               cmp qword [rbp - 0x18], 0	      8561	syntax.c	FUNCTION_125	IF_1
0x4010d26	            0x747c	                            je 0x4010da4	      8561	syntax.c	FUNCTION_125	IF_1
0x4010d28	      0xbf00000000	                              mov edi, 0	      8563	syntax.c	FUNCTION_125	IF_1	CALL_1
0x4010d2d	      0xe800000000	                          call 0x4010d32	      8563	syntax.c	FUNCTION_125	IF_1	CALL_1
0x4010d32	          0x8945fc	                mov dword [rbp - 4], eax	      8563	syntax.c	FUNCTION_125	IF_1	CALL_1
0x4010d35	        0x837dfc00	                  cmp dword [rbp - 4], 0	      8564	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d39	            0x7e69	                           jle 0x4010da4	      8564	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d3b	    0x488b0d000000	            mov rcx, qword [0x04010d42] 	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d42	          0x8b45fc	                mov eax, dword [rbp - 4]	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d45	          0x4863d0	                         movsxd rdx, eax	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d48	          0x4889d0	                            mov rax, rdx	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d4b	        0x48c1e003	                              shl rax, 3	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d4f	          0x4801d0	                            add rax, rdx	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d52	          0x4801c0	                            add rax, rax	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d55	          0x4801d0	                            add rax, rdx	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d58	        0x48c1e003	                              shl rax, 3	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d5c	    0x482d98000000	                           sub rax, 0x98	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d62	          0x4801c8	                            add rax, rcx	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d65	        0x488b4078	            mov rax, qword [rax + 0x78] 	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d69	          0x4889c7	                            mov rdi, rax	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d6c	      0xe800000000	                          call 0x4010d71	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x4010d71	    0x488b0d000000	            mov rcx, qword [0x04010d78] 	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d78	          0x8b45fc	                mov eax, dword [rbp - 4]	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d7b	          0x4863d0	                         movsxd rdx, eax	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d7e	          0x4889d0	                            mov rax, rdx	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d81	        0x48c1e003	                              shl rax, 3	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d85	          0x4801d0	                            add rax, rdx	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d88	          0x4801c0	                            add rax, rax	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d8b	          0x4801d0	                            add rax, rdx	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d8e	        0x48c1e003	                              shl rax, 3	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d92	    0x482d98000000	                           sub rax, 0x98	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d98	        0x488d1401	                    lea rdx, [rcx + rax]	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010d9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010da0	        0x48894278	             mov qword [rdx + 0x78], rax	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x4010da4	              0x90	                                     nop	      8570	syntax.c	FUNCTION_125
0x4010da5	              0xc9	                                   leave	      8570	syntax.c	FUNCTION_125
0x4010da6	              0xc3	                                     ret	      8570	syntax.c	FUNCTION_125
syn_cmd_region	functions,0:IF,29:SWITCH,0:FOR,4:CALL,43:ELSE,9:WHILE,2:DO,0	621
0x4009adb	              0x55	                                push rbp	      5131	syntax.c	FUNCTION_81
0x4009adc	          0x4889e5	                            mov rbp, rsp	      5131	syntax.c	FUNCTION_81
0x4009adf	    0x4881ecd00000	                           sub rsp, 0xd0	      5131	syntax.c	FUNCTION_81
0x4009ae6	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      5131	syntax.c	FUNCTION_81
0x4009aed	    0x89b534ffffff	             mov dword [rbp - 0xcc], esi	      5131	syntax.c	FUNCTION_81
0x4009af3	    0x64488b042528	                mov rax, qword fs:[0x28]	      5131	syntax.c	FUNCTION_81
0x4009afc	        0x488945f8	                mov qword [rbp - 8], rax	      5131	syntax.c	FUNCTION_81
0x4009b00	            0x31c0	                            xor eax, eax	      5131	syntax.c	FUNCTION_81
0x4009b02	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5132	syntax.c	FUNCTION_81
0x4009b09	          0x488b00	                    mov rax, qword [rax]	      5132	syntax.c	FUNCTION_81
0x4009b0c	        0x48894598	             mov qword [rbp - 0x68], rax	      5132	syntax.c	FUNCTION_81
0x4009b10	    0x48c745880000	               mov qword [rbp - 0x78], 0	      5136	syntax.c	FUNCTION_81
0x4009b18	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      5152	syntax.c	FUNCTION_81
0x4009b22	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      5154	syntax.c	FUNCTION_81
0x4009b2c	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      5155	syntax.c	FUNCTION_81
0x4009b36	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      5156	syntax.c	FUNCTION_81
0x4009b40	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      5157	syntax.c	FUNCTION_81
0x4009b4a	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	      5160	syntax.c	FUNCTION_81
0x4009b54	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      5163	syntax.c	FUNCTION_81	CALL_1
0x4009b5b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5163	syntax.c	FUNCTION_81	CALL_1
0x4009b5f	          0x4889d6	                            mov rsi, rdx	      5163	syntax.c	FUNCTION_81	CALL_1
0x4009b62	          0x4889c7	                            mov rdi, rax	      5163	syntax.c	FUNCTION_81	CALL_1
0x4009b65	      0xe8c0eaffff	                 call sym.get_group_name	      5163	syntax.c	FUNCTION_81	CALL_1
0x4009b6a	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5163	syntax.c	FUNCTION_81	CALL_1
0x4009b71	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      5165	syntax.c	FUNCTION_81
0x4009b79	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      5166	syntax.c	FUNCTION_81
0x4009b81	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      5167	syntax.c	FUNCTION_81
0x4009b89	      0xe83f140000	              call sym.init_syn_patterns	      5169	syntax.c	FUNCTION_81	CALL_2
0x4009b8e	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      5171	syntax.c	FUNCTION_81
0x4009b95	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      5172	syntax.c	FUNCTION_81
0x4009b9c	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      5173	syntax.c	FUNCTION_81
0x4009ba4	        0xc645c001	                mov byte [rbp - 0x40], 1	      5174	syntax.c	FUNCTION_81
0x4009ba8	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      5175	syntax.c	FUNCTION_81
0x4009bb0	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      5176	syntax.c	FUNCTION_81
0x4009bb8	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      5177	syntax.c	FUNCTION_81
0x4009bc0	      0xe9e7030000	                           jmp 0x4009fac	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4009bc5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4009bcc	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4009bcf	    0x488d954cffff	                   lea rdx, [rbp - 0xb4]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4009bd6	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4009bda	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4009be1	          0x4889c7	                            mov rdi, rax	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4009be4	      0xe8a7eaffff	                call sym.get_syn_options	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4009be9	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x4009bf0	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4009bf8	     0xf84d7030000	                            je 0x4009fd5	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4009bfe	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4009c05	           0xfb600	                   movzx eax, byte [rax]	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4009c08	           0xfb6c0	                           movzx eax, al	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4009c0b	            0x89c7	                            mov edi, eax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4009c0d	      0xe800000000	                          call 0x4009c12	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4009c12	            0x85c0	                           test eax, eax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4009c14	     0xf85bb030000	                           jne 0x4009fd5	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x4009c1a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5190	syntax.c	FUNCTION_81	WHILE_1
0x4009c21	        0x48894580	             mov qword [rbp - 0x80], rax	      5190	syntax.c	FUNCTION_81	WHILE_1
0x4009c25	            0xeb05	                           jmp 0x4009c2c	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c27	      0x4883458001	               add qword [rbp - 0x80], 1	      5192	syntax.c	FUNCTION_81	WHILE_1	WHILE_2
0x4009c2c	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c30	           0xfb600	                   movzx eax, byte [rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c33	            0x84c0	                             test al, al	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c35	            0x7421	                            je 0x4009c58	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c37	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c3b	           0xfb600	                   movzx eax, byte [rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c3e	            0x3c20	                            cmp al, 0x20	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c40	            0x7416	                            je 0x4009c58	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c42	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c46	           0xfb600	                   movzx eax, byte [rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c49	            0x3c09	                               cmp al, 9	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c4b	            0x740b	                            je 0x4009c58	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c4d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c51	           0xfb600	                   movzx eax, byte [rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c54	            0x3c3d	                            cmp al, 0x3d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c56	            0x75cf	                           jne 0x4009c27	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4009c58	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x4009c5c	          0x4889c7	                            mov rdi, rax	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x4009c5f	      0xe800000000	                          call 0x4009c64	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x4009c64	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4009c68	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4009c6f	          0x4829c2	                            sub rdx, rax	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4009c72	          0x4889d0	                            mov rax, rdx	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4009c75	            0x89c2	                            mov edx, eax	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4009c77	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4009c7e	            0x89d6	                            mov esi, edx	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4009c80	          0x4889c7	                            mov rdi, rax	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4009c83	      0xe800000000	                          call 0x4009c88	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4009c88	        0x48894588	             mov qword [rbp - 0x78], rax	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4009c8c	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5195	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x4009c91	            0x7510	                           jne 0x4009ca3	      5195	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x4009c93	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5197	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x4009c9e	      0xe932030000	                           jmp 0x4009fd5	      5198	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x4009ca3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4009ca7	      0xbe00000000	                              mov esi, 0	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4009cac	          0x4889c7	                            mov rdi, rax	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4009caf	      0xe800000000	                          call 0x4009cb4	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4009cb4	            0x85c0	                           test eax, eax	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4009cb6	            0x750c	                           jne 0x4009cc4	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4009cb8	    0xc78550ffffff	               mov dword [rbp - 0xb0], 3	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x4009cc2	            0xeb7d	                           jmp 0x4009d41	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x4009cc4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4009cc8	      0xbe00000000	                              mov esi, 0	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4009ccd	          0x4889c7	                            mov rdi, rax	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4009cd0	      0xe800000000	                          call 0x4009cd5	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4009cd5	            0x85c0	                           test eax, eax	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4009cd7	            0x750c	                           jne 0x4009ce5	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4009cd9	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      5203	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4
0x4009ce3	            0xeb5c	                           jmp 0x4009d41	      5203	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4
0x4009ce5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4009ce9	      0xbe00000000	                              mov esi, 0	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4009cee	          0x4889c7	                            mov rdi, rax	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4009cf1	      0xe800000000	                          call 0x4009cf6	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4009cf6	            0x85c0	                           test eax, eax	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4009cf8	            0x750c	                           jne 0x4009d06	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4009cfa	    0xc78550ffffff	               mov dword [rbp - 0xb0], 2	      5205	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5
0x4009d04	            0xeb3b	                           jmp 0x4009d41	      5205	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5
0x4009d06	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4009d0a	      0xbe00000000	                              mov esi, 0	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4009d0f	          0x4889c7	                            mov rdi, rax	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4009d12	      0xe800000000	                          call 0x4009d17	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4009d17	            0x85c0	                           test eax, eax	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4009d19	     0xf85b5020000	                           jne 0x4009fd4	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4009d1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x4009d23	          0x4885c0	                           test rax, rax	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x4009d26	            0x740f	                            je 0x4009d37	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x4009d28	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	      5210	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x4009d32	      0xe99e020000	                           jmp 0x4009fd5	      5211	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x4009d37	    0xc78550ffffff	               mov dword [rbp - 0xb0], 1	      5213	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6
0x4009d41	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x4009d45	          0x4889c7	                            mov rdi, rax	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x4009d48	      0xe800000000	                          call 0x4009d4d	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x4009d4d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x4009d54	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x4009d5b	           0xfb600	                   movzx eax, byte [rax]	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x4009d5e	            0x3c3d	                            cmp al, 0x3d	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x4009d60	            0x742c	                            je 0x4009d8e	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x4009d62	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5220	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x4009d6d	      0xbf00000000	                              mov edi, 0	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4009d72	      0xe800000000	                          call 0x4009d77	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4009d77	          0x4889c2	                            mov rdx, rax	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4009d7a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4009d7e	          0x4889c6	                            mov rsi, rax	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4009d81	          0x4889d7	                            mov rdi, rdx	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4009d84	      0xe800000000	                          call 0x4009d89	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4009d89	      0xe947020000	                           jmp 0x4009fd5	      5222	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x4009d8e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x4009d95	        0x4883c001	                              add rax, 1	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x4009d99	          0x4889c7	                            mov rdi, rax	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x4009d9c	      0xe800000000	                          call 0x4009da1	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x4009da1	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x4009da8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x4009daf	           0xfb600	                   movzx eax, byte [rax]	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x4009db2	            0x84c0	                             test al, al	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x4009db4	            0x750f	                           jne 0x4009dc5	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x4009db6	    0xc7855cffffff	               mov dword [rbp - 0xa4], 1	      5227	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x4009dc0	      0xe910020000	                           jmp 0x4009fd5	      5228	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x4009dc5	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 3	      5231	syntax.c	FUNCTION_81	WHILE_1	IF_10
0x4009dcc	     0xf85bb000000	                           jne 0x4009e8d	      5231	syntax.c	FUNCTION_81	WHILE_1	IF_10
0x4009dd2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x4009dd9	          0x4889c7	                            mov rdi, rax	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x4009ddc	      0xe800000000	                          call 0x4009de1	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x4009de1	        0x488945a0	             mov qword [rbp - 0x60], rax	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x4009de5	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009de9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009df0	          0x4829c2	                            sub rdx, rax	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009df3	          0x4889d0	                            mov rax, rdx	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009df6	        0x4883f804	                              cmp rax, 4	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009dfa	            0x751d	                           jne 0x4009e19	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009dfc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009e03	      0xba04000000	                              mov edx, 4	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009e08	      0xbe00000000	                              mov esi, 0	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009e0d	          0x4889c7	                            mov rdi, rax	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009e10	      0xe800000000	                          call 0x4009e15	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009e15	            0x85c0	                           test eax, eax	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009e17	            0x740e	                            je 0x4009e27	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009e19	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009e20	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009e23	            0x85c0	                           test eax, eax	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009e25	            0x740c	                            je 0x4009e33	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4009e27	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x4009e31	            0xeb42	                           jmp 0x4009e75	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x4009e33	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4009e37	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4009e3e	          0x4829c2	                            sub rdx, rax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4009e41	          0x4889d0	                            mov rax, rdx	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4009e44	            0x89c2	                            mov edx, eax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4009e46	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4009e4d	            0x89d6	                            mov esi, edx	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4009e4f	          0x4889c7	                            mov rdi, rax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4009e52	      0xe800000000	                          call 0x4009e57	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4009e57	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4009e5d	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      5239	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x4009e64	            0x750f	                           jne 0x4009e75	      5239	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x4009e66	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	      5241	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x4009e70	      0xe960010000	                           jmp 0x4009fd5	      5242	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x4009e75	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x4009e79	          0x4889c7	                            mov rdi, rax	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x4009e7c	      0xe800000000	                          call 0x4009e81	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x4009e81	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x4009e88	      0xe91f010000	                           jmp 0x4009fac	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x4009e8d	      0xbf18000000	                           mov edi, 0x18	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x4009e92	      0xe800000000	                          call 0x4009e97	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x4009e97	        0x48894590	             mov qword [rbp - 0x70], rax	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x4009e9b	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      5255	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x4009ea0	            0x7510	                           jne 0x4009eb2	      5255	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x4009ea2	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5257	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x4009ead	      0xe923010000	                           jmp 0x4009fd5	      5258	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x4009eb2	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009eb8	            0x4898	                                    cdqe	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009eba	      0x488b54c5e0	     mov rdx, qword [rbp + rax*8 - 0x20]	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009ebf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009ec3	        0x48895010	             mov qword [rax + 0x10], rdx	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009ec7	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      5261	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009ecd	            0x4898	                                    cdqe	      5261	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009ecf	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5261	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009ed3	      0x488954c5e0	     mov qword [rbp + rax*8 - 0x20], rdx	      5261	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009ed8	      0xbfa0000000	                           mov edi, 0xa0	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x4009edd	      0xe800000000	                          call 0x4009ee2	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x4009ee2	          0x4889c2	                            mov rdx, rax	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x4009ee5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x4009ee9	          0x488910	                    mov qword [rax], rdx	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x4009eec	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x4009ef0	          0x488b00	                    mov rax, qword [rax]	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x4009ef3	          0x4885c0	                           test rax, rax	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x4009ef6	            0x7510	                           jne 0x4009f08	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x4009ef8	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5265	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x4009f03	      0xe9cd000000	                           jmp 0x4009fd5	      5266	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x4009f08	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	      5273	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x4009f0f	            0x750c	                           jne 0x4009f1d	      5273	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x4009f11	    0xc70500000000	               mov dword [0x04009f1b], 1	      5274	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x4009f1b	            0xeb1c	                           jmp 0x4009f39	      5274	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x4009f1d	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 1	      5275	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x4009f24	            0x7409	                            je 0x4009f2f	      5275	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x4009f26	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 2	      5275	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x4009f2d	            0x750a	                           jne 0x4009f39	      5275	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x4009f2f	    0xc70500000000	               mov dword [0x04009f39], 2	      5276	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x4009f39	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4009f3d	          0x488b10	                    mov rdx, qword [rax]	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4009f40	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4009f47	          0x4889d6	                            mov rsi, rdx	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4009f4a	          0x4889c7	                            mov rdi, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4009f4d	      0xe8ac100000	                call sym.get_syn_pattern	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4009f52	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4009f59	    0xc70500000000	               mov dword [0x04009f63], 0	      5278	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009f63	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 2	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4009f6a	            0x752c	                           jne 0x4009f98	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4009f6c	      0xe800000000	                          call 0x4009f71	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4009f71	            0x85c0	                           test eax, eax	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4009f73	            0x7423	                            je 0x4009f98	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4009f75	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4009f78	      0x2500080000	                          and eax, 0x800	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4009f7d	            0x85c0	                           test eax, eax	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4009f7f	            0x7517	                           jne 0x4009f98	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4009f81	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4009f85	          0x488b00	                    mov rax, qword [rax]	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4009f88	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4009f8c	          0x488b12	                    mov rdx, qword [rdx]	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4009f8f	          0x8b5224	            mov edx, dword [rdx + 0x24] 	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4009f92	          0x83ca08	                               or edx, 8	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4009f95	          0x895024	             mov dword [rax + 0x24], edx	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4009f98	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009f9c	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009fa2	          0x895008	                mov dword [rax + 8], edx	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009fa5	    0x838554ffffff	               add dword [rbp - 0xac], 1	      5283	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4009fac	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4009fb4	            0x741f	                            je 0x4009fd5	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4009fb6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4009fbd	           0xfb600	                   movzx eax, byte [rax]	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4009fc0	           0xfb6c0	                           movzx eax, al	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4009fc3	            0x89c7	                            mov edi, eax	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4009fc5	      0xe800000000	                          call 0x4009fca	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4009fca	            0x85c0	                           test eax, eax	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4009fcc	     0xf84f3fbffff	                            je 0x4009bc5	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4009fd2	            0xeb01	                           jmp 0x4009fd5	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4009fd4	              0x90	                                     nop	      5216	syntax.c	FUNCTION_81	WHILE_1	ELSE_4
0x4009fd5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5286	syntax.c	FUNCTION_81	CALL_25
0x4009fd9	          0x4889c7	                            mov rdi, rax	      5286	syntax.c	FUNCTION_81	CALL_25
0x4009fdc	      0xe800000000	                          call 0x4009fe1	      5286	syntax.c	FUNCTION_81	CALL_25
0x4009fe1	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      5287	syntax.c	FUNCTION_81	IF_18
0x4009fe8	            0x7509	                           jne 0x4009ff3	      5287	syntax.c	FUNCTION_81	IF_18
0x4009fea	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      5287	syntax.c	FUNCTION_81	IF_18
0x4009ff1	            0x740b	                            je 0x4009ffe	      5287	syntax.c	FUNCTION_81	IF_18
0x4009ff3	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5288	syntax.c	FUNCTION_81	IF_18
0x4009ffe	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5293	syntax.c	FUNCTION_81	IF_19
0x400a006	            0x7427	                            je 0x400a02f	      5293	syntax.c	FUNCTION_81	IF_19
0x400a008	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5293	syntax.c	FUNCTION_81	IF_19
0x400a00c	          0x4885c0	                           test rax, rax	      5293	syntax.c	FUNCTION_81	IF_19
0x400a00f	            0x7409	                            je 0x400a01a	      5293	syntax.c	FUNCTION_81	IF_19
0x400a011	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5294	syntax.c	FUNCTION_81	IF_19
0x400a015	          0x4885c0	                           test rax, rax	      5293	syntax.c	FUNCTION_81	IF_19
0x400a018	            0x7515	                           jne 0x400a02f	      5293	syntax.c	FUNCTION_81	IF_19
0x400a01a	    0xc7855cffffff	               mov dword [rbp - 0xa4], 1	      5296	syntax.c	FUNCTION_81	IF_19
0x400a024	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5297	syntax.c	FUNCTION_81	IF_19
0x400a02f	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5300	syntax.c	FUNCTION_81	IF_20
0x400a037	     0xf8472040000	                            je 0x400a4af	      5300	syntax.c	FUNCTION_81	IF_20
0x400a03d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x400a044	          0x4889c7	                            mov rdi, rax	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x400a047	      0xe800000000	                          call 0x400a04c	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x400a04c	          0x4889c2	                            mov rdx, rax	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x400a04f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x400a056	        0x48895008	                mov qword [rax + 8], rdx	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x400a05a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400a061	           0xfb600	                   movzx eax, byte [rax]	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400a064	           0xfb6c0	                           movzx eax, al	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400a067	            0x89c7	                            mov edi, eax	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400a069	      0xe800000000	                          call 0x400a06e	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400a06e	            0x85c0	                           test eax, eax	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400a070	            0x740e	                            je 0x400a080	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400a072	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400a079	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400a07c	            0x85c0	                           test eax, eax	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400a07e	            0x7410	                            je 0x400a090	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400a080	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x400a08b	      0xe91f040000	                           jmp 0x400a4af	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x400a090	    0x488b05000000	            mov rax, qword [0x0400a097] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400a097	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400a09b	    0x488d90600200	                  lea rdx, [rax + 0x260]	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400a0a2	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400a0a8	            0x89c6	                            mov esi, eax	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400a0aa	          0x4889d7	                            mov rdi, rdx	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400a0ad	      0xe800000000	                          call 0x400a0b2	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400a0b2	            0x85c0	                           test eax, eax	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400a0b4	     0xf84f5030000	                            je 0x400a4af	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400a0ba	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5311	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400a0c1	          0x4889c2	                            mov rdx, rax	      5311	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400a0c4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5311	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400a0c8	          0x4829c2	                            sub rdx, rax	      5311	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400a0cb	          0x4889d0	                            mov rax, rdx	      5311	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400a0ce	            0x89c2	                            mov edx, eax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400a0d0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400a0d4	            0x89d6	                            mov esi, edx	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400a0d6	          0x4889c7	                            mov rdi, rax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400a0d9	      0xe800000000	                          call 0x400a0de	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400a0de	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400a0e4	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400a0eb	     0xf84be030000	                            je 0x400a4af	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400a0f1	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x400a0f5	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x400a0fb	          0x4889d6	                            mov rsi, rdx	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x400a0fe	            0x89c7	                            mov edi, eax	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x400a100	      0xe8d8ebffff	              call sym.syn_incl_toplevel	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x400a105	    0x488b05000000	            mov rax, qword [0x0400a10c] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400a10c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400a110	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400a116	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400a11c	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x400a126	      0xe950030000	                           jmp 0x400a47b	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x400a12b	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a131	            0x4898	                                    cdqe	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a133	      0x488b44c5e0	     mov rax, qword [rbp + rax*8 - 0x20]	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a138	        0x48894590	             mov qword [rbp - 0x70], rax	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a13c	      0xe928030000	                           jmp 0x400a469	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a141	    0x488b05000000	            mov rax, qword [0x0400a148] 	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a148	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a14c	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a153	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a159	          0x4863d0	                         movsxd rdx, eax	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a15c	          0x4889d0	                            mov rax, rdx	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a15f	        0x48c1e002	                              shl rax, 2	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a163	          0x4801d0	                            add rax, rdx	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a166	        0x48c1e005	                              shl rax, 5	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a16a	        0x488d1401	                    lea rdx, [rcx + rax]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a16e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a172	          0x488b00	                    mov rax, qword [rax]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a175	          0x4889c6	                            mov rsi, rax	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a178	      0xb814000000	                           mov eax, 0x14	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a17d	          0x4889d7	                            mov rdi, rdx	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a180	          0x4889c1	                            mov rcx, rax	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a183	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a186	    0x488b05000000	            mov rax, qword [0x0400a18d] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a18d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a191	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a198	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a19e	          0x4863d0	                         movsxd rdx, eax	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1a1	          0x4889d0	                            mov rax, rdx	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1a4	        0x48c1e002	                              shl rax, 2	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1a8	          0x4801d0	                            add rax, rdx	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1ab	        0x48c1e005	                              shl rax, 5	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1af	          0x4801c8	                            add rax, rcx	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1b2	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1b8	          0x885001	                  mov byte [rax + 1], dl	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1bb	    0x488b05000000	            mov rax, qword [0x0400a1c2] 	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1c2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1c6	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1cd	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1d3	          0x4863d0	                         movsxd rdx, eax	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1d6	          0x4889d0	                            mov rax, rdx	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1d9	        0x48c1e002	                              shl rax, 2	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1dd	          0x4801d0	                            add rax, rdx	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1e0	        0x48c1e005	                              shl rax, 5	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1e4	        0x488d1401	                    lea rdx, [rcx + rax]	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1e8	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1ef	            0x7417	                            je 0x400a208	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1f1	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 1	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1f8	            0x7507	                           jne 0x400a201	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1fa	      0xb804000000	                              mov eax, 4	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a1ff	            0xeb0c	                           jmp 0x400a20d	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a201	      0xb803000000	                              mov eax, 3	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a206	            0xeb05	                           jmp 0x400a20d	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a208	      0xb802000000	                              mov eax, 2	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a20d	            0x8802	                      mov byte [rdx], al	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a20f	    0x488b05000000	            mov rax, qword [0x0400a216] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a216	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a21a	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a221	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a227	          0x4863d0	                         movsxd rdx, eax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a22a	          0x4889d0	                            mov rax, rdx	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a22d	        0x48c1e002	                              shl rax, 2	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a231	          0x4801d0	                            add rax, rdx	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a234	        0x48c1e005	                              shl rax, 5	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a238	          0x4801c1	                            add rcx, rax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a23b	    0x488b05000000	            mov rax, qword [0x0400a242] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a242	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a246	    0x488bb0700200	           mov rsi, qword [rax + 0x270] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a24d	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a253	          0x4863d0	                         movsxd rdx, eax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a256	          0x4889d0	                            mov rax, rdx	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a259	        0x48c1e002	                              shl rax, 2	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a25d	          0x4801d0	                            add rax, rdx	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a260	        0x48c1e005	                              shl rax, 5	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a264	          0x4801f0	                            add rax, rsi	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a267	          0x8b5024	            mov edx, dword [rax + 0x24] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a26a	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a26d	             0x9d0	                             or eax, edx	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a26f	          0x894124	             mov dword [rcx + 0x24], eax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a272	    0x488b05000000	            mov rax, qword [0x0400a279] 	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a279	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a27d	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a284	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a28a	          0x4863d0	                         movsxd rdx, eax	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a28d	          0x4889d0	                            mov rax, rdx	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a290	        0x48c1e002	                              shl rax, 2	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a294	          0x4801d0	                            add rax, rdx	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a297	        0x48c1e005	                              shl rax, 5	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a29b	          0x4801c8	                            add rax, rcx	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a29e	    0x8b956cffffff	             mov edx, dword [rbp - 0x94]	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2a4	        0x66895054	               mov word [rax + 0x54], dx	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2a8	    0x488b05000000	            mov rax, qword [0x0400a2af] 	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2af	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2b3	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2ba	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2c0	          0x4863d0	                         movsxd rdx, eax	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2c3	          0x4889d0	                            mov rax, rdx	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2c6	        0x48c1e002	                              shl rax, 2	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2ca	          0x4801d0	                            add rax, rdx	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2cd	        0x48c1e005	                              shl rax, 5	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2d1	        0x488d1401	                    lea rdx, [rcx + rax]	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2d5	    0x8b0500000000	            mov eax, dword [0x0400a2db] 	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2db	          0x894250	             mov dword [rdx + 0x50], eax	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2de	    0x488b05000000	            mov rax, qword [0x0400a2e5] 	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2e5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2e9	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2f0	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2f6	          0x4863d0	                         movsxd rdx, eax	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2f9	          0x4889d0	                            mov rax, rdx	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a2fc	        0x48c1e002	                              shl rax, 2	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a300	          0x4801d0	                            add rax, rdx	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a303	        0x48c1e005	                              shl rax, 5	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a307	        0x488d1401	                    lea rdx, [rcx + rax]	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a30b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5332	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a30f	          0x8b4008	                mov eax, dword [rax + 8]	      5332	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a312	        0x66894202	                  mov word [rdx + 2], ax	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a316	    0x488b05000000	            mov rax, qword [0x0400a31d] 	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a31d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a321	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a328	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a32e	          0x4863d0	                         movsxd rdx, eax	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a331	          0x4889d0	                            mov rax, rdx	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a334	        0x48c1e002	                              shl rax, 2	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a338	          0x4801d0	                            add rax, rdx	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a33b	        0x48c1e005	                              shl rax, 5	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a33f	        0x488d1401	                    lea rdx, [rcx + rax]	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a343	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a349	          0x894228	             mov dword [rdx + 0x28], eax	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a34c	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	      5336	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a353	     0xf85bd000000	                           jne 0x400a416	      5336	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a359	    0x488b05000000	            mov rax, qword [0x0400a360] 	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a360	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a364	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a36b	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a371	          0x4863d0	                         movsxd rdx, eax	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a374	          0x4889d0	                            mov rax, rdx	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a377	        0x48c1e002	                              shl rax, 2	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a37b	          0x4801d0	                            add rax, rdx	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a37e	        0x48c1e005	                              shl rax, 5	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a382	        0x488d1401	                    lea rdx, [rcx + rax]	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a386	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5339	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a38a	        0x48894240	             mov qword [rdx + 0x40], rax	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a38e	    0x488b05000000	            mov rax, qword [0x0400a395] 	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a395	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a399	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3a0	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3a6	          0x4863d0	                         movsxd rdx, eax	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3a9	          0x4889d0	                            mov rax, rdx	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3ac	        0x48c1e002	                              shl rax, 2	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3b0	          0x4801d0	                            add rax, rdx	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3b3	        0x48c1e005	                              shl rax, 5	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3b7	        0x488d1401	                    lea rdx, [rcx + rax]	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3bb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5341	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3bf	        0x48894258	             mov qword [rdx + 0x58], rax	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x400a3c7	          0x4885c0	                           test rax, rax	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x400a3ca	            0x7415	                            je 0x400a3e1	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x400a3cc	    0x488b05000000	            mov rax, qword [0x0400a3d3] 	      5343	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x400a3d3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5343	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x400a3d7	    0xc78098020000	              mov dword [rax + 0x298], 1	      5343	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x400a3e1	    0x488b05000000	            mov rax, qword [0x0400a3e8] 	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3e8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3ec	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3f3	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3f9	          0x4863d0	                         movsxd rdx, eax	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3fc	          0x4889d0	                            mov rax, rdx	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a3ff	        0x48c1e002	                              shl rax, 2	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a403	          0x4801d0	                            add rax, rdx	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a406	        0x48c1e005	                              shl rax, 5	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a40a	        0x488d1401	                    lea rdx, [rcx + rax]	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a40e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5345	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a412	        0x48894248	             mov qword [rdx + 0x48], rax	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400a416	    0x488b05000000	            mov rax, qword [0x0400a41d] 	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a41d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a421	    0x8b9060020000	           mov edx, dword [rax + 0x260] 	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a427	          0x83c201	                              add edx, 1	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a42a	    0x899060020000	            mov dword [rax + 0x260], edx	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a430	    0x838568ffffff	               add dword [rbp - 0x98], 1	      5348	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a437	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400a43a	      0x2500200000	                         and eax, 0x2000	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400a43f	            0x85c0	                           test eax, eax	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400a441	            0x741a	                            je 0x400a45d	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400a443	    0x488b05000000	            mov rax, qword [0x0400a44a] 	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400a44a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400a44e	    0x8b900c030000	           mov edx, dword [rax + 0x30c] 	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400a454	          0x83c201	                              add edx, 1	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400a457	    0x89900c030000	            mov dword [rax + 0x30c], edx	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400a45d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a461	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a465	        0x48894590	             mov qword [rbp - 0x70], rax	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a469	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a46e	     0xf85cdfcffff	                           jne 0x400a141	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400a474	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x400a47b	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 2	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x400a482	     0xf8ea3fcffff	                           jle 0x400a12b	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x400a488	      0xbf23000000	                           mov edi, 0x23	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_31
0x400a48d	      0xe800000000	                          call 0x400a492	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_31
0x400a492	    0x488b05000000	            mov rax, qword [0x0400a499] 	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x400a499	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x400a49d	          0x4889c7	                            mov rdi, rax	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x400a4a0	      0xe800000000	                          call 0x400a4a5	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x400a4a5	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      5358	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400a4af	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      5365	syntax.c	FUNCTION_81	FOR_3
0x400a4b9	            0xeb7f	                           jmp 0x400a53a	      5365	syntax.c	FUNCTION_81	FOR_3
0x400a4bb	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a4c1	            0x4898	                                    cdqe	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a4c3	      0x488b44c5e0	     mov rax, qword [rbp + rax*8 - 0x20]	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a4c8	        0x48894590	             mov qword [rbp - 0x70], rax	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a4cc	            0xeb5e	                           jmp 0x400a52c	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a4ce	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      5368	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26
0x400a4d5	            0x7526	                           jne 0x400a4fd	      5368	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26
0x400a4d7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_33
0x400a4db	          0x488b00	                    mov rax, qword [rax]	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_33
0x400a4de	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_33
0x400a4e2	          0x4889c7	                            mov rdi, rax	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_33
0x400a4e5	      0xe800000000	                          call 0x400a4ea	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_33
0x400a4ea	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x400a4ee	          0x488b00	                    mov rax, qword [rax]	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x400a4f1	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x400a4f5	          0x4889c7	                            mov rdi, rax	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x400a4f8	      0xe800000000	                          call 0x400a4fd	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x400a4fd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_35
0x400a501	          0x488b00	                    mov rax, qword [rax]	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_35
0x400a504	          0x4889c7	                            mov rdi, rax	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_35
0x400a507	      0xe800000000	                          call 0x400a50c	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_35
0x400a50c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5374	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a510	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5374	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a514	        0x488945a8	             mov qword [rbp - 0x58], rax	      5374	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a518	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_36
0x400a51c	          0x4889c7	                            mov rdi, rax	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_36
0x400a51f	      0xe800000000	                          call 0x400a524	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_36
0x400a524	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a528	        0x48894590	             mov qword [rbp - 0x70], rax	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a52c	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a531	            0x759b	                           jne 0x400a4ce	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400a533	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      5365	syntax.c	FUNCTION_81	FOR_3
0x400a53a	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 2	      5365	syntax.c	FUNCTION_81	FOR_3
0x400a541	     0xf8e74ffffff	                           jle 0x400a4bb	      5365	syntax.c	FUNCTION_81	FOR_3
0x400a547	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      5378	syntax.c	FUNCTION_81	IF_27
0x400a54e	            0x757a	                           jne 0x400a5ca	      5378	syntax.c	FUNCTION_81	IF_27
0x400a550	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5380	syntax.c	FUNCTION_81	IF_27	CALL_37
0x400a554	          0x4889c7	                            mov rdi, rax	      5380	syntax.c	FUNCTION_81	IF_27	CALL_37
0x400a557	      0xe800000000	                          call 0x400a55c	      5380	syntax.c	FUNCTION_81	IF_27	CALL_37
0x400a55c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5381	syntax.c	FUNCTION_81	IF_27	CALL_38
0x400a560	          0x4889c7	                            mov rdi, rax	      5381	syntax.c	FUNCTION_81	IF_27	CALL_38
0x400a563	      0xe800000000	                          call 0x400a568	      5381	syntax.c	FUNCTION_81	IF_27	CALL_38
0x400a568	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5382	syntax.c	FUNCTION_81	IF_27	CALL_39
0x400a56c	          0x4889c7	                            mov rdi, rax	      5382	syntax.c	FUNCTION_81	IF_27	CALL_39
0x400a56f	      0xe800000000	                          call 0x400a574	      5382	syntax.c	FUNCTION_81	IF_27	CALL_39
0x400a574	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0x400a57b	            0x741e	                            je 0x400a59b	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0x400a57d	      0xbf00000000	                              mov edi, 0	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x400a582	      0xe800000000	                          call 0x400a587	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x400a587	          0x4889c2	                            mov rdx, rax	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x400a58a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x400a58e	          0x4889c6	                            mov rsi, rax	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x400a591	          0x4889d7	                            mov rdi, rdx	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x400a594	      0xe800000000	                          call 0x400a599	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x400a599	            0xeb2f	                           jmp 0x400a5ca	      5388	syntax.c	FUNCTION_81
0x400a59b	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400a5a2	            0x750a	                           jne 0x400a5ae	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400a5a4	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400a5ac	            0x751c	                           jne 0x400a5ca	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400a5ae	      0xbf00000000	                              mov edi, 0	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400a5b3	      0xe800000000	                          call 0x400a5b8	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400a5b8	          0x4889c2	                            mov rdx, rax	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400a5bb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400a5bf	          0x4889c6	                            mov rsi, rax	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400a5c2	          0x4889d7	                            mov rdi, rdx	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400a5c5	      0xe800000000	                          call 0x400a5ca	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400a5ca	              0x90	                                     nop	      5388	syntax.c	FUNCTION_81
0x400a5cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      5388	syntax.c	FUNCTION_81
0x400a5cf	    0x644833042528	                xor rax, qword fs:[0x28]	      5388	syntax.c	FUNCTION_81
0x400a5d8	            0x7405	                            je 0x400a5df	      5388	syntax.c	FUNCTION_81
0x400a5da	      0xe800000000	                          call 0x400a5df	      5388	syntax.c	FUNCTION_81
0x400a5df	              0xc9	                                   leave	      5388	syntax.c	FUNCTION_81
0x400a5e0	              0xc3	                                     ret	      5388	syntax.c	FUNCTION_81
lookup_color	functions,0:IF,10:SWITCH,0:FOR,0:CALL,1:ELSE,5:WHILE,0:DO,0	100
0x400d72e	              0x55	                                push rbp	      7295	syntax.c	FUNCTION_115
0x400d72f	          0x4889e5	                            mov rbp, rsp	      7295	syntax.c	FUNCTION_115
0x400d732	        0x4883ec20	                           sub rsp, 0x20	      7295	syntax.c	FUNCTION_115
0x400d736	          0x897dec	             mov dword [rbp - 0x14], edi	      7295	syntax.c	FUNCTION_115
0x400d739	          0x8975e8	             mov dword [rbp - 0x18], esi	      7295	syntax.c	FUNCTION_115
0x400d73c	        0x488955e0	             mov qword [rbp - 0x20], rdx	      7295	syntax.c	FUNCTION_115
0x400d740	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7296	syntax.c	FUNCTION_115
0x400d743	            0x4898	                                    cdqe	      7296	syntax.c	FUNCTION_115
0x400d745	    0x8b0485000000	                  mov eax, dword [rax*4]	      7296	syntax.c	FUNCTION_115
0x400d74c	          0x8945f4	              mov dword [rbp - 0xc], eax	      7296	syntax.c	FUNCTION_115
0x400d74f	        0x837df400	                cmp dword [rbp - 0xc], 0	      7300	syntax.c	FUNCTION_115	IF_1
0x400d753	            0x790a	                           jns 0x400d75f	      7300	syntax.c	FUNCTION_115	IF_1
0x400d755	      0xb8ffffffff	                     mov eax, 0xffffffff	      7301	syntax.c	FUNCTION_115	IF_1
0x400d75a	      0xe93c010000	                           jmp 0x400d89b	      7301	syntax.c	FUNCTION_115	IF_1
0x400d75f	    0x8b0500000000	            mov eax, dword [0x0400d765] 	      7303	syntax.c	FUNCTION_115	IF_2
0x400d765	          0x83f808	                              cmp eax, 8	      7303	syntax.c	FUNCTION_115	IF_2
0x400d768	            0x753e	                           jne 0x400d7a8	      7303	syntax.c	FUNCTION_115	IF_2
0x400d76a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7309	syntax.c	FUNCTION_115	IF_2
0x400d76d	            0x4898	                                    cdqe	      7309	syntax.c	FUNCTION_115	IF_2
0x400d76f	    0x8b0485000000	                  mov eax, dword [rax*4]	      7309	syntax.c	FUNCTION_115	IF_2
0x400d776	          0x8945f4	              mov dword [rbp - 0xc], eax	      7309	syntax.c	FUNCTION_115	IF_2
0x400d779	        0x837de800	               cmp dword [rbp - 0x18], 0	      7311	syntax.c	FUNCTION_115	IF_2	IF_3
0x400d77d	            0x7420	                            je 0x400d79f	      7311	syntax.c	FUNCTION_115	IF_2	IF_3
0x400d77f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      7315	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x400d782	          0x83e008	                              and eax, 8	      7315	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x400d785	            0x85c0	                           test eax, eax	      7315	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x400d787	            0x740c	                            je 0x400d795	      7315	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x400d789	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x400d78d	    0xc70001000000	                      mov dword [rax], 1	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x400d793	            0xeb0a	                           jmp 0x400d79f	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x400d795	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7318	syntax.c	FUNCTION_115	IF_2	IF_3	ELSE_1
0x400d799	    0xc70000000000	                      mov dword [rax], 0	      7318	syntax.c	FUNCTION_115	IF_2	IF_3	ELSE_1
0x400d79f	        0x8365f407	                and dword [rbp - 0xc], 7	      7320	syntax.c	FUNCTION_115	IF_2	ELSE_1
0x400d7a3	      0xe9f0000000	                           jmp 0x400d898	      7320	syntax.c	FUNCTION_115	IF_2	ELSE_1
0x400d7a8	    0x8b0500000000	            mov eax, dword [0x0400d7ae] 	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400d7ae	          0x83f810	                           cmp eax, 0x10	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400d7b1	            0x741c	                            je 0x400d7cf	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400d7b3	    0x8b0500000000	            mov eax, dword [0x0400d7b9] 	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400d7b9	          0x83f858	                           cmp eax, 0x58	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400d7bc	            0x7411	                            je 0x400d7cf	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400d7be	    0x8b0500000000	            mov eax, dword [0x0400d7c4] 	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400d7c4	      0x3dff000000	                           cmp eax, 0xff	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400d7c9	     0xf8ec9000000	                           jle 0x400d898	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400d7cf	    0x488b05000000	            mov rax, qword [0x0400d7d6] 	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x400d7d6	           0xfb600	                   movzx eax, byte [rax]	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x400d7d9	            0x84c0	                             test al, al	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x400d7db	            0x740d	                            je 0x400d7ea	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x400d7dd	    0x488b05000000	            mov rax, qword [0x0400d7e4] 	      7331	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x400d7e4	        0x488945f8	                mov qword [rbp - 8], rax	      7331	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x400d7e8	            0xeb0b	                           jmp 0x400d7f5	      7331	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x400d7ea	    0x488b05000000	            mov rax, qword [0x0400d7f1] 	      7333	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3
0x400d7f1	        0x488945f8	                mov qword [rbp - 8], rax	      7333	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3
0x400d7f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400d7f9	           0xfb600	                   movzx eax, byte [rax]	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400d7fc	            0x84c0	                             test al, al	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400d7fe	            0x7474	                            je 0x400d874	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400d800	    0x8b0500000000	            mov eax, dword [0x0400d806] 	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400d806	      0x3d00010000	                          cmp eax, 0x100	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400d80b	            0x7f1e	                            jg 0x400d82b	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400d80d	        0x488b45f8	                mov rax, qword [rbp - 8]	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400d811	          0x4889c7	                            mov rdi, rax	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400d814	      0xe800000000	                          call 0x400d819	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400d819	        0x488d50ff	                      lea rdx, [rax - 1]	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400d81d	        0x488b45f8	                mov rax, qword [rbp - 8]	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400d821	          0x4801d0	                            add rax, rdx	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400d824	           0xfb600	                   movzx eax, byte [rax]	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400d827	            0x3c6d	                            cmp al, 0x6d	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400d829	            0x7549	                           jne 0x400d874	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400d82b	    0x8b0500000000	            mov eax, dword [0x0400d831] 	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400d831	          0x83f858	                           cmp eax, 0x58	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400d834	            0x7511	                           jne 0x400d847	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400d836	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400d839	            0x4898	                                    cdqe	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400d83b	    0x8b0485000000	                  mov eax, dword [rax*4]	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400d842	          0x8945f4	              mov dword [rbp - 0xc], eax	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400d845	            0xeb2d	                           jmp 0x400d874	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400d847	    0x8b0500000000	            mov eax, dword [0x0400d84d] 	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400d84d	      0x3dff000000	                           cmp eax, 0xff	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400d852	            0x7e11	                           jle 0x400d865	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400d854	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400d857	            0x4898	                                    cdqe	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400d859	    0x8b0485000000	                  mov eax, dword [rax*4]	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400d860	          0x8945f4	              mov dword [rbp - 0xc], eax	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400d863	            0xeb0f	                           jmp 0x400d874	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400d865	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x400d868	            0x4898	                                    cdqe	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x400d86a	    0x8b0485000000	                  mov eax, dword [rax*4]	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x400d871	          0x8945f4	              mov dword [rbp - 0xc], eax	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x400d874	    0x8b0500000000	            mov eax, dword [0x0400d87a] 	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400d87a	      0x3dff000000	                           cmp eax, 0xff	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400d87f	            0x7e17	                           jle 0x400d898	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400d881	        0x837df40f	              cmp dword [rbp - 0xc], 0xf	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400d885	            0x7511	                           jne 0x400d898	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400d887	    0x8b0500000000	            mov eax, dword [0x0400d88d] 	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400d88d	            0x85c0	                           test eax, eax	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400d88f	            0x7407	                            je 0x400d898	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400d891	    0xc745f4e70000	            mov dword [rbp - 0xc], 0xe7 	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400d898	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      7351	syntax.c	FUNCTION_115
0x400d89b	              0xc9	                                   leave	      7352	syntax.c	FUNCTION_115
0x400d89c	              0xc3	                                     ret	      7352	syntax.c	FUNCTION_115
update_si_end	functions,0:IF,4:SWITCH,0:FOR,0:CALL,3:ELSE,2:WHILE,0:DO,0	113
0x400497b	              0x55	                                push rbp	      2834	syntax.c	FUNCTION_34
0x400497c	          0x4889e5	                            mov rbp, rsp	      2834	syntax.c	FUNCTION_34
0x400497f	        0x4883ec70	                           sub rsp, 0x70	      2834	syntax.c	FUNCTION_34
0x4004983	        0x48897d98	             mov qword [rbp - 0x68], rdi	      2834	syntax.c	FUNCTION_34
0x4004987	          0x897594	             mov dword [rbp - 0x6c], esi	      2834	syntax.c	FUNCTION_34
0x400498a	          0x895590	             mov dword [rbp - 0x70], edx	      2834	syntax.c	FUNCTION_34
0x400498d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2834	syntax.c	FUNCTION_34
0x4004996	        0x488945f8	                mov qword [rbp - 8], rax	      2834	syntax.c	FUNCTION_34
0x400499a	            0x31c0	                            xor eax, eax	      2834	syntax.c	FUNCTION_34
0x400499c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2842	syntax.c	FUNCTION_34	IF_1
0x40049a0	            0x8b00	                    mov eax, dword [rax]	      2842	syntax.c	FUNCTION_34	IF_1
0x40049a2	            0x85c0	                           test eax, eax	      2842	syntax.c	FUNCTION_34	IF_1
0x40049a4	     0xf886b010000	                            js 0x4004b15	      2842	syntax.c	FUNCTION_34	IF_1
0x40049aa	        0x837d9000	               cmp dword [rbp - 0x70], 0	      2848	syntax.c	FUNCTION_34	IF_2
0x40049ae	            0x7518	                           jne 0x40049c8	      2848	syntax.c	FUNCTION_34	IF_2
0x40049b0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2848	syntax.c	FUNCTION_34	IF_2
0x40049b4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2848	syntax.c	FUNCTION_34	IF_2
0x40049b8	    0x488b05000000	            mov rax, qword [0x040049bf] 	      2848	syntax.c	FUNCTION_34	IF_2
0x40049bf	          0x4839c2	                            cmp rdx, rax	      2848	syntax.c	FUNCTION_34	IF_2
0x40049c2	     0xf8d50010000	                           jge 0x4004b18	      2848	syntax.c	FUNCTION_34	IF_2
0x40049c8	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      2855	syntax.c	FUNCTION_34
0x40049cf	    0x488b05000000	            mov rax, qword [0x040049d6] 	      2856	syntax.c	FUNCTION_34
0x40049d6	        0x488945b0	             mov qword [rbp - 0x50], rax	      2856	syntax.c	FUNCTION_34
0x40049da	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2857	syntax.c	FUNCTION_34
0x40049dd	          0x8945b8	             mov dword [rbp - 0x48], eax	      2857	syntax.c	FUNCTION_34
0x40049e0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40049e4	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      2858	syntax.c	FUNCTION_34	CALL_1
0x40049eb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40049ef	        0x4c8d5068	                   lea r10, [rax + 0x68]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40049f3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40049f7	            0x8b00	                    mov eax, dword [rax]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40049f9	        0x4c8d45e0	                    lea r8, [rbp - 0x20]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40049fd	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      2858	syntax.c	FUNCTION_34	CALL_1
0x4004a01	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2858	syntax.c	FUNCTION_34	CALL_1
0x4004a05	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      2858	syntax.c	FUNCTION_34	CALL_1
0x4004a09	              0x57	                                push rdi	      2858	syntax.c	FUNCTION_34	CALL_1
0x4004a0a	        0x488d7dac	                   lea rdi, [rbp - 0x54]	      2858	syntax.c	FUNCTION_34	CALL_1
0x4004a0e	              0x57	                                push rdi	      2858	syntax.c	FUNCTION_34	CALL_1
0x4004a0f	          0x4d89c1	                              mov r9, r8	      2858	syntax.c	FUNCTION_34	CALL_1
0x4004a12	          0x4d89d0	                             mov r8, r10	      2858	syntax.c	FUNCTION_34	CALL_1
0x4004a15	            0x89c7	                            mov edi, eax	      2858	syntax.c	FUNCTION_34	CALL_1
0x4004a17	      0xe822020000	                    call sym.find_endpos	      2858	syntax.c	FUNCTION_34	CALL_1
0x4004a1c	        0x4883c410	                           add rsp, 0x10	      2858	syntax.c	FUNCTION_34	CALL_1
0x4004a20	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2861	syntax.c	FUNCTION_34	IF_3
0x4004a24	          0x4885c0	                           test rax, rax	      2861	syntax.c	FUNCTION_34	IF_3
0x4004a27	     0xf8595000000	                           jne 0x4004ac2	      2861	syntax.c	FUNCTION_34	IF_3
0x4004a2d	    0x488b05000000	            mov rax, qword [0x04004a34] 	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a34	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a3b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a3f	            0x8b00	                    mov eax, dword [rax]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a41	          0x4863d0	                         movsxd rdx, eax	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a44	          0x4889d0	                            mov rax, rdx	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a47	        0x48c1e002	                              shl rax, 2	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a4b	          0x4801d0	                            add rax, rdx	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a4e	        0x48c1e005	                              shl rax, 5	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a52	          0x4801c8	                            add rax, rcx	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a55	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a58	          0x83e004	                              and eax, 4	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a5b	            0x85c0	                           test eax, eax	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a5d	            0x7432	                            je 0x4004a91	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a5f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2867	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a63	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2867	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a6a	    0x488b15000000	            mov rdx, qword [0x04004a71] 	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a71	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a75	        0x48895018	             mov qword [rax + 0x18], rdx	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004a79	      0xe8ef0d0000	                 call sym.syn_getcurline	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4004a7e	          0x4889c7	                            mov rdi, rax	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4004a81	      0xe800000000	                          call 0x4004a86	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4004a86	            0x89c2	                            mov edx, eax	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4004a88	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4004a8c	          0x895020	             mov dword [rax + 0x20], edx	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4004a8f	            0xeb17	                           jmp 0x4004aa8	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4004a91	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2874	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x4004a95	    0xc7405c000000	               mov dword [rax + 0x5c], 0	      2874	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x4004a9c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2875	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x4004aa0	    0x48c740180000	               mov qword [rax + 0x18], 0	      2875	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x4004aa8	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2877	syntax.c	FUNCTION_34	IF_3
0x4004aac	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2877	syntax.c	FUNCTION_34	IF_3
0x4004ab0	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2877	syntax.c	FUNCTION_34	IF_3
0x4004ab4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2877	syntax.c	FUNCTION_34	IF_3
0x4004ab8	        0x48894138	             mov qword [rcx + 0x38], rax	      2877	syntax.c	FUNCTION_34	IF_3
0x4004abc	        0x48895140	             mov qword [rcx + 0x40], rdx	      2877	syntax.c	FUNCTION_34	IF_3
0x4004ac0	            0xeb57	                           jmp 0x4004b19	      2877	syntax.c	FUNCTION_34	IF_3
0x4004ac2	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4004ac6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4004aca	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4004ace	        0x48894118	             mov qword [rcx + 0x18], rax	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4004ad2	        0x48895120	             mov qword [rcx + 0x20], rdx	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4004ad6	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4004ada	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4004ade	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4004ae2	        0x48894138	             mov qword [rcx + 0x38], rax	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4004ae6	        0x48895140	             mov qword [rcx + 0x40], rdx	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4004aea	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4004aee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4004af2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4004af6	        0x48894148	             mov qword [rcx + 0x48], rax	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4004afa	        0x48895150	             mov qword [rcx + 0x50], rdx	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4004afe	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2885	syntax.c	FUNCTION_34	ELSE_2
0x4004b02	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2885	syntax.c	FUNCTION_34	ELSE_2
0x4004b09	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4004b0c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4004b10	          0x895058	             mov dword [rax + 0x58], edx	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4004b13	            0xeb04	                           jmp 0x4004b19	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4004b15	              0x90	                                     nop	      2843	syntax.c	FUNCTION_34	IF_1
0x4004b16	            0xeb01	                           jmp 0x4004b19	      2843	syntax.c	FUNCTION_34	IF_1
0x4004b18	              0x90	                                     nop	      2849	syntax.c	FUNCTION_34	IF_2
0x4004b19	        0x488b45f8	                mov rax, qword [rbp - 8]	      2888	syntax.c	FUNCTION_34
0x4004b1d	    0x644833042528	                xor rax, qword fs:[0x28]	      2888	syntax.c	FUNCTION_34
0x4004b26	            0x7405	                            je 0x4004b2d	      2888	syntax.c	FUNCTION_34
0x4004b28	      0xe800000000	                          call 0x4004b2d	      2888	syntax.c	FUNCTION_34
0x4004b2d	              0xc9	                                   leave	      2888	syntax.c	FUNCTION_34
0x4004b2e	              0xc3	                                     ret	      2888	syntax.c	FUNCTION_34
syn_unadd_group	functions,0:IF,0:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	34
0x401327c	              0x55	                                push rbp	      9804	syntax.c	FUNCTION_155
0x401327d	          0x4889e5	                            mov rbp, rsp	      9804	syntax.c	FUNCTION_155
0x4013280	    0x8b0500000000	            mov eax, dword [0x04013286] 	      9805	syntax.c	FUNCTION_155
0x4013286	          0x83e801	                              sub eax, 1	      9805	syntax.c	FUNCTION_155
0x4013289	    0x890500000000	            mov dword [0x0401328f], eax 	      9805	syntax.c	FUNCTION_155
0x401328f	    0x488b0d000000	            mov rcx, qword [0x04013296] 	      9806	syntax.c	FUNCTION_155	CALL_1
0x4013296	    0x8b0500000000	            mov eax, dword [0x0401329c] 	      9806	syntax.c	FUNCTION_155	CALL_1
0x401329c	          0x4863d0	                         movsxd rdx, eax	      9806	syntax.c	FUNCTION_155	CALL_1
0x401329f	          0x4889d0	                            mov rax, rdx	      9806	syntax.c	FUNCTION_155	CALL_1
0x40132a2	        0x48c1e003	                              shl rax, 3	      9806	syntax.c	FUNCTION_155	CALL_1
0x40132a6	          0x4801d0	                            add rax, rdx	      9806	syntax.c	FUNCTION_155	CALL_1
0x40132a9	          0x4801c0	                            add rax, rax	      9806	syntax.c	FUNCTION_155	CALL_1
0x40132ac	          0x4801d0	                            add rax, rdx	      9806	syntax.c	FUNCTION_155	CALL_1
0x40132af	        0x48c1e003	                              shl rax, 3	      9806	syntax.c	FUNCTION_155	CALL_1
0x40132b3	          0x4801c8	                            add rax, rcx	      9806	syntax.c	FUNCTION_155	CALL_1
0x40132b6	          0x488b00	                    mov rax, qword [rax]	      9806	syntax.c	FUNCTION_155	CALL_1
0x40132b9	          0x4889c7	                            mov rdi, rax	      9806	syntax.c	FUNCTION_155	CALL_1
0x40132bc	      0xe800000000	                          call 0x40132c1	      9806	syntax.c	FUNCTION_155	CALL_1
0x40132c1	    0x488b0d000000	            mov rcx, qword [0x040132c8] 	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132c8	    0x8b0500000000	            mov eax, dword [0x040132ce] 	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132ce	          0x4863d0	                         movsxd rdx, eax	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132d1	          0x4889d0	                            mov rax, rdx	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132d4	        0x48c1e003	                              shl rax, 3	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132d8	          0x4801d0	                            add rax, rdx	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132db	          0x4801c0	                            add rax, rax	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132de	          0x4801d0	                            add rax, rdx	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132e1	        0x48c1e003	                              shl rax, 3	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132e5	          0x4801c8	                            add rax, rcx	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132e8	        0x488b4008	                mov rax, qword [rax + 8]	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132ec	          0x4889c7	                            mov rdi, rax	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132ef	      0xe800000000	                          call 0x40132f4	      9807	syntax.c	FUNCTION_155	CALL_2
0x40132f4	              0x90	                                     nop	      9808	syntax.c	FUNCTION_155
0x40132f5	              0x5d	                                 pop rbp	      9808	syntax.c	FUNCTION_155
0x40132f6	              0xc3	                                     ret	      9808	syntax.c	FUNCTION_155
syn_cmd_case	functions,0:IF,5:SWITCH,0:FOR,0:CALL,10:ELSE,4:WHILE,0:DO,0	86
0x4005e45	              0x55	                                push rbp	      3492	syntax.c	FUNCTION_46
0x4005e46	          0x4889e5	                            mov rbp, rsp	      3492	syntax.c	FUNCTION_46
0x4005e49	        0x4883ec20	                           sub rsp, 0x20	      3492	syntax.c	FUNCTION_46
0x4005e4d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3492	syntax.c	FUNCTION_46
0x4005e51	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3492	syntax.c	FUNCTION_46
0x4005e54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3493	syntax.c	FUNCTION_46
0x4005e58	          0x488b00	                    mov rax, qword [rax]	      3493	syntax.c	FUNCTION_46
0x4005e5b	        0x488945f0	             mov qword [rbp - 0x10], rax	      3493	syntax.c	FUNCTION_46
0x4005e5f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3496	syntax.c	FUNCTION_46	CALL_1
0x4005e63	          0x4889c7	                            mov rdi, rax	      3496	syntax.c	FUNCTION_46	CALL_1
0x4005e66	      0xe800000000	                          call 0x4005e6b	      3496	syntax.c	FUNCTION_46	CALL_1
0x4005e6b	          0x4889c2	                            mov rdx, rax	      3496	syntax.c	FUNCTION_46	CALL_1
0x4005e6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3496	syntax.c	FUNCTION_46	CALL_1
0x4005e72	        0x48895008	                mov qword [rax + 8], rdx	      3496	syntax.c	FUNCTION_46	CALL_1
0x4005e76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3497	syntax.c	FUNCTION_46	IF_1
0x4005e7a	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3497	syntax.c	FUNCTION_46	IF_1
0x4005e7d	            0x85c0	                           test eax, eax	      3497	syntax.c	FUNCTION_46	IF_1
0x4005e7f	     0xf8506010000	                           jne 0x4005f8b	      3497	syntax.c	FUNCTION_46	IF_1
0x4005e85	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3500	syntax.c	FUNCTION_46	CALL_2
0x4005e89	          0x4889c7	                            mov rdi, rax	      3500	syntax.c	FUNCTION_46	CALL_2
0x4005e8c	      0xe800000000	                          call 0x4005e91	      3500	syntax.c	FUNCTION_46	CALL_2
0x4005e91	        0x488945f8	                mov qword [rbp - 8], rax	      3500	syntax.c	FUNCTION_46	CALL_2
0x4005e95	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3501	syntax.c	FUNCTION_46	IF_2
0x4005e99	           0xfb600	                   movzx eax, byte [rax]	      3501	syntax.c	FUNCTION_46	IF_2
0x4005e9c	            0x84c0	                             test al, al	      3501	syntax.c	FUNCTION_46	IF_2
0x4005e9e	            0x7543	                           jne 0x4005ee3	      3501	syntax.c	FUNCTION_46	IF_2
0x4005ea0	    0x488b05000000	            mov rax, qword [0x04005ea7] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4005ea7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4005eab	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4005eb1	            0x85c0	                           test eax, eax	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4005eb3	            0x7417	                            je 0x4005ecc	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4005eb5	      0xbf00000000	                              mov edi, 0	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4005eba	      0xe800000000	                          call 0x4005ebf	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4005ebf	          0x4889c7	                            mov rdi, rax	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4005ec2	      0xe800000000	                          call 0x4005ec7	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4005ec7	      0xe9c0000000	                           jmp 0x4005f8c	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4005ecc	      0xbf00000000	                              mov edi, 0	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4005ed1	      0xe800000000	                          call 0x4005ed6	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4005ed6	          0x4889c7	                            mov rdi, rax	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4005ed9	      0xe800000000	                          call 0x4005ede	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4005ede	      0xe9a9000000	                           jmp 0x4005f8c	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4005ee3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005ee7	      0xba05000000	                              mov edx, 5	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005eec	      0xbe00000000	                              mov esi, 0	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005ef1	          0x4889c7	                            mov rdi, rax	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005ef4	      0xe800000000	                          call 0x4005ef9	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005ef9	            0x85c0	                           test eax, eax	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005efb	            0x752b	                           jne 0x4005f28	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005efd	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005f01	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005f05	          0x4829c2	                            sub rdx, rax	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005f08	          0x4889d0	                            mov rax, rdx	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005f0b	        0x4883f805	                              cmp rax, 5	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005f0f	            0x7517	                           jne 0x4005f28	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4005f11	    0x488b05000000	            mov rax, qword [0x04005f18] 	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4005f18	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4005f1c	    0xc78058020000	              mov dword [rax + 0x258], 0	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4005f26	            0xeb64	                           jmp 0x4005f8c	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4005f28	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f2c	      0xba06000000	                              mov edx, 6	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f31	      0xbe00000000	                              mov esi, 0	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f36	          0x4889c7	                            mov rdi, rax	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f39	      0xe800000000	                          call 0x4005f3e	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f3e	            0x85c0	                           test eax, eax	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f40	            0x752b	                           jne 0x4005f6d	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f42	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f46	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f4a	          0x4829c2	                            sub rdx, rax	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f4d	          0x4889d0	                            mov rax, rdx	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f50	        0x4883f806	                              cmp rax, 6	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f54	            0x7517	                           jne 0x4005f6d	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4005f56	    0x488b05000000	            mov rax, qword [0x04005f5d] 	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4005f5d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4005f61	    0xc78058020000	              mov dword [rax + 0x258], 1	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4005f6b	            0xeb1f	                           jmp 0x4005f8c	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4005f6d	      0xbf00000000	                              mov edi, 0	      3513	syntax.c	FUNCTION_46	CALL_10
0x4005f72	      0xe800000000	                          call 0x4005f77	      3513	syntax.c	FUNCTION_46	CALL_10
0x4005f77	          0x4889c2	                            mov rdx, rax	      3513	syntax.c	FUNCTION_46	CALL_10
0x4005f7a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3513	syntax.c	FUNCTION_46	CALL_10
0x4005f7e	          0x4889c6	                            mov rsi, rax	      3513	syntax.c	FUNCTION_46	CALL_10
0x4005f81	          0x4889d7	                            mov rdi, rdx	      3513	syntax.c	FUNCTION_46	CALL_10
0x4005f84	      0xe800000000	                          call 0x4005f89	      3513	syntax.c	FUNCTION_46	CALL_10
0x4005f89	            0xeb01	                           jmp 0x4005f8c	      3513	syntax.c	FUNCTION_46	CALL_10
0x4005f8b	              0x90	                                     nop	      3498	syntax.c	FUNCTION_46	IF_1
0x4005f8c	              0xc9	                                   leave	      3514	syntax.c	FUNCTION_46
0x4005f8d	              0xc3	                                     ret	      3514	syntax.c	FUNCTION_46
syn_cmd_include	functions,0:IF,9:SWITCH,0:FOR,0:CALL,15:ELSE,0:WHILE,0:DO,0	170
0x4008df2	              0x55	                                push rbp	      4819	syntax.c	FUNCTION_78
0x4008df3	          0x4889e5	                            mov rbp, rsp	      4819	syntax.c	FUNCTION_78
0x4008df6	              0x53	                                push rbx	      4819	syntax.c	FUNCTION_78
0x4008df7	        0x4883ec58	                           sub rsp, 0x58	      4819	syntax.c	FUNCTION_78
0x4008dfb	        0x48897da8	             mov qword [rbp - 0x58], rdi	      4819	syntax.c	FUNCTION_78
0x4008dff	          0x8975a4	             mov dword [rbp - 0x5c], esi	      4819	syntax.c	FUNCTION_78
0x4008e02	    0x64488b042528	                mov rax, qword fs:[0x28]	      4819	syntax.c	FUNCTION_78
0x4008e0b	        0x488945e8	             mov qword [rbp - 0x18], rax	      4819	syntax.c	FUNCTION_78
0x4008e0f	            0x31c0	                            xor eax, eax	      4819	syntax.c	FUNCTION_78
0x4008e11	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4820	syntax.c	FUNCTION_78
0x4008e15	          0x488b00	                    mov rax, qword [rax]	      4820	syntax.c	FUNCTION_78
0x4008e18	        0x488945d8	             mov qword [rbp - 0x28], rax	      4820	syntax.c	FUNCTION_78
0x4008e1c	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      4821	syntax.c	FUNCTION_78
0x4008e23	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4824	syntax.c	FUNCTION_78
0x4008e2b	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      4827	syntax.c	FUNCTION_78
0x4008e32	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4829	syntax.c	FUNCTION_78	CALL_1
0x4008e36	          0x4889c7	                            mov rdi, rax	      4829	syntax.c	FUNCTION_78	CALL_1
0x4008e39	      0xe800000000	                          call 0x4008e3e	      4829	syntax.c	FUNCTION_78	CALL_1
0x4008e3e	          0x4889c2	                            mov rdx, rax	      4829	syntax.c	FUNCTION_78	CALL_1
0x4008e41	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4829	syntax.c	FUNCTION_78	CALL_1
0x4008e45	        0x48895008	                mov qword [rax + 8], rdx	      4829	syntax.c	FUNCTION_78	CALL_1
0x4008e49	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4830	syntax.c	FUNCTION_78	IF_1
0x4008e4d	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4830	syntax.c	FUNCTION_78	IF_1
0x4008e50	            0x85c0	                           test eax, eax	      4830	syntax.c	FUNCTION_78	IF_1
0x4008e52	     0xf8501020000	                           jne 0x4009059	      4830	syntax.c	FUNCTION_78	IF_1
0x4008e58	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4833	syntax.c	FUNCTION_78	IF_2
0x4008e5c	           0xfb600	                   movzx eax, byte [rax]	      4833	syntax.c	FUNCTION_78	IF_2
0x4008e5f	            0x3c40	                            cmp al, 0x40	      4833	syntax.c	FUNCTION_78	IF_2
0x4008e61	            0x7573	                           jne 0x4008ed6	      4833	syntax.c	FUNCTION_78	IF_2
0x4008e63	      0x488345d801	               add qword [rbp - 0x28], 1	      4835	syntax.c	FUNCTION_78	IF_2
0x4008e68	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4008e6c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4008e70	          0x4889d6	                            mov rsi, rdx	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4008e73	          0x4889c7	                            mov rdi, rax	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4008e76	      0xe8aff7ffff	                 call sym.get_group_name	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4008e7b	        0x488945e0	             mov qword [rbp - 0x20], rax	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4008e7f	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4837	syntax.c	FUNCTION_78	IF_2	IF_3
0x4008e84	            0x7517	                           jne 0x4008e9d	      4837	syntax.c	FUNCTION_78	IF_2	IF_3
0x4008e86	      0xbf00000000	                              mov edi, 0	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4008e8b	      0xe800000000	                          call 0x4008e90	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4008e90	          0x4889c7	                            mov rdi, rax	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4008e93	      0xe800000000	                          call 0x4008e98	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4008e98	      0xe9c3010000	                           jmp 0x4009060	      4840	syntax.c	FUNCTION_78	IF_2	IF_3
0x4008e9d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4008ea1	          0x4889c2	                            mov rdx, rax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4008ea4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4008ea8	          0x4829c2	                            sub rdx, rax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4008eab	          0x4889d0	                            mov rax, rdx	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4008eae	            0x89c2	                            mov edx, eax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4008eb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4008eb4	            0x89d6	                            mov esi, edx	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4008eb6	          0x4889c7	                            mov rdi, rax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4008eb9	      0xe88e1b0000	              call sym.syn_check_cluster	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4008ebe	          0x8945b8	             mov dword [rbp - 0x48], eax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4008ec1	        0x837db800	               cmp dword [rbp - 0x48], 0	      4843	syntax.c	FUNCTION_78	IF_2	IF_4
0x4008ec5	     0xf8491010000	                            je 0x400905c	      4843	syntax.c	FUNCTION_78	IF_2	IF_4
0x4008ecb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4846	syntax.c	FUNCTION_78	IF_2
0x4008ecf	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4846	syntax.c	FUNCTION_78	IF_2
0x4008ed3	          0x488910	                    mov qword [rax], rdx	      4846	syntax.c	FUNCTION_78	IF_2
0x4008ed6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4853	syntax.c	FUNCTION_78
0x4008eda	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4853	syntax.c	FUNCTION_78
0x4008ede	        0x4883c818	                            or rax, 0x18	      4853	syntax.c	FUNCTION_78
0x4008ee2	          0x4889c2	                            mov rdx, rax	      4853	syntax.c	FUNCTION_78
0x4008ee5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4853	syntax.c	FUNCTION_78
0x4008ee9	        0x48895028	             mov qword [rax + 0x28], rdx	      4853	syntax.c	FUNCTION_78
0x4008eed	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4854	syntax.c	FUNCTION_78	CALL_6
0x4008ef1	          0x4889c7	                            mov rdi, rax	      4854	syntax.c	FUNCTION_78	CALL_6
0x4008ef4	      0xe800000000	                          call 0x4008ef9	      4854	syntax.c	FUNCTION_78	CALL_6
0x4008ef9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008efd	          0x488b00	                    mov rax, qword [rax]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f00	           0xfb600	                   movzx eax, byte [rax]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f03	            0x3c3c	                            cmp al, 0x3c	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f05	            0x7421	                            je 0x4008f28	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f07	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f0b	          0x488b00	                    mov rax, qword [rax]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f0e	           0xfb600	                   movzx eax, byte [rax]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f11	            0x3c24	                            cmp al, 0x24	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f13	            0x7413	                            je 0x4008f28	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f15	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f19	          0x488b00	                    mov rax, qword [rax]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f1c	          0x4889c7	                            mov rdi, rax	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f1f	      0xe800000000	                          call 0x4008f24	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f24	            0x85c0	                           test eax, eax	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f26	            0x7443	                            je 0x4008f6b	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4008f28	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      4860	syntax.c	FUNCTION_78	IF_5
0x4008f2f	    0x488b0d000000	            mov rcx, qword [0x04008f36] 	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4008f36	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4008f3a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4008f3e	          0x4889ce	                            mov rsi, rcx	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4008f41	          0x4889c7	                            mov rdi, rax	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4008f44	      0xe800000000	                          call 0x4008f49	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4008f49	            0x85c0	                           test eax, eax	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4008f4b	            0x751e	                           jne 0x4008f6b	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4008f4d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x4008f51	          0x4885c0	                           test rax, rax	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x4008f54	     0xf8405010000	                            je 0x400905f	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x4008f5a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4864	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_9
0x4008f5e	          0x4889c7	                            mov rdi, rax	      4864	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_9
0x4008f61	      0xe800000000	                          call 0x4008f66	      4864	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_9
0x4008f66	      0xe9f4000000	                           jmp 0x400905f	      4865	syntax.c	FUNCTION_78	IF_5	IF_6
0x4008f6b	    0x8b0500000000	            mov eax, dword [0x04008f71] 	      4873	syntax.c	FUNCTION_78	IF_8
0x4008f71	      0x3de6030000	                          cmp eax, 0x3e6	      4873	syntax.c	FUNCTION_78	IF_8
0x4008f76	            0x7e17	                           jle 0x4008f8f	      4873	syntax.c	FUNCTION_78	IF_8
0x4008f78	      0xbf00000000	                              mov edi, 0	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4008f7d	      0xe800000000	                          call 0x4008f82	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4008f82	          0x4889c7	                            mov rdi, rax	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4008f85	      0xe800000000	                          call 0x4008f8a	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4008f8a	      0xe9d1000000	                           jmp 0x4009060	      4876	syntax.c	FUNCTION_78	IF_8
0x4008f8f	    0x8b0500000000	            mov eax, dword [0x04008f95] 	      4878	syntax.c	FUNCTION_78
0x4008f95	          0x8945c0	             mov dword [rbp - 0x40], eax	      4878	syntax.c	FUNCTION_78
0x4008f98	    0x8b0500000000	            mov eax, dword [0x04008f9e] 	      4879	syntax.c	FUNCTION_78
0x4008f9e	          0x83c001	                              add eax, 1	      4879	syntax.c	FUNCTION_78
0x4008fa1	    0x890500000000	            mov dword [0x04008fa7], eax 	      4879	syntax.c	FUNCTION_78
0x4008fa7	    0x8b0500000000	            mov eax, dword [0x04008fad] 	      4879	syntax.c	FUNCTION_78
0x4008fad	    0x890500000000	            mov dword [0x04008fb3], eax 	      4879	syntax.c	FUNCTION_78
0x4008fb3	    0x488b05000000	            mov rax, qword [0x04008fba] 	      4880	syntax.c	FUNCTION_78
0x4008fba	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4880	syntax.c	FUNCTION_78
0x4008fbe	    0x8b8004030000	           mov eax, dword [rax + 0x304] 	      4880	syntax.c	FUNCTION_78
0x4008fc4	          0x8945c4	             mov dword [rbp - 0x3c], eax	      4880	syntax.c	FUNCTION_78
0x4008fc7	    0x488b05000000	            mov rax, qword [0x04008fce] 	      4881	syntax.c	FUNCTION_78
0x4008fce	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4881	syntax.c	FUNCTION_78
0x4008fd2	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      4881	syntax.c	FUNCTION_78
0x4008fd5	    0x899004030000	            mov dword [rax + 0x304], edx	      4881	syntax.c	FUNCTION_78
0x4008fdb	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4008fdf	            0x7420	                            je 0x4009001	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4008fe1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4008fe5	          0x488b00	                    mov rax, qword [rax]	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4008fe8	      0xba00000000	                              mov edx, 0	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4008fed	      0xbe00000000	                              mov esi, 0	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4008ff2	          0x4889c7	                            mov rdi, rax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4008ff5	      0xe800000000	                          call 0x4008ffa	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4008ffa	            0x85c0	                           test eax, eax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4008ffc	           0xf94c0	                                 sete al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4008fff	            0xeb19	                           jmp 0x400901a	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4009001	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x4009005	          0x488b00	                    mov rax, qword [rax]	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x4009008	      0xbe01000000	                              mov esi, 1	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x400900d	          0x4889c7	                            mov rdi, rax	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x4009010	      0xe800000000	                          call 0x4009015	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x4009015	            0x85c0	                           test eax, eax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4009017	           0xf94c0	                                 sete al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x400901a	            0x84c0	                             test al, al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x400901c	            0x741c	                            je 0x400903a	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x400901e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4884	syntax.c	FUNCTION_78	CALL_15
0x4009022	          0x488b18	                    mov rbx, qword [rax]	      4884	syntax.c	FUNCTION_78	CALL_15
0x4009025	      0xbf00000000	                              mov edi, 0	      4884	syntax.c	FUNCTION_78	CALL_15
0x400902a	      0xe800000000	                          call 0x400902f	      4884	syntax.c	FUNCTION_78	CALL_15
0x400902f	          0x4889de	                            mov rsi, rbx	      4884	syntax.c	FUNCTION_78	CALL_15
0x4009032	          0x4889c7	                            mov rdi, rax	      4884	syntax.c	FUNCTION_78	CALL_15
0x4009035	      0xe800000000	                          call 0x400903a	      4884	syntax.c	FUNCTION_78	CALL_15
0x400903a	    0x488b05000000	            mov rax, qword [0x04009041] 	      4885	syntax.c	FUNCTION_78
0x4009041	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4885	syntax.c	FUNCTION_78
0x4009045	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      4885	syntax.c	FUNCTION_78
0x4009048	    0x899004030000	            mov dword [rax + 0x304], edx	      4885	syntax.c	FUNCTION_78
0x400904e	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4886	syntax.c	FUNCTION_78
0x4009051	    0x890500000000	            mov dword [0x04009057], eax 	      4886	syntax.c	FUNCTION_78
0x4009057	            0xeb07	                           jmp 0x4009060	      4886	syntax.c	FUNCTION_78
0x4009059	              0x90	                                     nop	      4831	syntax.c	FUNCTION_78	IF_1
0x400905a	            0xeb04	                           jmp 0x4009060	      4831	syntax.c	FUNCTION_78	IF_1
0x400905c	              0x90	                                     nop	      4844	syntax.c	FUNCTION_78	IF_2	IF_4
0x400905d	            0xeb01	                           jmp 0x4009060	      4844	syntax.c	FUNCTION_78	IF_2	IF_4
0x400905f	              0x90	                                     nop	      4865	syntax.c	FUNCTION_78	IF_5	IF_6
0x4009060	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4887	syntax.c	FUNCTION_78
0x4009064	    0x644833042528	                xor rax, qword fs:[0x28]	      4887	syntax.c	FUNCTION_78
0x400906d	            0x7405	                            je 0x4009074	      4887	syntax.c	FUNCTION_78
0x400906f	      0xe800000000	                          call 0x4009074	      4887	syntax.c	FUNCTION_78
0x4009074	        0x4883c458	                           add rsp, 0x58	      4887	syntax.c	FUNCTION_78
0x4009078	              0x5b	                                 pop rbx	      4887	syntax.c	FUNCTION_78
0x4009079	              0x5d	                                 pop rbp	      4887	syntax.c	FUNCTION_78
0x400907a	              0xc3	                                     ret	      4887	syntax.c	FUNCTION_78
highlight_list_arg	functions,0:IF,8:SWITCH,0:FOR,1:CALL,11:ELSE,2:WHILE,0:DO,0	124
0x4012013	              0x55	                                push rbp	      9276	syntax.c	FUNCTION_142
0x4012014	          0x4889e5	                            mov rbp, rsp	      9276	syntax.c	FUNCTION_142
0x4012017	              0x53	                                push rbx	      9276	syntax.c	FUNCTION_142
0x4012018	    0x4881eca80000	                           sub rsp, 0xa8	      9276	syntax.c	FUNCTION_142
0x401201f	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	      9276	syntax.c	FUNCTION_142
0x4012025	    0x89b568ffffff	             mov dword [rbp - 0x98], esi	      9276	syntax.c	FUNCTION_142
0x401202b	    0x899564ffffff	             mov dword [rbp - 0x9c], edx	      9276	syntax.c	FUNCTION_142
0x4012031	    0x898d60ffffff	             mov dword [rbp - 0xa0], ecx	      9276	syntax.c	FUNCTION_142
0x4012037	    0x4c898558ffff	              mov qword [rbp - 0xa8], r8	      9276	syntax.c	FUNCTION_142
0x401203e	    0x4c898d50ffff	              mov qword [rbp - 0xb0], r9	      9276	syntax.c	FUNCTION_142
0x4012045	    0x64488b042528	                mov rax, qword fs:[0x28]	      9276	syntax.c	FUNCTION_142
0x401204e	        0x488945e8	             mov qword [rbp - 0x18], rax	      9276	syntax.c	FUNCTION_142
0x4012052	            0x31c0	                            xor eax, eax	      9276	syntax.c	FUNCTION_142
0x4012054	    0x8b0500000000	            mov eax, dword [0x0401205a] 	      9281	syntax.c	FUNCTION_142	IF_1
0x401205a	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x401205c	            0x740a	                            je 0x4012068	      9281	syntax.c	FUNCTION_142	IF_1
0x401205e	      0xb800000000	                              mov eax, 0	      9282	syntax.c	FUNCTION_142	IF_1
0x4012063	      0xe9b8010000	                           jmp 0x4012220	      9282	syntax.c	FUNCTION_142	IF_1
0x4012068	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 2	      9283	syntax.c	FUNCTION_142	IF_2
0x401206f	            0x750d	                           jne 0x401207e	      9283	syntax.c	FUNCTION_142	IF_2
0x4012071	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      9283	syntax.c	FUNCTION_142	IF_2
0x4012079	           0xf95c0	                                setne al	      9283	syntax.c	FUNCTION_142	IF_2
0x401207c	            0xeb0a	                           jmp 0x4012088	      9283	syntax.c	FUNCTION_142	IF_2
0x401207e	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      9283	syntax.c	FUNCTION_142	IF_2
0x4012085	           0xf95c0	                                setne al	      9283	syntax.c	FUNCTION_142	IF_2
0x4012088	            0x84c0	                             test al, al	      9283	syntax.c	FUNCTION_142	IF_2
0x401208a	     0xf848a010000	                            je 0x401221a	      9283	syntax.c	FUNCTION_142	IF_2
0x4012090	        0x488d4580	                   lea rax, [rbp - 0x80]	      9285	syntax.c	FUNCTION_142	IF_2
0x4012094	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      9285	syntax.c	FUNCTION_142	IF_2
0x401209b	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 3	      9286	syntax.c	FUNCTION_142	IF_2	IF_3
0x40120a2	            0x7524	                           jne 0x40120c8	      9286	syntax.c	FUNCTION_142	IF_2	IF_3
0x40120a4	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x40120aa	          0x8d50ff	                      lea edx, [rax - 1]	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x40120ad	        0x488d4580	                   lea rax, [rbp - 0x80]	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x40120b1	      0xbe00000000	                              mov esi, 0	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x40120b6	          0x4889c7	                            mov rdi, rax	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x40120b9	      0xb800000000	                              mov eax, 0	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x40120be	      0xe800000000	                          call 0x40120c3	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x40120c3	      0xe9bc000000	                           jmp 0x4012184	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x40120c8	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 2	      9288	syntax.c	FUNCTION_142	IF_2	ELSE_1	IF_4
0x40120cf	            0x7513	                           jne 0x40120e4	      9288	syntax.c	FUNCTION_142	IF_2	ELSE_1	IF_4
0x40120d1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      9289	syntax.c	FUNCTION_142	IF_2	ELSE_1	IF_4
0x40120d8	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      9289	syntax.c	FUNCTION_142	IF_2	ELSE_1	IF_4
0x40120df	      0xe9a0000000	                           jmp 0x4012184	      9289	syntax.c	FUNCTION_142	IF_2	ELSE_1	IF_4
0x40120e4	        0xc6458000	                mov byte [rbp - 0x80], 0	      9292	syntax.c	FUNCTION_142	IF_2	ELSE_2
0x40120e8	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x40120f2	            0xeb79	                           jmp 0x401216d	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x40120f4	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x40120fa	            0x4898	                                    cdqe	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x40120fc	    0x8b0485000000	                  mov eax, dword [rax*4]	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x4012103	    0x238560ffffff	             and eax, dword [rbp - 0xa0]	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x4012109	            0x85c0	                           test eax, eax	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x401210b	            0x7459	                            je 0x4012166	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x401210d	         0xfb64580	            movzx eax, byte [rbp - 0x80]	      9297	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	IF_6
0x4012111	            0x84c0	                             test al, al	      9297	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	IF_6
0x4012113	            0x7416	                            je 0x401212b	      9297	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	IF_6
0x4012115	        0x488d4580	                   lea rax, [rbp - 0x80]	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x4012119	      0xba64000000	                           mov edx, 0x64	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x401211e	      0xbe00000000	                              mov esi, 0	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x4012123	          0x4889c7	                            mov rdi, rax	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x4012126	      0xe800000000	                          call 0x401212b	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x401212b	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x4012131	            0x4898	                                    cdqe	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x4012133	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x401213b	        0x488d4580	                   lea rax, [rbp - 0x80]	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x401213f	      0xba64000000	                           mov edx, 0x64	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x4012144	          0x4889ce	                            mov rsi, rcx	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x4012147	          0x4889c7	                            mov rdi, rax	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x401214a	      0xe800000000	                          call 0x401214f	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x401214f	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x4012155	            0x4898	                                    cdqe	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x4012157	    0x8b0485000000	                  mov eax, dword [rax*4]	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x401215e	            0xf7d0	                                 not eax	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x4012160	    0x218560ffffff	             and dword [rbp - 0xa0], eax	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x4012166	    0x838574ffffff	               add dword [rbp - 0x8c], 1	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x401216d	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x4012173	            0x4898	                                    cdqe	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x4012175	    0x8b0485000000	                  mov eax, dword [rax*4]	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x401217c	            0x85c0	                           test eax, eax	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x401217e	     0xf8570ffffff	                           jne 0x40120f4	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x4012184	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x401218b	          0x4889c7	                            mov rdi, rax	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x401218e	      0xe800000000	                          call 0x4012193	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x4012193	            0x89c3	                            mov ebx, eax	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x4012195	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x401219c	          0x4889c7	                            mov rdi, rax	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x401219f	      0xe800000000	                          call 0x40121a4	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x40121a4	             0x1d8	                            add eax, ebx	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x40121a6	          0x83c001	                              add eax, 1	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x40121a9	            0x89c1	                            mov ecx, eax	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x40121ab	    0x8b956cffffff	             mov edx, dword [rbp - 0x94]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x40121b1	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x40121b7	            0x89ce	                            mov esi, ecx	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x40121b9	            0x89c7	                            mov edi, eax	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x40121bb	      0xe8c4070000	                call sym.syn_list_header	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x40121c0	    0xc78568ffffff	               mov dword [rbp - 0x98], 1	      9307	syntax.c	FUNCTION_142	IF_2
0x40121ca	    0x8b0500000000	            mov eax, dword [0x040121d0] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x40121d0	            0x85c0	                           test eax, eax	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x40121d2	            0x7546	                           jne 0x401221a	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x40121d4	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9310	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8
0x40121db	           0xfb600	                   movzx eax, byte [rax]	      9310	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8
0x40121de	            0x84c0	                             test al, al	      9310	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8
0x40121e0	            0x7429	                            je 0x401220b	      9310	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8
0x40121e2	    0x8b1500000000	            mov edx, dword [0x040121e8] 	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x40121e8	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x40121ef	            0x89d6	                            mov esi, edx	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x40121f1	          0x4889c7	                            mov rdi, rax	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x40121f4	      0xe800000000	                          call 0x40121f9	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x40121f9	    0x8b0500000000	            mov eax, dword [0x040121ff] 	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_10
0x40121ff	            0x89c6	                            mov esi, eax	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_10
0x4012201	      0xbf00000000	                              mov edi, 0	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_10
0x4012206	      0xe800000000	                          call 0x401220b	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_10
0x401220b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_11
0x4012212	          0x4889c7	                            mov rdi, rax	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_11
0x4012215	      0xe800000000	                          call 0x401221a	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_11
0x401221a	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      9318	syntax.c	FUNCTION_142
0x4012220	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      9319	syntax.c	FUNCTION_142
0x4012224	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      9319	syntax.c	FUNCTION_142
0x401222d	            0x7405	                            je 0x4012234	      9319	syntax.c	FUNCTION_142
0x401222f	      0xe800000000	                          call 0x4012234	      9319	syntax.c	FUNCTION_142
0x4012234	    0x4881c4a80000	                           add rsp, 0xa8	      9319	syntax.c	FUNCTION_142
0x401223b	              0x5b	                                 pop rbx	      9319	syntax.c	FUNCTION_142
0x401223c	              0x5d	                                 pop rbp	      9319	syntax.c	FUNCTION_142
0x401223d	              0xc3	                                     ret	      9319	syntax.c	FUNCTION_142
init_syn_patterns	functions,0:IF,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	11
0x400afcd	              0x55	                                push rbp	      5727	syntax.c	FUNCTION_89
0x400afce	          0x4889e5	                            mov rbp, rsp	      5727	syntax.c	FUNCTION_89
0x400afd1	    0x488b05000000	            mov rax, qword [0x0400afd8] 	      5728	syntax.c	FUNCTION_89
0x400afd8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5728	syntax.c	FUNCTION_89
0x400afdc	    0xc78068020000	          mov dword [rax + 0x268], 0xa0 	      5728	syntax.c	FUNCTION_89
0x400afe6	    0x488b05000000	            mov rax, qword [0x0400afed] 	      5729	syntax.c	FUNCTION_89
0x400afed	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5729	syntax.c	FUNCTION_89
0x400aff1	    0xc7806c020000	            mov dword [rax + 0x26c], 0xa	      5729	syntax.c	FUNCTION_89
0x400affb	              0x90	                                     nop	      5730	syntax.c	FUNCTION_89
0x400affc	              0x5d	                                 pop rbp	      5730	syntax.c	FUNCTION_89
0x400affd	              0xc3	                                     ret	      5730	syntax.c	FUNCTION_89
syn_add_cluster	functions,0:IF,5:SWITCH,0:FOR,0:CALL,9:ELSE,0:WHILE,0:DO,0	128
0x400aab5	              0x55	                                push rbp	      5600	syntax.c	FUNCTION_87
0x400aab6	          0x4889e5	                            mov rbp, rsp	      5600	syntax.c	FUNCTION_87
0x400aab9	              0x53	                                push rbx	      5600	syntax.c	FUNCTION_87
0x400aaba	        0x4883ec28	                           sub rsp, 0x28	      5600	syntax.c	FUNCTION_87
0x400aabe	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5600	syntax.c	FUNCTION_87
0x400aac2	    0x488b05000000	            mov rax, qword [0x0400aac9] 	      5606	syntax.c	FUNCTION_87	IF_1
0x400aac9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5606	syntax.c	FUNCTION_87	IF_1
0x400aacd	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      5606	syntax.c	FUNCTION_87	IF_1
0x400aad4	          0x4885c0	                           test rax, rax	      5606	syntax.c	FUNCTION_87	IF_1
0x400aad7	            0x752a	                           jne 0x400ab03	      5606	syntax.c	FUNCTION_87	IF_1
0x400aad9	    0x488b05000000	            mov rax, qword [0x0400aae0] 	      5608	syntax.c	FUNCTION_87	IF_1
0x400aae0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5608	syntax.c	FUNCTION_87	IF_1
0x400aae4	    0xc78080020000	          mov dword [rax + 0x280], 0x18 	      5608	syntax.c	FUNCTION_87	IF_1
0x400aaee	    0x488b05000000	            mov rax, qword [0x0400aaf5] 	      5609	syntax.c	FUNCTION_87	IF_1
0x400aaf5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5609	syntax.c	FUNCTION_87	IF_1
0x400aaf9	    0xc78084020000	            mov dword [rax + 0x284], 0xa	      5609	syntax.c	FUNCTION_87	IF_1
0x400ab03	    0x488b05000000	            mov rax, qword [0x0400ab0a] 	      5612	syntax.c	FUNCTION_87
0x400ab0a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5612	syntax.c	FUNCTION_87
0x400ab0e	    0x8b8078020000	           mov eax, dword [rax + 0x278] 	      5612	syntax.c	FUNCTION_87
0x400ab14	          0x8945ec	             mov dword [rbp - 0x14], eax	      5612	syntax.c	FUNCTION_87
0x400ab17	    0x817dec262600	         cmp dword [rbp - 0x14], 0x2626 	      5613	syntax.c	FUNCTION_87	IF_2
0x400ab1e	            0x7e28	                           jle 0x400ab48	      5613	syntax.c	FUNCTION_87	IF_2
0x400ab20	      0xbf00000000	                              mov edi, 0	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x400ab25	      0xe800000000	                          call 0x400ab2a	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x400ab2a	          0x4889c7	                            mov rdi, rax	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x400ab2d	      0xe800000000	                          call 0x400ab32	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x400ab32	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0x400ab36	          0x4889c7	                            mov rdi, rax	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0x400ab39	      0xe800000000	                          call 0x400ab3e	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0x400ab3e	      0xb800000000	                              mov eax, 0	      5617	syntax.c	FUNCTION_87	IF_2
0x400ab43	      0xe98b010000	                           jmp 0x400acd3	      5617	syntax.c	FUNCTION_87	IF_2
0x400ab48	    0x488b05000000	            mov rax, qword [0x0400ab4f] 	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x400ab4f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x400ab53	    0x480578020000	                          add rax, 0x278	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x400ab59	      0xbe01000000	                              mov esi, 1	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x400ab5e	          0x4889c7	                            mov rdi, rax	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x400ab61	      0xe800000000	                          call 0x400ab66	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x400ab66	            0x85c0	                           test eax, eax	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x400ab68	            0x7516	                           jne 0x400ab80	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x400ab6a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5625	syntax.c	FUNCTION_87	IF_3	CALL_5
0x400ab6e	          0x4889c7	                            mov rdi, rax	      5625	syntax.c	FUNCTION_87	IF_3	CALL_5
0x400ab71	      0xe800000000	                          call 0x400ab76	      5625	syntax.c	FUNCTION_87	IF_3	CALL_5
0x400ab76	      0xb800000000	                              mov eax, 0	      5626	syntax.c	FUNCTION_87	IF_3
0x400ab7b	      0xe953010000	                           jmp 0x400acd3	      5626	syntax.c	FUNCTION_87	IF_3
0x400ab80	    0x488b05000000	            mov rax, qword [0x0400ab87] 	      5629	syntax.c	FUNCTION_87	CALL_6
0x400ab87	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5629	syntax.c	FUNCTION_87	CALL_6
0x400ab8b	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5629	syntax.c	FUNCTION_87	CALL_6
0x400ab92	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5629	syntax.c	FUNCTION_87	CALL_6
0x400ab95	          0x4863d0	                         movsxd rdx, eax	      5629	syntax.c	FUNCTION_87	CALL_6
0x400ab98	          0x4889d0	                            mov rax, rdx	      5629	syntax.c	FUNCTION_87	CALL_6
0x400ab9b	          0x4801c0	                            add rax, rax	      5629	syntax.c	FUNCTION_87	CALL_6
0x400ab9e	          0x4801d0	                            add rax, rdx	      5629	syntax.c	FUNCTION_87	CALL_6
0x400aba1	        0x48c1e003	                              shl rax, 3	      5629	syntax.c	FUNCTION_87	CALL_6
0x400aba5	          0x4801c8	                            add rax, rcx	      5629	syntax.c	FUNCTION_87	CALL_6
0x400aba8	      0xba18000000	                           mov edx, 0x18	      5629	syntax.c	FUNCTION_87	CALL_6
0x400abad	      0xbe00000000	                              mov esi, 0	      5629	syntax.c	FUNCTION_87	CALL_6
0x400abb2	          0x4889c7	                            mov rdi, rax	      5629	syntax.c	FUNCTION_87	CALL_6
0x400abb5	      0xe800000000	                          call 0x400abba	      5629	syntax.c	FUNCTION_87	CALL_6
0x400abba	    0x488b05000000	            mov rax, qword [0x0400abc1] 	      5630	syntax.c	FUNCTION_87
0x400abc1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5630	syntax.c	FUNCTION_87
0x400abc5	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5630	syntax.c	FUNCTION_87
0x400abcc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5630	syntax.c	FUNCTION_87
0x400abcf	          0x4863d0	                         movsxd rdx, eax	      5630	syntax.c	FUNCTION_87
0x400abd2	          0x4889d0	                            mov rax, rdx	      5630	syntax.c	FUNCTION_87
0x400abd5	          0x4801c0	                            add rax, rax	      5630	syntax.c	FUNCTION_87
0x400abd8	          0x4801d0	                            add rax, rdx	      5630	syntax.c	FUNCTION_87
0x400abdb	        0x48c1e003	                              shl rax, 3	      5630	syntax.c	FUNCTION_87
0x400abdf	        0x488d1401	                    lea rdx, [rcx + rax]	      5630	syntax.c	FUNCTION_87
0x400abe3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5630	syntax.c	FUNCTION_87
0x400abe7	          0x488902	                    mov qword [rdx], rax	      5630	syntax.c	FUNCTION_87
0x400abea	    0x488b05000000	            mov rax, qword [0x0400abf1] 	      5631	syntax.c	FUNCTION_87	CALL_7
0x400abf1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5631	syntax.c	FUNCTION_87	CALL_7
0x400abf5	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5631	syntax.c	FUNCTION_87	CALL_7
0x400abfc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5631	syntax.c	FUNCTION_87	CALL_7
0x400abff	          0x4863d0	                         movsxd rdx, eax	      5631	syntax.c	FUNCTION_87	CALL_7
0x400ac02	          0x4889d0	                            mov rax, rdx	      5631	syntax.c	FUNCTION_87	CALL_7
0x400ac05	          0x4801c0	                            add rax, rax	      5631	syntax.c	FUNCTION_87	CALL_7
0x400ac08	          0x4801d0	                            add rax, rdx	      5631	syntax.c	FUNCTION_87	CALL_7
0x400ac0b	        0x48c1e003	                              shl rax, 3	      5631	syntax.c	FUNCTION_87	CALL_7
0x400ac0f	        0x488d1c01	                    lea rbx, [rcx + rax]	      5631	syntax.c	FUNCTION_87	CALL_7
0x400ac13	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5631	syntax.c	FUNCTION_87	CALL_7
0x400ac17	          0x4889c7	                            mov rdi, rax	      5631	syntax.c	FUNCTION_87	CALL_7
0x400ac1a	      0xe800000000	                          call 0x400ac1f	      5631	syntax.c	FUNCTION_87	CALL_7
0x400ac1f	        0x48894308	                mov qword [rbx + 8], rax	      5631	syntax.c	FUNCTION_87	CALL_7
0x400ac23	    0x488b05000000	            mov rax, qword [0x0400ac2a] 	      5632	syntax.c	FUNCTION_87
0x400ac2a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5632	syntax.c	FUNCTION_87
0x400ac2e	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5632	syntax.c	FUNCTION_87
0x400ac35	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5632	syntax.c	FUNCTION_87
0x400ac38	          0x4863d0	                         movsxd rdx, eax	      5632	syntax.c	FUNCTION_87
0x400ac3b	          0x4889d0	                            mov rax, rdx	      5632	syntax.c	FUNCTION_87
0x400ac3e	          0x4801c0	                            add rax, rax	      5632	syntax.c	FUNCTION_87
0x400ac41	          0x4801d0	                            add rax, rdx	      5632	syntax.c	FUNCTION_87
0x400ac44	        0x48c1e003	                              shl rax, 3	      5632	syntax.c	FUNCTION_87
0x400ac48	          0x4801c8	                            add rax, rcx	      5632	syntax.c	FUNCTION_87
0x400ac4b	    0x48c740100000	               mov qword [rax + 0x10], 0	      5632	syntax.c	FUNCTION_87
0x400ac53	    0x488b05000000	            mov rax, qword [0x0400ac5a] 	      5633	syntax.c	FUNCTION_87
0x400ac5a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5633	syntax.c	FUNCTION_87
0x400ac5e	    0x8b9078020000	           mov edx, dword [rax + 0x278] 	      5633	syntax.c	FUNCTION_87
0x400ac64	          0x83c201	                              add edx, 1	      5633	syntax.c	FUNCTION_87
0x400ac67	    0x899078020000	            mov dword [rax + 0x278], edx	      5633	syntax.c	FUNCTION_87
0x400ac6d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400ac71	      0xbe00000000	                              mov esi, 0	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400ac76	          0x4889c7	                            mov rdi, rax	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400ac79	      0xe800000000	                          call 0x400ac7e	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400ac7e	            0x85c0	                           test eax, eax	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400ac80	            0x751a	                           jne 0x400ac9c	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400ac82	    0x488b05000000	            mov rax, qword [0x0400ac89] 	      5636	syntax.c	FUNCTION_87	IF_4
0x400ac89	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5636	syntax.c	FUNCTION_87	IF_4
0x400ac8d	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      5636	syntax.c	FUNCTION_87	IF_4
0x400ac90	    0x81c2d8590000	                         add edx, 0x59d8	      5636	syntax.c	FUNCTION_87	IF_4
0x400ac96	    0x899090020000	            mov dword [rax + 0x290], edx	      5636	syntax.c	FUNCTION_87	IF_4
0x400ac9c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x400aca0	      0xbe00000000	                              mov esi, 0	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x400aca5	          0x4889c7	                            mov rdi, rax	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x400aca8	      0xe800000000	                          call 0x400acad	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x400acad	            0x85c0	                           test eax, eax	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x400acaf	            0x751a	                           jne 0x400accb	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x400acb1	    0x488b05000000	            mov rax, qword [0x0400acb8] 	      5638	syntax.c	FUNCTION_87	IF_5
0x400acb8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5638	syntax.c	FUNCTION_87	IF_5
0x400acbc	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      5638	syntax.c	FUNCTION_87	IF_5
0x400acbf	    0x81c2d8590000	                         add edx, 0x59d8	      5638	syntax.c	FUNCTION_87	IF_5
0x400acc5	    0x899094020000	            mov dword [rax + 0x294], edx	      5638	syntax.c	FUNCTION_87	IF_5
0x400accb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5640	syntax.c	FUNCTION_87
0x400acce	       0x5d8590000	                         add eax, 0x59d8	      5640	syntax.c	FUNCTION_87
0x400acd3	        0x4883c428	                           add rsp, 0x28	      5641	syntax.c	FUNCTION_87
0x400acd7	              0x5b	                                 pop rbx	      5641	syntax.c	FUNCTION_87
0x400acd8	              0x5d	                                 pop rbp	      5641	syntax.c	FUNCTION_87
0x400acd9	              0xc3	                                     ret	      5641	syntax.c	FUNCTION_87
syn_stack_free_all	functions,1:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	30
0x400120f	              0x55	                                push rbp	      1204	syntax.c	FUNCTION_12
0x4001210	          0x4889e5	                            mov rbp, rsp	      1204	syntax.c	FUNCTION_12
0x4001213	        0x4883ec20	                           sub rsp, 0x20	      1204	syntax.c	FUNCTION_12
0x4001217	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1204	syntax.c	FUNCTION_12
0x400121b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1209	syntax.c	FUNCTION_12	CALL_1
0x400121f	          0x4889c7	                            mov rdi, rax	      1209	syntax.c	FUNCTION_12	CALL_1
0x4001222	      0xe85affffff	           call sym.syn_stack_free_block	      1209	syntax.c	FUNCTION_12	CALL_1
0x4001227	    0x488b05000000	            mov rax, qword [0x0400122e] 	      1213	syntax.c	FUNCTION_12
0x400122e	        0x488945f8	                mov qword [rbp - 8], rax	      1213	syntax.c	FUNCTION_12
0x4001232	            0xeb36	                           jmp 0x400126a	      1213	syntax.c	FUNCTION_12
0x4001234	        0x488b45f8	                mov rax, qword [rbp - 8]	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4001238	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x400123c	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4001240	            0x751c	                           jne 0x400125e	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4001242	        0x488b45f8	                mov rax, qword [rbp - 8]	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4001246	          0x4889c7	                            mov rdi, rax	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4001249	      0xe800000000	                          call 0x400124e	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x400124e	            0x85c0	                           test eax, eax	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4001250	            0x740c	                            je 0x400125e	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4001252	        0x488b45f8	                mov rax, qword [rbp - 8]	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x4001256	          0x4889c7	                            mov rdi, rax	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x4001259	      0xe800000000	                          call 0x400125e	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x400125e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1213	syntax.c	FUNCTION_12
0x4001262	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1213	syntax.c	FUNCTION_12
0x4001266	        0x488945f8	                mov qword [rbp - 8], rax	      1213	syntax.c	FUNCTION_12
0x400126a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1213	syntax.c	FUNCTION_12
0x400126f	            0x75c3	                           jne 0x4001234	      1213	syntax.c	FUNCTION_12
0x4001271	              0x90	                                     nop	      1219	syntax.c	FUNCTION_12
0x4001272	              0xc9	                                   leave	      1219	syntax.c	FUNCTION_12
0x4001273	              0xc3	                                     ret	      1219	syntax.c	FUNCTION_12
get_attr_entry	functions,0:IF,9:SWITCH,0:FOR,2:CALL,10:ELSE,3:WHILE,0:DO,0	269
0x40110b8	              0x55	                                push rbp	      8789	syntax.c	FUNCTION_131
0x40110b9	          0x4889e5	                            mov rbp, rsp	      8789	syntax.c	FUNCTION_131
0x40110bc	        0x4883ec20	                           sub rsp, 0x20	      8789	syntax.c	FUNCTION_131
0x40110c0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8789	syntax.c	FUNCTION_131
0x40110c4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8789	syntax.c	FUNCTION_131
0x40110c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8797	syntax.c	FUNCTION_131
0x40110cc	    0xc74008280000	               mov dword [rax + 8], 0x28	      8797	syntax.c	FUNCTION_131
0x40110d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8798	syntax.c	FUNCTION_131
0x40110d7	    0xc7400c070000	                mov dword [rax + 0xc], 7	      8798	syntax.c	FUNCTION_131
0x40110de	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      8803	syntax.c	FUNCTION_131	FOR_1
0x40110e5	      0xe9b5010000	                           jmp 0x401129f	      8803	syntax.c	FUNCTION_131	FOR_1
0x40110ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8805	syntax.c	FUNCTION_131	FOR_1
0x40110ee	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      8805	syntax.c	FUNCTION_131	FOR_1
0x40110f2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8805	syntax.c	FUNCTION_131	FOR_1
0x40110f5	          0x4863d0	                         movsxd rdx, eax	      8805	syntax.c	FUNCTION_131	FOR_1
0x40110f8	          0x4889d0	                            mov rax, rdx	      8805	syntax.c	FUNCTION_131	FOR_1
0x40110fb	        0x48c1e002	                              shl rax, 2	      8805	syntax.c	FUNCTION_131	FOR_1
0x40110ff	          0x4801d0	                            add rax, rdx	      8805	syntax.c	FUNCTION_131	FOR_1
0x4011102	        0x48c1e003	                              shl rax, 3	      8805	syntax.c	FUNCTION_131	FOR_1
0x4011106	          0x4801c8	                            add rax, rcx	      8805	syntax.c	FUNCTION_131	FOR_1
0x4011109	        0x488945f8	                mov qword [rbp - 8], rax	      8805	syntax.c	FUNCTION_131	FOR_1
0x401110d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011111	           0xfb710	                   movzx edx, word [rax]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011114	        0x488b45f8	                mov rax, qword [rbp - 8]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011118	           0xfb700	                   movzx eax, word [rax]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401111b	          0x6639c2	                              cmp dx, ax	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401111e	     0xf8577010000	                           jne 0x401129b	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011124	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8807	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401112c	            0x7558	                           jne 0x4011186	      8807	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401112e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011132	        0x488b5008	                mov rdx, qword [rax + 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011136	        0x488b45f8	                mov rax, qword [rbp - 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401113a	        0x488b4008	                mov rax, qword [rax + 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401113e	          0x4839c2	                            cmp rdx, rax	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011141	            0x7543	                           jne 0x4011186	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011143	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011147	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401114b	        0x488b45f8	                mov rax, qword [rbp - 8]	      8812	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401114f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8812	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011153	          0x4839c2	                            cmp rdx, rax	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011156	            0x752e	                           jne 0x4011186	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011158	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401115c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011160	        0x488b45f8	                mov rax, qword [rbp - 8]	      8814	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011164	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8814	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011168	          0x4839c2	                            cmp rdx, rax	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401116b	            0x7519	                           jne 0x4011186	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401116d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011171	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011175	        0x488b45f8	                mov rax, qword [rbp - 8]	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011179	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401117d	          0x4839c2	                            cmp rdx, rax	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011180	     0xf8408010000	                            je 0x401128e	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011186	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8820	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401118e	     0xf859c000000	                           jne 0x4011230	      8820	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011194	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011198	        0x488b4008	                mov rax, qword [rax + 8]	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401119c	          0x4885c0	                           test rax, rax	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401119f	           0xf95c2	                                setne dl	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111a6	        0x488b4008	                mov rax, qword [rax + 8]	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111aa	          0x4885c0	                           test rax, rax	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111ad	           0xf94c0	                                 sete al	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111b0	            0x31d0	                            xor eax, edx	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111b2	            0x84c0	                             test al, al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111b4	            0x747a	                            je 0x4011230	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111ba	        0x488b4008	                mov rax, qword [rax + 8]	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111be	          0x4885c0	                           test rax, rax	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111c1	            0x741f	                            je 0x40111e2	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40111c7	        0x488b5008	                mov rdx, qword [rax + 8]	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40111cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40111cf	        0x488b4008	                mov rax, qword [rax + 8]	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40111d3	          0x4889d6	                            mov rsi, rdx	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40111d6	          0x4889c7	                            mov rdi, rax	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40111d9	      0xe800000000	                          call 0x40111de	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40111de	            0x85c0	                           test eax, eax	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40111e0	            0x754e	                           jne 0x4011230	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40111e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111e6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111ea	          0x4885c0	                           test rax, rax	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111ed	           0xf95c2	                                setne dl	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111f4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111f8	          0x4885c0	                           test rax, rax	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111fb	           0xf94c0	                                 sete al	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40111fe	            0x31d0	                            xor eax, edx	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011200	            0x84c0	                             test al, al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011202	            0x742c	                            je 0x4011230	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011204	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011208	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401120c	          0x4885c0	                           test rax, rax	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401120f	            0x747d	                            je 0x401128e	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011211	        0x488b45f8	                mov rax, qword [rbp - 8]	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4011215	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4011219	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x401121d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4011221	          0x4889d6	                            mov rsi, rdx	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4011224	          0x4889c7	                            mov rdi, rax	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4011227	      0xe800000000	                          call 0x401122c	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x401122c	            0x85c0	                           test eax, eax	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x401122e	            0x745e	                            je 0x401128e	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4011230	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8833	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011238	            0x7561	                           jne 0x401129b	      8833	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401123a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8834	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401123e	         0xfb75008	               movzx edx, word [rax + 8]	      8834	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011242	        0x488b45f8	                mov rax, qword [rbp - 8]	      8835	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011246	         0xfb74008	               movzx eax, word [rax + 8]	      8835	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401124a	          0x6639c2	                              cmp dx, ax	      8834	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401124d	            0x754c	                           jne 0x401129b	      8834	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401124f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011253	         0xfb7500a	            movzx edx, word [rax + 0xa] 	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011257	        0x488b45f8	                mov rax, qword [rbp - 8]	      8837	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401125b	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      8837	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401125f	          0x6639c2	                              cmp dx, ax	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011262	            0x7537	                           jne 0x401129b	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011264	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011268	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401126c	        0x488b45f8	                mov rax, qword [rbp - 8]	      8840	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011270	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8840	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011274	          0x4839c2	                            cmp rdx, rax	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011277	            0x7522	                           jne 0x401129b	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011279	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401127d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011281	        0x488b45f8	                mov rax, qword [rbp - 8]	      8842	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011285	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8842	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011289	          0x4839c2	                            cmp rdx, rax	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401128c	            0x750d	                           jne 0x401129b	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401128e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011291	       0x500010000	                          add eax, 0x100	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4011296	      0xe91f020000	                           jmp 0x40114ba	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x401129b	        0x8345f401	                add dword [rbp - 0xc], 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x401129f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8803	syntax.c	FUNCTION_131	FOR_1
0x40112a3	            0x8b00	                    mov eax, dword [rax]	      8803	syntax.c	FUNCTION_131	FOR_1
0x40112a5	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      8803	syntax.c	FUNCTION_131	FOR_1
0x40112a8	     0xf8f3cfeffff	                            jg 0x40110ea	      8803	syntax.c	FUNCTION_131	FOR_1
0x40112ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8849	syntax.c	FUNCTION_131	IF_2
0x40112b2	            0x8b00	                    mov eax, dword [rax]	      8849	syntax.c	FUNCTION_131	IF_2
0x40112b4	       0x500010000	                          add eax, 0x100	      8849	syntax.c	FUNCTION_131	IF_2
0x40112b9	      0x3dffff0000	                         cmp eax, 0xffff	      8849	syntax.c	FUNCTION_131	IF_2
0x40112be	            0x7e6b	                           jle 0x401132b	      8849	syntax.c	FUNCTION_131	IF_2
0x40112c0	    0x8b0500000000	            mov eax, dword [0x040112c6] 	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x40112c6	            0x85c0	                           test eax, eax	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x40112c8	            0x741c	                            je 0x40112e6	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x40112ca	      0xbf00000000	                              mov edi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x40112cf	      0xe800000000	                          call 0x40112d4	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x40112d4	          0x4889c7	                            mov rdi, rax	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x40112d7	      0xe800000000	                          call 0x40112dc	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x40112dc	      0xb800000000	                              mov eax, 0	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x40112e1	      0xe9d4010000	                           jmp 0x40114ba	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x40112e6	    0xc70500000000	               mov dword [0x040112f0], 1	      8861	syntax.c	FUNCTION_131	IF_2
0x40112f0	      0xe800000000	                          call 0x40112f5	      8863	syntax.c	FUNCTION_131	IF_2	CALL_5
0x40112f5	    0xc70500000000	           mov dword [0x040112ff], 0x32 	      8865	syntax.c	FUNCTION_131	IF_2
0x40112ff	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4011306	            0xeb0e	                           jmp 0x4011316	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4011308	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x401130b	            0x89c7	                            mov edi, eax	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x401130d	      0xe8a8170000	                    call sym.set_hl_attr	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x4011312	        0x8345f401	                add dword [rbp - 0xc], 1	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4011316	    0x8b0500000000	            mov eax, dword [0x0401131c] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x401131c	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x401131f	            0x7fe7	                            jg 0x4011308	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4011321	    0xc70500000000	               mov dword [0x0401132b], 0	      8870	syntax.c	FUNCTION_131	IF_2
0x401132b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x401132f	      0xbe01000000	                              mov esi, 1	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x4011334	          0x4889c7	                            mov rdi, rax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x4011337	      0xe800000000	                          call 0x401133c	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x401133c	            0x85c0	                           test eax, eax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x401133e	            0x750a	                           jne 0x401134a	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x4011340	      0xb800000000	                              mov eax, 0	      8877	syntax.c	FUNCTION_131	IF_4
0x4011345	      0xe970010000	                           jmp 0x40114ba	      8877	syntax.c	FUNCTION_131	IF_4
0x401134a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8879	syntax.c	FUNCTION_131
0x401134e	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      8879	syntax.c	FUNCTION_131
0x4011352	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8879	syntax.c	FUNCTION_131
0x4011356	            0x8b00	                    mov eax, dword [rax]	      8879	syntax.c	FUNCTION_131
0x4011358	          0x4863d0	                         movsxd rdx, eax	      8879	syntax.c	FUNCTION_131
0x401135b	          0x4889d0	                            mov rax, rdx	      8879	syntax.c	FUNCTION_131
0x401135e	        0x48c1e002	                              shl rax, 2	      8879	syntax.c	FUNCTION_131
0x4011362	          0x4801d0	                            add rax, rdx	      8879	syntax.c	FUNCTION_131
0x4011365	        0x48c1e003	                              shl rax, 3	      8879	syntax.c	FUNCTION_131
0x4011369	          0x4801c8	                            add rax, rcx	      8879	syntax.c	FUNCTION_131
0x401136c	        0x488945f8	                mov qword [rbp - 8], rax	      8879	syntax.c	FUNCTION_131
0x4011370	        0x488b45f8	                mov rax, qword [rbp - 8]	      8880	syntax.c	FUNCTION_131	CALL_8
0x4011374	      0xba28000000	                           mov edx, 0x28	      8880	syntax.c	FUNCTION_131	CALL_8
0x4011379	      0xbe00000000	                              mov esi, 0	      8880	syntax.c	FUNCTION_131	CALL_8
0x401137e	          0x4889c7	                            mov rdi, rax	      8880	syntax.c	FUNCTION_131	CALL_8
0x4011381	      0xe800000000	                          call 0x4011386	      8880	syntax.c	FUNCTION_131	CALL_8
0x4011386	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8881	syntax.c	FUNCTION_131
0x401138a	           0xfb710	                   movzx edx, word [rax]	      8881	syntax.c	FUNCTION_131
0x401138d	        0x488b45f8	                mov rax, qword [rbp - 8]	      8881	syntax.c	FUNCTION_131
0x4011391	          0x668910	                      mov word [rax], dx	      8881	syntax.c	FUNCTION_131
0x4011394	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8883	syntax.c	FUNCTION_131	IF_5
0x401139c	            0x7540	                           jne 0x40113de	      8883	syntax.c	FUNCTION_131	IF_5
0x401139e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8885	syntax.c	FUNCTION_131	IF_5
0x40113a2	        0x488b5008	                mov rdx, qword [rax + 8]	      8885	syntax.c	FUNCTION_131	IF_5
0x40113a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      8885	syntax.c	FUNCTION_131	IF_5
0x40113aa	        0x48895008	                mov qword [rax + 8], rdx	      8885	syntax.c	FUNCTION_131	IF_5
0x40113ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8886	syntax.c	FUNCTION_131	IF_5
0x40113b2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8886	syntax.c	FUNCTION_131	IF_5
0x40113b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      8886	syntax.c	FUNCTION_131	IF_5
0x40113ba	        0x48895010	             mov qword [rax + 0x10], rdx	      8886	syntax.c	FUNCTION_131	IF_5
0x40113be	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8887	syntax.c	FUNCTION_131	IF_5
0x40113c2	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8887	syntax.c	FUNCTION_131	IF_5
0x40113c6	        0x488b45f8	                mov rax, qword [rbp - 8]	      8887	syntax.c	FUNCTION_131	IF_5
0x40113ca	        0x48895018	             mov qword [rax + 0x18], rdx	      8887	syntax.c	FUNCTION_131	IF_5
0x40113ce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8888	syntax.c	FUNCTION_131	IF_5
0x40113d2	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      8888	syntax.c	FUNCTION_131	IF_5
0x40113d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      8888	syntax.c	FUNCTION_131	IF_5
0x40113da	        0x48895020	             mov qword [rax + 0x20], rdx	      8888	syntax.c	FUNCTION_131	IF_5
0x40113de	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8894	syntax.c	FUNCTION_131	IF_6
0x40113e6	            0x756e	                           jne 0x4011456	      8894	syntax.c	FUNCTION_131	IF_6
0x40113e8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x40113ec	        0x488b4008	                mov rax, qword [rax + 8]	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x40113f0	          0x4885c0	                           test rax, rax	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x40113f3	            0x750e	                           jne 0x4011403	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x40113f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      8897	syntax.c	FUNCTION_131	IF_6	IF_7
0x40113f9	    0x48c740080000	                  mov qword [rax + 8], 0	      8897	syntax.c	FUNCTION_131	IF_6	IF_7
0x4011401	            0xeb1b	                           jmp 0x401141e	      8897	syntax.c	FUNCTION_131	IF_6	IF_7
0x4011403	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x4011407	        0x488b4008	                mov rax, qword [rax + 8]	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x401140b	          0x4889c7	                            mov rdi, rax	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x401140e	      0xe800000000	                          call 0x4011413	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x4011413	          0x4889c2	                            mov rdx, rax	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x4011416	        0x488b45f8	                mov rax, qword [rbp - 8]	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x401141a	        0x48895008	                mov qword [rax + 8], rdx	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x401141e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x4011422	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x4011426	          0x4885c0	                           test rax, rax	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x4011429	            0x750e	                           jne 0x4011439	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x401142b	        0x488b45f8	                mov rax, qword [rbp - 8]	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x401142f	    0x48c740100000	               mov qword [rax + 0x10], 0	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x4011437	            0xeb67	                           jmp 0x40114a0	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x4011439	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x401143d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x4011441	          0x4889c7	                            mov rdi, rax	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x4011444	      0xe800000000	                          call 0x4011449	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x4011449	          0x4889c2	                            mov rdx, rax	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x401144c	        0x488b45f8	                mov rax, qword [rbp - 8]	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x4011450	        0x48895010	             mov qword [rax + 0x10], rdx	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x4011454	            0xeb4a	                           jmp 0x40114a0	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x4011456	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8905	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x401145e	            0x7540	                           jne 0x40114a0	      8905	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011460	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011464	         0xfb75008	               movzx edx, word [rax + 8]	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011468	        0x488b45f8	                mov rax, qword [rbp - 8]	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x401146c	        0x66895008	                  mov word [rax + 8], dx	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011470	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011474	         0xfb7500a	            movzx edx, word [rax + 0xa] 	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011478	        0x488b45f8	                mov rax, qword [rbp - 8]	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x401147c	        0x6689500a	                mov word [rax + 0xa], dx	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011480	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011484	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011488	        0x488b45f8	                mov rax, qword [rbp - 8]	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x401148c	        0x48895010	             mov qword [rax + 0x10], rdx	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011490	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011494	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4011498	        0x488b45f8	                mov rax, qword [rbp - 8]	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x401149c	        0x48895018	             mov qword [rax + 0x18], rdx	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x40114a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8914	syntax.c	FUNCTION_131
0x40114a4	            0x8b00	                    mov eax, dword [rax]	      8914	syntax.c	FUNCTION_131
0x40114a6	          0x8d5001	                      lea edx, [rax + 1]	      8914	syntax.c	FUNCTION_131
0x40114a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8914	syntax.c	FUNCTION_131
0x40114ad	            0x8910	                    mov dword [rax], edx	      8914	syntax.c	FUNCTION_131
0x40114af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8915	syntax.c	FUNCTION_131
0x40114b3	            0x8b00	                    mov eax, dword [rax]	      8915	syntax.c	FUNCTION_131
0x40114b5	       0x5ff000000	                           add eax, 0xff	      8915	syntax.c	FUNCTION_131
0x40114ba	              0xc9	                                   leave	      8916	syntax.c	FUNCTION_131
0x40114bb	              0xc3	                                     ret	      8916	syntax.c	FUNCTION_131
syn_cmd_cluster	functions,0:IF,11:SWITCH,0:FOR,1:CALL,21:ELSE,4:WHILE,0:DO,0	204
0x400acda	              0x55	                                push rbp	      5649	syntax.c	FUNCTION_88
0x400acdb	          0x4889e5	                            mov rbp, rsp	      5649	syntax.c	FUNCTION_88
0x400acde	              0x53	                                push rbx	      5649	syntax.c	FUNCTION_88
0x400acdf	        0x4883ec58	                           sub rsp, 0x58	      5649	syntax.c	FUNCTION_88
0x400ace3	        0x48897da8	             mov qword [rbp - 0x58], rdi	      5649	syntax.c	FUNCTION_88
0x400ace7	          0x8975a4	             mov dword [rbp - 0x5c], esi	      5649	syntax.c	FUNCTION_88
0x400acea	    0x64488b042528	                mov rax, qword fs:[0x28]	      5649	syntax.c	FUNCTION_88
0x400acf3	        0x488945e8	             mov qword [rbp - 0x18], rax	      5649	syntax.c	FUNCTION_88
0x400acf7	            0x31c0	                            xor eax, eax	      5649	syntax.c	FUNCTION_88
0x400acf9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5650	syntax.c	FUNCTION_88
0x400acfd	          0x488b00	                    mov rax, qword [rax]	      5650	syntax.c	FUNCTION_88
0x400ad00	        0x488945e0	             mov qword [rbp - 0x20], rax	      5650	syntax.c	FUNCTION_88
0x400ad04	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      5655	syntax.c	FUNCTION_88
0x400ad0b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5659	syntax.c	FUNCTION_88	CALL_1
0x400ad0f	          0x4889c7	                            mov rdi, rax	      5659	syntax.c	FUNCTION_88	CALL_1
0x400ad12	      0xe800000000	                          call 0x400ad17	      5659	syntax.c	FUNCTION_88	CALL_1
0x400ad17	          0x4889c2	                            mov rdx, rax	      5659	syntax.c	FUNCTION_88	CALL_1
0x400ad1a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5659	syntax.c	FUNCTION_88	CALL_1
0x400ad1e	        0x48895008	                mov qword [rax + 8], rdx	      5659	syntax.c	FUNCTION_88	CALL_1
0x400ad22	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5660	syntax.c	FUNCTION_88	IF_1
0x400ad26	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5660	syntax.c	FUNCTION_88	IF_1
0x400ad29	            0x85c0	                           test eax, eax	      5660	syntax.c	FUNCTION_88	IF_1
0x400ad2b	     0xf857d020000	                           jne 0x400afae	      5660	syntax.c	FUNCTION_88	IF_1
0x400ad31	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      5663	syntax.c	FUNCTION_88	CALL_2
0x400ad35	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5663	syntax.c	FUNCTION_88	CALL_2
0x400ad39	          0x4889d6	                            mov rsi, rdx	      5663	syntax.c	FUNCTION_88	CALL_2
0x400ad3c	          0x4889c7	                            mov rdi, rax	      5663	syntax.c	FUNCTION_88	CALL_2
0x400ad3f	      0xe8e6d8ffff	                 call sym.get_group_name	      5663	syntax.c	FUNCTION_88	CALL_2
0x400ad44	        0x488945d0	             mov qword [rbp - 0x30], rax	      5663	syntax.c	FUNCTION_88	CALL_2
0x400ad48	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5665	syntax.c	FUNCTION_88	IF_2
0x400ad4c	          0x4885c0	                           test rax, rax	      5665	syntax.c	FUNCTION_88	IF_2
0x400ad4f	     0xf8405020000	                            je 0x400af5a	      5665	syntax.c	FUNCTION_88	IF_2
0x400ad55	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ad59	          0x4889c2	                            mov rdx, rax	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ad5c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ad60	          0x4829c2	                            sub rdx, rax	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ad63	          0x4889d0	                            mov rax, rdx	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ad66	            0x89c2	                            mov edx, eax	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ad68	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ad6c	            0x89d6	                            mov esi, edx	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ad6e	          0x4889c7	                            mov rdi, rax	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ad71	      0xe8d6fcffff	              call sym.syn_check_cluster	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ad76	          0x8945c4	             mov dword [rbp - 0x3c], eax	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ad79	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5668	syntax.c	FUNCTION_88	IF_2	IF_3
0x400ad7d	     0xf842e020000	                            je 0x400afb1	      5668	syntax.c	FUNCTION_88	IF_2	IF_3
0x400ad83	    0x816dc4d85900	          sub dword [rbp - 0x3c], 0x59d8	      5670	syntax.c	FUNCTION_88	IF_2
0x400ad8a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ad8e	      0xba03000000	                              mov edx, 3	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ad93	      0xbe00000000	                              mov esi, 0	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ad98	          0x4889c7	                            mov rdi, rax	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ad9b	      0xe800000000	                          call 0x400ada0	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ada0	            0x85c0	                           test eax, eax	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ada2	            0x7540	                           jne 0x400ade4	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ada4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400ada8	        0x4883c003	                              add rax, 3	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adac	           0xfb600	                   movzx eax, byte [rax]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adaf	            0x3c20	                            cmp al, 0x20	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adb1	            0x741e	                            je 0x400add1	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adb3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adb7	        0x4883c003	                              add rax, 3	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adbb	           0xfb600	                   movzx eax, byte [rax]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adbe	            0x3c09	                               cmp al, 9	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adc0	            0x740f	                            je 0x400add1	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adc2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adc6	        0x4883c003	                              add rax, 3	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adca	           0xfb600	                   movzx eax, byte [rax]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adcd	            0x3c3d	                            cmp al, 0x3d	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400adcf	            0x7513	                           jne 0x400ade4	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400add1	    0xc745bc030000	               mov dword [rbp - 0x44], 3	      5677	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0x400add8	    0xc745c0020000	               mov dword [rbp - 0x40], 2	      5678	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0x400addf	      0xe9b4000000	                           jmp 0x400ae98	      5678	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0x400ade4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400ade8	      0xba06000000	                              mov edx, 6	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400aded	      0xbe00000000	                              mov esi, 0	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400adf2	          0x4889c7	                            mov rdi, rax	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400adf5	      0xe800000000	                          call 0x400adfa	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400adfa	            0x85c0	                           test eax, eax	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400adfc	            0x753d	                           jne 0x400ae3b	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400adfe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae02	        0x4883c006	                              add rax, 6	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae06	           0xfb600	                   movzx eax, byte [rax]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae09	            0x3c20	                            cmp al, 0x20	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae0b	            0x741e	                            je 0x400ae2b	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae0d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae11	        0x4883c006	                              add rax, 6	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae15	           0xfb600	                   movzx eax, byte [rax]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae18	            0x3c09	                               cmp al, 9	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae1a	            0x740f	                            je 0x400ae2b	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae1c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae20	        0x4883c006	                              add rax, 6	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae24	           0xfb600	                   movzx eax, byte [rax]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae27	            0x3c3d	                            cmp al, 0x3d	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae29	            0x7510	                           jne 0x400ae3b	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ae2b	    0xc745bc060000	               mov dword [rbp - 0x44], 6	      5683	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0x400ae32	    0xc745c0030000	               mov dword [rbp - 0x40], 3	      5684	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0x400ae39	            0xeb5d	                           jmp 0x400ae98	      5684	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0x400ae3b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ae3f	      0xba08000000	                              mov edx, 8	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ae44	      0xbe00000000	                              mov esi, 0	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ae49	          0x4889c7	                            mov rdi, rax	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ae4c	      0xe800000000	                          call 0x400ae51	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ae51	            0x85c0	                           test eax, eax	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ae53	     0xf85de000000	                           jne 0x400af37	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ae59	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae5d	        0x4883c008	                              add rax, 8	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae61	           0xfb600	                   movzx eax, byte [rax]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae64	            0x3c20	                            cmp al, 0x20	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae66	            0x7422	                            je 0x400ae8a	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae68	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae6c	        0x4883c008	                              add rax, 8	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae70	           0xfb600	                   movzx eax, byte [rax]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae73	            0x3c09	                               cmp al, 9	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae75	            0x7413	                            je 0x400ae8a	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae77	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae7b	        0x4883c008	                              add rax, 8	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae7f	           0xfb600	                   movzx eax, byte [rax]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae82	            0x3c3d	                            cmp al, 0x3d	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae84	     0xf85ad000000	                           jne 0x400af37	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ae8a	    0xc745bc080000	               mov dword [rbp - 0x44], 8	      5689	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x400ae91	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      5690	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x400ae98	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      5695	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3
0x400aea0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400aea4	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400aea7	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400aeab	          0x8b75bc	             mov esi, dword [rbp - 0x44]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400aeae	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400aeb2	          0x4889c7	                            mov rdi, rax	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400aeb5	      0xe8b00b0000	                    call sym.get_id_list	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400aeba	            0x85c0	                           test eax, eax	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400aebc	            0x751b	                           jne 0x400aed9	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400aebe	        0x488b5dd0	             mov rbx, qword [rbp - 0x30]	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400aec2	      0xbf00000000	                              mov edi, 0	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400aec7	      0xe800000000	                          call 0x400aecc	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400aecc	          0x4889de	                            mov rsi, rbx	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400aecf	          0x4889c7	                            mov rdi, rax	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400aed2	      0xe800000000	                          call 0x400aed7	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400aed7	            0xeb5e	                           jmp 0x400af37	      5699	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7
0x400aed9	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0x400aedd	            0x7840	                            js 0x400af1f	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0x400aedf	    0x488b05000000	            mov rax, qword [0x0400aee6] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400aee6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400aeea	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400aef1	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400aef4	          0x4863d0	                         movsxd rdx, eax	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400aef7	          0x4889d0	                            mov rax, rdx	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400aefa	          0x4801c0	                            add rax, rax	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400aefd	          0x4801d0	                            add rax, rdx	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400af00	        0x48c1e003	                              shl rax, 3	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400af04	          0x4801c8	                            add rax, rcx	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400af07	        0x488d4810	                   lea rcx, [rax + 0x10]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400af0b	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400af0e	        0x488d45d8	                   lea rax, [rbp - 0x28]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400af12	          0x4889c6	                            mov rsi, rax	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400af15	          0x4889cf	                            mov rdi, rcx	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400af18	      0xe81bf7ffff	               call sym.syn_combine_list	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400af1d	            0xeb0c	                           jmp 0x400af2b	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400af1f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_14
0x400af23	          0x4889c7	                            mov rdi, rax	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_14
0x400af26	      0xe800000000	                          call 0x400af2b	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_14
0x400af2b	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      5706	syntax.c	FUNCTION_88	IF_2	FOR_1
0x400af32	      0xe953feffff	                           jmp 0x400ad8a	      5707	syntax.c	FUNCTION_88	IF_2	FOR_1
0x400af37	        0x837db800	               cmp dword [rbp - 0x48], 0	      5709	syntax.c	FUNCTION_88	IF_2	IF_9
0x400af3b	            0x741d	                            je 0x400af5a	      5709	syntax.c	FUNCTION_88	IF_2	IF_9
0x400af3d	      0xbf23000000	                           mov edi, 0x23	      5711	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_15
0x400af42	      0xe800000000	                          call 0x400af47	      5711	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_15
0x400af47	    0x488b05000000	            mov rax, qword [0x0400af4e] 	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x400af4e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x400af52	          0x4889c7	                            mov rdi, rax	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x400af55	      0xe800000000	                          call 0x400af5a	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x400af5a	        0x837db800	               cmp dword [rbp - 0x48], 0	      5716	syntax.c	FUNCTION_88	IF_10
0x400af5e	            0x7512	                           jne 0x400af72	      5716	syntax.c	FUNCTION_88	IF_10
0x400af60	      0xbf00000000	                              mov edi, 0	      5717	syntax.c	FUNCTION_88	CALL_18
0x400af65	      0xe800000000	                          call 0x400af6a	      5717	syntax.c	FUNCTION_88	CALL_18
0x400af6a	          0x4889c7	                            mov rdi, rax	      5717	syntax.c	FUNCTION_88	CALL_18
0x400af6d	      0xe800000000	                          call 0x400af72	      5717	syntax.c	FUNCTION_88	CALL_18
0x400af72	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400af76	          0x4885c0	                           test rax, rax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400af79	            0x7415	                            je 0x400af90	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400af7b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400af7f	           0xfb600	                   movzx eax, byte [rax]	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400af82	           0xfb6c0	                           movzx eax, al	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400af85	            0x89c7	                            mov edi, eax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400af87	      0xe800000000	                          call 0x400af8c	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400af8c	            0x85c0	                           test eax, eax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400af8e	            0x7522	                           jne 0x400afb2	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400af90	      0xbf00000000	                              mov edi, 0	      5719	syntax.c	FUNCTION_88	CALL_21
0x400af95	      0xe800000000	                          call 0x400af9a	      5719	syntax.c	FUNCTION_88	CALL_21
0x400af9a	          0x4889c2	                            mov rdx, rax	      5719	syntax.c	FUNCTION_88	CALL_21
0x400af9d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5719	syntax.c	FUNCTION_88	CALL_21
0x400afa1	          0x4889c6	                            mov rsi, rax	      5719	syntax.c	FUNCTION_88	CALL_21
0x400afa4	          0x4889d7	                            mov rdi, rdx	      5719	syntax.c	FUNCTION_88	CALL_21
0x400afa7	      0xe800000000	                          call 0x400afac	      5719	syntax.c	FUNCTION_88	CALL_21
0x400afac	            0xeb04	                           jmp 0x400afb2	      5719	syntax.c	FUNCTION_88	CALL_21
0x400afae	              0x90	                                     nop	      5661	syntax.c	FUNCTION_88	IF_1
0x400afaf	            0xeb01	                           jmp 0x400afb2	      5661	syntax.c	FUNCTION_88	IF_1
0x400afb1	              0x90	                                     nop	      5669	syntax.c	FUNCTION_88	IF_2	IF_3
0x400afb2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5720	syntax.c	FUNCTION_88
0x400afb6	    0x644833042528	                xor rax, qword fs:[0x28]	      5720	syntax.c	FUNCTION_88
0x400afbf	            0x7405	                            je 0x400afc6	      5720	syntax.c	FUNCTION_88
0x400afc1	      0xe800000000	                          call 0x400afc6	      5720	syntax.c	FUNCTION_88
0x400afc6	        0x4883c458	                           add rsp, 0x58	      5720	syntax.c	FUNCTION_88
0x400afca	              0x5b	                                 pop rbx	      5720	syntax.c	FUNCTION_88
0x400afcb	              0x5d	                                 pop rbp	      5720	syntax.c	FUNCTION_88
0x400afcc	              0xc3	                                     ret	      5720	syntax.c	FUNCTION_88
syn_scl_name2id	functions,0:IF,2:SWITCH,0:FOR,1:CALL,3:ELSE,0:WHILE,0:DO,0	64
0x400a916	              0x55	                                push rbp	      5535	syntax.c	FUNCTION_84
0x400a917	          0x4889e5	                            mov rbp, rsp	      5535	syntax.c	FUNCTION_84
0x400a91a	        0x4883ec20	                           sub rsp, 0x20	      5535	syntax.c	FUNCTION_84
0x400a91e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5535	syntax.c	FUNCTION_84
0x400a922	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5540	syntax.c	FUNCTION_84	CALL_1
0x400a926	          0x4889c7	                            mov rdi, rax	      5540	syntax.c	FUNCTION_84	CALL_1
0x400a929	      0xe800000000	                          call 0x400a92e	      5540	syntax.c	FUNCTION_84	CALL_1
0x400a92e	        0x488945f8	                mov qword [rbp - 8], rax	      5540	syntax.c	FUNCTION_84	CALL_1
0x400a932	      0x48837df800	                  cmp qword [rbp - 8], 0	      5541	syntax.c	FUNCTION_84	IF_1
0x400a937	            0x750a	                           jne 0x400a943	      5541	syntax.c	FUNCTION_84	IF_1
0x400a939	      0xb800000000	                              mov eax, 0	      5542	syntax.c	FUNCTION_84	IF_1
0x400a93e	      0xe9b5000000	                           jmp 0x400a9f8	      5542	syntax.c	FUNCTION_84	IF_1
0x400a943	    0x488b05000000	            mov rax, qword [0x0400a94a] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x400a94a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x400a94e	    0x8b8078020000	           mov eax, dword [rax + 0x278] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x400a954	          0x8945f4	              mov dword [rbp - 0xc], eax	      5543	syntax.c	FUNCTION_84	FOR_1
0x400a957	            0xeb70	                           jmp 0x400a9c9	      5543	syntax.c	FUNCTION_84	FOR_1
0x400a959	    0x488b05000000	            mov rax, qword [0x0400a960] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a960	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a964	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a96b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a96e	          0x4863d0	                         movsxd rdx, eax	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a971	          0x4889d0	                            mov rax, rdx	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a974	          0x4801c0	                            add rax, rax	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a977	          0x4801d0	                            add rax, rdx	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a97a	        0x48c1e003	                              shl rax, 3	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a97e	          0x4801c8	                            add rax, rcx	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a981	        0x488b4008	                mov rax, qword [rax + 8]	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a985	          0x4885c0	                           test rax, rax	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a988	            0x743f	                            je 0x400a9c9	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a98a	    0x488b05000000	            mov rax, qword [0x0400a991] 	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a991	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a995	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a99c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a99f	          0x4863d0	                         movsxd rdx, eax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9a2	          0x4889d0	                            mov rax, rdx	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9a5	          0x4801c0	                            add rax, rax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9a8	          0x4801d0	                            add rax, rdx	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9ab	        0x48c1e003	                              shl rax, 3	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9af	          0x4801c8	                            add rax, rcx	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9b2	        0x488b5008	                mov rdx, qword [rax + 8]	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9ba	          0x4889d6	                            mov rsi, rdx	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9bd	          0x4889c7	                            mov rdi, rax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9c0	      0xe800000000	                          call 0x400a9c5	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9c5	            0x85c0	                           test eax, eax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9c7	            0x740c	                            je 0x400a9d5	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400a9c9	        0x836df401	                sub dword [rbp - 0xc], 1	      5543	syntax.c	FUNCTION_84	FOR_1
0x400a9cd	        0x837df400	                cmp dword [rbp - 0xc], 0	      5543	syntax.c	FUNCTION_84	FOR_1
0x400a9d1	            0x7986	                           jns 0x400a959	      5543	syntax.c	FUNCTION_84	FOR_1
0x400a9d3	            0xeb01	                           jmp 0x400a9d6	      5543	syntax.c	FUNCTION_84	FOR_1
0x400a9d5	              0x90	                                     nop	      5546	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400a9d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5547	syntax.c	FUNCTION_84	CALL_3
0x400a9da	          0x4889c7	                            mov rdi, rax	      5547	syntax.c	FUNCTION_84	CALL_3
0x400a9dd	      0xe800000000	                          call 0x400a9e2	      5547	syntax.c	FUNCTION_84	CALL_3
0x400a9e2	        0x837df400	                cmp dword [rbp - 0xc], 0	      5548	syntax.c	FUNCTION_84
0x400a9e6	            0x780a	                            js 0x400a9f2	      5548	syntax.c	FUNCTION_84
0x400a9e8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5548	syntax.c	FUNCTION_84
0x400a9eb	       0x5d8590000	                         add eax, 0x59d8	      5548	syntax.c	FUNCTION_84
0x400a9f0	            0xeb05	                           jmp 0x400a9f7	      5548	syntax.c	FUNCTION_84
0x400a9f2	      0xb800000000	                              mov eax, 0	      5548	syntax.c	FUNCTION_84
0x400a9f7	              0x90	                                     nop	      5548	syntax.c	FUNCTION_84
0x400a9f8	              0xc9	                                   leave	      5549	syntax.c	FUNCTION_84
0x400a9f9	              0xc3	                                     ret	      5549	syntax.c	FUNCTION_84
do_highlight	functions,0:IF,132:SWITCH,0:FOR,6:CALL,168:ELSE,43:WHILE,4:DO,0	2347
0x400d89d	              0x55	                                push rbp	      7364	syntax.c	FUNCTION_116
0x400d89e	          0x4889e5	                            mov rbp, rsp	      7364	syntax.c	FUNCTION_116
0x400d8a1	              0x53	                                push rbx	      7364	syntax.c	FUNCTION_116
0x400d8a2	    0x4881ecf80100	                          sub rsp, 0x1f8	      7364	syntax.c	FUNCTION_116
0x400d8a9	    0x4889bd08feff	            mov qword [rbp - 0x1f8], rdi	      7364	syntax.c	FUNCTION_116
0x400d8b0	    0x89b504feffff	            mov dword [rbp - 0x1fc], esi	      7364	syntax.c	FUNCTION_116
0x400d8b6	    0x899500feffff	            mov dword [rbp - 0x200], edx	      7364	syntax.c	FUNCTION_116
0x400d8bc	    0x64488b042528	                mov rax, qword fs:[0x28]	      7364	syntax.c	FUNCTION_116
0x400d8c5	        0x488945e8	             mov qword [rbp - 0x18], rax	      7364	syntax.c	FUNCTION_116
0x400d8c9	            0x31c0	                            xor eax, eax	      7364	syntax.c	FUNCTION_116
0x400d8cb	    0x48c78578feff	              mov qword [rbp - 0x188], 0	      7370	syntax.c	FUNCTION_116
0x400d8d6	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      7370	syntax.c	FUNCTION_116
0x400d8e1	    0xc78524feffff	              mov dword [rbp - 0x1dc], 0	      7378	syntax.c	FUNCTION_116
0x400d8eb	    0xc78528feffff	              mov dword [rbp - 0x1d8], 0	      7379	syntax.c	FUNCTION_116
0x400d8f5	    0xc7852cfeffff	              mov dword [rbp - 0x1d4], 0	      7380	syntax.c	FUNCTION_116
0x400d8ff	    0xc78530feffff	              mov dword [rbp - 0x1d0], 0	      7381	syntax.c	FUNCTION_116
0x400d909	    0xc78534feffff	              mov dword [rbp - 0x1cc], 0	      7382	syntax.c	FUNCTION_116
0x400d913	    0xc7853cfeffff	              mov dword [rbp - 0x1c4], 0	      7384	syntax.c	FUNCTION_116
0x400d91d	    0xc78540feffff	              mov dword [rbp - 0x1c0], 0	      7386	syntax.c	FUNCTION_116
0x400d927	    0xc78544feffff	              mov dword [rbp - 0x1bc], 0	      7398	syntax.c	FUNCTION_116
0x400d931	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0x400d938	           0xfb600	                   movzx eax, byte [rax]	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0x400d93b	           0xfb6c0	                           movzx eax, al	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0x400d93e	            0x89c7	                            mov edi, eax	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0x400d940	      0xe800000000	                          call 0x400d945	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0x400d945	            0x85c0	                           test eax, eax	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0x400d947	            0x7447	                            je 0x400d990	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0x400d949	    0x48c78588feff	              mov qword [rbp - 0x178], 1	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400d954	            0xeb16	                           jmp 0x400d96c	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400d956	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7408	syntax.c	FUNCTION_116	IF_1	CALL_2
0x400d95d	            0x89c7	                            mov edi, eax	      7408	syntax.c	FUNCTION_116	IF_1	CALL_2
0x400d95f	      0xe898430000	             call sym.highlight_list_one	      7408	syntax.c	FUNCTION_116	IF_1	CALL_2
0x400d964	    0x48838588feff	              add qword [rbp - 0x178], 1	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400d96c	    0x8b0500000000	            mov eax, dword [0x0400d972] 	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400d972	            0x4898	                                    cdqe	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400d974	    0x483b8588feff	            cmp rax, qword [rbp - 0x178]	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400d97b	     0xf8c6e270000	                            jl 0x40100ef	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400d981	    0x8b0500000000	            mov eax, dword [0x0400d987] 	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400d987	            0x85c0	                           test eax, eax	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400d989	            0x74cb	                            je 0x400d956	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0x400d98b	      0xe95f270000	                           jmp 0x40100ef	      7409	syntax.c	FUNCTION_116	IF_1
0x400d990	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7415	syntax.c	FUNCTION_116	CALL_3
0x400d997	          0x4889c7	                            mov rdi, rax	      7415	syntax.c	FUNCTION_116	CALL_3
0x400d99a	      0xe800000000	                          call 0x400d99f	      7415	syntax.c	FUNCTION_116	CALL_3
0x400d99f	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7415	syntax.c	FUNCTION_116	CALL_3
0x400d9a6	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      7416	syntax.c	FUNCTION_116	CALL_4
0x400d9ad	          0x4889c7	                            mov rdi, rax	      7416	syntax.c	FUNCTION_116	CALL_4
0x400d9b0	      0xe800000000	                          call 0x400d9b5	      7416	syntax.c	FUNCTION_116	CALL_4
0x400d9b5	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7416	syntax.c	FUNCTION_116	CALL_4
0x400d9bc	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400d9c3	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400d9ca	          0x4829c2	                            sub rdx, rax	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400d9cd	          0x4889d0	                            mov rax, rdx	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400d9d0	          0x4889c2	                            mov rdx, rax	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400d9d3	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400d9da	      0xbe00000000	                              mov esi, 0	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400d9df	          0x4889c7	                            mov rdi, rax	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400d9e2	      0xe800000000	                          call 0x400d9e7	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400d9e7	            0x85c0	                           test eax, eax	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400d9e9	            0x7544	                           jne 0x400da2f	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0x400d9eb	    0xc78528feffff	              mov dword [rbp - 0x1d8], 1	      7423	syntax.c	FUNCTION_116	IF_2
0x400d9f5	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7424	syntax.c	FUNCTION_116	IF_2
0x400d9fc	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      7424	syntax.c	FUNCTION_116	IF_2
0x400da03	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7425	syntax.c	FUNCTION_116	IF_2	CALL_6
0x400da0a	          0x4889c7	                            mov rdi, rax	      7425	syntax.c	FUNCTION_116	IF_2	CALL_6
0x400da0d	      0xe800000000	                          call 0x400da12	      7425	syntax.c	FUNCTION_116	IF_2	CALL_6
0x400da12	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7425	syntax.c	FUNCTION_116	IF_2	CALL_6
0x400da19	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      7426	syntax.c	FUNCTION_116	IF_2	CALL_7
0x400da20	          0x4889c7	                            mov rdi, rax	      7426	syntax.c	FUNCTION_116	IF_2	CALL_7
0x400da23	      0xe800000000	                          call 0x400da28	      7426	syntax.c	FUNCTION_116	IF_2	CALL_7
0x400da28	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7426	syntax.c	FUNCTION_116	IF_2	CALL_7
0x400da2f	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400da36	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400da3d	          0x4829c2	                            sub rdx, rax	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400da40	          0x4889d0	                            mov rax, rdx	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400da43	          0x4889c2	                            mov rdx, rax	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400da46	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400da4d	      0xbe00000000	                              mov esi, 0	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400da52	          0x4889c7	                            mov rdi, rax	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400da55	      0xe800000000	                          call 0x400da5a	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400da5a	            0x85c0	                           test eax, eax	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400da5c	            0x750a	                           jne 0x400da68	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0x400da5e	    0xc7852cfeffff	              mov dword [rbp - 0x1d4], 1	      7433	syntax.c	FUNCTION_116	IF_3
0x400da68	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400da6f	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400da76	          0x4829c2	                            sub rdx, rax	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400da79	          0x4889d0	                            mov rax, rdx	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400da7c	          0x4889c2	                            mov rdx, rax	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400da7f	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400da86	      0xbe00000000	                              mov esi, 0	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400da8b	          0x4889c7	                            mov rdi, rax	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400da8e	      0xe800000000	                          call 0x400da93	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400da93	            0x85c0	                           test eax, eax	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400da95	            0x750a	                           jne 0x400daa1	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0x400da97	    0xc78530feffff	              mov dword [rbp - 0x1d0], 1	      7435	syntax.c	FUNCTION_116	IF_4
0x400daa1	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400daa8	     0xf8591000000	                           jne 0x400db3f	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400daae	    0x83bd30feffff	              cmp dword [rbp - 0x1d0], 0	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400dab5	     0xf8584000000	                           jne 0x400db3f	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400dabb	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400dac2	           0xfb600	                   movzx eax, byte [rax]	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400dac5	           0xfb6c0	                           movzx eax, al	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400dac8	            0x89c7	                            mov edi, eax	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400daca	      0xe800000000	                          call 0x400dacf	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400dacf	            0x85c0	                           test eax, eax	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400dad1	            0x746c	                            je 0x400db3f	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0x400dad3	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400dada	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400dae1	          0x4829c2	                            sub rdx, rax	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400dae4	          0x4889d0	                            mov rax, rdx	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400dae7	            0x89c2	                            mov edx, eax	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400dae9	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400daf0	            0x89d6	                            mov esi, edx	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400daf2	          0x4889c7	                            mov rdi, rax	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400daf5	      0xe800000000	                          call 0x400dafa	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400dafa	    0x898550feffff	            mov dword [rbp - 0x1b0], eax	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0x400db00	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	      7443	syntax.c	FUNCTION_116	IF_5	IF_6
0x400db07	            0x7524	                           jne 0x400db2d	      7443	syntax.c	FUNCTION_116	IF_5	IF_6
0x400db09	      0xbf00000000	                              mov edi, 0	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400db0e	      0xe800000000	                          call 0x400db13	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400db13	          0x4889c2	                            mov rdx, rax	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400db16	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400db1d	          0x4889c6	                            mov rsi, rax	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400db20	          0x4889d7	                            mov rdi, rdx	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400db23	      0xe800000000	                          call 0x400db28	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0x400db28	      0xe9cc250000	                           jmp 0x40100f9	      7447	syntax.c	FUNCTION_116	IF_5
0x400db2d	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	      7446	syntax.c	FUNCTION_116	IF_5	CALL_14
0x400db33	            0x89c7	                            mov edi, eax	      7446	syntax.c	FUNCTION_116	IF_5	CALL_14
0x400db35	      0xe8c2410000	             call sym.highlight_list_one	      7446	syntax.c	FUNCTION_116	IF_5	CALL_14
0x400db3a	      0xe9ba250000	                           jmp 0x40100f9	      7447	syntax.c	FUNCTION_116	IF_5
0x400db3f	    0x83bd30feffff	              cmp dword [rbp - 0x1d0], 0	      7453	syntax.c	FUNCTION_116	IF_7
0x400db46	     0xf8410040000	                            je 0x400df5c	      7453	syntax.c	FUNCTION_116	IF_7
0x400db4c	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7455	syntax.c	FUNCTION_116	IF_7
0x400db53	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      7455	syntax.c	FUNCTION_116	IF_7
0x400db5a	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7462	syntax.c	FUNCTION_116	IF_7	CALL_15
0x400db61	          0x4889c7	                            mov rdi, rax	      7462	syntax.c	FUNCTION_116	IF_7	CALL_15
0x400db64	      0xe800000000	                          call 0x400db69	      7462	syntax.c	FUNCTION_116	IF_7	CALL_15
0x400db69	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      7462	syntax.c	FUNCTION_116	IF_7	CALL_15
0x400db70	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      7463	syntax.c	FUNCTION_116	IF_7	CALL_16
0x400db77	          0x4889c7	                            mov rdi, rax	      7463	syntax.c	FUNCTION_116	IF_7	CALL_16
0x400db7a	      0xe800000000	                          call 0x400db7f	      7463	syntax.c	FUNCTION_116	IF_7	CALL_16
0x400db7f	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7463	syntax.c	FUNCTION_116	IF_7	CALL_16
0x400db86	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7464	syntax.c	FUNCTION_116	IF_7	CALL_17
0x400db8d	          0x4889c7	                            mov rdi, rax	      7464	syntax.c	FUNCTION_116	IF_7	CALL_17
0x400db90	      0xe800000000	                          call 0x400db95	      7464	syntax.c	FUNCTION_116	IF_7	CALL_17
0x400db95	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7464	syntax.c	FUNCTION_116	IF_7	CALL_17
0x400db9c	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dba3	           0xfb600	                   movzx eax, byte [rax]	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dba6	           0xfb6c0	                           movzx eax, al	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dba9	            0x89c7	                            mov edi, eax	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dbab	      0xe800000000	                          call 0x400dbb0	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dbb0	            0x85c0	                           test eax, eax	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dbb2	            0x7518	                           jne 0x400dbcc	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dbb4	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dbbb	           0xfb600	                   movzx eax, byte [rax]	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dbbe	           0xfb6c0	                           movzx eax, al	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dbc1	            0x89c7	                            mov edi, eax	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dbc3	      0xe800000000	                          call 0x400dbc8	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dbc8	            0x85c0	                           test eax, eax	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dbca	            0x7424	                            je 0x400dbf0	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0x400dbcc	      0xbf00000000	                              mov edi, 0	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400dbd1	      0xe800000000	                          call 0x400dbd6	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400dbd6	          0x4889c2	                            mov rdx, rax	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400dbd9	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400dbe0	          0x4889c6	                            mov rsi, rax	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400dbe3	          0x4889d7	                            mov rdi, rdx	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400dbe6	      0xe800000000	                          call 0x400dbeb	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0x400dbeb	      0xe909250000	                           jmp 0x40100f9	      7470	syntax.c	FUNCTION_116	IF_7	IF_8
0x400dbf0	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400dbf7	          0x4889c7	                            mov rdi, rax	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400dbfa	      0xe800000000	                          call 0x400dbff	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400dbff	           0xfb600	                   movzx eax, byte [rax]	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400dc02	           0xfb6c0	                           movzx eax, al	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400dc05	            0x89c7	                            mov edi, eax	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400dc07	      0xe800000000	                          call 0x400dc0c	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400dc0c	            0x85c0	                           test eax, eax	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400dc0e	            0x7524	                           jne 0x400dc34	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0x400dc10	      0xbf00000000	                              mov edi, 0	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400dc15	      0xe800000000	                          call 0x400dc1a	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400dc1a	          0x4889c2	                            mov rdx, rax	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400dc1d	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400dc24	          0x4889c6	                            mov rsi, rax	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400dc27	          0x4889d7	                            mov rdi, rdx	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400dc2a	      0xe800000000	                          call 0x400dc2f	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0x400dc2f	      0xe9c5240000	                           jmp 0x40100f9	      7476	syntax.c	FUNCTION_116	IF_7	IF_9
0x400dc34	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400dc3b	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400dc42	          0x4829c2	                            sub rdx, rax	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400dc45	          0x4889d0	                            mov rax, rdx	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400dc48	            0x89c2	                            mov edx, eax	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400dc4a	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400dc51	            0x89d6	                            mov esi, edx	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400dc53	          0x4889c7	                            mov rdi, rax	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400dc56	      0xe800000000	                          call 0x400dc5b	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400dc5b	    0x898554feffff	            mov dword [rbp - 0x1ac], eax	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0x400dc61	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400dc68	      0xba04000000	                              mov edx, 4	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400dc6d	      0xbe00000000	                              mov esi, 0	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400dc72	          0x4889c7	                            mov rdi, rax	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400dc75	      0xe800000000	                          call 0x400dc7a	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400dc7a	            0x85c0	                           test eax, eax	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400dc7c	            0x750c	                           jne 0x400dc8a	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0x400dc7e	    0xc78548feffff	              mov dword [rbp - 0x1b8], 0	      7481	syntax.c	FUNCTION_116	IF_7	IF_10
0x400dc88	            0xeb2d	                           jmp 0x400dcb7	      7481	syntax.c	FUNCTION_116	IF_7	IF_10
0x400dc8a	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400dc91	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400dc98	          0x4829c2	                            sub rdx, rax	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400dc9b	          0x4889d0	                            mov rax, rdx	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400dc9e	            0x89c2	                            mov edx, eax	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400dca0	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400dca7	            0x89d6	                            mov esi, edx	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400dca9	          0x4889c7	                            mov rdi, rax	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400dcac	      0xe800000000	                          call 0x400dcb1	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400dcb1	    0x898548feffff	            mov dword [rbp - 0x1b8], eax	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0x400dcb7	    0x83bd54feffff	              cmp dword [rbp - 0x1ac], 0	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dcbe	     0xf8e2e240000	                           jle 0x40100f2	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dcc4	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dccb	            0x743b	                            je 0x400dd08	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dccd	    0x488b0d000000	            mov rcx, qword [0x0400dcd4] 	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dcd4	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dcda	          0x4863d0	                         movsxd rdx, eax	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dcdd	          0x4889d0	                            mov rax, rdx	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dce0	        0x48c1e003	                              shl rax, 3	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dce4	          0x4801d0	                            add rax, rdx	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dce7	          0x4801c0	                            add rax, rax	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dcea	          0x4801d0	                            add rax, rdx	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dced	        0x48c1e003	                              shl rax, 3	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dcf1	    0x482d98000000	                           sub rax, 0x98	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dcf7	          0x4801c8	                            add rax, rcx	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dcfa	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dd00	            0x85c0	                           test eax, eax	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dd02	     0xf85ea230000	                           jne 0x40100f2	      7485	syntax.c	FUNCTION_116	IF_7	IF_11
0x400dd08	    0x83bd48feffff	              cmp dword [rbp - 0x1b8], 0	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400dd0f	            0x7e62	                           jle 0x400dd73	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400dd11	    0x83bd04feffff	              cmp dword [rbp - 0x1fc], 0	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400dd18	            0x7559	                           jne 0x400dd73	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400dd1a	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400dd21	            0x7550	                           jne 0x400dd73	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0x400dd23	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_29
0x400dd29	          0x8d50ff	                      lea edx, [rax - 1]	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_29
0x400dd2c	    0x8b8528feffff	            mov eax, dword [rbp - 0x1d8]	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_29
0x400dd32	            0x89c6	                            mov esi, eax	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_29
0x400dd34	            0x89d7	                            mov edi, edx	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_29
0x400dd36	      0xe817240000	                call sym.hl_has_settings	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_29
0x400dd3b	            0x85c0	                           test eax, eax	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_29
0x400dd3d	            0x7434	                            je 0x400dd73	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_29
0x400dd3f	    0x488b05000000	            mov rax, qword [0x0400dd46] 	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0x400dd46	          0x4885c0	                           test rax, rax	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0x400dd49	     0xf8507020000	                           jne 0x400df56	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0x400dd4f	    0x83bd28feffff	              cmp dword [rbp - 0x1d8], 0	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0x400dd56	     0xf85fa010000	                           jne 0x400df56	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0x400dd5c	      0xbf00000000	                              mov edi, 0	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_31
0x400dd61	      0xe800000000	                          call 0x400dd66	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_31
0x400dd66	          0x4889c7	                            mov rdi, rax	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_31
0x400dd69	      0xe800000000	                          call 0x400dd6e	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_31
0x400dd6e	      0xe9e3010000	                           jmp 0x400df56	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0x400dd73	    0x488b0d000000	            mov rcx, qword [0x0400dd7a] 	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dd7a	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dd80	          0x4863d0	                         movsxd rdx, eax	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dd83	          0x4889d0	                            mov rax, rdx	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dd86	        0x48c1e003	                              shl rax, 3	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dd8a	          0x4801d0	                            add rax, rdx	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dd8d	          0x4801c0	                            add rax, rax	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dd90	          0x4801d0	                            add rax, rdx	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dd93	        0x48c1e003	                              shl rax, 3	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dd97	    0x482d98000000	                           sub rax, 0x98	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dd9d	          0x4801c8	                            add rax, rcx	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dda0	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dda6	    0x3b8548feffff	            cmp eax, dword [rbp - 0x1b8]	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddac	            0x7575	                           jne 0x400de23	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddae	    0x488b0d000000	            mov rcx, qword [0x0400ddb5] 	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddb5	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddbb	          0x4863d0	                         movsxd rdx, eax	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddbe	          0x4889d0	                            mov rax, rdx	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddc1	        0x48c1e003	                              shl rax, 3	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddc5	          0x4801d0	                            add rax, rdx	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddc8	          0x4801c0	                            add rax, rax	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddcb	          0x4801d0	                            add rax, rdx	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddce	        0x48c1e003	                              shl rax, 3	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddd2	    0x482d98000000	                           sub rax, 0x98	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddd8	          0x4801c8	                            add rax, rcx	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dddb	    0x8b9090000000	            mov edx, dword [rax + 0x90] 	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dde1	    0x8b0500000000	            mov eax, dword [0x0400dde7] 	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dde7	            0x39c2	                            cmp edx, eax	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dde9	            0x7538	                           jne 0x400de23	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddeb	    0x488b0d000000	            mov rcx, qword [0x0400ddf2] 	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddf2	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddf8	          0x4863d0	                         movsxd rdx, eax	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddfb	          0x4889d0	                            mov rax, rdx	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ddfe	        0x48c1e003	                              shl rax, 3	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400de02	          0x4801d0	                            add rax, rdx	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400de05	          0x4801c0	                            add rax, rax	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400de08	          0x4801d0	                            add rax, rdx	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400de0b	        0x48c1e003	                              shl rax, 3	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400de0f	    0x482d98000000	                           sub rax, 0x98	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400de15	          0x4801c8	                            add rax, rcx	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400de18	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400de1b	            0x85c0	                           test eax, eax	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400de1d	     0xf84cf220000	                            je 0x40100f2	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400de23	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7503	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de2a	            0x7569	                           jne 0x400de95	      7503	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de2c	    0x488b0d000000	            mov rcx, qword [0x0400de33] 	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de33	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de39	          0x4863d0	                         movsxd rdx, eax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de3c	          0x4889d0	                            mov rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de3f	        0x48c1e003	                              shl rax, 3	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de43	          0x4801d0	                            add rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de46	          0x4801c0	                            add rax, rax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de49	          0x4801d0	                            add rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de4c	        0x48c1e003	                              shl rax, 3	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de50	    0x482d98000000	                           sub rax, 0x98	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de56	          0x4801c1	                            add rcx, rax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de59	    0x488b35000000	            mov rsi, qword [0x0400de60] 	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de60	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de66	          0x4863d0	                         movsxd rdx, eax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de69	          0x4889d0	                            mov rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de6c	        0x48c1e003	                              shl rax, 3	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de70	          0x4801d0	                            add rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de73	          0x4801c0	                            add rax, rax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de76	          0x4801d0	                            add rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de79	        0x48c1e003	                              shl rax, 3	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de7d	    0x482d98000000	                           sub rax, 0x98	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de83	          0x4801f0	                            add rax, rsi	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de86	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de8c	          0x83c808	                               or eax, 8	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de8f	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0x400de95	    0x488b0d000000	            mov rcx, qword [0x0400de9c] 	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400de9c	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dea2	          0x4863d0	                         movsxd rdx, eax	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dea5	          0x4889d0	                            mov rax, rdx	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dea8	        0x48c1e003	                              shl rax, 3	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400deac	          0x4801d0	                            add rax, rdx	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400deaf	          0x4801c0	                            add rax, rax	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400deb2	          0x4801d0	                            add rax, rdx	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400deb5	        0x48c1e003	                              shl rax, 3	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400deb9	    0x482d98000000	                           sub rax, 0x98	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400debf	        0x488d1401	                    lea rdx, [rcx + rax]	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dec3	    0x8b8548feffff	            mov eax, dword [rbp - 0x1b8]	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dec9	    0x898288000000	             mov dword [rdx + 0x88], eax	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400decf	    0x488b0d000000	            mov rcx, qword [0x0400ded6] 	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400ded6	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dedc	          0x4863d0	                         movsxd rdx, eax	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dedf	          0x4889d0	                            mov rax, rdx	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dee2	        0x48c1e003	                              shl rax, 3	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dee6	          0x4801d0	                            add rax, rdx	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400dee9	          0x4801c0	                            add rax, rax	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400deec	          0x4801d0	                            add rax, rdx	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400deef	        0x48c1e003	                              shl rax, 3	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400def3	    0x482d98000000	                           sub rax, 0x98	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400def9	        0x488d1401	                    lea rdx, [rcx + rax]	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400defd	    0x8b0500000000	            mov eax, dword [0x0400df03] 	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df03	    0x898290000000	             mov dword [rdx + 0x90], eax	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df09	    0x488b0d000000	            mov rcx, qword [0x0400df10] 	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df10	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df16	          0x4863d0	                         movsxd rdx, eax	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df19	          0x4889d0	                            mov rax, rdx	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df1c	        0x48c1e003	                              shl rax, 3	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df20	          0x4801d0	                            add rax, rdx	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df23	          0x4801c0	                            add rax, rax	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df26	          0x4801d0	                            add rax, rdx	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df29	        0x48c1e003	                              shl rax, 3	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df2d	    0x482d98000000	                           sub rax, 0x98	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df33	          0x4801c8	                            add rax, rcx	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df36	    0xc74010000000	               mov dword [rax + 0x10], 0	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df3d	      0xbf23000000	                           mov edi, 0x23	      7510	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_32
0x400df42	      0xe800000000	                          call 0x400df47	      7510	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_32
0x400df47	    0xc70500000000	               mov dword [0x0400df51], 1	      7513	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0x400df51	      0xe99c210000	                           jmp 0x40100f2	      7517	syntax.c	FUNCTION_116	IF_7
0x400df56	              0x90	                                     nop	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0x400df57	      0xe996210000	                           jmp 0x40100f2	      7517	syntax.c	FUNCTION_116	IF_7
0x400df5c	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	      7520	syntax.c	FUNCTION_116	IF_16
0x400df63	     0xf84cd000000	                            je 0x400e036	      7520	syntax.c	FUNCTION_116	IF_16
0x400df69	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7525	syntax.c	FUNCTION_116	IF_16
0x400df70	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      7525	syntax.c	FUNCTION_116	IF_16
0x400df77	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_33
0x400df7e	           0xfb600	                   movzx eax, byte [rax]	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_33
0x400df81	           0xfb6c0	                           movzx eax, al	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_33
0x400df84	            0x89c7	                            mov edi, eax	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_33
0x400df86	      0xe800000000	                          call 0x400df8b	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_33
0x400df8b	            0x85c0	                           test eax, eax	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_33
0x400df8d	            0x747b	                            je 0x400e00a	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_33
0x400df8f	      0xbe01000000	                              mov esi, 1	      7573	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0x400df94	      0xbf00000000	                              mov edi, 0	      7573	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0x400df99	      0xe800000000	                          call 0x400df9e	      7573	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0x400df9e	      0xe800000000	                          call 0x400dfa3	      7575	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_42
0x400dfa3	    0xc78520feffff	              mov dword [rbp - 0x1e0], 0	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400dfad	            0xeb14	                           jmp 0x400dfc3	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400dfaf	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7581	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_43
0x400dfb5	            0x89c7	                            mov edi, eax	      7581	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_43
0x400dfb7	      0xe88f230000	                call sym.highlight_clear	      7581	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_43
0x400dfbc	    0x838520feffff	              add dword [rbp - 0x1e0], 1	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400dfc3	    0x8b0500000000	            mov eax, dword [0x0400dfc9] 	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400dfc9	    0x3b8520feffff	            cmp eax, dword [rbp - 0x1e0]	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400dfcf	            0x7fde	                            jg 0x400dfaf	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0x400dfd1	      0xbe01000000	                              mov esi, 1	      7582	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_44
0x400dfd6	      0xbf01000000	                              mov edi, 1	      7582	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_44
0x400dfdb	      0xe800000000	                          call 0x400dfe0	      7582	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_44
0x400dfe0	    0x8b0500000000	            mov eax, dword [0x0400dfe6] 	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0x400dfe6	            0x85c0	                           test eax, eax	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0x400dfe8	            0x750a	                           jne 0x400dff4	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0x400dfea	    0x8b0500000000	            mov eax, dword [0x0400dff0] 	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0x400dff0	            0x85c0	                           test eax, eax	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0x400dff2	            0x7407	                            je 0x400dffb	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0x400dff4	      0xe800000000	                          call 0x400dff9	      7585	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_45
0x400dff9	            0xeb05	                           jmp 0x400e000	      7585	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_45
0x400dffb	      0xe800000000	                          call 0x400e000	      7588	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_46
0x400e000	      0xe800000000	                          call 0x400e005	      7589	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_47
0x400e005	      0xe9ef200000	                           jmp 0x40100f9	      7590	syntax.c	FUNCTION_116	IF_16	IF_17
0x400e00a	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7592	syntax.c	FUNCTION_116	IF_16	CALL_48
0x400e011	          0x4889c7	                            mov rdi, rax	      7592	syntax.c	FUNCTION_116	IF_16	CALL_48
0x400e014	      0xe800000000	                          call 0x400e019	      7592	syntax.c	FUNCTION_116	IF_16	CALL_48
0x400e019	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7592	syntax.c	FUNCTION_116	IF_16	CALL_48
0x400e020	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      7593	syntax.c	FUNCTION_116	IF_16	CALL_49
0x400e027	          0x4889c7	                            mov rdi, rax	      7593	syntax.c	FUNCTION_116	IF_16	CALL_49
0x400e02a	      0xe800000000	                          call 0x400e02f	      7593	syntax.c	FUNCTION_116	IF_16	CALL_49
0x400e02f	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7593	syntax.c	FUNCTION_116	IF_16	CALL_49
0x400e036	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      7599	syntax.c	FUNCTION_116	CALL_50
0x400e03d	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7599	syntax.c	FUNCTION_116	CALL_50
0x400e044	          0x4829c2	                            sub rdx, rax	      7599	syntax.c	FUNCTION_116	CALL_50
0x400e047	          0x4889d0	                            mov rax, rdx	      7599	syntax.c	FUNCTION_116	CALL_50
0x400e04a	            0x89c2	                            mov edx, eax	      7599	syntax.c	FUNCTION_116	CALL_50
0x400e04c	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7599	syntax.c	FUNCTION_116	CALL_50
0x400e053	            0x89d6	                            mov esi, edx	      7599	syntax.c	FUNCTION_116	CALL_50
0x400e055	          0x4889c7	                            mov rdi, rax	      7599	syntax.c	FUNCTION_116	CALL_50
0x400e058	      0xe800000000	                          call 0x400e05d	      7599	syntax.c	FUNCTION_116	CALL_50
0x400e05d	    0x898550feffff	            mov dword [rbp - 0x1b0], eax	      7599	syntax.c	FUNCTION_116	CALL_50
0x400e063	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	      7600	syntax.c	FUNCTION_116	IF_21
0x400e06a	     0xf8485200000	                            je 0x40100f5	      7600	syntax.c	FUNCTION_116	IF_21
0x400e070	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	      7602	syntax.c	FUNCTION_116
0x400e076	          0x83e801	                              sub eax, 1	      7602	syntax.c	FUNCTION_116
0x400e079	    0x898520feffff	            mov dword [rbp - 0x1e0], eax	      7602	syntax.c	FUNCTION_116
0x400e07f	    0x83bd28feffff	              cmp dword [rbp - 0x1d8], 0	      7605	syntax.c	FUNCTION_116	IF_22	CALL_51
0x400e086	            0x741a	                            je 0x400e0a2	      7605	syntax.c	FUNCTION_116	IF_22	CALL_51
0x400e088	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7605	syntax.c	FUNCTION_116	IF_22	CALL_51
0x400e08e	      0xbe01000000	                              mov esi, 1	      7605	syntax.c	FUNCTION_116	IF_22	CALL_51
0x400e093	            0x89c7	                            mov edi, eax	      7605	syntax.c	FUNCTION_116	IF_22	CALL_51
0x400e095	      0xe8b8200000	                call sym.hl_has_settings	      7605	syntax.c	FUNCTION_116	IF_22	CALL_51
0x400e09a	            0x85c0	                           test eax, eax	      7605	syntax.c	FUNCTION_116	IF_22	CALL_51
0x400e09c	     0xf8556200000	                           jne 0x40100f8	      7605	syntax.c	FUNCTION_116	IF_22	CALL_51
0x400e0a2	    0x488b0d000000	            mov rcx, qword [0x0400e0a9] 	      7609	syntax.c	FUNCTION_116
0x400e0a9	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7609	syntax.c	FUNCTION_116
0x400e0af	          0x4863d0	                         movsxd rdx, eax	      7609	syntax.c	FUNCTION_116
0x400e0b2	          0x4889d0	                            mov rax, rdx	      7609	syntax.c	FUNCTION_116
0x400e0b5	        0x48c1e003	                              shl rax, 3	      7609	syntax.c	FUNCTION_116
0x400e0b9	          0x4801d0	                            add rax, rdx	      7609	syntax.c	FUNCTION_116
0x400e0bc	          0x4801c0	                            add rax, rax	      7609	syntax.c	FUNCTION_116
0x400e0bf	          0x4801d0	                            add rax, rdx	      7609	syntax.c	FUNCTION_116
0x400e0c2	        0x48c1e003	                              shl rax, 3	      7609	syntax.c	FUNCTION_116
0x400e0c6	        0x488d1401	                    lea rdx, [rcx + rax]	      7609	syntax.c	FUNCTION_116
0x400e0ca	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      7609	syntax.c	FUNCTION_116
0x400e0d1	          0x4889d6	                            mov rsi, rdx	      7609	syntax.c	FUNCTION_116
0x400e0d4	      0xba13000000	                           mov edx, 0x13	      7609	syntax.c	FUNCTION_116
0x400e0d9	          0x4889c7	                            mov rdi, rax	      7609	syntax.c	FUNCTION_116
0x400e0dc	          0x4889d1	                            mov rcx, rdx	      7609	syntax.c	FUNCTION_116
0x400e0df	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      7609	syntax.c	FUNCTION_116
0x400e0e2	    0x488b0d000000	            mov rcx, qword [0x0400e0e9] 	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e0e9	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e0ef	          0x4863d0	                         movsxd rdx, eax	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e0f2	          0x4889d0	                            mov rax, rdx	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e0f5	        0x48c1e003	                              shl rax, 3	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e0f9	          0x4801d0	                            add rax, rdx	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e0fc	          0x4801c0	                            add rax, rax	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e0ff	          0x4801d0	                            add rax, rdx	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e102	        0x48c1e003	                              shl rax, 3	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e106	          0x4801c8	                            add rax, rcx	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e109	        0x488b4008	                mov rax, qword [rax + 8]	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e10d	      0xbe00000000	                              mov esi, 0	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e112	          0x4889c7	                            mov rdi, rax	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e115	      0xe800000000	                          call 0x400e11a	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e11a	            0x85c0	                           test eax, eax	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e11c	            0x750c	                           jne 0x400e12a	      7611	syntax.c	FUNCTION_116	IF_23	CALL_52
0x400e11e	    0xc7853cfeffff	              mov dword [rbp - 0x1c4], 1	      7612	syntax.c	FUNCTION_116	IF_23
0x400e128	            0xeb46	                           jmp 0x400e170	      7612	syntax.c	FUNCTION_116	IF_23
0x400e12a	    0x488b0d000000	            mov rcx, qword [0x0400e131] 	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e131	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e137	          0x4863d0	                         movsxd rdx, eax	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e13a	          0x4889d0	                            mov rax, rdx	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e13d	        0x48c1e003	                              shl rax, 3	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e141	          0x4801d0	                            add rax, rdx	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e144	          0x4801c0	                            add rax, rax	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e147	          0x4801d0	                            add rax, rdx	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e14a	        0x48c1e003	                              shl rax, 3	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e14e	          0x4801c8	                            add rax, rcx	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e151	        0x488b4008	                mov rax, qword [rax + 8]	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e155	      0xbe00000000	                              mov esi, 0	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e15a	          0x4889c7	                            mov rdi, rax	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e15d	      0xe800000000	                          call 0x400e162	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e162	            0x85c0	                           test eax, eax	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e164	            0x750a	                           jne 0x400e170	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_53
0x400e166	    0xc78540feffff	              mov dword [rbp - 0x1c0], 1	      7615	syntax.c	FUNCTION_116	ELSE_5	IF_24
0x400e170	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	      7627	syntax.c	FUNCTION_116	IF_28
0x400e177	            0x7512	                           jne 0x400e18b	      7627	syntax.c	FUNCTION_116	IF_28
0x400e179	    0x83bd04feffff	              cmp dword [rbp - 0x1fc], 0	      7627	syntax.c	FUNCTION_116	IF_28
0x400e180	            0x7450	                            je 0x400e1d2	      7627	syntax.c	FUNCTION_116	IF_28
0x400e182	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7627	syntax.c	FUNCTION_116	IF_28
0x400e189	            0x7447	                            je 0x400e1d2	      7627	syntax.c	FUNCTION_116	IF_28
0x400e18b	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7629	syntax.c	FUNCTION_116	IF_28	CALL_57
0x400e191	            0x89c7	                            mov edi, eax	      7629	syntax.c	FUNCTION_116	IF_28	CALL_57
0x400e193	      0xe8b3210000	                call sym.highlight_clear	      7629	syntax.c	FUNCTION_116	IF_28	CALL_57
0x400e198	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	      7630	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e19f	            0x7531	                           jne 0x400e1d2	      7630	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1a1	    0x488b0d000000	            mov rcx, qword [0x0400e1a8] 	      7631	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1a8	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7631	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1ae	          0x4863d0	                         movsxd rdx, eax	      7631	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1b1	          0x4889d0	                            mov rax, rdx	      7631	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1b4	        0x48c1e003	                              shl rax, 3	      7631	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1b8	          0x4801d0	                            add rax, rdx	      7631	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1bb	          0x4801c0	                            add rax, rax	      7631	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1be	          0x4801d0	                            add rax, rdx	      7631	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1c1	        0x48c1e003	                              shl rax, 3	      7631	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1c5	          0x4801c8	                            add rax, rcx	      7631	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1c8	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      7631	syntax.c	FUNCTION_116	IF_28	IF_29
0x400e1d2	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	      7634	syntax.c	FUNCTION_116	IF_30
0x400e1d9	     0xf85ea1c0000	                           jne 0x400fec9	      7634	syntax.c	FUNCTION_116	IF_30
0x400e1df	      0xe9c31c0000	                           jmp 0x400fea7	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_58
0x400e1e4	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7637	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400e1eb	    0x48898590feff	            mov qword [rbp - 0x170], rax	      7637	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400e1f2	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7638	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0x400e1f9	           0xfb600	                   movzx eax, byte [rax]	      7638	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0x400e1fc	            0x3c3d	                            cmp al, 0x3d	      7638	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0x400e1fe	            0x7536	                           jne 0x400e236	      7638	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0x400e200	      0xbf00000000	                              mov edi, 0	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_60
0x400e205	      0xe800000000	                          call 0x400e20a	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_60
0x400e20a	          0x4889c2	                            mov rdx, rax	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_60
0x400e20d	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_60
0x400e214	          0x4889c6	                            mov rsi, rax	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_60
0x400e217	          0x4889d7	                            mov rdi, rdx	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_60
0x400e21a	      0xe800000000	                          call 0x400e21f	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_60
0x400e21f	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7641	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0x400e229	      0xe99b1c0000	                           jmp 0x400fec9	      7642	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0x400e22e	    0x48838568feff	              add qword [rbp - 0x198], 1	      7650	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2
0x400e236	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e23d	           0xfb600	                   movzx eax, byte [rax]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e240	            0x84c0	                             test al, al	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e242	            0x742a	                            je 0x400e26e	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e244	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e24b	           0xfb600	                   movzx eax, byte [rax]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e24e	            0x3c20	                            cmp al, 0x20	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e250	            0x741c	                            je 0x400e26e	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e252	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e259	           0xfb600	                   movzx eax, byte [rax]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e25c	            0x3c09	                               cmp al, 9	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e25e	            0x740e	                            je 0x400e26e	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e260	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e267	           0xfb600	                   movzx eax, byte [rax]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e26a	            0x3c3d	                            cmp al, 0x3d	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e26c	            0x75c0	                           jne 0x400e22e	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_61
0x400e26e	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7651	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_62
0x400e275	          0x4889c7	                            mov rdi, rax	      7651	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_62
0x400e278	      0xe800000000	                          call 0x400e27d	      7651	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_62
0x400e27d	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_63
0x400e284	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_63
0x400e28b	          0x4829c2	                            sub rdx, rax	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_63
0x400e28e	          0x4889d0	                            mov rax, rdx	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_63
0x400e291	            0x89c2	                            mov edx, eax	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_63
0x400e293	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_63
0x400e29a	            0x89d6	                            mov esi, edx	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_63
0x400e29c	          0x4889c7	                            mov rdi, rax	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_63
0x400e29f	      0xe800000000	                          call 0x400e2a4	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_63
0x400e2a4	    0x48898578feff	            mov qword [rbp - 0x188], rax	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_63
0x400e2ab	    0x4883bd78feff	              cmp qword [rbp - 0x188], 0	      7653	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_32
0x400e2b3	            0x750f	                           jne 0x400e2c4	      7653	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_32
0x400e2b5	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7655	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_32
0x400e2bf	      0xe9051c0000	                           jmp 0x400fec9	      7656	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_32
0x400e2c4	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_64
0x400e2cb	          0x4889c7	                            mov rdi, rax	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_64
0x400e2ce	      0xe800000000	                          call 0x400e2d3	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_64
0x400e2d3	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_64
0x400e2da	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_65
0x400e2e1	      0xbe00000000	                              mov esi, 0	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_65
0x400e2e6	          0x4889c7	                            mov rdi, rax	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_65
0x400e2e9	      0xe800000000	                          call 0x400e2ee	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_65
0x400e2ee	            0x85c0	                           test eax, eax	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_65
0x400e2f0	     0xf85b6000000	                           jne 0x400e3ac	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_65
0x400e2f6	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e2fd	            0x7435	                            je 0x400e334	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e2ff	    0x488b0d000000	            mov rcx, qword [0x0400e306] 	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e306	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e30c	          0x4863d0	                         movsxd rdx, eax	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e30f	          0x4889d0	                            mov rax, rdx	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e312	        0x48c1e003	                              shl rax, 3	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e316	          0x4801d0	                            add rax, rdx	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e319	          0x4801c0	                            add rax, rax	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e31c	          0x4801d0	                            add rax, rdx	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e31f	        0x48c1e003	                              shl rax, 3	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e323	          0x4801c8	                            add rax, rcx	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e326	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e32c	            0x85c0	                           test eax, eax	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e32e	     0xf85731b0000	                           jne 0x400fea7	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34
0x400e334	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7664	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e33b	            0x755d	                           jne 0x400e39a	      7664	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e33d	    0x488b0d000000	            mov rcx, qword [0x0400e344] 	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e344	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e34a	          0x4863d0	                         movsxd rdx, eax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e34d	          0x4889d0	                            mov rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e350	        0x48c1e003	                              shl rax, 3	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e354	          0x4801d0	                            add rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e357	          0x4801c0	                            add rax, rax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e35a	          0x4801d0	                            add rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e35d	        0x48c1e003	                              shl rax, 3	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e361	          0x4801c1	                            add rcx, rax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e364	    0x488b35000000	            mov rsi, qword [0x0400e36b] 	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e36b	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e371	          0x4863d0	                         movsxd rdx, eax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e374	          0x4889d0	                            mov rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e377	        0x48c1e003	                              shl rax, 3	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e37b	          0x4801d0	                            add rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e37e	          0x4801c0	                            add rax, rax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e381	          0x4801d0	                            add rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e384	        0x48c1e003	                              shl rax, 3	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e388	          0x4801f0	                            add rax, rsi	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e38b	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e391	          0x83c807	                               or eax, 7	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e394	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0x400e39a	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7666	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_66
0x400e3a0	            0x89c7	                            mov edi, eax	      7666	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_66
0x400e3a2	      0xe8a41f0000	                call sym.highlight_clear	      7666	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_66
0x400e3a7	      0xe9fb1a0000	                           jmp 0x400fea7	      7668	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33
0x400e3ac	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7674	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0x400e3b3	           0xfb600	                   movzx eax, byte [rax]	      7674	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0x400e3b6	            0x3c3d	                            cmp al, 0x3d	      7674	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0x400e3b8	            0x742e	                            je 0x400e3e8	      7674	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0x400e3ba	      0xbf00000000	                              mov edi, 0	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_68
0x400e3bf	      0xe800000000	                          call 0x400e3c4	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_68
0x400e3c4	          0x4889c2	                            mov rdx, rax	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_68
0x400e3c7	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_68
0x400e3ce	          0x4889c6	                            mov rsi, rax	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_68
0x400e3d1	          0x4889d7	                            mov rdi, rdx	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_68
0x400e3d4	      0xe800000000	                          call 0x400e3d9	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_68
0x400e3d9	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7677	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0x400e3e3	      0xe9e11a0000	                           jmp 0x400fec9	      7678	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0x400e3e8	    0x48838568feff	              add qword [rbp - 0x198], 1	      7680	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400e3f0	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7685	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_69
0x400e3f7	          0x4889c7	                            mov rdi, rax	      7685	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_69
0x400e3fa	      0xe800000000	                          call 0x400e3ff	      7685	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_69
0x400e3ff	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7685	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_69
0x400e406	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7686	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0x400e40d	           0xfb600	                   movzx eax, byte [rax]	      7686	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0x400e410	            0x3c27	                            cmp al, 0x27	      7686	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0x400e412	            0x7569	                           jne 0x400e47d	      7686	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0x400e414	    0x48838568feff	              add qword [rbp - 0x198], 1	      7688	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0x400e41c	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7688	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0x400e423	    0x48898570feff	            mov qword [rbp - 0x190], rax	      7688	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0x400e42a	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_70
0x400e431	      0xbe27000000	                           mov esi, 0x27	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_70
0x400e436	          0x4889c7	                            mov rdi, rax	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_70
0x400e439	      0xe800000000	                          call 0x400e43e	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_70
0x400e43e	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_70
0x400e445	    0x4883bd68feff	              cmp qword [rbp - 0x198], 0	      7690	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38
0x400e44d	            0x7552	                           jne 0x400e4a1	      7690	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38
0x400e44f	      0xbf00000000	                              mov edi, 0	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_72
0x400e454	      0xe800000000	                          call 0x400e459	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_72
0x400e459	          0x4889c2	                            mov rdx, rax	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_72
0x400e45c	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_72
0x400e463	          0x4889c6	                            mov rsi, rax	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_72
0x400e466	          0x4889d7	                            mov rdi, rdx	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_72
0x400e469	      0xe800000000	                          call 0x400e46e	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_72
0x400e46e	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7693	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38
0x400e478	      0xe94c1a0000	                           jmp 0x400fec9	      7694	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38
0x400e47d	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7699	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9
0x400e484	    0x48898570feff	            mov qword [rbp - 0x190], rax	      7699	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9
0x400e48b	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7700	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9	CALL_73
0x400e492	          0x4889c7	                            mov rdi, rax	      7700	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9	CALL_73
0x400e495	      0xe800000000	                          call 0x400e49a	      7700	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9	CALL_73
0x400e49a	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7700	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9	CALL_73
0x400e4a1	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7702	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0x400e4a8	    0x483b8570feff	            cmp rax, qword [rbp - 0x190]	      7702	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0x400e4af	            0x752e	                           jne 0x400e4df	      7702	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0x400e4b1	      0xbf00000000	                              mov edi, 0	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_75
0x400e4b6	      0xe800000000	                          call 0x400e4bb	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_75
0x400e4bb	          0x4889c2	                            mov rdx, rax	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_75
0x400e4be	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_75
0x400e4c5	          0x4889c6	                            mov rsi, rax	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_75
0x400e4c8	          0x4889d7	                            mov rdi, rdx	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_75
0x400e4cb	      0xe800000000	                          call 0x400e4d0	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_75
0x400e4d0	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7705	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0x400e4da	      0xe9ea190000	                           jmp 0x400fec9	      7706	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0x400e4df	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7708	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_76
0x400e4e6	          0x4889c7	                            mov rdi, rax	      7708	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_76
0x400e4e9	      0xe800000000	                          call 0x400e4ee	      7708	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_76
0x400e4ee	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400e4f5	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400e4fc	          0x4829c2	                            sub rdx, rax	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400e4ff	          0x4889d0	                            mov rax, rdx	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400e502	            0x89c2	                            mov edx, eax	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400e504	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400e50b	            0x89d6	                            mov esi, edx	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400e50d	          0x4889c7	                            mov rdi, rax	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400e510	      0xe800000000	                          call 0x400e515	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400e515	    0x48898580feff	            mov qword [rbp - 0x180], rax	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0x400e51c	    0x4883bd80feff	              cmp qword [rbp - 0x180], 0	      7710	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_40
0x400e524	            0x750f	                           jne 0x400e535	      7710	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_40
0x400e526	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7712	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_40
0x400e530	      0xe994190000	                           jmp 0x400fec9	      7713	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_40
0x400e535	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7715	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0x400e53c	           0xfb600	                   movzx eax, byte [rax]	      7715	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0x400e53f	            0x3c27	                            cmp al, 0x27	      7715	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0x400e541	            0x7508	                           jne 0x400e54b	      7715	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0x400e543	    0x48838568feff	              add qword [rbp - 0x198], 1	      7716	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0x400e54b	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_78
0x400e552	      0xbe00000000	                              mov esi, 0	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_78
0x400e557	          0x4889c7	                            mov rdi, rax	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_78
0x400e55a	      0xe800000000	                          call 0x400e55f	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_78
0x400e55f	            0x85c0	                           test eax, eax	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_78
0x400e561	            0x7434	                            je 0x400e597	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_78
0x400e563	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_79
0x400e56a	      0xbe00000000	                              mov esi, 0	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_79
0x400e56f	          0x4889c7	                            mov rdi, rax	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_79
0x400e572	      0xe800000000	                          call 0x400e577	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_79
0x400e577	            0x85c0	                           test eax, eax	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_79
0x400e579	            0x741c	                            je 0x400e597	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_79
0x400e57b	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_80
0x400e582	      0xbe00000000	                              mov esi, 0	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_80
0x400e587	          0x4889c7	                            mov rdi, rax	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_80
0x400e58a	      0xe800000000	                          call 0x400e58f	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_80
0x400e58f	            0x85c0	                           test eax, eax	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_80
0x400e591	     0xf851f040000	                           jne 0x400e9b6	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_80
0x400e597	    0xc7851cfeffff	              mov dword [rbp - 0x1e4], 0	      7725	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42
0x400e5a1	    0xc78514feffff	              mov dword [rbp - 0x1ec], 0	      7726	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42
0x400e5ab	      0xe9f2000000	                           jmp 0x400e6a2	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400e5b0	    0x48c78588feff	            mov qword [rbp - 0x178], 0xa	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400e5bb	            0xeb79	                           jmp 0x400e636	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400e5bd	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_81
0x400e5c4	    0x488b04c50000	                  mov rax, qword [rax*8]	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_81
0x400e5cc	          0x4889c7	                            mov rdi, rax	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_81
0x400e5cf	      0xe800000000	                          call 0x400e5d4	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_81
0x400e5d4	    0x898518feffff	            mov dword [rbp - 0x1e8], eax	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_81
0x400e5da	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e5e0	          0x4863d0	                         movsxd rdx, eax	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e5e3	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e5ea	    0x488b04c50000	                  mov rax, qword [rax*8]	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e5f2	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e5f8	          0x4863f1	                         movsxd rsi, ecx	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e5fb	    0x488b8d80feff	            mov rcx, qword [rbp - 0x180]	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e602	          0x4801f1	                            add rcx, rsi	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e605	          0x4889c6	                            mov rsi, rax	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e608	          0x4889cf	                            mov rdi, rcx	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e60b	      0xe800000000	                          call 0x400e610	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e610	            0x85c0	                           test eax, eax	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e612	            0x7522	                           jne 0x400e636	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_82
0x400e614	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7734	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0x400e61b	    0x8b0485000000	                  mov eax, dword [rax*4]	      7734	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0x400e622	     0x9851cfeffff	             or dword [rbp - 0x1e4], eax	      7734	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0x400e628	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      7735	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0x400e62e	     0x18514feffff	            add dword [rbp - 0x1ec], eax	      7735	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0x400e634	            0xeb16	                           jmp 0x400e64c	      7736	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0x400e636	    0x4883ad88feff	              sub qword [rbp - 0x178], 1	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400e63e	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400e646	     0xf8971ffffff	                           jns 0x400e5bd	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0x400e64c	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      7739	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44
0x400e654	            0x792b	                           jns 0x400e681	      7739	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44
0x400e656	      0xbf00000000	                              mov edi, 0	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_84
0x400e65b	      0xe800000000	                          call 0x400e660	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_84
0x400e660	          0x4889c2	                            mov rdx, rax	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_84
0x400e663	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_84
0x400e66a	          0x4889c6	                            mov rsi, rax	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_84
0x400e66d	          0x4889d7	                            mov rdi, rdx	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_84
0x400e670	      0xe800000000	                          call 0x400e675	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_84
0x400e675	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7742	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44
0x400e67f	            0xeb3f	                           jmp 0x400e6c0	      7743	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44
0x400e681	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400e687	          0x4863d0	                         movsxd rdx, eax	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400e68a	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400e691	          0x4801d0	                            add rax, rdx	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400e694	           0xfb600	                   movzx eax, byte [rax]	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400e697	            0x3c2c	                            cmp al, 0x2c	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400e699	            0x7507	                           jne 0x400e6a2	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400e69b	    0x838514feffff	              add dword [rbp - 0x1ec], 1	      7746	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0x400e6a2	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400e6a8	          0x4863d0	                         movsxd rdx, eax	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400e6ab	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400e6b2	          0x4801d0	                            add rax, rdx	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400e6b5	           0xfb600	                   movzx eax, byte [rax]	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400e6b8	            0x84c0	                             test al, al	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400e6ba	     0xf85f0feffff	                           jne 0x400e5b0	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0x400e6c0	    0x83bd34feffff	              cmp dword [rbp - 0x1cc], 0	      7748	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_46
0x400e6c7	     0xf85f8170000	                           jne 0x400fec5	      7748	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_46
0x400e6cd	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400e6d4	           0xfb600	                   movzx eax, byte [rax]	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400e6d7	            0x3c54	                            cmp al, 0x54	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400e6d9	     0xf85dd000000	                           jne 0x400e7bc	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400e6df	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e6e6	            0x7438	                            je 0x400e720	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e6e8	    0x488b0d000000	            mov rcx, qword [0x0400e6ef] 	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e6ef	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e6f5	          0x4863d0	                         movsxd rdx, eax	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e6f8	          0x4889d0	                            mov rax, rdx	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e6fb	        0x48c1e003	                              shl rax, 3	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e6ff	          0x4801d0	                            add rax, rdx	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e702	          0x4801c0	                            add rax, rax	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e705	          0x4801d0	                            add rax, rdx	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e708	        0x48c1e003	                              shl rax, 3	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e70c	          0x4801c8	                            add rax, rcx	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e70f	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e715	          0x83e001	                              and eax, 1	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e718	            0x85c0	                           test eax, eax	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e71a	     0xf85d1160000	                           jne 0x400fdf1	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e720	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7754	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e727	            0x755d	                           jne 0x400e786	      7754	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e729	    0x488b0d000000	            mov rcx, qword [0x0400e730] 	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e730	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e736	          0x4863d0	                         movsxd rdx, eax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e739	          0x4889d0	                            mov rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e73c	        0x48c1e003	                              shl rax, 3	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e740	          0x4801d0	                            add rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e743	          0x4801c0	                            add rax, rax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e746	          0x4801d0	                            add rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e749	        0x48c1e003	                              shl rax, 3	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e74d	          0x4801c1	                            add rcx, rax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e750	    0x488b35000000	            mov rsi, qword [0x0400e757] 	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e757	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e75d	          0x4863d0	                         movsxd rdx, eax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e760	          0x4889d0	                            mov rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e763	        0x48c1e003	                              shl rax, 3	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e767	          0x4801d0	                            add rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e76a	          0x4801c0	                            add rax, rax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e76d	          0x4801d0	                            add rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e770	        0x48c1e003	                              shl rax, 3	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e774	          0x4801f0	                            add rax, rsi	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e777	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e77d	          0x83c801	                               or eax, 1	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e780	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0x400e786	    0x488b0d000000	            mov rcx, qword [0x0400e78d] 	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e78d	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e793	          0x4863d0	                         movsxd rdx, eax	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e796	          0x4889d0	                            mov rax, rdx	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e799	        0x48c1e003	                              shl rax, 3	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e79d	          0x4801d0	                            add rax, rdx	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e7a0	          0x4801c0	                            add rax, rax	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e7a3	          0x4801d0	                            add rax, rdx	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e7a6	        0x48c1e003	                              shl rax, 3	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e7aa	        0x488d1401	                    lea rdx, [rcx + rax]	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e7ae	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e7b4	          0x894214	             mov dword [rdx + 0x14], eax	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48
0x400e7b7	      0xe935160000	                           jmp 0x400fdf1	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400e7bc	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7759	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50
0x400e7c3	           0xfb600	                   movzx eax, byte [rax]	      7759	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50
0x400e7c6	            0x3c43	                            cmp al, 0x43	      7759	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50
0x400e7c8	     0xf850b010000	                           jne 0x400e8d9	      7759	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50
0x400e7ce	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7d5	            0x7438	                            je 0x400e80f	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7d7	    0x488b0d000000	            mov rcx, qword [0x0400e7de] 	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7de	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7e4	          0x4863d0	                         movsxd rdx, eax	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7e7	          0x4889d0	                            mov rax, rdx	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7ea	        0x48c1e003	                              shl rax, 3	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7ee	          0x4801d0	                            add rax, rdx	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7f1	          0x4801c0	                            add rax, rax	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7f4	          0x4801d0	                            add rax, rdx	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7f7	        0x48c1e003	                              shl rax, 3	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7fb	          0x4801c8	                            add rax, rcx	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e7fe	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e804	          0x83e002	                              and eax, 2	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e807	            0x85c0	                           test eax, eax	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e809	     0xf85e2150000	                           jne 0x400fdf1	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e80f	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7763	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e816	            0x755d	                           jne 0x400e875	      7763	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e818	    0x488b0d000000	            mov rcx, qword [0x0400e81f] 	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e81f	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e825	          0x4863d0	                         movsxd rdx, eax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e828	          0x4889d0	                            mov rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e82b	        0x48c1e003	                              shl rax, 3	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e82f	          0x4801d0	                            add rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e832	          0x4801c0	                            add rax, rax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e835	          0x4801d0	                            add rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e838	        0x48c1e003	                              shl rax, 3	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e83c	          0x4801c1	                            add rcx, rax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e83f	    0x488b35000000	            mov rsi, qword [0x0400e846] 	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e846	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e84c	          0x4863d0	                         movsxd rdx, eax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e84f	          0x4889d0	                            mov rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e852	        0x48c1e003	                              shl rax, 3	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e856	          0x4801d0	                            add rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e859	          0x4801c0	                            add rax, rax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e85c	          0x4801d0	                            add rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e85f	        0x48c1e003	                              shl rax, 3	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e863	          0x4801f0	                            add rax, rsi	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e866	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e86c	          0x83c802	                               or eax, 2	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e86f	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0x400e875	    0x488b0d000000	            mov rcx, qword [0x0400e87c] 	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e87c	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e882	          0x4863d0	                         movsxd rdx, eax	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e885	          0x4889d0	                            mov rax, rdx	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e888	        0x48c1e003	                              shl rax, 3	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e88c	          0x4801d0	                            add rax, rdx	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e88f	          0x4801c0	                            add rax, rax	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e892	          0x4801d0	                            add rax, rdx	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e895	        0x48c1e003	                              shl rax, 3	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e899	        0x488d1401	                    lea rdx, [rcx + rax]	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e89d	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8a3	          0x89422c	             mov dword [rdx + 0x2c], eax	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8a6	    0x488b0d000000	            mov rcx, qword [0x0400e8ad] 	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8ad	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8b3	          0x4863d0	                         movsxd rdx, eax	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8b6	          0x4889d0	                            mov rax, rdx	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8b9	        0x48c1e003	                              shl rax, 3	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8bd	          0x4801d0	                            add rax, rdx	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8c0	          0x4801c0	                            add rax, rax	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8c3	          0x4801d0	                            add rax, rdx	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8c6	        0x48c1e003	                              shl rax, 3	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8ca	          0x4801c8	                            add rax, rcx	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8cd	    0xc74030000000	               mov dword [rax + 0x30], 0	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51
0x400e8d4	      0xe918150000	                           jmp 0x400fdf1	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400e8d9	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e8e0	            0x7438	                            je 0x400e91a	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e8e2	    0x488b0d000000	            mov rcx, qword [0x0400e8e9] 	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e8e9	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e8ef	          0x4863d0	                         movsxd rdx, eax	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e8f2	          0x4889d0	                            mov rax, rdx	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e8f5	        0x48c1e003	                              shl rax, 3	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e8f9	          0x4801d0	                            add rax, rdx	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e8fc	          0x4801c0	                            add rax, rax	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e8ff	          0x4801d0	                            add rax, rdx	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e902	        0x48c1e003	                              shl rax, 3	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e906	          0x4801c8	                            add rax, rcx	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e909	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e90f	          0x83e004	                              and eax, 4	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e912	            0x85c0	                           test eax, eax	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e914	     0xf85d7140000	                           jne 0x400fdf1	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e91a	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7774	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e921	            0x755d	                           jne 0x400e980	      7774	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e923	    0x488b0d000000	            mov rcx, qword [0x0400e92a] 	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e92a	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e930	          0x4863d0	                         movsxd rdx, eax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e933	          0x4889d0	                            mov rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e936	        0x48c1e003	                              shl rax, 3	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e93a	          0x4801d0	                            add rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e93d	          0x4801c0	                            add rax, rax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e940	          0x4801d0	                            add rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e943	        0x48c1e003	                              shl rax, 3	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e947	          0x4801c1	                            add rcx, rax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e94a	    0x488b35000000	            mov rsi, qword [0x0400e951] 	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e951	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e957	          0x4863d0	                         movsxd rdx, eax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e95a	          0x4889d0	                            mov rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e95d	        0x48c1e003	                              shl rax, 3	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e961	          0x4801d0	                            add rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e964	          0x4801c0	                            add rax, rax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e967	          0x4801d0	                            add rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e96a	        0x48c1e003	                              shl rax, 3	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e96e	          0x4801f0	                            add rax, rsi	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e971	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e977	          0x83c804	                               or eax, 4	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e97a	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0x400e980	    0x488b0d000000	            mov rcx, qword [0x0400e987] 	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e987	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e98d	          0x4863d0	                         movsxd rdx, eax	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e990	          0x4889d0	                            mov rax, rdx	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e993	        0x48c1e003	                              shl rax, 3	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e997	          0x4801d0	                            add rax, rdx	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e99a	          0x4801c0	                            add rax, rax	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e99d	          0x4801d0	                            add rax, rdx	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e9a0	        0x48c1e003	                              shl rax, 3	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e9a4	        0x488d1401	                    lea rdx, [rcx + rax]	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e9a8	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e9ae	          0x89426c	             mov dword [rdx + 0x6c], eax	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53
0x400e9b1	      0xe93b140000	                           jmp 0x400fdf1	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400e9b6	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_85
0x400e9bd	      0xbe00000000	                              mov esi, 0	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_85
0x400e9c2	          0x4889c7	                            mov rdi, rax	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_85
0x400e9c5	      0xe800000000	                          call 0x400e9ca	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_85
0x400e9ca	            0x85c0	                           test eax, eax	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_85
0x400e9cc	     0xf8580020000	                           jne 0x400ec52	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_85
0x400e9d2	    0x488b0d000000	            mov rcx, qword [0x0400e9d9] 	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400e9d9	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400e9df	          0x4863d0	                         movsxd rdx, eax	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400e9e2	          0x4889d0	                            mov rax, rdx	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400e9e5	        0x48c1e003	                              shl rax, 3	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400e9e9	          0x4801d0	                            add rax, rdx	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400e9ec	          0x4801c0	                            add rax, rax	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400e9ef	          0x4801d0	                            add rax, rdx	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400e9f2	        0x48c1e003	                              shl rax, 3	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400e9f6	          0x4801c8	                            add rax, rcx	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400e9f9	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400e9fd	          0x4885c0	                           test rax, rax	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400ea00	            0x7445	                            je 0x400ea47	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56
0x400ea02	    0x488b0d000000	            mov rcx, qword [0x0400ea09] 	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea09	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea0f	          0x4863d0	                         movsxd rdx, eax	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea12	          0x4889d0	                            mov rax, rdx	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea15	        0x48c1e003	                              shl rax, 3	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea19	          0x4801d0	                            add rax, rdx	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea1c	          0x4801c0	                            add rax, rax	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea1f	          0x4801d0	                            add rax, rdx	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea22	        0x48c1e003	                              shl rax, 3	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea26	          0x4801c8	                            add rax, rcx	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea29	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea2d	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea34	          0x4889d6	                            mov rsi, rdx	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea37	          0x4889c7	                            mov rdi, rax	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea3a	      0xe800000000	                          call 0x400ea3f	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea3f	            0x85c0	                           test eax, eax	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea41	     0xf84ae130000	                            je 0x400fdf5	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_86
0x400ea47	    0x8b0500000000	            mov eax, dword [0x0400ea4d] 	      7790	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0x400ea4d	            0x85c0	                           test eax, eax	      7790	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0x400ea4f	            0x757d	                           jne 0x400eace	      7790	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0x400ea51	    0x488b0d000000	            mov rcx, qword [0x0400ea58] 	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea58	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea5e	          0x4863d0	                         movsxd rdx, eax	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea61	          0x4889d0	                            mov rax, rdx	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea64	        0x48c1e003	                              shl rax, 3	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea68	          0x4801d0	                            add rax, rdx	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea6b	          0x4801c0	                            add rax, rax	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea6e	          0x4801d0	                            add rax, rdx	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea71	        0x48c1e003	                              shl rax, 3	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea75	          0x4801c8	                            add rax, rcx	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea78	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea7c	          0x4889c7	                            mov rdi, rax	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea7f	      0xe800000000	                          call 0x400ea84	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_87
0x400ea84	    0x488b0d000000	            mov rcx, qword [0x0400ea8b] 	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400ea8b	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400ea91	          0x4863d0	                         movsxd rdx, eax	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400ea94	          0x4889d0	                            mov rax, rdx	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400ea97	        0x48c1e003	                              shl rax, 3	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400ea9b	          0x4801d0	                            add rax, rdx	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400ea9e	          0x4801c0	                            add rax, rax	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400eaa1	          0x4801d0	                            add rax, rdx	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400eaa4	        0x48c1e003	                              shl rax, 3	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400eaa8	        0x488d1c01	                    lea rbx, [rcx + rax]	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400eaac	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400eab3	          0x4889c7	                            mov rdi, rax	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400eab6	      0xe800000000	                          call 0x400eabb	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400eabb	        0x48894360	             mov qword [rbx + 0x60], rax	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_88
0x400eabf	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	      7795	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0x400eac9	      0xe927130000	                           jmp 0x400fdf5	      7795	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0x400eace	    0x488b0d000000	            mov rcx, qword [0x0400ead5] 	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400ead5	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eadb	          0x4863d0	                         movsxd rdx, eax	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eade	          0x4889d0	                            mov rax, rdx	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eae1	        0x48c1e003	                              shl rax, 3	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eae5	          0x4801d0	                            add rax, rdx	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eae8	          0x4801c0	                            add rax, rax	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eaeb	          0x4801d0	                            add rax, rdx	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eaee	        0x48c1e003	                              shl rax, 3	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eaf2	          0x4801c8	                            add rax, rcx	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eaf5	        0x488b4058	            mov rax, qword [rax + 0x58] 	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eaf9	    0x48898598feff	            mov qword [rbp - 0x168], rax	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb00	    0x488b0d000000	            mov rcx, qword [0x0400eb07] 	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb07	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb0d	          0x4863d0	                         movsxd rdx, eax	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb10	          0x4889d0	                            mov rax, rdx	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb13	        0x48c1e003	                              shl rax, 3	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb17	          0x4801d0	                            add rax, rdx	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb1a	          0x4801c0	                            add rax, rax	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb1d	          0x4801d0	                            add rax, rdx	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb20	        0x48c1e003	                              shl rax, 3	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb24	          0x4801c8	                            add rax, rcx	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb27	    0x48c740580000	               mov qword [rax + 0x58], 0	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14
0x400eb2f	    0x8b953cfeffff	            mov edx, dword [rbp - 0x1c4]	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_89
0x400eb35	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_89
0x400eb3c	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_89
0x400eb42	    0x41b900000000	                              mov r9d, 0	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_89
0x400eb48	    0x41b800000000	                              mov r8d, 0	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_89
0x400eb4e	      0xb900000000	                              mov ecx, 0	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_89
0x400eb53	            0x89c7	                            mov edi, eax	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_89
0x400eb55	      0xe81a230000	                     call sym.hl_do_font	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_89
0x400eb5a	    0x488b0d000000	            mov rcx, qword [0x0400eb61] 	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb61	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb67	          0x4863d0	                         movsxd rdx, eax	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb6a	          0x4889d0	                            mov rax, rdx	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb6d	        0x48c1e003	                              shl rax, 3	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb71	          0x4801d0	                            add rax, rdx	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb74	          0x4801c0	                            add rax, rax	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb77	          0x4801d0	                            add rax, rdx	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb7a	        0x48c1e003	                              shl rax, 3	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb7e	          0x4801c8	                            add rax, rcx	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb81	        0x488b4058	            mov rax, qword [rax + 0x58] 	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb85	          0x4885c0	                           test rax, rax	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb88	     0xf848c000000	                            je 0x400ec1a	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400eb8e	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      7833	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_93
0x400eb95	          0x4889c7	                            mov rdi, rax	      7833	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_93
0x400eb98	      0xe800000000	                          call 0x400eb9d	      7833	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_93
0x400eb9d	    0x488b0d000000	            mov rcx, qword [0x0400eba4] 	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400eba4	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebaa	          0x4863d0	                         movsxd rdx, eax	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebad	          0x4889d0	                            mov rax, rdx	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebb0	        0x48c1e003	                              shl rax, 3	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebb4	          0x4801d0	                            add rax, rdx	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebb7	          0x4801c0	                            add rax, rax	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebba	          0x4801d0	                            add rax, rdx	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebbd	        0x48c1e003	                              shl rax, 3	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebc1	          0x4801c8	                            add rax, rcx	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebc4	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebc8	          0x4889c7	                            mov rdi, rax	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebcb	      0xe800000000	                          call 0x400ebd0	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_94
0x400ebd0	    0x488b0d000000	            mov rcx, qword [0x0400ebd7] 	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ebd7	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ebdd	          0x4863d0	                         movsxd rdx, eax	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ebe0	          0x4889d0	                            mov rax, rdx	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ebe3	        0x48c1e003	                              shl rax, 3	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ebe7	          0x4801d0	                            add rax, rdx	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ebea	          0x4801c0	                            add rax, rax	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ebed	          0x4801d0	                            add rax, rdx	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ebf0	        0x48c1e003	                              shl rax, 3	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ebf4	        0x488d1c01	                    lea rbx, [rcx + rax]	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ebf8	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ebff	          0x4889c7	                            mov rdi, rax	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ec02	      0xe800000000	                          call 0x400ec07	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ec07	        0x48894360	             mov qword [rbx + 0x60], rax	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_95
0x400ec0b	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	      7836	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400ec15	      0xe9db110000	                           jmp 0x400fdf5	      7836	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0x400ec1a	    0x488b0d000000	            mov rcx, qword [0x0400ec21] 	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec21	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec27	          0x4863d0	                         movsxd rdx, eax	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec2a	          0x4889d0	                            mov rax, rdx	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec2d	        0x48c1e003	                              shl rax, 3	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec31	          0x4801d0	                            add rax, rdx	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec34	          0x4801c0	                            add rax, rax	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec37	          0x4801d0	                            add rax, rdx	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec3a	        0x48c1e003	                              shl rax, 3	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec3e	        0x488d1401	                    lea rdx, [rcx + rax]	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec42	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec49	        0x48894258	             mov qword [rdx + 0x58], rax	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec4d	      0xe9a3110000	                           jmp 0x400fdf5	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	ELSE_16
0x400ec52	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec59	      0xbe00000000	                              mov esi, 0	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec5e	          0x4889c7	                            mov rdi, rax	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec61	      0xe800000000	                          call 0x400ec66	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec66	            0x85c0	                           test eax, eax	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec68	            0x741c	                            je 0x400ec86	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec6a	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec71	      0xbe00000000	                              mov esi, 0	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec76	          0x4889c7	                            mov rdi, rax	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec79	      0xe800000000	                          call 0x400ec7e	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec7e	            0x85c0	                           test eax, eax	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec80	     0xf85d0060000	                           jne 0x400f356	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_97
0x400ec86	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ec8d	            0x7438	                            je 0x400ecc7	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ec8f	    0x488b0d000000	            mov rcx, qword [0x0400ec96] 	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ec96	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ec9c	          0x4863d0	                         movsxd rdx, eax	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ec9f	          0x4889d0	                            mov rax, rdx	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400eca2	        0x48c1e003	                              shl rax, 3	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400eca6	          0x4801d0	                            add rax, rdx	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400eca9	          0x4801c0	                            add rax, rax	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ecac	          0x4801d0	                            add rax, rdx	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ecaf	        0x48c1e003	                              shl rax, 3	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ecb3	          0x4801c8	                            add rax, rcx	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ecb6	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ecbc	          0x83e002	                              and eax, 2	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ecbf	            0x85c0	                           test eax, eax	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ecc1	     0xf852d110000	                           jne 0x400fdf4	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400ecc7	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7847	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ecce	            0x755d	                           jne 0x400ed2d	      7847	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ecd0	    0x488b0d000000	            mov rcx, qword [0x0400ecd7] 	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ecd7	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ecdd	          0x4863d0	                         movsxd rdx, eax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ece0	          0x4889d0	                            mov rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ece3	        0x48c1e003	                              shl rax, 3	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ece7	          0x4801d0	                            add rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ecea	          0x4801c0	                            add rax, rax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400eced	          0x4801d0	                            add rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ecf0	        0x48c1e003	                              shl rax, 3	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ecf4	          0x4801c1	                            add rcx, rax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ecf7	    0x488b35000000	            mov rsi, qword [0x0400ecfe] 	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ecfe	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed04	          0x4863d0	                         movsxd rdx, eax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed07	          0x4889d0	                            mov rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed0a	        0x48c1e003	                              shl rax, 3	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed0e	          0x4801d0	                            add rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed11	          0x4801c0	                            add rax, rax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed14	          0x4801d0	                            add rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed17	        0x48c1e003	                              shl rax, 3	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed1b	          0x4801f0	                            add rax, rsi	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed1e	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed24	          0x83c802	                               or eax, 2	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed27	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0x400ed2d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed34	        0x4883c005	                              add rax, 5	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed38	           0xfb600	                   movzx eax, byte [rax]	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed3b	            0x3c46	                            cmp al, 0x46	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed3d	     0xf85b7000000	                           jne 0x400edfa	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed43	    0x488b0d000000	            mov rcx, qword [0x0400ed4a] 	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed4a	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed50	          0x4863d0	                         movsxd rdx, eax	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed53	          0x4889d0	                            mov rax, rdx	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed56	        0x48c1e003	                              shl rax, 3	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed5a	          0x4801d0	                            add rax, rdx	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed5d	          0x4801c0	                            add rax, rax	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed60	          0x4801d0	                            add rax, rdx	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed63	        0x48c1e003	                              shl rax, 3	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed67	          0x4801c8	                            add rax, rcx	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed6a	          0x8b4030	            mov eax, dword [rax + 0x30] 	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed6d	            0x85c0	                           test eax, eax	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed6f	     0xf8485000000	                            je 0x400edfa	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed75	    0x488b0d000000	            mov rcx, qword [0x0400ed7c] 	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed7c	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed82	          0x4863d0	                         movsxd rdx, eax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed85	          0x4889d0	                            mov rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed88	        0x48c1e003	                              shl rax, 3	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed8c	          0x4801d0	                            add rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed8f	          0x4801c0	                            add rax, rax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed92	          0x4801d0	                            add rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed95	        0x48c1e003	                              shl rax, 3	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed99	          0x4801c1	                            add rcx, rax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ed9c	    0x488b35000000	            mov rsi, qword [0x0400eda3] 	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400eda3	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400eda9	          0x4863d0	                         movsxd rdx, eax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edac	          0x4889d0	                            mov rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edaf	        0x48c1e003	                              shl rax, 3	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edb3	          0x4801d0	                            add rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edb6	          0x4801c0	                            add rax, rax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edb9	          0x4801d0	                            add rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edbc	        0x48c1e003	                              shl rax, 3	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edc0	          0x4801f0	                            add rax, rsi	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edc3	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edc6	          0x83e0fd	                     and eax, 0xfffffffd	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edc9	          0x89412c	             mov dword [rcx + 0x2c], eax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edcc	    0x488b0d000000	            mov rcx, qword [0x0400edd3] 	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edd3	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edd9	          0x4863d0	                         movsxd rdx, eax	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400eddc	          0x4889d0	                            mov rax, rdx	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400eddf	        0x48c1e003	                              shl rax, 3	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ede3	          0x4801d0	                            add rax, rdx	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ede6	          0x4801c0	                            add rax, rax	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400ede9	          0x4801d0	                            add rax, rdx	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edec	        0x48c1e003	                              shl rax, 3	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edf0	          0x4801c8	                            add rax, rcx	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edf3	    0xc74030000000	               mov dword [rax + 0x30], 0	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63
0x400edfa	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_98
0x400ee01	           0xfb600	                   movzx eax, byte [rax]	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_98
0x400ee04	           0xfb6c0	                           movzx eax, al	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_98
0x400ee07	          0x83e830	                           sub eax, 0x30	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_98
0x400ee0a	          0x83f809	                              cmp eax, 9	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_98
0x400ee0d	            0x771a	                            ja 0x400ee29	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_98
0x400ee0f	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7859	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_99
0x400ee16	          0x4889c7	                            mov rdi, rax	      7859	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_99
0x400ee19	      0xe800000000	                          call 0x400ee1e	      7859	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_99
0x400ee1e	    0x898538feffff	            mov dword [rbp - 0x1c8], eax	      7859	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_99
0x400ee24	      0xe9c9020000	                           jmp 0x400f0f2	      7859	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_99
0x400ee29	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_100
0x400ee30	      0xbe00000000	                              mov esi, 0	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_100
0x400ee35	          0x4889c7	                            mov rdi, rax	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_100
0x400ee38	      0xe800000000	                          call 0x400ee3d	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_100
0x400ee3d	            0x85c0	                           test eax, eax	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_100
0x400ee3f	            0x753f	                           jne 0x400ee80	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_100
0x400ee41	    0x8b0500000000	            mov eax, dword [0x0400ee47] 	      7862	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400ee47	            0x85c0	                           test eax, eax	      7862	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400ee49	            0x7414	                            je 0x400ee5f	      7862	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400ee4b	    0x8b0500000000	            mov eax, dword [0x0400ee51] 	      7863	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400ee51	          0x83e801	                              sub eax, 1	      7863	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400ee54	    0x898538feffff	            mov dword [rbp - 0x1c8], eax	      7863	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400ee5a	      0xe993020000	                           jmp 0x400f0f2	      7863	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0x400ee5f	      0xbf00000000	                              mov edi, 0	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_102
0x400ee64	      0xe800000000	                          call 0x400ee69	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_102
0x400ee69	          0x4889c7	                            mov rdi, rax	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_102
0x400ee6c	      0xe800000000	                          call 0x400ee71	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_102
0x400ee71	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7867	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19
0x400ee7b	      0xe949100000	                           jmp 0x400fec9	      7868	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19
0x400ee80	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_103
0x400ee87	      0xbe00000000	                              mov esi, 0	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_103
0x400ee8c	          0x4889c7	                            mov rdi, rax	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_103
0x400ee8f	      0xe800000000	                          call 0x400ee94	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_103
0x400ee94	            0x85c0	                           test eax, eax	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_103
0x400ee96	            0x753f	                           jne 0x400eed7	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_103
0x400ee98	    0x8b0500000000	            mov eax, dword [0x0400ee9e] 	      7873	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400ee9e	            0x85c0	                           test eax, eax	      7873	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400eea0	            0x7e14	                           jle 0x400eeb6	      7873	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400eea2	    0x8b0500000000	            mov eax, dword [0x0400eea8] 	      7874	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400eea8	          0x83e801	                              sub eax, 1	      7874	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400eeab	    0x898538feffff	            mov dword [rbp - 0x1c8], eax	      7874	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400eeb1	      0xe93c020000	                           jmp 0x400f0f2	      7874	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0x400eeb6	      0xbf00000000	                              mov edi, 0	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_105
0x400eebb	      0xe800000000	                          call 0x400eec0	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_105
0x400eec0	          0x4889c7	                            mov rdi, rax	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_105
0x400eec3	      0xe800000000	                          call 0x400eec8	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_105
0x400eec8	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7878	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21
0x400eed2	      0xe9f20f0000	                           jmp 0x400fec9	      7879	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21
0x400eed7	    0xc78510feffff	              mov dword [rbp - 0x1f0], 2	      7884	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22
0x400eee1	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400eee8	           0xfb600	                   movzx eax, byte [rax]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400eeeb	            0x3c60	                            cmp al, 0x60	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400eeed	            0x760e	                           jbe 0x400eefd	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400eeef	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400eef6	           0xfb600	                   movzx eax, byte [rax]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400eef9	            0x3c7a	                            cmp al, 0x7a	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400eefb	            0x760f	                           jbe 0x400ef0c	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400eefd	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400ef04	           0xfb600	                   movzx eax, byte [rax]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400ef07	           0xfb6c0	                           movzx eax, al	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400ef0a	            0xeb10	                           jmp 0x400ef1c	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400ef0c	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400ef13	           0xfb600	                   movzx eax, byte [rax]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400ef16	           0xfb6c0	                           movzx eax, al	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400ef19	          0x83e820	                           sub eax, 0x20	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400ef1c	    0x898514feffff	            mov dword [rbp - 0x1ec], eax	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_107
0x400ef22	    0x48c78588feff	          mov qword [rbp - 0x178], 0x1c 	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0x400ef2d	            0xeb4a	                           jmp 0x400ef79	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0x400ef2f	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0x400ef36	    0x488b04c50000	                  mov rax, qword [rax*8]	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0x400ef3e	           0xfb600	                   movzx eax, byte [rax]	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0x400ef41	           0xfbec0	                           movsx eax, al	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0x400ef44	    0x3b8514feffff	            cmp eax, dword [rbp - 0x1ec]	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0x400ef4a	            0x752d	                           jne 0x400ef79	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0x400ef4c	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_108
0x400ef53	    0x488b04c50000	                  mov rax, qword [rax*8]	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_108
0x400ef5b	        0x488d5001	                      lea rdx, [rax + 1]	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_108
0x400ef5f	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_108
0x400ef66	        0x4883c001	                              add rax, 1	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_108
0x400ef6a	          0x4889d6	                            mov rsi, rdx	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_108
0x400ef6d	          0x4889c7	                            mov rdi, rax	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_108
0x400ef70	      0xe800000000	                          call 0x400ef75	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_108
0x400ef75	            0x85c0	                           test eax, eax	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_108
0x400ef77	            0x7414	                            je 0x400ef8d	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_108
0x400ef79	    0x4883ad88feff	              sub qword [rbp - 0x178], 1	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0x400ef81	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0x400ef89	            0x79a4	                           jns 0x400ef2f	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0x400ef8b	            0xeb01	                           jmp 0x400ef8e	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0x400ef8d	              0x90	                                     nop	      7898	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0x400ef8e	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      7899	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71
0x400ef96	            0x792e	                           jns 0x400efc6	      7899	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71
0x400ef98	      0xbf00000000	                              mov edi, 0	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_110
0x400ef9d	      0xe800000000	                          call 0x400efa2	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_110
0x400efa2	          0x4889c2	                            mov rdx, rax	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_110
0x400efa5	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_110
0x400efac	          0x4889c6	                            mov rsi, rax	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_110
0x400efaf	          0x4889d7	                            mov rdi, rdx	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_110
0x400efb2	      0xe800000000	                          call 0x400efb7	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_110
0x400efb7	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7902	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71
0x400efc1	      0xe9030f0000	                           jmp 0x400fec9	      7902	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71
0x400efc6	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400efcd	        0x4883c005	                              add rax, 5	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400efd1	           0xfb600	                   movzx eax, byte [rax]	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400efd4	            0x3c46	                            cmp al, 0x46	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400efd6	           0xf94c0	                                 sete al	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400efd9	           0xfb6c0	                           movzx eax, al	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400efdc	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400efe3	            0x89d1	                            mov ecx, edx	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400efe5	    0x488d9510feff	                  lea rdx, [rbp - 0x1f0]	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400efec	            0x89c6	                            mov esi, eax	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400efee	            0x89cf	                            mov edi, ecx	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400eff0	      0xe800000000	                          call 0x400eff5	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400eff5	    0x898538feffff	            mov dword [rbp - 0x1c8], eax	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_111
0x400effb	    0x8b8510feffff	            mov eax, dword [rbp - 0x1f0]	      7910	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f001	          0x83f801	                              cmp eax, 1	      7910	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f004	     0xf8587000000	                           jne 0x400f091	      7910	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f00a	    0x488b0d000000	            mov rcx, qword [0x0400f011] 	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f011	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f017	          0x4863d0	                         movsxd rdx, eax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f01a	          0x4889d0	                            mov rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f01d	        0x48c1e003	                              shl rax, 3	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f021	          0x4801d0	                            add rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f024	          0x4801c0	                            add rax, rax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f027	          0x4801d0	                            add rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f02a	        0x48c1e003	                              shl rax, 3	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f02e	          0x4801c1	                            add rcx, rax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f031	    0x488b35000000	            mov rsi, qword [0x0400f038] 	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f038	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f03e	          0x4863d0	                         movsxd rdx, eax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f041	          0x4889d0	                            mov rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f044	        0x48c1e003	                              shl rax, 3	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f048	          0x4801d0	                            add rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f04b	          0x4801c0	                            add rax, rax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f04e	          0x4801d0	                            add rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f051	        0x48c1e003	                              shl rax, 3	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f055	          0x4801f0	                            add rax, rsi	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f058	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f05b	          0x83c802	                               or eax, 2	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f05e	          0x89412c	             mov dword [rcx + 0x2c], eax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f061	    0x488b0d000000	            mov rcx, qword [0x0400f068] 	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f068	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f06e	          0x4863d0	                         movsxd rdx, eax	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f071	          0x4889d0	                            mov rax, rdx	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f074	        0x48c1e003	                              shl rax, 3	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f078	          0x4801d0	                            add rax, rdx	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f07b	          0x4801c0	                            add rax, rax	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f07e	          0x4801d0	                            add rax, rdx	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f081	        0x48c1e003	                              shl rax, 3	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f085	          0x4801c8	                            add rax, rcx	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f088	    0xc74030010000	               mov dword [rax + 0x30], 1	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f08f	            0xeb61	                           jmp 0x400f0f2	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0x400f091	    0x8b8510feffff	            mov eax, dword [rbp - 0x1f0]	      7915	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f097	            0x85c0	                           test eax, eax	      7915	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f099	            0x7557	                           jne 0x400f0f2	      7915	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f09b	    0x488b0d000000	            mov rcx, qword [0x0400f0a2] 	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0a2	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0a8	          0x4863d0	                         movsxd rdx, eax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0ab	          0x4889d0	                            mov rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0ae	        0x48c1e003	                              shl rax, 3	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0b2	          0x4801d0	                            add rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0b5	          0x4801c0	                            add rax, rax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0b8	          0x4801d0	                            add rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0bb	        0x48c1e003	                              shl rax, 3	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0bf	          0x4801c1	                            add rcx, rax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0c2	    0x488b35000000	            mov rsi, qword [0x0400f0c9] 	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0c9	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0cf	          0x4863d0	                         movsxd rdx, eax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0d2	          0x4889d0	                            mov rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0d5	        0x48c1e003	                              shl rax, 3	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0d9	          0x4801d0	                            add rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0dc	          0x4801c0	                            add rax, rax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0df	          0x4801d0	                            add rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0e2	        0x48c1e003	                              shl rax, 3	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0e6	          0x4801f0	                            add rax, rsi	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0e9	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0ec	          0x83e0fd	                     and eax, 0xfffffffd	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0ef	          0x89412c	             mov dword [rcx + 0x2c], eax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0x400f0f2	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f0f9	        0x4883c005	                              add rax, 5	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f0fd	           0xfb600	                   movzx eax, byte [rax]	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f100	            0x3c46	                            cmp al, 0x46	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f102	     0xf85d5000000	                           jne 0x400f1dd	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f108	    0x488b0d000000	            mov rcx, qword [0x0400f10f] 	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f10f	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f115	          0x4863d0	                         movsxd rdx, eax	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f118	          0x4889d0	                            mov rax, rdx	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f11b	        0x48c1e003	                              shl rax, 3	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f11f	          0x4801d0	                            add rax, rdx	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f122	          0x4801c0	                            add rax, rax	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f125	          0x4801d0	                            add rax, rdx	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f128	        0x48c1e003	                              shl rax, 3	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f12c	          0x4801c8	                            add rax, rcx	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f12f	    0x8b9538feffff	            mov edx, dword [rbp - 0x1c8]	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f135	          0x83c201	                              add edx, 1	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f138	          0x895034	             mov dword [rax + 0x34], edx	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0x400f13b	    0x83bd3cfeffff	              cmp dword [rbp - 0x1c4], 0	      7924	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f142	     0xf84ac0c0000	                            je 0x400fdf4	      7924	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f148	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      7926	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f14e	          0x83c001	                              add eax, 1	      7926	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f151	    0x890500000000	            mov dword [0x0400f157], eax 	      7926	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f157	    0x488b0d000000	            mov rcx, qword [0x0400f15e] 	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f15e	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f164	          0x4863d0	                         movsxd rdx, eax	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f167	          0x4889d0	                            mov rax, rdx	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f16a	        0x48c1e003	                              shl rax, 3	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f16e	          0x4801d0	                            add rax, rdx	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f171	          0x4801c0	                            add rax, rax	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f174	          0x4801d0	                            add rax, rdx	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f177	        0x48c1e003	                              shl rax, 3	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f17b	          0x4801c8	                            add rax, rcx	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f17e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f181	          0x83e002	                              and eax, 2	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f184	    0x890500000000	            mov dword [0x0400f18a], eax 	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0x400f18a	    0x8b0500000000	            mov eax, dword [0x0400f190] 	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400f190	            0x85c0	                           test eax, eax	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400f192	     0xf855c0c0000	                           jne 0x400fdf4	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400f198	    0x8b0500000000	            mov eax, dword [0x0400f19e] 	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400f19e	            0x85c0	                           test eax, eax	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400f1a0	     0xf854e0c0000	                           jne 0x400fdf4	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400f1a6	    0xc70500000000	           mov dword [0x0400f1b0], 0x32 	      7933	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0x400f1b0	    0x8b0500000000	            mov eax, dword [0x0400f1b6] 	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0x400f1b6	            0x85c0	                           test eax, eax	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0x400f1b8	     0xf84360c0000	                            je 0x400fdf4	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0x400f1be	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 0	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0x400f1c5	     0xf88290c0000	                            js 0x400fdf4	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0x400f1cb	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      7935	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	CALL_112
0x400f1d1	            0x89c7	                            mov edi, eax	      7935	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	CALL_112
0x400f1d3	      0xe800000000	                          call 0x400f1d8	      7935	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	CALL_112
0x400f1d8	      0xe9170c0000	                           jmp 0x400fdf4	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400f1dd	    0x488b0d000000	            mov rcx, qword [0x0400f1e4] 	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f1e4	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f1ea	          0x4863d0	                         movsxd rdx, eax	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f1ed	          0x4889d0	                            mov rax, rdx	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f1f0	        0x48c1e003	                              shl rax, 3	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f1f4	          0x4801d0	                            add rax, rdx	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f1f7	          0x4801c0	                            add rax, rax	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f1fa	          0x4801d0	                            add rax, rdx	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f1fd	        0x48c1e003	                              shl rax, 3	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f201	          0x4801c8	                            add rax, rcx	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f204	    0x8b9538feffff	            mov edx, dword [rbp - 0x1c8]	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f20a	          0x83c201	                              add edx, 1	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f20d	          0x895038	             mov dword [rax + 0x38], edx	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24
0x400f210	    0x83bd3cfeffff	              cmp dword [rbp - 0x1c4], 0	      7942	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0x400f217	     0xf84d70b0000	                            je 0x400fdf4	      7942	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0x400f21d	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      7944	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0x400f223	          0x83c001	                              add eax, 1	      7944	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0x400f226	    0x890500000000	            mov dword [0x0400f22c], eax 	      7944	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0x400f22c	    0x8b0500000000	            mov eax, dword [0x0400f232] 	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400f232	            0x85c0	                           test eax, eax	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400f234	     0xf85ba0b0000	                           jne 0x400fdf4	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400f23a	    0x8b0500000000	            mov eax, dword [0x0400f240] 	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400f240	            0x85c0	                           test eax, eax	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400f242	     0xf85ac0b0000	                           jne 0x400fdf4	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400f248	    0xc70500000000	           mov dword [0x0400f252], 0x32 	      7950	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0x400f252	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 0	      7951	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80
0x400f259	     0xf88950b0000	                            js 0x400fdf4	      7951	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80
0x400f25f	    0xc7854cfeffff	    mov dword [rbp - 0x1b4], 0xffffffff 	      7953	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80
0x400f269	    0x8b0500000000	            mov eax, dword [0x0400f26f] 	      7955	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_81
0x400f26f	            0x85c0	                           test eax, eax	      7955	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_81
0x400f271	            0x740d	                            je 0x400f280	      7955	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_81
0x400f273	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      7956	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	CALL_113
0x400f279	            0x89c7	                            mov edi, eax	      7956	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	CALL_113
0x400f27b	      0xe800000000	                          call 0x400f280	      7956	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	CALL_113
0x400f280	    0x8b0500000000	            mov eax, dword [0x0400f286] 	      7957	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f286	          0x83f80f	                            cmp eax, 0xf	      7957	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f289	            0x7f26	                            jg 0x400f2b1	      7957	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f28b	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 0	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f292	            0x7409	                            je 0x400f29d	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f294	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 4	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f29b	            0x7507	                           jne 0x400f2a4	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f29d	      0xb801000000	                              mov eax, 1	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f2a2	            0xeb05	                           jmp 0x400f2a9	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f2a4	      0xb800000000	                              mov eax, 0	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f2a9	    0x89854cfeffff	            mov dword [rbp - 0x1b4], eax	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f2af	            0xeb2d	                           jmp 0x400f2de	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0x400f2b1	    0x83bd38feffff	           cmp dword [rbp - 0x1c8], 0xf 	      7960	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400f2b8	            0x7f24	                            jg 0x400f2de	      7960	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400f2ba	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 6	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400f2c1	            0x7e09	                           jle 0x400f2cc	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400f2c3	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 8	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400f2ca	            0x7507	                           jne 0x400f2d3	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400f2cc	      0xb801000000	                              mov eax, 1	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400f2d1	            0xeb05	                           jmp 0x400f2d8	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400f2d3	      0xb800000000	                              mov eax, 0	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400f2d8	    0x89854cfeffff	            mov dword [rbp - 0x1b4], eax	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0x400f2de	    0x83bd4cfeffff	cmp dword [rbp - 0x1b4], 0xffffffffffffffff	      7964	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400f2e5	     0xf84090b0000	                            je 0x400fdf4	      7964	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400f2eb	    0x488b05000000	            mov rax, qword [0x0400f2f2] 	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400f2f2	           0xfb600	                   movzx eax, byte [rax]	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400f2f5	            0x3c64	                            cmp al, 0x64	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400f2f7	           0xf94c0	                                 sete al	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400f2fa	           0xfb6c0	                           movzx eax, al	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400f2fd	    0x3b854cfeffff	            cmp eax, dword [rbp - 0x1b4]	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400f303	     0xf84eb0a0000	                            je 0x400fdf4	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0x400f309	      0xbf00000000	                              mov edi, 0	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_114
0x400f30e	      0xe800000000	                          call 0x400f313	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_114
0x400f313	            0x85c0	                           test eax, eax	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_114
0x400f315	     0xf85d90a0000	                           jne 0x400fdf4	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_114
0x400f31b	    0x83bd4cfeffff	              cmp dword [rbp - 0x1b4], 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_115
0x400f322	            0x7407	                            je 0x400f32b	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_115
0x400f324	      0xb800000000	                              mov eax, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_115
0x400f329	            0xeb05	                           jmp 0x400f330	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_115
0x400f32b	      0xb800000000	                              mov eax, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_115
0x400f330	      0xb900000000	                              mov ecx, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_115
0x400f335	          0x4889c2	                            mov rdx, rax	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_115
0x400f338	      0xbe00000000	                              mov esi, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_115
0x400f33d	      0xbf00000000	                              mov edi, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_115
0x400f342	      0xe800000000	                          call 0x400f347	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_115
0x400f347	      0xbf00000000	                              mov edi, 0	      7970	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_116
0x400f34c	      0xe800000000	                          call 0x400f351	      7970	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_116
0x400f351	      0xe99e0a0000	                           jmp 0x400fdf4	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400f356	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_117
0x400f35d	      0xbe00000000	                              mov esi, 0	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_117
0x400f362	          0x4889c7	                            mov rdi, rax	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_117
0x400f365	      0xe800000000	                          call 0x400f36a	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_117
0x400f36a	            0x85c0	                           test eax, eax	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_117
0x400f36c	     0xf85fb010000	                           jne 0x400f56d	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_117
0x400f372	    0x488b0d000000	            mov rcx, qword [0x0400f379] 	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f379	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f37f	          0x4863d0	                         movsxd rdx, eax	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f382	          0x4889d0	                            mov rax, rdx	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f385	        0x48c1e003	                              shl rax, 3	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f389	          0x4801d0	                            add rax, rdx	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f38c	          0x4801c0	                            add rax, rax	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f38f	          0x4801d0	                            add rax, rdx	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f392	        0x48c1e003	                              shl rax, 3	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f396	          0x4801c8	                            add rax, rcx	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f399	        0x4883c070	                           add rax, 0x70	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f39d	    0x488985a0feff	            mov qword [rbp - 0x160], rax	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85
0x400f3a4	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3ab	            0x7438	                            je 0x400f3e5	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3ad	    0x488b0d000000	            mov rcx, qword [0x0400f3b4] 	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3b4	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3ba	          0x4863d0	                         movsxd rdx, eax	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3bd	          0x4889d0	                            mov rax, rdx	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3c0	        0x48c1e003	                              shl rax, 3	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3c4	          0x4801d0	                            add rax, rdx	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3c7	          0x4801c0	                            add rax, rax	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3ca	          0x4801d0	                            add rax, rdx	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3cd	        0x48c1e003	                              shl rax, 3	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3d1	          0x4801c8	                            add rax, rcx	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3d4	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3da	          0x83e004	                              and eax, 4	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3dd	            0x85c0	                           test eax, eax	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3df	     0xf85100a0000	                           jne 0x400fdf5	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86
0x400f3e5	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7985	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f3ec	            0x755d	                           jne 0x400f44b	      7985	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f3ee	    0x488b0d000000	            mov rcx, qword [0x0400f3f5] 	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f3f5	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f3fb	          0x4863d0	                         movsxd rdx, eax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f3fe	          0x4889d0	                            mov rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f401	        0x48c1e003	                              shl rax, 3	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f405	          0x4801d0	                            add rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f408	          0x4801c0	                            add rax, rax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f40b	          0x4801d0	                            add rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f40e	        0x48c1e003	                              shl rax, 3	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f412	          0x4801c1	                            add rcx, rax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f415	    0x488b35000000	            mov rsi, qword [0x0400f41c] 	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f41c	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f422	          0x4863d0	                         movsxd rdx, eax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f425	          0x4889d0	                            mov rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f428	        0x48c1e003	                              shl rax, 3	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f42c	          0x4801d0	                            add rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f42f	          0x4801c0	                            add rax, rax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f432	          0x4801d0	                            add rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f435	        0x48c1e003	                              shl rax, 3	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f439	          0x4801f0	                            add rax, rsi	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f43c	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f442	          0x83c804	                               or eax, 4	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f445	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0x400f44b	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7990	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_118
0x400f452	          0x4889c7	                            mov rdi, rax	      7990	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_118
0x400f455	      0xe800000000	                          call 0x400f45a	      7990	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_118
0x400f45a	    0x48898588feff	            mov qword [rbp - 0x178], rax	      7990	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_118
0x400f461	    0x4881bd88feff	cmp qword [rbp - 0x178], 0xffffffffffffd499	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f46c	            0x7534	                           jne 0x400f4a2	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f46e	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f475	      0xbe00000000	                              mov esi, 0	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f47a	          0x4889c7	                            mov rdi, rax	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f47d	      0xe800000000	                          call 0x400f482	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f482	            0x85c0	                           test eax, eax	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f484	            0x741c	                            je 0x400f4a2	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f486	    0x8b0500000000	            mov eax, dword [0x0400f48c] 	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f48c	            0x85c0	                           test eax, eax	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f48e	     0xf8561090000	                           jne 0x400fdf5	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f494	    0x8b0500000000	            mov eax, dword [0x0400f49a] 	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f49a	            0x85c0	                           test eax, eax	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f49c	     0xf8553090000	                           jne 0x400fdf5	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_119
0x400f4a2	    0x488b0d000000	            mov rcx, qword [0x0400f4a9] 	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4a9	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4af	          0x4863d0	                         movsxd rdx, eax	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4b2	          0x4889d0	                            mov rax, rdx	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4b5	        0x48c1e003	                              shl rax, 3	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4b9	          0x4801d0	                            add rax, rdx	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4bc	          0x4801c0	                            add rax, rax	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4bf	          0x4801d0	                            add rax, rdx	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4c2	        0x48c1e003	                              shl rax, 3	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4c6	        0x488d1401	                    lea rdx, [rcx + rax]	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4ca	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4d1	        0x48894240	             mov qword [rdx + 0x40], rax	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88
0x400f4d5	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f4dc	          0x488b00	                    mov rax, qword [rax]	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f4df	          0x4885c0	                           test rax, rax	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f4e2	            0x7424	                            je 0x400f508	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f4e4	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f4eb	          0x488b00	                    mov rax, qword [rax]	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f4ee	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f4f5	          0x4889d6	                            mov rsi, rdx	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f4f8	          0x4889c7	                            mov rdi, rax	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f4fb	      0xe800000000	                          call 0x400f500	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f500	            0x85c0	                           test eax, eax	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f502	     0xf84ed080000	                            je 0x400fdf5	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_120
0x400f508	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7997	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_121
0x400f50f	          0x488b00	                    mov rax, qword [rax]	      7997	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_121
0x400f512	          0x4889c7	                            mov rdi, rax	      7997	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_121
0x400f515	      0xe800000000	                          call 0x400f51a	      7997	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_121
0x400f51a	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_122
0x400f521	      0xbe00000000	                              mov esi, 0	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_122
0x400f526	          0x4889c7	                            mov rdi, rax	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_122
0x400f529	      0xe800000000	                          call 0x400f52e	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_122
0x400f52e	            0x85c0	                           test eax, eax	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_122
0x400f530	            0x741e	                            je 0x400f550	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_122
0x400f532	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_123
0x400f539	          0x4889c7	                            mov rdi, rax	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_123
0x400f53c	      0xe800000000	                          call 0x400f541	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_123
0x400f541	          0x4889c2	                            mov rdx, rax	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_123
0x400f544	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_123
0x400f54b	          0x488910	                    mov qword [rax], rdx	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_123
0x400f54e	            0xeb0e	                           jmp 0x400f55e	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_123
0x400f550	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      8001	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0x400f557	    0x48c700000000	                      mov qword [rax], 0	      8001	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0x400f55e	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	      8002	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0x400f568	      0xe988080000	                           jmp 0x400fdf5	      8002	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0x400f56d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_124
0x400f574	      0xbe00000000	                              mov esi, 0	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_124
0x400f579	          0x4889c7	                            mov rdi, rax	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_124
0x400f57c	      0xe800000000	                          call 0x400f581	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_124
0x400f581	            0x85c0	                           test eax, eax	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_124
0x400f583	     0xf85fb010000	                           jne 0x400f784	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_124
0x400f589	    0x488b0d000000	            mov rcx, qword [0x0400f590] 	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f590	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f596	          0x4863d0	                         movsxd rdx, eax	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f599	          0x4889d0	                            mov rax, rdx	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f59c	        0x48c1e003	                              shl rax, 3	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f5a0	          0x4801d0	                            add rax, rdx	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f5a3	          0x4801c0	                            add rax, rax	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f5a6	          0x4801d0	                            add rax, rdx	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f5a9	        0x48c1e003	                              shl rax, 3	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f5ad	          0x4801c8	                            add rax, rcx	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f5b0	        0x4883c078	                           add rax, 0x78	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f5b4	    0x488985a8feff	            mov qword [rbp - 0x158], rax	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94
0x400f5bb	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5c2	            0x7438	                            je 0x400f5fc	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5c4	    0x488b0d000000	            mov rcx, qword [0x0400f5cb] 	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5cb	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5d1	          0x4863d0	                         movsxd rdx, eax	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5d4	          0x4889d0	                            mov rax, rdx	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5d7	        0x48c1e003	                              shl rax, 3	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5db	          0x4801d0	                            add rax, rdx	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5de	          0x4801c0	                            add rax, rax	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5e1	          0x4801d0	                            add rax, rdx	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5e4	        0x48c1e003	                              shl rax, 3	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5e8	          0x4801c8	                            add rax, rcx	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5eb	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5f1	          0x83e004	                              and eax, 4	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5f4	            0x85c0	                           test eax, eax	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5f6	     0xf85f9070000	                           jne 0x400fdf5	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95
0x400f5fc	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8036	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f603	            0x755d	                           jne 0x400f662	      8036	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f605	    0x488b0d000000	            mov rcx, qword [0x0400f60c] 	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f60c	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f612	          0x4863d0	                         movsxd rdx, eax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f615	          0x4889d0	                            mov rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f618	        0x48c1e003	                              shl rax, 3	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f61c	          0x4801d0	                            add rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f61f	          0x4801c0	                            add rax, rax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f622	          0x4801d0	                            add rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f625	        0x48c1e003	                              shl rax, 3	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f629	          0x4801c1	                            add rcx, rax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f62c	    0x488b35000000	            mov rsi, qword [0x0400f633] 	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f633	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f639	          0x4863d0	                         movsxd rdx, eax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f63c	          0x4889d0	                            mov rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f63f	        0x48c1e003	                              shl rax, 3	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f643	          0x4801d0	                            add rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f646	          0x4801c0	                            add rax, rax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f649	          0x4801d0	                            add rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f64c	        0x48c1e003	                              shl rax, 3	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f650	          0x4801f0	                            add rax, rsi	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f653	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f659	          0x83c804	                               or eax, 4	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f65c	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0x400f662	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8041	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_125
0x400f669	          0x4889c7	                            mov rdi, rax	      8041	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_125
0x400f66c	      0xe800000000	                          call 0x400f671	      8041	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_125
0x400f671	    0x48898588feff	            mov qword [rbp - 0x178], rax	      8041	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_125
0x400f678	    0x4881bd88feff	cmp qword [rbp - 0x178], 0xffffffffffffd499	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f683	            0x7534	                           jne 0x400f6b9	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f685	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f68c	      0xbe00000000	                              mov esi, 0	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f691	          0x4889c7	                            mov rdi, rax	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f694	      0xe800000000	                          call 0x400f699	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f699	            0x85c0	                           test eax, eax	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f69b	            0x741c	                            je 0x400f6b9	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f69d	    0x8b0500000000	            mov eax, dword [0x0400f6a3] 	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f6a3	            0x85c0	                           test eax, eax	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f6a5	     0xf854a070000	                           jne 0x400fdf5	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f6ab	    0x8b0500000000	            mov eax, dword [0x0400f6b1] 	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f6b1	            0x85c0	                           test eax, eax	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f6b3	     0xf853c070000	                           jne 0x400fdf5	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_126
0x400f6b9	    0x488b0d000000	            mov rcx, qword [0x0400f6c0] 	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6c0	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6c6	          0x4863d0	                         movsxd rdx, eax	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6c9	          0x4889d0	                            mov rax, rdx	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6cc	        0x48c1e003	                              shl rax, 3	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6d0	          0x4801d0	                            add rax, rdx	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6d3	          0x4801c0	                            add rax, rax	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6d6	          0x4801d0	                            add rax, rdx	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6d9	        0x48c1e003	                              shl rax, 3	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6dd	        0x488d1401	                    lea rdx, [rcx + rax]	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6e1	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6e8	        0x48894248	             mov qword [rdx + 0x48], rax	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97
0x400f6ec	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f6f3	          0x488b00	                    mov rax, qword [rax]	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f6f6	          0x4885c0	                           test rax, rax	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f6f9	            0x7424	                            je 0x400f71f	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f6fb	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f702	          0x488b00	                    mov rax, qword [rax]	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f705	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f70c	          0x4889d6	                            mov rsi, rdx	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f70f	          0x4889c7	                            mov rdi, rax	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f712	      0xe800000000	                          call 0x400f717	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f717	            0x85c0	                           test eax, eax	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f719	     0xf84d6060000	                            je 0x400fdf5	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_127
0x400f71f	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      8048	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_128
0x400f726	          0x488b00	                    mov rax, qword [rax]	      8048	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_128
0x400f729	          0x4889c7	                            mov rdi, rax	      8048	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_128
0x400f72c	      0xe800000000	                          call 0x400f731	      8048	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_128
0x400f731	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_129
0x400f738	      0xbe00000000	                              mov esi, 0	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_129
0x400f73d	          0x4889c7	                            mov rdi, rax	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_129
0x400f740	      0xe800000000	                          call 0x400f745	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_129
0x400f745	            0x85c0	                           test eax, eax	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_129
0x400f747	            0x741e	                            je 0x400f767	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_129
0x400f749	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_130
0x400f750	          0x4889c7	                            mov rdi, rax	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_130
0x400f753	      0xe800000000	                          call 0x400f758	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_130
0x400f758	          0x4889c2	                            mov rdx, rax	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_130
0x400f75b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_130
0x400f762	          0x488910	                    mov qword [rax], rdx	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_130
0x400f765	            0xeb0e	                           jmp 0x400f775	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_130
0x400f767	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      8052	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0x400f76e	    0x48c700000000	                      mov qword [rax], 0	      8052	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0x400f775	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	      8053	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0x400f77f	      0xe971060000	                           jmp 0x400fdf5	      8053	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0x400f784	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_131
0x400f78b	      0xbe00000000	                              mov esi, 0	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_131
0x400f790	          0x4889c7	                            mov rdi, rax	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_131
0x400f793	      0xe800000000	                          call 0x400f798	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_131
0x400f798	            0x85c0	                           test eax, eax	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_131
0x400f79a	     0xf85ed010000	                           jne 0x400f98d	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_131
0x400f7a0	    0x488b0d000000	            mov rcx, qword [0x0400f7a7] 	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7a7	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7ad	          0x4863d0	                         movsxd rdx, eax	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7b0	          0x4889d0	                            mov rax, rdx	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7b3	        0x48c1e003	                              shl rax, 3	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7b7	          0x4801d0	                            add rax, rdx	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7ba	          0x4801c0	                            add rax, rax	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7bd	          0x4801d0	                            add rax, rdx	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7c0	        0x48c1e003	                              shl rax, 3	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7c4	          0x4801c8	                            add rax, rcx	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7c7	        0x4883e880	             sub rax, 0xffffffffffffff80	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7cb	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103
0x400f7d2	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f7d9	            0x7438	                            je 0x400f813	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f7db	    0x488b0d000000	            mov rcx, qword [0x0400f7e2] 	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f7e2	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f7e8	          0x4863d0	                         movsxd rdx, eax	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f7eb	          0x4889d0	                            mov rax, rdx	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f7ee	        0x48c1e003	                              shl rax, 3	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f7f2	          0x4801d0	                            add rax, rdx	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f7f5	          0x4801c0	                            add rax, rax	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f7f8	          0x4801d0	                            add rax, rdx	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f7fb	        0x48c1e003	                              shl rax, 3	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f7ff	          0x4801c8	                            add rax, rcx	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f802	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f808	          0x83e004	                              and eax, 4	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f80b	            0x85c0	                           test eax, eax	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f80d	     0xf85e2050000	                           jne 0x400fdf5	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104
0x400f813	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8087	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f81a	            0x755d	                           jne 0x400f879	      8087	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f81c	    0x488b0d000000	            mov rcx, qword [0x0400f823] 	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f823	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f829	          0x4863d0	                         movsxd rdx, eax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f82c	          0x4889d0	                            mov rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f82f	        0x48c1e003	                              shl rax, 3	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f833	          0x4801d0	                            add rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f836	          0x4801c0	                            add rax, rax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f839	          0x4801d0	                            add rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f83c	        0x48c1e003	                              shl rax, 3	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f840	          0x4801c1	                            add rcx, rax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f843	    0x488b35000000	            mov rsi, qword [0x0400f84a] 	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f84a	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f850	          0x4863d0	                         movsxd rdx, eax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f853	          0x4889d0	                            mov rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f856	        0x48c1e003	                              shl rax, 3	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f85a	          0x4801d0	                            add rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f85d	          0x4801c0	                            add rax, rax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f860	          0x4801d0	                            add rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f863	        0x48c1e003	                              shl rax, 3	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f867	          0x4801f0	                            add rax, rsi	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f86a	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f870	          0x83c804	                               or eax, 4	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f873	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0x400f879	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8091	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_132
0x400f880	          0x4889c7	                            mov rdi, rax	      8091	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_132
0x400f883	      0xe800000000	                          call 0x400f888	      8091	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_132
0x400f888	    0x48898588feff	            mov qword [rbp - 0x178], rax	      8091	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_132
0x400f88f	    0x4881bd88feff	cmp qword [rbp - 0x178], 0xffffffffffffd499	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_133
0x400f89a	            0x7526	                           jne 0x400f8c2	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_133
0x400f89c	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_133
0x400f8a3	      0xbe00000000	                              mov esi, 0	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_133
0x400f8a8	          0x4889c7	                            mov rdi, rax	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_133
0x400f8ab	      0xe800000000	                          call 0x400f8b0	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_133
0x400f8b0	            0x85c0	                           test eax, eax	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_133
0x400f8b2	            0x740e	                            je 0x400f8c2	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_133
0x400f8b4	    0x8b0500000000	            mov eax, dword [0x0400f8ba] 	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_133
0x400f8ba	            0x85c0	                           test eax, eax	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_133
0x400f8bc	     0xf8533050000	                           jne 0x400fdf5	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_133
0x400f8c2	    0x488b0d000000	            mov rcx, qword [0x0400f8c9] 	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8c9	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8cf	          0x4863d0	                         movsxd rdx, eax	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8d2	          0x4889d0	                            mov rax, rdx	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8d5	        0x48c1e003	                              shl rax, 3	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8d9	          0x4801d0	                            add rax, rdx	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8dc	          0x4801c0	                            add rax, rax	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8df	          0x4801d0	                            add rax, rdx	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8e2	        0x48c1e003	                              shl rax, 3	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8e6	        0x488d1401	                    lea rdx, [rcx + rax]	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8ea	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8f1	        0x48894250	             mov qword [rdx + 0x50], rax	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106
0x400f8f5	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f8fc	          0x488b00	                    mov rax, qword [rax]	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f8ff	          0x4885c0	                           test rax, rax	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f902	            0x7424	                            je 0x400f928	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f904	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f90b	          0x488b00	                    mov rax, qword [rax]	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f90e	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f915	          0x4889d6	                            mov rsi, rdx	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f918	          0x4889c7	                            mov rdi, rax	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f91b	      0xe800000000	                          call 0x400f920	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f920	            0x85c0	                           test eax, eax	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f922	     0xf84cd040000	                            je 0x400fdf5	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_134
0x400f928	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      8098	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_135
0x400f92f	          0x488b00	                    mov rax, qword [rax]	      8098	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_135
0x400f932	          0x4889c7	                            mov rdi, rax	      8098	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_135
0x400f935	      0xe800000000	                          call 0x400f93a	      8098	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_135
0x400f93a	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_136
0x400f941	      0xbe00000000	                              mov esi, 0	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_136
0x400f946	          0x4889c7	                            mov rdi, rax	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_136
0x400f949	      0xe800000000	                          call 0x400f94e	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_136
0x400f94e	            0x85c0	                           test eax, eax	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_136
0x400f950	            0x741e	                            je 0x400f970	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_136
0x400f952	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_137
0x400f959	          0x4889c7	                            mov rdi, rax	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_137
0x400f95c	      0xe800000000	                          call 0x400f961	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_137
0x400f961	          0x4889c2	                            mov rdx, rax	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_137
0x400f964	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_137
0x400f96b	          0x488910	                    mov qword [rax], rdx	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_137
0x400f96e	            0xeb0e	                           jmp 0x400f97e	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_137
0x400f970	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      8102	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0x400f977	    0x48c700000000	                      mov qword [rax], 0	      8102	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0x400f97e	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	      8103	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0x400f988	      0xe968040000	                           jmp 0x400fdf5	      8103	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0x400f98d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f994	      0xbe00000000	                              mov esi, 0	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f999	          0x4889c7	                            mov rdi, rax	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f99c	      0xe800000000	                          call 0x400f9a1	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f9a1	            0x85c0	                           test eax, eax	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f9a3	            0x741c	                            je 0x400f9c1	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f9a5	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f9ac	      0xbe00000000	                              mov esi, 0	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f9b1	          0x4889c7	                            mov rdi, rax	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f9b4	      0xe800000000	                          call 0x400f9b9	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f9b9	            0x85c0	                           test eax, eax	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f9bb	     0xf8502040000	                           jne 0x400fdc3	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_139
0x400f9c1	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8116	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9c8	            0x755d	                           jne 0x400fa27	      8116	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9ca	    0x488b0d000000	            mov rcx, qword [0x0400f9d1] 	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9d1	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9d7	          0x4863d0	                         movsxd rdx, eax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9da	          0x4889d0	                            mov rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9dd	        0x48c1e003	                              shl rax, 3	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9e1	          0x4801d0	                            add rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9e4	          0x4801c0	                            add rax, rax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9e7	          0x4801d0	                            add rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9ea	        0x48c1e003	                              shl rax, 3	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9ee	          0x4801c1	                            add rcx, rax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9f1	    0x488b35000000	            mov rsi, qword [0x0400f9f8] 	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9f8	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400f9fe	          0x4863d0	                         movsxd rdx, eax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400fa01	          0x4889d0	                            mov rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400fa04	        0x48c1e003	                              shl rax, 3	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400fa08	          0x4801d0	                            add rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400fa0b	          0x4801c0	                            add rax, rax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400fa0e	          0x4801d0	                            add rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400fa11	        0x48c1e003	                              shl rax, 3	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400fa15	          0x4801f0	                            add rax, rsi	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400fa18	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400fa1e	          0x83c801	                               or eax, 1	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400fa21	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0x400fa27	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_140
0x400fa2e	      0xba02000000	                              mov edx, 2	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_140
0x400fa33	      0xbe00000000	                              mov esi, 0	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_140
0x400fa38	          0x4889c7	                            mov rdi, rax	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_140
0x400fa3b	      0xe800000000	                          call 0x400fa40	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_140
0x400fa40	            0x85c0	                           test eax, eax	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_140
0x400fa42	     0xf85a1010000	                           jne 0x400fbe9	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_140
0x400fa48	    0xc78514feffff	              mov dword [rbp - 0x1ec], 0	      8125	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111
0x400fa52	        0xc6458000	                mov byte [rbp - 0x80], 0	      8126	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111
0x400fa56	      0xe96b010000	                           jmp 0x400fbc6	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400fa5b	    0xc78518feffff	              mov dword [rbp - 0x1e8], 0	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa65	            0xeb07	                           jmp 0x400fa6e	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa67	    0x838518feffff	              add dword [rbp - 0x1e8], 1	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa6e	    0x8b9514feffff	            mov edx, dword [rbp - 0x1ec]	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa74	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa7a	             0x1d0	                            add eax, edx	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa7c	          0x4863d0	                         movsxd rdx, eax	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa7f	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa86	          0x4801d0	                            add rax, rdx	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa89	           0xfb600	                   movzx eax, byte [rax]	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa8c	            0x84c0	                             test al, al	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa8e	            0x7422	                            je 0x400fab2	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa90	    0x8b9514feffff	            mov edx, dword [rbp - 0x1ec]	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa96	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa9c	             0x1d0	                            add eax, edx	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fa9e	          0x4863d0	                         movsxd rdx, eax	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400faa1	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400faa8	          0x4801d0	                            add rax, rdx	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400faab	           0xfb600	                   movzx eax, byte [rax]	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400faae	            0x3c2c	                            cmp al, 0x2c	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fab0	            0x75b5	                           jne 0x400fa67	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0x400fab2	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_141
0x400fab8	          0x4863d0	                         movsxd rdx, eax	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_141
0x400fabb	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_141
0x400fac2	          0x4801c2	                            add rdx, rax	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_141
0x400fac5	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_141
0x400facb	            0x89c6	                            mov esi, eax	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_141
0x400facd	          0x4889d7	                            mov rdi, rdx	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_141
0x400fad0	      0xe800000000	                          call 0x400fad5	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_141
0x400fad5	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_141
0x400fadc	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	      8134	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_112
0x400fae4	            0x750f	                           jne 0x400faf5	      8134	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_112
0x400fae6	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      8136	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_112
0x400faf0	      0xe9a7010000	                           jmp 0x400fc9c	      8137	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_112
0x400faf5	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      8140	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_142
0x400fafc	          0x4889c7	                            mov rdi, rax	      8140	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_142
0x400faff	      0xe800000000	                          call 0x400fb04	      8140	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_142
0x400fb04	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      8140	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_142
0x400fb0b	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      8141	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_143
0x400fb12	          0x4889c7	                            mov rdi, rax	      8141	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_143
0x400fb15	      0xe800000000	                          call 0x400fb1a	      8141	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_143
0x400fb1a	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8142	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_113
0x400fb21	          0x4885c0	                           test rax, rax	      8142	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_113
0x400fb24	            0x750b	                           jne 0x400fb31	      8142	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_113
0x400fb26	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	      8143	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_113
0x400fb31	        0x488d4580	                   lea rax, [rbp - 0x80]	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_145
0x400fb35	          0x4889c7	                            mov rdi, rax	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_145
0x400fb38	      0xe800000000	                          call 0x400fb3d	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_145
0x400fb3d	            0x89c3	                            mov ebx, eax	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_145
0x400fb3f	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_145
0x400fb46	          0x4889c7	                            mov rdi, rax	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_145
0x400fb49	      0xe800000000	                          call 0x400fb4e	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_145
0x400fb4e	             0x1d8	                            add eax, ebx	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_145
0x400fb50	          0x83f862	                           cmp eax, 0x62	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_145
0x400fb53	            0x7e2e	                           jle 0x400fb83	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_145
0x400fb55	      0xbf00000000	                              mov edi, 0	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_147
0x400fb5a	      0xe800000000	                          call 0x400fb5f	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_147
0x400fb5f	          0x4889c2	                            mov rdx, rax	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_147
0x400fb62	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_147
0x400fb69	          0x4889c6	                            mov rsi, rax	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_147
0x400fb6c	          0x4889d7	                            mov rdi, rdx	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_147
0x400fb6f	      0xe800000000	                          call 0x400fb74	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_147
0x400fb74	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      8149	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114
0x400fb7e	      0xe919010000	                           jmp 0x400fc9c	      8150	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114
0x400fb83	    0x488b9558feff	            mov rdx, qword [rbp - 0x1a8]	      8152	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_148
0x400fb8a	        0x488d4580	                   lea rax, [rbp - 0x80]	      8152	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_148
0x400fb8e	          0x4889d6	                            mov rsi, rdx	      8152	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_148
0x400fb91	          0x4889c7	                            mov rdi, rax	      8152	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_148
0x400fb94	      0xe800000000	                          call 0x400fb99	      8152	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_148
0x400fb99	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      8155	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400fb9f	     0x18514feffff	            add dword [rbp - 0x1ec], eax	      8155	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400fba5	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400fbab	          0x4863d0	                         movsxd rdx, eax	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400fbae	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400fbb5	          0x4801d0	                            add rax, rdx	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400fbb8	           0xfb600	                   movzx eax, byte [rax]	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400fbbb	            0x3c2c	                            cmp al, 0x2c	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400fbbd	            0x7507	                           jne 0x400fbc6	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400fbbf	    0x838514feffff	              add dword [rbp - 0x1ec], 1	      8157	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0x400fbc6	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400fbcc	          0x4863d0	                         movsxd rdx, eax	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400fbcf	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400fbd6	          0x4801d0	                            add rax, rdx	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400fbd9	           0xfb600	                   movzx eax, byte [rax]	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400fbdc	            0x84c0	                             test al, al	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400fbde	     0xf8577feffff	                           jne 0x400fa5b	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400fbe4	      0xe9b3000000	                           jmp 0x400fc9c	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0x400fbe9	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400fbf0	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400fbf7	    0xc78514feffff	              mov dword [rbp - 0x1ec], 0	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400fc01	            0xeb71	                           jmp 0x400fc74	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400fc03	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_149
0x400fc09	            0x4898	                                    cdqe	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_149
0x400fc0b	        0x488d5580	                   lea rdx, [rbp - 0x80]	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_149
0x400fc0f	        0x488d3402	                    lea rsi, [rdx + rax]	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_149
0x400fc13	    0x488d8558feff	                  lea rax, [rbp - 0x1a8]	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_149
0x400fc1a	      0xb900000000	                              mov ecx, 0	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_149
0x400fc1f	      0xba00000000	                              mov edx, 0	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_149
0x400fc24	          0x4889c7	                            mov rdi, rax	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_149
0x400fc27	      0xe800000000	                          call 0x400fc2c	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_149
0x400fc2c	    0x898518feffff	            mov dword [rbp - 0x1e8], eax	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_149
0x400fc32	    0x83bd18feffff	              cmp dword [rbp - 0x1e8], 0	      8168	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0x400fc39	            0x7e0e	                           jle 0x400fc49	      8168	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0x400fc3b	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      8169	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0x400fc41	     0x18514feffff	            add dword [rbp - 0x1ec], eax	      8169	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0x400fc47	            0xeb2b	                           jmp 0x400fc74	      8169	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0x400fc49	    0x8b9514feffff	            mov edx, dword [rbp - 0x1ec]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400fc4f	          0x8d4201	                      lea eax, [rdx + 1]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400fc52	    0x898514feffff	            mov dword [rbp - 0x1ec], eax	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400fc58	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400fc5f	        0x488d4801	                      lea rcx, [rax + 1]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400fc63	    0x48898d58feff	            mov qword [rbp - 0x1a8], rcx	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400fc6a	           0xfb608	                   movzx ecx, byte [rax]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400fc6d	          0x4863c2	                         movsxd rax, edx	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400fc70	        0x884c0580	         mov byte [rbp + rax - 0x80], cl	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0x400fc74	    0x83bd14feffff	          cmp dword [rbp - 0x1ec], 0x5d 	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400fc7b	            0x7f12	                            jg 0x400fc8f	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400fc7d	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400fc84	           0xfb600	                   movzx eax, byte [rax]	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400fc87	            0x84c0	                             test al, al	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400fc89	     0xf8574ffffff	                           jne 0x400fc03	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0x400fc8f	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      8173	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33
0x400fc95	            0x4898	                                    cdqe	      8173	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33
0x400fc97	      0xc644058000	          mov byte [rbp + rax - 0x80], 0	      8173	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33
0x400fc9c	    0x83bd34feffff	              cmp dword [rbp - 0x1cc], 0	      8175	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_117
0x400fca3	     0xf851f020000	                           jne 0x400fec8	      8175	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_117
0x400fca9	        0x488d4580	                   lea rax, [rbp - 0x80]	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_150
0x400fcad	      0xbe00000000	                              mov esi, 0	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_150
0x400fcb2	          0x4889c7	                            mov rdi, rax	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_150
0x400fcb5	      0xe800000000	                          call 0x400fcba	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_150
0x400fcba	            0x85c0	                           test eax, eax	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_150
0x400fcbc	            0x750d	                           jne 0x400fccb	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_150
0x400fcbe	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	      8179	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118
0x400fcc9	            0xeb13	                           jmp 0x400fcde	      8179	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118
0x400fccb	        0x488d4580	                   lea rax, [rbp - 0x80]	      8181	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_151
0x400fccf	          0x4889c7	                            mov rdi, rax	      8181	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_151
0x400fcd2	      0xe800000000	                          call 0x400fcd7	      8181	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_151
0x400fcd7	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      8181	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_151
0x400fcde	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fce5	        0x4883c002	                              add rax, 2	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fce9	           0xfb600	                   movzx eax, byte [rax]	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fcec	            0x3c41	                            cmp al, 0x41	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fcee	            0x756b	                           jne 0x400fd5b	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fcf0	    0x488b0d000000	            mov rcx, qword [0x0400fcf7] 	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fcf7	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fcfd	          0x4863d0	                         movsxd rdx, eax	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fd00	          0x4889d0	                            mov rax, rdx	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fd03	        0x48c1e003	                              shl rax, 3	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fd07	          0x4801d0	                            add rax, rdx	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fd0a	          0x4801c0	                            add rax, rax	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fd0d	          0x4801d0	                            add rax, rdx	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fd10	        0x48c1e003	                              shl rax, 3	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fd14	          0x4801c8	                            add rax, rcx	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fd17	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fd1b	          0x4889c7	                            mov rdi, rax	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fd1e	      0xe800000000	                          call 0x400fd23	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_152
0x400fd23	    0x488b0d000000	            mov rcx, qword [0x0400fd2a] 	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd2a	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd30	          0x4863d0	                         movsxd rdx, eax	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd33	          0x4889d0	                            mov rax, rdx	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd36	        0x48c1e003	                              shl rax, 3	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd3a	          0x4801d0	                            add rax, rdx	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd3d	          0x4801c0	                            add rax, rax	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd40	          0x4801d0	                            add rax, rdx	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd43	        0x48c1e003	                              shl rax, 3	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd47	        0x488d1401	                    lea rdx, [rcx + rax]	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd4b	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd52	        0x48894218	             mov qword [rdx + 0x18], rax	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0x400fd56	      0xe99a000000	                           jmp 0x400fdf5	      8112	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109
0x400fd5b	    0x488b0d000000	            mov rcx, qword [0x0400fd62] 	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd62	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd68	          0x4863d0	                         movsxd rdx, eax	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd6b	          0x4889d0	                            mov rax, rdx	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd6e	        0x48c1e003	                              shl rax, 3	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd72	          0x4801d0	                            add rax, rdx	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd75	          0x4801c0	                            add rax, rax	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd78	          0x4801d0	                            add rax, rdx	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd7b	        0x48c1e003	                              shl rax, 3	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd7f	          0x4801c8	                            add rax, rcx	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd82	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd86	          0x4889c7	                            mov rdi, rax	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd89	      0xe800000000	                          call 0x400fd8e	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_153
0x400fd8e	    0x488b0d000000	            mov rcx, qword [0x0400fd95] 	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fd95	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fd9b	          0x4863d0	                         movsxd rdx, eax	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fd9e	          0x4889d0	                            mov rax, rdx	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fda1	        0x48c1e003	                              shl rax, 3	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fda5	          0x4801d0	                            add rax, rdx	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fda8	          0x4801c0	                            add rax, rax	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fdab	          0x4801d0	                            add rax, rdx	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fdae	        0x48c1e003	                              shl rax, 3	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fdb2	        0x488d1401	                    lea rdx, [rcx + rax]	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fdb6	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fdbd	        0x48894220	             mov qword [rdx + 0x20], rax	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36
0x400fdc1	            0xeb32	                           jmp 0x400fdf5	      8112	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109
0x400fdc3	      0xbf00000000	                              mov edi, 0	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_155
0x400fdc8	      0xe800000000	                          call 0x400fdcd	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_155
0x400fdcd	          0x4889c2	                            mov rdx, rax	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_155
0x400fdd0	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_155
0x400fdd7	          0x4889c6	                            mov rsi, rax	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_155
0x400fdda	          0x4889d7	                            mov rdi, rdx	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_155
0x400fddd	      0xe800000000	                          call 0x400fde2	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_155
0x400fde2	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      8196	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37
0x400fdec	      0xe9d8000000	                           jmp 0x400fec9	      8197	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37
0x400fdf1	              0x90	                                     nop	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400fdf2	            0xeb01	                           jmp 0x400fdf5	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0x400fdf4	              0x90	                                     nop	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61
0x400fdf5	    0x488b0d000000	            mov rcx, qword [0x0400fdfc] 	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400fdfc	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400fe02	          0x4863d0	                         movsxd rdx, eax	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400fe05	          0x4889d0	                            mov rax, rdx	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400fe08	        0x48c1e003	                              shl rax, 3	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400fe0c	          0x4801d0	                            add rax, rdx	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400fe0f	          0x4801c0	                            add rax, rax	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400fe12	          0x4801d0	                            add rax, rdx	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400fe15	        0x48c1e003	                              shl rax, 3	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400fe19	          0x4801c8	                            add rax, rcx	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400fe1c	    0xc74010000000	               mov dword [rax + 0x10], 0	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1
0x400fe23	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe2a	            0x7434	                            je 0x400fe60	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe2c	    0x488b0d000000	            mov rcx, qword [0x0400fe33] 	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe33	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe39	          0x4863d0	                         movsxd rdx, eax	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe3c	          0x4889d0	                            mov rax, rdx	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe3f	        0x48c1e003	                              shl rax, 3	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe43	          0x4801d0	                            add rax, rdx	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe46	          0x4801c0	                            add rax, rax	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe49	          0x4801d0	                            add rax, rdx	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe4c	        0x48c1e003	                              shl rax, 3	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe50	          0x4801c8	                            add rax, rcx	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe53	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe59	          0x83e008	                              and eax, 8	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe5c	            0x85c0	                           test eax, eax	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe5e	            0x7531	                           jne 0x400fe91	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe60	    0x488b0d000000	            mov rcx, qword [0x0400fe67] 	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe67	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe6d	          0x4863d0	                         movsxd rdx, eax	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe70	          0x4889d0	                            mov rax, rdx	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe73	        0x48c1e003	                              shl rax, 3	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe77	          0x4801d0	                            add rax, rdx	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe7a	          0x4801c0	                            add rax, rax	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe7d	          0x4801d0	                            add rax, rdx	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe80	        0x48c1e003	                              shl rax, 3	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe84	          0x4801c8	                            add rax, rcx	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe87	    0xc78088000000	               mov dword [rax + 0x88], 0	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120
0x400fe91	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      8210	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_156
0x400fe98	          0x4889c7	                            mov rdi, rax	      8210	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_156
0x400fe9b	      0xe800000000	                          call 0x400fea0	      8210	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_156
0x400fea0	    0x48898568feff	            mov qword [rbp - 0x198], rax	      8210	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_156
0x400fea7	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_58
0x400feae	           0xfb600	                   movzx eax, byte [rax]	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_58
0x400feb1	           0xfb6c0	                           movzx eax, al	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_58
0x400feb4	            0x89c7	                            mov edi, eax	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_58
0x400feb6	      0xe800000000	                          call 0x400febb	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_58
0x400febb	            0x85c0	                           test eax, eax	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_58
0x400febd	     0xf8421e3ffff	                            je 0x400e1e4	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_58
0x400fec3	            0xeb04	                           jmp 0x400fec9	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_58
0x400fec5	              0x90	                                     nop	      7749	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_46
0x400fec6	            0xeb01	                           jmp 0x400fec9	      7749	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_46
0x400fec8	              0x90	                                     nop	      8176	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_117
0x400fec9	    0x83bd34feffff	              cmp dword [rbp - 0x1cc], 0	      8216	syntax.c	FUNCTION_116	IF_121
0x400fed0	            0x7418	                            je 0x400feea	      8216	syntax.c	FUNCTION_116	IF_121
0x400fed2	    0x8b0500000000	            mov eax, dword [0x0400fed8] 	      8216	syntax.c	FUNCTION_116	IF_121
0x400fed8	    0x3b8520feffff	            cmp eax, dword [rbp - 0x1e0]	      8216	syntax.c	FUNCTION_116	IF_121
0x400fede	            0x750a	                           jne 0x400feea	      8216	syntax.c	FUNCTION_116	IF_121
0x400fee0	      0xe897330000	                call sym.syn_unadd_group	      8217	syntax.c	FUNCTION_116	CALL_157
0x400fee5	      0xe973010000	                           jmp 0x401005d	      8217	syntax.c	FUNCTION_116	CALL_157
0x400feea	    0x83bd3cfeffff	              cmp dword [rbp - 0x1c4], 0	      8220	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400fef1	     0xf84bd000000	                            je 0x400ffb4	      8220	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400fef7	    0x488b0d000000	            mov rcx, qword [0x0400fefe] 	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400fefe	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff04	          0x4863d0	                         movsxd rdx, eax	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff07	          0x4889d0	                            mov rax, rdx	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff0a	        0x48c1e003	                              shl rax, 3	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff0e	          0x4801d0	                            add rax, rdx	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff11	          0x4801c0	                            add rax, rax	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff14	          0x4801d0	                            add rax, rdx	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff17	        0x48c1e003	                              shl rax, 3	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff1b	          0x4801c8	                            add rax, rcx	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff1e	    0xc74028000000	               mov dword [rax + 0x28], 0	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff25	    0x488b0d000000	            mov rcx, qword [0x0400ff2c] 	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff2c	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff32	          0x4863d0	                         movsxd rdx, eax	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff35	          0x4889d0	                            mov rax, rdx	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff38	        0x48c1e003	                              shl rax, 3	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff3c	          0x4801d0	                            add rax, rdx	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff3f	          0x4801c0	                            add rax, rax	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff42	          0x4801d0	                            add rax, rdx	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff45	        0x48c1e003	                              shl rax, 3	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff49	          0x4801c8	                            add rax, rcx	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff4c	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff53	    0x488b0d000000	            mov rcx, qword [0x0400ff5a] 	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff5a	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff60	          0x4863d0	                         movsxd rdx, eax	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff63	          0x4889d0	                            mov rax, rdx	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff66	        0x48c1e003	                              shl rax, 3	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff6a	          0x4801d0	                            add rax, rdx	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff6d	          0x4801c0	                            add rax, rax	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff70	          0x4801d0	                            add rax, rdx	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff73	        0x48c1e003	                              shl rax, 3	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff77	          0x4801c8	                            add rax, rcx	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff7a	    0xc74068000000	               mov dword [rax + 0x68], 0	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122
0x400ff81	    0x8b0500000000	            mov eax, dword [0x0400ff87] 	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400ff87	            0x85c0	                           test eax, eax	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400ff89	            0x750e	                           jne 0x400ff99	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400ff8b	    0x8b0500000000	            mov eax, dword [0x0400ff91] 	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400ff91	            0x85c0	                           test eax, eax	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400ff93	     0xf8490000000	                            je 0x4010029	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400ff99	      0xe800000000	                          call 0x400ff9e	      8234	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123	CALL_158
0x400ff9e	    0xc78544feffff	              mov dword [rbp - 0x1bc], 1	      8235	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0x400ffa8	      0xbf28000000	                           mov edi, 0x28	      8236	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123	CALL_159
0x400ffad	      0xe800000000	                          call 0x400ffb2	      8236	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123	CALL_159
0x400ffb2	            0xeb75	                           jmp 0x4010029	      8236	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123	CALL_159
0x400ffb4	    0x83bd40feffff	              cmp dword [rbp - 0x1c0], 0	      8241	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffbb	            0x745f	                            je 0x401001c	      8241	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffbd	    0x488b0d000000	            mov rcx, qword [0x0400ffc4] 	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffc4	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffca	          0x4863d0	                         movsxd rdx, eax	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffcd	          0x4889d0	                            mov rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffd0	        0x48c1e003	                              shl rax, 3	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffd4	          0x4801d0	                            add rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffd7	          0x4801c0	                            add rax, rax	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffda	          0x4801d0	                            add rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffdd	        0x48c1e003	                              shl rax, 3	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffe1	          0x4801c8	                            add rax, rcx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffe4	          0x8b4838	            mov ecx, dword [rax + 0x38] 	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_160
0x400ffe7	    0x488b35000000	            mov rsi, qword [0x0400ffee] 	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400ffee	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400fff4	          0x4863d0	                         movsxd rdx, eax	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400fff7	          0x4889d0	                            mov rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400fffa	        0x48c1e003	                              shl rax, 3	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x400fffe	          0x4801d0	                            add rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x4010001	          0x4801c0	                            add rax, rax	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x4010004	          0x4801d0	                            add rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x4010007	        0x48c1e003	                              shl rax, 3	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x401000b	          0x4801f0	                            add rax, rsi	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0x401000e	          0x8b4034	            mov eax, dword [rax + 0x34] 	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_160
0x4010011	            0x89ce	                            mov esi, ecx	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_160
0x4010013	            0x89c7	                            mov edi, eax	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_160
0x4010015	      0xe800000000	                          call 0x401001a	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_160
0x401001a	            0xeb0d	                           jmp 0x4010029	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_160
0x401001c	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8267	syntax.c	FUNCTION_116	ELSE_38	CALL_164
0x4010022	            0x89c7	                            mov edi, eax	      8267	syntax.c	FUNCTION_116	ELSE_38	CALL_164
0x4010024	      0xe8912a0000	                    call sym.set_hl_attr	      8267	syntax.c	FUNCTION_116	ELSE_38	CALL_164
0x4010029	    0x488b0d000000	            mov rcx, qword [0x04010030] 	      8269	syntax.c	FUNCTION_116	ELSE_38
0x4010030	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8269	syntax.c	FUNCTION_116	ELSE_38
0x4010036	          0x4863d0	                         movsxd rdx, eax	      8269	syntax.c	FUNCTION_116	ELSE_38
0x4010039	          0x4889d0	                            mov rax, rdx	      8269	syntax.c	FUNCTION_116	ELSE_38
0x401003c	        0x48c1e003	                              shl rax, 3	      8269	syntax.c	FUNCTION_116	ELSE_38
0x4010040	          0x4801d0	                            add rax, rdx	      8269	syntax.c	FUNCTION_116	ELSE_38
0x4010043	          0x4801c0	                            add rax, rax	      8269	syntax.c	FUNCTION_116	ELSE_38
0x4010046	          0x4801d0	                            add rax, rdx	      8269	syntax.c	FUNCTION_116	ELSE_38
0x4010049	        0x48c1e003	                              shl rax, 3	      8269	syntax.c	FUNCTION_116	ELSE_38
0x401004d	        0x488d1401	                    lea rdx, [rcx + rax]	      8269	syntax.c	FUNCTION_116	ELSE_38
0x4010051	    0x8b0500000000	            mov eax, dword [0x04010057] 	      8269	syntax.c	FUNCTION_116	ELSE_38
0x4010057	    0x898290000000	             mov dword [rdx + 0x90], eax	      8269	syntax.c	FUNCTION_116	ELSE_38
0x401005d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8273	syntax.c	FUNCTION_116	CALL_165
0x4010064	          0x4889c7	                            mov rdi, rax	      8273	syntax.c	FUNCTION_116	CALL_165
0x4010067	      0xe800000000	                          call 0x401006c	      8273	syntax.c	FUNCTION_116	CALL_165
0x401006c	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8274	syntax.c	FUNCTION_116	CALL_166
0x4010073	          0x4889c7	                            mov rdi, rax	      8274	syntax.c	FUNCTION_116	CALL_166
0x4010076	      0xe800000000	                          call 0x401007b	      8274	syntax.c	FUNCTION_116	CALL_166
0x401007b	    0x83bd24feffff	              cmp dword [rbp - 0x1dc], 0	      8278	syntax.c	FUNCTION_116	IF_131
0x4010082	            0x7542	                           jne 0x40100c6	      8278	syntax.c	FUNCTION_116	IF_131
0x4010084	    0x488b0d000000	            mov rcx, qword [0x0401008b] 	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x401008b	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x4010091	          0x4863d0	                         movsxd rdx, eax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x4010094	          0x4889d0	                            mov rax, rdx	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x4010097	        0x48c1e003	                              shl rax, 3	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x401009b	          0x4801d0	                            add rax, rdx	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x401009e	          0x4801c0	                            add rax, rax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x40100a1	          0x4801d0	                            add rax, rdx	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x40100a4	        0x48c1e003	                              shl rax, 3	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x40100a8	          0x4801c1	                            add rcx, rax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x40100ab	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x40100b2	      0xba98000000	                           mov edx, 0x98	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x40100b7	          0x4889c6	                            mov rsi, rax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x40100ba	          0x4889cf	                            mov rdi, rcx	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x40100bd	      0xe800000000	                          call 0x40100c2	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x40100c2	            0x85c0	                           test eax, eax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x40100c4	            0x7433	                            je 0x40100f9	      8279	syntax.c	FUNCTION_116	IF_131	CALL_167
0x40100c6	    0x83bd44feffff	              cmp dword [rbp - 0x1bc], 0	      8281	syntax.c	FUNCTION_116	IF_131
0x40100cd	            0x752a	                           jne 0x40100f9	      8281	syntax.c	FUNCTION_116	IF_131
0x40100cf	    0x8b0500000000	            mov eax, dword [0x040100d5] 	      8288	syntax.c	FUNCTION_116	IF_131	IF_132
0x40100d5	            0x85c0	                           test eax, eax	      8288	syntax.c	FUNCTION_116	IF_131	IF_132
0x40100d7	            0x750a	                           jne 0x40100e3	      8288	syntax.c	FUNCTION_116	IF_131	IF_132
0x40100d9	      0xbf28000000	                           mov edi, 0x28	      8289	syntax.c	FUNCTION_116	IF_131	CALL_168
0x40100de	      0xe800000000	                          call 0x40100e3	      8289	syntax.c	FUNCTION_116	IF_131	CALL_168
0x40100e3	    0xc70500000000	               mov dword [0x040100ed], 1	      8290	syntax.c	FUNCTION_116	IF_131
0x40100ed	            0xeb0a	                           jmp 0x40100f9	      8290	syntax.c	FUNCTION_116	IF_131
0x40100ef	              0x90	                                     nop	      7409	syntax.c	FUNCTION_116	IF_1
0x40100f0	            0xeb07	                           jmp 0x40100f9	      7409	syntax.c	FUNCTION_116	IF_1
0x40100f2	              0x90	                                     nop	      7517	syntax.c	FUNCTION_116	IF_7
0x40100f3	            0xeb04	                           jmp 0x40100f9	      7517	syntax.c	FUNCTION_116	IF_7
0x40100f5	              0x90	                                     nop	      7601	syntax.c	FUNCTION_116	IF_21
0x40100f6	            0xeb01	                           jmp 0x40100f9	      7601	syntax.c	FUNCTION_116	IF_21
0x40100f8	              0x90	                                     nop	      7606	syntax.c	FUNCTION_116	IF_22
0x40100f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8292	syntax.c	FUNCTION_116
0x40100fd	    0x644833042528	                xor rax, qword fs:[0x28]	      8292	syntax.c	FUNCTION_116
0x4010106	            0x7405	                            je 0x401010d	      8292	syntax.c	FUNCTION_116
0x4010108	      0xe800000000	                          call 0x401010d	      8292	syntax.c	FUNCTION_116
0x401010d	    0x4881c4f80100	                          add rsp, 0x1f8	      8292	syntax.c	FUNCTION_116
0x4010114	              0x5b	                                 pop rbx	      8292	syntax.c	FUNCTION_116
0x4010115	              0x5d	                                 pop rbp	      8292	syntax.c	FUNCTION_116
0x4010116	              0xc3	                                     ret	      8292	syntax.c	FUNCTION_116
syn_cmd_match	functions,0:IF,8:SWITCH,0:FOR,0:CALL,21:ELSE,1:WHILE,0:DO,0	323
0x40094cb	              0x55	                                push rbp	      5027	syntax.c	FUNCTION_80
0x40094cc	          0x4889e5	                            mov rbp, rsp	      5027	syntax.c	FUNCTION_80
0x40094cf	    0x4881ec200100	                          sub rsp, 0x120	      5027	syntax.c	FUNCTION_80
0x40094d6	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      5027	syntax.c	FUNCTION_80
0x40094dd	    0x89b5e4feffff	            mov dword [rbp - 0x11c], esi	      5027	syntax.c	FUNCTION_80
0x40094e3	    0x64488b042528	                mov rax, qword fs:[0x28]	      5027	syntax.c	FUNCTION_80
0x40094ec	        0x488945f8	                mov qword [rbp - 8], rax	      5027	syntax.c	FUNCTION_80
0x40094f0	            0x31c0	                            xor eax, eax	      5027	syntax.c	FUNCTION_80
0x40094f2	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5028	syntax.c	FUNCTION_80
0x40094f9	          0x488b00	                    mov rax, qword [rax]	      5028	syntax.c	FUNCTION_80
0x40094fc	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      5028	syntax.c	FUNCTION_80
0x4009503	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	      5035	syntax.c	FUNCTION_80
0x400950d	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	      5036	syntax.c	FUNCTION_80
0x4009517	    0x488d9508ffff	                   lea rdx, [rbp - 0xf8]	      5039	syntax.c	FUNCTION_80	CALL_1
0x400951e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5039	syntax.c	FUNCTION_80	CALL_1
0x4009525	          0x4889d6	                            mov rsi, rdx	      5039	syntax.c	FUNCTION_80	CALL_1
0x4009528	          0x4889c7	                            mov rdi, rax	      5039	syntax.c	FUNCTION_80	CALL_1
0x400952b	      0xe8faf0ffff	                 call sym.get_group_name	      5039	syntax.c	FUNCTION_80	CALL_1
0x4009530	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      5039	syntax.c	FUNCTION_80	CALL_1
0x4009537	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      5042	syntax.c	FUNCTION_80
0x4009541	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      5043	syntax.c	FUNCTION_80
0x400954b	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      5044	syntax.c	FUNCTION_80
0x4009552	            0x7409	                            je 0x400955d	      5044	syntax.c	FUNCTION_80
0x4009554	    0x488d85f8feff	                  lea rax, [rbp - 0x108]	      5044	syntax.c	FUNCTION_80
0x400955b	            0xeb05	                           jmp 0x4009562	      5044	syntax.c	FUNCTION_80
0x400955d	      0xb800000000	                              mov eax, 0	      5044	syntax.c	FUNCTION_80
0x4009562	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      5044	syntax.c	FUNCTION_80
0x4009569	    0xc68530ffffff	                mov byte [rbp - 0xd0], 1	      5045	syntax.c	FUNCTION_80
0x4009570	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      5046	syntax.c	FUNCTION_80
0x400957b	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      5047	syntax.c	FUNCTION_80
0x4009586	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      5048	syntax.c	FUNCTION_80
0x4009591	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5049	syntax.c	FUNCTION_80	CALL_2
0x4009598	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      5049	syntax.c	FUNCTION_80	CALL_2
0x400959b	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      5049	syntax.c	FUNCTION_80	CALL_2
0x40095a2	    0x488db520ffff	                   lea rsi, [rbp - 0xe0]	      5049	syntax.c	FUNCTION_80	CALL_2
0x40095a9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5049	syntax.c	FUNCTION_80	CALL_2
0x40095b0	          0x4889c7	                            mov rdi, rax	      5049	syntax.c	FUNCTION_80	CALL_2
0x40095b3	      0xe8d8f0ffff	                call sym.get_syn_options	      5049	syntax.c	FUNCTION_80	CALL_2
0x40095b8	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      5049	syntax.c	FUNCTION_80	CALL_2
0x40095bf	      0xe8091a0000	              call sym.init_syn_patterns	      5052	syntax.c	FUNCTION_80	CALL_3
0x40095c4	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      5053	syntax.c	FUNCTION_80	CALL_4
0x40095cb	      0xbaa0000000	                           mov edx, 0xa0	      5053	syntax.c	FUNCTION_80	CALL_4
0x40095d0	      0xbe00000000	                              mov esi, 0	      5053	syntax.c	FUNCTION_80	CALL_4
0x40095d5	          0x4889c7	                            mov rdi, rax	      5053	syntax.c	FUNCTION_80	CALL_4
0x40095d8	      0xe800000000	                          call 0x40095dd	      5053	syntax.c	FUNCTION_80	CALL_4
0x40095dd	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      5054	syntax.c	FUNCTION_80	CALL_5
0x40095e4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5054	syntax.c	FUNCTION_80	CALL_5
0x40095eb	          0x4889d6	                            mov rsi, rdx	      5054	syntax.c	FUNCTION_80	CALL_5
0x40095ee	          0x4889c7	                            mov rdi, rax	      5054	syntax.c	FUNCTION_80	CALL_5
0x40095f1	      0xe8081a0000	                call sym.get_syn_pattern	      5054	syntax.c	FUNCTION_80	CALL_5
0x40095f6	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      5054	syntax.c	FUNCTION_80	CALL_5
0x40095fd	      0xe800000000	                          call 0x4009602	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4009602	            0x85c0	                           test eax, eax	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4009604	            0x741e	                            je 0x4009624	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4009606	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x400960c	      0x2500080000	                          and eax, 0x800	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4009611	            0x85c0	                           test eax, eax	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4009613	            0x750f	                           jne 0x4009624	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4009615	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5056	syntax.c	FUNCTION_80	IF_1
0x400961b	          0x83c808	                               or eax, 8	      5056	syntax.c	FUNCTION_80	IF_1
0x400961e	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      5056	syntax.c	FUNCTION_80	IF_1
0x4009624	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5059	syntax.c	FUNCTION_80	CALL_7
0x400962b	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      5059	syntax.c	FUNCTION_80	CALL_7
0x400962e	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      5059	syntax.c	FUNCTION_80	CALL_7
0x4009635	    0x488db520ffff	                   lea rsi, [rbp - 0xe0]	      5059	syntax.c	FUNCTION_80	CALL_7
0x400963c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5059	syntax.c	FUNCTION_80	CALL_7
0x4009643	          0x4889c7	                            mov rdi, rax	      5059	syntax.c	FUNCTION_80	CALL_7
0x4009646	      0xe845f0ffff	                call sym.get_syn_options	      5059	syntax.c	FUNCTION_80	CALL_7
0x400964b	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      5059	syntax.c	FUNCTION_80	CALL_7
0x4009652	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      5061	syntax.c	FUNCTION_80	IF_2
0x400965a	     0xf84f7030000	                            je 0x4009a57	      5061	syntax.c	FUNCTION_80	IF_2
0x4009660	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x4009667	          0x4889c7	                            mov rdi, rax	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x400966a	      0xe800000000	                          call 0x400966f	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x400966f	          0x4889c2	                            mov rdx, rax	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x4009672	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x4009679	        0x48895008	                mov qword [rax + 8], rdx	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x400967d	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4009684	           0xfb600	                   movzx eax, byte [rax]	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4009687	           0xfb6c0	                           movzx eax, al	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x400968a	            0x89c7	                            mov edi, eax	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x400968c	      0xe800000000	                          call 0x4009691	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4009691	            0x85c0	                           test eax, eax	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4009693	            0x740e	                            je 0x40096a3	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4009695	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x400969c	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x400969f	            0x85c0	                           test eax, eax	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x40096a1	            0x7410	                            je 0x40096b3	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x40096a3	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      5068	syntax.c	FUNCTION_80	IF_2	IF_3
0x40096ae	      0xe9a4030000	                           jmp 0x4009a57	      5068	syntax.c	FUNCTION_80	IF_2	IF_3
0x40096b3	    0x488b05000000	            mov rax, qword [0x040096ba] 	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40096ba	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40096be	    0x480560020000	                          add rax, 0x260	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40096c4	      0xbe01000000	                              mov esi, 1	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40096c9	          0x4889c7	                            mov rdi, rax	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40096cc	      0xe800000000	                          call 0x40096d1	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40096d1	            0x85c0	                           test eax, eax	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40096d3	     0xf847e030000	                            je 0x4009a57	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x40096d9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5071	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40096e0	          0x4889c2	                            mov rdx, rax	      5071	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40096e3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5071	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40096ea	          0x4829c2	                            sub rdx, rax	      5071	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40096ed	          0x4889d0	                            mov rax, rdx	      5071	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40096f0	            0x89c2	                            mov edx, eax	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x40096f2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x40096f9	            0x89d6	                            mov esi, edx	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x40096fb	          0x4889c7	                            mov rdi, rax	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x40096fe	      0xe800000000	                          call 0x4009703	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4009703	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4009709	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4009710	     0xf8441030000	                            je 0x4009a57	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4009716	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x400971d	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x4009723	          0x4889d6	                            mov rsi, rdx	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x4009726	            0x89c7	                            mov edi, eax	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x4009728	      0xe8b0f5ffff	              call sym.syn_incl_toplevel	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x400972d	    0x488b05000000	            mov rax, qword [0x04009734] 	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009734	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009738	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400973e	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009744	    0x488b05000000	            mov rax, qword [0x0400974b] 	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400974b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400974f	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009756	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400975c	          0x4863d0	                         movsxd rdx, eax	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400975f	          0x4889d0	                            mov rax, rdx	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009762	        0x48c1e002	                              shl rax, 2	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009766	          0x4801d0	                            add rax, rdx	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009769	        0x48c1e005	                              shl rax, 5	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400976d	          0x4801c8	                            add rax, rcx	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009770	          0x4889c7	                            mov rdi, rax	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009773	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400977a	      0xba14000000	                           mov edx, 0x14	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400977f	          0x4889c6	                            mov rsi, rax	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009782	          0x4889d1	                            mov rcx, rdx	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009785	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009788	    0x488b05000000	            mov rax, qword [0x0400978f] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400978f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009793	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400979a	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097a0	          0x4863d0	                         movsxd rdx, eax	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097a3	          0x4889d0	                            mov rax, rdx	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097a6	        0x48c1e002	                              shl rax, 2	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097aa	          0x4801d0	                            add rax, rdx	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097ad	        0x48c1e005	                              shl rax, 5	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097b1	          0x4801c8	                            add rax, rcx	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097b4	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097ba	          0x885001	                  mov byte [rax + 1], dl	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097bd	    0x488b05000000	            mov rax, qword [0x040097c4] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097c4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097c8	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097cf	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097d5	          0x4863d0	                         movsxd rdx, eax	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097d8	          0x4889d0	                            mov rax, rdx	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097db	        0x48c1e002	                              shl rax, 2	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097df	          0x4801d0	                            add rax, rdx	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097e2	        0x48c1e005	                              shl rax, 5	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097e6	          0x4801c8	                            add rax, rcx	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097e9	          0xc60001	                       mov byte [rax], 1	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097ec	    0x488b05000000	            mov rax, qword [0x040097f3] 	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097f3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097f7	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40097fe	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009804	          0x4863d0	                         movsxd rdx, eax	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009807	          0x4889d0	                            mov rax, rdx	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400980a	        0x48c1e002	                              shl rax, 2	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400980e	          0x4801d0	                            add rax, rdx	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009811	        0x48c1e005	                              shl rax, 5	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009815	          0x4801c8	                            add rax, rcx	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009818	    0x8b9500ffffff	            mov edx, dword [rbp - 0x100]	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400981e	        0x66895054	               mov word [rax + 0x54], dx	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009822	    0x488b05000000	            mov rax, qword [0x04009829] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009829	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400982d	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009834	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400983a	          0x4863d0	                         movsxd rdx, eax	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400983d	          0x4889d0	                            mov rax, rdx	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009840	        0x48c1e002	                              shl rax, 2	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009844	          0x4801d0	                            add rax, rdx	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009847	        0x48c1e005	                              shl rax, 5	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400984b	        0x488d1401	                    lea rdx, [rcx + rax]	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400984f	    0x8b0500000000	            mov eax, dword [0x04009855] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009855	          0x894250	             mov dword [rdx + 0x50], eax	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009858	    0x488b05000000	            mov rax, qword [0x0400985f] 	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400985f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009863	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400986a	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009870	          0x4863d0	                         movsxd rdx, eax	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009873	          0x4889d0	                            mov rax, rdx	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009876	        0x48c1e002	                              shl rax, 2	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400987a	          0x4801d0	                            add rax, rdx	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400987d	        0x48c1e005	                              shl rax, 5	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009881	        0x488d1401	                    lea rdx, [rcx + rax]	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009885	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400988b	          0x894224	             mov dword [rdx + 0x24], eax	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400988e	    0x488b05000000	            mov rax, qword [0x04009895] 	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009895	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009899	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098a0	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098a6	          0x4863d0	                         movsxd rdx, eax	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098a9	          0x4889d0	                            mov rax, rdx	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098ac	        0x48c1e002	                              shl rax, 2	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098b0	          0x4801d0	                            add rax, rdx	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098b3	        0x48c1e005	                              shl rax, 5	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098b7	        0x488d1401	                    lea rdx, [rcx + rax]	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098bb	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098c1	          0x894230	             mov dword [rdx + 0x30], eax	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098c4	    0x488b05000000	            mov rax, qword [0x040098cb] 	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098cb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098cf	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098d6	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098dc	          0x4863d0	                         movsxd rdx, eax	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098df	          0x4889d0	                            mov rax, rdx	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098e2	        0x48c1e002	                              shl rax, 2	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098e6	          0x4801d0	                            add rax, rdx	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098e9	        0x48c1e005	                              shl rax, 5	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098ed	        0x488d1401	                    lea rdx, [rcx + rax]	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098f1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098f8	        0x48894240	             mov qword [rdx + 0x40], rax	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40098fc	    0x488b05000000	            mov rax, qword [0x04009903] 	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009903	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009907	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400990e	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009914	          0x4863d0	                         movsxd rdx, eax	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009917	          0x4889d0	                            mov rax, rdx	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400991a	        0x48c1e002	                              shl rax, 2	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400991e	          0x4801d0	                            add rax, rdx	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009921	        0x48c1e005	                              shl rax, 5	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009925	        0x488d1401	                    lea rdx, [rcx + rax]	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009929	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5087	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009930	        0x48894258	             mov qword [rdx + 0x58], rax	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009934	    0x488b05000000	            mov rax, qword [0x0400993b] 	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400993b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400993f	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009946	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400994c	          0x4863d0	                         movsxd rdx, eax	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400994f	          0x4889d0	                            mov rax, rdx	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009952	        0x48c1e002	                              shl rax, 2	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009956	          0x4801d0	                            add rax, rdx	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009959	        0x48c1e005	                              shl rax, 5	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400995d	        0x488d1401	                    lea rdx, [rcx + rax]	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009961	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009967	          0x894228	             mov dword [rdx + 0x28], eax	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400996a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x4009971	          0x4885c0	                           test rax, rax	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x4009974	            0x7415	                            je 0x400998b	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x4009976	    0x488b05000000	            mov rax, qword [0x0400997d] 	      5092	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x400997d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5092	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x4009981	    0xc78098020000	              mov dword [rax + 0x298], 1	      5092	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x400998b	    0x488b05000000	            mov rax, qword [0x04009992] 	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009992	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4009996	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400999d	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099a3	          0x4863d0	                         movsxd rdx, eax	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099a6	          0x4889d0	                            mov rax, rdx	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099a9	        0x48c1e002	                              shl rax, 2	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099ad	          0x4801d0	                            add rax, rdx	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099b0	        0x48c1e005	                              shl rax, 5	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099b4	        0x488d1401	                    lea rdx, [rcx + rax]	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099b8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099bf	        0x48894248	             mov qword [rdx + 0x48], rax	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099c3	    0x488b05000000	            mov rax, qword [0x040099ca] 	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099ca	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099ce	    0x8b9060020000	           mov edx, dword [rax + 0x260] 	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099d4	          0x83c201	                              add edx, 1	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099d7	    0x899060020000	            mov dword [rax + 0x260], edx	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40099dd	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x40099e3	          0x83e030	                           and eax, 0x30	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x40099e6	            0x85c0	                           test eax, eax	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x40099e8	            0x7425	                            je 0x4009a0f	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x40099ea	    0x488b05000000	            mov rax, qword [0x040099f1] 	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x40099f1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x40099f5	    0x488b15000000	            mov rdx, qword [0x040099fc] 	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x40099fc	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x4009a00	    0x8b929c020000	           mov edx, dword [rdx + 0x29c] 	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x4009a06	          0x83ca02	                               or edx, 2	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x4009a09	    0x89909c020000	            mov dword [rax + 0x29c], edx	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x4009a0f	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4009a15	      0x2500200000	                         and eax, 0x2000	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4009a1a	            0x85c0	                           test eax, eax	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4009a1c	            0x741a	                            je 0x4009a38	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4009a1e	    0x488b05000000	            mov rax, qword [0x04009a25] 	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4009a25	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4009a29	    0x8b900c030000	           mov edx, dword [rax + 0x30c] 	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4009a2f	          0x83c201	                              add edx, 1	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4009a32	    0x89900c030000	            mov dword [rax + 0x30c], edx	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4009a38	      0xbf23000000	                           mov edi, 0x23	      5104	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x4009a3d	      0xe800000000	                          call 0x4009a42	      5104	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x4009a42	    0x488b05000000	            mov rax, qword [0x04009a49] 	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x4009a49	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x4009a4d	          0x4889c7	                            mov rdi, rax	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x4009a50	      0xe800000000	                          call 0x4009a55	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x4009a55	            0xeb6e	                           jmp 0x4009ac5	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x4009a57	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5113	syntax.c	FUNCTION_80	CALL_15
0x4009a5b	          0x4889c7	                            mov rdi, rax	      5113	syntax.c	FUNCTION_80	CALL_15
0x4009a5e	      0xe800000000	                          call 0x4009a63	      5113	syntax.c	FUNCTION_80	CALL_15
0x4009a63	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5114	syntax.c	FUNCTION_80	CALL_16
0x4009a67	          0x4889c7	                            mov rdi, rax	      5114	syntax.c	FUNCTION_80	CALL_16
0x4009a6a	      0xe800000000	                          call 0x4009a6f	      5114	syntax.c	FUNCTION_80	CALL_16
0x4009a6f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5115	syntax.c	FUNCTION_80	CALL_17
0x4009a76	          0x4889c7	                            mov rdi, rax	      5115	syntax.c	FUNCTION_80	CALL_17
0x4009a79	      0xe800000000	                          call 0x4009a7e	      5115	syntax.c	FUNCTION_80	CALL_17
0x4009a7e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5116	syntax.c	FUNCTION_80	CALL_18
0x4009a85	          0x4889c7	                            mov rdi, rax	      5116	syntax.c	FUNCTION_80	CALL_18
0x4009a88	      0xe800000000	                          call 0x4009a8d	      5116	syntax.c	FUNCTION_80	CALL_18
0x4009a8d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5117	syntax.c	FUNCTION_80	CALL_19
0x4009a94	          0x4889c7	                            mov rdi, rax	      5117	syntax.c	FUNCTION_80	CALL_19
0x4009a97	      0xe800000000	                          call 0x4009a9c	      5117	syntax.c	FUNCTION_80	CALL_19
0x4009a9c	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      5119	syntax.c	FUNCTION_80	IF_8
0x4009aa4	            0x751f	                           jne 0x4009ac5	      5119	syntax.c	FUNCTION_80	IF_8
0x4009aa6	      0xbf00000000	                              mov edi, 0	      5120	syntax.c	FUNCTION_80	CALL_21
0x4009aab	      0xe800000000	                          call 0x4009ab0	      5120	syntax.c	FUNCTION_80	CALL_21
0x4009ab0	          0x4889c2	                            mov rdx, rax	      5120	syntax.c	FUNCTION_80	CALL_21
0x4009ab3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5120	syntax.c	FUNCTION_80	CALL_21
0x4009aba	          0x4889c6	                            mov rsi, rax	      5120	syntax.c	FUNCTION_80	CALL_21
0x4009abd	          0x4889d7	                            mov rdi, rdx	      5120	syntax.c	FUNCTION_80	CALL_21
0x4009ac0	      0xe800000000	                          call 0x4009ac5	      5120	syntax.c	FUNCTION_80	CALL_21
0x4009ac5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5121	syntax.c	FUNCTION_80
0x4009ac9	    0x644833042528	                xor rax, qword fs:[0x28]	      5121	syntax.c	FUNCTION_80
0x4009ad2	            0x7405	                            je 0x4009ad9	      5121	syntax.c	FUNCTION_80
0x4009ad4	      0xe800000000	                          call 0x4009ad9	      5121	syntax.c	FUNCTION_80
0x4009ad9	              0xc9	                                   leave	      5121	syntax.c	FUNCTION_80
0x4009ada	              0xc3	                                     ret	      5121	syntax.c	FUNCTION_80
syn_cmd_off	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	12
0x4006e3a	              0x55	                                push rbp	      3910	syntax.c	FUNCTION_61
0x4006e3b	          0x4889e5	                            mov rbp, rsp	      3910	syntax.c	FUNCTION_61
0x4006e3e	        0x4883ec10	                           sub rsp, 0x10	      3910	syntax.c	FUNCTION_61
0x4006e42	        0x48897df8	                mov qword [rbp - 8], rdi	      3910	syntax.c	FUNCTION_61
0x4006e46	          0x8975f4	              mov dword [rbp - 0xc], esi	      3910	syntax.c	FUNCTION_61
0x4006e49	        0x488b45f8	                mov rax, qword [rbp - 8]	      3911	syntax.c	FUNCTION_61	CALL_1
0x4006e4d	      0xbe00000000	                              mov esi, 0	      3911	syntax.c	FUNCTION_61	CALL_1
0x4006e52	          0x4889c7	                            mov rdi, rax	      3911	syntax.c	FUNCTION_61	CALL_1
0x4006e55	      0xe803000000	                  call sym.syn_cmd_onoff	      3911	syntax.c	FUNCTION_61	CALL_1
0x4006e5a	              0x90	                                     nop	      3912	syntax.c	FUNCTION_61
0x4006e5b	              0xc9	                                   leave	      3912	syntax.c	FUNCTION_61
0x4006e5c	              0xc3	                                     ret	      3912	syntax.c	FUNCTION_61
syn_id2attr	functions,0:IF,2:SWITCH,0:FOR,0:CALL,1:ELSE,2:WHILE,0:DO,0	43
0x40132f7	              0x55	                                push rbp	      9815	syntax.c	FUNCTION_156
0x40132f8	          0x4889e5	                            mov rbp, rsp	      9815	syntax.c	FUNCTION_156
0x40132fb	        0x4883ec20	                           sub rsp, 0x20	      9815	syntax.c	FUNCTION_156
0x40132ff	          0x897dec	             mov dword [rbp - 0x14], edi	      9815	syntax.c	FUNCTION_156
0x4013302	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9819	syntax.c	FUNCTION_156	CALL_1
0x4013305	            0x89c7	                            mov edi, eax	      9819	syntax.c	FUNCTION_156	CALL_1
0x4013307	      0xe800000000	                          call 0x401330c	      9819	syntax.c	FUNCTION_156	CALL_1
0x401330c	          0x8945ec	             mov dword [rbp - 0x14], eax	      9819	syntax.c	FUNCTION_156	CALL_1
0x401330f	    0x488b0d000000	            mov rcx, qword [0x04013316] 	      9820	syntax.c	FUNCTION_156
0x4013316	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9820	syntax.c	FUNCTION_156
0x4013319	          0x4863d0	                         movsxd rdx, eax	      9820	syntax.c	FUNCTION_156
0x401331c	          0x4889d0	                            mov rax, rdx	      9820	syntax.c	FUNCTION_156
0x401331f	        0x48c1e003	                              shl rax, 3	      9820	syntax.c	FUNCTION_156
0x4013323	          0x4801d0	                            add rax, rdx	      9820	syntax.c	FUNCTION_156
0x4013326	          0x4801c0	                            add rax, rax	      9820	syntax.c	FUNCTION_156
0x4013329	          0x4801d0	                            add rax, rdx	      9820	syntax.c	FUNCTION_156
0x401332c	        0x48c1e003	                              shl rax, 3	      9820	syntax.c	FUNCTION_156
0x4013330	    0x482d98000000	                           sub rax, 0x98	      9820	syntax.c	FUNCTION_156
0x4013336	          0x4801c8	                            add rax, rcx	      9820	syntax.c	FUNCTION_156
0x4013339	        0x488945f8	                mov qword [rbp - 8], rax	      9820	syntax.c	FUNCTION_156
0x401333d	    0x8b0500000000	            mov eax, dword [0x04013343] 	      9826	syntax.c	FUNCTION_156	IF_1
0x4013343	            0x85c0	                           test eax, eax	      9826	syntax.c	FUNCTION_156	IF_1
0x4013345	            0x740c	                            je 0x4013353	      9826	syntax.c	FUNCTION_156	IF_1
0x4013347	        0x488b45f8	                mov rax, qword [rbp - 8]	      9827	syntax.c	FUNCTION_156	IF_1
0x401334b	          0x8b4068	            mov eax, dword [rax + 0x68] 	      9827	syntax.c	FUNCTION_156	IF_1
0x401334e	          0x8945f4	              mov dword [rbp - 0xc], eax	      9827	syntax.c	FUNCTION_156	IF_1
0x4013351	            0xeb2b	                           jmp 0x401337e	      9827	syntax.c	FUNCTION_156	IF_1
0x4013353	    0x8b0500000000	            mov eax, dword [0x04013359] 	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4013359	          0x83f801	                              cmp eax, 1	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x401335c	            0x7f0a	                            jg 0x4013368	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x401335e	    0x8b0500000000	            mov eax, dword [0x04013364] 	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4013364	            0x85c0	                           test eax, eax	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4013366	            0x740c	                            je 0x4013374	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4013368	        0x488b45f8	                mov rax, qword [rbp - 8]	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x401336c	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x401336f	          0x8945f4	              mov dword [rbp - 0xc], eax	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4013372	            0xeb0a	                           jmp 0x401337e	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4013374	        0x488b45f8	                mov rax, qword [rbp - 8]	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4013378	          0x8b4028	            mov eax, dword [rax + 0x28] 	      9833	syntax.c	FUNCTION_156	ELSE_2
0x401337b	          0x8945f4	              mov dword [rbp - 0xc], eax	      9833	syntax.c	FUNCTION_156	ELSE_2
0x401337e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9835	syntax.c	FUNCTION_156	ELSE_2
0x4013381	              0xc9	                                   leave	      9836	syntax.c	FUNCTION_156	ELSE_2
0x4013382	              0xc3	                                     ret	      9836	syntax.c	FUNCTION_156	ELSE_2
syn_clear_cluster	functions,0:IF,0:SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,0:DO,0	44
0x400695a	              0x55	                                push rbp	      3744	syntax.c	FUNCTION_54
0x400695b	          0x4889e5	                            mov rbp, rsp	      3744	syntax.c	FUNCTION_54
0x400695e	        0x4883ec10	                           sub rsp, 0x10	      3744	syntax.c	FUNCTION_54
0x4006962	        0x48897df8	                mov qword [rbp - 8], rdi	      3744	syntax.c	FUNCTION_54
0x4006966	          0x8975f4	              mov dword [rbp - 0xc], esi	      3744	syntax.c	FUNCTION_54
0x4006969	        0x488b45f8	                mov rax, qword [rbp - 8]	      3745	syntax.c	FUNCTION_54	CALL_1
0x400696d	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3745	syntax.c	FUNCTION_54	CALL_1
0x4006974	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3745	syntax.c	FUNCTION_54	CALL_1
0x4006977	          0x4863d0	                         movsxd rdx, eax	      3745	syntax.c	FUNCTION_54	CALL_1
0x400697a	          0x4889d0	                            mov rax, rdx	      3745	syntax.c	FUNCTION_54	CALL_1
0x400697d	          0x4801c0	                            add rax, rax	      3745	syntax.c	FUNCTION_54	CALL_1
0x4006980	          0x4801d0	                            add rax, rdx	      3745	syntax.c	FUNCTION_54	CALL_1
0x4006983	        0x48c1e003	                              shl rax, 3	      3745	syntax.c	FUNCTION_54	CALL_1
0x4006987	          0x4801c8	                            add rax, rcx	      3745	syntax.c	FUNCTION_54	CALL_1
0x400698a	          0x488b00	                    mov rax, qword [rax]	      3745	syntax.c	FUNCTION_54	CALL_1
0x400698d	          0x4889c7	                            mov rdi, rax	      3745	syntax.c	FUNCTION_54	CALL_1
0x4006990	      0xe800000000	                          call 0x4006995	      3745	syntax.c	FUNCTION_54	CALL_1
0x4006995	        0x488b45f8	                mov rax, qword [rbp - 8]	      3746	syntax.c	FUNCTION_54	CALL_2
0x4006999	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3746	syntax.c	FUNCTION_54	CALL_2
0x40069a0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3746	syntax.c	FUNCTION_54	CALL_2
0x40069a3	          0x4863d0	                         movsxd rdx, eax	      3746	syntax.c	FUNCTION_54	CALL_2
0x40069a6	          0x4889d0	                            mov rax, rdx	      3746	syntax.c	FUNCTION_54	CALL_2
0x40069a9	          0x4801c0	                            add rax, rax	      3746	syntax.c	FUNCTION_54	CALL_2
0x40069ac	          0x4801d0	                            add rax, rdx	      3746	syntax.c	FUNCTION_54	CALL_2
0x40069af	        0x48c1e003	                              shl rax, 3	      3746	syntax.c	FUNCTION_54	CALL_2
0x40069b3	          0x4801c8	                            add rax, rcx	      3746	syntax.c	FUNCTION_54	CALL_2
0x40069b6	        0x488b4008	                mov rax, qword [rax + 8]	      3746	syntax.c	FUNCTION_54	CALL_2
0x40069ba	          0x4889c7	                            mov rdi, rax	      3746	syntax.c	FUNCTION_54	CALL_2
0x40069bd	      0xe800000000	                          call 0x40069c2	      3746	syntax.c	FUNCTION_54	CALL_2
0x40069c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069c6	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069cd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069d0	          0x4863d0	                         movsxd rdx, eax	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069d3	          0x4889d0	                            mov rax, rdx	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069d6	          0x4801c0	                            add rax, rax	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069d9	          0x4801d0	                            add rax, rdx	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069dc	        0x48c1e003	                              shl rax, 3	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069e0	          0x4801c8	                            add rax, rcx	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069e3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069e7	          0x4889c7	                            mov rdi, rax	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069ea	      0xe800000000	                          call 0x40069ef	      3747	syntax.c	FUNCTION_54	CALL_3
0x40069ef	              0x90	                                     nop	      3748	syntax.c	FUNCTION_54
0x40069f0	              0xc9	                                   leave	      3748	syntax.c	FUNCTION_54
0x40069f1	              0xc3	                                     ret	      3748	syntax.c	FUNCTION_54
clear_keywtab	functions,0:IF,1:SWITCH,0:FOR,2:CALL,6:ELSE,0:WHILE,0:DO,0	55
0x4008309	              0x55	                                push rbp	      4487	syntax.c	FUNCTION_73
0x400830a	          0x4889e5	                            mov rbp, rsp	      4487	syntax.c	FUNCTION_73
0x400830d	        0x4883ec30	                           sub rsp, 0x30	      4487	syntax.c	FUNCTION_73
0x4008311	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4487	syntax.c	FUNCTION_73
0x4008315	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4493	syntax.c	FUNCTION_73
0x4008319	        0x488b4008	                mov rax, qword [rax + 8]	      4493	syntax.c	FUNCTION_73
0x400831d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4493	syntax.c	FUNCTION_73
0x4008320	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4494	syntax.c	FUNCTION_73	FOR_1
0x4008324	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4494	syntax.c	FUNCTION_73	FOR_1
0x4008328	        0x488945e8	             mov qword [rbp - 0x18], rax	      4494	syntax.c	FUNCTION_73	FOR_1
0x400832c	            0xeb7e	                           jmp 0x40083ac	      4494	syntax.c	FUNCTION_73	FOR_1
0x400832e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x4008332	        0x488b4008	                mov rax, qword [rax + 8]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x4008336	          0x4885c0	                           test rax, rax	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x4008339	            0x746c	                            je 0x40083a7	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400833b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400833f	        0x488b4008	                mov rax, qword [rax + 8]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x4008343	    0x483d00000000	                              cmp rax, 0	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x4008349	            0x745c	                            je 0x40083a7	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400834b	        0x836de401	               sub dword [rbp - 0x1c], 1	      4498	syntax.c	FUNCTION_73	FOR_1	IF_1
0x400834f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x4008353	        0x488b4008	                mov rax, qword [rax + 8]	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x4008357	        0x4883e828	                           sub rax, 0x28	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400835b	        0x488945f0	             mov qword [rbp - 0x10], rax	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400835f	            0xeb3f	                           jmp 0x40083a0	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x4008361	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4501	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x4008365	          0x488b00	                    mov rax, qword [rax]	      4501	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x4008368	        0x488945f8	                mov qword [rbp - 8], rax	      4501	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400836c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x4008370	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x4008374	          0x4889c7	                            mov rdi, rax	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x4008377	      0xe800000000	                          call 0x400837c	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x400837c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x4008380	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x4008384	          0x4889c7	                            mov rdi, rax	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x4008387	      0xe800000000	                          call 0x400838c	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x400838c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x4008390	          0x4889c7	                            mov rdi, rax	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x4008393	      0xe800000000	                          call 0x4008398	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x4008398	        0x488b45f8	                mov rax, qword [rbp - 8]	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400839c	        0x488945f0	             mov qword [rbp - 0x10], rax	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x40083a0	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x40083a5	            0x75ba	                           jne 0x4008361	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x40083a7	      0x488345e810	            add qword [rbp - 0x18], 0x10	      4494	syntax.c	FUNCTION_73	FOR_1
0x40083ac	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4494	syntax.c	FUNCTION_73	FOR_1
0x40083b0	     0xf8f78ffffff	                            jg 0x400832e	      4494	syntax.c	FUNCTION_73	FOR_1
0x40083b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4508	syntax.c	FUNCTION_73	CALL_5
0x40083ba	          0x4889c7	                            mov rdi, rax	      4508	syntax.c	FUNCTION_73	CALL_5
0x40083bd	      0xe800000000	                          call 0x40083c2	      4508	syntax.c	FUNCTION_73	CALL_5
0x40083c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4509	syntax.c	FUNCTION_73	CALL_6
0x40083c6	          0x4889c7	                            mov rdi, rax	      4509	syntax.c	FUNCTION_73	CALL_6
0x40083c9	      0xe800000000	                          call 0x40083ce	      4509	syntax.c	FUNCTION_73	CALL_6
0x40083ce	              0x90	                                     nop	      4510	syntax.c	FUNCTION_73
0x40083cf	              0xc9	                                   leave	      4510	syntax.c	FUNCTION_73
0x40083d0	              0xc3	                                     ret	      4510	syntax.c	FUNCTION_73
hl_do_font	functions,0:IF,10:SWITCH,0:FOR,0:CALL,9:ELSE,1:WHILE,0:DO,0	63
0x4010e74	              0x55	                                push rbp	      8632	syntax.c	FUNCTION_129
0x4010e75	          0x4889e5	                            mov rbp, rsp	      8632	syntax.c	FUNCTION_129
0x4010e78	              0x53	                                push rbx	      8632	syntax.c	FUNCTION_129
0x4010e79	        0x4883ec28	                           sub rsp, 0x28	      8632	syntax.c	FUNCTION_129
0x4010e7d	          0x897dec	             mov dword [rbp - 0x14], edi	      8632	syntax.c	FUNCTION_129
0x4010e80	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8632	syntax.c	FUNCTION_129
0x4010e84	          0x8955e8	             mov dword [rbp - 0x18], edx	      8632	syntax.c	FUNCTION_129
0x4010e87	          0x894ddc	             mov dword [rbp - 0x24], ecx	      8632	syntax.c	FUNCTION_129
0x4010e8a	        0x448945d8	             mov dword [rbp - 0x28], r8d	      8632	syntax.c	FUNCTION_129
0x4010e8e	        0x44894dd4	             mov dword [rbp - 0x2c], r9d	      8632	syntax.c	FUNCTION_129
0x4010e92	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      8692	syntax.c	FUNCTION_129	ELSE_1	IF_7
0x4010e96	            0x7430	                            je 0x4010ec8	      8692	syntax.c	FUNCTION_129	ELSE_1	IF_7
0x4010e98	    0x488b0d000000	            mov rcx, qword [0x04010e9f] 	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010e9f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010ea2	          0x4863d0	                         movsxd rdx, eax	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010ea5	          0x4889d0	                            mov rax, rdx	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010ea8	        0x48c1e003	                              shl rax, 3	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010eac	          0x4801d0	                            add rax, rdx	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010eaf	          0x4801c0	                            add rax, rax	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010eb2	          0x4801d0	                            add rax, rdx	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010eb5	        0x48c1e003	                              shl rax, 3	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010eb9	          0x4801c8	                            add rax, rcx	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010ebc	        0x488b4058	            mov rax, qword [rax + 0x58] 	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010ec0	          0x4889c7	                            mov rdi, rax	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010ec3	      0xe800000000	                          call 0x4010ec8	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x4010ec8	    0x488b0d000000	            mov rcx, qword [0x04010ecf] 	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010ecf	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010ed2	          0x4863d0	                         movsxd rdx, eax	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010ed5	          0x4889d0	                            mov rax, rdx	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010ed8	        0x48c1e003	                              shl rax, 3	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010edc	          0x4801d0	                            add rax, rdx	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010edf	          0x4801c0	                            add rax, rax	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010ee2	          0x4801d0	                            add rax, rdx	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010ee5	        0x48c1e003	                              shl rax, 3	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010ee9	        0x488d1c01	                    lea rbx, [rcx + rax]	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010eed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010ef1	          0x4889c7	                            mov rdi, rax	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010ef4	      0xe840ffffff	               call sym.font_name2handle	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010ef9	        0x48894358	             mov qword [rbx + 0x58], rax	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4010efd	    0x488b0d000000	            mov rcx, qword [0x04010f04] 	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f04	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f07	          0x4863d0	                         movsxd rdx, eax	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f0a	          0x4889d0	                            mov rax, rdx	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f0d	        0x48c1e003	                              shl rax, 3	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f11	          0x4801d0	                            add rax, rdx	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f14	          0x4801c0	                            add rax, rax	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f17	          0x4801d0	                            add rax, rdx	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f1a	        0x48c1e003	                              shl rax, 3	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f1e	          0x4801c8	                            add rax, rcx	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f21	        0x488b4058	            mov rax, qword [rax + 0x58] 	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f25	          0x4885c0	                           test rax, rax	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f28	            0x7417	                            je 0x4010f41	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8
0x4010f2a	        0x837de800	               cmp dword [rbp - 0x18], 0	      8699	syntax.c	FUNCTION_129	ELSE_1	IF_8	IF_9
0x4010f2e	            0x7411	                            je 0x4010f41	      8699	syntax.c	FUNCTION_129	ELSE_1	IF_8	IF_9
0x4010f30	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8700	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_8
0x4010f34	      0xbe00000000	                              mov esi, 0	      8700	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_8
0x4010f39	          0x4889c7	                            mov rdi, rax	      8700	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_8
0x4010f3c	      0xe800000000	                          call 0x4010f41	      8700	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_8
0x4010f41	              0x90	                                     nop	      8712	syntax.c	FUNCTION_129
0x4010f42	        0x4883c428	                           add rsp, 0x28	      8712	syntax.c	FUNCTION_129
0x4010f46	              0x5b	                                 pop rbx	      8712	syntax.c	FUNCTION_129
0x4010f47	              0x5d	                                 pop rbp	      8712	syntax.c	FUNCTION_129
0x4010f48	              0xc3	                                     ret	      8712	syntax.c	FUNCTION_129
syn_cmd_iskeyword	functions,0:IF,4:SWITCH,0:FOR,0:CALL,16:ELSE,3:WHILE,0:DO,0	129
0x4006163	              0x55	                                push rbp	      3560	syntax.c	FUNCTION_48
0x4006164	          0x4889e5	                            mov rbp, rsp	      3560	syntax.c	FUNCTION_48
0x4006167	              0x53	                                push rbx	      3560	syntax.c	FUNCTION_48
0x4006168	        0x4883ec58	                           sub rsp, 0x58	      3560	syntax.c	FUNCTION_48
0x400616c	        0x48897da8	             mov qword [rbp - 0x58], rdi	      3560	syntax.c	FUNCTION_48
0x4006170	          0x8975a4	             mov dword [rbp - 0x5c], esi	      3560	syntax.c	FUNCTION_48
0x4006173	    0x64488b042528	                mov rax, qword fs:[0x28]	      3560	syntax.c	FUNCTION_48
0x400617c	        0x488945e8	             mov qword [rbp - 0x18], rax	      3560	syntax.c	FUNCTION_48
0x4006180	            0x31c0	                            xor eax, eax	      3560	syntax.c	FUNCTION_48
0x4006182	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3561	syntax.c	FUNCTION_48
0x4006186	          0x488b00	                    mov rax, qword [rax]	      3561	syntax.c	FUNCTION_48
0x4006189	        0x488945b0	             mov qword [rbp - 0x50], rax	      3561	syntax.c	FUNCTION_48
0x400618d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3565	syntax.c	FUNCTION_48	IF_1
0x4006191	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3565	syntax.c	FUNCTION_48	IF_1
0x4006194	            0x85c0	                           test eax, eax	      3565	syntax.c	FUNCTION_48	IF_1
0x4006196	     0xf85fe010000	                           jne 0x400639a	      3565	syntax.c	FUNCTION_48	IF_1
0x400619c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3568	syntax.c	FUNCTION_48	CALL_1
0x40061a0	          0x4889c7	                            mov rdi, rax	      3568	syntax.c	FUNCTION_48	CALL_1
0x40061a3	      0xe800000000	                          call 0x40061a8	      3568	syntax.c	FUNCTION_48	CALL_1
0x40061a8	        0x488945b0	             mov qword [rbp - 0x50], rax	      3568	syntax.c	FUNCTION_48	CALL_1
0x40061ac	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3569	syntax.c	FUNCTION_48	IF_2
0x40061b0	           0xfb600	                   movzx eax, byte [rax]	      3569	syntax.c	FUNCTION_48	IF_2
0x40061b3	            0x84c0	                             test al, al	      3569	syntax.c	FUNCTION_48	IF_2
0x40061b5	            0x7568	                           jne 0x400621f	      3569	syntax.c	FUNCTION_48	IF_2
0x40061b7	      0xbf00000000	                              mov edi, 0	      3571	syntax.c	FUNCTION_48	IF_2	CALL_2
0x40061bc	      0xe800000000	                          call 0x40061c1	      3571	syntax.c	FUNCTION_48	IF_2	CALL_2
0x40061c1	      0xbf00000000	                              mov edi, 0	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x40061c6	      0xe800000000	                          call 0x40061cb	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x40061cb	          0x4889c7	                            mov rdi, rax	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x40061ce	      0xe800000000	                          call 0x40061d3	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x40061d3	    0x488b05000000	            mov rax, qword [0x040061da] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x40061da	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x40061de	    0x488b90b00400	           mov rdx, qword [rax + 0x4b0] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x40061e5	    0x488b05000000	            mov rax, qword [0x040061ec] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x40061ec	          0x4839c2	                            cmp rdx, rax	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x40061ef	            0x741f	                            je 0x4006210	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x40061f1	    0x488b05000000	            mov rax, qword [0x040061f8] 	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x40061f8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x40061fc	    0x488b80b00400	           mov rax, qword [rax + 0x4b0] 	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x4006203	          0x4889c7	                            mov rdi, rax	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x4006206	      0xe800000000	                          call 0x400620b	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x400620b	      0xe974010000	                           jmp 0x4006384	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x4006210	      0xbf00000000	                              mov edi, 0	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4006215	      0xe800000000	                          call 0x400621a	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x400621a	      0xe965010000	                           jmp 0x4006384	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x400621f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4006223	      0xba05000000	                              mov edx, 5	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4006228	      0xbe00000000	                              mov esi, 0	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x400622d	          0x4889c7	                            mov rdi, rax	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4006230	      0xe800000000	                          call 0x4006235	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4006235	            0x85c0	                           test eax, eax	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4006237	            0x754d	                           jne 0x4006286	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4006239	    0x488b05000000	            mov rax, qword [0x04006240] 	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x4006240	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x4006247	    0x488b05000000	            mov rax, qword [0x0400624e] 	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x400624e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x4006252	    0x48058c040000	                          add rax, 0x48c	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x4006258	      0xba20000000	                           mov edx, 0x20	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x400625d	          0x4889ce	                            mov rsi, rcx	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x4006260	          0x4889c7	                            mov rdi, rax	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x4006263	      0xe800000000	                          call 0x4006268	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x4006268	    0x488b05000000	            mov rax, qword [0x0400626f] 	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x400626f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x4006273	    0x4805b0040000	                          add rax, 0x4b0	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x4006279	          0x4889c7	                            mov rdi, rax	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x400627c	      0xe800000000	                          call 0x4006281	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x4006281	      0xe9fe000000	                           jmp 0x4006384	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x4006286	    0x488b05000000	            mov rax, qword [0x0400628d] 	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x400628d	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x4006294	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x4006298	      0xba20000000	                           mov edx, 0x20	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x400629d	          0x4889ce	                            mov rsi, rcx	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x40062a0	          0x4889c7	                            mov rdi, rax	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x40062a3	      0xe800000000	                          call 0x40062a8	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x40062a8	    0x488b05000000	            mov rax, qword [0x040062af] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x40062af	    0x488b80b81400	          mov rax, qword [rax + 0x14b8] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x40062b6	        0x488945b8	             mov qword [rbp - 0x48], rax	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x40062ba	    0x488b1d000000	            mov rbx, qword [0x040062c1] 	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x40062c1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x40062c5	          0x4889c7	                            mov rdi, rax	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x40062c8	      0xe800000000	                          call 0x40062cd	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x40062cd	    0x488983b81400	          mov qword [rbx + 0x14b8], rax 	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x40062d4	    0x488b05000000	            mov rax, qword [0x040062db] 	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x40062db	      0xbe00000000	                              mov esi, 0	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x40062e0	          0x4889c7	                            mov rdi, rax	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x40062e3	      0xe800000000	                          call 0x40062e8	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x40062e8	    0x488b05000000	            mov rax, qword [0x040062ef] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x40062ef	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x40062f6	    0x488b05000000	            mov rax, qword [0x040062fd] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x40062fd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x4006301	    0x48058c040000	                          add rax, 0x48c	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x4006307	      0xba20000000	                           mov edx, 0x20	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x400630c	          0x4889ce	                            mov rsi, rcx	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x400630f	          0x4889c7	                            mov rdi, rax	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x4006312	      0xe800000000	                          call 0x4006317	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x4006317	    0x488b05000000	            mov rax, qword [0x0400631e] 	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x400631e	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x4006325	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x4006329	      0xba20000000	                           mov edx, 0x20	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x400632e	          0x4889c6	                            mov rsi, rax	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x4006331	          0x4889cf	                            mov rdi, rcx	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x4006334	      0xe800000000	                          call 0x4006339	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x4006339	    0x488b05000000	            mov rax, qword [0x04006340] 	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x4006340	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x4006344	    0x4805b0040000	                          add rax, 0x4b0	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x400634a	          0x4889c7	                            mov rdi, rax	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x400634d	      0xe800000000	                          call 0x4006352	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x4006352	    0x488b05000000	            mov rax, qword [0x04006359] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4006359	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x400635d	    0x488b15000000	            mov rdx, qword [0x04006364] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4006364	    0x488b92b81400	          mov rdx, qword [rdx + 0x14b8] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x400636b	    0x488990b00400	            mov qword [rax + 0x4b0], rdx	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4006372	    0x488b05000000	            mov rax, qword [0x04006379] 	      3598	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4006379	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3598	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x400637d	    0x488990b81400	          mov qword [rax + 0x14b8], rdx 	      3598	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4006384	    0x488b05000000	            mov rax, qword [0x0400638b] 	      3601	syntax.c	FUNCTION_48	CALL_16
0x400638b	      0xbe28000000	                           mov esi, 0x28	      3601	syntax.c	FUNCTION_48	CALL_16
0x4006390	          0x4889c7	                            mov rdi, rax	      3601	syntax.c	FUNCTION_48	CALL_16
0x4006393	      0xe800000000	                          call 0x4006398	      3601	syntax.c	FUNCTION_48	CALL_16
0x4006398	            0xeb01	                           jmp 0x400639b	      3601	syntax.c	FUNCTION_48	CALL_16
0x400639a	              0x90	                                     nop	      3566	syntax.c	FUNCTION_48	IF_1
0x400639b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3602	syntax.c	FUNCTION_48
0x400639f	    0x644833042528	                xor rax, qword fs:[0x28]	      3602	syntax.c	FUNCTION_48
0x40063a8	            0x7405	                            je 0x40063af	      3602	syntax.c	FUNCTION_48
0x40063aa	      0xe800000000	                          call 0x40063af	      3602	syntax.c	FUNCTION_48
0x40063af	        0x4883c458	                           add rsp, 0x58	      3602	syntax.c	FUNCTION_48
0x40063b3	              0x5b	                                 pop rbx	      3602	syntax.c	FUNCTION_48
0x40063b4	              0x5d	                                 pop rbp	      3602	syntax.c	FUNCTION_48
0x40063b5	              0xc3	                                     ret	      3602	syntax.c	FUNCTION_48
restore_chartab	functions,0:IF,1:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	20
0x4000dcb	              0x55	                                push rbp	      1024	syntax.c	FUNCTION_7
0x4000dcc	          0x4889e5	                            mov rbp, rsp	      1024	syntax.c	FUNCTION_7
0x4000dcf	        0x4883ec10	                           sub rsp, 0x10	      1024	syntax.c	FUNCTION_7
0x4000dd3	        0x48897df8	                mov qword [rbp - 8], rdi	      1024	syntax.c	FUNCTION_7
0x4000dd7	    0x488b05000000	            mov rax, qword [0x04000dde] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4000dde	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4000de2	    0x488b90b00400	           mov rdx, qword [rax + 0x4b0] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4000de9	    0x488b05000000	            mov rax, qword [0x04000df0] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4000df0	          0x4839c2	                            cmp rdx, rax	      1025	syntax.c	FUNCTION_7	IF_1
0x4000df3	            0x7422	                            je 0x4000e17	      1025	syntax.c	FUNCTION_7	IF_1
0x4000df5	    0x488b05000000	            mov rax, qword [0x04000dfc] 	      1026	syntax.c	FUNCTION_7	CALL_1
0x4000dfc	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      1026	syntax.c	FUNCTION_7	CALL_1
0x4000e03	        0x488b45f8	                mov rax, qword [rbp - 8]	      1026	syntax.c	FUNCTION_7	CALL_1
0x4000e07	      0xba20000000	                           mov edx, 0x20	      1026	syntax.c	FUNCTION_7	CALL_1
0x4000e0c	          0x4889c6	                            mov rsi, rax	      1026	syntax.c	FUNCTION_7	CALL_1
0x4000e0f	          0x4889cf	                            mov rdi, rcx	      1026	syntax.c	FUNCTION_7	CALL_1
0x4000e12	      0xe800000000	                          call 0x4000e17	      1026	syntax.c	FUNCTION_7	CALL_1
0x4000e17	              0x90	                                     nop	      1027	syntax.c	FUNCTION_7
0x4000e18	              0xc9	                                   leave	      1027	syntax.c	FUNCTION_7
0x4000e19	              0xc3	                                     ret	      1027	syntax.c	FUNCTION_7
syn_cmd_clear	functions,0:IF,8:SWITCH,0:FOR,0:CALL,19:ELSE,5:WHILE,1:DO,0	168
0x40069f2	              0x55	                                push rbp	      3755	syntax.c	FUNCTION_55
0x40069f3	          0x4889e5	                            mov rbp, rsp	      3755	syntax.c	FUNCTION_55
0x40069f6	        0x4883ec30	                           sub rsp, 0x30	      3755	syntax.c	FUNCTION_55
0x40069fa	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3755	syntax.c	FUNCTION_55
0x40069fe	          0x8975d4	             mov dword [rbp - 0x2c], esi	      3755	syntax.c	FUNCTION_55
0x4006a01	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3756	syntax.c	FUNCTION_55
0x4006a05	          0x488b00	                    mov rax, qword [rax]	      3756	syntax.c	FUNCTION_55
0x4006a08	        0x488945f0	             mov qword [rbp - 0x10], rax	      3756	syntax.c	FUNCTION_55
0x4006a0c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3760	syntax.c	FUNCTION_55	CALL_1
0x4006a10	          0x4889c7	                            mov rdi, rax	      3760	syntax.c	FUNCTION_55	CALL_1
0x4006a13	      0xe800000000	                          call 0x4006a18	      3760	syntax.c	FUNCTION_55	CALL_1
0x4006a18	          0x4889c2	                            mov rdx, rax	      3760	syntax.c	FUNCTION_55	CALL_1
0x4006a1b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3760	syntax.c	FUNCTION_55	CALL_1
0x4006a1f	        0x48895008	                mov qword [rax + 8], rdx	      3760	syntax.c	FUNCTION_55	CALL_1
0x4006a23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3761	syntax.c	FUNCTION_55	IF_1
0x4006a27	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3761	syntax.c	FUNCTION_55	IF_1
0x4006a2a	            0x85c0	                           test eax, eax	      3761	syntax.c	FUNCTION_55	IF_1
0x4006a2c	     0xf8546020000	                           jne 0x4006c78	      3761	syntax.c	FUNCTION_55	IF_1
0x4006a32	    0x488b05000000	            mov rax, qword [0x04006a39] 	      3770	syntax.c	FUNCTION_55	IF_2
0x4006a39	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3770	syntax.c	FUNCTION_55	IF_2
0x4006a3d	    0x8b8004030000	           mov eax, dword [rax + 0x304] 	      3770	syntax.c	FUNCTION_55	IF_2
0x4006a43	            0x85c0	                           test eax, eax	      3770	syntax.c	FUNCTION_55	IF_2
0x4006a45	     0xf8530020000	                           jne 0x4006c7b	      3770	syntax.c	FUNCTION_55	IF_2
0x4006a4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4006a4f	           0xfb600	                   movzx eax, byte [rax]	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4006a52	           0xfb6c0	                           movzx eax, al	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4006a55	            0x89c7	                            mov edi, eax	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4006a57	      0xe800000000	                          call 0x4006a5c	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4006a5c	            0x85c0	                           test eax, eax	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4006a5e	     0xf84dc010000	                            je 0x4006c40	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4006a64	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3778	syntax.c	FUNCTION_55	IF_3	IF_4
0x4006a68	            0x740a	                            je 0x4006a74	      3778	syntax.c	FUNCTION_55	IF_3	IF_4
0x4006a6a	      0xe887fbffff	              call sym.syntax_sync_clear	      3779	syntax.c	FUNCTION_55	IF_3	CALL_3
0x4006a6f	      0xe9e5010000	                           jmp 0x4006c59	      3779	syntax.c	FUNCTION_55	IF_3	CALL_3
0x4006a74	    0x488b05000000	            mov rax, qword [0x04006a7b] 	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x4006a7b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x4006a7f	          0x4889c7	                            mov rdi, rax	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x4006a82	      0xe800000000	                          call 0x4006a87	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x4006a87	    0x488b05000000	            mov rax, qword [0x04006a8e] 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4006a8e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4006a92	    0x488b05000000	            mov rax, qword [0x04006a99] 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4006a99	        0x488b4008	                mov rax, qword [rax + 8]	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4006a9d	    0x480568170000	                         add rax, 0x1768	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4006aa3	          0x4839c2	                            cmp rdx, rax	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4006aa6	            0x750f	                           jne 0x4006ab7	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x4006aa8	      0xbe01000000	                              mov esi, 1	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x4006aad	      0xbf00000000	                              mov edi, 0	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x4006ab2	      0xe800000000	                          call 0x4006ab7	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x4006ab7	      0xbe01000000	                              mov esi, 1	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x4006abc	      0xbf00000000	                              mov edi, 0	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x4006ac1	      0xe800000000	                          call 0x4006ac6	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x4006ac6	      0xe98e010000	                           jmp 0x4006c59	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x4006acb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x4006acf	          0x4889c7	                            mov rdi, rax	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x4006ad2	      0xe800000000	                          call 0x4006ad7	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x4006ad7	        0x488945f8	                mov qword [rbp - 8], rax	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x4006adb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x4006adf	           0xfb600	                   movzx eax, byte [rax]	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x4006ae2	            0x3c40	                            cmp al, 0x40	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x4006ae4	     0xf85f2000000	                           jne 0x4006bdc	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x4006aea	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006aee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006af2	          0x4829c2	                            sub rdx, rax	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006af5	          0x4889d0	                            mov rax, rdx	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006af8	          0x83e801	                              sub eax, 1	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006afb	            0x89c2	                            mov edx, eax	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006afd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006b01	        0x4883c001	                              add rax, 1	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006b05	            0x89d6	                            mov esi, edx	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006b07	          0x4889c7	                            mov rdi, rax	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006b0a	      0xe8eb3e0000	               call sym.syn_scl_namen2id	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006b0f	          0x8945ec	             mov dword [rbp - 0x14], eax	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x4006b12	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3799	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x4006b16	            0x7521	                           jne 0x4006b39	      3799	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x4006b18	      0xbf00000000	                              mov edi, 0	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4006b1d	      0xe800000000	                          call 0x4006b22	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4006b22	          0x4889c2	                            mov rdx, rax	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4006b25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4006b29	          0x4889c6	                            mov rsi, rax	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4006b2c	          0x4889d7	                            mov rdi, rdx	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4006b2f	      0xe800000000	                          call 0x4006b34	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4006b34	      0xe920010000	                           jmp 0x4006c59	      3802	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x4006b39	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3811	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3
0x4006b3c	        0x662dd859	                          sub ax, 0x59d8	      3811	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3
0x4006b40	        0x668945ea	               mov word [rbp - 0x16], ax	      3811	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3
0x4006b44	    0x488b05000000	            mov rax, qword [0x04006b4b] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b4b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b4f	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b56	      0x480fbf55ea	            movsx rdx, word [rbp - 0x16]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b5b	          0x4889d0	                            mov rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b5e	          0x4801c0	                            add rax, rax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b61	          0x4801d0	                            add rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b64	        0x48c1e003	                              shl rax, 3	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b68	          0x4801c8	                            add rax, rcx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b6b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b6f	          0x4885c0	                           test rax, rax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b72	     0xf84b8000000	                            je 0x4006c30	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b78	    0x488b05000000	            mov rax, qword [0x04006b7f] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b7f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b83	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b8a	      0x480fbf55ea	            movsx rdx, word [rbp - 0x16]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b8f	          0x4889d0	                            mov rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b92	          0x4801c0	                            add rax, rax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b95	          0x4801d0	                            add rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b98	        0x48c1e003	                              shl rax, 3	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b9c	          0x4801c8	                            add rax, rcx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006b9f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006ba3	          0x4889c7	                            mov rdi, rax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006ba6	      0xe800000000	                          call 0x4006bab	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bab	    0x488b05000000	            mov rax, qword [0x04006bb2] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bb2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bb6	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bbd	      0x480fbf55ea	            movsx rdx, word [rbp - 0x16]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bc2	          0x4889d0	                            mov rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bc5	          0x4801c0	                            add rax, rax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bc8	          0x4801d0	                            add rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bcb	        0x48c1e003	                              shl rax, 3	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bcf	          0x4801c8	                            add rax, rcx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bd2	    0x48c740100000	               mov qword [rax + 0x10], 0	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bda	            0xeb54	                           jmp 0x4006c30	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006bdc	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006be0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006be4	          0x4829c2	                            sub rdx, rax	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006be7	          0x4889d0	                            mov rax, rdx	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006bea	            0x89c2	                            mov edx, eax	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006bec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006bf0	            0x89d6	                            mov esi, edx	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006bf2	          0x4889c7	                            mov rdi, rax	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006bf5	      0xe800000000	                          call 0x4006bfa	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006bfa	          0x8945ec	             mov dword [rbp - 0x14], eax	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006bfd	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3819	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x4006c01	            0x751e	                           jne 0x4006c21	      3819	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x4006c03	      0xbf00000000	                              mov edi, 0	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x4006c08	      0xe800000000	                          call 0x4006c0d	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x4006c0d	          0x4889c2	                            mov rdx, rax	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x4006c10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x4006c14	          0x4889c6	                            mov rsi, rax	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x4006c17	          0x4889d7	                            mov rdi, rdx	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x4006c1a	      0xe800000000	                          call 0x4006c1f	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x4006c1f	            0xeb38	                           jmp 0x4006c59	      3822	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x4006c21	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      3825	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_16
0x4006c24	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3825	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_16
0x4006c27	            0x89d6	                            mov esi, edx	      3825	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_16
0x4006c29	            0x89c7	                            mov edi, eax	      3825	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_16
0x4006c2b	      0xe84e000000	                  call sym.syn_clear_one	      3825	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_16
0x4006c30	        0x488b45f8	                mov rax, qword [rbp - 8]	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x4006c34	          0x4889c7	                            mov rdi, rax	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x4006c37	      0xe800000000	                          call 0x4006c3c	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x4006c3c	        0x488945f0	             mov qword [rbp - 0x10], rax	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x4006c40	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4006c44	           0xfb600	                   movzx eax, byte [rax]	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4006c47	           0xfb6c0	                           movzx eax, al	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4006c4a	            0x89c7	                            mov edi, eax	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4006c4c	      0xe800000000	                          call 0x4006c51	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4006c51	            0x85c0	                           test eax, eax	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4006c53	     0xf8472feffff	                            je 0x4006acb	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4006c59	      0xbf23000000	                           mov edi, 0x23	      3830	syntax.c	FUNCTION_55	CALL_18
0x4006c5e	      0xe800000000	                          call 0x4006c63	      3830	syntax.c	FUNCTION_55	CALL_18
0x4006c63	    0x488b05000000	            mov rax, qword [0x04006c6a] 	      3831	syntax.c	FUNCTION_55	CALL_19
0x4006c6a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3831	syntax.c	FUNCTION_55	CALL_19
0x4006c6e	          0x4889c7	                            mov rdi, rax	      3831	syntax.c	FUNCTION_55	CALL_19
0x4006c71	      0xe800000000	                          call 0x4006c76	      3831	syntax.c	FUNCTION_55	CALL_19
0x4006c76	            0xeb04	                           jmp 0x4006c7c	      3831	syntax.c	FUNCTION_55	CALL_19
0x4006c78	              0x90	                                     nop	      3762	syntax.c	FUNCTION_55	IF_1
0x4006c79	            0xeb01	                           jmp 0x4006c7c	      3762	syntax.c	FUNCTION_55	IF_1
0x4006c7b	              0x90	                                     nop	      3771	syntax.c	FUNCTION_55	IF_2
0x4006c7c	              0xc9	                                   leave	      3832	syntax.c	FUNCTION_55
0x4006c7d	              0xc3	                                     ret	      3832	syntax.c	FUNCTION_55
syn_gui_attr2entry	functions,0:IF,1:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	19
0x4011bcc	              0x55	                                push rbp	      9159	syntax.c	FUNCTION_137
0x4011bcd	          0x4889e5	                            mov rbp, rsp	      9159	syntax.c	FUNCTION_137
0x4011bd0	          0x897dfc	                mov dword [rbp - 4], edi	      9159	syntax.c	FUNCTION_137
0x4011bd3	    0x816dfc000100	              sub dword [rbp - 4], 0x100	      9160	syntax.c	FUNCTION_137
0x4011bda	    0x8b0500000000	            mov eax, dword [0x04011be0] 	      9161	syntax.c	FUNCTION_137	IF_1
0x4011be0	          0x3b45fc	                cmp eax, dword [rbp - 4]	      9161	syntax.c	FUNCTION_137	IF_1
0x4011be3	            0x7f07	                            jg 0x4011bec	      9161	syntax.c	FUNCTION_137	IF_1
0x4011be5	      0xb800000000	                              mov eax, 0	      9162	syntax.c	FUNCTION_137	IF_1
0x4011bea	            0xeb1e	                           jmp 0x4011c0a	      9162	syntax.c	FUNCTION_137	IF_1
0x4011bec	    0x488b0d000000	            mov rcx, qword [0x04011bf3] 	      9163	syntax.c	FUNCTION_137
0x4011bf3	          0x8b45fc	                mov eax, dword [rbp - 4]	      9163	syntax.c	FUNCTION_137
0x4011bf6	          0x4863d0	                         movsxd rdx, eax	      9163	syntax.c	FUNCTION_137
0x4011bf9	          0x4889d0	                            mov rax, rdx	      9163	syntax.c	FUNCTION_137
0x4011bfc	        0x48c1e002	                              shl rax, 2	      9163	syntax.c	FUNCTION_137
0x4011c00	          0x4801d0	                            add rax, rdx	      9163	syntax.c	FUNCTION_137
0x4011c03	        0x48c1e003	                              shl rax, 3	      9163	syntax.c	FUNCTION_137
0x4011c07	          0x4801c8	                            add rax, rcx	      9163	syntax.c	FUNCTION_137
0x4011c0a	              0x5d	                                 pop rbp	      9164	syntax.c	FUNCTION_137
0x4011c0b	              0xc3	                                     ret	      9164	syntax.c	FUNCTION_137
syn_current_attr	functions,0:IF,48:SWITCH,0:FOR,2:CALL,40:ELSE,10:WHILE,0:DO,1	963
0x4002a07	              0x55	                                push rbp	      1904	syntax.c	FUNCTION_28
0x4002a08	          0x4889e5	                            mov rbp, rsp	      1904	syntax.c	FUNCTION_28
0x4002a0b	            0x4154	                                push r12	      1904	syntax.c	FUNCTION_28
0x4002a0d	              0x53	                                push rbx	      1904	syntax.c	FUNCTION_28
0x4002a0e	    0x4881eca00200	                          sub rsp, 0x2a0	      1904	syntax.c	FUNCTION_28
0x4002a15	    0x89bd6cfdffff	            mov dword [rbp - 0x294], edi	      1904	syntax.c	FUNCTION_28
0x4002a1b	    0x89b568fdffff	            mov dword [rbp - 0x298], esi	      1904	syntax.c	FUNCTION_28
0x4002a21	    0x48899560fdff	            mov qword [rbp - 0x2a0], rdx	      1904	syntax.c	FUNCTION_28
0x4002a28	    0x898d5cfdffff	            mov dword [rbp - 0x2a4], ecx	      1904	syntax.c	FUNCTION_28
0x4002a2e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1904	syntax.c	FUNCTION_28
0x4002a37	        0x488945e8	             mov qword [rbp - 0x18], rax	      1904	syntax.c	FUNCTION_28
0x4002a3b	            0x31c0	                            xor eax, eax	      1904	syntax.c	FUNCTION_28
0x4002a3d	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	      1914	syntax.c	FUNCTION_28
0x4002a48	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	      1926	syntax.c	FUNCTION_28
0x4002a53	    0xc78590fdffff	              mov dword [rbp - 0x270], 0	      1933	syntax.c	FUNCTION_28
0x4002a5d	      0xe80b2e0000	                 call sym.syn_getcurline	      1940	syntax.c	FUNCTION_28	CALL_1
0x4002a62	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      1940	syntax.c	FUNCTION_28	CALL_1
0x4002a69	    0x8b0500000000	            mov eax, dword [0x04002a6f] 	      1941	syntax.c	FUNCTION_28	IF_1
0x4002a6f	          0x4863d0	                         movsxd rdx, eax	      1941	syntax.c	FUNCTION_28	IF_1
0x4002a72	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      1941	syntax.c	FUNCTION_28	IF_1
0x4002a79	          0x4801d0	                            add rax, rdx	      1941	syntax.c	FUNCTION_28	IF_1
0x4002a7c	           0xfb600	                   movzx eax, byte [rax]	      1941	syntax.c	FUNCTION_28	IF_1
0x4002a7f	            0x84c0	                             test al, al	      1941	syntax.c	FUNCTION_28	IF_1
0x4002a81	            0x7559	                           jne 0x4002adc	      1941	syntax.c	FUNCTION_28	IF_1
0x4002a83	    0x8b0500000000	            mov eax, dword [0x04002a89] 	      1941	syntax.c	FUNCTION_28	IF_1
0x4002a89	            0x85c0	                           test eax, eax	      1941	syntax.c	FUNCTION_28	IF_1
0x4002a8b	            0x744f	                            je 0x4002adc	      1941	syntax.c	FUNCTION_28	IF_1
0x4002a8d	    0x8b0500000000	            mov eax, dword [0x04002a93] 	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x4002a93	            0x85c0	                           test eax, eax	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x4002a95	            0x7827	                            js 0x4002abe	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x4002a97	    0x8b1500000000	            mov edx, dword [0x04002a9d] 	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x4002a9d	    0x8b0500000000	            mov eax, dword [0x04002aa3] 	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x4002aa3	            0x39c2	                            cmp edx, eax	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x4002aa5	            0x7c17	                            jl 0x4002abe	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x4002aa7	    0x8b0500000000	            mov eax, dword [0x04002aad] 	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x4002aad	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x4002ab2	            0x740a	                            je 0x4002abe	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x4002ab4	      0xbf00000000	                              mov edi, 0	      1948	syntax.c	FUNCTION_28	IF_1	CALL_2
0x4002ab9	      0xe82c130000	                call sym.push_next_match	      1948	syntax.c	FUNCTION_28	IF_1	CALL_2
0x4002abe	    0xc70500000000	               mov dword [0x04002ac8], 1	      1950	syntax.c	FUNCTION_28	IF_1
0x4002ac8	    0xc70500000000	               mov dword [0x04002ad2], 0	      1951	syntax.c	FUNCTION_28	IF_1
0x4002ad2	      0xb800000000	                              mov eax, 0	      1952	syntax.c	FUNCTION_28	IF_1
0x4002ad7	      0xe908120000	                           jmp 0x4003ce4	      1952	syntax.c	FUNCTION_28	IF_1
0x4002adc	    0x8b0500000000	            mov eax, dword [0x04002ae2] 	      1956	syntax.c	FUNCTION_28	IF_3
0x4002ae2	          0x4863d0	                         movsxd rdx, eax	      1956	syntax.c	FUNCTION_28	IF_3
0x4002ae5	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      1956	syntax.c	FUNCTION_28	IF_3
0x4002aec	          0x4801d0	                            add rax, rdx	      1956	syntax.c	FUNCTION_28	IF_3
0x4002aef	           0xfb600	                   movzx eax, byte [rax]	      1956	syntax.c	FUNCTION_28	IF_3
0x4002af2	            0x84c0	                             test al, al	      1956	syntax.c	FUNCTION_28	IF_3
0x4002af4	            0x741d	                            je 0x4002b13	      1956	syntax.c	FUNCTION_28	IF_3
0x4002af6	    0x8b0500000000	            mov eax, dword [0x04002afc] 	      1956	syntax.c	FUNCTION_28	IF_3
0x4002afc	            0x4898	                                    cdqe	      1956	syntax.c	FUNCTION_28	IF_3
0x4002afe	        0x488d5001	                      lea rdx, [rax + 1]	      1956	syntax.c	FUNCTION_28	IF_3
0x4002b02	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      1956	syntax.c	FUNCTION_28	IF_3
0x4002b09	          0x4801d0	                            add rax, rdx	      1956	syntax.c	FUNCTION_28	IF_3
0x4002b0c	           0xfb600	                   movzx eax, byte [rax]	      1956	syntax.c	FUNCTION_28	IF_3
0x4002b0f	            0x84c0	                             test al, al	      1956	syntax.c	FUNCTION_28	IF_3
0x4002b11	            0x7514	                           jne 0x4002b27	      1956	syntax.c	FUNCTION_28	IF_3
0x4002b13	    0xc70500000000	               mov dword [0x04002b1d], 1	      1958	syntax.c	FUNCTION_28	IF_3
0x4002b1d	    0xc70500000000	               mov dword [0x04002b27], 0	      1959	syntax.c	FUNCTION_28	IF_3
0x4002b27	    0x8b0500000000	            mov eax, dword [0x04002b2d] 	      1967	syntax.c	FUNCTION_28	IF_4
0x4002b2d	            0x85c0	                           test eax, eax	      1967	syntax.c	FUNCTION_28	IF_4
0x4002b2f	            0x7414	                            je 0x4002b45	      1967	syntax.c	FUNCTION_28	IF_4
0x4002b31	    0xc70500000000	     mov dword [0x04002b3b], 0xffffffff 	      1969	syntax.c	FUNCTION_28	IF_4
0x4002b3b	    0xc70500000000	               mov dword [0x04002b45], 0	      1970	syntax.c	FUNCTION_28	IF_4
0x4002b45	    0x83bd6cfdffff	              cmp dword [rbp - 0x294], 0	      1975	syntax.c	FUNCTION_28
0x4002b4c	            0x752a	                           jne 0x4002b78	      1975	syntax.c	FUNCTION_28
0x4002b4e	    0x488b05000000	            mov rax, qword [0x04002b55] 	      1975	syntax.c	FUNCTION_28
0x4002b55	        0x488b4008	                mov rax, qword [rax + 8]	      1975	syntax.c	FUNCTION_28
0x4002b59	          0x4885c0	                           test rax, rax	      1975	syntax.c	FUNCTION_28
0x4002b5c	            0x7513	                           jne 0x4002b71	      1975	syntax.c	FUNCTION_28
0x4002b5e	    0x488b05000000	            mov rax, qword [0x04002b65] 	      1976	syntax.c	FUNCTION_28
0x4002b65	    0x488b80300100	           mov rax, qword [rax + 0x130] 	      1976	syntax.c	FUNCTION_28
0x4002b6c	          0x4885c0	                           test rax, rax	      1976	syntax.c	FUNCTION_28
0x4002b6f	            0x7407	                            je 0x4002b78	      1976	syntax.c	FUNCTION_28
0x4002b71	      0xb801000000	                              mov eax, 1	      1975	syntax.c	FUNCTION_28
0x4002b76	            0xeb05	                           jmp 0x4002b7d	      1975	syntax.c	FUNCTION_28
0x4002b78	      0xb800000000	                              mov eax, 0	      1975	syntax.c	FUNCTION_28
0x4002b7d	    0x898594fdffff	            mov dword [rbp - 0x26c], eax	      1974	syntax.c	FUNCTION_28
0x4002b83	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1980	syntax.c	FUNCTION_28	CALL_3
0x4002b8a	      0xba0a000000	                            mov edx, 0xa	      1980	syntax.c	FUNCTION_28	CALL_3
0x4002b8f	      0xbe04000000	                              mov esi, 4	      1980	syntax.c	FUNCTION_28	CALL_3
0x4002b94	          0x4889c7	                            mov rdi, rax	      1980	syntax.c	FUNCTION_28	CALL_3
0x4002b97	      0xe800000000	                          call 0x4002b9c	      1980	syntax.c	FUNCTION_28	CALL_3
0x4002b9c	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1983	syntax.c	FUNCTION_28	CALL_4
0x4002ba0	          0x4889c7	                            mov rdi, rax	      1983	syntax.c	FUNCTION_28	CALL_4
0x4002ba3	      0xe8a9e1ffff	                   call sym.save_chartab	      1983	syntax.c	FUNCTION_28	CALL_4
0x4002ba8	    0xc78584fdffff	              mov dword [rbp - 0x27c], 0	      1992	syntax.c	FUNCTION_28	DO_1
0x4002bb2	    0xc7858cfdffff	              mov dword [rbp - 0x274], 0	      1993	syntax.c	FUNCTION_28	DO_1
0x4002bbc	    0xc7857cfdffff	              mov dword [rbp - 0x284], 0	      1994	syntax.c	FUNCTION_28	DO_1
0x4002bc6	    0x8b0500000000	            mov eax, dword [0x04002bcc] 	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002bcc	            0x85c0	                           test eax, eax	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002bce	            0x7430	                            je 0x4002c00	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002bd0	    0x488b0d000000	            mov rcx, qword [0x04002bd7] 	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002bd7	    0x8b0500000000	            mov eax, dword [0x04002bdd] 	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002bdd	          0x4863d0	                         movsxd rdx, eax	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002be0	          0x4889d0	                            mov rax, rdx	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002be3	        0x48c1e003	                              shl rax, 3	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002be7	          0x4801d0	                            add rax, rdx	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002bea	        0x48c1e004	                              shl rax, 4	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002bee	    0x482d90000000	                           sub rax, 0x90	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002bf4	          0x4801c8	                            add rax, rcx	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002bf7	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002bfe	            0xeb0b	                           jmp 0x4002c0b	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4002c00	    0x48c785b0fdff	              mov qword [rbp - 0x250], 0	      2007	syntax.c	FUNCTION_28	DO_1	ELSE_1
0x4002c0b	    0x488b05000000	            mov rax, qword [0x04002c12] 	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4002c12	    0x8b8098020000	           mov eax, dword [rax + 0x298] 	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4002c18	            0x85c0	                           test eax, eax	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4002c1a	            0x751e	                           jne 0x4002c3a	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4002c1c	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4002c24	            0x7414	                            je 0x4002c3a	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4002c26	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4002c2d	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4002c31	          0x4885c0	                           test rax, rax	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4002c34	     0xf842f0b0000	                            je 0x4003769	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4002c3a	    0x83bd94fdffff	              cmp dword [rbp - 0x26c], 0	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x4002c41	     0xf848d030000	                            je 0x4002fd4	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x4002c47	      0xe8212c0000	                 call sym.syn_getcurline	      2018	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	CALL_5
0x4002c4c	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2018	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	CALL_5
0x4002c53	    0x488b05000000	            mov rax, qword [0x04002c5a] 	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x4002c5a	    0x8b1500000000	            mov edx, dword [0x04002c60] 	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x4002c60	          0x4863ca	                         movsxd rcx, edx	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x4002c63	    0x488b95c8fdff	            mov rdx, qword [rbp - 0x238]	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x4002c6a	          0x4801ca	                            add rdx, rcx	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x4002c6d	          0x4889c6	                            mov rsi, rax	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x4002c70	          0x4889d7	                            mov rdi, rdx	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x4002c73	      0xe800000000	                          call 0x4002c78	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x4002c78	            0x85c0	                           test eax, eax	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x4002c7a	     0xf8454030000	                            je 0x4002fd4	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x4002c80	    0x8b0500000000	            mov eax, dword [0x04002c86] 	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002c86	            0x85c0	                           test eax, eax	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002c88	            0x7477	                            je 0x4002d01	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002c8a	    0x488b1d000000	            mov rbx, qword [0x04002c91] 	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4002c91	    0x8b0500000000	            mov eax, dword [0x04002c97] 	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4002c97	          0x4c63e0	                         movsxd r12, eax	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4002c9a	    0x8b0500000000	            mov eax, dword [0x04002ca0] 	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002ca0	            0x85c0	                           test eax, eax	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002ca2	            0x7431	                            je 0x4002cd5	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002ca4	    0x488b05000000	            mov rax, qword [0x04002cab] 	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cab	    0x8b1500000000	            mov edx, dword [0x04002cb1] 	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cb1	          0x4863d2	                         movsxd rdx, edx	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cb4	        0x488d4aff	                      lea rcx, [rdx - 1]	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cb8	    0x488b95c8fdff	            mov rdx, qword [rbp - 0x238]	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cbf	          0x4801d1	                            add rcx, rdx	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cc2	    0x488b95c8fdff	            mov rdx, qword [rbp - 0x238]	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cc9	          0x4889ce	                            mov rsi, rcx	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002ccc	          0x4889d7	                            mov rdi, rdx	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002ccf	            0xffd0	                                call rax	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cd1	            0x4898	                                    cdqe	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cd3	            0xeb05	                           jmp 0x4002cda	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cd5	      0xb800000000	                              mov eax, 0	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cda	          0x4929c4	                            sub r12, rax	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002cdd	          0x4c89e0	                            mov rax, r12	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002ce0	        0x488d50ff	                      lea rdx, [rax - 1]	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4002ce4	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4002ceb	          0x4801d0	                            add rax, rdx	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4002cee	          0x4889de	                            mov rsi, rbx	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4002cf1	          0x4889c7	                            mov rdi, rax	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4002cf4	      0xe800000000	                          call 0x4002cf9	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4002cf9	            0x85c0	                           test eax, eax	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4002cfb	     0xf85d3020000	                           jne 0x4002fd4	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4002d01	    0x8b3500000000	            mov esi, dword [0x04002d07] 	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d07	    0x4c8b8db0fdff	             mov r9, qword [rbp - 0x250]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d0e	    0x4c8d85a8fdff	                   lea r8, [rbp - 0x258]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d15	    0x488d8da0fdff	                  lea rcx, [rbp - 0x260]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d1c	    0x488d9574fdff	                  lea rdx, [rbp - 0x28c]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d23	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d2a	        0x4883ec08	                              sub rsp, 8	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d2e	    0x488dbd78fdff	                  lea rdi, [rbp - 0x288]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d35	              0x57	                                push rdi	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d36	          0x4889c7	                            mov rdi, rax	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d39	      0xe8e72c0000	               call sym.check_keyword_id	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d3e	        0x4883c410	                           add rsp, 0x10	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d42	    0x89857cfdffff	            mov dword [rbp - 0x284], eax	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002d48	    0x83bd7cfdffff	              cmp dword [rbp - 0x284], 0	      2032	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9
0x4002d4f	     0xf847f020000	                            je 0x4002fd4	      2032	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9
0x4002d55	      0xbfffffffff	                     mov edi, 0xffffffff	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_9
0x4002d5a	      0xe8d01d0000	             call sym.push_current_state	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_9
0x4002d5f	          0x83f801	                              cmp eax, 1	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_9
0x4002d62	     0xf855d020000	                           jne 0x4002fc5	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_9
0x4002d68	    0x488b0d000000	            mov rcx, qword [0x04002d6f] 	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002d6f	    0x8b0500000000	            mov eax, dword [0x04002d75] 	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002d75	          0x4863d0	                         movsxd rdx, eax	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002d78	          0x4889d0	                            mov rax, rdx	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002d7b	        0x48c1e003	                              shl rax, 3	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002d7f	          0x4801d0	                            add rax, rdx	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002d82	        0x48c1e004	                              shl rax, 4	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002d86	    0x482d90000000	                           sub rax, 0x90	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002d8c	          0x4801c8	                            add rax, rcx	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002d8f	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002d96	    0x8b1500000000	            mov edx, dword [0x04002d9c] 	      2037	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002d9c	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2037	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002da3	          0x895010	             mov dword [rax + 0x10], edx	      2037	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002da6	    0x488b15000000	            mov rdx, qword [0x04002dad] 	      2038	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002dad	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2038	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002db4	        0x48895028	             mov qword [rax + 0x28], rdx	      2038	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002db8	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2039	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002dbf	    0xc74030000000	               mov dword [rax + 0x30], 0	      2039	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002dc6	    0x488b15000000	            mov rdx, qword [0x04002dcd] 	      2040	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002dcd	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2040	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002dd4	        0x48895018	             mov qword [rax + 0x18], rdx	      2040	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002dd8	    0x8b9574fdffff	            mov edx, dword [rbp - 0x28c]	      2041	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002dde	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2041	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002de5	          0x895020	             mov dword [rax + 0x20], edx	      2041	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002de8	    0x488b15000000	            mov rdx, qword [0x04002def] 	      2042	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002def	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2042	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002df6	        0x48895038	             mov qword [rax + 0x38], rdx	      2042	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002dfa	    0x8b9574fdffff	            mov edx, dword [rbp - 0x28c]	      2043	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e00	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2043	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e07	          0x895040	             mov dword [rax + 0x40], edx	      2043	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e0a	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2044	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e11	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2044	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e18	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2045	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e1f	    0xc74058000000	               mov dword [rax + 0x58], 0	      2045	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e26	    0x488b95a0fdff	            mov rdx, qword [rbp - 0x260]	      2046	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e2d	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2046	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e34	        0x48895068	             mov qword [rax + 0x68], rdx	      2046	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e38	    0x8b0500000000	            mov eax, dword [0x04002e3e] 	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e3e	          0x8d5001	                      lea edx, [rax + 1]	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e41	    0x891500000000	            mov dword [0x04002e47], edx 	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e47	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e4e	          0x894270	             mov dword [rdx + 0x70], eax	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e51	    0x8b9578fdffff	            mov edx, dword [rbp - 0x288]	      2049	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e57	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2049	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e5e	          0x895074	             mov dword [rax + 0x74], edx	      2049	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002e61	    0x8b0500000000	            mov eax, dword [0x04002e67] 	      2050	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e67	          0x83f801	                              cmp eax, 1	      2050	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e6a	            0x7e4c	                           jle 0x4002eb8	      2050	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e6c	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e73	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e77	    0x488b35000000	            mov rsi, qword [0x04002e7e] 	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e7e	    0x8b0500000000	            mov eax, dword [0x04002e84] 	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e84	          0x4863d0	                         movsxd rdx, eax	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e87	          0x4889d0	                            mov rax, rdx	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e8a	        0x48c1e003	                              shl rax, 3	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e8e	          0x4801d0	                            add rax, rdx	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e91	        0x48c1e004	                              shl rax, 4	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e95	    0x482d20010000	                          sub rax, 0x120	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e9b	          0x4801f0	                            add rax, rsi	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002e9e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002ea2	      0x2500000200	                        and eax, 0x20000	      2053	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002ea7	          0x4809c1	                             or rcx, rax	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002eaa	          0x4889ca	                            mov rdx, rcx	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002ead	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002eb4	        0x48895068	             mov qword [rax + 0x68], rdx	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4002eb8	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2055	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002ebf	    0x8b957cfdffff	            mov edx, dword [rbp - 0x284]	      2055	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002ec5	          0x895004	                mov dword [rax + 4], edx	      2055	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002ec8	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2056	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002ecf	    0x8b957cfdffff	            mov edx, dword [rbp - 0x284]	      2056	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002ed5	          0x895008	                mov dword [rax + 8], edx	      2056	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002ed8	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x4002edf	          0x83e002	                              and eax, 2	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x4002ee2	          0x4885c0	                           test rax, rax	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x4002ee5	     0xf8496000000	                            je 0x4002f81	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x4002eeb	    0x8b0500000000	            mov eax, dword [0x04002ef1] 	      2059	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4002ef1	          0x83f801	                              cmp eax, 1	      2059	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4002ef4	            0x7f21	                            jg 0x4002f17	      2059	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4002ef6	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2061	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4002efd	    0xc74060000000	               mov dword [rax + 0x60], 0	      2061	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4002f04	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2062	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4002f0b	    0xc74008000000	                  mov dword [rax + 8], 0	      2062	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4002f12	      0xe983000000	                           jmp 0x4002f9a	      2062	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4002f17	    0x488b0d000000	            mov rcx, qword [0x04002f1e] 	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f1e	    0x8b0500000000	            mov eax, dword [0x04002f24] 	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f24	          0x4863d0	                         movsxd rdx, eax	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f27	          0x4889d0	                            mov rax, rdx	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f2a	        0x48c1e003	                              shl rax, 3	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f2e	          0x4801d0	                            add rax, rdx	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f31	        0x48c1e004	                              shl rax, 4	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f35	    0x482d20010000	                          sub rax, 0x120	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f3b	          0x4801c8	                            add rax, rcx	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f3e	          0x8b5060	            mov edx, dword [rax + 0x60] 	      2067	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f41	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f48	          0x895060	             mov dword [rax + 0x60], edx	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f4b	    0x488b0d000000	            mov rcx, qword [0x04002f52] 	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f52	    0x8b0500000000	            mov eax, dword [0x04002f58] 	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f58	          0x4863d0	                         movsxd rdx, eax	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f5b	          0x4889d0	                            mov rax, rdx	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f5e	        0x48c1e003	                              shl rax, 3	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f62	          0x4801d0	                            add rax, rdx	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f65	        0x48c1e004	                              shl rax, 4	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f69	    0x482d20010000	                          sub rax, 0x120	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f6f	          0x4801c8	                            add rax, rcx	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f72	          0x8b5008	                mov edx, dword [rax + 8]	      2069	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f75	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f7c	          0x895008	                mov dword [rax + 8], edx	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f7f	            0xeb19	                           jmp 0x4002f9a	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4002f81	    0x8b857cfdffff	            mov eax, dword [rbp - 0x284]	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4002f87	            0x89c7	                            mov edi, eax	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4002f89	      0xe800000000	                          call 0x4002f8e	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4002f8e	            0x89c2	                            mov edx, eax	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4002f90	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4002f97	          0x895060	             mov dword [rax + 0x60], edx	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4002f9a	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2074	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002fa1	    0x48c740780000	               mov qword [rax + 0x78], 0	      2074	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002fa9	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	      2075	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002fb0	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2075	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002fb7	    0x488990800000	             mov qword [rax + 0x80], rdx	      2075	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4002fbe	      0xe8be170000	                  call sym.check_keepend	      2076	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x4002fc3	            0xeb0f	                           jmp 0x4002fd4	      2076	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x4002fc5	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_12
0x4002fcc	          0x4889c7	                            mov rdi, rax	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_12
0x4002fcf	      0xe800000000	                          call 0x4002fd4	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_12
0x4002fd4	    0x83bd7cfdffff	              cmp dword [rbp - 0x284], 0	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x4002fdb	     0xf8588070000	                           jne 0x4003769	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x4002fe1	    0x488b05000000	            mov rax, qword [0x04002fe8] 	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x4002fe8	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x4002fee	            0x85c0	                           test eax, eax	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x4002ff0	     0xf8473070000	                            je 0x4003769	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x4002ff6	    0x8b0500000000	            mov eax, dword [0x04002ffc] 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4002ffc	            0x85c0	                           test eax, eax	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4002ffe	            0x7814	                            js 0x4003014	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4003000	    0x8b1500000000	            mov edx, dword [0x04003006] 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4003006	    0x8b0500000000	            mov eax, dword [0x0400300c] 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x400300c	            0x39c2	                            cmp edx, eax	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x400300e	     0xf8d22060000	                           jge 0x4003636	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4003014	    0xc70500000000	               mov dword [0x0400301e], 0	      2101	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x400301e	    0xc70500000000	     mov dword [0x04003028], 0x7fffffff 	      2102	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4003028	    0x488b05000000	            mov rax, qword [0x0400302f] 	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x400302f	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4003035	    0x898580fdffff	            mov dword [rbp - 0x280], eax	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x400303b	      0xe9e2050000	                           jmp 0x4003622	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4003040	    0x488b05000000	            mov rax, qword [0x04003047] 	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4003047	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x400304e	    0x8b8580fdffff	            mov eax, dword [rbp - 0x280]	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4003054	          0x4863d0	                         movsxd rdx, eax	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4003057	          0x4889d0	                            mov rax, rdx	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x400305a	        0x48c1e002	                              shl rax, 2	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x400305e	          0x4801d0	                            add rax, rdx	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4003061	        0x48c1e005	                              shl rax, 5	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4003065	          0x4801c8	                            add rax, rcx	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4003068	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x400306f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003076	         0xfb64001	               movzx eax, byte [rax + 1]	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400307a	           0xfbec0	                           movsx eax, al	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400307d	    0x3b856cfdffff	            cmp eax, dword [rbp - 0x294]	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003083	     0xf8599050000	                           jne 0x4003622	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003089	    0x83bd68fdffff	              cmp dword [rbp - 0x298], 0	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003090	            0x7517	                           jne 0x40030a9	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003092	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003099	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400309c	      0x2500100000	                         and eax, 0x1000	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030a1	            0x85c0	                           test eax, eax	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030a3	     0xf8579050000	                           jne 0x4003622	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030a9	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030b0	           0xfb600	                   movzx eax, byte [rax]	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030b3	            0x3c01	                               cmp al, 1	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030b5	            0x7412	                            je 0x40030c9	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030b7	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2109	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030be	           0xfb600	                   movzx eax, byte [rax]	      2109	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030c1	            0x3c02	                               cmp al, 2	      2109	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030c3	     0xf8559050000	                           jne 0x4003622	      2109	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030c9	    0x488b05000000	            mov rax, qword [0x040030d0] 	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030d0	          0x4885c0	                           test rax, rax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030d3	            0x742b	                            je 0x4003100	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030d5	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_13
0x40030dc	        0x488d5050	                   lea rdx, [rax + 0x50]	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_13
0x40030e0	    0x488b05000000	            mov rax, qword [0x040030e7] 	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_13
0x40030e7	      0xb900000000	                              mov ecx, 0	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_13
0x40030ec	          0x4889c6	                            mov rsi, rax	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_13
0x40030ef	      0xbf00000000	                              mov edi, 0	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_13
0x40030f4	      0xe8a8910000	                     call sym.in_id_list	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_13
0x40030f9	            0x85c0	                           test eax, eax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030fb	           0xf95c0	                                setne al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40030fe	            0xeb57	                           jmp 0x4003157	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003100	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003108	            0x7514	                           jne 0x400311e	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400310a	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2114	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003111	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2114	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003114	          0x83e001	                              and eax, 1	      2114	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003117	            0x85c0	                           test eax, eax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003119	           0xf94c0	                                 sete al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400311c	            0xeb39	                           jmp 0x4003157	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400311e	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2117	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003125	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2117	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003128	          0x83e001	                              and eax, 1	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x400312b	            0x89c1	                            mov ecx, eax	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x400312d	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x4003134	        0x488d5050	                   lea rdx, [rax + 0x50]	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x4003138	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x400313f	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x4003143	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x400314a	          0x4889c7	                            mov rdi, rax	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x400314d	      0xe84f910000	                     call sym.in_id_list	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x4003152	            0x85c0	                           test eax, eax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003154	           0xf95c0	                                setne al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003157	            0x84c0	                             test al, al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003159	     0xf84c3040000	                            je 0x4003622	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400315f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4003166	          0x8b5034	            mov edx, dword [rax + 0x34] 	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4003169	    0x8b0500000000	            mov eax, dword [0x0400316f] 	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x400316f	            0x39c2	                            cmp edx, eax	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4003171	            0x7519	                           jne 0x400318c	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4003173	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x400317a	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x400317d	    0x8b0500000000	            mov eax, dword [0x04003183] 	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4003183	            0x39c2	                            cmp edx, eax	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4003185	            0x7c05	                            jl 0x400318c	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4003187	      0xe996040000	                           jmp 0x4003622	      2126	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x400318c	    0x8b1500000000	            mov edx, dword [0x04003192] 	      2127	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003192	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2127	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003199	          0x895034	             mov dword [rax + 0x34], edx	      2127	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400319c	    0x8b1500000000	            mov edx, dword [0x040031a2] 	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031a2	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031a9	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031ac	            0x29c2	                            sub edx, eax	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031ae	            0x89d0	                            mov eax, edx	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031b0	    0x898588fdffff	            mov dword [rbp - 0x278], eax	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031b6	    0x83bd88fdffff	              cmp dword [rbp - 0x278], 0	      2130	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_18
0x40031bd	            0x790a	                           jns 0x40031c9	      2130	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_18
0x40031bf	    0xc78588fdffff	              mov dword [rbp - 0x278], 0	      2131	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_18
0x40031c9	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2133	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031d0	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2133	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031d3	          0x8945b8	             mov dword [rbp - 0x48], eax	      2133	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031d6	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2134	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031dd	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2134	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031e1	    0x48898570feff	            mov qword [rbp - 0x190], rax	      2134	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40031e8	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x40031ef	        0x488d4870	                   lea rcx, [rax + 0x70]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x40031f3	    0x488b35000000	            mov rsi, qword [0x040031fa] 	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x40031fa	    0x8b9588fdffff	            mov edx, dword [rbp - 0x278]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x4003200	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x4003207	          0x4889c7	                            mov rdi, rax	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x400320a	      0xe882260000	                    call sym.syn_regexec	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x400320f	    0x898598fdffff	            mov dword [rbp - 0x268], eax	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x4003215	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	      2139	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400321c	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2139	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003223	        0x48895068	             mov qword [rax + 0x68], rdx	      2139	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003227	    0x83bd98fdffff	              cmp dword [rbp - 0x268], 0	      2140	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x400322e	            0x7513	                           jne 0x4003243	      2140	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x4003230	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2143	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x4003237	    0xc74038ffffff	     mov dword [rax + 0x38], 0x7fffffff 	      2143	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x400323e	      0xe9df030000	                           jmp 0x4003622	      2144	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x4003243	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x400324a	    0x488db570feff	                  lea rsi, [rbp - 0x190]	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x4003251	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x4003258	    0x41b8ffffffff	                     mov r8d, 0xffffffff	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x400325e	      0xb900000000	                              mov ecx, 0	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x4003263	          0x4889c7	                            mov rdi, rax	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x4003266	      0xe81d240000	              call sym.syn_add_start_off	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x400326b	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4003272	    0x488b05000000	            mov rax, qword [0x04003279] 	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4003279	          0x4839c2	                            cmp rdx, rax	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x400327c	            0x7e13	                           jle 0x4003291	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x400327e	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2156	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4003285	    0xc74038ffffff	     mov dword [rax + 0x38], 0x7fffffff 	      2156	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x400328c	      0xe991030000	                           jmp 0x4003622	      2157	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4003291	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      2159	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003297	    0x89859cfdffff	            mov dword [rbp - 0x264], eax	      2159	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400329d	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2163	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40032a4	    0x8b959cfdffff	            mov edx, dword [rbp - 0x264]	      2163	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40032aa	          0x895038	             mov dword [rax + 0x38], edx	      2163	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40032ad	    0x8b0500000000	            mov eax, dword [0x040032b3] 	      2169	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x40032b3	    0x39859cfdffff	           cmp dword [rbp - 0x264], eax 	      2169	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x40032b9	            0x7c05	                            jl 0x40032c0	      2169	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x40032bb	      0xe962030000	                           jmp 0x4003622	      2170	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x40032c0	    0x488d9550feff	                  lea rdx, [rbp - 0x1b0]	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_17
0x40032c7	    0x8b8580fdffff	            mov eax, dword [rbp - 0x280]	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_17
0x40032cd	          0x4889d6	                            mov rsi, rdx	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_17
0x40032d0	            0x89c7	                            mov edi, eax	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_17
0x40032d2	      0xe82a0a0000	              call sym.did_match_already	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_17
0x40032d7	            0x85c0	                           test eax, eax	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_17
0x40032d9	            0x740f	                            je 0x40032ea	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_17
0x40032db	    0xc70500000000	               mov dword [0x040032e5], 1	      2179	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22
0x40032e5	      0xe938030000	                           jmp 0x4003622	      2180	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22
0x40032ea	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2183	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40032f1	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      2183	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40032f8	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      2184	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40032fe	    0x8985e8fdffff	            mov dword [rbp - 0x218], eax	      2184	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003304	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x400330b	    0x488db570feff	                  lea rsi, [rbp - 0x190]	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x4003312	    0x488d85f0fdff	                  lea rax, [rbp - 0x210]	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x4003319	    0x41b8ffffffff	                     mov r8d, 0xffffffff	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x400331f	      0xb902000000	                              mov ecx, 2	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x4003324	          0x4889c7	                            mov rdi, rax	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x4003327	      0xe85c230000	              call sym.syn_add_start_off	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x400332c	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4003333	    0x488db570feff	                  lea rsi, [rbp - 0x190]	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x400333a	    0x488d8510feff	                  lea rax, [rbp - 0x1f0]	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4003341	    0x41b800000000	                              mov r8d, 0	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4003347	      0xb904000000	                              mov ecx, 4	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x400334c	          0x4889c7	                            mov rdi, rax	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x400334f	      0xe880210000	                call sym.syn_add_end_off	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4003354	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2199	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x400335b	          0x4889c7	                            mov rdi, rax	      2199	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x400335e	      0xe800000000	                          call 0x4003363	      2199	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x4003363	    0x488b05000000	            mov rax, qword [0x0400336a] 	      2200	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400336a	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      2200	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003371	    0x48c705000000	               mov qword [0x0400337c], 0	      2201	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400337c	    0x48c785a0fdff	              mov qword [rbp - 0x260], 0	      2203	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003387	    0x48c78520feff	              mov qword [rbp - 0x1e0], 0	      2204	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003392	    0xc78528feffff	              mov dword [rbp - 0x1d8], 0	      2205	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400339c	    0xc78570fdffff	              mov dword [rbp - 0x290], 0	      2206	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40033a6	    0x48c78500feff	              mov qword [rbp - 0x200], 0	      2207	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40033b1	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033b8	           0xfb600	                   movzx eax, byte [rax]	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033bb	            0x3c02	                               cmp al, 2	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033bd	     0xf8584000000	                           jne 0x4003447	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033c3	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033ca	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033cd	          0x83e004	                              and eax, 4	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033d0	            0x85c0	                           test eax, eax	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033d2	            0x7473	                            je 0x4003447	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033d4	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033db	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033e2	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033e9	    0x48899548feff	            mov qword [rbp - 0x1b8], rdx	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40033f0	    0x4c8d8d20feff	                   lea r9, [rbp - 0x1e0]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x40033f7	    0x4c8d85a0fdff	                   lea r8, [rbp - 0x260]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x40033fe	    0x488d8d00feff	                  lea rcx, [rbp - 0x200]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4003405	    0x488d95e0fdff	                  lea rdx, [rbp - 0x220]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x400340c	    0x488db540feff	                  lea rsi, [rbp - 0x1c0]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4003413	    0x8b8580fdffff	            mov eax, dword [rbp - 0x280]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4003419	    0xffb5c0fdffff	                push qword [rbp - 0x240]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x400341f	    0x488dbd70fdff	                  lea rdi, [rbp - 0x290]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4003426	              0x57	                                push rdi	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4003427	            0x89c7	                            mov edi, eax	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4003429	      0xe810180000	                    call sym.find_endpos	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x400342e	        0x4883c410	                           add rsp, 0x10	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4003432	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4003439	          0x4885c0	                           test rax, rax	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x400343c	     0xf85b3000000	                           jne 0x40034f5	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4003442	      0xe9db010000	                           jmp 0x4003622	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4003447	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x400344e	           0xfb600	                   movzx eax, byte [rax]	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x4003451	            0x3c01	                               cmp al, 1	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x4003453	     0xf859d000000	                           jne 0x40034f6	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x4003459	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4003460	    0x488db570feff	                  lea rsi, [rbp - 0x190]	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4003467	    0x488d8500feff	                  lea rax, [rbp - 0x200]	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x400346e	    0x41b800000000	                              mov r8d, 0	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4003474	      0xb903000000	                              mov ecx, 3	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4003479	          0x4889c7	                            mov rdi, rax	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x400347c	      0xe853200000	                call sym.syn_add_end_off	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4003481	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x4003488	    0x488db570feff	                  lea rsi, [rbp - 0x190]	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x400348f	    0x488d85e0fdff	                  lea rax, [rbp - 0x220]	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x4003496	    0x41b800000000	                              mov r8d, 0	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x400349c	      0xb901000000	                              mov ecx, 1	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x40034a1	          0x4889c7	                            mov rdi, rax	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x40034a4	      0xe82b200000	                call sym.syn_add_end_off	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x40034a9	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x40034b0	    0x488b05000000	            mov rax, qword [0x040034b7] 	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x40034b7	          0x4839c2	                            cmp rdx, rax	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x40034ba	            0x753a	                           jne 0x40034f6	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x40034bc	    0x8b95e8fdffff	            mov edx, dword [rbp - 0x218]	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x40034c2	    0x8b856cfdffff	            mov eax, dword [rbp - 0x294]	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x40034c8	             0x1d0	                            add eax, edx	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x40034ca	    0x3b859cfdffff	            cmp eax, dword [rbp - 0x264]	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x40034d0	            0x7d24	                           jge 0x40034f6	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x40034d2	    0x8b9580feffff	            mov edx, dword [rbp - 0x180]	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x40034d8	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      2246	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x40034de	            0x39c2	                            cmp edx, eax	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x40034e0	     0xf853c010000	                           jne 0x4003622	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x40034e6	    0xc70500000000	               mov dword [0x040034f0], 1	      2247	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x40034f0	      0xe92d010000	                           jmp 0x4003622	      2248	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x40034f5	              0x90	                                     nop	      2217	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x40034f6	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x40034fd	    0x488b05000000	            mov rax, qword [0x04003504] 	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4003504	          0x4839c2	                            cmp rdx, rax	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4003507	            0x751a	                           jne 0x4003523	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4003509	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      2258	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x400350f	    0x3b859cfdffff	            cmp eax, dword [rbp - 0x264]	      2258	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4003515	            0x7d0c	                           jge 0x4003523	      2258	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4003517	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	      2259	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x400351d	    0x8985f8fdffff	            mov dword [rbp - 0x208], eax	      2259	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4003523	    0x488d95e0fdff	                  lea rdx, [rbp - 0x220]	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_24
0x400352a	    0x488d8500feff	                  lea rax, [rbp - 0x200]	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_24
0x4003531	          0x4889d6	                            mov rsi, rdx	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_24
0x4003534	          0x4889c7	                            mov rdi, rax	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_24
0x4003537	      0xe84e1f0000	                 call sym.limit_pos_zero	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_24
0x400353c	    0x8b8580fdffff	            mov eax, dword [rbp - 0x280]	      2262	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003542	    0x890500000000	            mov dword [0x04003548], eax 	      2262	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003548	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	      2263	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400354e	    0x890500000000	            mov dword [0x04003554], eax 	      2263	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003554	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400355b	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003562	    0x488905000000	            mov qword [0x04003569], rax 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003569	    0x488915000000	            mov qword [0x04003570], rdx 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003570	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003577	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400357e	    0x488905000000	            mov qword [0x04003585], rax 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003585	    0x488915000000	            mov qword [0x0400358c], rdx 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400358c	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003593	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400359a	    0x488905000000	            mov qword [0x040035a1], rax 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035a1	    0x488915000000	            mov qword [0x040035a8], rdx 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035a8	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      2267	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035af	    0x488905000000	            mov qword [0x040035b6], rax 	      2267	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035b6	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035bd	    0x488b9518feff	            mov rdx, qword [rbp - 0x1e8]	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035c4	    0x488905000000	            mov qword [0x040035cb], rax 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035cb	    0x488915000000	            mov qword [0x040035d2], rdx 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035d2	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035d9	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035e0	    0x488905000000	            mov qword [0x040035e7], rax 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035e7	    0x488915000000	            mov qword [0x040035ee], rdx 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035ee	    0x8b8570fdffff	            mov eax, dword [rbp - 0x290]	      2270	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035f4	    0x890500000000	            mov dword [0x040035fa], eax 	      2270	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40035fa	    0x488b05000000	            mov rax, qword [0x04003601] 	      2271	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x4003601	          0x4889c7	                            mov rdi, rax	      2271	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x4003604	      0xe800000000	                          call 0x4003609	      2271	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x4003609	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2272	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003610	    0x488905000000	            mov qword [0x04003617], rax 	      2272	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003617	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	      2273	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4003622	    0x83ad80fdffff	              sub dword [rbp - 0x280], 1	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4003629	    0x83bd80fdffff	              cmp dword [rbp - 0x280], 0	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4003630	     0xf890afaffff	                           jns 0x4003040	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x4003636	    0x8b0500000000	            mov eax, dword [0x0400363c] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x400363c	            0x85c0	                           test eax, eax	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x400363e	     0xf8825010000	                            js 0x4003769	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4003644	    0x8b1500000000	            mov edx, dword [0x0400364a] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x400364a	    0x8b0500000000	            mov eax, dword [0x04003650] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4003650	            0x39c2	                            cmp edx, eax	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4003652	     0xf8511010000	                           jne 0x4003769	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4003658	    0x488b05000000	            mov rax, qword [0x0400365f] 	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x400365f	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4003666	    0x8b0500000000	            mov eax, dword [0x0400366c] 	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x400366c	          0x4863d0	                         movsxd rdx, eax	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x400366f	          0x4889d0	                            mov rax, rdx	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4003672	        0x48c1e002	                              shl rax, 2	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4003676	          0x4801d0	                            add rax, rdx	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4003679	        0x48c1e005	                              shl rax, 5	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x400367d	          0x4801c8	                            add rax, rcx	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4003680	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4003687	    0x488b15000000	            mov rdx, qword [0x0400368e] 	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x400368e	    0x488b05000000	            mov rax, qword [0x04003695] 	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4003695	          0x4839c2	                            cmp rdx, rax	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4003698	     0xf85ab000000	                           jne 0x4003749	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x400369e	    0x8b1500000000	            mov edx, dword [0x040036a4] 	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036a4	    0x8b0500000000	            mov eax, dword [0x040036aa] 	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036aa	            0x39c2	                            cmp edx, eax	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036ac	     0xf8597000000	                           jne 0x4003749	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036b2	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036b9	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036bd	          0x4885c0	                           test rax, rax	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036c0	     0xf8483000000	                            je 0x4003749	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036c6	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2292	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036cd	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2292	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036d1	    0x488905000000	            mov qword [0x040036d8], rax 	      2292	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036d8	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2293	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036df	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2293	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036e2	    0x890500000000	            mov dword [0x040036e8], eax 	      2293	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036e8	    0xc7858cfdffff	              mov dword [rbp - 0x274], 1	      2294	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036f2	    0xc78590fdffff	              mov dword [rbp - 0x270], 1	      2295	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40036fc	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_26
0x4003703	      0xbe01000000	                              mov esi, 1	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_26
0x4003708	          0x4889c7	                            mov rdi, rax	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_26
0x400370b	      0xe800000000	                          call 0x4003710	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_26
0x4003710	          0x83f801	                              cmp eax, 1	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_26
0x4003713	            0x7528	                           jne 0x400373d	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_26
0x4003715	    0x488b8d60feff	            mov rcx, qword [rbp - 0x1a0]	      2302	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x400371c	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4003722	          0x8d5001	                      lea edx, [rax + 1]	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4003725	    0x899550feffff	            mov dword [rbp - 0x1b0], edx	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x400372b	            0x4898	                                    cdqe	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x400372d	        0x48c1e002	                              shl rax, 2	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4003731	        0x488d1401	                    lea rdx, [rcx + rax]	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4003735	    0x8b0500000000	            mov eax, dword [0x0400373b] 	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x400373b	            0x8902	                    mov dword [rdx], eax	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x400373d	    0xc70500000000	     mov dword [0x04003747], 0xffffffff 	      2305	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4003747	            0xeb16	                           jmp 0x400375f	      2305	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4003749	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_27
0x4003750	          0x4889c7	                            mov rdi, rax	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_27
0x4003753	      0xe892060000	                call sym.push_next_match	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_27
0x4003758	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_27
0x400375f	    0xc78584fdffff	              mov dword [rbp - 0x27c], 1	      2309	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4003769	    0x488b05000000	            mov rax, qword [0x04003770] 	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x4003770	          0x4885c0	                           test rax, rax	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x4003773	     0xf84aa000000	                            je 0x4003823	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x4003779	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x4003780	     0xf859d000000	                           jne 0x4003823	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x4003786	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      2324	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33
0x400378d	            0x756c	                           jne 0x40037fb	      2324	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33
0x400378f	      0xe8d9200000	                 call sym.syn_getcurline	      2326	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	CALL_28
0x4003794	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2326	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	CALL_28
0x400379b	    0x8b0500000000	            mov eax, dword [0x040037a1] 	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037a1	      0x2500010000	                          and eax, 0x100	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037a6	            0x85c0	                           test eax, eax	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037a8	            0x7434	                            je 0x40037de	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037aa	    0x8b0500000000	            mov eax, dword [0x040037b0] 	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037b0	          0x4863d0	                         movsxd rdx, eax	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037b3	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037ba	          0x4801d0	                            add rax, rdx	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037bd	           0xfb600	                   movzx eax, byte [rax]	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037c0	            0x3c20	                            cmp al, 0x20	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037c2	            0x746c	                            je 0x4003830	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037c4	    0x8b0500000000	            mov eax, dword [0x040037ca] 	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037ca	          0x4863d0	                         movsxd rdx, eax	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037cd	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037d4	          0x4801d0	                            add rax, rdx	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037d7	           0xfb600	                   movzx eax, byte [rax]	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037da	            0x3c09	                               cmp al, 9	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037dc	            0x7452	                            je 0x4003830	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x40037de	    0x8b0500000000	            mov eax, dword [0x040037e4] 	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037e4	      0x2500020000	                          and eax, 0x200	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037e9	            0x85c0	                           test eax, eax	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037eb	            0x740e	                            je 0x40037fb	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037ed	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037f4	           0xfb600	                   movzx eax, byte [rax]	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037f7	            0x84c0	                             test al, al	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037f9	            0x7435	                            je 0x4003830	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x40037fb	    0x48c705000000	               mov qword [0x04003806], 0	      2342	syntax.c	FUNCTION_28	DO_1	IF_32
0x4003806	    0xc70500000000	     mov dword [0x04003810], 0xffffffff 	      2343	syntax.c	FUNCTION_28	DO_1	IF_32
0x4003810	    0x83bd90fdffff	              cmp dword [rbp - 0x270], 0	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x4003817	            0x750a	                           jne 0x4003823	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x4003819	    0xc78584fdffff	              mov dword [rbp - 0x27c], 1	      2345	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x4003823	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      2348	syntax.c	FUNCTION_28	DO_1
0x400382a	     0xf8578f3ffff	                           jne 0x4002ba8	      2348	syntax.c	FUNCTION_28	DO_1
0x4003830	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2350	syntax.c	FUNCTION_28	CALL_30
0x4003834	          0x4889c7	                            mov rdi, rax	      2350	syntax.c	FUNCTION_28	CALL_30
0x4003837	      0xe88fd5ffff	                call sym.restore_chartab	      2350	syntax.c	FUNCTION_28	CALL_30
0x400383c	    0xc70500000000	               mov dword [0x04003846], 0	      2356	syntax.c	FUNCTION_28
0x4003846	    0xc70500000000	               mov dword [0x04003850], 0	      2358	syntax.c	FUNCTION_28
0x4003850	    0xc70500000000	               mov dword [0x0400385a], 0	      2359	syntax.c	FUNCTION_28
0x400385a	    0xc70500000000	               mov dword [0x04003864], 0	      2362	syntax.c	FUNCTION_28
0x4003864	    0xc70500000000	               mov dword [0x0400386e], 0	      2363	syntax.c	FUNCTION_28
0x400386e	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      2365	syntax.c	FUNCTION_28	IF_36
0x4003876	     0xf8466030000	                            je 0x4003be2	      2365	syntax.c	FUNCTION_28	IF_36
0x400387c	    0x8b0500000000	            mov eax, dword [0x04003882] 	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4003882	          0x83e801	                              sub eax, 1	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4003885	    0x898580fdffff	            mov dword [rbp - 0x280], eax	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x400388b	      0xe92e010000	                           jmp 0x40039be	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4003890	    0x488b0d000000	            mov rcx, qword [0x04003897] 	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4003897	    0x8b8580fdffff	            mov eax, dword [rbp - 0x280]	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2
0x400389d	          0x4863d0	                         movsxd rdx, eax	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40038a0	          0x4889d0	                            mov rax, rdx	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40038a3	        0x48c1e003	                              shl rax, 3	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40038a7	          0x4801d0	                            add rax, rdx	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40038aa	        0x48c1e004	                              shl rax, 4	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40038ae	          0x4801c8	                            add rax, rcx	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40038b1	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40038b8	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038bf	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038c3	    0x488b05000000	            mov rax, qword [0x040038ca] 	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038ca	          0x4839c2	                            cmp rdx, rax	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038cd	            0x7c33	                            jl 0x4003902	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038cf	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038d6	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038da	    0x488b05000000	            mov rax, qword [0x040038e1] 	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038e1	          0x4839c2	                            cmp rdx, rax	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038e4	     0xf85cd000000	                           jne 0x40039b7	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038ea	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038f1	          0x8b5030	            mov edx, dword [rax + 0x30] 	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038f4	    0x8b0500000000	            mov eax, dword [0x040038fa] 	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038fa	            0x39c2	                            cmp edx, eax	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40038fc	     0xf8fb5000000	                            jg 0x40039b7	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003902	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2376	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003909	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2376	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400390d	          0x4885c0	                           test rax, rax	      2376	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003910	            0x7442	                            je 0x4003954	      2376	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003912	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003919	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400391d	    0x488b05000000	            mov rax, qword [0x04003924] 	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003924	          0x4839c2	                            cmp rdx, rax	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003927	            0x7f2b	                            jg 0x4003954	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003929	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003930	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003934	    0x488b05000000	            mov rax, qword [0x0400393b] 	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400393b	          0x4839c2	                            cmp rdx, rax	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400393e	            0x7577	                           jne 0x40039b7	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003940	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003947	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400394a	    0x8b0500000000	            mov eax, dword [0x04003950] 	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003950	            0x39c2	                            cmp edx, eax	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003952	            0x7e63	                           jle 0x40039b7	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003954	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2381	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400395b	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2381	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400395e	    0x890500000000	            mov dword [0x04003964], eax 	      2381	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003964	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2383	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400396b	          0x8b4004	                mov eax, dword [rax + 4]	      2383	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400396e	    0x890500000000	            mov dword [0x04003974], eax 	      2383	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003974	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2385	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400397b	          0x8b4008	                mov eax, dword [rax + 8]	      2385	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400397e	    0x890500000000	            mov dword [0x04003984], eax 	      2385	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003984	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2387	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400398b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2387	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400398f	    0x890500000000	            mov dword [0x04003995], eax 	      2387	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4003995	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2388	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400399c	          0x8b4070	            mov eax, dword [rax + 0x70] 	      2388	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400399f	    0x890500000000	            mov dword [0x040039a5], eax 	      2388	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40039a5	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2389	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40039ac	          0x8b4074	            mov eax, dword [rax + 0x74] 	      2389	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40039af	    0x890500000000	            mov dword [0x040039b5], eax 	      2389	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40039b5	            0xeb14	                           jmp 0x40039cb	      2391	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40039b7	    0x83ad80fdffff	              sub dword [rbp - 0x280], 1	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40039be	    0x83bd80fdffff	              cmp dword [rbp - 0x280], 0	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40039c5	     0xf89c5feffff	                           jns 0x4003890	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40039cb	    0x4883bd60fdff	              cmp qword [rbp - 0x2a0], 0	      2395	syntax.c	FUNCTION_28	IF_36	IF_38
0x40039d3	     0xf849d010000	                            je 0x4003b76	      2395	syntax.c	FUNCTION_28	IF_36	IF_38
0x40039d9	    0x488b05000000	            mov rax, qword [0x040039e0] 	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x40039e0	    0x8b8090020000	           mov eax, dword [rax + 0x290] 	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x40039e6	            0x85c0	                           test eax, eax	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x40039e8	     0xf85a4000000	                           jne 0x4003a92	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x40039ee	    0x488b05000000	            mov rax, qword [0x040039f5] 	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x40039f5	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x40039fb	            0x85c0	                           test eax, eax	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x40039fd	            0x740a	                            je 0x4003a09	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x40039ff	    0x8b0500000000	            mov eax, dword [0x04003a05] 	      2408	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4003a05	            0x85c0	                           test eax, eax	      2408	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4003a07	            0x7524	                           jne 0x4003a2d	      2408	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4003a09	    0x488b05000000	            mov rax, qword [0x04003a10] 	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4003a10	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4003a16	          0x83f802	                              cmp eax, 2	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4003a19	           0xf95c0	                                setne al	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4003a1c	           0xfb6d0	                           movzx edx, al	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4003a1f	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4003a26	            0x8910	                    mov dword [rax], edx	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4003a28	      0xe949010000	                           jmp 0x4003b76	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4003a2d	    0xc78540feffff	              mov dword [rbp - 0x1c0], 0	      2412	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x4003a37	    0x488b05000000	            mov rax, qword [0x04003a3e] 	      2413	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x4003a3e	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      2413	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x4003a44	    0x66898544feff	              mov word [rbp - 0x1bc], ax	      2413	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x4003a4b	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	      2414	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x4003a56	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a5d	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a61	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a68	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a6f	      0xb900000000	                              mov ecx, 0	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a74	          0x4889c7	                            mov rdi, rax	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a77	      0xe825880000	                     call sym.in_id_list	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a7c	            0x85c0	                           test eax, eax	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a7e	           0xf94c0	                                 sete al	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a81	           0xfb6d0	                           movzx edx, al	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a84	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a8b	            0x8910	                    mov dword [rax], edx	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a8d	      0xe9e4000000	                           jmp 0x4003b76	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4003a92	    0x8b0500000000	            mov eax, dword [0x04003a98] 	      2424	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4003a98	            0x85c0	                           test eax, eax	      2424	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4003a9a	            0x7524	                           jne 0x4003ac0	      2424	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4003a9c	    0x488b05000000	            mov rax, qword [0x04003aa3] 	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4003aa3	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4003aa9	          0x83f801	                              cmp eax, 1	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4003aac	           0xf94c0	                                 sete al	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4003aaf	           0xfb6d0	                           movzx edx, al	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4003ab2	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4003ab9	            0x8910	                    mov dword [rax], edx	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4003abb	      0xe9b6000000	                           jmp 0x4003b76	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x4003ac0	    0xc78540feffff	              mov dword [rbp - 0x1c0], 0	      2428	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x4003aca	    0x488b05000000	            mov rax, qword [0x04003ad1] 	      2429	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x4003ad1	    0x8b8090020000	           mov eax, dword [rax + 0x290] 	      2429	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x4003ad7	    0x66898544feff	              mov word [rbp - 0x1bc], ax	      2429	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x4003ade	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	      2430	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x4003ae9	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4003af0	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4003af4	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4003afb	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4003b02	      0xb900000000	                              mov ecx, 0	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4003b07	          0x4889c7	                            mov rdi, rax	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4003b0a	      0xe892870000	                     call sym.in_id_list	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4003b0f	            0x89c2	                            mov edx, eax	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4003b11	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4003b18	            0x8910	                    mov dword [rax], edx	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4003b1a	    0x488b05000000	            mov rax, qword [0x04003b21] 	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4003b21	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4003b27	            0x85c0	                           test eax, eax	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4003b29	            0x744b	                            je 0x4003b76	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4003b2b	    0x488b05000000	            mov rax, qword [0x04003b32] 	      2435	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4003b32	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      2435	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4003b38	    0x66898544feff	              mov word [rbp - 0x1bc], ax	      2435	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4003b3f	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4003b46	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4003b4a	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4003b51	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4003b58	      0xb900000000	                              mov ecx, 0	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4003b5d	          0x4889c7	                            mov rdi, rax	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4003b60	      0xe83c870000	                     call sym.in_id_list	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4003b65	            0x85c0	                           test eax, eax	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4003b67	            0x740d	                            je 0x4003b76	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4003b69	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      2437	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43
0x4003b70	    0xc70000000000	                      mov dword [rax], 0	      2437	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43
0x4003b76	    0x83bd6cfdffff	              cmp dword [rbp - 0x294], 0	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x4003b7d	     0xf85b0000000	                           jne 0x4003c33	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x4003b83	    0x83bd5cfdffff	              cmp dword [rbp - 0x2a4], 0	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x4003b8a	     0xf85a3000000	                           jne 0x4003c33	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x4003b90	      0xe843060000	               call sym.check_state_ends	      2454	syntax.c	FUNCTION_28	IF_36	IF_44	CALL_34
0x4003b95	    0x8b0500000000	            mov eax, dword [0x04003b9b] 	      2455	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4003b9b	            0x85c0	                           test eax, eax	      2455	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4003b9d	     0xf8e90000000	                           jle 0x4003c33	      2455	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4003ba3	      0xe8c51c0000	                 call sym.syn_getcurline	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x4003ba8	          0x4889c2	                            mov rdx, rax	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x4003bab	    0x8b0500000000	            mov eax, dword [0x04003bb1] 	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x4003bb1	            0x4898	                                    cdqe	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x4003bb3	          0x4801d0	                            add rax, rdx	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x4003bb6	           0xfb600	                   movzx eax, byte [rax]	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x4003bb9	            0x84c0	                             test al, al	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x4003bbb	            0x7476	                            je 0x4003c33	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x4003bbd	    0x8b0500000000	            mov eax, dword [0x04003bc3] 	      2458	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4003bc3	          0x83c001	                              add eax, 1	      2458	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4003bc6	    0x890500000000	            mov dword [0x04003bcc], eax 	      2458	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4003bcc	      0xe807060000	               call sym.check_state_ends	      2459	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_36
0x4003bd1	    0x8b0500000000	            mov eax, dword [0x04003bd7] 	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4003bd7	          0x83e801	                              sub eax, 1	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4003bda	    0x890500000000	            mov dword [0x04003be0], eax 	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4003be0	            0xeb51	                           jmp 0x4003c33	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4003be2	    0x4883bd60fdff	              cmp qword [rbp - 0x2a0], 0	      2464	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003bea	            0x7447	                            je 0x4003c33	      2464	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003bec	    0x488b05000000	            mov rax, qword [0x04003bf3] 	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003bf3	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003bf9	            0x85c0	                           test eax, eax	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003bfb	            0x7517	                           jne 0x4003c14	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003bfd	    0x488b05000000	            mov rax, qword [0x04003c04] 	      2468	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c04	    0x8b8090020000	           mov eax, dword [rax + 0x290] 	      2468	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c0a	            0x85c0	                           test eax, eax	      2468	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c0c	           0xf94c0	                                 sete al	      2468	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c0f	           0xfb6c0	                           movzx eax, al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c12	            0xeb16	                           jmp 0x4003c2a	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c14	    0x488b05000000	            mov rax, qword [0x04003c1b] 	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c1b	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c21	          0x83f801	                              cmp eax, 1	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c24	           0xf94c0	                                 sete al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c27	           0xfb6c0	                           movzx eax, al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c2a	    0x488b9560fdff	            mov rdx, qword [rbp - 0x2a0]	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c31	            0x8902	                    mov dword [rdx], eax	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4003c33	    0x488b05000000	            mov rax, qword [0x04003c3a] 	      2472	syntax.c	FUNCTION_28	IF_47
0x4003c3a	          0x4885c0	                           test rax, rax	      2472	syntax.c	FUNCTION_28	IF_47
0x4003c3d	            0x745d	                            je 0x4003c9c	      2472	syntax.c	FUNCTION_28	IF_47
0x4003c3f	      0xe8291c0000	                 call sym.syn_getcurline	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4003c44	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4003c4b	    0x8b0500000000	            mov eax, dword [0x04003c51] 	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4003c51	          0x4863d0	                         movsxd rdx, eax	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4003c54	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4003c5b	          0x4801d0	                            add rax, rdx	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4003c5e	           0xfb600	                   movzx eax, byte [rax]	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4003c61	            0x84c0	                             test al, al	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4003c63	            0x7437	                            je 0x4003c9c	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4003c65	    0x8b0500000000	            mov eax, dword [0x04003c6b] 	      2474	syntax.c	FUNCTION_28	IF_47
0x4003c6b	            0x4898	                                    cdqe	      2474	syntax.c	FUNCTION_28	IF_47
0x4003c6d	        0x488d5001	                      lea rdx, [rax + 1]	      2474	syntax.c	FUNCTION_28	IF_47
0x4003c71	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2474	syntax.c	FUNCTION_28	IF_47
0x4003c78	          0x4801d0	                            add rax, rdx	      2474	syntax.c	FUNCTION_28	IF_47
0x4003c7b	           0xfb600	                   movzx eax, byte [rax]	      2474	syntax.c	FUNCTION_28	IF_47
0x4003c7e	            0x84c0	                             test al, al	      2474	syntax.c	FUNCTION_28	IF_47
0x4003c80	            0x751a	                           jne 0x4003c9c	      2474	syntax.c	FUNCTION_28	IF_47
0x4003c82	    0x8b0500000000	            mov eax, dword [0x04003c88] 	      2475	syntax.c	FUNCTION_28	IF_47
0x4003c88	      0x2580020000	                          and eax, 0x280	      2475	syntax.c	FUNCTION_28	IF_47
0x4003c8d	            0x85c0	                           test eax, eax	      2475	syntax.c	FUNCTION_28	IF_47
0x4003c8f	            0x750b	                           jne 0x4003c9c	      2475	syntax.c	FUNCTION_28	IF_47
0x4003c91	    0x48c705000000	               mov qword [0x04003c9c], 0	      2476	syntax.c	FUNCTION_28	IF_47
0x4003c9c	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	      2478	syntax.c	FUNCTION_28	IF_48
0x4003ca2	            0x85c0	                           test eax, eax	      2478	syntax.c	FUNCTION_28	IF_48
0x4003ca4	            0x7e0f	                           jle 0x4003cb5	      2478	syntax.c	FUNCTION_28	IF_48
0x4003ca6	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      2479	syntax.c	FUNCTION_28	CALL_38
0x4003cad	          0x4889c7	                            mov rdi, rax	      2479	syntax.c	FUNCTION_28	CALL_38
0x4003cb0	      0xe800000000	                          call 0x4003cb5	      2479	syntax.c	FUNCTION_28	CALL_38
0x4003cb5	    0x488b05000000	            mov rax, qword [0x04003cbc] 	      2482	syntax.c	FUNCTION_28	CALL_39
0x4003cbc	          0x4889c7	                            mov rdi, rax	      2482	syntax.c	FUNCTION_28	CALL_39
0x4003cbf	      0xe800000000	                          call 0x4003cc4	      2482	syntax.c	FUNCTION_28	CALL_39
0x4003cc4	    0x48c705000000	               mov qword [0x04003ccf], 0	      2483	syntax.c	FUNCTION_28
0x4003ccf	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2484	syntax.c	FUNCTION_28	CALL_40
0x4003cd6	          0x4889c7	                            mov rdi, rax	      2484	syntax.c	FUNCTION_28	CALL_40
0x4003cd9	      0xe800000000	                          call 0x4003cde	      2484	syntax.c	FUNCTION_28	CALL_40
0x4003cde	    0x8b0500000000	            mov eax, dword [0x04003ce4] 	      2486	syntax.c	FUNCTION_28
0x4003ce4	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2487	syntax.c	FUNCTION_28
0x4003ce8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2487	syntax.c	FUNCTION_28
0x4003cf1	            0x7405	                            je 0x4003cf8	      2487	syntax.c	FUNCTION_28
0x4003cf3	      0xe800000000	                          call 0x4003cf8	      2487	syntax.c	FUNCTION_28
0x4003cf8	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      2487	syntax.c	FUNCTION_28
0x4003cfc	              0x5b	                                 pop rbx	      2487	syntax.c	FUNCTION_28
0x4003cfd	            0x415c	                                 pop r12	      2487	syntax.c	FUNCTION_28
0x4003cff	              0x5d	                                 pop rbp	      2487	syntax.c	FUNCTION_28
0x4003d00	              0xc3	                                     ret	      2487	syntax.c	FUNCTION_28
syn_namen2id	functions,0:IF,1:SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,0:DO,0	24
0x4012f2d	              0x55	                                push rbp	      9692	syntax.c	FUNCTION_152
0x4012f2e	          0x4889e5	                            mov rbp, rsp	      9692	syntax.c	FUNCTION_152
0x4012f31	        0x4883ec20	                           sub rsp, 0x20	      9692	syntax.c	FUNCTION_152
0x4012f35	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9692	syntax.c	FUNCTION_152
0x4012f39	          0x8975e4	             mov dword [rbp - 0x1c], esi	      9692	syntax.c	FUNCTION_152
0x4012f3c	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      9694	syntax.c	FUNCTION_152
0x4012f43	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      9696	syntax.c	FUNCTION_152	CALL_1
0x4012f46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9696	syntax.c	FUNCTION_152	CALL_1
0x4012f4a	            0x89d6	                            mov esi, edx	      9696	syntax.c	FUNCTION_152	CALL_1
0x4012f4c	          0x4889c7	                            mov rdi, rax	      9696	syntax.c	FUNCTION_152	CALL_1
0x4012f4f	      0xe800000000	                          call 0x4012f54	      9696	syntax.c	FUNCTION_152	CALL_1
0x4012f54	        0x488945f8	                mov qword [rbp - 8], rax	      9696	syntax.c	FUNCTION_152	CALL_1
0x4012f58	      0x48837df800	                  cmp qword [rbp - 8], 0	      9697	syntax.c	FUNCTION_152	IF_1
0x4012f5d	            0x741b	                            je 0x4012f7a	      9697	syntax.c	FUNCTION_152	IF_1
0x4012f5f	        0x488b45f8	                mov rax, qword [rbp - 8]	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x4012f63	          0x4889c7	                            mov rdi, rax	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x4012f66	      0xe800000000	                          call 0x4012f6b	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x4012f6b	          0x8945f4	              mov dword [rbp - 0xc], eax	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x4012f6e	        0x488b45f8	                mov rax, qword [rbp - 8]	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x4012f72	          0x4889c7	                            mov rdi, rax	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x4012f75	      0xe800000000	                          call 0x4012f7a	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x4012f7a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9702	syntax.c	FUNCTION_152
0x4012f7d	              0xc9	                                   leave	      9703	syntax.c	FUNCTION_152
0x4012f7e	              0xc3	                                     ret	      9703	syntax.c	FUNCTION_152
ex_syntax	functions,0:IF,5:SWITCH,0:FOR,2:CALL,7:ELSE,0:WHILE,0:DO,0	103
0x400c557	              0x55	                                push rbp	      6360	syntax.c	FUNCTION_95
0x400c558	          0x4889e5	                            mov rbp, rsp	      6360	syntax.c	FUNCTION_95
0x400c55b	        0x4883ec30	                           sub rsp, 0x30	      6360	syntax.c	FUNCTION_95
0x400c55f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6360	syntax.c	FUNCTION_95
0x400c563	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6361	syntax.c	FUNCTION_95
0x400c567	          0x488b00	                    mov rax, qword [rax]	      6361	syntax.c	FUNCTION_95
0x400c56a	        0x488945f0	             mov qword [rbp - 0x10], rax	      6361	syntax.c	FUNCTION_95
0x400c56e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6366	syntax.c	FUNCTION_95
0x400c572	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6366	syntax.c	FUNCTION_95
0x400c576	    0x488905000000	            mov qword [0x0400c57d], rax 	      6366	syntax.c	FUNCTION_95
0x400c57d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c581	        0x488945e8	             mov qword [rbp - 0x18], rax	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c585	            0xeb05	                           jmp 0x400c58c	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c587	      0x488345e801	               add qword [rbp - 0x18], 1	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c58c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c590	           0xfb600	                   movzx eax, byte [rax]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c593	           0xfb6c0	                           movzx eax, al	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c596	          0x83e841	                           sub eax, 0x41	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c599	          0x83f819	                           cmp eax, 0x19	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c59c	            0x76e9	                           jbe 0x400c587	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c59e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c5a2	           0xfb600	                   movzx eax, byte [rax]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c5a5	           0xfb6c0	                           movzx eax, al	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c5a8	          0x83e861	                           sub eax, 0x61	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c5ab	          0x83f819	                           cmp eax, 0x19	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c5ae	            0x76d7	                           jbe 0x400c587	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400c5b0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6371	syntax.c	FUNCTION_95	CALL_2
0x400c5b4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6371	syntax.c	FUNCTION_95	CALL_2
0x400c5b8	          0x4829c2	                            sub rdx, rax	      6371	syntax.c	FUNCTION_95	CALL_2
0x400c5bb	          0x4889d0	                            mov rax, rdx	      6371	syntax.c	FUNCTION_95	CALL_2
0x400c5be	            0x89c2	                            mov edx, eax	      6371	syntax.c	FUNCTION_95	CALL_2
0x400c5c0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6371	syntax.c	FUNCTION_95	CALL_2
0x400c5c4	            0x89d6	                            mov esi, edx	      6371	syntax.c	FUNCTION_95	CALL_2
0x400c5c6	          0x4889c7	                            mov rdi, rax	      6371	syntax.c	FUNCTION_95	CALL_2
0x400c5c9	      0xe800000000	                          call 0x400c5ce	      6371	syntax.c	FUNCTION_95	CALL_2
0x400c5ce	        0x488945f8	                mov qword [rbp - 8], rax	      6371	syntax.c	FUNCTION_95	CALL_2
0x400c5d2	      0x48837df800	                  cmp qword [rbp - 8], 0	      6372	syntax.c	FUNCTION_95	IF_1
0x400c5d7	     0xf84e2000000	                            je 0x400c6bf	      6372	syntax.c	FUNCTION_95	IF_1
0x400c5dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x400c5e1	          0x8b4030	            mov eax, dword [rax + 0x30] 	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x400c5e4	            0x85c0	                           test eax, eax	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x400c5e6	            0x740f	                            je 0x400c5f7	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x400c5e8	    0x8b0500000000	            mov eax, dword [0x0400c5ee] 	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0x400c5ee	          0x83c001	                              add eax, 1	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0x400c5f1	    0x890500000000	            mov dword [0x0400c5f7], eax 	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0x400c5f7	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      6376	syntax.c	FUNCTION_95	IF_1	FOR_2
0x400c5fe	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400c601	            0x4898	                                    cdqe	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400c603	        0x48c1e004	                              shl rax, 4	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400c607	    0x480500000000	                              add rax, 0	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400c60d	          0x488b00	                    mov rax, qword [rax]	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400c610	          0x4885c0	                           test rax, rax	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400c613	            0x751e	                           jne 0x400c633	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400c615	      0xbf00000000	                              mov edi, 0	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400c61a	      0xe800000000	                          call 0x400c61f	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400c61f	          0x4889c2	                            mov rdx, rax	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400c622	        0x488b45f8	                mov rax, qword [rbp - 8]	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400c626	          0x4889c6	                            mov rsi, rax	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400c629	          0x4889d7	                            mov rdi, rdx	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400c62c	      0xe800000000	                          call 0x400c631	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400c631	            0xeb66	                           jmp 0x400c699	      6381	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400c633	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400c636	            0x4898	                                    cdqe	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400c638	        0x48c1e004	                              shl rax, 4	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400c63c	    0x480500000000	                              add rax, 0	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400c642	          0x488b10	                    mov rdx, qword [rax]	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400c645	        0x488b45f8	                mov rax, qword [rbp - 8]	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400c649	          0x4889d6	                            mov rsi, rdx	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400c64c	          0x4889c7	                            mov rdi, rax	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400c64f	      0xe800000000	                          call 0x400c654	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400c654	            0x85c0	                           test eax, eax	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400c656	            0x7538	                           jne 0x400c690	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400c658	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x400c65c	          0x4889c7	                            mov rdi, rax	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x400c65f	      0xe800000000	                          call 0x400c664	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x400c664	          0x4889c2	                            mov rdx, rax	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x400c667	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x400c66b	          0x488910	                    mov qword [rax], rdx	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x400c66e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400c671	            0x4898	                                    cdqe	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400c673	        0x48c1e004	                              shl rax, 4	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400c677	    0x480500000000	                              add rax, 0	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400c67d	          0x488b00	                    mov rax, qword [rax]	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400c680	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400c684	      0xbe00000000	                              mov esi, 0	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400c689	          0x4889d7	                            mov rdi, rdx	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400c68c	            0xffd0	                                call rax	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400c68e	            0xeb09	                           jmp 0x400c699	      6387	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400c690	        0x8345e401	               add dword [rbp - 0x1c], 1	      6376	syntax.c	FUNCTION_95	IF_1	FOR_2
0x400c694	      0xe965ffffff	                           jmp 0x400c5fe	      6389	syntax.c	FUNCTION_95	IF_1	FOR_2
0x400c699	        0x488b45f8	                mov rax, qword [rbp - 8]	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0x400c69d	          0x4889c7	                            mov rdi, rax	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0x400c6a0	      0xe800000000	                          call 0x400c6a5	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0x400c6a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x400c6a9	          0x8b4030	            mov eax, dword [rax + 0x30] 	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x400c6ac	            0x85c0	                           test eax, eax	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x400c6ae	            0x740f	                            je 0x400c6bf	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x400c6b0	    0x8b0500000000	            mov eax, dword [0x0400c6b6] 	      6392	syntax.c	FUNCTION_95	IF_1	IF_5
0x400c6b6	          0x83e801	                              sub eax, 1	      6392	syntax.c	FUNCTION_95	IF_1	IF_5
0x400c6b9	    0x890500000000	            mov dword [0x0400c6bf], eax 	      6392	syntax.c	FUNCTION_95	IF_1	IF_5
0x400c6bf	              0x90	                                     nop	      6394	syntax.c	FUNCTION_95
0x400c6c0	              0xc9	                                   leave	      6394	syntax.c	FUNCTION_95
0x400c6c1	              0xc3	                                     ret	      6394	syntax.c	FUNCTION_95
syntax_check_changed	functions,0:IF,3:SWITCH,0:FOR,0:CALL,4:ELSE,0:WHILE,0:DO,0	37
0x400272c	              0x55	                                push rbp	      1751	syntax.c	FUNCTION_25
0x400272d	          0x4889e5	                            mov rbp, rsp	      1751	syntax.c	FUNCTION_25
0x4002730	        0x4883ec20	                           sub rsp, 0x20	      1751	syntax.c	FUNCTION_25
0x4002734	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1751	syntax.c	FUNCTION_25
0x4002738	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      1752	syntax.c	FUNCTION_25
0x400273f	    0x8b0500000000	            mov eax, dword [0x04002745] 	      1762	syntax.c	FUNCTION_25	IF_1
0x4002745	            0x85c0	                           test eax, eax	      1762	syntax.c	FUNCTION_25	IF_1
0x4002747	            0x746e	                            je 0x40027b7	      1762	syntax.c	FUNCTION_25	IF_1
0x4002749	    0x488b05000000	            mov rax, qword [0x04002750] 	      1762	syntax.c	FUNCTION_25	IF_1
0x4002750	        0x4883c001	                              add rax, 1	      1762	syntax.c	FUNCTION_25	IF_1
0x4002754	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1762	syntax.c	FUNCTION_25	IF_1
0x4002758	            0x755d	                           jne 0x40027b7	      1762	syntax.c	FUNCTION_25	IF_1
0x400275a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1764	syntax.c	FUNCTION_25	IF_1	CALL_1
0x400275e	          0x4889c7	                            mov rdi, rax	      1764	syntax.c	FUNCTION_25	IF_1	CALL_1
0x4002761	      0xe882f3ffff	           call sym.syn_stack_find_entry	      1764	syntax.c	FUNCTION_25	IF_1	CALL_1
0x4002766	        0x488945f8	                mov qword [rbp - 8], rax	      1764	syntax.c	FUNCTION_25	IF_1	CALL_1
0x400276a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x400276f	            0x7446	                            je 0x40027b7	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x4002771	        0x488b45f8	                mov rax, qword [rbp - 8]	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x4002775	        0x488b4008	                mov rax, qword [rax + 8]	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x4002779	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x400277d	            0x7538	                           jne 0x40027b7	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x400277f	      0xbf00000000	                              mov edi, 0	      1771	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x4002784	      0xe833000000	                call sym.syn_finish_line	      1771	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x4002789	        0x488b45f8	                mov rax, qword [rbp - 8]	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_3
0x400278d	          0x4889c7	                            mov rdi, rax	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_3
0x4002790	      0xe82afcffff	                call sym.syn_stack_equal	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_3
0x4002795	            0x85c0	                           test eax, eax	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_3
0x4002797	            0x7407	                            je 0x40027a0	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_3
0x4002799	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1778	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3
0x40027a0	    0x488b05000000	            mov rax, qword [0x040027a7] 	      1783	syntax.c	FUNCTION_25	IF_1	IF_2
0x40027a7	        0x4883c001	                              add rax, 1	      1783	syntax.c	FUNCTION_25	IF_1	IF_2
0x40027ab	    0x488905000000	            mov qword [0x040027b2], rax 	      1783	syntax.c	FUNCTION_25	IF_1	IF_2
0x40027b2	      0xe89af3ffff	            call sym.store_current_state	      1784	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_4
0x40027b7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1788	syntax.c	FUNCTION_25
0x40027ba	              0xc9	                                   leave	      1789	syntax.c	FUNCTION_25
0x40027bb	              0xc3	                                     ret	      1789	syntax.c	FUNCTION_25
highlight_list	functions,0:IF,0:SWITCH,0:FOR,2:CALL,3:ELSE,0:WHILE,0:DO,0	24
0x4014822	              0x55	                                push rbp	     10278	syntax.c	FUNCTION_165
0x4014823	          0x4889e5	                            mov rbp, rsp	     10278	syntax.c	FUNCTION_165
0x4014826	        0x4883ec10	                           sub rsp, 0x10	     10278	syntax.c	FUNCTION_165
0x401482a	    0xc745fc0a0000	                mov dword [rbp - 4], 0xa	     10281	syntax.c	FUNCTION_165	FOR_1
0x4014831	            0xeb12	                           jmp 0x4014845	     10281	syntax.c	FUNCTION_165	FOR_1
0x4014833	    0x8b1500000000	            mov edx, dword [0x04014839] 	     10282	syntax.c	FUNCTION_165	CALL_2
0x4014839	          0x8b45fc	                mov eax, dword [rbp - 4]	     10282	syntax.c	FUNCTION_165	CALL_2
0x401483c	            0x89d6	                            mov esi, edx	     10282	syntax.c	FUNCTION_165	CALL_2
0x401483e	            0x89c7	                            mov edi, eax	     10282	syntax.c	FUNCTION_165	CALL_2
0x4014840	      0xe82f000000	             call sym.highlight_list_two	     10282	syntax.c	FUNCTION_165	CALL_2
0x4014845	        0x836dfc01	                  sub dword [rbp - 4], 1	     10281	syntax.c	FUNCTION_165	FOR_1
0x4014849	        0x837dfc00	                  cmp dword [rbp - 4], 0	     10281	syntax.c	FUNCTION_165	FOR_1
0x401484d	            0x79e4	                           jns 0x4014833	     10281	syntax.c	FUNCTION_165	FOR_1
0x401484f	    0xc745fc280000	               mov dword [rbp - 4], 0x28	     10283	syntax.c	FUNCTION_165	FOR_2
0x4014856	            0xeb0f	                           jmp 0x4014867	     10283	syntax.c	FUNCTION_165	FOR_2
0x4014858	      0xbe00000000	                              mov esi, 0	     10284	syntax.c	FUNCTION_165	CALL_3
0x401485d	      0xbf63000000	                           mov edi, 0x63	     10284	syntax.c	FUNCTION_165	CALL_3
0x4014862	      0xe80d000000	             call sym.highlight_list_two	     10284	syntax.c	FUNCTION_165	CALL_3
0x4014867	        0x836dfc01	                  sub dword [rbp - 4], 1	     10283	syntax.c	FUNCTION_165	FOR_2
0x401486b	        0x837dfc00	                  cmp dword [rbp - 4], 0	     10283	syntax.c	FUNCTION_165	FOR_2
0x401486f	            0x79e7	                           jns 0x4014858	     10283	syntax.c	FUNCTION_165	FOR_2
0x4014871	              0x90	                                     nop	     10285	syntax.c	FUNCTION_165
0x4014872	              0xc9	                                   leave	     10285	syntax.c	FUNCTION_165
0x4014873	              0xc3	                                     ret	     10285	syntax.c	FUNCTION_165
syn_list_one	functions,0:IF,12:SWITCH,0:FOR,1:CALL,25:ELSE,3:WHILE,2:DO,0	346
0x40073bd	              0x55	                                push rbp	      4076	syntax.c	FUNCTION_66
0x40073be	          0x4889e5	                            mov rbp, rsp	      4076	syntax.c	FUNCTION_66
0x40073c1	        0x4883ec30	                           sub rsp, 0x30	      4076	syntax.c	FUNCTION_66
0x40073c5	          0x897ddc	             mov dword [rbp - 0x24], edi	      4076	syntax.c	FUNCTION_66
0x40073c8	          0x8975d8	             mov dword [rbp - 0x28], esi	      4076	syntax.c	FUNCTION_66
0x40073cb	          0x8955d4	             mov dword [rbp - 0x2c], edx	      4076	syntax.c	FUNCTION_66
0x40073ce	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4079	syntax.c	FUNCTION_66
0x40073d5	    0x8b0500000000	            mov eax, dword [0x040073db] 	      4105	syntax.c	FUNCTION_66	CALL_1
0x40073db	          0x8945f4	              mov dword [rbp - 0xc], eax	      4105	syntax.c	FUNCTION_66	CALL_1
0x40073de	        0x837dd800	               cmp dword [rbp - 0x28], 0	      4108	syntax.c	FUNCTION_66	IF_1
0x40073e2	            0x754a	                           jne 0x400742e	      4108	syntax.c	FUNCTION_66	IF_1
0x40073e4	    0x488b05000000	            mov rax, qword [0x040073eb] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x40073eb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x40073ef	          0x4889c6	                            mov rsi, rax	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x40073f2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x40073f5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x40073f8	            0x89d1	                            mov ecx, edx	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x40073fa	      0xba00000000	                              mov edx, 0	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x40073ff	            0x89c7	                            mov edi, eax	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x4007401	      0xe8a00a0000	              call sym.syn_list_keywords	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x4007406	          0x8945f0	             mov dword [rbp - 0x10], eax	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x4007409	    0x488b05000000	            mov rax, qword [0x04007410] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4007410	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4007414	    0x488db0280100	                  lea rsi, [rax + 0x128]	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400741b	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400741e	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4007421	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4007424	            0x89c7	                            mov edi, eax	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4007426	      0xe87b0a0000	              call sym.syn_list_keywords	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400742b	          0x8945f0	             mov dword [rbp - 0x10], eax	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400742e	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      4116	syntax.c	FUNCTION_66	FOR_1
0x4007435	      0xe9b7030000	                           jmp 0x40077f1	      4116	syntax.c	FUNCTION_66	FOR_1
0x400743a	    0x488b05000000	            mov rax, qword [0x04007441] 	      4118	syntax.c	FUNCTION_66	FOR_1
0x4007441	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4118	syntax.c	FUNCTION_66	FOR_1
0x4007445	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4118	syntax.c	FUNCTION_66	FOR_1
0x400744c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4118	syntax.c	FUNCTION_66	FOR_1
0x400744f	          0x4863d0	                         movsxd rdx, eax	      4118	syntax.c	FUNCTION_66	FOR_1
0x4007452	          0x4889d0	                            mov rax, rdx	      4118	syntax.c	FUNCTION_66	FOR_1
0x4007455	        0x48c1e002	                              shl rax, 2	      4118	syntax.c	FUNCTION_66	FOR_1
0x4007459	          0x4801d0	                            add rax, rdx	      4118	syntax.c	FUNCTION_66	FOR_1
0x400745c	        0x48c1e005	                              shl rax, 5	      4118	syntax.c	FUNCTION_66	FOR_1
0x4007460	          0x4801c8	                            add rax, rcx	      4118	syntax.c	FUNCTION_66	FOR_1
0x4007463	        0x488945f8	                mov qword [rbp - 8], rax	      4118	syntax.c	FUNCTION_66	FOR_1
0x4007467	        0x488b45f8	                mov rax, qword [rbp - 8]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400746b	         0xfb74054	           movzx eax, word [rax + 0x54] 	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400746f	              0x98	                                    cwde	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4007470	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4007473	     0xf8573030000	                           jne 0x40077ec	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4007479	        0x488b45f8	                mov rax, qword [rbp - 8]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400747d	         0xfb64001	               movzx eax, byte [rax + 1]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4007481	           0xfbec0	                           movsx eax, al	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4007484	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4007487	     0xf855f030000	                           jne 0x40077ec	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400748d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x4007490	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x4007493	      0xbee7030000	                          mov esi, 0x3e7	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x4007498	            0x89c7	                            mov edi, eax	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x400749a	      0xe8e5b40000	                call sym.syn_list_header	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x400749f	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      4123	syntax.c	FUNCTION_66	FOR_1
0x40074a6	    0xc70500000000	               mov dword [0x040074b0], 0	      4124	syntax.c	FUNCTION_66	FOR_1
0x40074b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x40074b4	           0xfb600	                   movzx eax, byte [rax]	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x40074b7	            0x3c01	                               cmp al, 1	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x40074b9	            0x752a	                           jne 0x40074e5	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x40074bb	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x40074be	        0x488b45f8	                mov rax, qword [rbp - 8]	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x40074c2	            0x89d1	                            mov ecx, edx	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x40074c4	          0x4889c2	                            mov rdx, rax	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x40074c7	      0xbe20000000	                           mov esi, 0x20	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x40074cc	      0xbf00000000	                              mov edi, 0	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x40074d1	      0xe871070000	                    call sym.put_pattern	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x40074d6	      0xbf20000000	                           mov edi, 0x20	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x40074db	      0xe800000000	                          call 0x40074e0	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x40074e0	      0xe99b010000	                           jmp 0x4007680	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x40074e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x40074e9	           0xfb600	                   movzx eax, byte [rax]	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x40074ec	            0x3c02	                               cmp al, 2	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x40074ee	     0xf858c010000	                           jne 0x4007680	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x40074f4	            0xeb44	                           jmp 0x400753a	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x40074f6	    0x488b05000000	            mov rax, qword [0x040074fd] 	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x40074fd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4007501	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4007508	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400750b	          0x8d5001	                      lea edx, [rax + 1]	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400750e	          0x8955ec	             mov dword [rbp - 0x14], edx	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4007511	          0x4863d0	                         movsxd rdx, eax	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4007514	          0x4889d0	                            mov rax, rdx	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4007517	        0x48c1e002	                              shl rax, 2	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400751b	          0x4801d0	                            add rax, rdx	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400751e	        0x48c1e005	                              shl rax, 5	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4007522	        0x488d1401	                    lea rdx, [rcx + rax]	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4007526	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4007529	            0x89c1	                            mov ecx, eax	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400752b	      0xbe3d000000	                           mov esi, 0x3d	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4007530	      0xbf00000000	                              mov edi, 0	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4007535	      0xe80d070000	                    call sym.put_pattern	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400753a	    0x488b05000000	            mov rax, qword [0x04007541] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4007541	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4007545	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400754c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400754f	          0x4863d0	                         movsxd rdx, eax	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4007552	          0x4889d0	                            mov rax, rdx	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4007555	        0x48c1e002	                              shl rax, 2	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4007559	          0x4801d0	                            add rax, rdx	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400755c	        0x48c1e005	                              shl rax, 5	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4007560	          0x4801c8	                            add rax, rcx	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4007563	           0xfb600	                   movzx eax, byte [rax]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4007566	            0x3c02	                               cmp al, 2	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4007568	            0x748c	                            je 0x40074f6	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400756a	    0x488b05000000	            mov rax, qword [0x04007571] 	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x4007571	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x4007575	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x400757c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x400757f	          0x4863d0	                         movsxd rdx, eax	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x4007582	          0x4889d0	                            mov rax, rdx	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x4007585	        0x48c1e002	                              shl rax, 2	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x4007589	          0x4801d0	                            add rax, rdx	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x400758c	        0x48c1e005	                              shl rax, 5	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x4007590	          0x4801c8	                            add rax, rcx	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x4007593	           0xfb600	                   movzx eax, byte [rax]	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x4007596	            0x3c04	                               cmp al, 4	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x4007598	     0xf858a000000	                           jne 0x4007628	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x400759e	    0x488b05000000	            mov rax, qword [0x040075a5] 	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075a5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075a9	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075b0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075b3	          0x8d5001	                      lea edx, [rax + 1]	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075b6	          0x8955ec	             mov dword [rbp - 0x14], edx	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075b9	          0x4863d0	                         movsxd rdx, eax	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075bc	          0x4889d0	                            mov rax, rdx	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075bf	        0x48c1e002	                              shl rax, 2	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075c3	          0x4801d0	                            add rax, rdx	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075c6	        0x48c1e005	                              shl rax, 5	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075ca	        0x488d1401	                    lea rdx, [rcx + rax]	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075ce	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075d1	            0x89c1	                            mov ecx, eax	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075d3	      0xbe3d000000	                           mov esi, 0x3d	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075d8	      0xbf00000000	                              mov edi, 0	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075dd	      0xe865060000	                    call sym.put_pattern	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x40075e2	            0xeb44	                           jmp 0x4007628	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x40075e4	    0x488b05000000	            mov rax, qword [0x040075eb] 	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x40075eb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x40075ef	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x40075f6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x40075f9	          0x8d5001	                      lea edx, [rax + 1]	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x40075fc	          0x8955ec	             mov dword [rbp - 0x14], edx	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x40075ff	          0x4863d0	                         movsxd rdx, eax	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4007602	          0x4889d0	                            mov rax, rdx	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4007605	        0x48c1e002	                              shl rax, 2	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4007609	          0x4801d0	                            add rax, rdx	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x400760c	        0x48c1e005	                              shl rax, 5	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4007610	        0x488d1401	                    lea rdx, [rcx + rax]	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4007614	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4007617	            0x89c1	                            mov ecx, eax	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4007619	      0xbe3d000000	                           mov esi, 0x3d	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x400761e	      0xbf00000000	                              mov edi, 0	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4007623	      0xe81f060000	                    call sym.put_pattern	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4007628	    0x488b05000000	            mov rax, qword [0x0400762f] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400762f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007633	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007639	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400763c	            0x7e34	                           jle 0x4007672	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400763e	    0x488b05000000	            mov rax, qword [0x04007645] 	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007645	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007649	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007650	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007653	          0x4863d0	                         movsxd rdx, eax	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007656	          0x4889d0	                            mov rax, rdx	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007659	        0x48c1e002	                              shl rax, 2	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400765d	          0x4801d0	                            add rax, rdx	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007660	        0x48c1e005	                              shl rax, 5	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007664	          0x4801c8	                            add rax, rcx	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007667	           0xfb600	                   movzx eax, byte [rax]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400766a	            0x3c03	                               cmp al, 3	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400766c	     0xf8472ffffff	                            je 0x40075e4	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4007672	        0x836dec01	               sub dword [rbp - 0x14], 1	      4139	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x4007676	      0xbf20000000	                           mov edi, 0x20	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x400767b	      0xe800000000	                          call 0x4007680	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x4007680	        0x488b45f8	                mov rax, qword [rbp - 8]	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_11
0x4007684	          0x8b4024	            mov eax, dword [rax + 0x24] 	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_11
0x4007687	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_11
0x400768a	            0x89c6	                            mov esi, eax	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_11
0x400768c	      0xbf00000000	                              mov edi, 0	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_11
0x4007691	      0xe865020000	                 call sym.syn_list_flags	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_11
0x4007696	        0x488b45f8	                mov rax, qword [rbp - 8]	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x400769a	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x400769e	          0x4885c0	                           test rax, rax	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x40076a1	            0x7418	                            je 0x40076bb	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x40076a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x40076a7	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x40076ab	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x40076ae	          0x4889c6	                            mov rsi, rax	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x40076b1	      0xbf00000000	                              mov edi, 0	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x40076b6	      0xe8e7030000	                    call sym.put_id_list	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x40076bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x40076bf	        0x488b4058	            mov rax, qword [rax + 0x58] 	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x40076c3	          0x4885c0	                           test rax, rax	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x40076c6	            0x7418	                            je 0x40076e0	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x40076c8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x40076cc	        0x488b4058	            mov rax, qword [rax + 0x58] 	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x40076d0	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x40076d3	          0x4889c6	                            mov rsi, rax	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x40076d6	      0xbf00000000	                              mov edi, 0	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x40076db	      0xe8c2030000	                    call sym.put_id_list	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x40076e0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x40076e4	        0x488b4048	            mov rax, qword [rax + 0x48] 	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x40076e8	          0x4885c0	                           test rax, rax	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x40076eb	            0x742e	                            je 0x400771b	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x40076ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x40076f1	        0x488b4048	            mov rax, qword [rax + 0x48] 	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x40076f5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x40076f8	          0x4889c6	                            mov rsi, rax	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x40076fb	      0xbf00000000	                              mov edi, 0	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x4007700	      0xe89d030000	                    call sym.put_id_list	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x4007705	        0x488b45f8	                mov rax, qword [rbp - 8]	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_15
0x4007709	          0x8b4024	            mov eax, dword [rax + 0x24] 	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_15
0x400770c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_15
0x400770f	            0x89c6	                            mov esi, eax	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_15
0x4007711	      0xbf00000000	                              mov edi, 0	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_15
0x4007716	      0xe8e0010000	                 call sym.syn_list_flags	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_15
0x400771b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x400771f	          0x8b4024	            mov eax, dword [rax + 0x24] 	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x4007722	          0x83e030	                           and eax, 0x30	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x4007725	            0x85c0	                           test eax, eax	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x4007727	     0xf84c0000000	                            je 0x40077ed	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x400772d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x4007731	          0x8b4024	            mov eax, dword [rax + 0x24] 	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x4007734	          0x83e010	                           and eax, 0x10	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x4007737	            0x85c0	                           test eax, eax	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x4007739	            0x7411	                            je 0x400774c	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x400773b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_16
0x400773e	            0x89c6	                            mov esi, eax	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_16
0x4007740	      0xbf00000000	                              mov edi, 0	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_16
0x4007745	      0xe800000000	                          call 0x400774a	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_16
0x400774a	            0xeb0f	                           jmp 0x400775b	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_16
0x400774c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_17
0x400774f	            0x89c6	                            mov esi, eax	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_17
0x4007751	      0xbf00000000	                              mov edi, 0	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_17
0x4007756	      0xe800000000	                          call 0x400775b	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_17
0x400775b	      0xbf20000000	                           mov edi, 0x20	      4162	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_18
0x4007760	      0xe800000000	                          call 0x4007765	      4162	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_18
0x4007765	        0x488b45f8	                mov rax, qword [rbp - 8]	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x4007769	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400776c	            0x85c0	                           test eax, eax	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400776e	            0x7866	                            js 0x40077d6	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x4007770	    0x488b0d000000	            mov rcx, qword [0x04007777] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4007777	    0x488b05000000	            mov rax, qword [0x0400777e] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x400777e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4007782	    0x488bb0700200	           mov rsi, qword [rax + 0x270] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4007789	        0x488b45f8	                mov rax, qword [rbp - 8]	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400778d	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x4007790	          0x4863d0	                         movsxd rdx, eax	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x4007793	          0x4889d0	                            mov rax, rdx	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x4007796	        0x48c1e002	                              shl rax, 2	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400779a	          0x4801d0	                            add rax, rdx	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400779d	        0x48c1e005	                              shl rax, 5	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x40077a1	          0x4801f0	                            add rax, rsi	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x40077a4	         0xfb74054	           movzx eax, word [rax + 0x54] 	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x40077a8	        0x480fbfd0	                           movsx rdx, ax	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077ac	          0x4889d0	                            mov rax, rdx	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077af	        0x48c1e003	                              shl rax, 3	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077b3	          0x4801d0	                            add rax, rdx	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077b6	          0x4801c0	                            add rax, rax	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077b9	          0x4801d0	                            add rax, rdx	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077bc	        0x48c1e003	                              shl rax, 3	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077c0	    0x482d98000000	                           sub rax, 0x98	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077c6	          0x4801c8	                            add rax, rcx	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077c9	          0x488b00	                    mov rax, qword [rax]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077cc	          0x4889c7	                            mov rdi, rax	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077cf	      0xe800000000	                          call 0x40077d4	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077d4	            0xeb0a	                           jmp 0x40077e0	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x40077d6	      0xbf00000000	                              mov edi, 0	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_20
0x40077db	      0xe800000000	                          call 0x40077e0	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_20
0x40077e0	      0xbf20000000	                           mov edi, 0x20	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_21
0x40077e5	      0xe800000000	                          call 0x40077ea	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_21
0x40077ea	            0xeb01	                           jmp 0x40077ed	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_21
0x40077ec	              0x90	                                     nop	      4120	syntax.c	FUNCTION_66	FOR_1	IF_2
0x40077ed	        0x8345ec01	               add dword [rbp - 0x14], 1	      4116	syntax.c	FUNCTION_66	FOR_1
0x40077f1	    0x488b05000000	            mov rax, qword [0x040077f8] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x40077f8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x40077fc	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x4007802	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      4116	syntax.c	FUNCTION_66	FOR_1
0x4007805	            0x7e0e	                           jle 0x4007815	      4116	syntax.c	FUNCTION_66	FOR_1
0x4007807	    0x8b0500000000	            mov eax, dword [0x0400780d] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400780d	            0x85c0	                           test eax, eax	      4116	syntax.c	FUNCTION_66	FOR_1
0x400780f	     0xf8425fcffff	                            je 0x400743a	      4116	syntax.c	FUNCTION_66	FOR_1
0x4007815	    0x488b0d000000	            mov rcx, qword [0x0400781c] 	      4173	syntax.c	FUNCTION_66	IF_12
0x400781c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4173	syntax.c	FUNCTION_66	IF_12
0x400781f	          0x4863d0	                         movsxd rdx, eax	      4173	syntax.c	FUNCTION_66	IF_12
0x4007822	          0x4889d0	                            mov rax, rdx	      4173	syntax.c	FUNCTION_66	IF_12
0x4007825	        0x48c1e003	                              shl rax, 3	      4173	syntax.c	FUNCTION_66	IF_12
0x4007829	          0x4801d0	                            add rax, rdx	      4173	syntax.c	FUNCTION_66	IF_12
0x400782c	          0x4801c0	                            add rax, rax	      4173	syntax.c	FUNCTION_66	IF_12
0x400782f	          0x4801d0	                            add rax, rdx	      4173	syntax.c	FUNCTION_66	IF_12
0x4007832	        0x48c1e003	                              shl rax, 3	      4173	syntax.c	FUNCTION_66	IF_12
0x4007836	    0x482d98000000	                           sub rax, 0x98	      4173	syntax.c	FUNCTION_66	IF_12
0x400783c	          0x4801c8	                            add rax, rcx	      4173	syntax.c	FUNCTION_66	IF_12
0x400783f	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4173	syntax.c	FUNCTION_66	IF_12
0x4007845	            0x85c0	                           test eax, eax	      4173	syntax.c	FUNCTION_66	IF_12
0x4007847	     0xf84ab000000	                            je 0x40078f8	      4173	syntax.c	FUNCTION_66	IF_12
0x400784d	        0x837df000	               cmp dword [rbp - 0x10], 0	      4173	syntax.c	FUNCTION_66	IF_12
0x4007851	            0x750a	                           jne 0x400785d	      4173	syntax.c	FUNCTION_66	IF_12
0x4007853	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4173	syntax.c	FUNCTION_66	IF_12
0x4007857	     0xf849b000000	                            je 0x40078f8	      4173	syntax.c	FUNCTION_66	IF_12
0x400785d	    0x8b0500000000	            mov eax, dword [0x04007863] 	      4173	syntax.c	FUNCTION_66	IF_12
0x4007863	            0x85c0	                           test eax, eax	      4173	syntax.c	FUNCTION_66	IF_12
0x4007865	     0xf858d000000	                           jne 0x40078f8	      4173	syntax.c	FUNCTION_66	IF_12
0x400786b	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4175	syntax.c	FUNCTION_66	IF_12	CALL_22
0x400786e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4175	syntax.c	FUNCTION_66	IF_12	CALL_22
0x4007871	      0xbee7030000	                          mov esi, 0x3e7	      4175	syntax.c	FUNCTION_66	IF_12	CALL_22
0x4007876	            0x89c7	                            mov edi, eax	      4175	syntax.c	FUNCTION_66	IF_12	CALL_22
0x4007878	      0xe807b10000	                call sym.syn_list_header	      4175	syntax.c	FUNCTION_66	IF_12	CALL_22
0x400787d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4176	syntax.c	FUNCTION_66	IF_12	CALL_23
0x4007880	            0x89c6	                            mov esi, eax	      4176	syntax.c	FUNCTION_66	IF_12	CALL_23
0x4007882	      0xbf00000000	                              mov edi, 0	      4176	syntax.c	FUNCTION_66	IF_12	CALL_23
0x4007887	      0xe800000000	                          call 0x400788c	      4176	syntax.c	FUNCTION_66	IF_12	CALL_23
0x400788c	      0xbf20000000	                           mov edi, 0x20	      4177	syntax.c	FUNCTION_66	IF_12	CALL_24
0x4007891	      0xe800000000	                          call 0x4007896	      4177	syntax.c	FUNCTION_66	IF_12	CALL_24
0x4007896	    0x488b0d000000	            mov rcx, qword [0x0400789d] 	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x400789d	    0x488b35000000	            mov rsi, qword [0x040078a4] 	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078a4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078a7	          0x4863d0	                         movsxd rdx, eax	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078aa	          0x4889d0	                            mov rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078ad	        0x48c1e003	                              shl rax, 3	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078b1	          0x4801d0	                            add rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078b4	          0x4801c0	                            add rax, rax	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078b7	          0x4801d0	                            add rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078ba	        0x48c1e003	                              shl rax, 3	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078be	    0x482d98000000	                           sub rax, 0x98	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078c4	          0x4801f0	                            add rax, rsi	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078c7	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078cd	          0x4863d0	                         movsxd rdx, eax	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078d0	          0x4889d0	                            mov rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078d3	        0x48c1e003	                              shl rax, 3	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078d7	          0x4801d0	                            add rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078da	          0x4801c0	                            add rax, rax	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078dd	          0x4801d0	                            add rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078e0	        0x48c1e003	                              shl rax, 3	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078e4	    0x482d98000000	                           sub rax, 0x98	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078ea	          0x4801c8	                            add rax, rcx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078ed	          0x488b00	                    mov rax, qword [rax]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078f0	          0x4889c7	                            mov rdi, rax	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078f3	      0xe800000000	                          call 0x40078f8	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x40078f8	              0x90	                                     nop	      4180	syntax.c	FUNCTION_66
0x40078f9	              0xc9	                                   leave	      4180	syntax.c	FUNCTION_66
0x40078fa	              0xc3	                                     ret	      4180	syntax.c	FUNCTION_66
syntax_present	functions,0:IF,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	28
0x400c880	              0x55	                                push rbp	      6444	syntax.c	FUNCTION_97
0x400c881	          0x4889e5	                            mov rbp, rsp	      6444	syntax.c	FUNCTION_97
0x400c884	        0x48897df8	                mov qword [rbp - 8], rdi	      6444	syntax.c	FUNCTION_97
0x400c888	        0x488b45f8	                mov rax, qword [rbp - 8]	      6445	syntax.c	FUNCTION_97
0x400c88c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6445	syntax.c	FUNCTION_97
0x400c890	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      6445	syntax.c	FUNCTION_97
0x400c896	            0x85c0	                           test eax, eax	      6448	syntax.c	FUNCTION_97
0x400c898	            0x7537	                           jne 0x400c8d1	      6448	syntax.c	FUNCTION_97
0x400c89a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6446	syntax.c	FUNCTION_97
0x400c89e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6446	syntax.c	FUNCTION_97
0x400c8a2	    0x8b8078020000	           mov eax, dword [rax + 0x278] 	      6446	syntax.c	FUNCTION_97
0x400c8a8	            0x85c0	                           test eax, eax	      6446	syntax.c	FUNCTION_97
0x400c8aa	            0x7525	                           jne 0x400c8d1	      6446	syntax.c	FUNCTION_97
0x400c8ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      6447	syntax.c	FUNCTION_97
0x400c8b0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6447	syntax.c	FUNCTION_97
0x400c8b4	        0x488b4008	                mov rax, qword [rax + 8]	      6447	syntax.c	FUNCTION_97
0x400c8b8	          0x4885c0	                           test rax, rax	      6447	syntax.c	FUNCTION_97
0x400c8bb	            0x7514	                           jne 0x400c8d1	      6447	syntax.c	FUNCTION_97
0x400c8bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      6448	syntax.c	FUNCTION_97
0x400c8c1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6448	syntax.c	FUNCTION_97
0x400c8c5	    0x488b80300100	           mov rax, qword [rax + 0x130] 	      6448	syntax.c	FUNCTION_97
0x400c8cc	          0x4885c0	                           test rax, rax	      6448	syntax.c	FUNCTION_97
0x400c8cf	            0x7407	                            je 0x400c8d8	      6448	syntax.c	FUNCTION_97
0x400c8d1	      0xb801000000	                              mov eax, 1	      6448	syntax.c	FUNCTION_97
0x400c8d6	            0xeb05	                           jmp 0x400c8dd	      6448	syntax.c	FUNCTION_97
0x400c8d8	      0xb800000000	                              mov eax, 0	      6448	syntax.c	FUNCTION_97
0x400c8dd	              0x5d	                                 pop rbp	      6449	syntax.c	FUNCTION_97
0x400c8de	              0xc3	                                     ret	      6449	syntax.c	FUNCTION_97
syn_combine_list	functions,0:IF,15:SWITCH,0:FOR,5:CALL,7:ELSE,1:WHILE,1:DO,0	210
0x400a638	              0x55	                                push rbp	      5411	syntax.c	FUNCTION_83
0x400a639	          0x4889e5	                            mov rbp, rsp	      5411	syntax.c	FUNCTION_83
0x400a63c	        0x4883ec50	                           sub rsp, 0x50	      5411	syntax.c	FUNCTION_83
0x400a640	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5411	syntax.c	FUNCTION_83
0x400a644	        0x488975c0	             mov qword [rbp - 0x40], rsi	      5411	syntax.c	FUNCTION_83
0x400a648	          0x8955bc	             mov dword [rbp - 0x44], edx	      5411	syntax.c	FUNCTION_83
0x400a64b	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      5412	syntax.c	FUNCTION_83
0x400a652	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      5413	syntax.c	FUNCTION_83
0x400a659	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5416	syntax.c	FUNCTION_83
0x400a661	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5423	syntax.c	FUNCTION_83	IF_1
0x400a665	          0x488b00	                    mov rax, qword [rax]	      5423	syntax.c	FUNCTION_83	IF_1
0x400a668	          0x4885c0	                           test rax, rax	      5423	syntax.c	FUNCTION_83	IF_1
0x400a66b	     0xf84a2020000	                            je 0x400a913	      5423	syntax.c	FUNCTION_83	IF_1
0x400a671	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5425	syntax.c	FUNCTION_83	IF_2
0x400a675	          0x488b00	                    mov rax, qword [rax]	      5425	syntax.c	FUNCTION_83	IF_2
0x400a678	          0x4885c0	                           test rax, rax	      5425	syntax.c	FUNCTION_83	IF_2
0x400a67b	            0x7406	                            je 0x400a683	      5425	syntax.c	FUNCTION_83	IF_2
0x400a67d	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      5425	syntax.c	FUNCTION_83	IF_2
0x400a681	            0x7548	                           jne 0x400a6cb	      5425	syntax.c	FUNCTION_83	IF_2
0x400a683	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0x400a687	            0x750f	                           jne 0x400a698	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0x400a689	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x400a68d	          0x488b00	                    mov rax, qword [rax]	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x400a690	          0x4889c7	                            mov rdi, rax	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x400a693	      0xe800000000	                          call 0x400a698	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x400a698	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x400a69c	            0x7406	                            je 0x400a6a4	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x400a69e	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x400a6a2	            0x7513	                           jne 0x400a6b7	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x400a6a4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0x400a6a8	          0x488b10	                    mov rdx, qword [rax]	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0x400a6ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0x400a6af	          0x488910	                    mov qword [rax], rdx	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0x400a6b2	      0xe95d020000	                           jmp 0x400a914	      5433	syntax.c	FUNCTION_83	IF_2
0x400a6b7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0x400a6bb	          0x488b00	                    mov rax, qword [rax]	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0x400a6be	          0x4889c7	                            mov rdi, rax	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0x400a6c1	      0xe800000000	                          call 0x400a6c6	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0x400a6c6	      0xe949020000	                           jmp 0x400a914	      5433	syntax.c	FUNCTION_83	IF_2
0x400a6cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5436	syntax.c	FUNCTION_83	FOR_1
0x400a6cf	          0x488b00	                    mov rax, qword [rax]	      5436	syntax.c	FUNCTION_83	FOR_1
0x400a6d2	        0x488945e8	             mov qword [rbp - 0x18], rax	      5436	syntax.c	FUNCTION_83	FOR_1
0x400a6d6	            0xeb09	                           jmp 0x400a6e1	      5436	syntax.c	FUNCTION_83	FOR_1
0x400a6d8	        0x8345d801	               add dword [rbp - 0x28], 1	      5437	syntax.c	FUNCTION_83	FOR_1
0x400a6dc	      0x488345e802	               add qword [rbp - 0x18], 2	      5436	syntax.c	FUNCTION_83	FOR_1
0x400a6e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5436	syntax.c	FUNCTION_83	FOR_1
0x400a6e5	           0xfb700	                   movzx eax, word [rax]	      5436	syntax.c	FUNCTION_83	FOR_1
0x400a6e8	          0x6685c0	                             test ax, ax	      5436	syntax.c	FUNCTION_83	FOR_1
0x400a6eb	            0x75eb	                           jne 0x400a6d8	      5436	syntax.c	FUNCTION_83	FOR_1
0x400a6ed	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5438	syntax.c	FUNCTION_83	FOR_2
0x400a6f1	          0x488b00	                    mov rax, qword [rax]	      5438	syntax.c	FUNCTION_83	FOR_2
0x400a6f4	        0x488945f0	             mov qword [rbp - 0x10], rax	      5438	syntax.c	FUNCTION_83	FOR_2
0x400a6f8	            0xeb09	                           jmp 0x400a703	      5438	syntax.c	FUNCTION_83	FOR_2
0x400a6fa	        0x8345dc01	               add dword [rbp - 0x24], 1	      5439	syntax.c	FUNCTION_83	FOR_2
0x400a6fe	      0x488345f002	               add qword [rbp - 0x10], 2	      5438	syntax.c	FUNCTION_83	FOR_2
0x400a703	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5438	syntax.c	FUNCTION_83	FOR_2
0x400a707	           0xfb700	                   movzx eax, word [rax]	      5438	syntax.c	FUNCTION_83	FOR_2
0x400a70a	          0x6685c0	                             test ax, ax	      5438	syntax.c	FUNCTION_83	FOR_2
0x400a70d	            0x75eb	                           jne 0x400a6fa	      5438	syntax.c	FUNCTION_83	FOR_2
0x400a70f	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      5444	syntax.c	FUNCTION_83	CALL_3
0x400a712	          0x4863f0	                         movsxd rsi, eax	      5444	syntax.c	FUNCTION_83	CALL_3
0x400a715	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5444	syntax.c	FUNCTION_83	CALL_3
0x400a719	          0x488b00	                    mov rax, qword [rax]	      5444	syntax.c	FUNCTION_83	CALL_3
0x400a71c	      0xb900000000	                              mov ecx, 0	      5444	syntax.c	FUNCTION_83	CALL_3
0x400a721	      0xba02000000	                              mov edx, 2	      5444	syntax.c	FUNCTION_83	CALL_3
0x400a726	          0x4889c7	                            mov rdi, rax	      5444	syntax.c	FUNCTION_83	CALL_3
0x400a729	      0xe800000000	                          call 0x400a72e	      5444	syntax.c	FUNCTION_83	CALL_3
0x400a72e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5445	syntax.c	FUNCTION_83	CALL_4
0x400a731	          0x4863f0	                         movsxd rsi, eax	      5445	syntax.c	FUNCTION_83	CALL_4
0x400a734	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5445	syntax.c	FUNCTION_83	CALL_4
0x400a738	          0x488b00	                    mov rax, qword [rax]	      5445	syntax.c	FUNCTION_83	CALL_4
0x400a73b	      0xb900000000	                              mov ecx, 0	      5445	syntax.c	FUNCTION_83	CALL_4
0x400a740	      0xba02000000	                              mov edx, 2	      5445	syntax.c	FUNCTION_83	CALL_4
0x400a745	          0x4889c7	                            mov rdi, rax	      5445	syntax.c	FUNCTION_83	CALL_4
0x400a748	      0xe800000000	                          call 0x400a74d	      5445	syntax.c	FUNCTION_83	CALL_4
0x400a74d	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      5453	syntax.c	FUNCTION_83	FOR_3
0x400a754	      0xe982010000	                           jmp 0x400a8db	      5453	syntax.c	FUNCTION_83	FOR_3
0x400a759	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5455	syntax.c	FUNCTION_83	FOR_3
0x400a75d	          0x488b00	                    mov rax, qword [rax]	      5455	syntax.c	FUNCTION_83	FOR_3
0x400a760	        0x488945e8	             mov qword [rbp - 0x18], rax	      5455	syntax.c	FUNCTION_83	FOR_3
0x400a764	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5456	syntax.c	FUNCTION_83	FOR_3
0x400a768	          0x488b00	                    mov rax, qword [rax]	      5456	syntax.c	FUNCTION_83	FOR_3
0x400a76b	        0x488945f0	             mov qword [rbp - 0x10], rax	      5456	syntax.c	FUNCTION_83	FOR_3
0x400a76f	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      5457	syntax.c	FUNCTION_83	FOR_3
0x400a776	      0xe985000000	                           jmp 0x400a800	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400a77b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x400a77f	           0xfb710	                   movzx edx, word [rax]	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x400a782	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x400a786	           0xfb700	                   movzx eax, word [rax]	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x400a789	          0x6639c2	                              cmp dx, ax	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x400a78c	            0x7d2b	                           jge 0x400a7b9	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x400a78e	        0x837de402	               cmp dword [rbp - 0x1c], 2	      5469	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x400a792	            0x751a	                           jne 0x400a7ae	      5469	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x400a794	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x400a797	            0x4898	                                    cdqe	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x400a799	        0x488d1400	                    lea rdx, [rax + rax]	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x400a79d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x400a7a1	          0x4801c2	                            add rdx, rax	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x400a7a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x400a7a8	           0xfb700	                   movzx eax, word [rax]	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x400a7ab	          0x668902	                      mov word [rdx], ax	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x400a7ae	        0x8345e001	               add dword [rbp - 0x20], 1	      5471	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x400a7b2	      0x488345e802	               add qword [rbp - 0x18], 2	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x400a7b7	            0xeb47	                           jmp 0x400a800	      5473	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x400a7b9	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      5479	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0x400a7bd	            0x7524	                           jne 0x400a7e3	      5479	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0x400a7bf	        0x837de402	               cmp dword [rbp - 0x1c], 2	      5481	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x400a7c3	            0x751a	                           jne 0x400a7df	      5481	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x400a7c5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x400a7c8	            0x4898	                                    cdqe	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x400a7ca	        0x488d1400	                    lea rdx, [rax + rax]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x400a7ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x400a7d2	          0x4801c2	                            add rdx, rax	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x400a7d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x400a7d9	           0xfb700	                   movzx eax, word [rax]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x400a7dc	          0x668902	                      mov word [rdx], ax	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x400a7df	        0x8345e001	               add dword [rbp - 0x20], 1	      5483	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0x400a7e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x400a7e7	           0xfb710	                   movzx edx, word [rax]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x400a7ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x400a7ee	           0xfb700	                   movzx eax, word [rax]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x400a7f1	          0x6639c2	                              cmp dx, ax	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x400a7f4	            0x7505	                           jne 0x400a7fb	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x400a7f6	      0x488345e802	               add qword [rbp - 0x18], 2	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x400a7fb	      0x488345f002	               add qword [rbp - 0x10], 2	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400a800	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400a804	           0xfb700	                   movzx eax, word [rax]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400a807	          0x6685c0	                             test ax, ax	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400a80a	            0x743b	                            je 0x400a847	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400a80c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400a810	           0xfb700	                   movzx eax, word [rax]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400a813	          0x6685c0	                             test ax, ax	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400a816	     0xf855fffffff	                           jne 0x400a77b	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400a81c	            0xeb29	                           jmp 0x400a847	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x400a81e	        0x837de402	               cmp dword [rbp - 0x1c], 2	      5496	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400a822	            0x751a	                           jne 0x400a83e	      5496	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400a824	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400a827	            0x4898	                                    cdqe	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400a829	        0x488d1400	                    lea rdx, [rax + rax]	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400a82d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400a831	          0x4801c2	                            add rdx, rax	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400a834	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400a838	           0xfb700	                   movzx eax, word [rax]	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400a83b	          0x668902	                      mov word [rdx], ax	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x400a83e	      0x488345e802	               add qword [rbp - 0x18], 2	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x400a843	        0x8345e001	               add dword [rbp - 0x20], 1	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x400a847	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x400a84b	           0xfb700	                   movzx eax, word [rax]	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x400a84e	          0x6685c0	                             test ax, ax	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x400a851	            0x75cb	                           jne 0x400a81e	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x400a853	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0x400a857	            0x7537	                           jne 0x400a890	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0x400a859	            0xeb29	                           jmp 0x400a884	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400a85b	        0x837de402	               cmp dword [rbp - 0x1c], 2	      5500	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400a85f	            0x751a	                           jne 0x400a87b	      5500	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400a861	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400a864	            0x4898	                                    cdqe	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400a866	        0x488d1400	                    lea rdx, [rax + rax]	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400a86a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400a86e	          0x4801c2	                            add rdx, rax	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400a871	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400a875	           0xfb700	                   movzx eax, word [rax]	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400a878	          0x668902	                      mov word [rdx], ax	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400a87b	      0x488345f002	               add qword [rbp - 0x10], 2	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400a880	        0x8345e001	               add dword [rbp - 0x20], 1	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400a884	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400a888	           0xfb700	                   movzx eax, word [rax]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400a88b	          0x6685c0	                             test ax, ax	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400a88e	            0x75cb	                           jne 0x400a85b	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400a890	        0x837de401	               cmp dword [rbp - 0x1c], 1	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x400a894	            0x7541	                           jne 0x400a8d7	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x400a896	        0x837de000	               cmp dword [rbp - 0x20], 0	      5509	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x400a89a	            0x750a	                           jne 0x400a8a6	      5509	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x400a89c	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5511	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x400a8a4	            0xeb42	                           jmp 0x400a8e8	      5512	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x400a8a6	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x400a8a9	          0x83c001	                              add eax, 1	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x400a8ac	            0x4898	                                    cdqe	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x400a8ae	             0x1c0	                            add eax, eax	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x400a8b0	            0x89c7	                            mov edi, eax	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x400a8b2	      0xe800000000	                          call 0x400a8b7	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x400a8b7	        0x488945f8	                mov qword [rbp - 8], rax	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x400a8bb	      0x48837df800	                  cmp qword [rbp - 8], 0	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x400a8c0	            0x7425	                            je 0x400a8e7	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x400a8c2	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x400a8c5	            0x4898	                                    cdqe	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x400a8c7	        0x488d1400	                    lea rdx, [rax + rax]	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x400a8cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x400a8cf	          0x4801d0	                            add rax, rdx	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x400a8d2	      0x66c7000000	                       mov word [rax], 0	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x400a8d7	        0x8345e401	               add dword [rbp - 0x1c], 1	      5453	syntax.c	FUNCTION_83	FOR_3
0x400a8db	        0x837de402	               cmp dword [rbp - 0x1c], 2	      5453	syntax.c	FUNCTION_83	FOR_3
0x400a8df	     0xf8e74feffff	                           jle 0x400a759	      5453	syntax.c	FUNCTION_83	FOR_3
0x400a8e5	            0xeb01	                           jmp 0x400a8e8	      5453	syntax.c	FUNCTION_83	FOR_3
0x400a8e7	              0x90	                                     nop	      5516	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x400a8e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5524	syntax.c	FUNCTION_83	CALL_6
0x400a8ec	          0x488b00	                    mov rax, qword [rax]	      5524	syntax.c	FUNCTION_83	CALL_6
0x400a8ef	          0x4889c7	                            mov rdi, rax	      5524	syntax.c	FUNCTION_83	CALL_6
0x400a8f2	      0xe800000000	                          call 0x400a8f7	      5524	syntax.c	FUNCTION_83	CALL_6
0x400a8f7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5525	syntax.c	FUNCTION_83	CALL_7
0x400a8fb	          0x488b00	                    mov rax, qword [rax]	      5525	syntax.c	FUNCTION_83	CALL_7
0x400a8fe	          0x4889c7	                            mov rdi, rax	      5525	syntax.c	FUNCTION_83	CALL_7
0x400a901	      0xe800000000	                          call 0x400a906	      5525	syntax.c	FUNCTION_83	CALL_7
0x400a906	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5526	syntax.c	FUNCTION_83
0x400a90a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5526	syntax.c	FUNCTION_83
0x400a90e	          0x488910	                    mov qword [rax], rdx	      5526	syntax.c	FUNCTION_83
0x400a911	            0xeb01	                           jmp 0x400a914	      5526	syntax.c	FUNCTION_83
0x400a913	              0x90	                                     nop	      5424	syntax.c	FUNCTION_83	IF_1
0x400a914	              0xc9	                                   leave	      5527	syntax.c	FUNCTION_83
0x400a915	              0xc3	                                     ret	      5527	syntax.c	FUNCTION_83
hl_combine_attr	functions,0:IF,32:SWITCH,0:FOR,0:CALL,14:ELSE,7:WHILE,0:DO,0	339
0x40116d3	              0x55	                                push rbp	      9018	syntax.c	FUNCTION_136
0x40116d4	          0x4889e5	                            mov rbp, rsp	      9018	syntax.c	FUNCTION_136
0x40116d7	        0x4883ec50	                           sub rsp, 0x50	      9018	syntax.c	FUNCTION_136
0x40116db	          0x897dbc	             mov dword [rbp - 0x44], edi	      9018	syntax.c	FUNCTION_136
0x40116de	          0x8975b8	             mov dword [rbp - 0x48], esi	      9018	syntax.c	FUNCTION_136
0x40116e1	    0x64488b042528	                mov rax, qword fs:[0x28]	      9018	syntax.c	FUNCTION_136
0x40116ea	        0x488945f8	                mov qword [rbp - 8], rax	      9018	syntax.c	FUNCTION_136
0x40116ee	            0x31c0	                            xor eax, eax	      9018	syntax.c	FUNCTION_136
0x40116f0	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      9019	syntax.c	FUNCTION_136
0x40116f8	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      9023	syntax.c	FUNCTION_136	IF_1
0x40116fc	            0x7508	                           jne 0x4011706	      9023	syntax.c	FUNCTION_136	IF_1
0x40116fe	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9024	syntax.c	FUNCTION_136	IF_1
0x4011701	      0xe9b0040000	                           jmp 0x4011bb6	      9024	syntax.c	FUNCTION_136	IF_1
0x4011706	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9025	syntax.c	FUNCTION_136	IF_2
0x401170d	            0x7f23	                            jg 0x4011732	      9025	syntax.c	FUNCTION_136	IF_2
0x401170f	    0x817db8ff0000	           cmp dword [rbp - 0x48], 0xff 	      9025	syntax.c	FUNCTION_136	IF_2
0x4011716	            0x7f1a	                            jg 0x4011732	      9025	syntax.c	FUNCTION_136	IF_2
0x4011718	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9026	syntax.c	FUNCTION_136	IF_2
0x401171b	          0x83e040	                           and eax, 0x40	      9026	syntax.c	FUNCTION_136	IF_2
0x401171e	            0x85c0	                           test eax, eax	      9026	syntax.c	FUNCTION_136	IF_2
0x4011720	            0x7405	                            je 0x4011727	      9026	syntax.c	FUNCTION_136	IF_2
0x4011722	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9026	syntax.c	FUNCTION_136	IF_2
0x4011725	            0xeb03	                           jmp 0x401172a	      9026	syntax.c	FUNCTION_136	IF_2
0x4011727	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9026	syntax.c	FUNCTION_136	IF_2
0x401172a	           0xb45b8	              or eax, dword [rbp - 0x48]	      9026	syntax.c	FUNCTION_136	IF_2
0x401172d	      0xe984040000	                           jmp 0x4011bb6	      9026	syntax.c	FUNCTION_136	IF_2
0x4011732	    0x8b0500000000	            mov eax, dword [0x04011738] 	      9028	syntax.c	FUNCTION_136	IF_3
0x4011738	            0x85c0	                           test eax, eax	      9028	syntax.c	FUNCTION_136	IF_3
0x401173a	     0xf8478010000	                            je 0x40118b8	      9028	syntax.c	FUNCTION_136	IF_3
0x4011740	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9030	syntax.c	FUNCTION_136	IF_3	IF_4
0x4011747	            0x7e0e	                           jle 0x4011757	      9030	syntax.c	FUNCTION_136	IF_3	IF_4
0x4011749	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9031	syntax.c	FUNCTION_136	IF_3	CALL_1
0x401174c	            0x89c7	                            mov edi, eax	      9031	syntax.c	FUNCTION_136	IF_3	CALL_1
0x401174e	      0xe800000000	                          call 0x4011753	      9031	syntax.c	FUNCTION_136	IF_3	CALL_1
0x4011753	        0x488945c0	             mov qword [rbp - 0x40], rax	      9031	syntax.c	FUNCTION_136	IF_3	CALL_1
0x4011757	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9032	syntax.c	FUNCTION_136	IF_3	IF_5
0x401175c	            0x742d	                            je 0x401178b	      9032	syntax.c	FUNCTION_136	IF_3	IF_5
0x401175e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4011762	          0x488b10	                    mov rdx, qword [rax]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4011765	        0x488955d0	             mov qword [rbp - 0x30], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4011769	        0x488b5008	                mov rdx, qword [rax + 8]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x401176d	        0x488955d8	             mov qword [rbp - 0x28], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4011771	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4011775	        0x488955e0	             mov qword [rbp - 0x20], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4011779	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x401177d	        0x488955e8	             mov qword [rbp - 0x18], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4011781	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4011785	        0x488945f0	             mov qword [rbp - 0x10], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4011789	            0xeb3e	                           jmp 0x40117c9	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x401178b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9036	syntax.c	FUNCTION_136	IF_3	ELSE_1	CALL_2
0x401178f	      0xba28000000	                           mov edx, 0x28	      9036	syntax.c	FUNCTION_136	IF_3	ELSE_1	CALL_2
0x4011794	      0xbe00000000	                              mov esi, 0	      9036	syntax.c	FUNCTION_136	IF_3	ELSE_1	CALL_2
0x4011799	          0x4889c7	                            mov rdi, rax	      9036	syntax.c	FUNCTION_136	IF_3	ELSE_1	CALL_2
0x401179c	      0xe800000000	                          call 0x40117a1	      9036	syntax.c	FUNCTION_136	IF_3	ELSE_1	CALL_2
0x40117a1	    0x48c745d899d4	mov qword [rbp - 0x28], 0xffffffffffffd499	      9037	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x40117a9	    0x48c745e099d4	mov qword [rbp - 0x20], 0xffffffffffffd499	      9038	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x40117b1	    0x48c745e899d4	mov qword [rbp - 0x18], 0xffffffffffffd499	      9039	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x40117b9	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9040	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x40117c0	            0x7f07	                            jg 0x40117c9	      9040	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x40117c2	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9041	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x40117c5	        0x668945d0	               mov word [rbp - 0x30], ax	      9041	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x40117c9	    0x817db8ff0000	           cmp dword [rbp - 0x48], 0xff 	      9044	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117d0	            0x7f21	                            jg 0x40117f3	      9044	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117d2	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117d5	          0x83e040	                           and eax, 0x40	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117d8	            0x85c0	                           test eax, eax	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117da	            0x7506	                           jne 0x40117e2	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117dc	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117e0	            0xeb03	                           jmp 0x40117e5	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117e2	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117e5	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117e8	             0x9d0	                             or eax, edx	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117ea	        0x668945d0	               mov word [rbp - 0x30], ax	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117ee	      0xe9af000000	                           jmp 0x40118a2	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40117f3	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9048	syntax.c	FUNCTION_136	IF_3	ELSE_2	CALL_3
0x40117f6	            0x89c7	                            mov edi, eax	      9048	syntax.c	FUNCTION_136	IF_3	ELSE_2	CALL_3
0x40117f8	      0xe800000000	                          call 0x40117fd	      9048	syntax.c	FUNCTION_136	IF_3	ELSE_2	CALL_3
0x40117fd	        0x488945c8	             mov qword [rbp - 0x38], rax	      9048	syntax.c	FUNCTION_136	IF_3	ELSE_2	CALL_3
0x4011801	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      9049	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4011806	     0xf8496000000	                            je 0x40118a2	      9049	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x401180c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4011810	           0xfb700	                   movzx eax, word [rax]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4011813	              0x98	                                    cwde	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4011814	          0x83e040	                           and eax, 0x40	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4011817	            0x85c0	                           test eax, eax	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4011819	            0x7409	                            je 0x4011824	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x401181b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x401181f	           0xfb700	                   movzx eax, word [rax]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4011822	            0xeb04	                           jmp 0x4011828	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4011824	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4011828	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x401182c	           0xfb712	                   movzx edx, word [rdx]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x401182f	             0x9d0	                             or eax, edx	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4011831	        0x668945d0	               mov word [rbp - 0x30], ax	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x4011835	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x4011839	        0x488b4008	                mov rax, qword [rax + 8]	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x401183d	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x4011843	            0x740c	                            je 0x4011851	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x4011845	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9054	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x4011849	        0x488b4008	                mov rax, qword [rax + 8]	      9054	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x401184d	        0x488945d8	             mov qword [rbp - 0x28], rax	      9054	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x4011851	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x4011855	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x4011859	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x401185f	            0x740c	                            je 0x401186d	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x4011861	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9056	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x4011865	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9056	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x4011869	        0x488945e0	             mov qword [rbp - 0x20], rax	      9056	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x401186d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x4011871	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x4011875	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x401187b	            0x740c	                            je 0x4011889	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x401187d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9058	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x4011881	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9058	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x4011885	        0x488945e8	             mov qword [rbp - 0x18], rax	      9058	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x4011889	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x401188d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x4011891	          0x4885c0	                           test rax, rax	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x4011894	            0x740c	                            je 0x40118a2	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x4011896	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x401189a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x401189e	        0x488945f0	             mov qword [rbp - 0x10], rax	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x40118a2	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9067	syntax.c	FUNCTION_136	IF_3	CALL_4
0x40118a6	          0x4889c6	                            mov rsi, rax	      9067	syntax.c	FUNCTION_136	IF_3	CALL_4
0x40118a9	      0xbf00000000	                              mov edi, 0	      9067	syntax.c	FUNCTION_136	IF_3	CALL_4
0x40118ae	      0xe805f8ffff	                 call sym.get_attr_entry	      9067	syntax.c	FUNCTION_136	IF_3	CALL_4
0x40118b3	      0xe9fe020000	                           jmp 0x4011bb6	      9067	syntax.c	FUNCTION_136	IF_3	CALL_4
0x40118b8	    0x8b0500000000	            mov eax, dword [0x040118be] 	      9071	syntax.c	FUNCTION_136	IF_14
0x40118be	          0x83f801	                              cmp eax, 1	      9071	syntax.c	FUNCTION_136	IF_14
0x40118c1	            0x7f0e	                            jg 0x40118d1	      9071	syntax.c	FUNCTION_136	IF_14
0x40118c3	    0x8b0500000000	            mov eax, dword [0x040118c9] 	      9071	syntax.c	FUNCTION_136	IF_14
0x40118c9	            0x85c0	                           test eax, eax	      9071	syntax.c	FUNCTION_136	IF_14
0x40118cb	     0xf84d9010000	                            je 0x4011aaa	      9071	syntax.c	FUNCTION_136	IF_14
0x40118d1	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9073	syntax.c	FUNCTION_136	IF_14	IF_15
0x40118d8	            0x7e0e	                           jle 0x40118e8	      9073	syntax.c	FUNCTION_136	IF_14	IF_15
0x40118da	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9074	syntax.c	FUNCTION_136	IF_14	CALL_5
0x40118dd	            0x89c7	                            mov edi, eax	      9074	syntax.c	FUNCTION_136	IF_14	CALL_5
0x40118df	      0xe800000000	                          call 0x40118e4	      9074	syntax.c	FUNCTION_136	IF_14	CALL_5
0x40118e4	        0x488945c0	             mov qword [rbp - 0x40], rax	      9074	syntax.c	FUNCTION_136	IF_14	CALL_5
0x40118e8	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9075	syntax.c	FUNCTION_136	IF_14	IF_16
0x40118ed	            0x742d	                            je 0x401191c	      9075	syntax.c	FUNCTION_136	IF_14	IF_16
0x40118ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x40118f3	          0x488b10	                    mov rdx, qword [rax]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x40118f6	        0x488955d0	             mov qword [rbp - 0x30], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x40118fa	        0x488b5008	                mov rdx, qword [rax + 8]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x40118fe	        0x488955d8	             mov qword [rbp - 0x28], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4011902	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4011906	        0x488955e0	             mov qword [rbp - 0x20], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x401190a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x401190e	        0x488955e8	             mov qword [rbp - 0x18], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4011912	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4011916	        0x488945f0	             mov qword [rbp - 0x10], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x401191a	            0xeb36	                           jmp 0x4011952	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x401191c	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9079	syntax.c	FUNCTION_136	IF_14	ELSE_3	CALL_6
0x4011920	      0xba28000000	                           mov edx, 0x28	      9079	syntax.c	FUNCTION_136	IF_14	ELSE_3	CALL_6
0x4011925	      0xbe00000000	                              mov esi, 0	      9079	syntax.c	FUNCTION_136	IF_14	ELSE_3	CALL_6
0x401192a	          0x4889c7	                            mov rdi, rax	      9079	syntax.c	FUNCTION_136	IF_14	ELSE_3	CALL_6
0x401192d	      0xe800000000	                          call 0x4011932	      9079	syntax.c	FUNCTION_136	IF_14	ELSE_3	CALL_6
0x4011932	    0x48c745e899d4	mov qword [rbp - 0x18], 0xffffffffffffd499	      9081	syntax.c	FUNCTION_136	IF_14	ELSE_3
0x401193a	    0x48c745e099d4	mov qword [rbp - 0x20], 0xffffffffffffd499	      9082	syntax.c	FUNCTION_136	IF_14	ELSE_3
0x4011942	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x4011949	            0x7f07	                            jg 0x4011952	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x401194b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9085	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x401194e	        0x668945d0	               mov word [rbp - 0x30], ax	      9085	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x4011952	    0x817db8ff0000	           cmp dword [rbp - 0x48], 0xff 	      9088	syntax.c	FUNCTION_136	IF_14	IF_18
0x4011959	            0x7f21	                            jg 0x401197c	      9088	syntax.c	FUNCTION_136	IF_14	IF_18
0x401195b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x401195e	          0x83e040	                           and eax, 0x40	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4011961	            0x85c0	                           test eax, eax	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4011963	            0x7506	                           jne 0x401196b	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4011965	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4011969	            0xeb03	                           jmp 0x401196e	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x401196b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x401196e	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4011971	             0x9d0	                             or eax, edx	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4011973	        0x668945d0	               mov word [rbp - 0x30], ax	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4011977	      0xe918010000	                           jmp 0x4011a94	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x401197c	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9092	syntax.c	FUNCTION_136	IF_14	ELSE_4	CALL_7
0x401197f	            0x89c7	                            mov edi, eax	      9092	syntax.c	FUNCTION_136	IF_14	ELSE_4	CALL_7
0x4011981	      0xe800000000	                          call 0x4011986	      9092	syntax.c	FUNCTION_136	IF_14	ELSE_4	CALL_7
0x4011986	        0x488945c8	             mov qword [rbp - 0x38], rax	      9092	syntax.c	FUNCTION_136	IF_14	ELSE_4	CALL_7
0x401198a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      9093	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x401198f	     0xf84ff000000	                            je 0x4011a94	      9093	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x4011995	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x4011999	           0xfb700	                   movzx eax, word [rax]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x401199c	              0x98	                                    cwde	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x401199d	          0x83e040	                           and eax, 0x40	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40119a0	            0x85c0	                           test eax, eax	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40119a2	            0x7409	                            je 0x40119ad	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40119a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40119a8	           0xfb700	                   movzx eax, word [rax]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40119ab	            0xeb04	                           jmp 0x40119b1	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40119ad	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40119b1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40119b5	           0xfb712	                   movzx edx, word [rdx]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40119b8	             0x9d0	                             or eax, edx	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40119ba	        0x668945d0	               mov word [rbp - 0x30], ax	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40119be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x40119c2	         0xfb74008	               movzx eax, word [rax + 8]	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x40119c6	          0x6685c0	                             test ax, ax	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x40119c9	            0x740c	                            je 0x40119d7	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x40119cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9098	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x40119cf	         0xfb74008	               movzx eax, word [rax + 8]	      9098	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x40119d3	        0x668945d8	               mov word [rbp - 0x28], ax	      9098	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x40119d7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x40119db	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x40119df	          0x6685c0	                             test ax, ax	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x40119e2	            0x740c	                            je 0x40119f0	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x40119e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9100	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x40119e8	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      9100	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x40119ec	        0x668945da	               mov word [rbp - 0x26], ax	      9100	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x40119f0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x40119f4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x40119f8	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x40119fe	            0x7410	                            je 0x4011a10	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x4011a00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x4011a04	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x4011a08	    0x483d9ad4ffff	             cmp rax, 0xffffffffffffd49a	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x4011a0e	            0x754c	                           jne 0x4011a5c	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x4011a10	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x4011a14	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x4011a18	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x4011a1e	            0x7410	                            je 0x4011a30	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x4011a20	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x4011a24	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x4011a28	    0x483d9ad4ffff	             cmp rax, 0xffffffffffffd49a	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x4011a2e	            0x752c	                           jne 0x4011a5c	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x4011a30	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x4011a34	         0xfb74008	               movzx eax, word [rax + 8]	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x4011a38	          0x6685c0	                             test ax, ax	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x4011a3b	            0x7408	                            je 0x4011a45	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x4011a3d	    0x48c745e09ad4	mov qword [rbp - 0x20], 0xffffffffffffd49a	      9108	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x4011a45	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4011a49	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4011a4d	          0x6685c0	                             test ax, ax	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4011a50	            0x7442	                            je 0x4011a94	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4011a52	    0x48c745e89ad4	mov qword [rbp - 0x18], 0xffffffffffffd49a	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4011a5a	            0xeb38	                           jmp 0x4011a94	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4011a5c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x4011a60	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x4011a64	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x4011a6a	            0x740c	                            je 0x4011a78	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x4011a6c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9115	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x4011a70	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9115	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x4011a74	        0x488945e0	             mov qword [rbp - 0x20], rax	      9115	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x4011a78	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4011a7c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4011a80	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4011a86	            0x740c	                            je 0x4011a94	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4011a88	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4011a8c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4011a90	        0x488945e8	             mov qword [rbp - 0x18], rax	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4011a94	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4011a98	          0x4889c6	                            mov rsi, rax	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4011a9b	      0xbf00000000	                              mov edi, 0	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4011aa0	      0xe813f6ffff	                 call sym.get_attr_entry	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4011aa5	      0xe90c010000	                           jmp 0x4011bb6	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4011aaa	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9125	syntax.c	FUNCTION_136	IF_27
0x4011ab1	            0x7e0e	                           jle 0x4011ac1	      9125	syntax.c	FUNCTION_136	IF_27
0x4011ab3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9126	syntax.c	FUNCTION_136	CALL_11
0x4011ab6	            0x89c7	                            mov edi, eax	      9126	syntax.c	FUNCTION_136	CALL_11
0x4011ab8	      0xe800000000	                          call 0x4011abd	      9126	syntax.c	FUNCTION_136	CALL_11
0x4011abd	        0x488945c0	             mov qword [rbp - 0x40], rax	      9126	syntax.c	FUNCTION_136	CALL_11
0x4011ac1	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9127	syntax.c	FUNCTION_136	IF_28
0x4011ac6	            0x742d	                            je 0x4011af5	      9127	syntax.c	FUNCTION_136	IF_28
0x4011ac8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9128	syntax.c	FUNCTION_136	IF_28
0x4011acc	          0x488b10	                    mov rdx, qword [rax]	      9128	syntax.c	FUNCTION_136	IF_28
0x4011acf	        0x488955d0	             mov qword [rbp - 0x30], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4011ad3	        0x488b5008	                mov rdx, qword [rax + 8]	      9128	syntax.c	FUNCTION_136	IF_28
0x4011ad7	        0x488955d8	             mov qword [rbp - 0x28], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4011adb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9128	syntax.c	FUNCTION_136	IF_28
0x4011adf	        0x488955e0	             mov qword [rbp - 0x20], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4011ae3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9128	syntax.c	FUNCTION_136	IF_28
0x4011ae7	        0x488955e8	             mov qword [rbp - 0x18], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4011aeb	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9128	syntax.c	FUNCTION_136	IF_28
0x4011aef	        0x488945f0	             mov qword [rbp - 0x10], rax	      9128	syntax.c	FUNCTION_136	IF_28
0x4011af3	            0xeb26	                           jmp 0x4011b1b	      9128	syntax.c	FUNCTION_136	IF_28
0x4011af5	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9131	syntax.c	FUNCTION_136	ELSE_6	CALL_12
0x4011af9	      0xba28000000	                           mov edx, 0x28	      9131	syntax.c	FUNCTION_136	ELSE_6	CALL_12
0x4011afe	      0xbe00000000	                              mov esi, 0	      9131	syntax.c	FUNCTION_136	ELSE_6	CALL_12
0x4011b03	          0x4889c7	                            mov rdi, rax	      9131	syntax.c	FUNCTION_136	ELSE_6	CALL_12
0x4011b06	      0xe800000000	                          call 0x4011b0b	      9131	syntax.c	FUNCTION_136	ELSE_6	CALL_12
0x4011b0b	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9132	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x4011b12	            0x7f07	                            jg 0x4011b1b	      9132	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x4011b14	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9133	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x4011b17	        0x668945d0	               mov word [rbp - 0x30], ax	      9133	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x4011b1b	    0x817db8ff0000	           cmp dword [rbp - 0x48], 0xff 	      9136	syntax.c	FUNCTION_136	IF_30
0x4011b22	            0x7f1e	                            jg 0x4011b42	      9136	syntax.c	FUNCTION_136	IF_30
0x4011b24	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9137	syntax.c	FUNCTION_136	IF_30
0x4011b27	          0x83e040	                           and eax, 0x40	      9137	syntax.c	FUNCTION_136	IF_30
0x4011b2a	            0x85c0	                           test eax, eax	      9137	syntax.c	FUNCTION_136	IF_30
0x4011b2c	            0x7506	                           jne 0x4011b34	      9137	syntax.c	FUNCTION_136	IF_30
0x4011b2e	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9137	syntax.c	FUNCTION_136	IF_30
0x4011b32	            0xeb03	                           jmp 0x4011b37	      9137	syntax.c	FUNCTION_136	IF_30
0x4011b34	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9137	syntax.c	FUNCTION_136	IF_30
0x4011b37	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      9137	syntax.c	FUNCTION_136	IF_30
0x4011b3a	             0x9d0	                             or eax, edx	      9137	syntax.c	FUNCTION_136	IF_30
0x4011b3c	        0x668945d0	               mov word [rbp - 0x30], ax	      9137	syntax.c	FUNCTION_136	IF_30
0x4011b40	            0xeb63	                           jmp 0x4011ba5	      9137	syntax.c	FUNCTION_136	IF_30
0x4011b42	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9140	syntax.c	FUNCTION_136	ELSE_7	CALL_13
0x4011b45	            0x89c7	                            mov edi, eax	      9140	syntax.c	FUNCTION_136	ELSE_7	CALL_13
0x4011b47	      0xe800000000	                          call 0x4011b4c	      9140	syntax.c	FUNCTION_136	ELSE_7	CALL_13
0x4011b4c	        0x488945c8	             mov qword [rbp - 0x38], rax	      9140	syntax.c	FUNCTION_136	ELSE_7	CALL_13
0x4011b50	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      9141	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b55	            0x744e	                            je 0x4011ba5	      9141	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b57	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b5b	           0xfb700	                   movzx eax, word [rax]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b5e	              0x98	                                    cwde	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b5f	          0x83e040	                           and eax, 0x40	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b62	            0x85c0	                           test eax, eax	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b64	            0x7409	                            je 0x4011b6f	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b66	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b6a	           0xfb700	                   movzx eax, word [rax]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b6d	            0xeb04	                           jmp 0x4011b73	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b6f	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b73	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b77	           0xfb712	                   movzx edx, word [rdx]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b7a	             0x9d0	                             or eax, edx	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b7c	        0x668945d0	               mov word [rbp - 0x30], ax	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4011b80	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4011b84	        0x488b4008	                mov rax, qword [rax + 8]	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4011b88	          0x4885c0	                           test rax, rax	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4011b8b	            0x7418	                            je 0x4011ba5	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4011b8d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9146	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4011b91	        0x488b4008	                mov rax, qword [rax + 8]	      9146	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4011b95	        0x488945d8	             mov qword [rbp - 0x28], rax	      9146	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4011b99	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4011b9d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4011ba1	        0x488945e0	             mov qword [rbp - 0x20], rax	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4011ba5	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9151	syntax.c	FUNCTION_136	CALL_14
0x4011ba9	          0x4889c6	                            mov rsi, rax	      9151	syntax.c	FUNCTION_136	CALL_14
0x4011bac	      0xbf00000000	                              mov edi, 0	      9151	syntax.c	FUNCTION_136	CALL_14
0x4011bb1	      0xe802f5ffff	                 call sym.get_attr_entry	      9151	syntax.c	FUNCTION_136	CALL_14
0x4011bb6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9152	syntax.c	FUNCTION_136
0x4011bba	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9152	syntax.c	FUNCTION_136
0x4011bc3	            0x7405	                            je 0x4011bca	      9152	syntax.c	FUNCTION_136
0x4011bc5	      0xe800000000	                          call 0x4011bca	      9152	syntax.c	FUNCTION_136
0x4011bca	              0xc9	                                   leave	      9152	syntax.c	FUNCTION_136
0x4011bcb	              0xc3	                                     ret	      9152	syntax.c	FUNCTION_136
get_highlight_name	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	13
0x40148f4	              0x55	                                push rbp	     10305	syntax.c	FUNCTION_167
0x40148f5	          0x4889e5	                            mov rbp, rsp	     10305	syntax.c	FUNCTION_167
0x40148f8	        0x4883ec10	                           sub rsp, 0x10	     10305	syntax.c	FUNCTION_167
0x40148fc	        0x48897df8	                mov qword [rbp - 8], rdi	     10305	syntax.c	FUNCTION_167
0x4014900	          0x8975f4	              mov dword [rbp - 0xc], esi	     10305	syntax.c	FUNCTION_167
0x4014903	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	     10306	syntax.c	FUNCTION_167	CALL_1
0x4014906	        0x488b45f8	                mov rax, qword [rbp - 8]	     10306	syntax.c	FUNCTION_167	CALL_1
0x401490a	      0xba01000000	                              mov edx, 1	     10306	syntax.c	FUNCTION_167	CALL_1
0x401490f	            0x89ce	                            mov esi, ecx	     10306	syntax.c	FUNCTION_167	CALL_1
0x4014911	          0x4889c7	                            mov rdi, rax	     10306	syntax.c	FUNCTION_167	CALL_1
0x4014914	      0xe800000000	                          call 0x4014919	     10306	syntax.c	FUNCTION_167	CALL_1
0x4014919	              0xc9	                                   leave	     10307	syntax.c	FUNCTION_167
0x401491a	              0xc3	                                     ret	     10307	syntax.c	FUNCTION_167
syn_add_end_off	functions,0:IF,5:SWITCH,0:FOR,0:CALL,3:ELSE,3:WHILE,2:DO,0	130
0x40054d4	              0x55	                                push rbp	      3204	syntax.c	FUNCTION_40
0x40054d5	          0x4889e5	                            mov rbp, rsp	      3204	syntax.c	FUNCTION_40
0x40054d8	        0x4883ec40	                           sub rsp, 0x40	      3204	syntax.c	FUNCTION_40
0x40054dc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3204	syntax.c	FUNCTION_40
0x40054e0	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3204	syntax.c	FUNCTION_40
0x40054e4	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3204	syntax.c	FUNCTION_40
0x40054e8	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      3204	syntax.c	FUNCTION_40
0x40054eb	        0x448945c0	             mov dword [rbp - 0x40], r8d	      3204	syntax.c	FUNCTION_40
0x40054ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3210	syntax.c	FUNCTION_40	IF_1
0x40054f3	         0xfb74004	               movzx eax, word [rax + 4]	      3210	syntax.c	FUNCTION_40	IF_1
0x40054f7	           0xfbfd0	                           movsx edx, ax	      3210	syntax.c	FUNCTION_40	IF_1
0x40054fa	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3210	syntax.c	FUNCTION_40	IF_1
0x40054fd	            0x89c1	                            mov ecx, eax	      3210	syntax.c	FUNCTION_40	IF_1
0x40054ff	            0xd3fa	                             sar edx, cl	      3210	syntax.c	FUNCTION_40	IF_1
0x4005501	            0x89d0	                            mov eax, edx	      3210	syntax.c	FUNCTION_40	IF_1
0x4005503	          0x83e001	                              and eax, 1	      3210	syntax.c	FUNCTION_40	IF_1
0x4005506	            0x85c0	                           test eax, eax	      3210	syntax.c	FUNCTION_40	IF_1
0x4005508	            0x7431	                            je 0x400553b	      3210	syntax.c	FUNCTION_40	IF_1
0x400550a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3212	syntax.c	FUNCTION_40	IF_1
0x400550e	        0x488b5008	                mov rdx, qword [rax + 8]	      3212	syntax.c	FUNCTION_40	IF_1
0x4005512	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3212	syntax.c	FUNCTION_40	IF_1
0x4005516	          0x488910	                    mov qword [rax], rdx	      3212	syntax.c	FUNCTION_40	IF_1
0x4005519	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3213	syntax.c	FUNCTION_40	IF_1
0x400551d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3213	syntax.c	FUNCTION_40	IF_1
0x4005520	          0x8945e8	             mov dword [rbp - 0x18], eax	      3213	syntax.c	FUNCTION_40	IF_1
0x4005523	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3214	syntax.c	FUNCTION_40	IF_1
0x4005527	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3214	syntax.c	FUNCTION_40	IF_1
0x400552a	          0x4863d2	                         movsxd rdx, edx	      3214	syntax.c	FUNCTION_40	IF_1
0x400552d	        0x8b549008	       mov edx, dword [rax + rdx*4 + 8] 	      3214	syntax.c	FUNCTION_40	IF_1
0x4005531	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3214	syntax.c	FUNCTION_40	IF_1
0x4005534	             0x1d0	                            add eax, edx	      3214	syntax.c	FUNCTION_40	IF_1
0x4005536	          0x8945ec	             mov dword [rbp - 0x14], eax	      3214	syntax.c	FUNCTION_40	IF_1
0x4005539	            0xeb30	                           jmp 0x400556b	      3214	syntax.c	FUNCTION_40	IF_1
0x400553b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3218	syntax.c	FUNCTION_40	ELSE_1
0x400553f	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      3218	syntax.c	FUNCTION_40	ELSE_1
0x4005546	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3218	syntax.c	FUNCTION_40	ELSE_1
0x400554a	          0x488910	                    mov qword [rax], rdx	      3218	syntax.c	FUNCTION_40	ELSE_1
0x400554d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3219	syntax.c	FUNCTION_40	ELSE_1
0x4005551	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      3219	syntax.c	FUNCTION_40	ELSE_1
0x4005557	          0x8945e8	             mov dword [rbp - 0x18], eax	      3219	syntax.c	FUNCTION_40	ELSE_1
0x400555a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3220	syntax.c	FUNCTION_40	ELSE_1
0x400555e	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3220	syntax.c	FUNCTION_40	ELSE_1
0x4005561	          0x4863d2	                         movsxd rdx, edx	      3220	syntax.c	FUNCTION_40	ELSE_1
0x4005564	        0x8b449008	       mov eax, dword [rax + rdx*4 + 8] 	      3220	syntax.c	FUNCTION_40	ELSE_1
0x4005568	          0x8945ec	             mov dword [rbp - 0x14], eax	      3220	syntax.c	FUNCTION_40	ELSE_1
0x400556b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3224	syntax.c	FUNCTION_40	IF_2
0x400556f	          0x488b10	                    mov rdx, qword [rax]	      3224	syntax.c	FUNCTION_40	IF_2
0x4005572	    0x488b05000000	            mov rax, qword [0x04005579] 	      3224	syntax.c	FUNCTION_40	IF_2
0x4005579	          0x488b00	                    mov rax, qword [rax]	      3224	syntax.c	FUNCTION_40	IF_2
0x400557c	          0x4839c2	                            cmp rdx, rax	      3224	syntax.c	FUNCTION_40	IF_2
0x400557f	            0x7e0c	                           jle 0x400558d	      3224	syntax.c	FUNCTION_40	IF_2
0x4005581	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      3225	syntax.c	FUNCTION_40	IF_2
0x4005588	      0xe9ee000000	                           jmp 0x400567b	      3225	syntax.c	FUNCTION_40	IF_2
0x400558d	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3226	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4005591	     0xf84e4000000	                            je 0x400567b	      3226	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4005597	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x400559b	          0x488b08	                    mov rcx, qword [rax]	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x400559e	    0x488b05000000	            mov rax, qword [0x040055a5] 	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x40055a5	      0xba00000000	                              mov edx, 0	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x40055aa	          0x4889ce	                            mov rsi, rcx	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x40055ad	          0x4889c7	                            mov rdi, rax	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x40055b0	      0xe800000000	                          call 0x40055b5	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x40055b5	        0x488945f8	                mov qword [rbp - 8], rax	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x40055b9	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x40055bc	          0x4863d0	                         movsxd rdx, eax	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x40055bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x40055c3	          0x4801d0	                            add rax, rdx	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x40055c6	        0x488945f0	             mov qword [rbp - 0x10], rax	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x40055ca	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3230	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x40055ce	            0x7e43	                           jle 0x4005613	      3230	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x40055d0	            0xeb27	                           jmp 0x40055f9	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40055d2	    0x8b0500000000	            mov eax, dword [0x040055d8] 	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40055d8	            0x85c0	                           test eax, eax	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40055da	            0x7412	                            je 0x40055ee	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40055dc	    0x488b05000000	            mov rax, qword [0x040055e3] 	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40055e3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40055e7	          0x4889d7	                            mov rdi, rdx	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40055ea	            0xffd0	                                call rax	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40055ec	            0xeb05	                           jmp 0x40055f3	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40055ee	      0xb801000000	                              mov eax, 1	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40055f3	            0x4898	                                    cdqe	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40055f5	        0x480145f0	            add qword [rbp - 0x10], rax 	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40055f9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40055fc	          0x8d50ff	                      lea edx, [rax - 1]	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40055ff	          0x8955ec	             mov dword [rbp - 0x14], edx	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4005602	            0x85c0	                           test eax, eax	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4005604	            0x7e64	                           jle 0x400566a	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4005606	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x400560a	           0xfb600	                   movzx eax, byte [rax]	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x400560d	            0x84c0	                             test al, al	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x400560f	            0x75c1	                           jne 0x40055d2	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4005611	            0xeb57	                           jmp 0x400566a	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4005613	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3235	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5
0x4005617	            0x7951	                           jns 0x400566a	      3235	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5
0x4005619	            0xeb38	                           jmp 0x4005653	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x400561b	    0x8b0500000000	            mov eax, dword [0x04005621] 	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4005621	            0x85c0	                           test eax, eax	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4005623	            0x7420	                            je 0x4005645	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4005625	    0x488b05000000	            mov rax, qword [0x0400562c] 	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400562c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4005630	        0x488d4aff	                      lea rcx, [rdx - 1]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4005634	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4005638	          0x4889ce	                            mov rsi, rcx	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400563b	          0x4889d7	                            mov rdi, rdx	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400563e	            0xffd0	                                call rax	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4005640	          0x83c001	                              add eax, 1	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4005643	            0xeb05	                           jmp 0x400564a	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4005645	      0xb801000000	                              mov eax, 1	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400564a	            0x4898	                                    cdqe	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400564c	          0x48f7d8	                                 neg rax	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400564f	        0x480145f0	            add qword [rbp - 0x10], rax 	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4005653	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4005656	          0x8d5001	                      lea edx, [rax + 1]	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4005659	          0x8955ec	             mov dword [rbp - 0x14], edx	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x400565c	            0x85c0	                           test eax, eax	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x400565e	            0x790a	                           jns 0x400566a	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4005660	        0x488b45f8	                mov rax, qword [rbp - 8]	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4005664	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4005668	            0x72b1	                            jb 0x400561b	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x400566a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x400566e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4005672	          0x4829c2	                            sub rdx, rax	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4005675	          0x4889d0	                            mov rax, rdx	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4005678	          0x8945e8	             mov dword [rbp - 0x18], eax	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x400567b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3242	syntax.c	FUNCTION_40
0x400567f	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      3242	syntax.c	FUNCTION_40
0x4005682	          0x895008	                mov dword [rax + 8], edx	      3242	syntax.c	FUNCTION_40
0x4005685	              0x90	                                     nop	      3243	syntax.c	FUNCTION_40
0x4005686	              0xc9	                                   leave	      3243	syntax.c	FUNCTION_40
0x4005687	              0xc3	                                     ret	      3243	syntax.c	FUNCTION_40
syn_match_linecont	functions,0:IF,1:SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,0:DO,0	44
0x4000e1a	              0x55	                                push rbp	      1034	syntax.c	FUNCTION_8
0x4000e1b	          0x4889e5	                            mov rbp, rsp	      1034	syntax.c	FUNCTION_8
0x4000e1e	    0x4881eca00100	                          sub rsp, 0x1a0	      1034	syntax.c	FUNCTION_8
0x4000e25	    0x4889bd68feff	            mov qword [rbp - 0x198], rdi	      1034	syntax.c	FUNCTION_8
0x4000e2c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1034	syntax.c	FUNCTION_8
0x4000e35	        0x488945f8	                mov qword [rbp - 8], rax	      1034	syntax.c	FUNCTION_8
0x4000e39	            0x31c0	                            xor eax, eax	      1034	syntax.c	FUNCTION_8
0x4000e3b	    0x488b05000000	            mov rax, qword [0x04000e42] 	      1039	syntax.c	FUNCTION_8	IF_1
0x4000e42	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      1039	syntax.c	FUNCTION_8	IF_1
0x4000e49	          0x4885c0	                           test rax, rax	      1039	syntax.c	FUNCTION_8	IF_1
0x4000e4c	     0xf848c000000	                            je 0x4000ede	      1039	syntax.c	FUNCTION_8	IF_1
0x4000e52	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1042	syntax.c	FUNCTION_8	IF_1	CALL_1
0x4000e56	          0x4889c7	                            mov rdi, rax	      1042	syntax.c	FUNCTION_8	IF_1	CALL_1
0x4000e59	      0xe8f3feffff	                   call sym.save_chartab	      1042	syntax.c	FUNCTION_8	IF_1	CALL_1
0x4000e5e	    0x488b05000000	            mov rax, qword [0x04000e65] 	      1043	syntax.c	FUNCTION_8	IF_1
0x4000e65	    0x8b8000030000	           mov eax, dword [rax + 0x300] 	      1043	syntax.c	FUNCTION_8	IF_1
0x4000e6b	          0x8945c8	             mov dword [rbp - 0x38], eax	      1043	syntax.c	FUNCTION_8	IF_1
0x4000e6e	    0x488b05000000	            mov rax, qword [0x04000e75] 	      1044	syntax.c	FUNCTION_8	IF_1
0x4000e75	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      1044	syntax.c	FUNCTION_8	IF_1
0x4000e7c	    0x48898580feff	            mov qword [rbp - 0x180], rax	      1044	syntax.c	FUNCTION_8	IF_1
0x4000e83	    0x488b05000000	            mov rax, qword [0x04000e8a] 	      1046	syntax.c	FUNCTION_8	IF_1
0x4000e8a	    0x488d90d00200	                  lea rdx, [rax + 0x2d0]	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000e91	    0x488bb568feff	            mov rsi, qword [rbp - 0x198]	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000e98	    0x488d8580feff	                  lea rax, [rbp - 0x180]	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000e9f	          0x4889d1	                            mov rcx, rdx	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000ea2	      0xba00000000	                              mov edx, 0	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000ea7	          0x4889c7	                            mov rdi, rax	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000eaa	      0xe8e2490000	                    call sym.syn_regexec	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000eaf	    0x89857cfeffff	            mov dword [rbp - 0x184], eax	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x4000eb5	    0x488b05000000	            mov rax, qword [0x04000ebc] 	      1047	syntax.c	FUNCTION_8	IF_1
0x4000ebc	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      1047	syntax.c	FUNCTION_8	IF_1
0x4000ec3	    0x488990c80200	            mov qword [rax + 0x2c8], rdx	      1047	syntax.c	FUNCTION_8	IF_1
0x4000eca	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1048	syntax.c	FUNCTION_8	IF_1	CALL_3
0x4000ece	          0x4889c7	                            mov rdi, rax	      1048	syntax.c	FUNCTION_8	IF_1	CALL_3
0x4000ed1	      0xe8f5feffff	                call sym.restore_chartab	      1048	syntax.c	FUNCTION_8	IF_1	CALL_3
0x4000ed6	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      1049	syntax.c	FUNCTION_8	IF_1
0x4000edc	            0xeb05	                           jmp 0x4000ee3	      1049	syntax.c	FUNCTION_8	IF_1
0x4000ede	      0xb800000000	                              mov eax, 0	      1051	syntax.c	FUNCTION_8
0x4000ee3	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1052	syntax.c	FUNCTION_8
0x4000ee7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1052	syntax.c	FUNCTION_8
0x4000ef0	            0x7405	                            je 0x4000ef7	      1052	syntax.c	FUNCTION_8
0x4000ef2	      0xe800000000	                          call 0x4000ef7	      1052	syntax.c	FUNCTION_8
0x4000ef7	              0xc9	                                   leave	      1052	syntax.c	FUNCTION_8
0x4000ef8	              0xc3	                                     ret	      1052	syntax.c	FUNCTION_8
syn_cterm_attr2entry	functions,0:IF,1:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	19
0x4011cbc	              0x55	                                push rbp	      9203	syntax.c	FUNCTION_140
0x4011cbd	          0x4889e5	                            mov rbp, rsp	      9203	syntax.c	FUNCTION_140
0x4011cc0	          0x897dfc	                mov dword [rbp - 4], edi	      9203	syntax.c	FUNCTION_140
0x4011cc3	    0x816dfc000100	              sub dword [rbp - 4], 0x100	      9204	syntax.c	FUNCTION_140
0x4011cca	    0x8b0500000000	            mov eax, dword [0x04011cd0] 	      9205	syntax.c	FUNCTION_140	IF_1
0x4011cd0	          0x3b45fc	                cmp eax, dword [rbp - 4]	      9205	syntax.c	FUNCTION_140	IF_1
0x4011cd3	            0x7f07	                            jg 0x4011cdc	      9205	syntax.c	FUNCTION_140	IF_1
0x4011cd5	      0xb800000000	                              mov eax, 0	      9206	syntax.c	FUNCTION_140	IF_1
0x4011cda	            0xeb1e	                           jmp 0x4011cfa	      9206	syntax.c	FUNCTION_140	IF_1
0x4011cdc	    0x488b0d000000	            mov rcx, qword [0x04011ce3] 	      9207	syntax.c	FUNCTION_140
0x4011ce3	          0x8b45fc	                mov eax, dword [rbp - 4]	      9207	syntax.c	FUNCTION_140
0x4011ce6	          0x4863d0	                         movsxd rdx, eax	      9207	syntax.c	FUNCTION_140
0x4011ce9	          0x4889d0	                            mov rax, rdx	      9207	syntax.c	FUNCTION_140
0x4011cec	        0x48c1e002	                              shl rax, 2	      9207	syntax.c	FUNCTION_140
0x4011cf0	          0x4801d0	                            add rax, rdx	      9207	syntax.c	FUNCTION_140
0x4011cf3	        0x48c1e003	                              shl rax, 3	      9207	syntax.c	FUNCTION_140
0x4011cf7	          0x4801c8	                            add rax, rcx	      9207	syntax.c	FUNCTION_140
0x4011cfa	              0x5d	                                 pop rbp	      9208	syntax.c	FUNCTION_140
0x4011cfb	              0xc3	                                     ret	      9208	syntax.c	FUNCTION_140
load_colors	functions,0:IF,2:SWITCH,0:FOR,0:CALL,7:ELSE,0:WHILE,0:DO,0	56
0x400d633	              0x55	                                push rbp	      7212	syntax.c	FUNCTION_114
0x400d634	          0x4889e5	                            mov rbp, rsp	      7212	syntax.c	FUNCTION_114
0x400d637	        0x4883ec20	                           sub rsp, 0x20	      7212	syntax.c	FUNCTION_114
0x400d63b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7212	syntax.c	FUNCTION_114
0x400d63f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      7214	syntax.c	FUNCTION_114
0x400d646	    0x8b0500000000	            mov eax, dword [0x0400d64c] 	      7220	syntax.c	FUNCTION_114	IF_1
0x400d64c	            0x85c0	                           test eax, eax	      7220	syntax.c	FUNCTION_114	IF_1
0x400d64e	            0x740a	                            je 0x400d65a	      7220	syntax.c	FUNCTION_114	IF_1
0x400d650	      0xb801000000	                              mov eax, 1	      7221	syntax.c	FUNCTION_114	IF_1
0x400d655	      0xe9d2000000	                           jmp 0x400d72c	      7221	syntax.c	FUNCTION_114	IF_1
0x400d65a	    0xc70500000000	               mov dword [0x0400d664], 1	      7223	syntax.c	FUNCTION_114
0x400d664	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7224	syntax.c	FUNCTION_114	CALL_2
0x400d668	          0x4889c7	                            mov rdi, rax	      7224	syntax.c	FUNCTION_114	CALL_2
0x400d66b	      0xe800000000	                          call 0x400d670	      7224	syntax.c	FUNCTION_114	CALL_2
0x400d670	          0x83c00c	                            add eax, 0xc	      7224	syntax.c	FUNCTION_114	CALL_2
0x400d673	            0x89c7	                            mov edi, eax	      7224	syntax.c	FUNCTION_114	CALL_2
0x400d675	      0xe800000000	                          call 0x400d67a	      7224	syntax.c	FUNCTION_114	CALL_2
0x400d67a	        0x488945f8	                mov qword [rbp - 8], rax	      7224	syntax.c	FUNCTION_114	CALL_2
0x400d67e	      0x48837df800	                  cmp qword [rbp - 8], 0	      7225	syntax.c	FUNCTION_114	IF_2
0x400d683	     0xf8496000000	                            je 0x400d71f	      7225	syntax.c	FUNCTION_114	IF_2
0x400d689	    0x488b0d000000	            mov rcx, qword [0x0400d690] 	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x400d690	    0x488b05000000	            mov rax, qword [0x0400d697] 	      7228	syntax.c	FUNCTION_114	IF_2
0x400d697	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x400d69e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x400d6a2	          0x4989c8	                             mov r8, rcx	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x400d6a5	      0xb900000000	                              mov ecx, 0	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x400d6aa	          0x4889c6	                            mov rsi, rax	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x400d6ad	      0xbf1a000000	                           mov edi, 0x1a	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x400d6b2	      0xe800000000	                          call 0x400d6b7	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x400d6b7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0x400d6bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0x400d6bf	      0xbe00000000	                              mov esi, 0	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0x400d6c4	          0x4889c7	                            mov rdi, rax	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0x400d6c7	      0xb800000000	                              mov eax, 0	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0x400d6cc	      0xe800000000	                          call 0x400d6d1	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0x400d6d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0x400d6d5	      0xbe18000000	                           mov esi, 0x18	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0x400d6da	          0x4889c7	                            mov rdi, rax	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0x400d6dd	      0xe800000000	                          call 0x400d6e2	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0x400d6e2	          0x8945f4	              mov dword [rbp - 0xc], eax	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0x400d6e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7231	syntax.c	FUNCTION_114	IF_2	CALL_6
0x400d6e9	          0x4889c7	                            mov rdi, rax	      7231	syntax.c	FUNCTION_114	IF_2	CALL_6
0x400d6ec	      0xe800000000	                          call 0x400d6f1	      7231	syntax.c	FUNCTION_114	IF_2	CALL_6
0x400d6f1	    0x488b0d000000	            mov rcx, qword [0x0400d6f8] 	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x400d6f8	    0x488b05000000	            mov rax, qword [0x0400d6ff] 	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x400d6ff	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x400d706	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x400d70a	          0x4989c8	                             mov r8, rcx	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x400d70d	      0xb900000000	                              mov ecx, 0	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x400d712	          0x4889c6	                            mov rsi, rax	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x400d715	      0xbf19000000	                           mov edi, 0x19	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x400d71a	      0xe800000000	                          call 0x400d71f	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0x400d71f	    0xc70500000000	               mov dword [0x0400d729], 0	      7234	syntax.c	FUNCTION_114
0x400d729	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      7236	syntax.c	FUNCTION_114
0x400d72c	              0xc9	                                   leave	      7237	syntax.c	FUNCTION_114
0x400d72d	              0xc3	                                     ret	      7237	syntax.c	FUNCTION_114
syntax_sync_clear	functions,0:IF,1:SWITCH,0:FOR,1:CALL,5:ELSE,0:WHILE,0:DO,0	75
0x40065f6	              0x55	                                push rbp	      3679	syntax.c	FUNCTION_51
0x40065f7	          0x4889e5	                            mov rbp, rsp	      3679	syntax.c	FUNCTION_51
0x40065fa	        0x4883ec10	                           sub rsp, 0x10	      3679	syntax.c	FUNCTION_51
0x40065fe	    0x488b05000000	            mov rax, qword [0x04006605] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006605	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006609	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x400660f	          0x8945fc	                mov dword [rbp - 4], eax	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006612	            0xeb49	                           jmp 0x400665d	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006614	    0x488b05000000	            mov rax, qword [0x0400661b] 	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400661b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400661f	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006626	          0x8b45fc	                mov eax, dword [rbp - 4]	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006629	          0x4863d0	                         movsxd rdx, eax	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400662c	          0x4889d0	                            mov rax, rdx	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400662f	        0x48c1e002	                              shl rax, 2	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006633	          0x4801d0	                            add rax, rdx	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006636	        0x48c1e005	                              shl rax, 5	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400663a	          0x4801c8	                            add rax, rcx	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400663d	         0xfb64001	               movzx eax, byte [rax + 1]	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006641	            0x84c0	                             test al, al	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006643	            0x7418	                            je 0x400665d	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006645	    0x488b05000000	            mov rax, qword [0x0400664c] 	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400664c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006650	          0x8b55fc	                mov edx, dword [rbp - 4]	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006653	            0x89d6	                            mov esi, edx	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006655	          0x4889c7	                            mov rdi, rax	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006658	      0xe807010000	             call sym.syn_remove_pattern	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400665d	        0x836dfc01	                  sub dword [rbp - 4], 1	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006661	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006665	            0x79ad	                           jns 0x4006614	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006667	    0x488b05000000	            mov rax, qword [0x0400666e] 	      3687	syntax.c	FUNCTION_51
0x400666e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3687	syntax.c	FUNCTION_51
0x4006672	    0xc7809c020000	              mov dword [rax + 0x29c], 0	      3687	syntax.c	FUNCTION_51
0x400667c	    0x488b05000000	            mov rax, qword [0x04006683] 	      3688	syntax.c	FUNCTION_51
0x4006683	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3688	syntax.c	FUNCTION_51
0x4006687	    0x48c780a80200	              mov qword [rax + 0x2a8], 0	      3688	syntax.c	FUNCTION_51
0x4006692	    0x488b05000000	            mov rax, qword [0x04006699] 	      3689	syntax.c	FUNCTION_51
0x4006699	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3689	syntax.c	FUNCTION_51
0x400669d	    0x48c780b00200	              mov qword [rax + 0x2b0], 0	      3689	syntax.c	FUNCTION_51
0x40066a8	    0x488b05000000	            mov rax, qword [0x040066af] 	      3690	syntax.c	FUNCTION_51
0x40066af	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3690	syntax.c	FUNCTION_51
0x40066b3	    0x48c780b80200	              mov qword [rax + 0x2b8], 0	      3690	syntax.c	FUNCTION_51
0x40066be	    0x488b05000000	            mov rax, qword [0x040066c5] 	      3692	syntax.c	FUNCTION_51	CALL_2
0x40066c5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3692	syntax.c	FUNCTION_51	CALL_2
0x40066c9	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      3692	syntax.c	FUNCTION_51	CALL_2
0x40066d0	          0x4889c7	                            mov rdi, rax	      3692	syntax.c	FUNCTION_51	CALL_2
0x40066d3	      0xe800000000	                          call 0x40066d8	      3692	syntax.c	FUNCTION_51	CALL_2
0x40066d8	    0x488b05000000	            mov rax, qword [0x040066df] 	      3693	syntax.c	FUNCTION_51
0x40066df	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3693	syntax.c	FUNCTION_51
0x40066e3	    0x48c780c80200	              mov qword [rax + 0x2c8], 0	      3693	syntax.c	FUNCTION_51
0x40066ee	    0x488b05000000	            mov rax, qword [0x040066f5] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x40066f5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x40066f9	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x4006700	          0x4885c0	                           test rax, rax	      3694	syntax.c	FUNCTION_51	CALL_3
0x4006703	            0x7430	                            je 0x4006735	      3694	syntax.c	FUNCTION_51	CALL_3
0x4006705	    0x488b05000000	            mov rax, qword [0x0400670c] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x400670c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x4006710	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x4006717	          0x4889c7	                            mov rdi, rax	      3694	syntax.c	FUNCTION_51	CALL_3
0x400671a	      0xe800000000	                          call 0x400671f	      3694	syntax.c	FUNCTION_51	CALL_3
0x400671f	    0x488b05000000	            mov rax, qword [0x04006726] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x4006726	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x400672a	    0x48c780c00200	              mov qword [rax + 0x2c0], 0	      3694	syntax.c	FUNCTION_51	CALL_3
0x4006735	    0x488b05000000	            mov rax, qword [0x0400673c] 	      3695	syntax.c	FUNCTION_51	CALL_4
0x400673c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3695	syntax.c	FUNCTION_51	CALL_4
0x4006740	    0x4805b0040000	                          add rax, 0x4b0	      3695	syntax.c	FUNCTION_51	CALL_4
0x4006746	          0x4889c7	                            mov rdi, rax	      3695	syntax.c	FUNCTION_51	CALL_4
0x4006749	      0xe800000000	                          call 0x400674e	      3695	syntax.c	FUNCTION_51	CALL_4
0x400674e	    0x488b05000000	            mov rax, qword [0x04006755] 	      3697	syntax.c	FUNCTION_51	CALL_5
0x4006755	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3697	syntax.c	FUNCTION_51	CALL_5
0x4006759	          0x4889c7	                            mov rdi, rax	      3697	syntax.c	FUNCTION_51	CALL_5
0x400675c	      0xe800000000	                          call 0x4006761	      3697	syntax.c	FUNCTION_51	CALL_5
0x4006761	              0x90	                                     nop	      3698	syntax.c	FUNCTION_51
0x4006762	              0xc9	                                   leave	      3698	syntax.c	FUNCTION_51
0x4006763	              0xc3	                                     ret	      3698	syntax.c	FUNCTION_51
syn_check_group	functions,0:IF,2:SWITCH,0:FOR,0:CALL,4:ELSE,1:WHILE,0:DO,0	32
0x4012f7f	              0x55	                                push rbp	      9713	syntax.c	FUNCTION_153
0x4012f80	          0x4889e5	                            mov rbp, rsp	      9713	syntax.c	FUNCTION_153
0x4012f83	        0x4883ec20	                           sub rsp, 0x20	      9713	syntax.c	FUNCTION_153
0x4012f87	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9713	syntax.c	FUNCTION_153
0x4012f8b	          0x8975e4	             mov dword [rbp - 0x1c], esi	      9713	syntax.c	FUNCTION_153
0x4012f8e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      9717	syntax.c	FUNCTION_153	CALL_1
0x4012f91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9717	syntax.c	FUNCTION_153	CALL_1
0x4012f95	            0x89d6	                            mov esi, edx	      9717	syntax.c	FUNCTION_153	CALL_1
0x4012f97	          0x4889c7	                            mov rdi, rax	      9717	syntax.c	FUNCTION_153	CALL_1
0x4012f9a	      0xe800000000	                          call 0x4012f9f	      9717	syntax.c	FUNCTION_153	CALL_1
0x4012f9f	        0x488945f8	                mov qword [rbp - 8], rax	      9717	syntax.c	FUNCTION_153	CALL_1
0x4012fa3	      0x48837df800	                  cmp qword [rbp - 8], 0	      9718	syntax.c	FUNCTION_153	IF_1
0x4012fa8	            0x7507	                           jne 0x4012fb1	      9718	syntax.c	FUNCTION_153	IF_1
0x4012faa	      0xb800000000	                              mov eax, 0	      9719	syntax.c	FUNCTION_153	IF_1
0x4012faf	            0xeb35	                           jmp 0x4012fe6	      9719	syntax.c	FUNCTION_153	IF_1
0x4012fb1	        0x488b45f8	                mov rax, qword [rbp - 8]	      9721	syntax.c	FUNCTION_153	CALL_2
0x4012fb5	          0x4889c7	                            mov rdi, rax	      9721	syntax.c	FUNCTION_153	CALL_2
0x4012fb8	      0xe800000000	                          call 0x4012fbd	      9721	syntax.c	FUNCTION_153	CALL_2
0x4012fbd	          0x8945f4	              mov dword [rbp - 0xc], eax	      9721	syntax.c	FUNCTION_153	CALL_2
0x4012fc0	        0x837df400	                cmp dword [rbp - 0xc], 0	      9722	syntax.c	FUNCTION_153	IF_2
0x4012fc4	            0x7511	                           jne 0x4012fd7	      9722	syntax.c	FUNCTION_153	IF_2
0x4012fc6	        0x488b45f8	                mov rax, qword [rbp - 8]	      9723	syntax.c	FUNCTION_153	CALL_3
0x4012fca	          0x4889c7	                            mov rdi, rax	      9723	syntax.c	FUNCTION_153	CALL_3
0x4012fcd	      0xe816000000	                  call sym.syn_add_group	      9723	syntax.c	FUNCTION_153	CALL_3
0x4012fd2	          0x8945f4	              mov dword [rbp - 0xc], eax	      9723	syntax.c	FUNCTION_153	CALL_3
0x4012fd5	            0xeb0c	                           jmp 0x4012fe3	      9723	syntax.c	FUNCTION_153	CALL_3
0x4012fd7	        0x488b45f8	                mov rax, qword [rbp - 8]	      9725	syntax.c	FUNCTION_153	CALL_4
0x4012fdb	          0x4889c7	                            mov rdi, rax	      9725	syntax.c	FUNCTION_153	CALL_4
0x4012fde	      0xe800000000	                          call 0x4012fe3	      9725	syntax.c	FUNCTION_153	CALL_4
0x4012fe3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9726	syntax.c	FUNCTION_153
0x4012fe6	              0xc9	                                   leave	      9727	syntax.c	FUNCTION_153
0x4012fe7	              0xc3	                                     ret	      9727	syntax.c	FUNCTION_153
syn_sync	functions,0:IF,27:SWITCH,0:FOR,4:CALL,25:ELSE,11:WHILE,1:DO,0	409
0x4000617	              0x55	                                push rbp	       741	syntax.c	FUNCTION_5
0x4000618	          0x4889e5	                            mov rbp, rsp	       741	syntax.c	FUNCTION_5
0x400061b	    0x4881eca00000	                           sub rsp, 0xa0	       741	syntax.c	FUNCTION_5
0x4000622	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       741	syntax.c	FUNCTION_5
0x4000629	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       741	syntax.c	FUNCTION_5
0x4000630	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       741	syntax.c	FUNCTION_5
0x4000637	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       753	syntax.c	FUNCTION_5
0x400063e	    0xc74588000000	               mov dword [rbp - 0x78], 0	       754	syntax.c	FUNCTION_5
0x4000645	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       755	syntax.c	FUNCTION_5
0x400064d	    0xc7458c000000	               mov dword [rbp - 0x74], 0	       756	syntax.c	FUNCTION_5
0x4000654	      0xe88d200000	       call sym.invalidate_current_state	       763	syntax.c	FUNCTION_5	CALL_1
0x4000659	    0x488b05000000	            mov rax, qword [0x04000660] 	       773	syntax.c	FUNCTION_5	IF_1
0x4000660	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	       773	syntax.c	FUNCTION_5	IF_1
0x4000667	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       773	syntax.c	FUNCTION_5	IF_1
0x400066e	            0x7e10	                           jle 0x4000680	       773	syntax.c	FUNCTION_5	IF_1
0x4000670	    0x48c78570ffff	               mov qword [rbp - 0x90], 1	       774	syntax.c	FUNCTION_5	IF_1
0x400067b	      0xe9cf000000	                           jmp 0x400074f	       774	syntax.c	FUNCTION_5	IF_1
0x4000680	    0x488b05000000	            mov rax, qword [0x04000687] 	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x4000687	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x400068e	        0x4883f801	                              cmp rax, 1	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x4000692	            0x750a	                           jne 0x400069e	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x4000694	    0x48c745980100	               mov qword [rbp - 0x68], 1	       778	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x400069c	            0xeb53	                           jmp 0x40006f1	       778	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x400069e	    0x488b05000000	            mov rax, qword [0x040006a5] 	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40006a5	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40006ac	        0x4883f809	                              cmp rax, 9	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40006b0	            0x7f17	                            jg 0x40006c9	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40006b2	    0x488b05000000	            mov rax, qword [0x040006b9] 	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40006b9	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40006c0	          0x4801c0	                            add rax, rax	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40006c3	        0x48894598	             mov qword [rbp - 0x68], rax	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40006c7	            0xeb28	                           jmp 0x40006f1	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40006c9	    0x488b05000000	            mov rax, qword [0x040006d0] 	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40006d0	    0x488b90a80200	           mov rdx, qword [rax + 0x2a8] 	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40006d7	          0x4889d0	                            mov rax, rdx	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40006da	          0x4801c0	                            add rax, rax	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40006dd	          0x4801d0	                            add rax, rdx	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40006e0	          0x4889c2	                            mov rdx, rax	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40006e3	        0x48c1ea3f	                           shr rdx, 0x3f	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40006e7	          0x4801d0	                            add rax, rdx	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40006ea	          0x48d1f8	                              sar rax, 1	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40006ed	        0x48894598	             mov qword [rbp - 0x68], rax	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x40006f1	    0x488b05000000	            mov rax, qword [0x040006f8] 	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x40006f8	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x40006ff	          0x4885c0	                           test rax, rax	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4000702	            0x7426	                            je 0x400072a	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4000704	    0x488b05000000	            mov rax, qword [0x0400070b] 	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400070b	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4000712	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4000716	            0x7d12	                           jge 0x400072a	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4000718	    0x488b05000000	            mov rax, qword [0x0400071f] 	       785	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400071f	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       785	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4000726	        0x48894598	             mov qword [rbp - 0x68], rax	       785	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400072a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x400072e	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x4000735	            0x7c0d	                            jl 0x4000744	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x4000737	    0x48c78570ffff	               mov qword [rbp - 0x90], 1	       787	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x4000742	            0xeb0b	                           jmp 0x400074f	       787	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x4000744	        0x488b4598	             mov rax, qword [rbp - 0x68]	       789	syntax.c	FUNCTION_5	ELSE_1	ELSE_4
0x4000748	    0x48298570ffff	             sub qword [rbp - 0x90], rax	       789	syntax.c	FUNCTION_5	ELSE_1	ELSE_4
0x400074f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       791	syntax.c	FUNCTION_5	ELSE_4
0x4000756	    0x488905000000	            mov qword [0x0400075d], rax 	       791	syntax.c	FUNCTION_5	ELSE_4
0x400075d	    0x488b05000000	            mov rax, qword [0x04000764] 	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000764	    0x8b809c020000	           mov eax, dword [rax + 0x29c] 	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400076a	          0x83e001	                              and eax, 1	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400076d	            0x85c0	                           test eax, eax	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400076f	     0xf84cf010000	                            je 0x4000944	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000775	    0x488b05000000	            mov rax, qword [0x0400077c] 	       800	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400077c	        0x488945b8	             mov qword [rbp - 0x48], rax	       800	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000780	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       801	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000787	    0x488905000000	            mov qword [0x0400078e], rax 	       801	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400078e	    0x488b05000000	            mov rax, qword [0x04000795] 	       802	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000795	        0x488945c0	             mov qword [rbp - 0x40], rax	       802	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000799	    0x488b05000000	            mov rax, qword [0x040007a0] 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40007a0	    0x488905000000	            mov qword [0x040007a7], rax 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40007a7	            0xeb48	                           jmp 0x40007f1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x40007a9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40007b0	        0x4883e801	                              sub rax, 1	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40007b4	          0x4889c7	                            mov rdi, rax	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40007b7	      0xe800000000	                          call 0x40007bc	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40007bc	        0x488945c8	             mov qword [rbp - 0x38], rax	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40007c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007c4	           0xfb600	                   movzx eax, byte [rax]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007c7	            0x84c0	                             test al, al	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007c9	            0x7430	                            je 0x40007fb	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007cf	          0x4889c7	                            mov rdi, rax	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007d2	      0xe800000000	                          call 0x40007d7	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007d7	        0x488d50ff	                      lea rdx, [rax - 1]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007df	          0x4801d0	                            add rax, rdx	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007e2	           0xfb600	                   movzx eax, byte [rax]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007e5	            0x3c5c	                            cmp al, 0x5c	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007e7	            0x7512	                           jne 0x40007fb	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40007e9	    0x4883ad70ffff	               sub qword [rbp - 0x90], 1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x40007f1	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x40007f9	            0x7fae	                            jg 0x40007a9	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x40007fb	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       814	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000802	    0x488905000000	            mov qword [0x04000809], rax 	       814	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000809	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000810	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000814	        0x488b4038	            mov rax, qword [rax + 0x38] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000818	        0x488945e0	             mov qword [rbp - 0x20], rax	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400081c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000820	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       818	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000827	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       818	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400082e	        0x48895038	             mov qword [rax + 0x38], rdx	       818	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000832	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       819	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000839	    0xc74040000000	               mov dword [rax + 0x40], 0	       819	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000840	    0x488b05000000	            mov rax, qword [0x04000847] 	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x4000847	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x400084e	            0x89c7	                            mov edi, eax	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x4000850	      0xe800000000	                          call 0x4000855	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x4000855	          0x4885c0	                           test rax, rax	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x4000858	     0xf84b4000000	                            je 0x4000912	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x400085e	    0x488b05000000	            mov rax, qword [0x04000865] 	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4000865	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400086b	          0x894580	             mov dword [rbp - 0x80], eax	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400086e	      0xe98e000000	                           jmp 0x4000901	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4000873	    0x488b05000000	            mov rax, qword [0x0400087a] 	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400087a	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4000881	          0x8b4580	             mov eax, dword [rbp - 0x80]	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4000884	          0x4863d0	                         movsxd rdx, eax	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4000887	          0x4889d0	                            mov rax, rdx	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400088a	        0x48c1e002	                              shl rax, 2	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400088e	          0x4801d0	                            add rax, rdx	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4000891	        0x48c1e005	                              shl rax, 5	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4000895	          0x4801c8	                            add rax, rcx	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4000898	         0xfb75054	           movzx edx, word [rax + 0x54] 	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400089c	    0x488b05000000	            mov rax, qword [0x040008a3] 	       830	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008a3	     0xfb780a00200	          movzx eax, word [rax + 0x2a0] 	       830	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008aa	          0x6639c2	                              cmp dx, ax	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008ad	            0x7552	                           jne 0x4000901	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008af	    0x488b05000000	            mov rax, qword [0x040008b6] 	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008b6	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008bd	          0x8b4580	             mov eax, dword [rbp - 0x80]	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008c0	          0x4863d0	                         movsxd rdx, eax	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008c3	          0x4889d0	                            mov rax, rdx	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008c6	        0x48c1e002	                              shl rax, 2	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008ca	          0x4801d0	                            add rax, rdx	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008cd	        0x48c1e005	                              shl rax, 5	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008d1	          0x4801c8	                            add rax, rcx	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008d4	           0xfb600	                   movzx eax, byte [rax]	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008d7	            0x3c02	                               cmp al, 2	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008d9	            0x7526	                           jne 0x4000901	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x40008db	      0xe8311e0000	         call sym.validate_current_state	       833	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x40008e0	          0x8b4580	             mov eax, dword [rbp - 0x80]	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_6
0x40008e3	            0x89c7	                            mov edi, eax	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_6
0x40008e5	      0xe845420000	             call sym.push_current_state	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_6
0x40008ea	          0x83f801	                              cmp eax, 1	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_6
0x40008ed	            0x7522	                           jne 0x4000911	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_6
0x40008ef	    0x8b0500000000	            mov eax, dword [0x040008f5] 	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x40008f5	          0x83e801	                              sub eax, 1	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x40008f8	            0x89c7	                            mov edi, eax	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x40008fa	      0xe8073c0000	                 call sym.update_si_attr	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x40008ff	            0xeb10	                           jmp 0x4000911	       836	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4000901	        0x836d8001	               sub dword [rbp - 0x80], 1	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4000905	        0x837d8000	               cmp dword [rbp - 0x80], 0	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4000909	     0xf8964ffffff	                           jns 0x4000873	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400090f	            0xeb01	                           jmp 0x4000912	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4000911	              0x90	                                     nop	       836	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4000912	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000919	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400091d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000921	        0x48894138	             mov qword [rcx + 0x38], rax	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000925	        0x48895140	             mov qword [rcx + 0x40], rdx	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000929	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       842	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400092d	    0x488905000000	            mov qword [0x04000934], rax 	       842	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000934	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000938	    0x488905000000	            mov qword [0x0400093f], rax 	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400093f	      0xe905040000	                           jmp 0x4000d49	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4000944	    0x488b05000000	            mov rax, qword [0x0400094b] 	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x400094b	    0x8b809c020000	           mov eax, dword [rax + 0x29c] 	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x4000951	          0x83e002	                              and eax, 2	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x4000954	            0x85c0	                           test eax, eax	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x4000956	     0xf84ed030000	                            je 0x4000d49	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x400095c	    0x488b05000000	            mov rax, qword [0x04000963] 	       851	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4000963	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       851	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400096a	          0x4885c0	                           test rax, rax	       851	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400096d	            0x7438	                            je 0x40009a7	       851	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400096f	    0x488b05000000	            mov rax, qword [0x04000976] 	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4000976	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400097d	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4000984	            0x7d21	                           jge 0x40009a7	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4000986	    0x488b05000000	            mov rax, qword [0x0400098d] 	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400098d	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4000994	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400099b	          0x4829c2	                            sub rdx, rax	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400099e	          0x4889d0	                            mov rax, rdx	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x40009a1	        0x488945a8	             mov qword [rbp - 0x58], rax	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x40009a5	            0xeb08	                           jmp 0x40009af	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x40009a7	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       855	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x40009af	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       857	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x40009b7	    0xc745f8000000	                  mov dword [rbp - 8], 0	       858	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x40009be	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       859	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x40009c5	        0x488945a0	             mov qword [rbp - 0x60], rax	       859	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x40009c9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       860	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x40009d0	        0x48894598	             mov qword [rbp - 0x68], rax	       860	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x40009d4	      0xe93f030000	                           jmp 0x4000d18	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x40009d9	      0xe800000000	                          call 0x40009de	       864	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	CALL_8
0x40009de	    0x8b0500000000	            mov eax, dword [0x040009e4] 	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40009e4	            0x85c0	                           test eax, eax	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40009e6	            0x7418	                            je 0x4000a00	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40009e8	      0xe8f91c0000	       call sym.invalidate_current_state	       867	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13	CALL_9
0x40009ed	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40009f4	    0x488905000000	            mov qword [0x040009fb], rax 	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40009fb	      0xe92b030000	                           jmp 0x4000d2b	       869	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x4000a00	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x4000a08	            0x7425	                            je 0x4000a2f	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x4000a0a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x4000a11	        0x488b4008	                mov rax, qword [rax + 8]	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x4000a15	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x4000a19	            0x7514	                           jne 0x4000a2f	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x4000a1b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x4000a22	          0x4889c7	                            mov rdi, rax	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x4000a25	      0xe80e160000	             call sym.load_current_state	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x4000a2a	      0xe9fc020000	                           jmp 0x4000d2b	       876	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x4000a2f	      0x48837d9801	               cmp qword [rbp - 0x68], 1	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x4000a34	            0x7e19	                           jle 0x4000a4f	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x4000a36	        0x488b4598	             mov rax, qword [rbp - 0x68]	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x4000a3a	        0x4883e801	                              sub rax, 1	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x4000a3e	          0x4889c7	                            mov rdi, rax	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x4000a41	      0xe8d4030000	             call sym.syn_match_linecont	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x4000a46	            0x85c0	                           test eax, eax	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x4000a48	            0x7405	                            je 0x4000a4f	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x4000a4a	      0xe9c9020000	                           jmp 0x4000d18	       883	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15
0x4000a4f	      0xe8bd1c0000	         call sym.validate_current_state	       888	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	CALL_12
0x4000a54	        0x488b4598	             mov rax, qword [rbp - 0x68]	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4000a58	    0x488905000000	            mov qword [0x04000a5f], rax 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4000a5f	      0xe9a9010000	                           jmp 0x4000c0d	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4000a64	      0xe890040000	                 call sym.syn_start_line	       892	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	CALL_13
0x4000a69	      0xbf01000000	                              mov edi, 1	       895	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	CALL_14
0x4000a6e	      0xe8491d0000	                call sym.syn_finish_line	       895	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	CALL_14
0x4000a73	          0x894590	             mov dword [rbp - 0x70], eax	       895	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	CALL_14
0x4000a76	        0x837d9000	               cmp dword [rbp - 0x70], 0	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000a7a	     0xf847b010000	                            je 0x4000bfb	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000a80	    0x8b0500000000	            mov eax, dword [0x04000a86] 	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000a86	            0x85c0	                           test eax, eax	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000a88	     0xf846d010000	                            je 0x4000bfb	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000a8e	    0x488b0d000000	            mov rcx, qword [0x04000a95] 	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000a95	    0x8b0500000000	            mov eax, dword [0x04000a9b] 	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000a9b	          0x4863d0	                         movsxd rdx, eax	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000a9e	          0x4889d0	                            mov rax, rdx	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000aa1	        0x48c1e003	                              shl rax, 3	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000aa5	          0x4801d0	                            add rax, rdx	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000aa8	        0x48c1e004	                              shl rax, 4	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000aac	    0x482d90000000	                           sub rax, 0x90	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000ab2	          0x4801c8	                            add rax, rcx	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000ab5	        0x488945d0	             mov qword [rbp - 0x30], rax	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000ab9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4000abd	        0x488b4018	            mov rax, qword [rax + 0x18] 	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4000ac1	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4000ac8	            0x7e10	                           jle 0x4000ada	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4000aca	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       906	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4000ace	    0x488905000000	            mov qword [0x04000ad5], rax 	       906	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4000ad5	      0xe921010000	                           jmp 0x4000bfb	       907	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4000ada	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x4000ade	            0x8b00	                    mov eax, dword [rax]	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x4000ae0	            0x85c0	                           test eax, eax	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x4000ae2	            0x7910	                           jns 0x4000af4	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x4000ae4	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       912	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x4000aeb	    0xc74588ffffff	     mov dword [rbp - 0x78], 0xffffffff 	       913	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x4000af2	            0xeb40	                           jmp 0x4000b34	       913	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x4000af4	    0x488b05000000	            mov rax, qword [0x04000afb] 	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000afb	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b02	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b06	            0x8b00	                    mov eax, dword [rax]	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b08	          0x4863d0	                         movsxd rdx, eax	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b0b	          0x4889d0	                            mov rax, rdx	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b0e	        0x48c1e002	                              shl rax, 2	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b12	          0x4801d0	                            add rax, rdx	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b15	        0x48c1e005	                              shl rax, 5	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b19	          0x4801c8	                            add rax, rcx	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b1c	        0x488945d8	             mov qword [rbp - 0x28], rax	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       918	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b24	          0x8b4024	            mov eax, dword [rax + 0x24] 	       918	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b27	          0x894584	             mov dword [rbp - 0x7c], eax	       918	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b2e	          0x8b4030	            mov eax, dword [rax + 0x30] 	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b31	          0x894588	             mov dword [rbp - 0x78], eax	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4000b34	    0x488b05000000	            mov rax, qword [0x04000b3b] 	       921	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000b3b	        0x488945b0	             mov qword [rbp - 0x50], rax	       921	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000b3f	    0x8b0500000000	            mov eax, dword [0x04000b45] 	       922	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000b45	          0x89458c	             mov dword [rbp - 0x74], eax	       922	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000b48	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000b4c	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000b50	        0x488b4018	            mov rax, qword [rax + 0x18] 	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000b54	        0x488945f0	             mov qword [rbp - 0x10], rax	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000b58	        0x488955f8	                mov qword [rbp - 8], rdx	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000b5c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4000b60	    0x488b05000000	            mov rax, qword [0x04000b67] 	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4000b67	          0x4839c2	                            cmp rdx, rax	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4000b6a	            0x7e23	                           jle 0x4000b8f	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4000b6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       930	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4000b70	    0x488905000000	            mov qword [0x04000b77], rax 	       930	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4000b77	          0x8b45f8	                mov eax, dword [rbp - 8]	       931	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4000b7a	    0x890500000000	            mov dword [0x04000b80], eax 	       931	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4000b80	    0x488b05000000	            mov rax, qword [0x04000b87] 	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x4000b87	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x4000b8b	            0x7c29	                            jl 0x4000bb6	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x4000b8d	            0xeb6c	                           jmp 0x4000bfb	       933	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x4000b8f	          0x8b55f8	                mov edx, dword [rbp - 8]	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4000b92	    0x8b0500000000	            mov eax, dword [0x04000b98] 	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4000b98	            0x39c2	                            cmp edx, eax	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4000b9a	            0x7e0b	                           jle 0x4000ba7	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4000b9c	          0x8b45f8	                mov eax, dword [rbp - 8]	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4000b9f	    0x890500000000	            mov dword [0x04000ba5], eax 	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4000ba5	            0xeb0f	                           jmp 0x4000bb6	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4000ba7	    0x8b0500000000	            mov eax, dword [0x04000bad] 	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x4000bad	          0x83c001	                              add eax, 1	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x4000bb0	    0x890500000000	            mov dword [0x04000bb6], eax 	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x4000bb6	    0x8b0500000000	            mov eax, dword [0x04000bbc] 	       943	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000bbc	          0x894594	             mov dword [rbp - 0x6c], eax	       943	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000bbf	      0xe8a94c0000	                 call sym.syn_getcurline	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4000bc4	          0x4889c2	                            mov rdx, rax	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4000bc7	    0x8b0500000000	            mov eax, dword [0x04000bcd] 	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4000bcd	            0x4898	                                    cdqe	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4000bcf	          0x4801d0	                            add rax, rdx	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4000bd2	           0xfb600	                   movzx eax, byte [rax]	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4000bd5	            0x84c0	                             test al, al	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4000bd7	            0x740f	                            je 0x4000be8	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4000bd9	    0x8b0500000000	            mov eax, dword [0x04000bdf] 	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0x4000bdf	          0x83c001	                              add eax, 1	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0x4000be2	    0x890500000000	            mov dword [0x04000be8], eax 	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0x4000be8	      0xe8eb350000	               call sym.check_state_ends	       946	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_16
0x4000bed	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       947	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000bf0	    0x890500000000	            mov dword [0x04000bf6], eax 	       947	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4000bf6	      0xe96efeffff	                           jmp 0x4000a69	       951	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	ELSE_10
0x4000bfb	    0x488b05000000	            mov rax, qword [0x04000c02] 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4000c02	        0x4883c001	                              add rax, 1	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4000c06	    0x488905000000	            mov qword [0x04000c0d], rax 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4000c0d	    0x488b05000000	            mov rax, qword [0x04000c14] 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4000c14	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4000c18	     0xf8c46feffff	                            jl 0x4000a64	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4000c1e	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       957	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0x4000c22	     0xf84e3000000	                            je 0x4000d0b	       957	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0x4000c28	      0xe885f9ffff	            call sym.clear_current_state	       964	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_17
0x4000c2d	        0x837d8800	               cmp dword [rbp - 0x78], 0	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0x4000c31	            0x781f	                            js 0x4000c52	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0x4000c33	          0x8b4588	             mov eax, dword [rbp - 0x78]	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_18
0x4000c36	            0x89c7	                            mov edi, eax	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_18
0x4000c38	      0xe8f23e0000	             call sym.push_current_state	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_18
0x4000c3d	          0x83f801	                              cmp eax, 1	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_18
0x4000c40	            0x7510	                           jne 0x4000c52	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_18
0x4000c42	    0x8b0500000000	            mov eax, dword [0x04000c48] 	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_19
0x4000c48	          0x83e801	                              sub eax, 1	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_19
0x4000c4b	            0x89c7	                            mov edi, eax	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_19
0x4000c4d	      0xe8b4380000	                 call sym.update_si_attr	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_19
0x4000c52	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4000c55	          0x83e010	                           and eax, 0x10	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4000c58	            0x85c0	                           test eax, eax	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4000c5a	     0xf849b000000	                            je 0x4000cfb	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4000c60	    0x8b0500000000	            mov eax, dword [0x04000c66] 	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c66	            0x85c0	                           test eax, eax	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c68	            0x745f	                            je 0x4000cc9	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c6a	    0x488b0d000000	            mov rcx, qword [0x04000c71] 	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c71	    0x8b0500000000	            mov eax, dword [0x04000c77] 	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c77	          0x4863d0	                         movsxd rdx, eax	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c7a	          0x4889d0	                            mov rax, rdx	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c7d	        0x48c1e003	                              shl rax, 3	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c81	          0x4801d0	                            add rax, rdx	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c84	        0x48c1e004	                              shl rax, 4	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c88	    0x482d90000000	                           sub rax, 0x90	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c8e	          0x4801c8	                            add rax, rcx	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c91	        0x488945d0	             mov qword [rbp - 0x30], rax	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c95	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       980	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c99	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       980	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000c9d	        0x48895028	             mov qword [rax + 0x28], rdx	       980	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000ca1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       981	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000ca5	          0x8b558c	             mov edx, dword [rbp - 0x74]	       981	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000ca8	          0x895030	             mov dword [rax + 0x30], edx	       981	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4000cab	    0x8b0d00000000	            mov ecx, dword [0x04000cb1] 	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x4000cb1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x4000cb5	      0xba01000000	                              mov edx, 1	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x4000cba	            0x89ce	                            mov esi, ecx	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x4000cbc	          0x4889c7	                            mov rdi, rax	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x4000cbf	      0xe8b73c0000	                  call sym.update_si_end	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x4000cc4	      0xe8b83a0000	                  call sym.check_keepend	       983	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_21
0x4000cc9	          0x8b45f8	                mov eax, dword [rbp - 8]	       985	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4000ccc	    0x890500000000	            mov dword [0x04000cd2], eax 	       985	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4000cd2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       986	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4000cd6	    0x488905000000	            mov qword [0x04000cdd], rax 	       986	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4000cdd	      0xbf00000000	                              mov edi, 0	       987	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	CALL_22
0x4000ce2	      0xe8d51a0000	                call sym.syn_finish_line	       987	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	CALL_22
0x4000ce7	    0x488b05000000	            mov rax, qword [0x04000cee] 	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4000cee	        0x4883c001	                              add rax, 1	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4000cf2	    0x488905000000	            mov qword [0x04000cf9], rax 	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4000cf9	            0xeb30	                           jmp 0x4000d2b	       993	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0x4000cfb	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4000d02	    0x488905000000	            mov qword [0x04000d09], rax 	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4000d09	            0xeb20	                           jmp 0x4000d2b	       993	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0x4000d0b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       996	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4000d0f	        0x488945a0	             mov qword [rbp - 0x60], rax	       996	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4000d13	      0xe8ce190000	       call sym.invalidate_current_state	       997	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	CALL_23
0x4000d18	      0x48836d9801	               sub qword [rbp - 0x68], 1	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4000d1d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4000d21	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4000d25	     0xf8faefcffff	                            jg 0x40009d9	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4000d2b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1001	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4000d2f	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      1001	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4000d33	            0x7f14	                            jg 0x4000d49	      1001	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4000d35	      0xe8ac190000	       call sym.invalidate_current_state	      1003	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27	CALL_24
0x4000d3a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4000d3e	        0x4883c001	                              add rax, 1	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4000d42	    0x488905000000	            mov qword [0x04000d49], rax 	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4000d49	      0xe8c3190000	         call sym.validate_current_state	      1008	syntax.c	FUNCTION_5	CALL_25
0x4000d4e	              0x90	                                     nop	      1009	syntax.c	FUNCTION_5
0x4000d4f	              0xc9	                                   leave	      1009	syntax.c	FUNCTION_5
0x4000d50	              0xc3	                                     ret	      1009	syntax.c	FUNCTION_5
set_hl_attr	functions,0:IF,8:SWITCH,0:FOR,0:CALL,8:ELSE,3:WHILE,0:DO,0	192
0x4012aba	              0x55	                                push rbp	      9526	syntax.c	FUNCTION_147
0x4012abb	          0x4889e5	                            mov rbp, rsp	      9526	syntax.c	FUNCTION_147
0x4012abe	        0x4883ec50	                           sub rsp, 0x50	      9526	syntax.c	FUNCTION_147
0x4012ac2	          0x897dbc	             mov dword [rbp - 0x44], edi	      9526	syntax.c	FUNCTION_147
0x4012ac5	    0x64488b042528	                mov rax, qword fs:[0x28]	      9526	syntax.c	FUNCTION_147
0x4012ace	        0x488945f8	                mov qword [rbp - 8], rax	      9526	syntax.c	FUNCTION_147
0x4012ad2	            0x31c0	                            xor eax, eax	      9526	syntax.c	FUNCTION_147
0x4012ad4	    0x488b0d000000	            mov rcx, qword [0x04012adb] 	      9528	syntax.c	FUNCTION_147
0x4012adb	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9528	syntax.c	FUNCTION_147
0x4012ade	          0x4863d0	                         movsxd rdx, eax	      9528	syntax.c	FUNCTION_147
0x4012ae1	          0x4889d0	                            mov rax, rdx	      9528	syntax.c	FUNCTION_147
0x4012ae4	        0x48c1e003	                              shl rax, 3	      9528	syntax.c	FUNCTION_147
0x4012ae8	          0x4801d0	                            add rax, rdx	      9528	syntax.c	FUNCTION_147
0x4012aeb	          0x4801c0	                            add rax, rax	      9528	syntax.c	FUNCTION_147
0x4012aee	          0x4801d0	                            add rax, rdx	      9528	syntax.c	FUNCTION_147
0x4012af1	        0x48c1e003	                              shl rax, 3	      9528	syntax.c	FUNCTION_147
0x4012af5	          0x4801c8	                            add rax, rcx	      9528	syntax.c	FUNCTION_147
0x4012af8	        0x488945c8	             mov qword [rbp - 0x38], rax	      9528	syntax.c	FUNCTION_147
0x4012afc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4012b00	        0x488b4008	                mov rax, qword [rax + 8]	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4012b04	          0x4885c0	                           test rax, rax	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4012b07	            0x741d	                            je 0x4012b26	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4012b09	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4012b0d	        0x488b4008	                mov rax, qword [rax + 8]	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4012b11	      0xbe00000000	                              mov esi, 0	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4012b16	          0x4889c7	                            mov rdi, rax	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4012b19	      0xe800000000	                          call 0x4012b1e	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4012b1e	            0x85c0	                           test eax, eax	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4012b20	     0xf8449020000	                            je 0x4012d6f	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4012b26	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9539	syntax.c	FUNCTION_147	IF_2
0x4012b2a	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9539	syntax.c	FUNCTION_147	IF_2
0x4012b2e	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9539	syntax.c	FUNCTION_147	IF_2
0x4012b34	            0x753d	                           jne 0x4012b73	      9539	syntax.c	FUNCTION_147	IF_2
0x4012b36	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9540	syntax.c	FUNCTION_147	IF_2
0x4012b3a	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9540	syntax.c	FUNCTION_147	IF_2
0x4012b3e	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9540	syntax.c	FUNCTION_147	IF_2
0x4012b44	            0x752d	                           jne 0x4012b73	      9540	syntax.c	FUNCTION_147	IF_2
0x4012b46	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9541	syntax.c	FUNCTION_147	IF_2
0x4012b4a	        0x488b4050	            mov rax, qword [rax + 0x50] 	      9541	syntax.c	FUNCTION_147	IF_2
0x4012b4e	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9541	syntax.c	FUNCTION_147	IF_2
0x4012b54	            0x751d	                           jne 0x4012b73	      9541	syntax.c	FUNCTION_147	IF_2
0x4012b56	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9542	syntax.c	FUNCTION_147	IF_2
0x4012b5a	        0x488b4058	            mov rax, qword [rax + 0x58] 	      9542	syntax.c	FUNCTION_147	IF_2
0x4012b5e	          0x4885c0	                           test rax, rax	      9542	syntax.c	FUNCTION_147	IF_2
0x4012b61	            0x7510	                           jne 0x4012b73	      9542	syntax.c	FUNCTION_147	IF_2
0x4012b63	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9548	syntax.c	FUNCTION_147	IF_2
0x4012b67	          0x8b506c	            mov edx, dword [rax + 0x6c] 	      9548	syntax.c	FUNCTION_147	IF_2
0x4012b6a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9548	syntax.c	FUNCTION_147	IF_2
0x4012b6e	          0x895068	             mov dword [rax + 0x68], edx	      9548	syntax.c	FUNCTION_147	IF_2
0x4012b71	            0xeb55	                           jmp 0x4012bc8	      9548	syntax.c	FUNCTION_147	IF_2
0x4012b73	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9552	syntax.c	FUNCTION_147	ELSE_1
0x4012b77	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      9552	syntax.c	FUNCTION_147	ELSE_1
0x4012b7a	        0x668945d0	               mov word [rbp - 0x30], ax	      9552	syntax.c	FUNCTION_147	ELSE_1
0x4012b7e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9553	syntax.c	FUNCTION_147	ELSE_1
0x4012b82	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9553	syntax.c	FUNCTION_147	ELSE_1
0x4012b86	        0x488945d8	             mov qword [rbp - 0x28], rax	      9553	syntax.c	FUNCTION_147	ELSE_1
0x4012b8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9554	syntax.c	FUNCTION_147	ELSE_1
0x4012b8e	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9554	syntax.c	FUNCTION_147	ELSE_1
0x4012b92	        0x488945e0	             mov qword [rbp - 0x20], rax	      9554	syntax.c	FUNCTION_147	ELSE_1
0x4012b96	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9555	syntax.c	FUNCTION_147	ELSE_1
0x4012b9a	        0x488b4050	            mov rax, qword [rax + 0x50] 	      9555	syntax.c	FUNCTION_147	ELSE_1
0x4012b9e	        0x488945e8	             mov qword [rbp - 0x18], rax	      9555	syntax.c	FUNCTION_147	ELSE_1
0x4012ba2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9556	syntax.c	FUNCTION_147	ELSE_1
0x4012ba6	        0x488b4058	            mov rax, qword [rax + 0x58] 	      9556	syntax.c	FUNCTION_147	ELSE_1
0x4012baa	        0x488945f0	             mov qword [rbp - 0x10], rax	      9556	syntax.c	FUNCTION_147	ELSE_1
0x4012bae	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x4012bb2	          0x4889c6	                            mov rsi, rax	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x4012bb5	      0xbf00000000	                              mov edi, 0	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x4012bba	      0xe8f9e4ffff	                 call sym.get_attr_entry	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x4012bbf	            0x89c2	                            mov edx, eax	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x4012bc1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x4012bc5	          0x895068	             mov dword [rax + 0x68], edx	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x4012bc8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9567	syntax.c	FUNCTION_147	IF_3
0x4012bcc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9567	syntax.c	FUNCTION_147	IF_3
0x4012bd0	          0x4885c0	                           test rax, rax	      9567	syntax.c	FUNCTION_147	IF_3
0x4012bd3	            0x751d	                           jne 0x4012bf2	      9567	syntax.c	FUNCTION_147	IF_3
0x4012bd5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9567	syntax.c	FUNCTION_147	IF_3
0x4012bd9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9567	syntax.c	FUNCTION_147	IF_3
0x4012bdd	          0x4885c0	                           test rax, rax	      9567	syntax.c	FUNCTION_147	IF_3
0x4012be0	            0x7510	                           jne 0x4012bf2	      9567	syntax.c	FUNCTION_147	IF_3
0x4012be2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9568	syntax.c	FUNCTION_147	IF_3
0x4012be6	          0x8b5014	            mov edx, dword [rax + 0x14] 	      9568	syntax.c	FUNCTION_147	IF_3
0x4012be9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9568	syntax.c	FUNCTION_147	IF_3
0x4012bed	          0x895028	             mov dword [rax + 0x28], edx	      9568	syntax.c	FUNCTION_147	IF_3
0x4012bf0	            0xeb3d	                           jmp 0x4012c2f	      9568	syntax.c	FUNCTION_147	IF_3
0x4012bf2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9571	syntax.c	FUNCTION_147	ELSE_2
0x4012bf6	          0x8b4014	            mov eax, dword [rax + 0x14] 	      9571	syntax.c	FUNCTION_147	ELSE_2
0x4012bf9	        0x668945d0	               mov word [rbp - 0x30], ax	      9571	syntax.c	FUNCTION_147	ELSE_2
0x4012bfd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9572	syntax.c	FUNCTION_147	ELSE_2
0x4012c01	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9572	syntax.c	FUNCTION_147	ELSE_2
0x4012c05	        0x488945d8	             mov qword [rbp - 0x28], rax	      9572	syntax.c	FUNCTION_147	ELSE_2
0x4012c09	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9573	syntax.c	FUNCTION_147	ELSE_2
0x4012c0d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9573	syntax.c	FUNCTION_147	ELSE_2
0x4012c11	        0x488945e0	             mov qword [rbp - 0x20], rax	      9573	syntax.c	FUNCTION_147	ELSE_2
0x4012c15	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x4012c19	          0x4889c6	                            mov rsi, rax	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x4012c1c	      0xbf00000000	                              mov edi, 0	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x4012c21	      0xe892e4ffff	                 call sym.get_attr_entry	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x4012c26	            0x89c2	                            mov edx, eax	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x4012c28	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x4012c2c	          0x895028	             mov dword [rax + 0x28], edx	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x4012c2f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9581	syntax.c	FUNCTION_147	IF_4
0x4012c33	          0x8b4034	            mov eax, dword [rax + 0x34] 	      9581	syntax.c	FUNCTION_147	IF_4
0x4012c36	            0x85c0	                           test eax, eax	      9581	syntax.c	FUNCTION_147	IF_4
0x4012c38	            0x753e	                           jne 0x4012c78	      9581	syntax.c	FUNCTION_147	IF_4
0x4012c3a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9581	syntax.c	FUNCTION_147	IF_4
0x4012c3e	          0x8b4038	            mov eax, dword [rax + 0x38] 	      9581	syntax.c	FUNCTION_147	IF_4
0x4012c41	            0x85c0	                           test eax, eax	      9581	syntax.c	FUNCTION_147	IF_4
0x4012c43	            0x7533	                           jne 0x4012c78	      9581	syntax.c	FUNCTION_147	IF_4
0x4012c45	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9583	syntax.c	FUNCTION_147	IF_4
0x4012c49	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9583	syntax.c	FUNCTION_147	IF_4
0x4012c4d	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9583	syntax.c	FUNCTION_147	IF_4
0x4012c53	            0x7523	                           jne 0x4012c78	      9583	syntax.c	FUNCTION_147	IF_4
0x4012c55	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9584	syntax.c	FUNCTION_147	IF_4
0x4012c59	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9584	syntax.c	FUNCTION_147	IF_4
0x4012c5d	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9584	syntax.c	FUNCTION_147	IF_4
0x4012c63	            0x7513	                           jne 0x4012c78	      9584	syntax.c	FUNCTION_147	IF_4
0x4012c65	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9587	syntax.c	FUNCTION_147	IF_4
0x4012c69	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      9587	syntax.c	FUNCTION_147	IF_4
0x4012c6c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9587	syntax.c	FUNCTION_147	IF_4
0x4012c70	          0x89503c	             mov dword [rax + 0x3c], edx	      9587	syntax.c	FUNCTION_147	IF_4
0x4012c73	      0xe9f8000000	                           jmp 0x4012d70	      9587	syntax.c	FUNCTION_147	IF_4
0x4012c78	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4012c7c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4012c7f	        0x668945d0	               mov word [rbp - 0x30], ax	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4012c83	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4012c87	          0x8b4034	            mov eax, dword [rax + 0x34] 	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4012c8a	        0x668945d8	               mov word [rbp - 0x28], ax	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4012c8e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9592	syntax.c	FUNCTION_147	ELSE_3
0x4012c92	          0x8b4038	            mov eax, dword [rax + 0x38] 	      9592	syntax.c	FUNCTION_147	ELSE_3
0x4012c95	        0x668945da	               mov word [rbp - 0x26], ax	      9592	syntax.c	FUNCTION_147	ELSE_3
0x4012c99	    0x8b0500000000	            mov eax, dword [0x04012c9f] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012c9f	            0x85c0	                           test eax, eax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012ca1	            0x742b	                            je 0x4012cce	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012ca3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012ca7	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cab	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cb1	            0x7412	                            je 0x4012cc5	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cb3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cb7	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cbb	          0x4889c7	                            mov rdi, rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cbe	      0xe800000000	                          call 0x4012cc3	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cc3	            0xeb19	                           jmp 0x4012cde	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cc5	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012ccc	            0xeb10	                           jmp 0x4012cde	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cd2	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cd6	          0x4889c7	                            mov rdi, rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cd9	      0xe800000000	                          call 0x4012cde	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012cde	        0x488945e0	             mov qword [rbp - 0x20], rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4012ce2	    0x8b0500000000	            mov eax, dword [0x04012ce8] 	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012ce8	            0x85c0	                           test eax, eax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012cea	            0x742b	                            je 0x4012d17	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012cec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012cf0	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012cf4	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012cfa	            0x7412	                            je 0x4012d0e	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012cfc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d00	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d04	          0x4889c7	                            mov rdi, rax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d07	      0xe800000000	                          call 0x4012d0c	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d0c	            0xeb19	                           jmp 0x4012d27	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d0e	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d15	            0xeb10	                           jmp 0x4012d27	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d17	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d1b	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d1f	          0x4889c7	                            mov rdi, rax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d22	      0xe800000000	                          call 0x4012d27	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d27	        0x488945e8	             mov qword [rbp - 0x18], rax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4012d2b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9613	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4012d2f	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9613	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4012d35	            0x751c	                           jne 0x4012d53	      9613	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4012d37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4012d3b	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4012d41	            0x7510	                           jne 0x4012d53	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4012d43	    0x48c745e09ad4	mov qword [rbp - 0x20], 0xffffffffffffd49a	      9618	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4012d4b	    0x48c745e89ad4	mov qword [rbp - 0x18], 0xffffffffffffd49a	      9619	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4012d53	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4012d57	          0x4889c6	                            mov rsi, rax	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4012d5a	      0xbf00000000	                              mov edi, 0	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4012d5f	      0xe854e3ffff	                 call sym.get_attr_entry	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4012d64	            0x89c2	                            mov edx, eax	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4012d66	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4012d6a	          0x89503c	             mov dword [rax + 0x3c], edx	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4012d6d	            0xeb01	                           jmp 0x4012d70	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x4012d6f	              0x90	                                     nop	      9532	syntax.c	FUNCTION_147	IF_1
0x4012d70	        0x488b45f8	                mov rax, qword [rbp - 8]	      9624	syntax.c	FUNCTION_147
0x4012d74	    0x644833042528	                xor rax, qword fs:[0x28]	      9624	syntax.c	FUNCTION_147
0x4012d7d	            0x7405	                            je 0x4012d84	      9624	syntax.c	FUNCTION_147
0x4012d7f	      0xe800000000	                          call 0x4012d84	      9624	syntax.c	FUNCTION_147
0x4012d84	              0xc9	                                   leave	      9624	syntax.c	FUNCTION_147
0x4012d85	              0xc3	                                     ret	      9624	syntax.c	FUNCTION_147
check_state_ends	functions,0:IF,9:SWITCH,0:FOR,1:CALL,7:ELSE,2:WHILE,0:DO,0	199
0x40041d8	              0x55	                                push rbp	      2611	syntax.c	FUNCTION_31
0x40041d9	          0x4889e5	                            mov rbp, rsp	      2611	syntax.c	FUNCTION_31
0x40041dc	        0x4883ec10	                           sub rsp, 0x10	      2611	syntax.c	FUNCTION_31
0x40041e0	    0x488b0d000000	            mov rcx, qword [0x040041e7] 	      2615	syntax.c	FUNCTION_31
0x40041e7	    0x8b0500000000	            mov eax, dword [0x040041ed] 	      2615	syntax.c	FUNCTION_31
0x40041ed	          0x4863d0	                         movsxd rdx, eax	      2615	syntax.c	FUNCTION_31
0x40041f0	          0x4889d0	                            mov rax, rdx	      2615	syntax.c	FUNCTION_31
0x40041f3	        0x48c1e003	                              shl rax, 3	      2615	syntax.c	FUNCTION_31
0x40041f7	          0x4801d0	                            add rax, rdx	      2615	syntax.c	FUNCTION_31
0x40041fa	        0x48c1e004	                              shl rax, 4	      2615	syntax.c	FUNCTION_31
0x40041fe	    0x482d90000000	                           sub rax, 0x90	      2615	syntax.c	FUNCTION_31
0x4004204	          0x4801c8	                            add rax, rcx	      2615	syntax.c	FUNCTION_31
0x4004207	        0x488945f8	                mov qword [rbp - 8], rax	      2615	syntax.c	FUNCTION_31
0x400420b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x400420f	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4004212	            0x85c0	                           test eax, eax	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4004214	     0xf84e9020000	                            je 0x4004503	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x400421a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x400421e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4004222	    0x488b05000000	            mov rax, qword [0x04004229] 	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4004229	          0x4839c2	                            cmp rdx, rax	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x400422c	            0x7c2d	                            jl 0x400425b	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x400422e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4004232	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4004236	    0x488b05000000	            mov rax, qword [0x0400423d] 	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x400423d	          0x4839c2	                            cmp rdx, rax	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4004240	     0xf85bd020000	                           jne 0x4004503	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4004246	        0x488b45f8	                mov rax, qword [rbp - 8]	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x400424a	          0x8b5020	            mov edx, dword [rax + 0x20] 	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x400424d	    0x8b0500000000	            mov eax, dword [0x04004253] 	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4004253	            0x39c2	                            cmp edx, eax	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4004255	     0xf8fa8020000	                            jg 0x4004503	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x400425b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400425f	          0x8b4058	            mov eax, dword [rax + 0x58] 	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004262	            0x85c0	                           test eax, eax	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004264	     0xf8415010000	                            je 0x400437f	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400426a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400426e	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004272	    0x488b05000000	            mov rax, qword [0x04004279] 	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004279	          0x4839c2	                            cmp rdx, rax	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400427c	            0x7f2d	                            jg 0x40042ab	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400427e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004282	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004286	    0x488b05000000	            mov rax, qword [0x0400428d] 	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400428d	          0x4839c2	                            cmp rdx, rax	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004290	     0xf85e9000000	                           jne 0x400437f	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004296	        0x488b45f8	                mov rax, qword [rbp - 8]	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400429a	          0x8b5050	            mov edx, dword [rax + 0x50] 	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400429d	    0x8b0500000000	            mov eax, dword [0x040042a3] 	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042a3	            0x39c2	                            cmp edx, eax	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042a5	     0xf8ed4000000	                           jle 0x400437f	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      2634	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042af	          0x8b5058	            mov edx, dword [rax + 0x58] 	      2634	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042b2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2634	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042b6	            0x8910	                    mov dword [rax], edx	      2634	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2635	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042bc	    0xc74058000000	               mov dword [rax + 0x58], 0	      2635	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042c3	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042cb	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042cf	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042d3	        0x48894118	             mov qword [rcx + 0x18], rax	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042d7	        0x48895120	             mov qword [rcx + 0x20], rdx	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042db	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042df	        0x488b45f8	                mov rax, qword [rbp - 8]	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042e3	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042e7	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042eb	        0x48894138	             mov qword [rcx + 0x38], rax	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042ef	        0x48895140	             mov qword [rcx + 0x40], rdx	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042f7	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042fb	        0x4883c840	                            or rax, 0x40	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40042ff	          0x4889c2	                            mov rdx, rax	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004302	        0x488b45f8	                mov rax, qword [rbp - 8]	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004306	        0x48895068	             mov qword [rax + 0x68], rdx	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400430a	    0x8b0500000000	            mov eax, dword [0x04004310] 	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004310	          0x8d5001	                      lea edx, [rax + 1]	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004313	    0x891500000000	            mov dword [0x04004319], edx 	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004319	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400431d	          0x894270	             mov dword [rdx + 0x70], eax	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004320	        0x488b45f8	                mov rax, qword [rbp - 8]	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004324	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004328	      0x2500000400	                        and eax, 0x40000	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x400432d	          0x4885c0	                           test rax, rax	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004330	            0x7419	                            je 0x400434b	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004332	        0x488b45f8	                mov rax, qword [rbp - 8]	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004336	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x400433a	    0x480d00000200	                         or rax, 0x20000	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004340	          0x4889c2	                            mov rdx, rax	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004343	        0x488b45f8	                mov rax, qword [rbp - 8]	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004347	        0x48895068	             mov qword [rax + 0x68], rdx	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x400434b	    0x8b0500000000	            mov eax, dword [0x04004351] 	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_1
0x4004351	          0x83e801	                              sub eax, 1	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_1
0x4004354	            0x89c7	                            mov edi, eax	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_1
0x4004356	      0xe8ab010000	                 call sym.update_si_attr	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_1
0x400435b	    0x48c705000000	               mov qword [0x04004366], 0	      2647	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004366	    0xc70500000000	               mov dword [0x04004370], 0	      2650	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004370	    0xc70500000000	     mov dword [0x0400437a], 0x7fffffff 	      2651	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400437a	      0xe984010000	                           jmp 0x4004503	      2652	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x400437f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004383	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x400438a	    0x488905000000	            mov qword [0x04004391], rax 	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004391	        0x488b45f8	                mov rax, qword [rbp - 8]	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004395	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004399	    0x890500000000	            mov dword [0x0400439f], eax 	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x400439f	    0x8b0500000000	            mov eax, dword [0x040043a5] 	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x40043a5	      0x2580020000	                          and eax, 0x280	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x40043aa	            0x85c0	                           test eax, eax	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x40043ac	            0x7525	                           jne 0x40043d3	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x40043ae	      0xe8ba140000	                 call sym.syn_getcurline	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x40043b3	          0x4889c2	                            mov rdx, rax	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x40043b6	    0x8b0500000000	            mov eax, dword [0x040043bc] 	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x40043bc	            0x4898	                                    cdqe	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x40043be	          0x4801d0	                            add rax, rdx	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x40043c1	           0xfb600	                   movzx eax, byte [rax]	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x40043c4	            0x84c0	                             test al, al	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x40043c6	            0x750b	                           jne 0x40043d3	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x40043c8	    0x48c705000000	               mov qword [0x040043d3], 0	      2662	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x40043d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x40043d7	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x40043db	      0x2500400000	                         and eax, 0x4000	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x40043e0	          0x8945f4	              mov dword [rbp - 0xc], eax	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x40043e3	      0xe8dc070000	              call sym.pop_current_state	      2668	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_3
0x40043e8	    0x8b0500000000	            mov eax, dword [0x040043ee] 	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x40043ee	            0x85c0	                           test eax, eax	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x40043f0	     0xf8406010000	                            je 0x40044fc	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x40043f6	        0x837df400	                cmp dword [rbp - 0xc], 0	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x40043fa	            0x7422	                            je 0x400441e	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x40043fc	    0x8b0500000000	            mov eax, dword [0x04004402] 	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4004402	            0x85c0	                           test eax, eax	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4004404	            0x7818	                            js 0x400441e	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4004406	      0xbf00000000	                              mov edi, 0	      2675	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	CALL_4
0x400440b	      0xe840cbffff	                call sym.syn_update_ends	      2675	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	CALL_4
0x4004410	    0x8b0500000000	            mov eax, dword [0x04004416] 	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x4004416	            0x85c0	                           test eax, eax	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x4004418	     0xf84e1000000	                            je 0x40044ff	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x400441e	    0x488b0d000000	            mov rcx, qword [0x04004425] 	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004425	    0x8b0500000000	            mov eax, dword [0x0400442b] 	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x400442b	          0x4863d0	                         movsxd rdx, eax	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x400442e	          0x4889d0	                            mov rax, rdx	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004431	        0x48c1e003	                              shl rax, 3	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004435	          0x4801d0	                            add rax, rdx	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004438	        0x48c1e004	                              shl rax, 4	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x400443c	    0x482d90000000	                           sub rax, 0x90	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004442	          0x4801c8	                            add rax, rcx	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004445	        0x488945f8	                mov qword [rbp - 8], rax	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004449	        0x488b45f8	                mov rax, qword [rbp - 8]	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400444d	            0x8b00	                    mov eax, dword [rax]	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400444f	            0x85c0	                           test eax, eax	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004451	     0xf88b4fdffff	                            js 0x400420b	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004457	    0x488b05000000	            mov rax, qword [0x0400445e] 	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400445e	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004465	        0x488b45f8	                mov rax, qword [rbp - 8]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004469	            0x8b00	                    mov eax, dword [rax]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400446b	          0x4863d0	                         movsxd rdx, eax	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400446e	          0x4889d0	                            mov rax, rdx	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004471	        0x48c1e002	                              shl rax, 2	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004475	          0x4801d0	                            add rax, rdx	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004478	        0x48c1e005	                              shl rax, 5	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400447c	          0x4801c8	                            add rax, rcx	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400447f	           0xfb600	                   movzx eax, byte [rax]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004482	            0x3c02	                               cmp al, 2	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004484	     0xf8581fdffff	                           jne 0x400420b	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400448a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400448e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004492	      0x2540040000	                          and eax, 0x440	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004497	          0x4885c0	                           test rax, rax	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400449a	     0xf856bfdffff	                           jne 0x400420b	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x40044a0	    0x8b0d00000000	            mov ecx, dword [0x040044a6] 	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x40044a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x40044aa	      0xba01000000	                              mov edx, 1	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x40044af	            0x89ce	                            mov esi, ecx	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x40044b1	          0x4889c7	                            mov rdi, rax	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x40044b4	      0xe8c2040000	                  call sym.update_si_end	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x40044b9	      0xe8c3020000	                  call sym.check_keepend	      2697	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_6
0x40044be	    0x8b0500000000	            mov eax, dword [0x040044c4] 	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40044c4	          0x83e008	                              and eax, 8	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40044c7	            0x85c0	                           test eax, eax	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40044c9	     0xf843cfdffff	                            je 0x400420b	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40044cf	    0x8b0500000000	            mov eax, dword [0x040044d5] 	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40044d5	            0x85c0	                           test eax, eax	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40044d7	     0xf892efdffff	                           jns 0x400420b	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40044dd	      0xe88b130000	                 call sym.syn_getcurline	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x40044e2	          0x4889c2	                            mov rdx, rax	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x40044e5	    0x8b0500000000	            mov eax, dword [0x040044eb] 	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x40044eb	            0x4898	                                    cdqe	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x40044ed	          0x4801d0	                            add rax, rdx	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x40044f0	           0xfb600	                   movzx eax, byte [rax]	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x40044f3	            0x84c0	                             test al, al	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x40044f5	            0x740b	                            je 0x4004502	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x40044f7	      0xe90ffdffff	                           jmp 0x400420b	      2707	syntax.c	FUNCTION_31	FOR_1	ELSE_2
0x40044fc	              0x90	                                     nop	      2671	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x40044fd	            0xeb04	                           jmp 0x4004503	      2671	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x40044ff	              0x90	                                     nop	      2677	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x4004500	            0xeb01	                           jmp 0x4004503	      2677	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x4004502	              0x90	                                     nop	      2701	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4004503	              0x90	                                     nop	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004504	              0xc9	                                   leave	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004505	              0xc3	                                     ret	      2708	syntax.c	FUNCTION_31	ELSE_2
syn_get_stack_item	functions,0:IF,1:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	22
0x400cc8c	              0x55	                                push rbp	      6622	syntax.c	FUNCTION_105
0x400cc8d	          0x4889e5	                            mov rbp, rsp	      6622	syntax.c	FUNCTION_105
0x400cc90	        0x4883ec10	                           sub rsp, 0x10	      6622	syntax.c	FUNCTION_105
0x400cc94	          0x897dfc	                mov dword [rbp - 4], edi	      6622	syntax.c	FUNCTION_105
0x400cc97	    0x8b0500000000	            mov eax, dword [0x0400cc9d] 	      6623	syntax.c	FUNCTION_105	IF_1
0x400cc9d	          0x3b45fc	                cmp eax, dword [rbp - 4]	      6623	syntax.c	FUNCTION_105	IF_1
0x400cca0	            0x7f16	                            jg 0x400ccb8	      6623	syntax.c	FUNCTION_105	IF_1
0x400cca2	      0xe83f5affff	       call sym.invalidate_current_state	      6627	syntax.c	FUNCTION_105	IF_1	CALL_1
0x400cca7	    0xc70500000000	     mov dword [0x0400ccb1], 0x7fffffff 	      6628	syntax.c	FUNCTION_105	IF_1
0x400ccb1	      0xb8ffffffff	                     mov eax, 0xffffffff	      6629	syntax.c	FUNCTION_105	IF_1
0x400ccb6	            0xeb21	                           jmp 0x400ccd9	      6629	syntax.c	FUNCTION_105	IF_1
0x400ccb8	    0x488b0d000000	            mov rcx, qword [0x0400ccbf] 	      6631	syntax.c	FUNCTION_105
0x400ccbf	          0x8b45fc	                mov eax, dword [rbp - 4]	      6631	syntax.c	FUNCTION_105
0x400ccc2	          0x4863d0	                         movsxd rdx, eax	      6631	syntax.c	FUNCTION_105
0x400ccc5	          0x4889d0	                            mov rax, rdx	      6631	syntax.c	FUNCTION_105
0x400ccc8	        0x48c1e003	                              shl rax, 3	      6631	syntax.c	FUNCTION_105
0x400cccc	          0x4801d0	                            add rax, rdx	      6631	syntax.c	FUNCTION_105
0x400cccf	        0x48c1e004	                              shl rax, 4	      6631	syntax.c	FUNCTION_105
0x400ccd3	          0x4801c8	                            add rax, rcx	      6631	syntax.c	FUNCTION_105
0x400ccd6	          0x8b4004	                mov eax, dword [rax + 4]	      6631	syntax.c	FUNCTION_105
0x400ccd9	              0xc9	                                   leave	      6632	syntax.c	FUNCTION_105
0x400ccda	              0xc3	                                     ret	      6632	syntax.c	FUNCTION_105
get_syntax_name	functions,0:IF,0:SWITCH,1:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	35
0x400cb36	              0x55	                                push rbp	      6530	syntax.c	ELSE_5	FUNCTION_101
0x400cb37	          0x4889e5	                            mov rbp, rsp	      6530	syntax.c	ELSE_5	FUNCTION_101
0x400cb3a	        0x48897df8	                mov qword [rbp - 8], rdi	      6530	syntax.c	ELSE_5	FUNCTION_101
0x400cb3e	          0x8975f4	              mov dword [rbp - 0xc], esi	      6530	syntax.c	ELSE_5	FUNCTION_101
0x400cb41	    0x8b0500000000	            mov eax, dword [0x0400cb47] 	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb47	          0x83f801	                              cmp eax, 1	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb4a	            0x7425	                            je 0x400cb71	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb4c	          0x83f801	                              cmp eax, 1	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb4f	            0x720c	                            jb 0x400cb5d	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb51	          0x83f802	                              cmp eax, 2	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb54	            0x742a	                            je 0x400cb80	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb56	          0x83f803	                              cmp eax, 3	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb59	            0x7434	                            je 0x400cb8f	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb5b	            0xeb41	                           jmp 0x400cb9e	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb5d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb60	            0x4898	                                    cdqe	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb62	        0x48c1e004	                              shl rax, 4	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb66	    0x480500000000	                              add rax, 0	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb6c	          0x488b00	                    mov rax, qword [rax]	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb6f	            0xeb32	                           jmp 0x400cba3	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb71	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb74	            0x4898	                                    cdqe	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb76	    0x488b04c50000	                  mov rax, qword [rax*8]	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb7e	            0xeb23	                           jmp 0x400cba3	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb80	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb83	            0x4898	                                    cdqe	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb85	    0x488b04c50000	                  mov rax, qword [rax*8]	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb8d	            0xeb14	                           jmp 0x400cba3	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb8f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb92	            0x4898	                                    cdqe	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb94	    0x488b04c50000	                  mov rax, qword [rax*8]	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb9c	            0xeb05	                           jmp 0x400cba3	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400cb9e	      0xb800000000	                              mov eax, 0	      6555	syntax.c	ELSE_5	FUNCTION_101
0x400cba3	              0x5d	                                 pop rbp	      6556	syntax.c	ELSE_5	FUNCTION_101
0x400cba4	              0xc3	                                     ret	      6556	syntax.c	ELSE_5	FUNCTION_101
syn_start_line	functions,0:IF,1:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	18
0x4000ef9	              0x55	                                push rbp	      1059	syntax.c	FUNCTION_9
0x4000efa	          0x4889e5	                            mov rbp, rsp	      1059	syntax.c	FUNCTION_9
0x4000efd	    0xc70500000000	               mov dword [0x04000f07], 0	      1060	syntax.c	FUNCTION_9
0x4000f07	    0xc70500000000	               mov dword [0x04000f11], 0	      1061	syntax.c	FUNCTION_9
0x4000f11	    0x8b0500000000	            mov eax, dword [0x04000f17] 	      1067	syntax.c	FUNCTION_9	IF_1
0x4000f17	            0x85c0	                           test eax, eax	      1067	syntax.c	FUNCTION_9	IF_1
0x4000f19	            0x7e0f	                           jle 0x4000f2a	      1067	syntax.c	FUNCTION_9	IF_1
0x4000f1b	      0xbf01000000	                              mov edi, 1	      1069	syntax.c	FUNCTION_9	IF_1	CALL_1
0x4000f20	      0xe82b000000	                call sym.syn_update_ends	      1069	syntax.c	FUNCTION_9	IF_1	CALL_1
0x4000f25	      0xe8ae320000	               call sym.check_state_ends	      1070	syntax.c	FUNCTION_9	IF_1	CALL_2
0x4000f2a	    0xc70500000000	     mov dword [0x04000f34], 0xffffffff 	      1073	syntax.c	FUNCTION_9
0x4000f34	    0x8b0500000000	            mov eax, dword [0x04000f3a] 	      1074	syntax.c	FUNCTION_9
0x4000f3a	          0x83c001	                              add eax, 1	      1074	syntax.c	FUNCTION_9
0x4000f3d	    0x890500000000	            mov dword [0x04000f43], eax 	      1074	syntax.c	FUNCTION_9
0x4000f43	    0xc70500000000	               mov dword [0x04000f4d], 1	      1076	syntax.c	FUNCTION_9
0x4000f4d	              0x90	                                     nop	      1078	syntax.c	FUNCTION_9
0x4000f4e	              0x5d	                                 pop rbp	      1078	syntax.c	FUNCTION_9
0x4000f4f	              0xc3	                                     ret	      1078	syntax.c	FUNCTION_9
check_keyword_id	functions,0:IF,6:SWITCH,0:FOR,2:CALL,7:ELSE,1:WHILE,0:DO,1	169
0x4005a25	              0x55	                                push rbp	      3379	syntax.c	FUNCTION_44
0x4005a26	          0x4889e5	                            mov rbp, rsp	      3379	syntax.c	FUNCTION_44
0x4005a29	    0x4881ecd00000	                           sub rsp, 0xd0	      3379	syntax.c	FUNCTION_44
0x4005a30	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      3379	syntax.c	FUNCTION_44
0x4005a37	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      3379	syntax.c	FUNCTION_44
0x4005a3d	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      3379	syntax.c	FUNCTION_44
0x4005a44	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	      3379	syntax.c	FUNCTION_44
0x4005a4b	    0x4c898548ffff	              mov qword [rbp - 0xb8], r8	      3379	syntax.c	FUNCTION_44
0x4005a52	    0x4c898d40ffff	              mov qword [rbp - 0xc0], r9	      3379	syntax.c	FUNCTION_44
0x4005a59	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3379	syntax.c	FUNCTION_44
0x4005a5d	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      3379	syntax.c	FUNCTION_44
0x4005a64	    0x64488b042528	                mov rax, qword fs:[0x28]	      3379	syntax.c	FUNCTION_44
0x4005a6d	        0x488945f8	                mov qword [rbp - 8], rax	      3379	syntax.c	FUNCTION_44
0x4005a71	            0x31c0	                            xor eax, eax	      3379	syntax.c	FUNCTION_44
0x4005a73	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      3390	syntax.c	FUNCTION_44
0x4005a79	          0x4863d0	                         movsxd rdx, eax	      3390	syntax.c	FUNCTION_44
0x4005a7c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3390	syntax.c	FUNCTION_44
0x4005a83	          0x4801d0	                            add rax, rdx	      3390	syntax.c	FUNCTION_44
0x4005a86	        0x48894588	             mov qword [rbp - 0x78], rax	      3390	syntax.c	FUNCTION_44
0x4005a8a	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	      3391	syntax.c	FUNCTION_44
0x4005a94	    0x8b0500000000	            mov eax, dword [0x04005a9a] 	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005a9a	            0x85c0	                           test eax, eax	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005a9c	            0x7424	                            je 0x4005ac2	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005a9e	    0x488b05000000	            mov rax, qword [0x04005aa5] 	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005aa5	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005aab	          0x4863ca	                         movsxd rcx, edx	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005aae	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005ab2	          0x4801ca	                            add rdx, rcx	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005ab5	          0x4889d7	                            mov rdi, rdx	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005ab8	            0xffd0	                                call rax	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005aba	     0x1857cffffff	             add dword [rbp - 0x84], eax	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005ac0	            0xeb07	                           jmp 0x4005ac9	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4005ac2	    0x83857cffffff	               add dword [rbp - 0x84], 1	      3399	syntax.c	FUNCTION_44	DO_1	ELSE_1
0x4005ac9	    0x488b05000000	            mov rax, qword [0x04005ad0] 	      3401	syntax.c	FUNCTION_44	CALL_1
0x4005ad0	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	      3401	syntax.c	FUNCTION_44	CALL_1
0x4005ad6	          0x4863ca	                         movsxd rcx, edx	      3401	syntax.c	FUNCTION_44	CALL_1
0x4005ad9	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      3401	syntax.c	FUNCTION_44	CALL_1
0x4005add	          0x4801ca	                            add rdx, rcx	      3401	syntax.c	FUNCTION_44	CALL_1
0x4005ae0	          0x4889c6	                            mov rsi, rax	      3401	syntax.c	FUNCTION_44	CALL_1
0x4005ae3	          0x4889d7	                            mov rdi, rdx	      3401	syntax.c	FUNCTION_44	CALL_1
0x4005ae6	      0xe800000000	                          call 0x4005aeb	      3401	syntax.c	FUNCTION_44	CALL_1
0x4005aeb	            0x85c0	                           test eax, eax	      3401	syntax.c	FUNCTION_44	CALL_1
0x4005aed	            0x75a5	                           jne 0x4005a94	      3401	syntax.c	FUNCTION_44	CALL_1
0x4005aef	    0x83bd7cffffff	           cmp dword [rbp - 0x84], 0x50 	      3403	syntax.c	FUNCTION_44	IF_2
0x4005af6	            0x7e0a	                           jle 0x4005b02	      3403	syntax.c	FUNCTION_44	IF_2
0x4005af8	      0xb800000000	                              mov eax, 0	      3404	syntax.c	FUNCTION_44	IF_2
0x4005afd	      0xe9e4010000	                           jmp 0x4005ce6	      3404	syntax.c	FUNCTION_44	IF_2
0x4005b02	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      3410	syntax.c	FUNCTION_44	CALL_2
0x4005b08	          0x4863d0	                         movsxd rdx, eax	      3410	syntax.c	FUNCTION_44	CALL_2
0x4005b0b	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3410	syntax.c	FUNCTION_44	CALL_2
0x4005b0f	        0x488d45a0	                   lea rax, [rbp - 0x60]	      3410	syntax.c	FUNCTION_44	CALL_2
0x4005b13	          0x4889ce	                            mov rsi, rcx	      3410	syntax.c	FUNCTION_44	CALL_2
0x4005b16	          0x4889c7	                            mov rdi, rax	      3410	syntax.c	FUNCTION_44	CALL_2
0x4005b19	      0xe800000000	                          call 0x4005b1e	      3410	syntax.c	FUNCTION_44	CALL_2
0x4005b1e	    0xc78578ffffff	               mov dword [rbp - 0x88], 1	      3417	syntax.c	FUNCTION_44	FOR_1
0x4005b28	      0xe9a7010000	                           jmp 0x4005cd4	      3417	syntax.c	FUNCTION_44	FOR_1
0x4005b2d	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 1	      3419	syntax.c	FUNCTION_44	FOR_1
0x4005b34	            0x7509	                           jne 0x4005b3f	      3419	syntax.c	FUNCTION_44	FOR_1
0x4005b36	    0x488b05000000	            mov rax, qword [0x04005b3d] 	      3419	syntax.c	FUNCTION_44	FOR_1
0x4005b3d	            0xeb0d	                           jmp 0x4005b4c	      3419	syntax.c	FUNCTION_44	FOR_1
0x4005b3f	    0x488b05000000	            mov rax, qword [0x04005b46] 	      3419	syntax.c	FUNCTION_44	FOR_1
0x4005b46	    0x480528010000	                          add rax, 0x128	      3419	syntax.c	FUNCTION_44	FOR_1
0x4005b4c	        0x48894590	             mov qword [rbp - 0x70], rax	      3419	syntax.c	FUNCTION_44	FOR_1
0x4005b50	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4005b54	        0x488b4008	                mov rax, qword [rax + 8]	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4005b58	          0x4885c0	                           test rax, rax	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4005b5b	     0xf846b010000	                            je 0x4005ccc	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4005b61	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 2	      3422	syntax.c	FUNCTION_44	FOR_1	IF_4
0x4005b68	            0x751b	                           jne 0x4005b85	      3422	syntax.c	FUNCTION_44	FOR_1	IF_4
0x4005b6a	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4005b6e	    0x8bb57cffffff	             mov esi, dword [rbp - 0x84]	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4005b74	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4005b78	      0xb951000000	                           mov ecx, 0x51	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4005b7d	          0x4889c7	                            mov rdi, rax	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4005b80	      0xe800000000	                          call 0x4005b85	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4005b85	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4005b89	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4005b8d	          0x4889d6	                            mov rsi, rdx	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4005b90	          0x4889c7	                            mov rdi, rax	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4005b93	      0xe800000000	                          call 0x4005b98	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4005b98	        0x48894598	             mov qword [rbp - 0x68], rax	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4005b9c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4005ba0	        0x488b4008	                mov rax, qword [rax + 8]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4005ba4	          0x4885c0	                           test rax, rax	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4005ba7	     0xf8420010000	                            je 0x4005ccd	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4005bad	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4005bb1	        0x488b4008	                mov rax, qword [rax + 8]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4005bb5	    0x483d00000000	                              cmp rax, 0	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4005bbb	     0xf840c010000	                            je 0x4005ccd	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4005bc1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4005bc5	        0x488b4008	                mov rax, qword [rax + 8]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4005bc9	        0x4883e828	                           sub rax, 0x28	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4005bcd	        0x48894580	             mov qword [rbp - 0x80], rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4005bd1	      0xe9e9000000	                           jmp 0x4005cbf	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4005bd6	    0x488b05000000	            mov rax, qword [0x04005bdd] 	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005bdd	          0x4885c0	                           test rax, rax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005be0	            0x7428	                            je 0x4005c0a	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005be2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4005be6	        0x488d5008	                      lea rdx, [rax + 8]	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4005bea	    0x488b05000000	            mov rax, qword [0x04005bf1] 	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4005bf1	      0xb900000000	                              mov ecx, 0	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4005bf6	          0x4889c6	                            mov rsi, rax	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4005bf9	      0xbf00000000	                              mov edi, 0	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4005bfe	      0xe89e660000	                     call sym.in_id_list	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4005c03	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c05	           0xf95c0	                                setne al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c08	            0xeb4e	                           jmp 0x4005c58	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c0a	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c12	            0x7511	                           jne 0x4005c25	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c14	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3439	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c18	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3439	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c1b	          0x83e001	                              and eax, 1	      3439	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c1e	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c20	           0xf94c0	                                 sete al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c23	            0xeb33	                           jmp 0x4005c58	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c25	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3441	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c29	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3441	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c2c	          0x83e001	                              and eax, 1	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4005c2f	            0x89c1	                            mov ecx, eax	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4005c31	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4005c35	        0x488d5008	                      lea rdx, [rax + 8]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4005c39	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4005c40	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4005c44	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4005c4b	          0x4889c7	                            mov rdi, rax	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4005c4e	      0xe84e660000	                     call sym.in_id_list	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4005c53	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c55	           0xf95c0	                                setne al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c58	            0x84c0	                             test al, al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c5a	            0x7458	                            je 0x4005cb4	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c5c	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c62	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c68	             0x1c2	                            add edx, eax	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c6a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c71	            0x8910	                    mov dword [rax], edx	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c73	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c77	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c7a	          0x4863d0	                         movsxd rdx, eax	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c7d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c84	          0x488910	                    mov qword [rax], rdx	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c87	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c8b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c8f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c96	          0x488910	                    mov qword [rax], rdx	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c99	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005c9d	          0x8b5024	            mov edx, dword [rax + 0x24] 	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005ca0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005ca7	            0x8910	                    mov dword [rax], edx	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005ca9	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005cad	         0xfb7400c	            movzx eax, word [rax + 0xc] 	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005cb1	              0x98	                                    cwde	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005cb2	            0xeb32	                           jmp 0x4005ce6	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4005cb4	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4005cb8	          0x488b00	                    mov rax, qword [rax]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4005cbb	        0x48894580	             mov qword [rbp - 0x80], rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4005cbf	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4005cc4	     0xf850cffffff	                           jne 0x4005bd6	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4005cca	            0xeb01	                           jmp 0x4005ccd	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4005ccc	              0x90	                                     nop	      3421	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4005ccd	    0x838578ffffff	               add dword [rbp - 0x88], 1	      3417	syntax.c	FUNCTION_44	FOR_1
0x4005cd4	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 2	      3417	syntax.c	FUNCTION_44	FOR_1
0x4005cdb	     0xf8e4cfeffff	                           jle 0x4005b2d	      3417	syntax.c	FUNCTION_44	FOR_1
0x4005ce1	      0xb800000000	                              mov eax, 0	      3453	syntax.c	FUNCTION_44
0x4005ce6	        0x488b7df8	                mov rdi, qword [rbp - 8]	      3454	syntax.c	FUNCTION_44
0x4005cea	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3454	syntax.c	FUNCTION_44
0x4005cf3	            0x7405	                            je 0x4005cfa	      3454	syntax.c	FUNCTION_44
0x4005cf5	      0xe800000000	                          call 0x4005cfa	      3454	syntax.c	FUNCTION_44
0x4005cfa	              0xc9	                                   leave	      3454	syntax.c	FUNCTION_44
0x4005cfb	              0xc3	                                     ret	      3454	syntax.c	FUNCTION_44
syn_list_cluster	functions,0:IF,3:SWITCH,0:FOR,0:CALL,8:ELSE,1:WHILE,0:DO,0	76
0x4007980	              0x55	                                push rbp	      4200	syntax.c	FUNCTION_68
0x4007981	          0x4889e5	                            mov rbp, rsp	      4200	syntax.c	FUNCTION_68
0x4007984	        0x4883ec20	                           sub rsp, 0x20	      4200	syntax.c	FUNCTION_68
0x4007988	          0x897dec	             mov dword [rbp - 0x14], edi	      4200	syntax.c	FUNCTION_68
0x400798b	    0xc745fc0f0000	                mov dword [rbp - 4], 0xf	      4201	syntax.c	FUNCTION_68
0x4007992	      0xbf0a000000	                            mov edi, 0xa	      4204	syntax.c	FUNCTION_68	CALL_1
0x4007997	      0xe800000000	                          call 0x400799c	      4204	syntax.c	FUNCTION_68	CALL_1
0x400799c	    0x488b05000000	            mov rax, qword [0x040079a3] 	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079a3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079a7	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079ae	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079b1	          0x4863d0	                         movsxd rdx, eax	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079b4	          0x4889d0	                            mov rax, rdx	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079b7	          0x4801c0	                            add rax, rax	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079ba	          0x4801d0	                            add rax, rdx	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079bd	        0x48c1e003	                              shl rax, 3	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079c1	          0x4801c8	                            add rax, rcx	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079c4	          0x488b00	                    mov rax, qword [rax]	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079c7	          0x4889c7	                            mov rdi, rax	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079ca	      0xe800000000	                          call 0x40079cf	      4205	syntax.c	FUNCTION_68	CALL_2
0x40079cf	    0x8b0500000000	            mov eax, dword [0x040079d5] 	      4207	syntax.c	FUNCTION_68	IF_1
0x40079d5	          0x3b45fc	                cmp eax, dword [rbp - 4]	      4207	syntax.c	FUNCTION_68	IF_1
0x40079d8	            0x7c0c	                            jl 0x40079e6	      4207	syntax.c	FUNCTION_68	IF_1
0x40079da	    0x8b0500000000	            mov eax, dword [0x040079e0] 	      4208	syntax.c	FUNCTION_68	IF_1
0x40079e0	          0x83c001	                              add eax, 1	      4208	syntax.c	FUNCTION_68	IF_1
0x40079e3	          0x8945fc	                mov dword [rbp - 4], eax	      4208	syntax.c	FUNCTION_68	IF_1
0x40079e6	          0x8b45fc	                mov eax, dword [rbp - 4]	      4209	syntax.c	FUNCTION_68	IF_2
0x40079e9	          0x4863d0	                         movsxd rdx, eax	      4209	syntax.c	FUNCTION_68	IF_2
0x40079ec	    0x488b05000000	            mov rax, qword [0x040079f3] 	      4209	syntax.c	FUNCTION_68	IF_2
0x40079f3	          0x4839c2	                            cmp rdx, rax	      4209	syntax.c	FUNCTION_68	IF_2
0x40079f6	            0x7c0d	                            jl 0x4007a05	      4209	syntax.c	FUNCTION_68	IF_2
0x40079f8	    0x488b05000000	            mov rax, qword [0x040079ff] 	      4210	syntax.c	FUNCTION_68	IF_2
0x40079ff	          0x83e801	                              sub eax, 1	      4210	syntax.c	FUNCTION_68	IF_2
0x4007a02	          0x8945fc	                mov dword [rbp - 4], eax	      4210	syntax.c	FUNCTION_68	IF_2
0x4007a05	          0x8b45fc	                mov eax, dword [rbp - 4]	      4212	syntax.c	FUNCTION_68	CALL_3
0x4007a08	            0x89c7	                            mov edi, eax	      4212	syntax.c	FUNCTION_68	CALL_3
0x4007a0a	      0xe800000000	                          call 0x4007a0f	      4212	syntax.c	FUNCTION_68	CALL_3
0x4007a0f	    0x488b05000000	            mov rax, qword [0x04007a16] 	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a16	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a1a	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a21	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a24	          0x4863d0	                         movsxd rdx, eax	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a27	          0x4889d0	                            mov rax, rdx	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a2a	          0x4801c0	                            add rax, rax	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a2d	          0x4801d0	                            add rax, rdx	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a30	        0x48c1e003	                              shl rax, 3	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a34	          0x4801c8	                            add rax, rcx	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a37	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a3b	          0x4885c0	                           test rax, rax	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a3e	            0x7443	                            je 0x4007a83	      4213	syntax.c	FUNCTION_68	IF_3
0x4007a40	    0x8b0d00000000	            mov ecx, dword [0x04007a46] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a46	    0x488b05000000	            mov rax, qword [0x04007a4d] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a4d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a51	    0x488bb0880200	           mov rsi, qword [rax + 0x288] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a58	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a5b	          0x4863d0	                         movsxd rdx, eax	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a5e	          0x4889d0	                            mov rax, rdx	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a61	          0x4801c0	                            add rax, rax	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a64	          0x4801d0	                            add rax, rdx	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a67	        0x48c1e003	                              shl rax, 3	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a6b	          0x4801f0	                            add rax, rsi	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a6e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a72	            0x89ca	                            mov edx, ecx	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a74	          0x4889c6	                            mov rsi, rax	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a77	      0xbf00000000	                              mov edi, 0	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a7c	      0xe821000000	                    call sym.put_id_list	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4007a81	            0xeb1c	                           jmp 0x4007a9f	      4223	syntax.c	FUNCTION_68
0x4007a83	    0x8b0500000000	            mov eax, dword [0x04007a89] 	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_7
0x4007a89	            0x89c6	                            mov esi, eax	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_7
0x4007a8b	      0xbf00000000	                              mov edi, 0	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_7
0x4007a90	      0xe800000000	                          call 0x4007a95	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_7
0x4007a95	      0xbf00000000	                              mov edi, 0	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_8
0x4007a9a	      0xe800000000	                          call 0x4007a9f	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_8
0x4007a9f	              0x90	                                     nop	      4223	syntax.c	FUNCTION_68
0x4007aa0	              0xc9	                                   leave	      4223	syntax.c	FUNCTION_68
0x4007aa1	              0xc3	                                     ret	      4223	syntax.c	FUNCTION_68
syn_stack_apply_changes	functions,1:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	37
0x4001608	              0x55	                                push rbp	      1308	syntax.c	FUNCTION_14
0x4001609	          0x4889e5	                            mov rbp, rsp	      1308	syntax.c	FUNCTION_14
0x400160c	        0x4883ec20	                           sub rsp, 0x20	      1308	syntax.c	FUNCTION_14
0x4001610	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1308	syntax.c	FUNCTION_14
0x4001614	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1311	syntax.c	FUNCTION_14	CALL_1
0x4001618	    0x488d90681700	                 lea rdx, [rax + 0x1768]	      1311	syntax.c	FUNCTION_14	CALL_1
0x400161f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1311	syntax.c	FUNCTION_14	CALL_1
0x4001623	          0x4889c6	                            mov rsi, rax	      1311	syntax.c	FUNCTION_14	CALL_1
0x4001626	          0x4889d7	                            mov rdi, rdx	      1311	syntax.c	FUNCTION_14	CALL_1
0x4001629	      0xe860000000	  call sym.syn_stack_apply_changes_block	      1311	syntax.c	FUNCTION_14	CALL_1
0x400162e	    0x488b05000000	            mov rax, qword [0x04001635] 	      1313	syntax.c	FUNCTION_14
0x4001635	        0x488945f8	                mov qword [rbp - 8], rax	      1313	syntax.c	FUNCTION_14
0x4001639	            0xeb49	                           jmp 0x4001684	      1313	syntax.c	FUNCTION_14
0x400163b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x400163f	        0x488b4008	                mov rax, qword [rax + 8]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4001643	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4001647	            0x752f	                           jne 0x4001678	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4001649	        0x488b45f8	                mov rax, qword [rbp - 8]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x400164d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4001651	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4001655	    0x4881c2681700	                         add rdx, 0x1768	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x400165c	          0x4839d0	                            cmp rax, rdx	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x400165f	            0x7417	                            je 0x4001678	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4001661	        0x488b45f8	                mov rax, qword [rbp - 8]	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4001665	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4001669	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x400166d	          0x4889d6	                            mov rsi, rdx	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4001670	          0x4889c7	                            mov rdi, rax	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4001673	      0xe816000000	  call sym.syn_stack_apply_changes_block	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4001678	        0x488b45f8	                mov rax, qword [rbp - 8]	      1313	syntax.c	FUNCTION_14
0x400167c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1313	syntax.c	FUNCTION_14
0x4001680	        0x488945f8	                mov qword [rbp - 8], rax	      1313	syntax.c	FUNCTION_14
0x4001684	      0x48837df800	                  cmp qword [rbp - 8], 0	      1313	syntax.c	FUNCTION_14
0x4001689	            0x75b0	                           jne 0x400163b	      1313	syntax.c	FUNCTION_14
0x400168b	              0x90	                                     nop	      1318	syntax.c	FUNCTION_14
0x400168c	              0xc9	                                   leave	      1318	syntax.c	FUNCTION_14
0x400168d	              0xc3	                                     ret	      1318	syntax.c	FUNCTION_14
syn_cmd_onoff	functions,0:IF,1:SWITCH,0:FOR,0:CALL,4:ELSE,0:WHILE,0:DO,0	40
0x4006e5d	              0x55	                                push rbp	      3916	syntax.c	FUNCTION_62
0x4006e5e	          0x4889e5	                            mov rbp, rsp	      3916	syntax.c	FUNCTION_62
0x4006e61	        0x4883c480	             add rsp, 0xffffffffffffff80	      3916	syntax.c	FUNCTION_62
0x4006e65	        0x48897d88	             mov qword [rbp - 0x78], rdi	      3916	syntax.c	FUNCTION_62
0x4006e69	        0x48897580	             mov qword [rbp - 0x80], rsi	      3916	syntax.c	FUNCTION_62
0x4006e6d	    0x64488b042528	                mov rax, qword fs:[0x28]	      3916	syntax.c	FUNCTION_62
0x4006e76	        0x488945f8	                mov qword [rbp - 8], rax	      3916	syntax.c	FUNCTION_62
0x4006e7a	            0x31c0	                            xor eax, eax	      3916	syntax.c	FUNCTION_62
0x4006e7c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3919	syntax.c	FUNCTION_62	CALL_1
0x4006e80	          0x488b00	                    mov rax, qword [rax]	      3919	syntax.c	FUNCTION_62	CALL_1
0x4006e83	          0x4889c7	                            mov rdi, rax	      3919	syntax.c	FUNCTION_62	CALL_1
0x4006e86	      0xe800000000	                          call 0x4006e8b	      3919	syntax.c	FUNCTION_62	CALL_1
0x4006e8b	          0x4889c2	                            mov rdx, rax	      3919	syntax.c	FUNCTION_62	CALL_1
0x4006e8e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3919	syntax.c	FUNCTION_62	CALL_1
0x4006e92	        0x48895008	                mov qword [rax + 8], rdx	      3919	syntax.c	FUNCTION_62	CALL_1
0x4006e96	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3920	syntax.c	FUNCTION_62	IF_1
0x4006e9a	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3920	syntax.c	FUNCTION_62	IF_1
0x4006e9d	            0x85c0	                           test eax, eax	      3920	syntax.c	FUNCTION_62	IF_1
0x4006e9f	            0x753c	                           jne 0x4006edd	      3920	syntax.c	FUNCTION_62	IF_1
0x4006ea1	        0x488d4590	                   lea rax, [rbp - 0x70]	      3922	syntax.c	FUNCTION_62	IF_1	CALL_2
0x4006ea5	    0xc700736f2000	               mov dword [rax], 0x206f73	      3922	syntax.c	FUNCTION_62	IF_1	CALL_2
0x4006eab	        0x488d4590	                   lea rax, [rbp - 0x70]	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4006eaf	        0x4883c003	                              add rax, 3	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4006eb3	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4006eb7	          0x4889d1	                            mov rcx, rdx	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4006eba	      0xba00000000	                              mov edx, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4006ebf	      0xbe61000000	                           mov esi, 0x61	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4006ec4	          0x4889c7	                            mov rdi, rax	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4006ec7	      0xb800000000	                              mov eax, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4006ecc	      0xe800000000	                          call 0x4006ed1	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4006ed1	        0x488d4590	                   lea rax, [rbp - 0x70]	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x4006ed5	          0x4889c7	                            mov rdi, rax	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x4006ed8	      0xe800000000	                          call 0x4006edd	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x4006edd	              0x90	                                     nop	      3926	syntax.c	FUNCTION_62
0x4006ede	        0x488b45f8	                mov rax, qword [rbp - 8]	      3926	syntax.c	FUNCTION_62
0x4006ee2	    0x644833042528	                xor rax, qword fs:[0x28]	      3926	syntax.c	FUNCTION_62
0x4006eeb	            0x7405	                            je 0x4006ef2	      3926	syntax.c	FUNCTION_62
0x4006eed	      0xe800000000	                          call 0x4006ef2	      3926	syntax.c	FUNCTION_62
0x4006ef2	              0xc9	                                   leave	      3926	syntax.c	FUNCTION_62
0x4006ef3	              0xc3	                                     ret	      3926	syntax.c	FUNCTION_62
highlight_changed	functions,0:IF,16:SWITCH,1:FOR,5:CALL,19:ELSE,5:WHILE,1:DO,0	324
0x401417a	              0x55	                                push rbp	     10039	syntax.c	FUNCTION_163
0x401417b	          0x4889e5	                            mov rbp, rsp	     10039	syntax.c	FUNCTION_163
0x401417e	        0x4883ec60	                           sub rsp, 0x60	     10039	syntax.c	FUNCTION_163
0x4014182	    0x64488b042528	                mov rax, qword fs:[0x28]	     10039	syntax.c	FUNCTION_163
0x401418b	        0x488945f8	                mov qword [rbp - 8], rax	     10039	syntax.c	FUNCTION_163
0x401418f	            0x31c0	                            xor eax, eax	     10039	syntax.c	FUNCTION_163
0x4014191	    0xc745b8ffffff	     mov dword [rbp - 0x48], 0xffffffff 	     10049	syntax.c	FUNCTION_163
0x4014198	    0xc745bc000000	               mov dword [rbp - 0x44], 0	     10050	syntax.c	FUNCTION_163
0x401419f	    0xc745c0000000	               mov dword [rbp - 0x40], 0	     10052	syntax.c	FUNCTION_163
0x40141a6	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	     10053	syntax.c	FUNCTION_163
0x40141ad	    0xc70500000000	               mov dword [0x040141b7], 0	     10060	syntax.c	FUNCTION_163
0x40141b7	    0xc745ac000000	               mov dword [rbp - 0x54], 0	     10065	syntax.c	FUNCTION_163	FOR_1
0x40141be	            0xeb14	                           jmp 0x40141d4	     10065	syntax.c	FUNCTION_163	FOR_1
0x40141c0	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10066	syntax.c	FUNCTION_163	FOR_1
0x40141c3	            0x4898	                                    cdqe	     10066	syntax.c	FUNCTION_163	FOR_1
0x40141c5	    0xc70485000000	                    mov dword [rax*4], 0	     10066	syntax.c	FUNCTION_163	FOR_1
0x40141d0	        0x8345ac01	               add dword [rbp - 0x54], 1	     10065	syntax.c	FUNCTION_163	FOR_1
0x40141d4	        0x837dac2d	           cmp dword [rbp - 0x54], 0x2d 	     10065	syntax.c	FUNCTION_163	FOR_1
0x40141d8	            0x7ee6	                           jle 0x40141c0	     10065	syntax.c	FUNCTION_163	FOR_1
0x40141da	    0xc745b0000000	               mov dword [rbp - 0x50], 0	     10072	syntax.c	FUNCTION_163	FOR_2
0x40141e1	      0xe976020000	                           jmp 0x401445c	     10072	syntax.c	FUNCTION_163	FOR_2
0x40141e6	        0x837db000	               cmp dword [rbp - 0x50], 0	     10074	syntax.c	FUNCTION_163	FOR_2	IF_1
0x40141ea	            0x740d	                            je 0x40141f9	     10074	syntax.c	FUNCTION_163	FOR_2	IF_1
0x40141ec	    0x488b05000000	            mov rax, qword [0x040141f3] 	     10075	syntax.c	FUNCTION_163	FOR_2	IF_1
0x40141f3	        0x488945d0	             mov qword [rbp - 0x30], rax	     10075	syntax.c	FUNCTION_163	FOR_2	IF_1
0x40141f7	            0xeb09	                           jmp 0x4014202	     10075	syntax.c	FUNCTION_163	FOR_2	IF_1
0x40141f9	      0xe800000000	                          call 0x40141fe	     10077	syntax.c	FUNCTION_163	FOR_2	CALL_1
0x40141fe	        0x488945d0	             mov qword [rbp - 0x30], rax	     10077	syntax.c	FUNCTION_163	FOR_2	CALL_1
0x4014202	      0x48837dd000	               cmp qword [rbp - 0x30], 0	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x4014207	     0xf844a020000	                            je 0x4014457	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x401420d	      0xe934020000	                           jmp 0x4014446	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x4014212	    0xc745ac000000	               mov dword [rbp - 0x54], 0	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x4014219	            0xeb1e	                           jmp 0x4014239	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x401421b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x401421e	            0x4898	                                    cdqe	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x4014220	    0x8b1485000000	                  mov edx, dword [rax*4]	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x4014227	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x401422b	           0xfb600	                   movzx eax, byte [rax]	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x401422e	           0xfb6c0	                           movzx eax, al	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x4014231	            0x39c2	                            cmp edx, eax	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x4014233	            0x740c	                            je 0x4014241	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x4014235	        0x8345ac01	               add dword [rbp - 0x54], 1	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x4014239	        0x837dac2d	           cmp dword [rbp - 0x54], 0x2d 	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x401423d	            0x7edc	                           jle 0x401421b	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x401423f	            0xeb01	                           jmp 0x4014242	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x4014241	              0x90	                                     nop	     10085	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x4014242	      0x488345d001	               add qword [rbp - 0x30], 1	     10086	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x4014247	        0x837dac2e	           cmp dword [rbp - 0x54], 0x2e 	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x401424b	            0x740b	                            je 0x4014258	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x401424d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x4014251	           0xfb600	                   movzx eax, byte [rax]	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x4014254	            0x84c0	                             test al, al	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x4014256	            0x750a	                           jne 0x4014262	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x4014258	      0xb800000000	                              mov eax, 0	     10088	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x401425d	      0xe9e9030000	                           jmp 0x401464b	     10088	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x4014262	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	     10094	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x4014269	      0xe99f010000	                           jmp 0x401440d	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x401426e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x4014272	           0xfb600	                   movzx eax, byte [rax]	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x4014275	            0x3c20	                            cmp al, 0x20	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x4014277	     0xf8484010000	                            je 0x4014401	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x401427d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x4014281	           0xfb600	                   movzx eax, byte [rax]	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x4014284	            0x3c09	                               cmp al, 9	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x4014286	     0xf8475010000	                            je 0x4014401	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x401428c	    0x817db4ff0000	           cmp dword [rbp - 0x4c], 0xff 	     10100	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x4014293	            0x7e0a	                           jle 0x401429f	     10100	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x4014295	      0xb800000000	                              mov eax, 0	     10101	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x401429a	      0xe9ac030000	                           jmp 0x401464b	     10101	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x401429f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142a3	           0xfb600	                   movzx eax, byte [rax]	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142a6	           0xfb6c0	                           movzx eax, al	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142a9	          0x83e82d	                           sub eax, 0x2d	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142ac	          0x83f848	                           cmp eax, 0x48	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142af	     0xf8742010000	                            ja 0x40143f7	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142b5	            0x89c0	                            mov eax, eax	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142b7	    0x488b04c50000	                  mov rax, qword [rax*8]	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142bf	            0xffe0	                                 jmp rax	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142c1	        0x834db402	                or dword [rbp - 0x4c], 2	     10105	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142c5	      0xe93e010000	                           jmp 0x4014408	     10106	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142ca	        0x834db404	                or dword [rbp - 0x4c], 4	     10107	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142ce	      0xe935010000	                           jmp 0x4014408	     10108	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142d3	        0x834db401	                or dword [rbp - 0x4c], 1	     10112	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142d7	      0xe92c010000	                           jmp 0x4014408	     10113	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142dc	        0x834db420	             or dword [rbp - 0x4c], 0x20	     10114	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142e0	      0xe923010000	                           jmp 0x4014408	     10115	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142e5	        0x834db408	                or dword [rbp - 0x4c], 8	     10116	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142e9	      0xe91a010000	                           jmp 0x4014408	     10117	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142ee	        0x834db410	             or dword [rbp - 0x4c], 0x10	     10118	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142f2	      0xe911010000	                           jmp 0x4014408	     10119	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142f7	    0x814db4800000	             or dword [rbp - 0x4c], 0x80	     10120	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40142fe	      0xe905010000	                           jmp 0x4014408	     10121	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4014303	      0x488345d001	               add qword [rbp - 0x30], 1	     10122	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4014308	        0x837db400	               cmp dword [rbp - 0x4c], 0	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x401430c	            0x750b	                           jne 0x4014319	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x401430e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x4014312	           0xfb600	                   movzx eax, byte [rax]	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x4014315	            0x84c0	                             test al, al	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x4014317	            0x750a	                           jne 0x4014323	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x4014319	      0xb800000000	                              mov eax, 0	     10124	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x401431e	      0xe928030000	                           jmp 0x401464b	     10124	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x4014323	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x4014327	      0xbe2c000000	                           mov esi, 0x2c	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x401432c	          0x4889c7	                            mov rdi, rax	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x401432f	      0xe800000000	                          call 0x4014334	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x4014334	        0x488945d8	             mov qword [rbp - 0x28], rax	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x4014338	      0x48837dd800	               cmp qword [rbp - 0x28], 0	     10126	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_8
0x401433d	            0x751a	                           jne 0x4014359	     10126	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_8
0x401433f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x4014343	          0x4889c7	                            mov rdi, rax	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x4014346	      0xe800000000	                          call 0x401434b	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x401434b	          0x4889c2	                            mov rdx, rax	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x401434e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x4014352	          0x4801d0	                            add rax, rdx	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x4014355	        0x488945d8	             mov qword [rbp - 0x28], rax	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x4014359	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x401435d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x4014361	          0x4829c2	                            sub rdx, rax	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x4014364	          0x4889d0	                            mov rax, rdx	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x4014367	            0x89c2	                            mov edx, eax	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x4014369	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x401436d	            0x89d6	                            mov esi, edx	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x401436f	          0x4889c7	                            mov rdi, rax	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x4014372	      0xe800000000	                          call 0x4014377	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x4014377	          0x8945c8	             mov dword [rbp - 0x38], eax	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x401437a	        0x837dc800	               cmp dword [rbp - 0x38], 0	     10129	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x401437e	            0x750a	                           jne 0x401438a	     10129	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x4014380	      0xb800000000	                              mov eax, 0	     10130	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x4014385	      0xe9c1020000	                           jmp 0x401464b	     10130	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x401438a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x401438d	            0x89c7	                            mov edi, eax	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x401438f	      0xe800000000	                          call 0x4014394	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x4014394	          0x8945b4	             mov dword [rbp - 0x4c], eax	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x4014397	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10132	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x401439b	        0x4883e801	                              sub rax, 1	     10132	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x401439f	        0x488945d0	             mov qword [rbp - 0x30], rax	     10132	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40143a3	        0x837dac0e	            cmp dword [rbp - 0x54], 0xe 	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x40143a7	            0x750f	                           jne 0x40143b8	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x40143a9	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x40143ac	            0x89c7	                            mov edi, eax	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x40143ae	      0xe800000000	                          call 0x40143b3	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x40143b3	          0x8945bc	             mov dword [rbp - 0x44], eax	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x40143b6	            0xeb4f	                           jmp 0x4014407	     10145	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40143b8	        0x837dac2c	           cmp dword [rbp - 0x54], 0x2c 	     10137	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x40143bc	            0x750f	                           jne 0x40143cd	     10137	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x40143be	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x40143c1	            0x89c7	                            mov edi, eax	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x40143c3	      0xe800000000	                          call 0x40143c8	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x40143c8	          0x8945c0	             mov dword [rbp - 0x40], eax	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x40143cb	            0xeb3a	                           jmp 0x4014407	     10145	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40143cd	        0x837dac2d	           cmp dword [rbp - 0x54], 0x2d 	     10139	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x40143d1	            0x750f	                           jne 0x40143e2	     10139	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x40143d3	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x40143d6	            0x89c7	                            mov edi, eax	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x40143d8	      0xe800000000	                          call 0x40143dd	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x40143dd	          0x8945c4	             mov dword [rbp - 0x3c], eax	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x40143e0	            0xeb25	                           jmp 0x4014407	     10145	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40143e2	        0x837dac0d	            cmp dword [rbp - 0x54], 0xd 	     10142	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x40143e6	            0x751f	                           jne 0x4014407	     10142	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x40143e8	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x40143eb	            0x89c7	                            mov edi, eax	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x40143ed	      0xe800000000	                          call 0x40143f2	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x40143f2	          0x8945b8	             mov dword [rbp - 0x48], eax	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x40143f5	            0xeb10	                           jmp 0x4014407	     10145	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40143f7	      0xb800000000	                              mov eax, 0	     10146	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x40143fc	      0xe94a020000	                           jmp 0x401464b	     10146	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4014401	              0x90	                                     nop	     10098	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5
0x4014402	            0xeb04	                           jmp 0x4014408	     10098	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5
0x4014404	              0x90	                                     nop	     10111	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4014405	            0xeb01	                           jmp 0x4014408	     10111	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4014407	              0x90	                                     nop	     10145	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4014408	      0x488345d001	               add qword [rbp - 0x30], 1	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x401440d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4014411	           0xfb600	                   movzx eax, byte [rax]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4014414	            0x84c0	                             test al, al	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4014416	            0x740f	                            je 0x4014427	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4014418	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x401441c	           0xfb600	                   movzx eax, byte [rax]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x401441f	            0x3c2c	                            cmp al, 0x2c	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4014421	     0xf8547feffff	                           jne 0x401426e	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4014427	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x401442a	            0x4898	                                    cdqe	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x401442c	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x401442f	    0x891485000000	                  mov dword [rax*4], edx	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x4014436	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x401443a	          0x4889c7	                            mov rdi, rax	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x401443d	      0xe800000000	                          call 0x4014442	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x4014442	        0x488945d0	             mov qword [rbp - 0x30], rax	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x4014446	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x401444a	           0xfb600	                   movzx eax, byte [rax]	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x401444d	            0x84c0	                             test al, al	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x401444f	     0xf85bdfdffff	                           jne 0x4014212	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x4014455	            0xeb01	                           jmp 0x4014458	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x4014457	              0x90	                                     nop	     10079	syntax.c	FUNCTION_163	FOR_2	IF_2
0x4014458	        0x8345b001	               add dword [rbp - 0x50], 1	     10072	syntax.c	FUNCTION_163	FOR_2
0x401445c	        0x837db001	               cmp dword [rbp - 0x50], 1	     10072	syntax.c	FUNCTION_163	FOR_2
0x4014460	     0xf8e80fdffff	                           jle 0x40141e6	     10072	syntax.c	FUNCTION_163	FOR_2
0x4014466	      0xbe1c000000	                           mov esi, 0x1c	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x401446b	      0xbf00000000	                              mov edi, 0	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x4014470	      0xe800000000	                          call 0x4014475	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x4014475	            0x85c0	                           test eax, eax	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x4014477	            0x750a	                           jne 0x4014483	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x4014479	      0xb800000000	                              mov eax, 0	     10168	syntax.c	FUNCTION_163	IF_14
0x401447e	      0xe9c8010000	                           jmp 0x401464b	     10168	syntax.c	FUNCTION_163	IF_14
0x4014483	    0x8b0500000000	            mov eax, dword [0x04014489] 	     10169	syntax.c	FUNCTION_163
0x4014489	          0x8945cc	             mov dword [rbp - 0x34], eax	     10169	syntax.c	FUNCTION_163
0x401448c	        0x837db8ff	cmp dword [rbp - 0x48], 0xffffffffffffffff	     10170	syntax.c	FUNCTION_163	IF_15
0x4014490	            0x7579	                           jne 0x401450b	     10170	syntax.c	FUNCTION_163	IF_15
0x4014492	    0x488b0d000000	            mov rcx, qword [0x04014499] 	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x4014499	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x401449c	          0x4863d0	                         movsxd rdx, eax	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x401449f	          0x4889d0	                            mov rax, rdx	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144a2	        0x48c1e003	                              shl rax, 3	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144a6	          0x4801d0	                            add rax, rdx	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144a9	          0x4801c0	                            add rax, rax	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144ac	          0x4801d0	                            add rax, rdx	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144af	        0x48c1e003	                              shl rax, 3	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144b3	    0x480508100000	                         add rax, 0x1008	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144b9	          0x4801c8	                            add rax, rcx	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144bc	      0xba98000000	                           mov edx, 0x98	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144c1	      0xbe00000000	                              mov esi, 0	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144c6	          0x4889c7	                            mov rdi, rax	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144c9	      0xe800000000	                          call 0x40144ce	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40144ce	    0x488b0d000000	            mov rcx, qword [0x040144d5] 	     10175	syntax.c	FUNCTION_163	IF_15
0x40144d5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10175	syntax.c	FUNCTION_163	IF_15
0x40144d8	          0x4863d0	                         movsxd rdx, eax	     10175	syntax.c	FUNCTION_163	IF_15
0x40144db	          0x4889d0	                            mov rax, rdx	     10175	syntax.c	FUNCTION_163	IF_15
0x40144de	        0x48c1e003	                              shl rax, 3	     10175	syntax.c	FUNCTION_163	IF_15
0x40144e2	          0x4801d0	                            add rax, rdx	     10175	syntax.c	FUNCTION_163	IF_15
0x40144e5	          0x4801c0	                            add rax, rax	     10175	syntax.c	FUNCTION_163	IF_15
0x40144e8	          0x4801d0	                            add rax, rdx	     10175	syntax.c	FUNCTION_163	IF_15
0x40144eb	        0x48c1e003	                              shl rax, 3	     10175	syntax.c	FUNCTION_163	IF_15
0x40144ef	    0x4805b00a0000	                          add rax, 0xab0	     10175	syntax.c	FUNCTION_163	IF_15
0x40144f5	        0x488d1401	                    lea rdx, [rcx + rax]	     10175	syntax.c	FUNCTION_163	IF_15
0x40144f9	    0x8b0500000000	            mov eax, dword [0x040144ff] 	     10175	syntax.c	FUNCTION_163	IF_15
0x40144ff	          0x894214	             mov dword [rdx + 0x14], eax	     10175	syntax.c	FUNCTION_163	IF_15
0x4014502	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10176	syntax.c	FUNCTION_163	IF_15
0x4014505	          0x83c013	                           add eax, 0x13	     10176	syntax.c	FUNCTION_163	IF_15
0x4014508	          0x8945b8	             mov dword [rbp - 0x48], eax	     10176	syntax.c	FUNCTION_163	IF_15
0x401450b	    0xc745b0000000	               mov dword [rbp - 0x50], 0	     10179	syntax.c	FUNCTION_163	FOR_5
0x4014512	      0xe91c010000	                           jmp 0x4014633	     10179	syntax.c	FUNCTION_163	FOR_5
0x4014517	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_14
0x401451a	          0x8d5001	                      lea edx, [rax + 1]	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_14
0x401451d	        0x488d45e0	                   lea rax, [rbp - 0x20]	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_14
0x4014521	      0xbe00000000	                              mov esi, 0	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_14
0x4014526	          0x4889c7	                            mov rdi, rax	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_14
0x4014529	      0xb800000000	                              mov eax, 0	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_14
0x401452e	      0xe800000000	                          call 0x4014533	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_14
0x4014533	        0x488d45e0	                   lea rax, [rbp - 0x20]	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_15
0x4014537	          0x4889c7	                            mov rdi, rax	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_15
0x401453a	      0xe800000000	                          call 0x401453f	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_15
0x401453f	          0x8945c8	             mov dword [rbp - 0x38], eax	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_15
0x4014542	        0x837dc800	               cmp dword [rbp - 0x38], 0	     10183	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4014546	            0x7545	                           jne 0x401458d	     10183	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4014548	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10185	syntax.c	FUNCTION_163	FOR_5	IF_16
0x401454b	            0x4898	                                    cdqe	     10185	syntax.c	FUNCTION_163	FOR_5	IF_16
0x401454d	    0xc70485000000	                    mov dword [rax*4], 0	     10185	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4014558	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10187	syntax.c	FUNCTION_163	FOR_5	IF_16
0x401455b	            0x4898	                                    cdqe	     10187	syntax.c	FUNCTION_163	FOR_5	IF_16
0x401455d	    0xc70485000000	                    mov dword [rax*4], 0	     10187	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4014568	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10189	syntax.c	FUNCTION_163	FOR_5	IF_16
0x401456b	            0x4898	                                    cdqe	     10189	syntax.c	FUNCTION_163	FOR_5	IF_16
0x401456d	    0xc70485000000	                    mov dword [rax*4], 0	     10189	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4014578	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x401457b	            0x4898	                                    cdqe	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x401457d	    0xc70485000000	                    mov dword [rax*4], 0	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4014588	      0xe9a2000000	                           jmp 0x401462f	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x401458d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x4014590	            0x89c7	                            mov edi, eax	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x4014592	      0xe800000000	                          call 0x4014597	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x4014597	            0x89c2	                            mov edx, eax	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x4014599	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x401459c	            0x4898	                                    cdqe	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x401459e	    0x891485000000	                  mov dword [rax*4], edx	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x40145a5	          0x8b7db0	             mov edi, dword [rbp - 0x50]	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145a8	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145ab	          0x8b55bc	             mov edx, dword [rbp - 0x44]	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145ae	          0x8b75b8	             mov esi, dword [rbp - 0x48]	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145b1	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145b4	        0x4883ec08	                              sub rsp, 8	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145b8	      0x6800000000	                                  push 0	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145bd	    0x41b90e000000	                            mov r9d, 0xe	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145c3	          0x4189f8	                            mov r8d, edi	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145c6	            0x89c7	                            mov edi, eax	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145c8	      0xe8e9f1ffff	                call sym.combine_stl_hlt	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145cd	        0x4883c410	                           add rsp, 0x10	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40145d1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145d4	          0x8d4809	                      lea ecx, [rax + 9]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145d7	          0x8b7db0	             mov edi, dword [rbp - 0x50]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145da	          0x8b55c0	             mov edx, dword [rbp - 0x40]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145dd	          0x8b75b8	             mov esi, dword [rbp - 0x48]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145e0	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145e3	        0x4883ec08	                              sub rsp, 8	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145e7	      0x6800000000	                                  push 0	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145ec	    0x41b92c000000	                           mov r9d, 0x2c	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145f2	          0x4189f8	                            mov r8d, edi	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145f5	            0x89c7	                            mov edi, eax	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145f7	      0xe8baf1ffff	                call sym.combine_stl_hlt	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40145fc	        0x4883c410	                           add rsp, 0x10	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x4014600	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x4014603	          0x8d4812	                   lea ecx, [rax + 0x12]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x4014606	          0x8b7db0	             mov edi, dword [rbp - 0x50]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x4014609	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x401460c	          0x8b75b8	             mov esi, dword [rbp - 0x48]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x401460f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x4014612	        0x4883ec08	                              sub rsp, 8	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x4014616	      0x6800000000	                                  push 0	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x401461b	    0x41b92d000000	                           mov r9d, 0x2d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x4014621	          0x4189f8	                            mov r8d, edi	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x4014624	            0x89c7	                            mov edi, eax	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x4014626	      0xe88bf1ffff	                call sym.combine_stl_hlt	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x401462b	        0x4883c410	                           add rsp, 0x10	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x401462f	        0x8345b001	               add dword [rbp - 0x50], 1	     10179	syntax.c	FUNCTION_163	FOR_5
0x4014633	        0x837db008	               cmp dword [rbp - 0x50], 8	     10179	syntax.c	FUNCTION_163	FOR_5
0x4014637	     0xf8edafeffff	                           jle 0x4014517	     10179	syntax.c	FUNCTION_163	FOR_5
0x401463d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10210	syntax.c	FUNCTION_163
0x4014640	    0x890500000000	            mov dword [0x04014646], eax 	     10210	syntax.c	FUNCTION_163
0x4014646	      0xb801000000	                              mov eax, 1	     10215	syntax.c	FUNCTION_163
0x401464b	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10216	syntax.c	FUNCTION_163
0x401464f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10216	syntax.c	FUNCTION_163
0x4014658	            0x7405	                            je 0x401465f	     10216	syntax.c	FUNCTION_163
0x401465a	      0xe800000000	                          call 0x401465f	     10216	syntax.c	FUNCTION_163
0x401465f	              0xc9	                                   leave	     10216	syntax.c	FUNCTION_163
0x4014660	              0xc3	                                     ret	     10216	syntax.c	FUNCTION_163
syn_set_timeout	functions,0:IF,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	8
0x4000040	              0x55	                                push rbp	       501	syntax.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       501	syntax.c	FUNCTION_1
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       501	syntax.c	FUNCTION_1
0x4000048	        0x488b45f8	                mov rax, qword [rbp - 8]	       502	syntax.c	FUNCTION_1
0x400004c	    0x488905000000	            mov qword [0x04000053], rax 	       502	syntax.c	FUNCTION_1
0x4000053	              0x90	                                     nop	       503	syntax.c	FUNCTION_1
0x4000054	              0x5d	                                 pop rbp	       503	syntax.c	FUNCTION_1
0x4000055	              0xc3	                                     ret	       503	syntax.c	FUNCTION_1
init_highlight	functions,0:IF,10:SWITCH,0:FOR,2:CALL,13:ELSE,4:WHILE,0:DO,0	138
0x400d416	              0x55	                                push rbp	      7116	syntax.c	FUNCTION_113
0x400d417	          0x4889e5	                            mov rbp, rsp	      7116	syntax.c	FUNCTION_113
0x400d41a	        0x4883ec30	                           sub rsp, 0x30	      7116	syntax.c	FUNCTION_113
0x400d41e	          0x897ddc	             mov dword [rbp - 0x24], edi	      7116	syntax.c	FUNCTION_113
0x400d421	          0x8975d8	             mov dword [rbp - 0x28], esi	      7116	syntax.c	FUNCTION_113
0x400d424	      0xbf00000000	                              mov edi, 0	      7127	syntax.c	FUNCTION_113	CALL_1
0x400d429	      0xe800000000	                          call 0x400d42e	      7127	syntax.c	FUNCTION_113	CALL_1
0x400d42e	        0x488945f0	             mov qword [rbp - 0x10], rax	      7127	syntax.c	FUNCTION_113	CALL_1
0x400d432	      0x48837df000	               cmp qword [rbp - 0x10], 0	      7128	syntax.c	FUNCTION_113	IF_1
0x400d437	            0x743c	                            je 0x400d475	      7128	syntax.c	FUNCTION_113	IF_1
0x400d439	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x400d43d	          0x4889c7	                            mov rdi, rax	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x400d440	      0xe800000000	                          call 0x400d445	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x400d445	        0x488945f8	                mov qword [rbp - 8], rax	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x400d449	      0x48837df800	                  cmp qword [rbp - 8], 0	      7135	syntax.c	FUNCTION_113	IF_1	IF_2
0x400d44e	            0x7425	                            je 0x400d475	      7135	syntax.c	FUNCTION_113	IF_1	IF_2
0x400d450	        0x488b45f8	                mov rax, qword [rbp - 8]	      7137	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_3
0x400d454	          0x4889c7	                            mov rdi, rax	      7137	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_3
0x400d457	      0xe800000000	                          call 0x400d45c	      7137	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_3
0x400d45c	          0x8945e4	             mov dword [rbp - 0x1c], eax	      7137	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_3
0x400d45f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400d463	          0x4889c7	                            mov rdi, rax	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400d466	      0xe800000000	                          call 0x400d46b	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400d46b	        0x837de401	               cmp dword [rbp - 0x1c], 1	      7139	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0x400d46f	     0xf84b8010000	                            je 0x400d62d	      7139	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0x400d475	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      7149	syntax.c	FUNCTION_113	IF_4
0x400d479	            0x7466	                            je 0x400d4e1	      7149	syntax.c	FUNCTION_113	IF_4
0x400d47b	    0xc70500000000	               mov dword [0x0400d485], 1	      7151	syntax.c	FUNCTION_113	IF_4
0x400d485	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      7152	syntax.c	FUNCTION_113	IF_4
0x400d48d	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d494	            0xeb2d	                           jmp 0x400d4c3	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d496	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d499	            0x4898	                                    cdqe	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d49b	    0x488d14c50000	                        lea rdx, [rax*8]	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d4a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d4a7	          0x4801d0	                            add rax, rdx	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d4aa	          0x488b00	                    mov rax, qword [rax]	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d4ad	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d4b0	      0xba01000000	                              mov edx, 1	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d4b5	            0x89ce	                            mov esi, ecx	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d4b7	          0x4889c7	                            mov rdi, rax	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d4ba	      0xe800000000	                          call 0x400d4bf	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400d4bf	        0x8345e001	               add dword [rbp - 0x20], 1	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d4c3	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d4c6	            0x4898	                                    cdqe	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d4c8	    0x488d14c50000	                        lea rdx, [rax*8]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d4d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d4d4	          0x4801d0	                            add rax, rdx	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d4d7	          0x488b00	                    mov rax, qword [rax]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d4da	          0x4885c0	                           test rax, rax	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d4dd	            0x75b7	                           jne 0x400d496	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d4df	            0xeb0e	                           jmp 0x400d4ef	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400d4e1	    0x8b0500000000	            mov eax, dword [0x0400d4e7] 	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x400d4e7	            0x85c0	                           test eax, eax	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x400d4e9	     0xf8441010000	                            je 0x400d630	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x400d4ef	    0x488b05000000	            mov rax, qword [0x0400d4f6] 	      7162	syntax.c	FUNCTION_113	IF_6
0x400d4f6	           0xfb600	                   movzx eax, byte [rax]	      7162	syntax.c	FUNCTION_113	IF_6
0x400d4f9	            0x3c6c	                            cmp al, 0x6c	      7162	syntax.c	FUNCTION_113	IF_6
0x400d4fb	            0x750a	                           jne 0x400d507	      7162	syntax.c	FUNCTION_113	IF_6
0x400d4fd	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      7163	syntax.c	FUNCTION_113	IF_6
0x400d505	            0xeb08	                           jmp 0x400d50f	      7163	syntax.c	FUNCTION_113	IF_6
0x400d507	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      7165	syntax.c	FUNCTION_113	ELSE_2
0x400d50f	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d516	            0xeb2d	                           jmp 0x400d545	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d518	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d51b	            0x4898	                                    cdqe	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d51d	    0x488d14c50000	                        lea rdx, [rax*8]	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d525	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d529	          0x4801d0	                            add rax, rdx	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d52c	          0x488b00	                    mov rax, qword [rax]	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d52f	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d532	      0xba01000000	                              mov edx, 1	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d537	            0x89ce	                            mov esi, ecx	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d539	          0x4889c7	                            mov rdi, rax	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d53c	      0xe800000000	                          call 0x400d541	      7167	syntax.c	FUNCTION_113	CALL_6
0x400d541	        0x8345e001	               add dword [rbp - 0x20], 1	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d545	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d548	            0x4898	                                    cdqe	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d54a	    0x488d14c50000	                        lea rdx, [rax*8]	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d552	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d556	          0x4801d0	                            add rax, rdx	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d559	          0x488b00	                    mov rax, qword [rax]	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d55c	          0x4885c0	                           test rax, rax	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d55f	            0x75b7	                           jne 0x400d518	      7166	syntax.c	FUNCTION_113	FOR_2
0x400d561	    0x8b0500000000	            mov eax, dword [0x0400d567] 	      7174	syntax.c	FUNCTION_113	IF_7
0x400d567	          0x83f808	                              cmp eax, 8	      7174	syntax.c	FUNCTION_113	IF_7
0x400d56a	            0x7e2e	                           jle 0x400d59a	      7174	syntax.c	FUNCTION_113	IF_7
0x400d56c	    0x488b05000000	            mov rax, qword [0x0400d573] 	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d573	           0xfb600	                   movzx eax, byte [rax]	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d576	            0x3c6c	                            cmp al, 0x6c	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d578	            0x7507	                           jne 0x400d581	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d57a	      0xb800000000	                              mov eax, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d57f	            0xeb05	                           jmp 0x400d586	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d581	      0xb800000000	                              mov eax, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d586	      0xba01000000	                              mov edx, 1	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d58b	      0xbe00000000	                              mov esi, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d590	          0x4889c7	                            mov rdi, rax	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d593	      0xe800000000	                          call 0x400d598	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d598	            0xeb36	                           jmp 0x400d5d0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400d59a	      0xba01000000	                              mov edx, 1	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400d59f	      0xbe00000000	                              mov esi, 0	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400d5a4	      0xbf00000000	                              mov edi, 0	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400d5a9	      0xe800000000	                          call 0x400d5ae	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400d5ae	    0x488b05000000	            mov rax, qword [0x0400d5b5] 	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x400d5b5	           0xfb600	                   movzx eax, byte [rax]	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x400d5b8	            0x3c6c	                            cmp al, 0x6c	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x400d5ba	            0x7514	                           jne 0x400d5d0	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x400d5bc	      0xba01000000	                              mov edx, 1	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400d5c1	      0xbe00000000	                              mov esi, 0	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400d5c6	      0xbf00000000	                              mov edi, 0	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400d5cb	      0xe800000000	                          call 0x400d5d0	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400d5d0	      0xbf00000000	                              mov edi, 0	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400d5d5	      0xe800000000	                          call 0x400d5da	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400d5da	          0x4885c0	                           test rax, rax	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400d5dd	            0x7452	                            je 0x400d631	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400d5df	    0x8b0500000000	            mov eax, dword [0x0400d5e5] 	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x400d5e5	          0x83f804	                              cmp eax, 4	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x400d5e8	            0x7e14	                           jle 0x400d5fe	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x400d5ea	      0xbf00000000	                              mov edi, 0	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d5ef	      0xe800000000	                          call 0x400d5f4	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d5f4	          0x4889c7	                            mov rdi, rax	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d5f7	      0xe800000000	                          call 0x400d5fc	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d5fc	            0xeb33	                           jmp 0x400d631	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400d5fe	    0x8b0500000000	            mov eax, dword [0x0400d604] 	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400d604	          0x83c001	                              add eax, 1	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400d607	    0x890500000000	            mov dword [0x0400d60d], eax 	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400d60d	      0xbe01000000	                              mov esi, 1	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x400d612	      0xbf00000000	                              mov edi, 0	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x400d617	      0xe800000000	                          call 0x400d61c	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x400d61c	    0x8b0500000000	            mov eax, dword [0x0400d622] 	      7200	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400d622	          0x83e801	                              sub eax, 1	      7200	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400d625	    0x890500000000	            mov dword [0x0400d62b], eax 	      7200	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400d62b	            0xeb04	                           jmp 0x400d631	      7200	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400d62d	              0x90	                                     nop	      7140	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0x400d62e	            0xeb01	                           jmp 0x400d631	      7140	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0x400d630	              0x90	                                     nop	      7160	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x400d631	              0xc9	                                   leave	      7204	syntax.c	FUNCTION_113
0x400d632	              0xc3	                                     ret	      7204	syntax.c	FUNCTION_113
hl_set_font_name	functions,0:IF,1:SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,0:DO,0	44
0x4010c7c	              0x55	                                push rbp	      8540	syntax.c	FUNCTION_124
0x4010c7d	          0x4889e5	                            mov rbp, rsp	      8540	syntax.c	FUNCTION_124
0x4010c80	              0x53	                                push rbx	      8540	syntax.c	FUNCTION_124
0x4010c81	        0x4883ec28	                           sub rsp, 0x28	      8540	syntax.c	FUNCTION_124
0x4010c85	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      8540	syntax.c	FUNCTION_124
0x4010c89	      0xbf00000000	                              mov edi, 0	      8543	syntax.c	FUNCTION_124	CALL_1
0x4010c8e	      0xe800000000	                          call 0x4010c93	      8543	syntax.c	FUNCTION_124	CALL_1
0x4010c93	          0x8945ec	             mov dword [rbp - 0x14], eax	      8543	syntax.c	FUNCTION_124	CALL_1
0x4010c96	        0x837dec00	               cmp dword [rbp - 0x14], 0	      8544	syntax.c	FUNCTION_124	IF_1
0x4010c9a	            0x7e71	                           jle 0x4010d0d	      8544	syntax.c	FUNCTION_124	IF_1
0x4010c9c	    0x488b0d000000	            mov rcx, qword [0x04010ca3] 	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010ca3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010ca6	          0x4863d0	                         movsxd rdx, eax	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010ca9	          0x4889d0	                            mov rax, rdx	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010cac	        0x48c1e003	                              shl rax, 3	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010cb0	          0x4801d0	                            add rax, rdx	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010cb3	          0x4801c0	                            add rax, rax	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010cb6	          0x4801d0	                            add rax, rdx	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010cb9	        0x48c1e003	                              shl rax, 3	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010cbd	    0x482d98000000	                           sub rax, 0x98	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010cc3	          0x4801c8	                            add rax, rcx	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010cc6	        0x488b4060	            mov rax, qword [rax + 0x60] 	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010cca	          0x4889c7	                            mov rdi, rax	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010ccd	      0xe800000000	                          call 0x4010cd2	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4010cd2	    0x488b0d000000	            mov rcx, qword [0x04010cd9] 	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010cd9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010cdc	          0x4863d0	                         movsxd rdx, eax	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010cdf	          0x4889d0	                            mov rax, rdx	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010ce2	        0x48c1e003	                              shl rax, 3	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010ce6	          0x4801d0	                            add rax, rdx	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010ce9	          0x4801c0	                            add rax, rax	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010cec	          0x4801d0	                            add rax, rdx	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010cef	        0x48c1e003	                              shl rax, 3	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010cf3	    0x482d98000000	                           sub rax, 0x98	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010cf9	        0x488d1c01	                    lea rbx, [rcx + rax]	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010cfd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010d01	          0x4889c7	                            mov rdi, rax	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010d04	      0xe800000000	                          call 0x4010d09	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010d09	        0x48894360	             mov qword [rbx + 0x60], rax	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4010d0d	              0x90	                                     nop	      8549	syntax.c	FUNCTION_124
0x4010d0e	        0x4883c428	                           add rsp, 0x28	      8549	syntax.c	FUNCTION_124
0x4010d12	              0x5b	                                 pop rbx	      8549	syntax.c	FUNCTION_124
0x4010d13	              0x5d	                                 pop rbp	      8549	syntax.c	FUNCTION_124
0x4010d14	              0xc3	                                     ret	      8549	syntax.c	FUNCTION_124
syn_cmd_spell	functions,0:IF,7:SWITCH,0:FOR,0:CALL,14:ELSE,6:WHILE,0:DO,0	118
0x4005f8e	              0x55	                                push rbp	      3521	syntax.c	FUNCTION_47
0x4005f8f	          0x4889e5	                            mov rbp, rsp	      3521	syntax.c	FUNCTION_47
0x4005f92	        0x4883ec20	                           sub rsp, 0x20	      3521	syntax.c	FUNCTION_47
0x4005f96	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3521	syntax.c	FUNCTION_47
0x4005f9a	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3521	syntax.c	FUNCTION_47
0x4005f9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3522	syntax.c	FUNCTION_47
0x4005fa1	          0x488b00	                    mov rax, qword [rax]	      3522	syntax.c	FUNCTION_47
0x4005fa4	        0x488945f0	             mov qword [rbp - 0x10], rax	      3522	syntax.c	FUNCTION_47
0x4005fa8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3525	syntax.c	FUNCTION_47	CALL_1
0x4005fac	          0x4889c7	                            mov rdi, rax	      3525	syntax.c	FUNCTION_47	CALL_1
0x4005faf	      0xe800000000	                          call 0x4005fb4	      3525	syntax.c	FUNCTION_47	CALL_1
0x4005fb4	          0x4889c2	                            mov rdx, rax	      3525	syntax.c	FUNCTION_47	CALL_1
0x4005fb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3525	syntax.c	FUNCTION_47	CALL_1
0x4005fbb	        0x48895008	                mov qword [rax + 8], rdx	      3525	syntax.c	FUNCTION_47	CALL_1
0x4005fbf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3526	syntax.c	FUNCTION_47	IF_1
0x4005fc3	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3526	syntax.c	FUNCTION_47	IF_1
0x4005fc6	            0x85c0	                           test eax, eax	      3526	syntax.c	FUNCTION_47	IF_1
0x4005fc8	     0xf8592010000	                           jne 0x4006160	      3526	syntax.c	FUNCTION_47	IF_1
0x4005fce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3529	syntax.c	FUNCTION_47	CALL_2
0x4005fd2	          0x4889c7	                            mov rdi, rax	      3529	syntax.c	FUNCTION_47	CALL_2
0x4005fd5	      0xe800000000	                          call 0x4005fda	      3529	syntax.c	FUNCTION_47	CALL_2
0x4005fda	        0x488945f8	                mov qword [rbp - 8], rax	      3529	syntax.c	FUNCTION_47	CALL_2
0x4005fde	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3530	syntax.c	FUNCTION_47	IF_2
0x4005fe2	           0xfb600	                   movzx eax, byte [rax]	      3530	syntax.c	FUNCTION_47	IF_2
0x4005fe5	            0x84c0	                             test al, al	      3530	syntax.c	FUNCTION_47	IF_2
0x4005fe7	            0x7571	                           jne 0x400605a	      3530	syntax.c	FUNCTION_47	IF_2
0x4005fe9	    0x488b05000000	            mov rax, qword [0x04005ff0] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4005ff0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4005ff4	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4005ffa	          0x83f801	                              cmp eax, 1	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4005ffd	            0x7517	                           jne 0x4006016	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4005fff	      0xbf00000000	                              mov edi, 0	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4006004	      0xe800000000	                          call 0x4006009	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4006009	          0x4889c7	                            mov rdi, rax	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x400600c	      0xe800000000	                          call 0x4006011	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4006011	      0xe934010000	                           jmp 0x400614a	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4006016	    0x488b05000000	            mov rax, qword [0x0400601d] 	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x400601d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4006021	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4006027	          0x83f802	                              cmp eax, 2	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x400602a	            0x7517	                           jne 0x4006043	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x400602c	      0xbf00000000	                              mov edi, 0	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4006031	      0xe800000000	                          call 0x4006036	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4006036	          0x4889c7	                            mov rdi, rax	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4006039	      0xe800000000	                          call 0x400603e	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x400603e	      0xe907010000	                           jmp 0x400614a	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4006043	      0xbf00000000	                              mov edi, 0	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4006048	      0xe800000000	                          call 0x400604d	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x400604d	          0x4889c7	                            mov rdi, rax	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4006050	      0xe800000000	                          call 0x4006055	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4006055	      0xe9f0000000	                           jmp 0x400614a	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x400605a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x400605e	      0xba08000000	                              mov edx, 8	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4006063	      0xbe00000000	                              mov esi, 0	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4006068	          0x4889c7	                            mov rdi, rax	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x400606b	      0xe800000000	                          call 0x4006070	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4006070	            0x85c0	                           test eax, eax	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4006072	            0x752e	                           jne 0x40060a2	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4006074	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4006078	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x400607c	          0x4829c2	                            sub rdx, rax	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x400607f	          0x4889d0	                            mov rax, rdx	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4006082	        0x4883f808	                              cmp rax, 8	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4006086	            0x751a	                           jne 0x40060a2	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4006088	    0x488b05000000	            mov rax, qword [0x0400608f] 	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x400608f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4006093	    0xc7805c020000	              mov dword [rax + 0x25c], 1	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x400609d	      0xe9a8000000	                           jmp 0x400614a	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x40060a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060a6	      0xba0a000000	                            mov edx, 0xa	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060ab	      0xbe00000000	                              mov esi, 0	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060b0	          0x4889c7	                            mov rdi, rax	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060b3	      0xe800000000	                          call 0x40060b8	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060b8	            0x85c0	                           test eax, eax	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060ba	            0x752b	                           jne 0x40060e7	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060bc	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060c0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060c4	          0x4829c2	                            sub rdx, rax	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060c7	          0x4889d0	                            mov rax, rdx	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060ca	        0x4883f80a	                            cmp rax, 0xa	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060ce	            0x7517	                           jne 0x40060e7	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x40060d0	    0x488b05000000	            mov rax, qword [0x040060d7] 	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x40060d7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x40060db	    0xc7805c020000	              mov dword [rax + 0x25c], 2	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x40060e5	            0xeb63	                           jmp 0x400614a	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x40060e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x40060eb	      0xba07000000	                              mov edx, 7	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x40060f0	      0xbe00000000	                              mov esi, 0	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x40060f5	          0x4889c7	                            mov rdi, rax	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x40060f8	      0xe800000000	                          call 0x40060fd	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x40060fd	            0x85c0	                           test eax, eax	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x40060ff	            0x752b	                           jne 0x400612c	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4006101	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4006105	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4006109	          0x4829c2	                            sub rdx, rax	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x400610c	          0x4889d0	                            mov rax, rdx	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x400610f	        0x4883f807	                              cmp rax, 7	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4006113	            0x7517	                           jne 0x400612c	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4006115	    0x488b05000000	            mov rax, qword [0x0400611c] 	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x400611c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4006120	    0xc7805c020000	              mov dword [rax + 0x25c], 0	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x400612a	            0xeb1e	                           jmp 0x400614a	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x400612c	      0xbf00000000	                              mov edi, 0	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4006131	      0xe800000000	                          call 0x4006136	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4006136	          0x4889c2	                            mov rdx, rax	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4006139	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x400613d	          0x4889c6	                            mov rsi, rax	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4006140	          0x4889d7	                            mov rdi, rdx	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4006143	      0xe800000000	                          call 0x4006148	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4006148	            0xeb17	                           jmp 0x4006161	      3548	syntax.c	FUNCTION_47	ELSE_6
0x400614a	    0x488b05000000	            mov rax, qword [0x04006151] 	      3552	syntax.c	FUNCTION_47	CALL_14
0x4006151	      0xbe28000000	                           mov esi, 0x28	      3552	syntax.c	FUNCTION_47	CALL_14
0x4006156	          0x4889c7	                            mov rdi, rax	      3552	syntax.c	FUNCTION_47	CALL_14
0x4006159	      0xe800000000	                          call 0x400615e	      3552	syntax.c	FUNCTION_47	CALL_14
0x400615e	            0xeb01	                           jmp 0x4006161	      3552	syntax.c	FUNCTION_47	CALL_14
0x4006160	              0x90	                                     nop	      3527	syntax.c	FUNCTION_47	IF_1
0x4006161	              0xc9	                                   leave	      3553	syntax.c	FUNCTION_47
0x4006162	              0xc3	                                     ret	      3553	syntax.c	FUNCTION_47
hl_set_fg_color_name	functions,0:IF,2:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	41
0x4010da7	              0x55	                                push rbp	      8579	syntax.c	FUNCTION_126
0x4010da8	          0x4889e5	                            mov rbp, rsp	      8579	syntax.c	FUNCTION_126
0x4010dab	        0x4883ec20	                           sub rsp, 0x20	      8579	syntax.c	FUNCTION_126
0x4010daf	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8579	syntax.c	FUNCTION_126
0x4010db3	      0x48837de800	               cmp qword [rbp - 0x18], 0	      8582	syntax.c	FUNCTION_126	IF_1
0x4010db8	            0x747c	                            je 0x4010e36	      8582	syntax.c	FUNCTION_126	IF_1
0x4010dba	      0xbf00000000	                              mov edi, 0	      8584	syntax.c	FUNCTION_126	IF_1	CALL_1
0x4010dbf	      0xe800000000	                          call 0x4010dc4	      8584	syntax.c	FUNCTION_126	IF_1	CALL_1
0x4010dc4	          0x8945fc	                mov dword [rbp - 4], eax	      8584	syntax.c	FUNCTION_126	IF_1	CALL_1
0x4010dc7	        0x837dfc00	                  cmp dword [rbp - 4], 0	      8585	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010dcb	            0x7e69	                           jle 0x4010e36	      8585	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010dcd	    0x488b0d000000	            mov rcx, qword [0x04010dd4] 	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010dd4	          0x8b45fc	                mov eax, dword [rbp - 4]	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010dd7	          0x4863d0	                         movsxd rdx, eax	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010dda	          0x4889d0	                            mov rax, rdx	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010ddd	        0x48c1e003	                              shl rax, 3	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010de1	          0x4801d0	                            add rax, rdx	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010de4	          0x4801c0	                            add rax, rax	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010de7	          0x4801d0	                            add rax, rdx	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010dea	        0x48c1e003	                              shl rax, 3	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010dee	    0x482d98000000	                           sub rax, 0x98	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010df4	          0x4801c8	                            add rax, rcx	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010df7	        0x488b4070	            mov rax, qword [rax + 0x70] 	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010dfb	          0x4889c7	                            mov rdi, rax	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010dfe	      0xe800000000	                          call 0x4010e03	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4010e03	    0x488b0d000000	            mov rcx, qword [0x04010e0a] 	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e0a	          0x8b45fc	                mov eax, dword [rbp - 4]	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e0d	          0x4863d0	                         movsxd rdx, eax	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e10	          0x4889d0	                            mov rax, rdx	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e13	        0x48c1e003	                              shl rax, 3	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e17	          0x4801d0	                            add rax, rdx	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e1a	          0x4801c0	                            add rax, rax	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e1d	          0x4801d0	                            add rax, rdx	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e20	        0x48c1e003	                              shl rax, 3	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e24	    0x482d98000000	                           sub rax, 0x98	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e2a	        0x488d1401	                    lea rdx, [rcx + rax]	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e32	        0x48894270	             mov qword [rdx + 0x70], rax	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4010e36	              0x90	                                     nop	      8591	syntax.c	FUNCTION_126
0x4010e37	              0xc9	                                   leave	      8591	syntax.c	FUNCTION_126
0x4010e38	              0xc3	                                     ret	      8591	syntax.c	FUNCTION_126
check_keepend	functions,0:IF,6:SWITCH,0:FOR,2:CALL,3:ELSE,0:WHILE,0:DO,0	135
0x4004781	              0x55	                                push rbp	      2771	syntax.c	FUNCTION_33
0x4004782	          0x4889e5	                            mov rbp, rsp	      2771	syntax.c	FUNCTION_33
0x4004785	        0x4883ec40	                           sub rsp, 0x40	      2771	syntax.c	FUNCTION_33
0x4004789	    0x64488b042528	                mov rax, qword fs:[0x28]	      2771	syntax.c	FUNCTION_33
0x4004792	        0x488945f8	                mov qword [rbp - 8], rax	      2771	syntax.c	FUNCTION_33
0x4004796	            0x31c0	                            xor eax, eax	      2771	syntax.c	FUNCTION_33
0x4004798	    0x8b0500000000	            mov eax, dword [0x0400479e] 	      2781	syntax.c	FUNCTION_33	IF_1
0x400479e	            0x85c0	                           test eax, eax	      2781	syntax.c	FUNCTION_33	IF_1
0x40047a0	     0xf88be010000	                            js 0x4004964	      2781	syntax.c	FUNCTION_33	IF_1
0x40047a6	    0x8b0500000000	            mov eax, dword [0x040047ac] 	      2789	syntax.c	FUNCTION_33	FOR_1
0x40047ac	          0x83e801	                              sub eax, 1	      2789	syntax.c	FUNCTION_33	FOR_1
0x40047af	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2789	syntax.c	FUNCTION_33	FOR_1
0x40047b2	            0xeb30	                           jmp 0x40047e4	      2789	syntax.c	FUNCTION_33	FOR_1
0x40047b4	    0x488b0d000000	            mov rcx, qword [0x040047bb] 	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047bb	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047be	          0x4863d0	                         movsxd rdx, eax	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047c1	          0x4889d0	                            mov rax, rdx	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047c4	        0x48c1e003	                              shl rax, 3	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047c8	          0x4801d0	                            add rax, rdx	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047cb	        0x48c1e004	                              shl rax, 4	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047cf	          0x4801c8	                            add rax, rcx	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047d2	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047d6	      0x2500400000	                         and eax, 0x4000	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047db	          0x4885c0	                           test rax, rax	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047de	            0x7511	                           jne 0x40047f1	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047e0	        0x836dc401	               sub dword [rbp - 0x3c], 1	      2789	syntax.c	FUNCTION_33	FOR_1
0x40047e4	    0x8b0500000000	            mov eax, dword [0x040047ea] 	      2789	syntax.c	FUNCTION_33	FOR_1
0x40047ea	          0x3945c4	            cmp dword [rbp - 0x3c], eax 	      2789	syntax.c	FUNCTION_33	FOR_1
0x40047ed	            0x7fc5	                            jg 0x40047b4	      2789	syntax.c	FUNCTION_33	FOR_1
0x40047ef	            0xeb01	                           jmp 0x40047f2	      2789	syntax.c	FUNCTION_33	FOR_1
0x40047f1	              0x90	                                     nop	      2791	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40047f2	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2793	syntax.c	FUNCTION_33
0x40047fa	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2794	syntax.c	FUNCTION_33
0x4004801	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2795	syntax.c	FUNCTION_33
0x4004809	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      2796	syntax.c	FUNCTION_33
0x4004810	      0xe93e010000	                           jmp 0x4004953	      2797	syntax.c	FUNCTION_33	FOR_2
0x4004815	    0x488b0d000000	            mov rcx, qword [0x0400481c] 	      2799	syntax.c	FUNCTION_33	FOR_2
0x400481c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2799	syntax.c	FUNCTION_33	FOR_2
0x400481f	          0x4863d0	                         movsxd rdx, eax	      2799	syntax.c	FUNCTION_33	FOR_2
0x4004822	          0x4889d0	                            mov rax, rdx	      2799	syntax.c	FUNCTION_33	FOR_2
0x4004825	        0x48c1e003	                              shl rax, 3	      2799	syntax.c	FUNCTION_33	FOR_2
0x4004829	          0x4801d0	                            add rax, rdx	      2799	syntax.c	FUNCTION_33	FOR_2
0x400482c	        0x48c1e004	                              shl rax, 4	      2799	syntax.c	FUNCTION_33	FOR_2
0x4004830	          0x4801c8	                            add rax, rcx	      2799	syntax.c	FUNCTION_33	FOR_2
0x4004833	        0x488945c8	             mov qword [rbp - 0x38], rax	      2799	syntax.c	FUNCTION_33	FOR_2
0x4004837	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x400483b	          0x4885c0	                           test rax, rax	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x400483e	            0x7450	                            je 0x4004890	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4004840	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_1
0x4004844	        0x488d5018	                   lea rdx, [rax + 0x18]	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_1
0x4004848	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_1
0x400484c	          0x4889c6	                            mov rsi, rax	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_1
0x400484f	          0x4889d7	                            mov rdi, rdx	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_1
0x4004852	      0xe8330c0000	                 call sym.limit_pos_zero	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_1
0x4004857	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_2
0x400485b	        0x488d5038	                   lea rdx, [rax + 0x38]	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_2
0x400485f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_2
0x4004863	          0x4889c6	                            mov rsi, rax	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_2
0x4004866	          0x4889d7	                            mov rdi, rdx	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_2
0x4004869	      0xe81c0c0000	                 call sym.limit_pos_zero	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_2
0x400486e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x4004872	        0x488d5048	                   lea rdx, [rax + 0x48]	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x4004876	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x400487a	          0x4889c6	                            mov rsi, rax	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x400487d	          0x4889d7	                            mov rdi, rdx	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x4004880	      0xe8050c0000	                 call sym.limit_pos_zero	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x4004885	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2805	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4004889	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2805	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4004890	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4004894	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4004897	            0x85c0	                           test eax, eax	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4004899	     0xf84b0000000	                            je 0x400494f	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x400489f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40048a3	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40048a7	      0x2500040000	                          and eax, 0x400	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40048ac	          0x4885c0	                           test rax, rax	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40048af	     0xf849a000000	                            je 0x400494f	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40048b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048b9	          0x4885c0	                           test rax, rax	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048bc	            0x7430	                            je 0x40048ee	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048be	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048c6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048ca	          0x4839c2	                            cmp rdx, rax	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048cd	            0x7f1f	                            jg 0x40048ee	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048cf	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048d7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048db	          0x4839c2	                            cmp rdx, rax	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048de	            0x7522	                           jne 0x4004902	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048e0	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048e7	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048ea	            0x39c2	                            cmp edx, eax	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048ec	            0x7e14	                           jle 0x4004902	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048f2	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048f6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048fa	        0x488945d0	             mov qword [rbp - 0x30], rax	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40048fe	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4004902	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004906	          0x4885c0	                           test rax, rax	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004909	            0x7430	                            je 0x400493b	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400490b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400490f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004913	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004917	          0x4839c2	                            cmp rdx, rax	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400491a	            0x7f1f	                            jg 0x400493b	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400491c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004920	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004924	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004928	          0x4839c2	                            cmp rdx, rax	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400492b	            0x7522	                           jne 0x400494f	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400492d	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004930	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004934	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004937	            0x39c2	                            cmp edx, eax	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004939	            0x7e14	                           jle 0x400494f	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400493b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400493f	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004943	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4004947	        0x488945e0	             mov qword [rbp - 0x20], rax	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400494b	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400494f	        0x8345c401	               add dword [rbp - 0x3c], 1	      2797	syntax.c	FUNCTION_33	FOR_2
0x4004953	    0x8b0500000000	            mov eax, dword [0x04004959] 	      2797	syntax.c	FUNCTION_33	FOR_2
0x4004959	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      2797	syntax.c	FUNCTION_33	FOR_2
0x400495c	     0xf8fb3feffff	                            jg 0x4004815	      2797	syntax.c	FUNCTION_33	FOR_2
0x4004962	            0xeb01	                           jmp 0x4004965	      2797	syntax.c	FUNCTION_33	FOR_2
0x4004964	              0x90	                                     nop	      2782	syntax.c	FUNCTION_33	IF_1
0x4004965	        0x488b45f8	                mov rax, qword [rbp - 8]	      2821	syntax.c	FUNCTION_33
0x4004969	    0x644833042528	                xor rax, qword fs:[0x28]	      2821	syntax.c	FUNCTION_33
0x4004972	            0x7405	                            je 0x4004979	      2821	syntax.c	FUNCTION_33
0x4004974	      0xe800000000	                          call 0x4004979	      2821	syntax.c	FUNCTION_33
0x4004979	              0xc9	                                   leave	      2821	syntax.c	FUNCTION_33
0x400497a	              0xc3	                                     ret	      2821	syntax.c	FUNCTION_33
free_highlight_fonts	functions,0:IF,0:SWITCH,0:FOR,1:CALL,7:ELSE,0:WHILE,0:DO,0	39
0x4014a5b	              0x55	                                push rbp	     10349	syntax.c	FUNCTION_169
0x4014a5c	          0x4889e5	                            mov rbp, rsp	     10349	syntax.c	FUNCTION_169
0x4014a5f	        0x4883ec10	                           sub rsp, 0x10	     10349	syntax.c	FUNCTION_169
0x4014a63	    0xc745fc000000	                  mov dword [rbp - 4], 0	     10352	syntax.c	FUNCTION_169	FOR_1
0x4014a6a	            0xeb60	                           jmp 0x4014acc	     10352	syntax.c	FUNCTION_169	FOR_1
0x4014a6c	    0x488b0d000000	            mov rcx, qword [0x04014a73] 	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a73	          0x8b45fc	                mov eax, dword [rbp - 4]	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a76	          0x4863d0	                         movsxd rdx, eax	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a79	          0x4889d0	                            mov rax, rdx	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a7c	        0x48c1e003	                              shl rax, 3	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a80	          0x4801d0	                            add rax, rdx	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a83	          0x4801c0	                            add rax, rax	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a86	          0x4801d0	                            add rax, rdx	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a89	        0x48c1e003	                              shl rax, 3	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a8d	          0x4801c8	                            add rax, rcx	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a90	        0x488b4058	            mov rax, qword [rax + 0x58] 	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a94	          0x4889c7	                            mov rdi, rax	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a97	      0xe800000000	                          call 0x4014a9c	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4014a9c	    0x488b0d000000	            mov rcx, qword [0x04014aa3] 	     10355	syntax.c	FUNCTION_169	FOR_1
0x4014aa3	          0x8b45fc	                mov eax, dword [rbp - 4]	     10355	syntax.c	FUNCTION_169	FOR_1
0x4014aa6	          0x4863d0	                         movsxd rdx, eax	     10355	syntax.c	FUNCTION_169	FOR_1
0x4014aa9	          0x4889d0	                            mov rax, rdx	     10355	syntax.c	FUNCTION_169	FOR_1
0x4014aac	        0x48c1e003	                              shl rax, 3	     10355	syntax.c	FUNCTION_169	FOR_1
0x4014ab0	          0x4801d0	                            add rax, rdx	     10355	syntax.c	FUNCTION_169	FOR_1
0x4014ab3	          0x4801c0	                            add rax, rax	     10355	syntax.c	FUNCTION_169	FOR_1
0x4014ab6	          0x4801d0	                            add rax, rdx	     10355	syntax.c	FUNCTION_169	FOR_1
0x4014ab9	        0x48c1e003	                              shl rax, 3	     10355	syntax.c	FUNCTION_169	FOR_1
0x4014abd	          0x4801c8	                            add rax, rcx	     10355	syntax.c	FUNCTION_169	FOR_1
0x4014ac0	    0x48c740580000	               mov qword [rax + 0x58], 0	     10355	syntax.c	FUNCTION_169	FOR_1
0x4014ac8	        0x8345fc01	                  add dword [rbp - 4], 1	     10352	syntax.c	FUNCTION_169	FOR_1
0x4014acc	    0x8b0500000000	            mov eax, dword [0x04014ad2] 	     10352	syntax.c	FUNCTION_169	FOR_1
0x4014ad2	          0x3b45fc	                cmp eax, dword [rbp - 4]	     10352	syntax.c	FUNCTION_169	FOR_1
0x4014ad5	            0x7f95	                            jg 0x4014a6c	     10352	syntax.c	FUNCTION_169	FOR_1
0x4014ad7	    0x488b05000000	            mov rax, qword [0x04014ade] 	     10362	syntax.c	FUNCTION_169	CALL_3
0x4014ade	          0x4889c7	                            mov rdi, rax	     10362	syntax.c	FUNCTION_169	CALL_3
0x4014ae1	      0xe800000000	                          call 0x4014ae6	     10362	syntax.c	FUNCTION_169	CALL_3
0x4014ae6	              0x90	                                     nop	     10371	syntax.c	FUNCTION_169
0x4014ae7	              0xc9	                                   leave	     10371	syntax.c	FUNCTION_169
0x4014ae8	              0xc3	                                     ret	     10371	syntax.c	FUNCTION_169
reset_synblock	functions,0:IF,1:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	27
0x4006595	              0x55	                                push rbp	      3665	syntax.c	FUNCTION_50
0x4006596	          0x4889e5	                            mov rbp, rsp	      3665	syntax.c	FUNCTION_50
0x4006599	        0x4883ec10	                           sub rsp, 0x10	      3665	syntax.c	FUNCTION_50
0x400659d	        0x48897df8	                mov qword [rbp - 8], rdi	      3665	syntax.c	FUNCTION_50
0x40065a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3666	syntax.c	FUNCTION_50	IF_1
0x40065a5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3666	syntax.c	FUNCTION_50	IF_1
0x40065a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3666	syntax.c	FUNCTION_50	IF_1
0x40065ad	        0x488b4008	                mov rax, qword [rax + 8]	      3666	syntax.c	FUNCTION_50	IF_1
0x40065b1	    0x480568170000	                         add rax, 0x1768	      3666	syntax.c	FUNCTION_50	IF_1
0x40065b7	          0x4839c2	                            cmp rdx, rax	      3666	syntax.c	FUNCTION_50	IF_1
0x40065ba	            0x7437	                            je 0x40065f3	      3666	syntax.c	FUNCTION_50	IF_1
0x40065bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3668	syntax.c	FUNCTION_50	IF_1	CALL_1
0x40065c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3668	syntax.c	FUNCTION_50	IF_1	CALL_1
0x40065c4	          0x4889c7	                            mov rdi, rax	      3668	syntax.c	FUNCTION_50	IF_1	CALL_1
0x40065c7	      0xe800000000	                          call 0x40065cc	      3668	syntax.c	FUNCTION_50	IF_1	CALL_1
0x40065cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x40065d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x40065d4	          0x4889c7	                            mov rdi, rax	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x40065d7	      0xe800000000	                          call 0x40065dc	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x40065dc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3670	syntax.c	FUNCTION_50	IF_1
0x40065e0	        0x488b4008	                mov rax, qword [rax + 8]	      3670	syntax.c	FUNCTION_50	IF_1
0x40065e4	    0x488d90681700	                 lea rdx, [rax + 0x1768]	      3670	syntax.c	FUNCTION_50	IF_1
0x40065eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3670	syntax.c	FUNCTION_50	IF_1
0x40065ef	        0x48895010	             mov qword [rax + 0x10], rdx	      3670	syntax.c	FUNCTION_50	IF_1
0x40065f3	              0x90	                                     nop	      3672	syntax.c	FUNCTION_50
0x40065f4	              0xc9	                                   leave	      3672	syntax.c	FUNCTION_50
0x40065f5	              0xc3	                                     ret	      3672	syntax.c	FUNCTION_50
copy_id_list	functions,0:IF,2:SWITCH,0:FOR,1:CALL,2:ELSE,0:WHILE,0:DO,0	39
0x400c223	              0x55	                                push rbp	      6201	syntax.c	FUNCTION_93
0x400c224	          0x4889e5	                            mov rbp, rsp	      6201	syntax.c	FUNCTION_93
0x400c227	        0x4883ec20	                           sub rsp, 0x20	      6201	syntax.c	FUNCTION_93
0x400c22b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6201	syntax.c	FUNCTION_93
0x400c22f	      0x48837de800	               cmp qword [rbp - 0x18], 0	      6206	syntax.c	FUNCTION_93	IF_1
0x400c234	            0x7507	                           jne 0x400c23d	      6206	syntax.c	FUNCTION_93	IF_1
0x400c236	      0xb800000000	                              mov eax, 0	      6207	syntax.c	FUNCTION_93	IF_1
0x400c23b	            0xeb62	                           jmp 0x400c29f	      6207	syntax.c	FUNCTION_93	IF_1
0x400c23d	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      6209	syntax.c	FUNCTION_93	FOR_1
0x400c244	            0xeb04	                           jmp 0x400c24a	      6209	syntax.c	FUNCTION_93	FOR_1
0x400c246	        0x8345f001	               add dword [rbp - 0x10], 1	      6209	syntax.c	FUNCTION_93	FOR_1
0x400c24a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      6209	syntax.c	FUNCTION_93	FOR_1
0x400c24d	            0x4898	                                    cdqe	      6209	syntax.c	FUNCTION_93	FOR_1
0x400c24f	        0x488d1400	                    lea rdx, [rax + rax]	      6209	syntax.c	FUNCTION_93	FOR_1
0x400c253	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6209	syntax.c	FUNCTION_93	FOR_1
0x400c257	          0x4801d0	                            add rax, rdx	      6209	syntax.c	FUNCTION_93	FOR_1
0x400c25a	           0xfb700	                   movzx eax, word [rax]	      6209	syntax.c	FUNCTION_93	FOR_1
0x400c25d	          0x6685c0	                             test ax, ax	      6209	syntax.c	FUNCTION_93	FOR_1
0x400c260	            0x75e4	                           jne 0x400c246	      6209	syntax.c	FUNCTION_93	FOR_1
0x400c262	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      6211	syntax.c	FUNCTION_93
0x400c265	          0x83c001	                              add eax, 1	      6211	syntax.c	FUNCTION_93
0x400c268	             0x1c0	                            add eax, eax	      6211	syntax.c	FUNCTION_93
0x400c26a	          0x8945f4	              mov dword [rbp - 0xc], eax	      6211	syntax.c	FUNCTION_93
0x400c26d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6212	syntax.c	FUNCTION_93	CALL_1
0x400c270	            0x89c7	                            mov edi, eax	      6212	syntax.c	FUNCTION_93	CALL_1
0x400c272	      0xe800000000	                          call 0x400c277	      6212	syntax.c	FUNCTION_93	CALL_1
0x400c277	        0x488945f8	                mov qword [rbp - 8], rax	      6212	syntax.c	FUNCTION_93	CALL_1
0x400c27b	      0x48837df800	                  cmp qword [rbp - 8], 0	      6213	syntax.c	FUNCTION_93	IF_2
0x400c280	            0x7419	                            je 0x400c29b	      6213	syntax.c	FUNCTION_93	IF_2
0x400c282	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6214	syntax.c	FUNCTION_93	CALL_2
0x400c285	          0x4863d0	                         movsxd rdx, eax	      6214	syntax.c	FUNCTION_93	CALL_2
0x400c288	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      6214	syntax.c	FUNCTION_93	CALL_2
0x400c28c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6214	syntax.c	FUNCTION_93	CALL_2
0x400c290	          0x4889ce	                            mov rsi, rcx	      6214	syntax.c	FUNCTION_93	CALL_2
0x400c293	          0x4889c7	                            mov rdi, rax	      6214	syntax.c	FUNCTION_93	CALL_2
0x400c296	      0xe800000000	                          call 0x400c29b	      6214	syntax.c	FUNCTION_93	CALL_2
0x400c29b	        0x488b45f8	                mov rax, qword [rbp - 8]	      6216	syntax.c	FUNCTION_93
0x400c29f	              0xc9	                                   leave	      6217	syntax.c	FUNCTION_93
0x400c2a0	              0xc3	                                     ret	      6217	syntax.c	FUNCTION_93
set_group_colors	functions,0:IF,5:SWITCH,0:FOR,0:CALL,2:ELSE,2:WHILE,0:DO,0	91
0x4010ad6	              0x55	                                push rbp	      8493	syntax.c	FUNCTION_122
0x4010ad7	          0x4889e5	                            mov rbp, rsp	      8493	syntax.c	FUNCTION_122
0x4010ada	        0x4883ec40	                           sub rsp, 0x40	      8493	syntax.c	FUNCTION_122
0x4010ade	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8493	syntax.c	FUNCTION_122
0x4010ae2	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8493	syntax.c	FUNCTION_122
0x4010ae6	        0x488955d8	             mov qword [rbp - 0x28], rdx	      8493	syntax.c	FUNCTION_122
0x4010aea	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      8493	syntax.c	FUNCTION_122
0x4010aed	        0x448945d0	             mov dword [rbp - 0x30], r8d	      8493	syntax.c	FUNCTION_122
0x4010af1	        0x44894dcc	             mov dword [rbp - 0x34], r9d	      8493	syntax.c	FUNCTION_122
0x4010af5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8496	syntax.c	FUNCTION_122	CALL_1
0x4010af9	          0x4889c7	                            mov rdi, rax	      8496	syntax.c	FUNCTION_122	CALL_1
0x4010afc	      0xe800000000	                          call 0x4010b01	      8496	syntax.c	FUNCTION_122	CALL_1
0x4010b01	          0x83e801	                              sub eax, 1	      8496	syntax.c	FUNCTION_122	CALL_1
0x4010b04	          0x8945fc	                mov dword [rbp - 4], eax	      8496	syntax.c	FUNCTION_122	CALL_1
0x4010b07	        0x837dfc00	                  cmp dword [rbp - 4], 0	      8497	syntax.c	FUNCTION_122	IF_1
0x4010b0b	     0xf8803010000	                            js 0x4010c14	      8497	syntax.c	FUNCTION_122	IF_1
0x4010b11	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x4010b14	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x4010b17	          0x8b45fc	                mov eax, dword [rbp - 4]	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x4010b1a	            0x89ce	                            mov esi, ecx	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x4010b1c	            0x89c7	                            mov edi, eax	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x4010b1e	      0xe82f2a0000	               call sym.gui_do_one_color	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x4010b23	    0x488b0d000000	            mov rcx, qword [0x04010b2a] 	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b2a	          0x8b45fc	                mov eax, dword [rbp - 4]	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b2d	          0x4863d0	                         movsxd rdx, eax	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b30	          0x4889d0	                            mov rax, rdx	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b33	        0x48c1e003	                              shl rax, 3	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b37	          0x4801d0	                            add rax, rdx	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b3a	          0x4801c0	                            add rax, rax	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b3d	          0x4801d0	                            add rax, rdx	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b40	        0x48c1e003	                              shl rax, 3	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b44	          0x4801c8	                            add rax, rcx	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b47	        0x488b4040	            mov rax, qword [rax + 0x40] 	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b4b	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b51	            0x7431	                            je 0x4010b84	      8501	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b53	    0x488b0d000000	            mov rcx, qword [0x04010b5a] 	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b5a	          0x8b45fc	                mov eax, dword [rbp - 4]	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b5d	          0x4863d0	                         movsxd rdx, eax	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b60	          0x4889d0	                            mov rax, rdx	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b63	        0x48c1e003	                              shl rax, 3	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b67	          0x4801d0	                            add rax, rdx	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b6a	          0x4801c0	                            add rax, rax	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b6d	          0x4801d0	                            add rax, rdx	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b70	        0x48c1e003	                              shl rax, 3	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b74	          0x4801c8	                            add rax, rcx	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b77	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b7b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b7f	          0x488910	                    mov qword [rax], rdx	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b82	            0xeb14	                           jmp 0x4010b98	      8502	syntax.c	FUNCTION_122	IF_1	IF_2
0x4010b84	        0x837dd000	               cmp dword [rbp - 0x30], 0	      8503	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x4010b88	            0x740e	                            je 0x4010b98	      8503	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x4010b8a	    0x488b15000000	            mov rdx, qword [0x04010b91] 	      8504	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x4010b91	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8504	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x4010b95	          0x488910	                    mov qword [rax], rdx	      8504	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x4010b98	    0x488b0d000000	            mov rcx, qword [0x04010b9f] 	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010b9f	          0x8b45fc	                mov eax, dword [rbp - 4]	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010ba2	          0x4863d0	                         movsxd rdx, eax	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010ba5	          0x4889d0	                            mov rax, rdx	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010ba8	        0x48c1e003	                              shl rax, 3	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bac	          0x4801d0	                            add rax, rdx	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010baf	          0x4801c0	                            add rax, rax	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bb2	          0x4801d0	                            add rax, rdx	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bb5	        0x48c1e003	                              shl rax, 3	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bb9	          0x4801c8	                            add rax, rcx	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bbc	        0x488b4048	            mov rax, qword [rax + 0x48] 	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bc0	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bc6	            0x7431	                            je 0x4010bf9	      8505	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bc8	    0x488b0d000000	            mov rcx, qword [0x04010bcf] 	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bcf	          0x8b45fc	                mov eax, dword [rbp - 4]	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bd2	          0x4863d0	                         movsxd rdx, eax	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bd5	          0x4889d0	                            mov rax, rdx	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bd8	        0x48c1e003	                              shl rax, 3	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bdc	          0x4801d0	                            add rax, rdx	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bdf	          0x4801c0	                            add rax, rax	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010be2	          0x4801d0	                            add rax, rdx	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010be5	        0x48c1e003	                              shl rax, 3	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010be9	          0x4801c8	                            add rax, rcx	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bec	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bf0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bf4	          0x488910	                    mov qword [rax], rdx	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bf7	            0xeb14	                           jmp 0x4010c0d	      8506	syntax.c	FUNCTION_122	IF_1	IF_4
0x4010bf9	        0x837dd000	               cmp dword [rbp - 0x30], 0	      8507	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x4010bfd	            0x740e	                            je 0x4010c0d	      8507	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x4010bff	    0x488b15000000	            mov rdx, qword [0x04010c06] 	      8508	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x4010c06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8508	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x4010c0a	          0x488910	                    mov qword [rax], rdx	      8508	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x4010c0d	      0xb801000000	                              mov eax, 1	      8509	syntax.c	FUNCTION_122	IF_1
0x4010c12	            0xeb05	                           jmp 0x4010c19	      8509	syntax.c	FUNCTION_122	IF_1
0x4010c14	      0xb800000000	                              mov eax, 0	      8511	syntax.c	FUNCTION_122
0x4010c19	              0xc9	                                   leave	      8512	syntax.c	FUNCTION_122
0x4010c1a	              0xc3	                                     ret	      8512	syntax.c	FUNCTION_122
gui_do_one_color	functions,0:IF,6:SWITCH,0:FOR,0:CALL,5:ELSE,0:WHILE,0:DO,0	169
0x4013552	              0x55	                                push rbp	      9923	syntax.c	FUNCTION_161
0x4013553	          0x4889e5	                            mov rbp, rsp	      9923	syntax.c	FUNCTION_161
0x4013556	              0x53	                                push rbx	      9923	syntax.c	FUNCTION_161
0x4013557	        0x4883ec28	                           sub rsp, 0x28	      9923	syntax.c	FUNCTION_161
0x401355b	          0x897ddc	             mov dword [rbp - 0x24], edi	      9923	syntax.c	FUNCTION_161
0x401355e	          0x8975d8	             mov dword [rbp - 0x28], esi	      9923	syntax.c	FUNCTION_161
0x4013561	          0x8955d4	             mov dword [rbp - 0x2c], edx	      9923	syntax.c	FUNCTION_161
0x4013564	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      9924	syntax.c	FUNCTION_161
0x401356b	    0x8b0500000000	            mov eax, dword [0x04013571] 	      9928	syntax.c	FUNCTION_161	IF_1
0x4013571	            0x85c0	                           test eax, eax	      9928	syntax.c	FUNCTION_161	IF_1
0x4013573	            0x747c	                            je 0x40135f1	      9928	syntax.c	FUNCTION_161	IF_1
0x4013575	    0x488b0d000000	            mov rcx, qword [0x0401357c] 	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x401357c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x401357f	          0x4863d0	                         movsxd rdx, eax	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x4013582	          0x4889d0	                            mov rax, rdx	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x4013585	        0x48c1e003	                              shl rax, 3	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x4013589	          0x4801d0	                            add rax, rdx	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x401358c	          0x4801c0	                            add rax, rax	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x401358f	          0x4801d0	                            add rax, rdx	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x4013592	        0x48c1e003	                              shl rax, 3	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x4013596	          0x4801c8	                            add rax, rcx	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x4013599	        0x488b4060	            mov rax, qword [rax + 0x60] 	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x401359d	          0x4885c0	                           test rax, rax	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x40135a0	            0x744f	                            je 0x40135f1	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x40135a2	    0x488b0d000000	            mov rcx, qword [0x040135a9] 	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135a9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135ac	          0x4863d0	                         movsxd rdx, eax	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135af	          0x4889d0	                            mov rax, rdx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135b2	        0x48c1e003	                              shl rax, 3	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135b6	          0x4801d0	                            add rax, rdx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135b9	          0x4801c0	                            add rax, rax	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135bc	          0x4801d0	                            add rax, rdx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135bf	        0x48c1e003	                              shl rax, 3	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135c3	          0x4801c8	                            add rax, rcx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135c6	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135ca	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135cd	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135d0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135d3	    0x41b901000000	                              mov r9d, 1	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135d9	          0x4189c8	                            mov r8d, ecx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135dc	            0x89d1	                            mov ecx, edx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135de	      0xba00000000	                              mov edx, 0	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135e3	            0x89c7	                            mov edi, eax	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135e5	      0xe88ad8ffff	                     call sym.hl_do_font	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x40135ea	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      9934	syntax.c	FUNCTION_161	IF_1	IF_2
0x40135f1	    0x488b0d000000	            mov rcx, qword [0x040135f8] 	      9937	syntax.c	FUNCTION_161	IF_3
0x40135f8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9937	syntax.c	FUNCTION_161	IF_3
0x40135fb	          0x4863d0	                         movsxd rdx, eax	      9937	syntax.c	FUNCTION_161	IF_3
0x40135fe	          0x4889d0	                            mov rax, rdx	      9937	syntax.c	FUNCTION_161	IF_3
0x4013601	        0x48c1e003	                              shl rax, 3	      9937	syntax.c	FUNCTION_161	IF_3
0x4013605	          0x4801d0	                            add rax, rdx	      9937	syntax.c	FUNCTION_161	IF_3
0x4013608	          0x4801c0	                            add rax, rax	      9937	syntax.c	FUNCTION_161	IF_3
0x401360b	          0x4801d0	                            add rax, rdx	      9937	syntax.c	FUNCTION_161	IF_3
0x401360e	        0x48c1e003	                              shl rax, 3	      9937	syntax.c	FUNCTION_161	IF_3
0x4013612	          0x4801c8	                            add rax, rcx	      9937	syntax.c	FUNCTION_161	IF_3
0x4013615	        0x488b4070	            mov rax, qword [rax + 0x70] 	      9937	syntax.c	FUNCTION_161	IF_3
0x4013619	          0x4885c0	                           test rax, rax	      9937	syntax.c	FUNCTION_161	IF_3
0x401361c	            0x7460	                            je 0x401367e	      9937	syntax.c	FUNCTION_161	IF_3
0x401361e	    0x488b0d000000	            mov rcx, qword [0x04013625] 	      9939	syntax.c	FUNCTION_161	IF_3
0x4013625	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9939	syntax.c	FUNCTION_161	IF_3
0x4013628	          0x4863d0	                         movsxd rdx, eax	      9939	syntax.c	FUNCTION_161	IF_3
0x401362b	          0x4889d0	                            mov rax, rdx	      9939	syntax.c	FUNCTION_161	IF_3
0x401362e	        0x48c1e003	                              shl rax, 3	      9939	syntax.c	FUNCTION_161	IF_3
0x4013632	          0x4801d0	                            add rax, rdx	      9939	syntax.c	FUNCTION_161	IF_3
0x4013635	          0x4801c0	                            add rax, rax	      9939	syntax.c	FUNCTION_161	IF_3
0x4013638	          0x4801d0	                            add rax, rdx	      9939	syntax.c	FUNCTION_161	IF_3
0x401363b	        0x48c1e003	                              shl rax, 3	      9939	syntax.c	FUNCTION_161	IF_3
0x401363f	        0x488d1c01	                    lea rbx, [rcx + rax]	      9939	syntax.c	FUNCTION_161	IF_3
0x4013643	    0x488b0d000000	            mov rcx, qword [0x0401364a] 	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x401364a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x401364d	          0x4863d0	                         movsxd rdx, eax	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x4013650	          0x4889d0	                            mov rax, rdx	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x4013653	        0x48c1e003	                              shl rax, 3	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x4013657	          0x4801d0	                            add rax, rdx	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x401365a	          0x4801c0	                            add rax, rax	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x401365d	          0x4801d0	                            add rax, rdx	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x4013660	        0x48c1e003	                              shl rax, 3	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x4013664	          0x4801c8	                            add rax, rcx	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x4013667	        0x488b4070	            mov rax, qword [rax + 0x70] 	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x401366b	          0x4889c7	                            mov rdi, rax	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x401366e	      0xe800000000	                          call 0x4013673	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x4013673	        0x48894340	             mov qword [rbx + 0x40], rax	      9939	syntax.c	FUNCTION_161	IF_3
0x4013677	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      9941	syntax.c	FUNCTION_161	IF_3
0x401367e	    0x488b0d000000	            mov rcx, qword [0x04013685] 	      9943	syntax.c	FUNCTION_161	IF_4
0x4013685	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9943	syntax.c	FUNCTION_161	IF_4
0x4013688	          0x4863d0	                         movsxd rdx, eax	      9943	syntax.c	FUNCTION_161	IF_4
0x401368b	          0x4889d0	                            mov rax, rdx	      9943	syntax.c	FUNCTION_161	IF_4
0x401368e	        0x48c1e003	                              shl rax, 3	      9943	syntax.c	FUNCTION_161	IF_4
0x4013692	          0x4801d0	                            add rax, rdx	      9943	syntax.c	FUNCTION_161	IF_4
0x4013695	          0x4801c0	                            add rax, rax	      9943	syntax.c	FUNCTION_161	IF_4
0x4013698	          0x4801d0	                            add rax, rdx	      9943	syntax.c	FUNCTION_161	IF_4
0x401369b	        0x48c1e003	                              shl rax, 3	      9943	syntax.c	FUNCTION_161	IF_4
0x401369f	          0x4801c8	                            add rax, rcx	      9943	syntax.c	FUNCTION_161	IF_4
0x40136a2	        0x488b4078	            mov rax, qword [rax + 0x78] 	      9943	syntax.c	FUNCTION_161	IF_4
0x40136a6	          0x4885c0	                           test rax, rax	      9943	syntax.c	FUNCTION_161	IF_4
0x40136a9	            0x7460	                            je 0x401370b	      9943	syntax.c	FUNCTION_161	IF_4
0x40136ab	    0x488b0d000000	            mov rcx, qword [0x040136b2] 	      9945	syntax.c	FUNCTION_161	IF_4
0x40136b2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9945	syntax.c	FUNCTION_161	IF_4
0x40136b5	          0x4863d0	                         movsxd rdx, eax	      9945	syntax.c	FUNCTION_161	IF_4
0x40136b8	          0x4889d0	                            mov rax, rdx	      9945	syntax.c	FUNCTION_161	IF_4
0x40136bb	        0x48c1e003	                              shl rax, 3	      9945	syntax.c	FUNCTION_161	IF_4
0x40136bf	          0x4801d0	                            add rax, rdx	      9945	syntax.c	FUNCTION_161	IF_4
0x40136c2	          0x4801c0	                            add rax, rax	      9945	syntax.c	FUNCTION_161	IF_4
0x40136c5	          0x4801d0	                            add rax, rdx	      9945	syntax.c	FUNCTION_161	IF_4
0x40136c8	        0x48c1e003	                              shl rax, 3	      9945	syntax.c	FUNCTION_161	IF_4
0x40136cc	        0x488d1c01	                    lea rbx, [rcx + rax]	      9945	syntax.c	FUNCTION_161	IF_4
0x40136d0	    0x488b0d000000	            mov rcx, qword [0x040136d7] 	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136d7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136da	          0x4863d0	                         movsxd rdx, eax	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136dd	          0x4889d0	                            mov rax, rdx	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136e0	        0x48c1e003	                              shl rax, 3	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136e4	          0x4801d0	                            add rax, rdx	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136e7	          0x4801c0	                            add rax, rax	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136ea	          0x4801d0	                            add rax, rdx	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136ed	        0x48c1e003	                              shl rax, 3	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136f1	          0x4801c8	                            add rax, rcx	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136f4	        0x488b4078	            mov rax, qword [rax + 0x78] 	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136f8	          0x4889c7	                            mov rdi, rax	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x40136fb	      0xe800000000	                          call 0x4013700	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x4013700	        0x48894348	             mov qword [rbx + 0x48], rax	      9945	syntax.c	FUNCTION_161	IF_4
0x4013704	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      9947	syntax.c	FUNCTION_161	IF_4
0x401370b	    0x488b0d000000	            mov rcx, qword [0x04013712] 	      9950	syntax.c	FUNCTION_161	IF_5
0x4013712	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9950	syntax.c	FUNCTION_161	IF_5
0x4013715	          0x4863d0	                         movsxd rdx, eax	      9950	syntax.c	FUNCTION_161	IF_5
0x4013718	          0x4889d0	                            mov rax, rdx	      9950	syntax.c	FUNCTION_161	IF_5
0x401371b	        0x48c1e003	                              shl rax, 3	      9950	syntax.c	FUNCTION_161	IF_5
0x401371f	          0x4801d0	                            add rax, rdx	      9950	syntax.c	FUNCTION_161	IF_5
0x4013722	          0x4801c0	                            add rax, rax	      9950	syntax.c	FUNCTION_161	IF_5
0x4013725	          0x4801d0	                            add rax, rdx	      9950	syntax.c	FUNCTION_161	IF_5
0x4013728	        0x48c1e003	                              shl rax, 3	      9950	syntax.c	FUNCTION_161	IF_5
0x401372c	          0x4801c8	                            add rax, rcx	      9950	syntax.c	FUNCTION_161	IF_5
0x401372f	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      9950	syntax.c	FUNCTION_161	IF_5
0x4013736	          0x4885c0	                           test rax, rax	      9950	syntax.c	FUNCTION_161	IF_5
0x4013739	            0x7463	                            je 0x401379e	      9950	syntax.c	FUNCTION_161	IF_5
0x401373b	    0x488b0d000000	            mov rcx, qword [0x04013742] 	      9952	syntax.c	FUNCTION_161	IF_5
0x4013742	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9952	syntax.c	FUNCTION_161	IF_5
0x4013745	          0x4863d0	                         movsxd rdx, eax	      9952	syntax.c	FUNCTION_161	IF_5
0x4013748	          0x4889d0	                            mov rax, rdx	      9952	syntax.c	FUNCTION_161	IF_5
0x401374b	        0x48c1e003	                              shl rax, 3	      9952	syntax.c	FUNCTION_161	IF_5
0x401374f	          0x4801d0	                            add rax, rdx	      9952	syntax.c	FUNCTION_161	IF_5
0x4013752	          0x4801c0	                            add rax, rax	      9952	syntax.c	FUNCTION_161	IF_5
0x4013755	          0x4801d0	                            add rax, rdx	      9952	syntax.c	FUNCTION_161	IF_5
0x4013758	        0x48c1e003	                              shl rax, 3	      9952	syntax.c	FUNCTION_161	IF_5
0x401375c	        0x488d1c01	                    lea rbx, [rcx + rax]	      9952	syntax.c	FUNCTION_161	IF_5
0x4013760	    0x488b0d000000	            mov rcx, qword [0x04013767] 	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x4013767	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x401376a	          0x4863d0	                         movsxd rdx, eax	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x401376d	          0x4889d0	                            mov rax, rdx	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x4013770	        0x48c1e003	                              shl rax, 3	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x4013774	          0x4801d0	                            add rax, rdx	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x4013777	          0x4801c0	                            add rax, rax	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x401377a	          0x4801d0	                            add rax, rdx	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x401377d	        0x48c1e003	                              shl rax, 3	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x4013781	          0x4801c8	                            add rax, rcx	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x4013784	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x401378b	          0x4889c7	                            mov rdi, rax	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x401378e	      0xe800000000	                          call 0x4013793	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x4013793	        0x48894350	             mov qword [rbx + 0x50], rax	      9952	syntax.c	FUNCTION_161	IF_5
0x4013797	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      9954	syntax.c	FUNCTION_161	IF_5
0x401379e	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9957	syntax.c	FUNCTION_161	IF_6
0x40137a2	            0x740a	                            je 0x40137ae	      9957	syntax.c	FUNCTION_161	IF_6
0x40137a4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9958	syntax.c	FUNCTION_161	CALL_5
0x40137a7	            0x89c7	                            mov edi, eax	      9958	syntax.c	FUNCTION_161	CALL_5
0x40137a9	      0xe80cf3ffff	                    call sym.set_hl_attr	      9958	syntax.c	FUNCTION_161	CALL_5
0x40137ae	              0x90	                                     nop	      9959	syntax.c	FUNCTION_161
0x40137af	        0x4883c428	                           add rsp, 0x28	      9959	syntax.c	FUNCTION_161
0x40137b3	              0x5b	                                 pop rbx	      9959	syntax.c	FUNCTION_161
0x40137b4	              0x5d	                                 pop rbp	      9959	syntax.c	FUNCTION_161
0x40137b5	              0xc3	                                     ret	      9959	syntax.c	FUNCTION_161
syn_regexec	functions,0:IF,6:SWITCH,0:FOR,0:CALL,5:ELSE,0:WHILE,0:DO,0	100
0x4005891	              0x55	                                push rbp	      3318	syntax.c	FUNCTION_43
0x4005892	          0x4889e5	                            mov rbp, rsp	      3318	syntax.c	FUNCTION_43
0x4005895	        0x4883ec50	                           sub rsp, 0x50	      3318	syntax.c	FUNCTION_43
0x4005899	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3318	syntax.c	FUNCTION_43
0x400589d	        0x488975c0	             mov qword [rbp - 0x40], rsi	      3318	syntax.c	FUNCTION_43
0x40058a1	          0x8955bc	             mov dword [rbp - 0x44], edx	      3318	syntax.c	FUNCTION_43
0x40058a4	        0x48894db0	             mov qword [rbp - 0x50], rcx	      3318	syntax.c	FUNCTION_43
0x40058a8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3318	syntax.c	FUNCTION_43
0x40058b1	        0x488945f8	                mov qword [rbp - 8], rax	      3318	syntax.c	FUNCTION_43
0x40058b5	            0x31c0	                            xor eax, eax	      3318	syntax.c	FUNCTION_43
0x40058b7	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      3321	syntax.c	FUNCTION_43
0x40058be	    0x8b0500000000	            mov eax, dword [0x040058c4] 	      3326	syntax.c	FUNCTION_43	IF_1
0x40058c4	            0x85c0	                           test eax, eax	      3326	syntax.c	FUNCTION_43	IF_1
0x40058c6	            0x740c	                            je 0x40058d4	      3326	syntax.c	FUNCTION_43	IF_1
0x40058c8	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3327	syntax.c	FUNCTION_43	CALL_1
0x40058cc	          0x4889c7	                            mov rdi, rax	      3327	syntax.c	FUNCTION_43	CALL_1
0x40058cf	      0xe800000000	                          call 0x40058d4	      3327	syntax.c	FUNCTION_43	CALL_1
0x40058d4	    0x488b05000000	            mov rax, qword [0x040058db] 	      3330	syntax.c	FUNCTION_43
0x40058db	    0x488b80981500	          mov rax, qword [rax + 0x1598] 	      3330	syntax.c	FUNCTION_43
0x40058e2	            0x89c2	                            mov edx, eax	      3330	syntax.c	FUNCTION_43
0x40058e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3330	syntax.c	FUNCTION_43
0x40058e8	    0x89904c010000	            mov dword [rax + 0x14c], edx	      3330	syntax.c	FUNCTION_43
0x40058ee	    0x4c8b0d000000	              mov r9, qword [0x040058f5]	      3331	syntax.c	FUNCTION_43	CALL_2
0x40058f5	    0x488b15000000	            mov rdx, qword [0x040058fc] 	      3331	syntax.c	FUNCTION_43	CALL_2
0x40058fc	    0x488b35000000	            mov rsi, qword [0x04005903] 	      3331	syntax.c	FUNCTION_43	CALL_2
0x4005903	        0x448b45bc	             mov r8d, dword [rbp - 0x44]	      3331	syntax.c	FUNCTION_43	CALL_2
0x4005907	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      3331	syntax.c	FUNCTION_43	CALL_2
0x400590b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3331	syntax.c	FUNCTION_43	CALL_2
0x400590f	        0x4883ec08	                              sub rsp, 8	      3331	syntax.c	FUNCTION_43	CALL_2
0x4005913	        0x488d7dd8	                   lea rdi, [rbp - 0x28]	      3331	syntax.c	FUNCTION_43	CALL_2
0x4005917	              0x57	                                push rdi	      3331	syntax.c	FUNCTION_43	CALL_2
0x4005918	          0x4889c7	                            mov rdi, rax	      3331	syntax.c	FUNCTION_43	CALL_2
0x400591b	      0xe800000000	                          call 0x4005920	      3331	syntax.c	FUNCTION_43	CALL_2
0x4005920	        0x4883c410	                           add rsp, 0x10	      3331	syntax.c	FUNCTION_43	CALL_2
0x4005924	          0x8945dc	             mov dword [rbp - 0x24], eax	      3331	syntax.c	FUNCTION_43	CALL_2
0x4005927	    0x8b0500000000	            mov eax, dword [0x0400592d] 	      3340	syntax.c	FUNCTION_43	IF_2
0x400592d	            0x85c0	                           test eax, eax	      3340	syntax.c	FUNCTION_43	IF_2
0x400592f	            0x747c	                            je 0x40059ad	      3340	syntax.c	FUNCTION_43	IF_2
0x4005931	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x4005935	          0x4889c7	                            mov rdi, rax	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x4005938	      0xe800000000	                          call 0x400593d	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x400593d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x4005941	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x4005945	          0x4889d6	                            mov rsi, rdx	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x4005948	          0x4889c7	                            mov rdi, rax	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x400594b	      0xe800000000	                          call 0x4005950	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x4005950	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4005954	        0x488d5010	                   lea rdx, [rax + 0x10]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4005958	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x400595c	          0x4889d6	                            mov rsi, rdx	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x400595f	          0x4889c7	                            mov rdi, rax	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4005962	      0xe800000000	                          call 0x4005967	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4005967	            0x85c0	                           test eax, eax	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4005969	            0x7914	                           jns 0x400597f	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x400596b	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x400596f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4005973	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4005977	        0x48894110	             mov qword [rcx + 0x10], rax	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x400597b	        0x48895118	             mov qword [rcx + 0x18], rdx	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x400597f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3346	syntax.c	FUNCTION_43	IF_2
0x4005983	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3346	syntax.c	FUNCTION_43	IF_2
0x4005987	        0x488d5001	                      lea rdx, [rax + 1]	      3346	syntax.c	FUNCTION_43	IF_2
0x400598b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3346	syntax.c	FUNCTION_43	IF_2
0x400598f	        0x48895020	             mov qword [rax + 0x20], rdx	      3346	syntax.c	FUNCTION_43	IF_2
0x4005993	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x4005997	            0x7e14	                           jle 0x40059ad	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x4005999	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x400599d	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x40059a1	        0x488d5001	                      lea rdx, [rax + 1]	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x40059a5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x40059a9	        0x48895028	             mov qword [rax + 0x28], rdx	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x40059ad	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3352	syntax.c	FUNCTION_43	IF_5
0x40059b0	            0x85c0	                           test eax, eax	      3352	syntax.c	FUNCTION_43	IF_5
0x40059b2	            0x7415	                            je 0x40059c9	      3352	syntax.c	FUNCTION_43	IF_5
0x40059b4	    0x488b05000000	            mov rax, qword [0x040059bb] 	      3353	syntax.c	FUNCTION_43	IF_5
0x40059bb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3353	syntax.c	FUNCTION_43	IF_5
0x40059bf	    0xc78054020000	              mov dword [rax + 0x254], 1	      3353	syntax.c	FUNCTION_43	IF_5
0x40059c9	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3356	syntax.c	FUNCTION_43	IF_6
0x40059cd	            0x7e3b	                           jle 0x4005a0a	      3356	syntax.c	FUNCTION_43	IF_6
0x40059cf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3358	syntax.c	FUNCTION_43	IF_6
0x40059d3	        0x488b5008	                mov rdx, qword [rax + 8]	      3358	syntax.c	FUNCTION_43	IF_6
0x40059d7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3358	syntax.c	FUNCTION_43	IF_6
0x40059db	          0x4801c2	                            add rdx, rax	      3358	syntax.c	FUNCTION_43	IF_6
0x40059de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3358	syntax.c	FUNCTION_43	IF_6
0x40059e2	        0x48895008	                mov qword [rax + 8], rdx	      3358	syntax.c	FUNCTION_43	IF_6
0x40059e6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3359	syntax.c	FUNCTION_43	IF_6
0x40059ea	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      3359	syntax.c	FUNCTION_43	IF_6
0x40059f1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3359	syntax.c	FUNCTION_43	IF_6
0x40059f5	          0x4801c2	                            add rdx, rax	      3359	syntax.c	FUNCTION_43	IF_6
0x40059f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3359	syntax.c	FUNCTION_43	IF_6
0x40059fc	    0x488990a80000	             mov qword [rax + 0xa8], rdx	      3359	syntax.c	FUNCTION_43	IF_6
0x4005a03	      0xb801000000	                              mov eax, 1	      3360	syntax.c	FUNCTION_43	IF_6
0x4005a08	            0xeb05	                           jmp 0x4005a0f	      3360	syntax.c	FUNCTION_43	IF_6
0x4005a0a	      0xb800000000	                              mov eax, 0	      3362	syntax.c	FUNCTION_43
0x4005a0f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3363	syntax.c	FUNCTION_43
0x4005a13	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3363	syntax.c	FUNCTION_43
0x4005a1c	            0x7405	                            je 0x4005a23	      3363	syntax.c	FUNCTION_43
0x4005a1e	      0xe800000000	                          call 0x4005a23	      3363	syntax.c	FUNCTION_43
0x4005a23	              0xc9	                                   leave	      3363	syntax.c	FUNCTION_43
0x4005a24	              0xc3	                                     ret	      3363	syntax.c	FUNCTION_43
syn_clear_time	functions,0:IF,0:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0	18
0x400ce5e	              0x55	                                push rbp	      6690	syntax.c	FUNCTION_108
0x400ce5f	          0x4889e5	                            mov rbp, rsp	      6690	syntax.c	FUNCTION_108
0x400ce62	        0x4883ec10	                           sub rsp, 0x10	      6690	syntax.c	FUNCTION_108
0x400ce66	        0x48897df8	                mov qword [rbp - 8], rdi	      6690	syntax.c	FUNCTION_108
0x400ce6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6691	syntax.c	FUNCTION_108	CALL_1
0x400ce6e	          0x4889c7	                            mov rdi, rax	      6691	syntax.c	FUNCTION_108	CALL_1
0x400ce71	      0xe800000000	                          call 0x400ce76	      6691	syntax.c	FUNCTION_108	CALL_1
0x400ce76	        0x488b45f8	                mov rax, qword [rbp - 8]	      6692	syntax.c	FUNCTION_108	CALL_2
0x400ce7a	        0x4883c010	                           add rax, 0x10	      6692	syntax.c	FUNCTION_108	CALL_2
0x400ce7e	          0x4889c7	                            mov rdi, rax	      6692	syntax.c	FUNCTION_108	CALL_2
0x400ce81	      0xe800000000	                          call 0x400ce86	      6692	syntax.c	FUNCTION_108	CALL_2
0x400ce86	        0x488b45f8	                mov rax, qword [rbp - 8]	      6693	syntax.c	FUNCTION_108
0x400ce8a	    0x48c740200000	               mov qword [rax + 0x20], 0	      6693	syntax.c	FUNCTION_108
0x400ce92	        0x488b45f8	                mov rax, qword [rbp - 8]	      6694	syntax.c	FUNCTION_108
0x400ce96	    0x48c740280000	               mov qword [rax + 0x28], 0	      6694	syntax.c	FUNCTION_108
0x400ce9e	              0x90	                                     nop	      6695	syntax.c	FUNCTION_108
0x400ce9f	              0xc9	                                   leave	      6695	syntax.c	FUNCTION_108
0x400cea0	              0xc3	                                     ret	      6695	syntax.c	FUNCTION_108
highlight_clear	functions,0:IF,1:SWITCH,0:FOR,0:CALL,8:ELSE,0:WHILE,0:DO,0	420
0x401034b	              0x55	                                push rbp	      8359	syntax.c	FUNCTION_120
0x401034c	          0x4889e5	                            mov rbp, rsp	      8359	syntax.c	FUNCTION_120
0x401034f	        0x4883ec10	                           sub rsp, 0x10	      8359	syntax.c	FUNCTION_120
0x4010353	          0x897dfc	                mov dword [rbp - 4], edi	      8359	syntax.c	FUNCTION_120
0x4010356	    0x488b0d000000	            mov rcx, qword [0x0401035d] 	      8360	syntax.c	FUNCTION_120
0x401035d	          0x8b45fc	                mov eax, dword [rbp - 4]	      8360	syntax.c	FUNCTION_120
0x4010360	          0x4863d0	                         movsxd rdx, eax	      8360	syntax.c	FUNCTION_120
0x4010363	          0x4889d0	                            mov rax, rdx	      8360	syntax.c	FUNCTION_120
0x4010366	        0x48c1e003	                              shl rax, 3	      8360	syntax.c	FUNCTION_120
0x401036a	          0x4801d0	                            add rax, rdx	      8360	syntax.c	FUNCTION_120
0x401036d	          0x4801c0	                            add rax, rax	      8360	syntax.c	FUNCTION_120
0x4010370	          0x4801d0	                            add rax, rdx	      8360	syntax.c	FUNCTION_120
0x4010373	        0x48c1e003	                              shl rax, 3	      8360	syntax.c	FUNCTION_120
0x4010377	          0x4801c8	                            add rax, rcx	      8360	syntax.c	FUNCTION_120
0x401037a	    0xc74010010000	               mov dword [rax + 0x10], 1	      8360	syntax.c	FUNCTION_120
0x4010381	    0x488b0d000000	            mov rcx, qword [0x04010388] 	      8362	syntax.c	FUNCTION_120
0x4010388	          0x8b45fc	                mov eax, dword [rbp - 4]	      8362	syntax.c	FUNCTION_120
0x401038b	          0x4863d0	                         movsxd rdx, eax	      8362	syntax.c	FUNCTION_120
0x401038e	          0x4889d0	                            mov rax, rdx	      8362	syntax.c	FUNCTION_120
0x4010391	        0x48c1e003	                              shl rax, 3	      8362	syntax.c	FUNCTION_120
0x4010395	          0x4801d0	                            add rax, rdx	      8362	syntax.c	FUNCTION_120
0x4010398	          0x4801c0	                            add rax, rax	      8362	syntax.c	FUNCTION_120
0x401039b	          0x4801d0	                            add rax, rdx	      8362	syntax.c	FUNCTION_120
0x401039e	        0x48c1e003	                              shl rax, 3	      8362	syntax.c	FUNCTION_120
0x40103a2	          0x4801c8	                            add rax, rcx	      8362	syntax.c	FUNCTION_120
0x40103a5	    0xc74014000000	               mov dword [rax + 0x14], 0	      8362	syntax.c	FUNCTION_120
0x40103ac	    0x488b0d000000	            mov rcx, qword [0x040103b3] 	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103b3	          0x8b45fc	                mov eax, dword [rbp - 4]	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103b6	          0x4863d0	                         movsxd rdx, eax	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103b9	          0x4889d0	                            mov rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103bc	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103c0	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103c3	          0x4801c0	                            add rax, rax	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103c6	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103c9	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103cd	          0x4801c8	                            add rax, rcx	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103d0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103d4	          0x4885c0	                           test rax, rax	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103d7	            0x745c	                            je 0x4010435	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103d9	    0x488b0d000000	            mov rcx, qword [0x040103e0] 	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103e0	          0x8b45fc	                mov eax, dword [rbp - 4]	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103e3	          0x4863d0	                         movsxd rdx, eax	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103e6	          0x4889d0	                            mov rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103e9	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103ed	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103f0	          0x4801c0	                            add rax, rax	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103f3	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103f6	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103fa	          0x4801c8	                            add rax, rcx	      8363	syntax.c	FUNCTION_120	CALL_1
0x40103fd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8363	syntax.c	FUNCTION_120	CALL_1
0x4010401	          0x4889c7	                            mov rdi, rax	      8363	syntax.c	FUNCTION_120	CALL_1
0x4010404	      0xe800000000	                          call 0x4010409	      8363	syntax.c	FUNCTION_120	CALL_1
0x4010409	    0x488b0d000000	            mov rcx, qword [0x04010410] 	      8363	syntax.c	FUNCTION_120	CALL_1
0x4010410	          0x8b45fc	                mov eax, dword [rbp - 4]	      8363	syntax.c	FUNCTION_120	CALL_1
0x4010413	          0x4863d0	                         movsxd rdx, eax	      8363	syntax.c	FUNCTION_120	CALL_1
0x4010416	          0x4889d0	                            mov rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_1
0x4010419	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_1
0x401041d	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_1
0x4010420	          0x4801c0	                            add rax, rax	      8363	syntax.c	FUNCTION_120	CALL_1
0x4010423	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_1
0x4010426	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_1
0x401042a	          0x4801c8	                            add rax, rcx	      8363	syntax.c	FUNCTION_120	CALL_1
0x401042d	    0x48c740180000	               mov qword [rax + 0x18], 0	      8363	syntax.c	FUNCTION_120	CALL_1
0x4010435	    0x488b0d000000	            mov rcx, qword [0x0401043c] 	      8364	syntax.c	FUNCTION_120	CALL_2
0x401043c	          0x8b45fc	                mov eax, dword [rbp - 4]	      8364	syntax.c	FUNCTION_120	CALL_2
0x401043f	          0x4863d0	                         movsxd rdx, eax	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010442	          0x4889d0	                            mov rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010445	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010449	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_2
0x401044c	          0x4801c0	                            add rax, rax	      8364	syntax.c	FUNCTION_120	CALL_2
0x401044f	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010452	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010456	          0x4801c8	                            add rax, rcx	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010459	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8364	syntax.c	FUNCTION_120	CALL_2
0x401045d	          0x4885c0	                           test rax, rax	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010460	            0x745c	                            je 0x40104be	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010462	    0x488b0d000000	            mov rcx, qword [0x04010469] 	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010469	          0x8b45fc	                mov eax, dword [rbp - 4]	      8364	syntax.c	FUNCTION_120	CALL_2
0x401046c	          0x4863d0	                         movsxd rdx, eax	      8364	syntax.c	FUNCTION_120	CALL_2
0x401046f	          0x4889d0	                            mov rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010472	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010476	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010479	          0x4801c0	                            add rax, rax	      8364	syntax.c	FUNCTION_120	CALL_2
0x401047c	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_2
0x401047f	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010483	          0x4801c8	                            add rax, rcx	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010486	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8364	syntax.c	FUNCTION_120	CALL_2
0x401048a	          0x4889c7	                            mov rdi, rax	      8364	syntax.c	FUNCTION_120	CALL_2
0x401048d	      0xe800000000	                          call 0x4010492	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010492	    0x488b0d000000	            mov rcx, qword [0x04010499] 	      8364	syntax.c	FUNCTION_120	CALL_2
0x4010499	          0x8b45fc	                mov eax, dword [rbp - 4]	      8364	syntax.c	FUNCTION_120	CALL_2
0x401049c	          0x4863d0	                         movsxd rdx, eax	      8364	syntax.c	FUNCTION_120	CALL_2
0x401049f	          0x4889d0	                            mov rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_2
0x40104a2	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_2
0x40104a6	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_2
0x40104a9	          0x4801c0	                            add rax, rax	      8364	syntax.c	FUNCTION_120	CALL_2
0x40104ac	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_2
0x40104af	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_2
0x40104b3	          0x4801c8	                            add rax, rcx	      8364	syntax.c	FUNCTION_120	CALL_2
0x40104b6	    0x48c740200000	               mov qword [rax + 0x20], 0	      8364	syntax.c	FUNCTION_120	CALL_2
0x40104be	    0x488b0d000000	            mov rcx, qword [0x040104c5] 	      8365	syntax.c	FUNCTION_120
0x40104c5	          0x8b45fc	                mov eax, dword [rbp - 4]	      8365	syntax.c	FUNCTION_120
0x40104c8	          0x4863d0	                         movsxd rdx, eax	      8365	syntax.c	FUNCTION_120
0x40104cb	          0x4889d0	                            mov rax, rdx	      8365	syntax.c	FUNCTION_120
0x40104ce	        0x48c1e003	                              shl rax, 3	      8365	syntax.c	FUNCTION_120
0x40104d2	          0x4801d0	                            add rax, rdx	      8365	syntax.c	FUNCTION_120
0x40104d5	          0x4801c0	                            add rax, rax	      8365	syntax.c	FUNCTION_120
0x40104d8	          0x4801d0	                            add rax, rdx	      8365	syntax.c	FUNCTION_120
0x40104db	        0x48c1e003	                              shl rax, 3	      8365	syntax.c	FUNCTION_120
0x40104df	          0x4801c8	                            add rax, rcx	      8365	syntax.c	FUNCTION_120
0x40104e2	    0xc74028000000	               mov dword [rax + 0x28], 0	      8365	syntax.c	FUNCTION_120
0x40104e9	    0x488b0d000000	            mov rcx, qword [0x040104f0] 	      8366	syntax.c	FUNCTION_120
0x40104f0	          0x8b45fc	                mov eax, dword [rbp - 4]	      8366	syntax.c	FUNCTION_120
0x40104f3	          0x4863d0	                         movsxd rdx, eax	      8366	syntax.c	FUNCTION_120
0x40104f6	          0x4889d0	                            mov rax, rdx	      8366	syntax.c	FUNCTION_120
0x40104f9	        0x48c1e003	                              shl rax, 3	      8366	syntax.c	FUNCTION_120
0x40104fd	          0x4801d0	                            add rax, rdx	      8366	syntax.c	FUNCTION_120
0x4010500	          0x4801c0	                            add rax, rax	      8366	syntax.c	FUNCTION_120
0x4010503	          0x4801d0	                            add rax, rdx	      8366	syntax.c	FUNCTION_120
0x4010506	        0x48c1e003	                              shl rax, 3	      8366	syntax.c	FUNCTION_120
0x401050a	          0x4801c8	                            add rax, rcx	      8366	syntax.c	FUNCTION_120
0x401050d	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      8366	syntax.c	FUNCTION_120
0x4010514	    0x488b0d000000	            mov rcx, qword [0x0401051b] 	      8367	syntax.c	FUNCTION_120
0x401051b	          0x8b45fc	                mov eax, dword [rbp - 4]	      8367	syntax.c	FUNCTION_120
0x401051e	          0x4863d0	                         movsxd rdx, eax	      8367	syntax.c	FUNCTION_120
0x4010521	          0x4889d0	                            mov rax, rdx	      8367	syntax.c	FUNCTION_120
0x4010524	        0x48c1e003	                              shl rax, 3	      8367	syntax.c	FUNCTION_120
0x4010528	          0x4801d0	                            add rax, rdx	      8367	syntax.c	FUNCTION_120
0x401052b	          0x4801c0	                            add rax, rax	      8367	syntax.c	FUNCTION_120
0x401052e	          0x4801d0	                            add rax, rdx	      8367	syntax.c	FUNCTION_120
0x4010531	        0x48c1e003	                              shl rax, 3	      8367	syntax.c	FUNCTION_120
0x4010535	          0x4801c8	                            add rax, rcx	      8367	syntax.c	FUNCTION_120
0x4010538	    0xc74030000000	               mov dword [rax + 0x30], 0	      8367	syntax.c	FUNCTION_120
0x401053f	    0x488b0d000000	            mov rcx, qword [0x04010546] 	      8368	syntax.c	FUNCTION_120
0x4010546	          0x8b45fc	                mov eax, dword [rbp - 4]	      8368	syntax.c	FUNCTION_120
0x4010549	          0x4863d0	                         movsxd rdx, eax	      8368	syntax.c	FUNCTION_120
0x401054c	          0x4889d0	                            mov rax, rdx	      8368	syntax.c	FUNCTION_120
0x401054f	        0x48c1e003	                              shl rax, 3	      8368	syntax.c	FUNCTION_120
0x4010553	          0x4801d0	                            add rax, rdx	      8368	syntax.c	FUNCTION_120
0x4010556	          0x4801c0	                            add rax, rax	      8368	syntax.c	FUNCTION_120
0x4010559	          0x4801d0	                            add rax, rdx	      8368	syntax.c	FUNCTION_120
0x401055c	        0x48c1e003	                              shl rax, 3	      8368	syntax.c	FUNCTION_120
0x4010560	          0x4801c8	                            add rax, rcx	      8368	syntax.c	FUNCTION_120
0x4010563	    0xc74034000000	               mov dword [rax + 0x34], 0	      8368	syntax.c	FUNCTION_120
0x401056a	    0x488b0d000000	            mov rcx, qword [0x04010571] 	      8369	syntax.c	FUNCTION_120
0x4010571	          0x8b45fc	                mov eax, dword [rbp - 4]	      8369	syntax.c	FUNCTION_120
0x4010574	          0x4863d0	                         movsxd rdx, eax	      8369	syntax.c	FUNCTION_120
0x4010577	          0x4889d0	                            mov rax, rdx	      8369	syntax.c	FUNCTION_120
0x401057a	        0x48c1e003	                              shl rax, 3	      8369	syntax.c	FUNCTION_120
0x401057e	          0x4801d0	                            add rax, rdx	      8369	syntax.c	FUNCTION_120
0x4010581	          0x4801c0	                            add rax, rax	      8369	syntax.c	FUNCTION_120
0x4010584	          0x4801d0	                            add rax, rdx	      8369	syntax.c	FUNCTION_120
0x4010587	        0x48c1e003	                              shl rax, 3	      8369	syntax.c	FUNCTION_120
0x401058b	          0x4801c8	                            add rax, rcx	      8369	syntax.c	FUNCTION_120
0x401058e	    0xc74038000000	               mov dword [rax + 0x38], 0	      8369	syntax.c	FUNCTION_120
0x4010595	    0x488b0d000000	            mov rcx, qword [0x0401059c] 	      8370	syntax.c	FUNCTION_120
0x401059c	          0x8b45fc	                mov eax, dword [rbp - 4]	      8370	syntax.c	FUNCTION_120
0x401059f	          0x4863d0	                         movsxd rdx, eax	      8370	syntax.c	FUNCTION_120
0x40105a2	          0x4889d0	                            mov rax, rdx	      8370	syntax.c	FUNCTION_120
0x40105a5	        0x48c1e003	                              shl rax, 3	      8370	syntax.c	FUNCTION_120
0x40105a9	          0x4801d0	                            add rax, rdx	      8370	syntax.c	FUNCTION_120
0x40105ac	          0x4801c0	                            add rax, rax	      8370	syntax.c	FUNCTION_120
0x40105af	          0x4801d0	                            add rax, rdx	      8370	syntax.c	FUNCTION_120
0x40105b2	        0x48c1e003	                              shl rax, 3	      8370	syntax.c	FUNCTION_120
0x40105b6	          0x4801c8	                            add rax, rcx	      8370	syntax.c	FUNCTION_120
0x40105b9	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      8370	syntax.c	FUNCTION_120
0x40105c0	    0x488b0d000000	            mov rcx, qword [0x040105c7] 	      8372	syntax.c	FUNCTION_120
0x40105c7	          0x8b45fc	                mov eax, dword [rbp - 4]	      8372	syntax.c	FUNCTION_120
0x40105ca	          0x4863d0	                         movsxd rdx, eax	      8372	syntax.c	FUNCTION_120
0x40105cd	          0x4889d0	                            mov rax, rdx	      8372	syntax.c	FUNCTION_120
0x40105d0	        0x48c1e003	                              shl rax, 3	      8372	syntax.c	FUNCTION_120
0x40105d4	          0x4801d0	                            add rax, rdx	      8372	syntax.c	FUNCTION_120
0x40105d7	          0x4801c0	                            add rax, rax	      8372	syntax.c	FUNCTION_120
0x40105da	          0x4801d0	                            add rax, rdx	      8372	syntax.c	FUNCTION_120
0x40105dd	        0x48c1e003	                              shl rax, 3	      8372	syntax.c	FUNCTION_120
0x40105e1	          0x4801c8	                            add rax, rcx	      8372	syntax.c	FUNCTION_120
0x40105e4	    0xc7406c000000	               mov dword [rax + 0x6c], 0	      8372	syntax.c	FUNCTION_120
0x40105eb	    0x488b0d000000	            mov rcx, qword [0x040105f2] 	      8373	syntax.c	FUNCTION_120	CALL_3
0x40105f2	          0x8b45fc	                mov eax, dword [rbp - 4]	      8373	syntax.c	FUNCTION_120	CALL_3
0x40105f5	          0x4863d0	                         movsxd rdx, eax	      8373	syntax.c	FUNCTION_120	CALL_3
0x40105f8	          0x4889d0	                            mov rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_3
0x40105fb	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_3
0x40105ff	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010602	          0x4801c0	                            add rax, rax	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010605	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010608	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_3
0x401060c	          0x4801c8	                            add rax, rcx	      8373	syntax.c	FUNCTION_120	CALL_3
0x401060f	        0x488b4070	            mov rax, qword [rax + 0x70] 	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010613	          0x4885c0	                           test rax, rax	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010616	            0x745c	                            je 0x4010674	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010618	    0x488b0d000000	            mov rcx, qword [0x0401061f] 	      8373	syntax.c	FUNCTION_120	CALL_3
0x401061f	          0x8b45fc	                mov eax, dword [rbp - 4]	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010622	          0x4863d0	                         movsxd rdx, eax	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010625	          0x4889d0	                            mov rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010628	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_3
0x401062c	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_3
0x401062f	          0x4801c0	                            add rax, rax	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010632	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010635	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010639	          0x4801c8	                            add rax, rcx	      8373	syntax.c	FUNCTION_120	CALL_3
0x401063c	        0x488b4070	            mov rax, qword [rax + 0x70] 	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010640	          0x4889c7	                            mov rdi, rax	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010643	      0xe800000000	                          call 0x4010648	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010648	    0x488b0d000000	            mov rcx, qword [0x0401064f] 	      8373	syntax.c	FUNCTION_120	CALL_3
0x401064f	          0x8b45fc	                mov eax, dword [rbp - 4]	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010652	          0x4863d0	                         movsxd rdx, eax	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010655	          0x4889d0	                            mov rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010658	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_3
0x401065c	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_3
0x401065f	          0x4801c0	                            add rax, rax	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010662	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010665	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010669	          0x4801c8	                            add rax, rcx	      8373	syntax.c	FUNCTION_120	CALL_3
0x401066c	    0x48c740700000	               mov qword [rax + 0x70], 0	      8373	syntax.c	FUNCTION_120	CALL_3
0x4010674	    0x488b0d000000	            mov rcx, qword [0x0401067b] 	      8374	syntax.c	FUNCTION_120	CALL_4
0x401067b	          0x8b45fc	                mov eax, dword [rbp - 4]	      8374	syntax.c	FUNCTION_120	CALL_4
0x401067e	          0x4863d0	                         movsxd rdx, eax	      8374	syntax.c	FUNCTION_120	CALL_4
0x4010681	          0x4889d0	                            mov rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_4
0x4010684	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_4
0x4010688	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_4
0x401068b	          0x4801c0	                            add rax, rax	      8374	syntax.c	FUNCTION_120	CALL_4
0x401068e	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_4
0x4010691	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_4
0x4010695	          0x4801c8	                            add rax, rcx	      8374	syntax.c	FUNCTION_120	CALL_4
0x4010698	        0x488b4078	            mov rax, qword [rax + 0x78] 	      8374	syntax.c	FUNCTION_120	CALL_4
0x401069c	          0x4885c0	                           test rax, rax	      8374	syntax.c	FUNCTION_120	CALL_4
0x401069f	            0x745c	                            je 0x40106fd	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106a1	    0x488b0d000000	            mov rcx, qword [0x040106a8] 	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106a8	          0x8b45fc	                mov eax, dword [rbp - 4]	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106ab	          0x4863d0	                         movsxd rdx, eax	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106ae	          0x4889d0	                            mov rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106b1	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106b5	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106b8	          0x4801c0	                            add rax, rax	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106bb	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106be	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106c2	          0x4801c8	                            add rax, rcx	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106c5	        0x488b4078	            mov rax, qword [rax + 0x78] 	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106c9	          0x4889c7	                            mov rdi, rax	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106cc	      0xe800000000	                          call 0x40106d1	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106d1	    0x488b0d000000	            mov rcx, qword [0x040106d8] 	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106d8	          0x8b45fc	                mov eax, dword [rbp - 4]	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106db	          0x4863d0	                         movsxd rdx, eax	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106de	          0x4889d0	                            mov rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106e1	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106e5	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106e8	          0x4801c0	                            add rax, rax	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106eb	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106ee	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106f2	          0x4801c8	                            add rax, rcx	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106f5	    0x48c740780000	               mov qword [rax + 0x78], 0	      8374	syntax.c	FUNCTION_120	CALL_4
0x40106fd	    0x488b0d000000	            mov rcx, qword [0x04010704] 	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010704	          0x8b45fc	                mov eax, dword [rbp - 4]	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010707	          0x4863d0	                         movsxd rdx, eax	      8375	syntax.c	FUNCTION_120	CALL_5
0x401070a	          0x4889d0	                            mov rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_5
0x401070d	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010711	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010714	          0x4801c0	                            add rax, rax	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010717	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_5
0x401071a	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_5
0x401071e	          0x4801c8	                            add rax, rcx	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010721	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010728	          0x4885c0	                           test rax, rax	      8375	syntax.c	FUNCTION_120	CALL_5
0x401072b	            0x7462	                            je 0x401078f	      8375	syntax.c	FUNCTION_120	CALL_5
0x401072d	    0x488b0d000000	            mov rcx, qword [0x04010734] 	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010734	          0x8b45fc	                mov eax, dword [rbp - 4]	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010737	          0x4863d0	                         movsxd rdx, eax	      8375	syntax.c	FUNCTION_120	CALL_5
0x401073a	          0x4889d0	                            mov rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_5
0x401073d	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010741	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010744	          0x4801c0	                            add rax, rax	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010747	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_5
0x401074a	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_5
0x401074e	          0x4801c8	                            add rax, rcx	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010751	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010758	          0x4889c7	                            mov rdi, rax	      8375	syntax.c	FUNCTION_120	CALL_5
0x401075b	      0xe800000000	                          call 0x4010760	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010760	    0x488b0d000000	            mov rcx, qword [0x04010767] 	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010767	          0x8b45fc	                mov eax, dword [rbp - 4]	      8375	syntax.c	FUNCTION_120	CALL_5
0x401076a	          0x4863d0	                         movsxd rdx, eax	      8375	syntax.c	FUNCTION_120	CALL_5
0x401076d	          0x4889d0	                            mov rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010770	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010774	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010777	          0x4801c0	                            add rax, rax	      8375	syntax.c	FUNCTION_120	CALL_5
0x401077a	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_5
0x401077d	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010781	          0x4801c8	                            add rax, rcx	      8375	syntax.c	FUNCTION_120	CALL_5
0x4010784	    0x48c780800000	               mov qword [rax + 0x80], 0	      8375	syntax.c	FUNCTION_120	CALL_5
0x401078f	    0x488b0d000000	            mov rcx, qword [0x04010796] 	      8378	syntax.c	FUNCTION_120
0x4010796	          0x8b45fc	                mov eax, dword [rbp - 4]	      8378	syntax.c	FUNCTION_120
0x4010799	          0x4863d0	                         movsxd rdx, eax	      8378	syntax.c	FUNCTION_120
0x401079c	          0x4889d0	                            mov rax, rdx	      8378	syntax.c	FUNCTION_120
0x401079f	        0x48c1e003	                              shl rax, 3	      8378	syntax.c	FUNCTION_120
0x40107a3	          0x4801d0	                            add rax, rdx	      8378	syntax.c	FUNCTION_120
0x40107a6	          0x4801c0	                            add rax, rax	      8378	syntax.c	FUNCTION_120
0x40107a9	          0x4801d0	                            add rax, rdx	      8378	syntax.c	FUNCTION_120
0x40107ac	        0x48c1e003	                              shl rax, 3	      8378	syntax.c	FUNCTION_120
0x40107b0	          0x4801c8	                            add rax, rcx	      8378	syntax.c	FUNCTION_120
0x40107b3	    0x48c7404099d4	mov qword [rax + 0x40], 0xffffffffffffd499	      8378	syntax.c	FUNCTION_120
0x40107bb	    0x488b0d000000	            mov rcx, qword [0x040107c2] 	      8379	syntax.c	FUNCTION_120
0x40107c2	          0x8b45fc	                mov eax, dword [rbp - 4]	      8379	syntax.c	FUNCTION_120
0x40107c5	          0x4863d0	                         movsxd rdx, eax	      8379	syntax.c	FUNCTION_120
0x40107c8	          0x4889d0	                            mov rax, rdx	      8379	syntax.c	FUNCTION_120
0x40107cb	        0x48c1e003	                              shl rax, 3	      8379	syntax.c	FUNCTION_120
0x40107cf	          0x4801d0	                            add rax, rdx	      8379	syntax.c	FUNCTION_120
0x40107d2	          0x4801c0	                            add rax, rax	      8379	syntax.c	FUNCTION_120
0x40107d5	          0x4801d0	                            add rax, rdx	      8379	syntax.c	FUNCTION_120
0x40107d8	        0x48c1e003	                              shl rax, 3	      8379	syntax.c	FUNCTION_120
0x40107dc	          0x4801c8	                            add rax, rcx	      8379	syntax.c	FUNCTION_120
0x40107df	    0x48c7404899d4	mov qword [rax + 0x48], 0xffffffffffffd499	      8379	syntax.c	FUNCTION_120
0x40107e7	    0x488b0d000000	            mov rcx, qword [0x040107ee] 	      8382	syntax.c	FUNCTION_120
0x40107ee	          0x8b45fc	                mov eax, dword [rbp - 4]	      8382	syntax.c	FUNCTION_120
0x40107f1	          0x4863d0	                         movsxd rdx, eax	      8382	syntax.c	FUNCTION_120
0x40107f4	          0x4889d0	                            mov rax, rdx	      8382	syntax.c	FUNCTION_120
0x40107f7	        0x48c1e003	                              shl rax, 3	      8382	syntax.c	FUNCTION_120
0x40107fb	          0x4801d0	                            add rax, rdx	      8382	syntax.c	FUNCTION_120
0x40107fe	          0x4801c0	                            add rax, rax	      8382	syntax.c	FUNCTION_120
0x4010801	          0x4801d0	                            add rax, rdx	      8382	syntax.c	FUNCTION_120
0x4010804	        0x48c1e003	                              shl rax, 3	      8382	syntax.c	FUNCTION_120
0x4010808	          0x4801c8	                            add rax, rcx	      8382	syntax.c	FUNCTION_120
0x401080b	    0x48c7405099d4	mov qword [rax + 0x50], 0xffffffffffffd499	      8382	syntax.c	FUNCTION_120
0x4010813	    0x488b0d000000	            mov rcx, qword [0x0401081a] 	      8383	syntax.c	FUNCTION_120	CALL_6
0x401081a	          0x8b45fc	                mov eax, dword [rbp - 4]	      8383	syntax.c	FUNCTION_120	CALL_6
0x401081d	          0x4863d0	                         movsxd rdx, eax	      8383	syntax.c	FUNCTION_120	CALL_6
0x4010820	          0x4889d0	                            mov rax, rdx	      8383	syntax.c	FUNCTION_120	CALL_6
0x4010823	        0x48c1e003	                              shl rax, 3	      8383	syntax.c	FUNCTION_120	CALL_6
0x4010827	          0x4801d0	                            add rax, rdx	      8383	syntax.c	FUNCTION_120	CALL_6
0x401082a	          0x4801c0	                            add rax, rax	      8383	syntax.c	FUNCTION_120	CALL_6
0x401082d	          0x4801d0	                            add rax, rdx	      8383	syntax.c	FUNCTION_120	CALL_6
0x4010830	        0x48c1e003	                              shl rax, 3	      8383	syntax.c	FUNCTION_120	CALL_6
0x4010834	          0x4801c8	                            add rax, rcx	      8383	syntax.c	FUNCTION_120	CALL_6
0x4010837	        0x488b4058	            mov rax, qword [rax + 0x58] 	      8383	syntax.c	FUNCTION_120	CALL_6
0x401083b	          0x4889c7	                            mov rdi, rax	      8383	syntax.c	FUNCTION_120	CALL_6
0x401083e	      0xe800000000	                          call 0x4010843	      8383	syntax.c	FUNCTION_120	CALL_6
0x4010843	    0x488b0d000000	            mov rcx, qword [0x0401084a] 	      8384	syntax.c	FUNCTION_120
0x401084a	          0x8b45fc	                mov eax, dword [rbp - 4]	      8384	syntax.c	FUNCTION_120
0x401084d	          0x4863d0	                         movsxd rdx, eax	      8384	syntax.c	FUNCTION_120
0x4010850	          0x4889d0	                            mov rax, rdx	      8384	syntax.c	FUNCTION_120
0x4010853	        0x48c1e003	                              shl rax, 3	      8384	syntax.c	FUNCTION_120
0x4010857	          0x4801d0	                            add rax, rdx	      8384	syntax.c	FUNCTION_120
0x401085a	          0x4801c0	                            add rax, rax	      8384	syntax.c	FUNCTION_120
0x401085d	          0x4801d0	                            add rax, rdx	      8384	syntax.c	FUNCTION_120
0x4010860	        0x48c1e003	                              shl rax, 3	      8384	syntax.c	FUNCTION_120
0x4010864	          0x4801c8	                            add rax, rcx	      8384	syntax.c	FUNCTION_120
0x4010867	    0x48c740580000	               mov qword [rax + 0x58], 0	      8384	syntax.c	FUNCTION_120
0x401086f	    0x488b0d000000	            mov rcx, qword [0x04010876] 	      8389	syntax.c	FUNCTION_120	CALL_8
0x4010876	          0x8b45fc	                mov eax, dword [rbp - 4]	      8389	syntax.c	FUNCTION_120	CALL_8
0x4010879	          0x4863d0	                         movsxd rdx, eax	      8389	syntax.c	FUNCTION_120	CALL_8
0x401087c	          0x4889d0	                            mov rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_8
0x401087f	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_8
0x4010883	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_8
0x4010886	          0x4801c0	                            add rax, rax	      8389	syntax.c	FUNCTION_120	CALL_8
0x4010889	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_8
0x401088c	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_8
0x4010890	          0x4801c8	                            add rax, rcx	      8389	syntax.c	FUNCTION_120	CALL_8
0x4010893	        0x488b4060	            mov rax, qword [rax + 0x60] 	      8389	syntax.c	FUNCTION_120	CALL_8
0x4010897	          0x4885c0	                           test rax, rax	      8389	syntax.c	FUNCTION_120	CALL_8
0x401089a	            0x745c	                            je 0x40108f8	      8389	syntax.c	FUNCTION_120	CALL_8
0x401089c	    0x488b0d000000	            mov rcx, qword [0x040108a3] 	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108a3	          0x8b45fc	                mov eax, dword [rbp - 4]	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108a6	          0x4863d0	                         movsxd rdx, eax	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108a9	          0x4889d0	                            mov rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108ac	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108b0	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108b3	          0x4801c0	                            add rax, rax	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108b6	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108b9	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108bd	          0x4801c8	                            add rax, rcx	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108c0	        0x488b4060	            mov rax, qword [rax + 0x60] 	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108c4	          0x4889c7	                            mov rdi, rax	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108c7	      0xe800000000	                          call 0x40108cc	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108cc	    0x488b0d000000	            mov rcx, qword [0x040108d3] 	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108d3	          0x8b45fc	                mov eax, dword [rbp - 4]	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108d6	          0x4863d0	                         movsxd rdx, eax	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108d9	          0x4889d0	                            mov rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108dc	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108e0	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108e3	          0x4801c0	                            add rax, rax	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108e6	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108e9	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108ed	          0x4801c8	                            add rax, rcx	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108f0	    0x48c740600000	               mov qword [rax + 0x60], 0	      8389	syntax.c	FUNCTION_120	CALL_8
0x40108f8	    0x488b0d000000	            mov rcx, qword [0x040108ff] 	      8390	syntax.c	FUNCTION_120
0x40108ff	          0x8b45fc	                mov eax, dword [rbp - 4]	      8390	syntax.c	FUNCTION_120
0x4010902	          0x4863d0	                         movsxd rdx, eax	      8390	syntax.c	FUNCTION_120
0x4010905	          0x4889d0	                            mov rax, rdx	      8390	syntax.c	FUNCTION_120
0x4010908	        0x48c1e003	                              shl rax, 3	      8390	syntax.c	FUNCTION_120
0x401090c	          0x4801d0	                            add rax, rdx	      8390	syntax.c	FUNCTION_120
0x401090f	          0x4801c0	                            add rax, rax	      8390	syntax.c	FUNCTION_120
0x4010912	          0x4801d0	                            add rax, rdx	      8390	syntax.c	FUNCTION_120
0x4010915	        0x48c1e003	                              shl rax, 3	      8390	syntax.c	FUNCTION_120
0x4010919	          0x4801c8	                            add rax, rcx	      8390	syntax.c	FUNCTION_120
0x401091c	    0xc74068000000	               mov dword [rax + 0x68], 0	      8390	syntax.c	FUNCTION_120
0x4010923	    0x488b0d000000	            mov rcx, qword [0x0401092a] 	      8395	syntax.c	FUNCTION_120	IF_1
0x401092a	          0x8b45fc	                mov eax, dword [rbp - 4]	      8395	syntax.c	FUNCTION_120	IF_1
0x401092d	          0x4863d0	                         movsxd rdx, eax	      8395	syntax.c	FUNCTION_120	IF_1
0x4010930	          0x4889d0	                            mov rax, rdx	      8395	syntax.c	FUNCTION_120	IF_1
0x4010933	        0x48c1e003	                              shl rax, 3	      8395	syntax.c	FUNCTION_120	IF_1
0x4010937	          0x4801d0	                            add rax, rdx	      8395	syntax.c	FUNCTION_120	IF_1
0x401093a	          0x4801c0	                            add rax, rax	      8395	syntax.c	FUNCTION_120	IF_1
0x401093d	          0x4801d0	                            add rax, rdx	      8395	syntax.c	FUNCTION_120	IF_1
0x4010940	        0x48c1e003	                              shl rax, 3	      8395	syntax.c	FUNCTION_120	IF_1
0x4010944	          0x4801c8	                            add rax, rcx	      8395	syntax.c	FUNCTION_120	IF_1
0x4010947	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      8395	syntax.c	FUNCTION_120	IF_1
0x401094d	            0x85c0	                           test eax, eax	      8395	syntax.c	FUNCTION_120	IF_1
0x401094f	            0x752e	                           jne 0x401097f	      8395	syntax.c	FUNCTION_120	IF_1
0x4010951	    0x488b0d000000	            mov rcx, qword [0x04010958] 	      8396	syntax.c	FUNCTION_120	IF_1
0x4010958	          0x8b45fc	                mov eax, dword [rbp - 4]	      8396	syntax.c	FUNCTION_120	IF_1
0x401095b	          0x4863d0	                         movsxd rdx, eax	      8396	syntax.c	FUNCTION_120	IF_1
0x401095e	          0x4889d0	                            mov rax, rdx	      8396	syntax.c	FUNCTION_120	IF_1
0x4010961	        0x48c1e003	                              shl rax, 3	      8396	syntax.c	FUNCTION_120	IF_1
0x4010965	          0x4801d0	                            add rax, rdx	      8396	syntax.c	FUNCTION_120	IF_1
0x4010968	          0x4801c0	                            add rax, rax	      8396	syntax.c	FUNCTION_120	IF_1
0x401096b	          0x4801d0	                            add rax, rdx	      8396	syntax.c	FUNCTION_120	IF_1
0x401096e	        0x48c1e003	                              shl rax, 3	      8396	syntax.c	FUNCTION_120	IF_1
0x4010972	          0x4801c8	                            add rax, rcx	      8396	syntax.c	FUNCTION_120	IF_1
0x4010975	    0xc78090000000	               mov dword [rax + 0x90], 0	      8396	syntax.c	FUNCTION_120	IF_1
0x401097f	              0x90	                                     nop	      8398	syntax.c	FUNCTION_120
0x4010980	              0xc9	                                   leave	      8398	syntax.c	FUNCTION_120
0x4010981	              0xc3	                                     ret	      8398	syntax.c	FUNCTION_120
restore_cterm_colors	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	10
0x4010117	              0x55	                                push rbp	      8316	syntax.c	FUNCTION_118
0x4010118	          0x4889e5	                            mov rbp, rsp	      8316	syntax.c	FUNCTION_118
0x401011b	    0xc70500000000	               mov dword [0x04010125], 0	      8323	syntax.c	FUNCTION_118
0x4010125	    0xc70500000000	               mov dword [0x0401012f], 0	      8324	syntax.c	FUNCTION_118
0x401012f	    0xc70500000000	               mov dword [0x04010139], 0	      8325	syntax.c	FUNCTION_118
0x4010139	    0x48c705000000	mov qword [0x04010144], 0xffffffffffffd499 	      8327	syntax.c	FUNCTION_118
0x4010144	    0x48c705000000	mov qword [0x0401014f], 0xffffffffffffd499 	      8328	syntax.c	FUNCTION_118
0x401014f	              0x90	                                     nop	      8331	syntax.c	FUNCTION_118
0x4010150	              0x5d	                                 pop rbp	      8331	syntax.c	FUNCTION_118
0x4010151	              0xc3	                                     ret	      8331	syntax.c	FUNCTION_118
syn_attr2attr	functions,0:IF,3:SWITCH,0:FOR,0:CALL,3:ELSE,2:WHILE,0:DO,0	36
0x4011c0c	              0x55	                                push rbp	      9173	syntax.c	FUNCTION_138
0x4011c0d	          0x4889e5	                            mov rbp, rsp	      9173	syntax.c	FUNCTION_138
0x4011c10	        0x4883ec20	                           sub rsp, 0x20	      9173	syntax.c	FUNCTION_138
0x4011c14	          0x897dec	             mov dword [rbp - 0x14], edi	      9173	syntax.c	FUNCTION_138
0x4011c17	    0x8b0500000000	            mov eax, dword [0x04011c1d] 	      9177	syntax.c	FUNCTION_138	IF_1
0x4011c1d	            0x85c0	                           test eax, eax	      9177	syntax.c	FUNCTION_138	IF_1
0x4011c1f	            0x7410	                            je 0x4011c31	      9177	syntax.c	FUNCTION_138	IF_1
0x4011c21	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9178	syntax.c	FUNCTION_138	CALL_1
0x4011c24	            0x89c7	                            mov edi, eax	      9178	syntax.c	FUNCTION_138	CALL_1
0x4011c26	      0xe800000000	                          call 0x4011c2b	      9178	syntax.c	FUNCTION_138	CALL_1
0x4011c2b	        0x488945f8	                mov qword [rbp - 8], rax	      9178	syntax.c	FUNCTION_138	CALL_1
0x4011c2f	            0xeb33	                           jmp 0x4011c64	      9178	syntax.c	FUNCTION_138	CALL_1
0x4011c31	    0x8b0500000000	            mov eax, dword [0x04011c37] 	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4011c37	          0x83f801	                              cmp eax, 1	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4011c3a	            0x7f0a	                            jg 0x4011c46	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4011c3c	    0x8b0500000000	            mov eax, dword [0x04011c42] 	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4011c42	            0x85c0	                           test eax, eax	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4011c44	            0x7410	                            je 0x4011c56	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4011c46	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4011c49	            0x89c7	                            mov edi, eax	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4011c4b	      0xe800000000	                          call 0x4011c50	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4011c50	        0x488945f8	                mov qword [rbp - 8], rax	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4011c54	            0xeb0e	                           jmp 0x4011c64	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4011c56	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9184	syntax.c	FUNCTION_138	CALL_3
0x4011c59	            0x89c7	                            mov edi, eax	      9184	syntax.c	FUNCTION_138	CALL_3
0x4011c5b	      0xe800000000	                          call 0x4011c60	      9184	syntax.c	FUNCTION_138	CALL_3
0x4011c60	        0x488945f8	                mov qword [rbp - 8], rax	      9184	syntax.c	FUNCTION_138	CALL_3
0x4011c64	      0x48837df800	                  cmp qword [rbp - 8], 0	      9186	syntax.c	FUNCTION_138	IF_3
0x4011c69	            0x7507	                           jne 0x4011c72	      9186	syntax.c	FUNCTION_138	IF_3
0x4011c6b	      0xb800000000	                              mov eax, 0	      9187	syntax.c	FUNCTION_138	IF_3
0x4011c70	            0xeb08	                           jmp 0x4011c7a	      9187	syntax.c	FUNCTION_138	IF_3
0x4011c72	        0x488b45f8	                mov rax, qword [rbp - 8]	      9188	syntax.c	FUNCTION_138
0x4011c76	           0xfb700	                   movzx eax, word [rax]	      9188	syntax.c	FUNCTION_138
0x4011c79	              0x98	                                    cwde	      9188	syntax.c	FUNCTION_138
0x4011c7a	              0xc9	                                   leave	      9189	syntax.c	FUNCTION_138
0x4011c7b	              0xc3	                                     ret	      9189	syntax.c	FUNCTION_138
load_current_state	functions,0:IF,4:SWITCH,0:FOR,1:CALL,5:ELSE,2:WHILE,0:DO,0	238
0x4002038	              0x55	                                push rbp	      1594	syntax.c	FUNCTION_20
0x4002039	          0x4889e5	                            mov rbp, rsp	      1594	syntax.c	FUNCTION_20
0x400203c	              0x53	                                push rbx	      1594	syntax.c	FUNCTION_20
0x400203d	        0x4883ec28	                           sub rsp, 0x28	      1594	syntax.c	FUNCTION_20
0x4002041	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1594	syntax.c	FUNCTION_20
0x4002045	      0xe868e5ffff	            call sym.clear_current_state	      1598	syntax.c	FUNCTION_20	CALL_1
0x400204a	      0xe8c2060000	         call sym.validate_current_state	      1599	syntax.c	FUNCTION_20	CALL_2
0x400204f	    0xc70500000000	     mov dword [0x04002059], 0xffffffff 	      1600	syntax.c	FUNCTION_20
0x4002059	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1601	syntax.c	FUNCTION_20	IF_1
0x400205d	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1601	syntax.c	FUNCTION_20	IF_1
0x4002063	            0x85c0	                           test eax, eax	      1601	syntax.c	FUNCTION_20	IF_1
0x4002065	     0xf841b030000	                            je 0x4002386	      1601	syntax.c	FUNCTION_20	IF_1
0x400206b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x400206f	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4002075	            0x89c6	                            mov esi, eax	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4002077	      0xbf00000000	                              mov edi, 0	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x400207c	      0xe800000000	                          call 0x4002081	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4002081	            0x85c0	                           test eax, eax	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4002083	     0xf84fd020000	                            je 0x4002386	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4002089	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x400208d	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x4002093	          0x83f807	                              cmp eax, 7	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x4002096	            0x7e0e	                           jle 0x40020a6	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x4002098	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1605	syntax.c	FUNCTION_20	IF_1	IF_2
0x400209c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1605	syntax.c	FUNCTION_20	IF_1	IF_2
0x40020a0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1605	syntax.c	FUNCTION_20	IF_1	IF_2
0x40020a4	            0xeb0c	                           jmp 0x40020b2	      1605	syntax.c	FUNCTION_20	IF_1	IF_2
0x40020a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1607	syntax.c	FUNCTION_20	IF_1	ELSE_1
0x40020aa	        0x4883c010	                           add rax, 0x10	      1607	syntax.c	FUNCTION_20	IF_1	ELSE_1
0x40020ae	        0x488945e8	             mov qword [rbp - 0x18], rax	      1607	syntax.c	FUNCTION_20	IF_1	ELSE_1
0x40020b2	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020b9	      0xe9a5020000	                           jmp 0x4002363	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020be	    0x488b0d000000	            mov rcx, qword [0x040020c5] 	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020c5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020c8	          0x4863d0	                         movsxd rdx, eax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020cb	          0x4889d0	                            mov rax, rdx	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020ce	        0x48c1e003	                              shl rax, 3	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020d2	          0x4801d0	                            add rax, rdx	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020d5	        0x48c1e004	                              shl rax, 4	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020d9	          0x4801c1	                            add rcx, rax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020dc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020df	          0x4863d0	                         movsxd rdx, eax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020e2	          0x4889d0	                            mov rax, rdx	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020e5	          0x4801c0	                            add rax, rax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020e8	          0x4801d0	                            add rax, rdx	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020eb	        0x48c1e003	                              shl rax, 3	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020ef	          0x4889c2	                            mov rdx, rax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020f6	          0x4801d0	                            add rax, rdx	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020f9	            0x8b00	                    mov eax, dword [rax]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020fb	            0x8901	                    mov dword [rcx], eax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40020fd	    0x488b0d000000	            mov rcx, qword [0x04002104] 	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002104	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002107	          0x4863d0	                         movsxd rdx, eax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400210a	          0x4889d0	                            mov rax, rdx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400210d	        0x48c1e003	                              shl rax, 3	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002111	          0x4801d0	                            add rax, rdx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002114	        0x48c1e004	                              shl rax, 4	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002118	          0x4801c1	                            add rcx, rax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400211b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400211e	          0x4863d0	                         movsxd rdx, eax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002121	          0x4889d0	                            mov rax, rdx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002124	          0x4801c0	                            add rax, rax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002127	          0x4801d0	                            add rax, rdx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400212a	        0x48c1e003	                              shl rax, 3	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400212e	          0x4889c2	                            mov rdx, rax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002131	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002135	          0x4801d0	                            add rax, rdx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002138	          0x8b4004	                mov eax, dword [rax + 4]	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400213b	            0x4898	                                    cdqe	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400213d	        0x48894168	             mov qword [rcx + 0x68], rax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002141	    0x488b0d000000	            mov rcx, qword [0x04002148] 	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002148	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400214b	          0x4863d0	                         movsxd rdx, eax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400214e	          0x4889d0	                            mov rax, rdx	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002151	        0x48c1e003	                              shl rax, 3	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002155	          0x4801d0	                            add rax, rdx	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002158	        0x48c1e004	                              shl rax, 4	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400215c	          0x4801c1	                            add rcx, rax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400215f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002162	          0x4863d0	                         movsxd rdx, eax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002165	          0x4889d0	                            mov rax, rdx	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002168	          0x4801c0	                            add rax, rax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400216b	          0x4801d0	                            add rax, rdx	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400216e	        0x48c1e003	                              shl rax, 3	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002172	          0x4889c2	                            mov rdx, rax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002175	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002179	          0x4801d0	                            add rax, rdx	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400217c	          0x8b4008	                mov eax, dword [rax + 8]	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400217f	          0x894170	             mov dword [rcx + 0x70], eax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002182	    0x488b0d000000	            mov rcx, qword [0x04002189] 	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002189	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400218c	          0x4863d0	                         movsxd rdx, eax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400218f	          0x4889d0	                            mov rax, rdx	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002192	        0x48c1e003	                              shl rax, 3	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002196	          0x4801d0	                            add rax, rdx	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002199	        0x48c1e004	                              shl rax, 4	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400219d	          0x4801c1	                            add rcx, rax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021a0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021a3	          0x4863d0	                         movsxd rdx, eax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021a6	          0x4889d0	                            mov rax, rdx	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021a9	          0x4801c0	                            add rax, rax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021ac	          0x4801d0	                            add rax, rdx	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021af	        0x48c1e003	                              shl rax, 3	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021b3	          0x4889c2	                            mov rdx, rax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021ba	          0x4801d0	                            add rax, rdx	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021bd	          0x8b400c	              mov eax, dword [rax + 0xc]	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021c0	          0x894174	             mov dword [rcx + 0x74], eax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40021c3	    0x488b0d000000	            mov rcx, qword [0x040021ca] 	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021ca	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021cd	          0x4863d0	                         movsxd rdx, eax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021d0	          0x4889d0	                            mov rax, rdx	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021d3	        0x48c1e003	                              shl rax, 3	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021d7	          0x4801d0	                            add rax, rdx	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021da	        0x48c1e004	                              shl rax, 4	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021de	        0x488d1c01	                    lea rbx, [rcx + rax]	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021e2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021e5	          0x4863d0	                         movsxd rdx, eax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021e8	          0x4889d0	                            mov rax, rdx	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021eb	          0x4801c0	                            add rax, rax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021ee	          0x4801d0	                            add rax, rdx	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021f1	        0x48c1e003	                              shl rax, 3	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021f5	          0x4889c2	                            mov rdx, rax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021fc	          0x4801d0	                            add rax, rdx	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x40021ff	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x4002203	          0x4889c7	                            mov rdi, rax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x4002206	      0xe800000000	                          call 0x400220b	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x400220b	    0x488983880000	             mov qword [rbx + 0x88], rax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x4002212	    0x8b0500000000	            mov eax, dword [0x04002218] 	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4002218	            0x85c0	                           test eax, eax	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x400221a	            0x7935	                           jns 0x4002251	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x400221c	    0x488b0d000000	            mov rcx, qword [0x04002223] 	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4002223	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4002226	          0x4863d0	                         movsxd rdx, eax	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4002229	          0x4889d0	                            mov rax, rdx	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x400222c	        0x48c1e003	                              shl rax, 3	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4002230	          0x4801d0	                            add rax, rdx	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4002233	        0x48c1e004	                              shl rax, 4	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4002237	          0x4801c8	                            add rax, rcx	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x400223a	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x400223e	      0x2500040000	                          and eax, 0x400	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4002243	          0x4885c0	                           test rax, rax	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4002246	            0x7409	                            je 0x4002251	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4002248	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1618	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x400224b	    0x890500000000	            mov dword [0x04002251], eax 	      1618	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4002251	    0x488b0d000000	            mov rcx, qword [0x04002258] 	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002258	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400225b	          0x4863d0	                         movsxd rdx, eax	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400225e	          0x4889d0	                            mov rax, rdx	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002261	        0x48c1e003	                              shl rax, 3	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002265	          0x4801d0	                            add rax, rdx	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002268	        0x48c1e004	                              shl rax, 4	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400226c	          0x4801c8	                            add rax, rcx	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400226f	    0xc7405c000000	               mov dword [rax + 0x5c], 0	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002276	    0x488b0d000000	            mov rcx, qword [0x0400227d] 	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400227d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002280	          0x4863d0	                         movsxd rdx, eax	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002283	          0x4889d0	                            mov rax, rdx	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002286	        0x48c1e003	                              shl rax, 3	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400228a	          0x4801d0	                            add rax, rdx	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400228d	        0x48c1e004	                              shl rax, 4	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002291	          0x4801c8	                            add rax, rcx	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002294	    0xc7400c000000	                mov dword [rax + 0xc], 0	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400229b	    0x488b0d000000	            mov rcx, qword [0x040022a2] 	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022a2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022a5	          0x4863d0	                         movsxd rdx, eax	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022a8	          0x4889d0	                            mov rax, rdx	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022ab	        0x48c1e003	                              shl rax, 3	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022af	          0x4801d0	                            add rax, rdx	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022b2	        0x48c1e004	                              shl rax, 4	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022b6	          0x4801c8	                            add rax, rcx	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022b9	            0x8b00	                    mov eax, dword [rax]	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022bb	            0x85c0	                           test eax, eax	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022bd	            0x786d	                            js 0x400232c	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022bf	    0x488b0d000000	            mov rcx, qword [0x040022c6] 	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022c6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022c9	          0x4863d0	                         movsxd rdx, eax	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022cc	          0x4889d0	                            mov rax, rdx	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022cf	        0x48c1e003	                              shl rax, 3	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022d3	          0x4801d0	                            add rax, rdx	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022d6	        0x48c1e004	                              shl rax, 4	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022da	          0x4801c1	                            add rcx, rax	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022dd	    0x488b05000000	            mov rax, qword [0x040022e4] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022e4	    0x488bb0700200	           mov rsi, qword [rax + 0x270] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022eb	    0x488b3d000000	            mov rdi, qword [0x040022f2] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022f2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022f5	          0x4863d0	                         movsxd rdx, eax	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022f8	          0x4889d0	                            mov rax, rdx	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022fb	        0x48c1e003	                              shl rax, 3	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40022ff	          0x4801d0	                            add rax, rdx	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4002302	        0x48c1e004	                              shl rax, 4	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4002306	          0x4801f8	                            add rax, rdi	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4002309	            0x8b00	                    mov eax, dword [rax]	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x400230b	          0x4863d0	                         movsxd rdx, eax	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x400230e	          0x4889d0	                            mov rax, rdx	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4002311	        0x48c1e002	                              shl rax, 2	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4002315	          0x4801d0	                            add rax, rdx	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4002318	        0x48c1e005	                              shl rax, 5	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x400231c	          0x4801f0	                            add rax, rsi	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x400231f	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4002323	    0x488981800000	             mov qword [rcx + 0x80], rax	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x400232a	            0xeb29	                           jmp 0x4002355	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x400232c	    0x488b0d000000	            mov rcx, qword [0x04002333] 	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x4002333	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x4002336	          0x4863d0	                         movsxd rdx, eax	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x4002339	          0x4889d0	                            mov rax, rdx	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x400233c	        0x48c1e003	                              shl rax, 3	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x4002340	          0x4801d0	                            add rax, rdx	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x4002343	        0x48c1e004	                              shl rax, 4	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x4002347	          0x4801c8	                            add rax, rcx	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x400234a	    0x48c780800000	               mov qword [rax + 0x80], 0	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x4002355	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x4002358	            0x89c7	                            mov edi, eax	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x400235a	      0xe8a7210000	                 call sym.update_si_attr	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x400235f	        0x8345e401	               add dword [rbp - 0x1c], 1	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002363	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002367	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400236d	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002370	     0xf8f48fdffff	                            jg 0x40020be	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4002376	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1628	syntax.c	FUNCTION_20	IF_1
0x400237a	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1628	syntax.c	FUNCTION_20	IF_1
0x4002380	    0x890500000000	            mov dword [0x04002386], eax 	      1628	syntax.c	FUNCTION_20	IF_1
0x4002386	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1630	syntax.c	FUNCTION_20
0x400238a	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      1630	syntax.c	FUNCTION_20
0x4002391	    0x488905000000	            mov qword [0x04002398], rax 	      1630	syntax.c	FUNCTION_20
0x4002398	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1631	syntax.c	FUNCTION_20
0x400239c	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1631	syntax.c	FUNCTION_20
0x40023a2	    0x890500000000	            mov dword [0x040023a8], eax 	      1631	syntax.c	FUNCTION_20
0x40023a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1632	syntax.c	FUNCTION_20
0x40023ac	        0x488b4008	                mov rax, qword [rax + 8]	      1632	syntax.c	FUNCTION_20
0x40023b0	    0x488905000000	            mov qword [0x040023b7], rax 	      1632	syntax.c	FUNCTION_20
0x40023b7	              0x90	                                     nop	      1633	syntax.c	FUNCTION_20
0x40023b8	        0x4883c428	                           add rsp, 0x28	      1633	syntax.c	FUNCTION_20
0x40023bc	              0x5b	                                 pop rbx	      1633	syntax.c	FUNCTION_20
0x40023bd	              0x5d	                                 pop rbp	      1633	syntax.c	FUNCTION_20
0x40023be	              0xc3	                                     ret	      1633	syntax.c	FUNCTION_20
syn_term_attr2entry	functions,0:IF,1:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	19
0x4011c7c	              0x55	                                push rbp	      9194	syntax.c	FUNCTION_139
0x4011c7d	          0x4889e5	                            mov rbp, rsp	      9194	syntax.c	FUNCTION_139
0x4011c80	          0x897dfc	                mov dword [rbp - 4], edi	      9194	syntax.c	FUNCTION_139
0x4011c83	    0x816dfc000100	              sub dword [rbp - 4], 0x100	      9195	syntax.c	FUNCTION_139
0x4011c8a	    0x8b0500000000	            mov eax, dword [0x04011c90] 	      9196	syntax.c	FUNCTION_139	IF_1
0x4011c90	          0x3b45fc	                cmp eax, dword [rbp - 4]	      9196	syntax.c	FUNCTION_139	IF_1
0x4011c93	            0x7f07	                            jg 0x4011c9c	      9196	syntax.c	FUNCTION_139	IF_1
0x4011c95	      0xb800000000	                              mov eax, 0	      9197	syntax.c	FUNCTION_139	IF_1
0x4011c9a	            0xeb1e	                           jmp 0x4011cba	      9197	syntax.c	FUNCTION_139	IF_1
0x4011c9c	    0x488b0d000000	            mov rcx, qword [0x04011ca3] 	      9198	syntax.c	FUNCTION_139
0x4011ca3	          0x8b45fc	                mov eax, dword [rbp - 4]	      9198	syntax.c	FUNCTION_139
0x4011ca6	          0x4863d0	                         movsxd rdx, eax	      9198	syntax.c	FUNCTION_139
0x4011ca9	          0x4889d0	                            mov rax, rdx	      9198	syntax.c	FUNCTION_139
0x4011cac	        0x48c1e002	                              shl rax, 2	      9198	syntax.c	FUNCTION_139
0x4011cb0	          0x4801d0	                            add rax, rdx	      9198	syntax.c	FUNCTION_139
0x4011cb3	        0x48c1e003	                              shl rax, 3	      9198	syntax.c	FUNCTION_139
0x4011cb7	          0x4801c8	                            add rax, rcx	      9198	syntax.c	FUNCTION_139
0x4011cba	              0x5d	                                 pop rbp	      9199	syntax.c	FUNCTION_139
0x4011cbb	              0xc3	                                     ret	      9199	syntax.c	FUNCTION_139
syn_get_foldlevel	functions,0:IF,4:SWITCH,0:FOR,1:CALL,1:ELSE,0:WHILE,0:DO,0	55
0x400ccdb	              0x55	                                push rbp	      6641	syntax.c	FUNCTION_106
0x400ccdc	          0x4889e5	                            mov rbp, rsp	      6641	syntax.c	FUNCTION_106
0x400ccdf	        0x4883ec20	                           sub rsp, 0x20	      6641	syntax.c	FUNCTION_106
0x400cce3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6641	syntax.c	FUNCTION_106
0x400cce7	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6641	syntax.c	FUNCTION_106
0x400cceb	    0xc745f8000000	                  mov dword [rbp - 8], 0	      6642	syntax.c	FUNCTION_106
0x400ccf2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6646	syntax.c	FUNCTION_106	IF_1
0x400ccf6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6646	syntax.c	FUNCTION_106	IF_1
0x400ccfa	    0x8b800c030000	           mov eax, dword [rax + 0x30c] 	      6646	syntax.c	FUNCTION_106	IF_1
0x400cd00	            0x85c0	                           test eax, eax	      6646	syntax.c	FUNCTION_106	IF_1
0x400cd02	            0x746d	                            je 0x400cd71	      6646	syntax.c	FUNCTION_106	IF_1
0x400cd04	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6647	syntax.c	FUNCTION_106	IF_1
0x400cd08	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6647	syntax.c	FUNCTION_106	IF_1
0x400cd0c	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      6647	syntax.c	FUNCTION_106	IF_1
0x400cd12	            0x85c0	                           test eax, eax	      6647	syntax.c	FUNCTION_106	IF_1
0x400cd14	            0x755b	                           jne 0x400cd71	      6647	syntax.c	FUNCTION_106	IF_1
0x400cd16	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0x400cd1a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0x400cd1e	          0x4889d6	                            mov rsi, rdx	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0x400cd21	          0x4889c7	                            mov rdi, rax	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0x400cd24	      0xe800000000	                          call 0x400cd29	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0x400cd29	    0xc745fc000000	                  mov dword [rbp - 4], 0	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400cd30	            0xeb34	                           jmp 0x400cd66	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400cd32	    0x488b0d000000	            mov rcx, qword [0x0400cd39] 	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd39	          0x8b45fc	                mov eax, dword [rbp - 4]	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd3c	          0x4863d0	                         movsxd rdx, eax	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd3f	          0x4889d0	                            mov rax, rdx	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd42	        0x48c1e003	                              shl rax, 3	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd46	          0x4801d0	                            add rax, rdx	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd49	        0x48c1e004	                              shl rax, 4	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd4d	          0x4801c8	                            add rax, rcx	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd50	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd54	      0x2500200000	                         and eax, 0x2000	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd59	          0x4885c0	                           test rax, rax	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd5c	            0x7404	                            je 0x400cd62	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd5e	        0x8345f801	                  add dword [rbp - 8], 1	      6657	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400cd62	        0x8345fc01	                  add dword [rbp - 4], 1	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400cd66	    0x8b0500000000	            mov eax, dword [0x0400cd6c] 	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400cd6c	          0x3b45fc	                cmp eax, dword [rbp - 4]	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400cd6f	            0x7fc1	                            jg 0x400cd32	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400cd71	          0x8b45f8	                mov eax, dword [rbp - 8]	      6659	syntax.c	FUNCTION_106	IF_3
0x400cd74	          0x4863d0	                         movsxd rdx, eax	      6659	syntax.c	FUNCTION_106	IF_3
0x400cd77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6659	syntax.c	FUNCTION_106	IF_3
0x400cd7b	    0x488b80100200	           mov rax, qword [rax + 0x210] 	      6659	syntax.c	FUNCTION_106	IF_3
0x400cd82	          0x4839c2	                            cmp rdx, rax	      6659	syntax.c	FUNCTION_106	IF_3
0x400cd85	            0x7e1b	                           jle 0x400cda2	      6659	syntax.c	FUNCTION_106	IF_3
0x400cd87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6661	syntax.c	FUNCTION_106	IF_3
0x400cd8b	    0x488b80100200	           mov rax, qword [rax + 0x210] 	      6661	syntax.c	FUNCTION_106	IF_3
0x400cd92	          0x8945f8	                mov dword [rbp - 8], eax	      6661	syntax.c	FUNCTION_106	IF_3
0x400cd95	        0x837df800	                  cmp dword [rbp - 8], 0	      6662	syntax.c	FUNCTION_106	IF_3	IF_4
0x400cd99	            0x7907	                           jns 0x400cda2	      6662	syntax.c	FUNCTION_106	IF_3	IF_4
0x400cd9b	    0xc745f8000000	                  mov dword [rbp - 8], 0	      6663	syntax.c	FUNCTION_106	IF_3	IF_4
0x400cda2	          0x8b45f8	                mov eax, dword [rbp - 8]	      6665	syntax.c	FUNCTION_106
0x400cda5	              0xc9	                                   leave	      6666	syntax.c	FUNCTION_106
0x400cda6	              0xc3	                                     ret	      6666	syntax.c	FUNCTION_106
syn_check_cluster	functions,0:IF,2:SWITCH,0:FOR,0:CALL,4:ELSE,1:WHILE,0:DO,0	32
0x400aa4c	              0x55	                                push rbp	      5577	syntax.c	FUNCTION_86
0x400aa4d	          0x4889e5	                            mov rbp, rsp	      5577	syntax.c	FUNCTION_86
0x400aa50	        0x4883ec20	                           sub rsp, 0x20	      5577	syntax.c	FUNCTION_86
0x400aa54	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5577	syntax.c	FUNCTION_86
0x400aa58	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5577	syntax.c	FUNCTION_86
0x400aa5b	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      5581	syntax.c	FUNCTION_86	CALL_1
0x400aa5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5581	syntax.c	FUNCTION_86	CALL_1
0x400aa62	            0x89d6	                            mov esi, edx	      5581	syntax.c	FUNCTION_86	CALL_1
0x400aa64	          0x4889c7	                            mov rdi, rax	      5581	syntax.c	FUNCTION_86	CALL_1
0x400aa67	      0xe800000000	                          call 0x400aa6c	      5581	syntax.c	FUNCTION_86	CALL_1
0x400aa6c	        0x488945f8	                mov qword [rbp - 8], rax	      5581	syntax.c	FUNCTION_86	CALL_1
0x400aa70	      0x48837df800	                  cmp qword [rbp - 8], 0	      5582	syntax.c	FUNCTION_86	IF_1
0x400aa75	            0x7507	                           jne 0x400aa7e	      5582	syntax.c	FUNCTION_86	IF_1
0x400aa77	      0xb800000000	                              mov eax, 0	      5583	syntax.c	FUNCTION_86	IF_1
0x400aa7c	            0xeb35	                           jmp 0x400aab3	      5583	syntax.c	FUNCTION_86	IF_1
0x400aa7e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5585	syntax.c	FUNCTION_86	CALL_2
0x400aa82	          0x4889c7	                            mov rdi, rax	      5585	syntax.c	FUNCTION_86	CALL_2
0x400aa85	      0xe88cfeffff	                call sym.syn_scl_name2id	      5585	syntax.c	FUNCTION_86	CALL_2
0x400aa8a	          0x8945f4	              mov dword [rbp - 0xc], eax	      5585	syntax.c	FUNCTION_86	CALL_2
0x400aa8d	        0x837df400	                cmp dword [rbp - 0xc], 0	      5586	syntax.c	FUNCTION_86	IF_2
0x400aa91	            0x7511	                           jne 0x400aaa4	      5586	syntax.c	FUNCTION_86	IF_2
0x400aa93	        0x488b45f8	                mov rax, qword [rbp - 8]	      5587	syntax.c	FUNCTION_86	CALL_3
0x400aa97	          0x4889c7	                            mov rdi, rax	      5587	syntax.c	FUNCTION_86	CALL_3
0x400aa9a	      0xe816000000	                call sym.syn_add_cluster	      5587	syntax.c	FUNCTION_86	CALL_3
0x400aa9f	          0x8945f4	              mov dword [rbp - 0xc], eax	      5587	syntax.c	FUNCTION_86	CALL_3
0x400aaa2	            0xeb0c	                           jmp 0x400aab0	      5587	syntax.c	FUNCTION_86	CALL_3
0x400aaa4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5589	syntax.c	FUNCTION_86	CALL_4
0x400aaa8	          0x4889c7	                            mov rdi, rax	      5589	syntax.c	FUNCTION_86	CALL_4
0x400aaab	      0xe800000000	                          call 0x400aab0	      5589	syntax.c	FUNCTION_86	CALL_4
0x400aab0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5590	syntax.c	FUNCTION_86
0x400aab3	              0xc9	                                   leave	      5591	syntax.c	FUNCTION_86
0x400aab4	              0xc3	                                     ret	      5591	syntax.c	FUNCTION_86
ex_syntime	functions,0:IF,4:SWITCH,0:FOR,0:CALL,8:ELSE,4:WHILE,0:DO,0	53
0x400cda7	              0x55	                                push rbp	      6675	syntax.c	FUNCTION_107
0x400cda8	          0x4889e5	                            mov rbp, rsp	      6675	syntax.c	FUNCTION_107
0x400cdab	              0x53	                                push rbx	      6675	syntax.c	FUNCTION_107
0x400cdac	        0x4883ec18	                           sub rsp, 0x18	      6675	syntax.c	FUNCTION_107
0x400cdb0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6675	syntax.c	FUNCTION_107
0x400cdb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400cdb8	          0x488b00	                    mov rax, qword [rax]	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400cdbb	      0xbe00000000	                              mov esi, 0	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400cdc0	          0x4889c7	                            mov rdi, rax	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400cdc3	      0xe800000000	                          call 0x400cdc8	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400cdc8	            0x85c0	                           test eax, eax	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400cdca	            0x750c	                           jne 0x400cdd8	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400cdcc	    0xc70500000000	               mov dword [0x0400cdd6], 1	      6677	syntax.c	FUNCTION_107	IF_1
0x400cdd6	            0xeb7e	                           jmp 0x400ce56	      6686	syntax.c	FUNCTION_107
0x400cdd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400cddc	          0x488b00	                    mov rax, qword [rax]	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400cddf	      0xbe00000000	                              mov esi, 0	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400cde4	          0x4889c7	                            mov rdi, rax	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400cde7	      0xe800000000	                          call 0x400cdec	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400cdec	            0x85c0	                           test eax, eax	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400cdee	            0x750c	                           jne 0x400cdfc	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400cdf0	    0xc70500000000	               mov dword [0x0400cdfa], 0	      6679	syntax.c	FUNCTION_107	ELSE_1	IF_2
0x400cdfa	            0xeb5a	                           jmp 0x400ce56	      6686	syntax.c	FUNCTION_107
0x400cdfc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400ce00	          0x488b00	                    mov rax, qword [rax]	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400ce03	      0xbe00000000	                              mov esi, 0	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400ce08	          0x4889c7	                            mov rdi, rax	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400ce0b	      0xe800000000	                          call 0x400ce10	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400ce10	            0x85c0	                           test eax, eax	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400ce12	            0x7507	                           jne 0x400ce1b	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400ce14	      0xe888000000	                  call sym.syntime_clear	      6681	syntax.c	FUNCTION_107	ELSE_2	IF_3
0x400ce19	            0xeb3b	                           jmp 0x400ce56	      6686	syntax.c	FUNCTION_107
0x400ce1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400ce1f	          0x488b00	                    mov rax, qword [rax]	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400ce22	      0xbe00000000	                              mov esi, 0	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400ce27	          0x4889c7	                            mov rdi, rax	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400ce2a	      0xe800000000	                          call 0x400ce2f	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400ce2f	            0x85c0	                           test eax, eax	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400ce31	            0x7507	                           jne 0x400ce3a	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400ce33	      0xe87c010000	                 call sym.syntime_report	      6683	syntax.c	FUNCTION_107	ELSE_3	IF_4
0x400ce38	            0xeb1c	                           jmp 0x400ce56	      6686	syntax.c	FUNCTION_107
0x400ce3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6685	syntax.c	FUNCTION_107	CALL_8
0x400ce3e	          0x488b18	                    mov rbx, qword [rax]	      6685	syntax.c	FUNCTION_107	CALL_8
0x400ce41	      0xbf00000000	                              mov edi, 0	      6685	syntax.c	FUNCTION_107	CALL_8
0x400ce46	      0xe800000000	                          call 0x400ce4b	      6685	syntax.c	FUNCTION_107	CALL_8
0x400ce4b	          0x4889de	                            mov rsi, rbx	      6685	syntax.c	FUNCTION_107	CALL_8
0x400ce4e	          0x4889c7	                            mov rdi, rax	      6685	syntax.c	FUNCTION_107	CALL_8
0x400ce51	      0xe800000000	                          call 0x400ce56	      6685	syntax.c	FUNCTION_107	CALL_8
0x400ce56	              0x90	                                     nop	      6686	syntax.c	FUNCTION_107
0x400ce57	        0x4883c418	                           add rsp, 0x18	      6686	syntax.c	FUNCTION_107
0x400ce5b	              0x5b	                                 pop rbx	      6686	syntax.c	FUNCTION_107
0x400ce5c	              0x5d	                                 pop rbp	      6686	syntax.c	FUNCTION_107
0x400ce5d	              0xc3	                                     ret	      6686	syntax.c	FUNCTION_107
syn_clear_pattern	functions,0:IF,1:SWITCH,0:FOR,0:CALL,5:ELSE,0:WHILE,0:DO,0	83
0x4006829	              0x55	                                push rbp	      3727	syntax.c	FUNCTION_53
0x400682a	          0x4889e5	                            mov rbp, rsp	      3727	syntax.c	FUNCTION_53
0x400682d	        0x4883ec10	                           sub rsp, 0x10	      3727	syntax.c	FUNCTION_53
0x4006831	        0x48897df8	                mov qword [rbp - 8], rdi	      3727	syntax.c	FUNCTION_53
0x4006835	          0x8975f4	              mov dword [rbp - 0xc], esi	      3727	syntax.c	FUNCTION_53
0x4006838	        0x488b45f8	                mov rax, qword [rbp - 8]	      3728	syntax.c	FUNCTION_53	CALL_1
0x400683c	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3728	syntax.c	FUNCTION_53	CALL_1
0x4006843	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3728	syntax.c	FUNCTION_53	CALL_1
0x4006846	          0x4863d0	                         movsxd rdx, eax	      3728	syntax.c	FUNCTION_53	CALL_1
0x4006849	          0x4889d0	                            mov rax, rdx	      3728	syntax.c	FUNCTION_53	CALL_1
0x400684c	        0x48c1e002	                              shl rax, 2	      3728	syntax.c	FUNCTION_53	CALL_1
0x4006850	          0x4801d0	                            add rax, rdx	      3728	syntax.c	FUNCTION_53	CALL_1
0x4006853	        0x48c1e005	                              shl rax, 5	      3728	syntax.c	FUNCTION_53	CALL_1
0x4006857	          0x4801c8	                            add rax, rcx	      3728	syntax.c	FUNCTION_53	CALL_1
0x400685a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      3728	syntax.c	FUNCTION_53	CALL_1
0x400685e	          0x4889c7	                            mov rdi, rax	      3728	syntax.c	FUNCTION_53	CALL_1
0x4006861	      0xe800000000	                          call 0x4006866	      3728	syntax.c	FUNCTION_53	CALL_1
0x4006866	        0x488b45f8	                mov rax, qword [rbp - 8]	      3729	syntax.c	FUNCTION_53	CALL_2
0x400686a	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3729	syntax.c	FUNCTION_53	CALL_2
0x4006871	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3729	syntax.c	FUNCTION_53	CALL_2
0x4006874	          0x4863d0	                         movsxd rdx, eax	      3729	syntax.c	FUNCTION_53	CALL_2
0x4006877	          0x4889d0	                            mov rax, rdx	      3729	syntax.c	FUNCTION_53	CALL_2
0x400687a	        0x48c1e002	                              shl rax, 2	      3729	syntax.c	FUNCTION_53	CALL_2
0x400687e	          0x4801d0	                            add rax, rdx	      3729	syntax.c	FUNCTION_53	CALL_2
0x4006881	        0x48c1e005	                              shl rax, 5	      3729	syntax.c	FUNCTION_53	CALL_2
0x4006885	          0x4801c8	                            add rax, rcx	      3729	syntax.c	FUNCTION_53	CALL_2
0x4006888	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3729	syntax.c	FUNCTION_53	CALL_2
0x400688c	          0x4889c7	                            mov rdi, rax	      3729	syntax.c	FUNCTION_53	CALL_2
0x400688f	      0xe800000000	                          call 0x4006894	      3729	syntax.c	FUNCTION_53	CALL_2
0x4006894	        0x837df400	                cmp dword [rbp - 0xc], 0	      3731	syntax.c	FUNCTION_53	IF_1
0x4006898	            0x7433	                            je 0x40068cd	      3731	syntax.c	FUNCTION_53	IF_1
0x400689a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3731	syntax.c	FUNCTION_53	IF_1
0x400689e	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3731	syntax.c	FUNCTION_53	IF_1
0x40068a5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3731	syntax.c	FUNCTION_53	IF_1
0x40068a8	          0x4863d0	                         movsxd rdx, eax	      3731	syntax.c	FUNCTION_53	IF_1
0x40068ab	          0x4889d0	                            mov rax, rdx	      3731	syntax.c	FUNCTION_53	IF_1
0x40068ae	        0x48c1e002	                              shl rax, 2	      3731	syntax.c	FUNCTION_53	IF_1
0x40068b2	          0x4801d0	                            add rax, rdx	      3731	syntax.c	FUNCTION_53	IF_1
0x40068b5	        0x48c1e005	                              shl rax, 5	      3731	syntax.c	FUNCTION_53	IF_1
0x40068b9	    0x482da0000000	                           sub rax, 0xa0	      3731	syntax.c	FUNCTION_53	IF_1
0x40068bf	          0x4801c8	                            add rax, rcx	      3731	syntax.c	FUNCTION_53	IF_1
0x40068c2	           0xfb600	                   movzx eax, byte [rax]	      3731	syntax.c	FUNCTION_53	IF_1
0x40068c5	            0x3c02	                               cmp al, 2	      3731	syntax.c	FUNCTION_53	IF_1
0x40068c7	     0xf848a000000	                            je 0x4006957	      3731	syntax.c	FUNCTION_53	IF_1
0x40068cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068d1	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068d8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068db	          0x4863d0	                         movsxd rdx, eax	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068de	          0x4889d0	                            mov rax, rdx	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068e1	        0x48c1e002	                              shl rax, 2	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068e5	          0x4801d0	                            add rax, rdx	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068e8	        0x48c1e005	                              shl rax, 5	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068ec	          0x4801c8	                            add rax, rcx	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068ef	        0x488b4040	            mov rax, qword [rax + 0x40] 	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068f3	          0x4889c7	                            mov rdi, rax	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068f6	      0xe800000000	                          call 0x40068fb	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x40068fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x40068ff	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x4006906	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x4006909	          0x4863d0	                         movsxd rdx, eax	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400690c	          0x4889d0	                            mov rax, rdx	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400690f	        0x48c1e002	                              shl rax, 2	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x4006913	          0x4801d0	                            add rax, rdx	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x4006916	        0x48c1e005	                              shl rax, 5	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400691a	          0x4801c8	                            add rax, rcx	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400691d	        0x488b4048	            mov rax, qword [rax + 0x48] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x4006921	          0x4889c7	                            mov rdi, rax	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x4006924	      0xe800000000	                          call 0x4006929	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x4006929	        0x488b45f8	                mov rax, qword [rbp - 8]	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400692d	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x4006934	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x4006937	          0x4863d0	                         movsxd rdx, eax	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400693a	          0x4889d0	                            mov rax, rdx	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400693d	        0x48c1e002	                              shl rax, 2	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x4006941	          0x4801d0	                            add rax, rdx	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x4006944	        0x48c1e005	                              shl rax, 5	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x4006948	          0x4801c8	                            add rax, rcx	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400694b	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400694f	          0x4889c7	                            mov rdi, rax	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x4006952	      0xe800000000	                          call 0x4006957	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x4006957	              0x90	                                     nop	      3737	syntax.c	FUNCTION_53
0x4006958	              0xc9	                                   leave	      3737	syntax.c	FUNCTION_53
0x4006959	              0xc3	                                     ret	      3737	syntax.c	FUNCTION_53
syn_get_id	functions,0:IF,2:SWITCH,0:FOR,0:CALL,2:ELSE,1:WHILE,0:DO,0	51
0x400cba5	              0x55	                                push rbp	      6571	syntax.c	FUNCTION_102
0x400cba6	          0x4889e5	                            mov rbp, rsp	      6571	syntax.c	FUNCTION_102
0x400cba9	        0x4883ec30	                           sub rsp, 0x30	      6571	syntax.c	FUNCTION_102
0x400cbad	        0x48897df8	                mov qword [rbp - 8], rdi	      6571	syntax.c	FUNCTION_102
0x400cbb1	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6571	syntax.c	FUNCTION_102
0x400cbb5	          0x8955ec	             mov dword [rbp - 0x14], edx	      6571	syntax.c	FUNCTION_102
0x400cbb8	          0x894de8	             mov dword [rbp - 0x18], ecx	      6571	syntax.c	FUNCTION_102
0x400cbbb	        0x4c8945e0	              mov qword [rbp - 0x20], r8	      6571	syntax.c	FUNCTION_102
0x400cbbf	        0x44894ddc	             mov dword [rbp - 0x24], r9d	      6571	syntax.c	FUNCTION_102
0x400cbc3	        0x488b45f8	                mov rax, qword [rbp - 8]	      6574	syntax.c	FUNCTION_102	IF_1
0x400cbc7	        0x488b5008	                mov rdx, qword [rax + 8]	      6574	syntax.c	FUNCTION_102	IF_1
0x400cbcb	    0x488b05000000	            mov rax, qword [0x0400cbd2] 	      6574	syntax.c	FUNCTION_102	IF_1
0x400cbd2	          0x4839c2	                            cmp rdx, rax	      6574	syntax.c	FUNCTION_102	IF_1
0x400cbd5	            0x7518	                           jne 0x400cbef	      6574	syntax.c	FUNCTION_102	IF_1
0x400cbd7	    0x488b05000000	            mov rax, qword [0x0400cbde] 	      6575	syntax.c	FUNCTION_102	IF_1
0x400cbde	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      6575	syntax.c	FUNCTION_102	IF_1
0x400cbe2	            0x750b	                           jne 0x400cbef	      6575	syntax.c	FUNCTION_102	IF_1
0x400cbe4	    0x8b0500000000	            mov eax, dword [0x0400cbea] 	      6576	syntax.c	FUNCTION_102	IF_1
0x400cbea	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      6576	syntax.c	FUNCTION_102	IF_1
0x400cbed	            0x7d15	                           jge 0x400cc04	      6576	syntax.c	FUNCTION_102	IF_1
0x400cbef	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6577	syntax.c	FUNCTION_102	CALL_1
0x400cbf3	        0x488b45f8	                mov rax, qword [rbp - 8]	      6577	syntax.c	FUNCTION_102	CALL_1
0x400cbf7	          0x4889d6	                            mov rsi, rdx	      6577	syntax.c	FUNCTION_102	CALL_1
0x400cbfa	          0x4889c7	                            mov rdi, rax	      6577	syntax.c	FUNCTION_102	CALL_1
0x400cbfd	      0xe800000000	                          call 0x400cc02	      6577	syntax.c	FUNCTION_102	CALL_1
0x400cc02	            0xeb36	                           jmp 0x400cc3a	      6577	syntax.c	FUNCTION_102	CALL_1
0x400cc04	        0x488b45f8	                mov rax, qword [rbp - 8]	      6578	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc08	        0x488b5008	                mov rdx, qword [rax + 8]	      6578	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc0c	    0x488b05000000	            mov rax, qword [0x0400cc13] 	      6578	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc13	          0x4839c2	                            cmp rdx, rax	      6578	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc16	            0x7522	                           jne 0x400cc3a	      6578	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc18	    0x488b05000000	            mov rax, qword [0x0400cc1f] 	      6579	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc1f	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      6579	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc23	            0x7515	                           jne 0x400cc3a	      6579	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc25	    0x8b0500000000	            mov eax, dword [0x0400cc2b] 	      6580	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc2b	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      6580	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc2e	            0x7e0a	                           jle 0x400cc3a	      6580	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc30	    0xc70500000000	     mov dword [0x0400cc3a], 0xffffffff 	      6583	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400cc3a	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      6585	syntax.c	FUNCTION_102	CALL_2
0x400cc3d	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      6585	syntax.c	FUNCTION_102	CALL_2
0x400cc41	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6585	syntax.c	FUNCTION_102	CALL_2
0x400cc44	          0x4889ce	                            mov rsi, rcx	      6585	syntax.c	FUNCTION_102	CALL_2
0x400cc47	            0x89c7	                            mov edi, eax	      6585	syntax.c	FUNCTION_102	CALL_2
0x400cc49	      0xe800000000	                          call 0x400cc4e	      6585	syntax.c	FUNCTION_102	CALL_2
0x400cc4e	        0x837de800	               cmp dword [rbp - 0x18], 0	      6587	syntax.c	FUNCTION_102
0x400cc52	            0x7408	                            je 0x400cc5c	      6587	syntax.c	FUNCTION_102
0x400cc54	    0x8b0500000000	            mov eax, dword [0x0400cc5a] 	      6587	syntax.c	FUNCTION_102
0x400cc5a	            0xeb06	                           jmp 0x400cc62	      6587	syntax.c	FUNCTION_102
0x400cc5c	    0x8b0500000000	            mov eax, dword [0x0400cc62] 	      6587	syntax.c	FUNCTION_102
0x400cc62	              0xc9	                                   leave	      6588	syntax.c	FUNCTION_102
0x400cc63	              0xc3	                                     ret	      6588	syntax.c	FUNCTION_102
set_normal_colors	functions,0:IF,7:SWITCH,0:FOR,0:CALL,10:ELSE,1:WHILE,0:DO,0	85
0x4010982	              0x55	                                push rbp	      8408	syntax.c	FUNCTION_121
0x4010983	          0x4889e5	                            mov rbp, rsp	      8408	syntax.c	FUNCTION_121
0x4010986	        0x4883ec10	                           sub rsp, 0x10	      8408	syntax.c	FUNCTION_121
0x401098a	    0x8b0500000000	            mov eax, dword [0x04010990] 	      8411	syntax.c	FUNCTION_121	IF_1
0x4010990	            0x85c0	                           test eax, eax	      8411	syntax.c	FUNCTION_121	IF_1
0x4010992	            0x7441	                            je 0x40109d5	      8411	syntax.c	FUNCTION_121	IF_1
0x4010994	    0x41b900000000	                              mov r9d, 0	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x401099a	    0x41b801000000	                              mov r8d, 1	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x40109a0	      0xb900000000	                              mov ecx, 0	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x40109a5	      0xba00000000	                              mov edx, 0	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x40109aa	      0xbe00000000	                              mov esi, 0	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x40109af	      0xbf00000000	                              mov edi, 0	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x40109b4	      0xe81d010000	               call sym.set_group_colors	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x40109b9	            0x85c0	                           test eax, eax	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x40109bb	     0xf8412010000	                            je 0x4010ad3	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x40109c1	      0xe800000000	                          call 0x40109c6	      8418	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_2
0x40109c6	    0xc70500000000	           mov dword [0x040109d0], 0x32 	      8419	syntax.c	FUNCTION_121	IF_1	IF_2
0x40109d0	      0xe9fe000000	                           jmp 0x4010ad3	      8478	syntax.c	FUNCTION_121
0x40109d5	      0xbf00000000	                              mov edi, 0	      8459	syntax.c	FUNCTION_121	ELSE_1	CALL_9
0x40109da	      0xe800000000	                          call 0x40109df	      8459	syntax.c	FUNCTION_121	ELSE_1	CALL_9
0x40109df	          0x83e801	                              sub eax, 1	      8459	syntax.c	FUNCTION_121	ELSE_1	CALL_9
0x40109e2	          0x8945fc	                mov dword [rbp - 4], eax	      8459	syntax.c	FUNCTION_121	ELSE_1	CALL_9
0x40109e5	        0x837dfc00	                  cmp dword [rbp - 4], 0	      8460	syntax.c	FUNCTION_121	ELSE_1	IF_6
0x40109e9	     0xf88e4000000	                            js 0x4010ad3	      8460	syntax.c	FUNCTION_121	ELSE_1	IF_6
0x40109ef	          0x8b45fc	                mov eax, dword [rbp - 4]	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x40109f2	      0xba00000000	                              mov edx, 0	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x40109f7	      0xbe00000000	                              mov esi, 0	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x40109fc	            0x89c7	                            mov edi, eax	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x40109fe	      0xe84f2b0000	               call sym.gui_do_one_color	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x4010a03	    0x488b0d000000	            mov rcx, qword [0x04010a0a] 	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a0a	          0x8b45fc	                mov eax, dword [rbp - 4]	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a0d	          0x4863d0	                         movsxd rdx, eax	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a10	          0x4889d0	                            mov rax, rdx	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a13	        0x48c1e003	                              shl rax, 3	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a17	          0x4801d0	                            add rax, rdx	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a1a	          0x4801c0	                            add rax, rax	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a1d	          0x4801d0	                            add rax, rdx	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a20	        0x48c1e003	                              shl rax, 3	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a24	          0x4801c8	                            add rax, rcx	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a27	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a2b	    0x488b05000000	            mov rax, qword [0x04010a32] 	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a32	          0x4839c2	                            cmp rdx, rax	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a35	            0x7534	                           jne 0x4010a6b	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a37	    0x488b0d000000	            mov rcx, qword [0x04010a3e] 	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a3e	          0x8b45fc	                mov eax, dword [rbp - 4]	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a41	          0x4863d0	                         movsxd rdx, eax	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a44	          0x4889d0	                            mov rax, rdx	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a47	        0x48c1e003	                              shl rax, 3	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a4b	          0x4801d0	                            add rax, rdx	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a4e	          0x4801c0	                            add rax, rax	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a51	          0x4801d0	                            add rax, rdx	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a54	        0x48c1e003	                              shl rax, 3	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a58	          0x4801c8	                            add rax, rcx	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a5b	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a5f	    0x488b05000000	            mov rax, qword [0x04010a66] 	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a66	          0x4839c2	                            cmp rdx, rax	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a69	            0x7468	                            je 0x4010ad3	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a6b	    0x488b0d000000	            mov rcx, qword [0x04010a72] 	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a72	          0x8b45fc	                mov eax, dword [rbp - 4]	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a75	          0x4863d0	                         movsxd rdx, eax	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a78	          0x4889d0	                            mov rax, rdx	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a7b	        0x48c1e003	                              shl rax, 3	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a7f	          0x4801d0	                            add rax, rdx	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a82	          0x4801c0	                            add rax, rax	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a85	          0x4801d0	                            add rax, rdx	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a88	        0x48c1e003	                              shl rax, 3	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a8c	          0x4801c8	                            add rax, rcx	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a8f	        0x488b4040	            mov rax, qword [rax + 0x40] 	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a93	    0x488905000000	            mov qword [0x04010a9a], rax 	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010a9a	    0x488b0d000000	            mov rcx, qword [0x04010aa1] 	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010aa1	          0x8b45fc	                mov eax, dword [rbp - 4]	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010aa4	          0x4863d0	                         movsxd rdx, eax	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010aa7	          0x4889d0	                            mov rax, rdx	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010aaa	        0x48c1e003	                              shl rax, 3	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010aae	          0x4801d0	                            add rax, rdx	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010ab1	          0x4801c0	                            add rax, rax	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010ab4	          0x4801d0	                            add rax, rdx	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010ab7	        0x48c1e003	                              shl rax, 3	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010abb	          0x4801c8	                            add rax, rcx	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010abe	        0x488b4048	            mov rax, qword [rax + 0x48] 	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010ac2	    0x488905000000	            mov qword [0x04010ac9], rax 	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010ac9	    0xc70500000000	           mov dword [0x04010ad3], 0x32 	      8473	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x4010ad3	              0x90	                                     nop	      8478	syntax.c	FUNCTION_121
0x4010ad4	              0xc9	                                   leave	      8478	syntax.c	FUNCTION_121
0x4010ad5	              0xc3	                                     ret	      8478	syntax.c	FUNCTION_121
syn_cmd_manual	functions,0:IF,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	12
0x4006e17	              0x55	                                push rbp	      3901	syntax.c	FUNCTION_60
0x4006e18	          0x4889e5	                            mov rbp, rsp	      3901	syntax.c	FUNCTION_60
0x4006e1b	        0x4883ec10	                           sub rsp, 0x10	      3901	syntax.c	FUNCTION_60
0x4006e1f	        0x48897df8	                mov qword [rbp - 8], rdi	      3901	syntax.c	FUNCTION_60
0x4006e23	          0x8975f4	              mov dword [rbp - 0xc], esi	      3901	syntax.c	FUNCTION_60
0x4006e26	        0x488b45f8	                mov rax, qword [rbp - 8]	      3902	syntax.c	FUNCTION_60	CALL_1
0x4006e2a	      0xbe00000000	                              mov esi, 0	      3902	syntax.c	FUNCTION_60	CALL_1
0x4006e2f	          0x4889c7	                            mov rdi, rax	      3902	syntax.c	FUNCTION_60	CALL_1
0x4006e32	      0xe826000000	                  call sym.syn_cmd_onoff	      3902	syntax.c	FUNCTION_60	CALL_1
0x4006e37	              0x90	                                     nop	      3903	syntax.c	FUNCTION_60
0x4006e38	              0xc9	                                   leave	      3903	syntax.c	FUNCTION_60
0x4006e39	              0xc3	                                     ret	      3903	syntax.c	FUNCTION_60
limit_pos_zero	functions,0:IF,1:SWITCH,0:FOR,0:CALL,1:ELSE,1:WHILE,0:DO,0	24
0x400548a	              0x55	                                push rbp	      3187	syntax.c	FUNCTION_39
0x400548b	          0x4889e5	                            mov rbp, rsp	      3187	syntax.c	FUNCTION_39
0x400548e	        0x4883ec10	                           sub rsp, 0x10	      3187	syntax.c	FUNCTION_39
0x4005492	        0x48897df8	                mov qword [rbp - 8], rdi	      3187	syntax.c	FUNCTION_39
0x4005496	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3187	syntax.c	FUNCTION_39
0x400549a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3188	syntax.c	FUNCTION_39	IF_1
0x400549e	          0x488b00	                    mov rax, qword [rax]	      3188	syntax.c	FUNCTION_39	IF_1
0x40054a1	          0x4885c0	                           test rax, rax	      3188	syntax.c	FUNCTION_39	IF_1
0x40054a4	            0x7518	                           jne 0x40054be	      3188	syntax.c	FUNCTION_39	IF_1
0x40054a6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3189	syntax.c	FUNCTION_39	IF_1
0x40054aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3189	syntax.c	FUNCTION_39	IF_1
0x40054ae	        0x488b5008	                mov rdx, qword [rax + 8]	      3189	syntax.c	FUNCTION_39	IF_1
0x40054b2	          0x488b00	                    mov rax, qword [rax]	      3189	syntax.c	FUNCTION_39	IF_1
0x40054b5	          0x488901	                    mov qword [rcx], rax	      3189	syntax.c	FUNCTION_39	IF_1
0x40054b8	        0x48895108	                mov qword [rcx + 8], rdx	      3189	syntax.c	FUNCTION_39	IF_1
0x40054bc	            0xeb13	                           jmp 0x40054d1	      3192	syntax.c	FUNCTION_39
0x40054be	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3191	syntax.c	FUNCTION_39	CALL_1
0x40054c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3191	syntax.c	FUNCTION_39	CALL_1
0x40054c6	          0x4889d6	                            mov rsi, rdx	      3191	syntax.c	FUNCTION_39	CALL_1
0x40054c9	          0x4889c7	                            mov rdi, rax	      3191	syntax.c	FUNCTION_39	CALL_1
0x40054cc	      0xe84cffffff	                      call sym.limit_pos	      3191	syntax.c	FUNCTION_39	CALL_1
0x40054d1	              0x90	                                     nop	      3192	syntax.c	FUNCTION_39
0x40054d2	              0xc9	                                   leave	      3192	syntax.c	FUNCTION_39
0x40054d3	              0xc3	                                     ret	      3192	syntax.c	FUNCTION_39
hl_get_font_name	functions,0:IF,2:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	28
0x4010c1b	              0x55	                                push rbp	      8520	syntax.c	FUNCTION_123
0x4010c1c	          0x4889e5	                            mov rbp, rsp	      8520	syntax.c	FUNCTION_123
0x4010c1f	        0x4883ec10	                           sub rsp, 0x10	      8520	syntax.c	FUNCTION_123
0x4010c23	      0xbf00000000	                              mov edi, 0	      8524	syntax.c	FUNCTION_123	CALL_1
0x4010c28	      0xe800000000	                          call 0x4010c2d	      8524	syntax.c	FUNCTION_123	CALL_1
0x4010c2d	          0x8945f4	              mov dword [rbp - 0xc], eax	      8524	syntax.c	FUNCTION_123	CALL_1
0x4010c30	        0x837df400	                cmp dword [rbp - 0xc], 0	      8525	syntax.c	FUNCTION_123	IF_1
0x4010c34	            0x7e3f	                           jle 0x4010c75	      8525	syntax.c	FUNCTION_123	IF_1
0x4010c36	    0x488b0d000000	            mov rcx, qword [0x04010c3d] 	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c3d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c40	          0x4863d0	                         movsxd rdx, eax	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c43	          0x4889d0	                            mov rax, rdx	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c46	        0x48c1e003	                              shl rax, 3	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c4a	          0x4801d0	                            add rax, rdx	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c4d	          0x4801c0	                            add rax, rax	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c50	          0x4801d0	                            add rax, rdx	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c53	        0x48c1e003	                              shl rax, 3	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c57	    0x482d98000000	                           sub rax, 0x98	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c5d	          0x4801c8	                            add rax, rcx	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c60	        0x488b4060	            mov rax, qword [rax + 0x60] 	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c64	        0x488945f8	                mov qword [rbp - 8], rax	      8527	syntax.c	FUNCTION_123	IF_1
0x4010c68	      0x48837df800	                  cmp qword [rbp - 8], 0	      8528	syntax.c	FUNCTION_123	IF_1	IF_2
0x4010c6d	            0x7406	                            je 0x4010c75	      8528	syntax.c	FUNCTION_123	IF_1	IF_2
0x4010c6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      8529	syntax.c	FUNCTION_123	IF_1	IF_2
0x4010c73	            0xeb05	                           jmp 0x4010c7a	      8529	syntax.c	FUNCTION_123	IF_1	IF_2
0x4010c75	      0xb800000000	                              mov eax, 0	      8531	syntax.c	FUNCTION_123
0x4010c7a	              0xc9	                                   leave	      8532	syntax.c	FUNCTION_123
0x4010c7b	              0xc3	                                     ret	      8532	syntax.c	FUNCTION_123
validate_current_state	functions,0:IF,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	7
0x4002711	              0x55	                                push rbp	      1739	syntax.c	FUNCTION_24
0x4002712	          0x4889e5	                            mov rbp, rsp	      1739	syntax.c	FUNCTION_24
0x4002715	    0xc70500000000	           mov dword [0x0400271f], 0x90 	      1740	syntax.c	FUNCTION_24
0x400271f	    0xc70500000000	               mov dword [0x04002729], 3	      1741	syntax.c	FUNCTION_24
0x4002729	              0x90	                                     nop	      1742	syntax.c	FUNCTION_24
0x400272a	              0x5d	                                 pop rbp	      1742	syntax.c	FUNCTION_24
0x400272b	              0xc3	                                     ret	      1742	syntax.c	FUNCTION_24
get_highlight_name_ext	functions,0:IF,7:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	90
0x401491b	              0x55	                                push rbp	     10315	syntax.c	FUNCTION_168
0x401491c	          0x4889e5	                            mov rbp, rsp	     10315	syntax.c	FUNCTION_168
0x401491f	        0x48897df8	                mov qword [rbp - 8], rdi	     10315	syntax.c	FUNCTION_168
0x4014923	          0x8975f4	              mov dword [rbp - 0xc], esi	     10315	syntax.c	FUNCTION_168
0x4014926	          0x8955f0	             mov dword [rbp - 0x10], edx	     10315	syntax.c	FUNCTION_168
0x4014929	        0x837df400	                cmp dword [rbp - 0xc], 0	     10316	syntax.c	FUNCTION_168	IF_1
0x401492d	            0x790a	                           jns 0x4014939	     10316	syntax.c	FUNCTION_168	IF_1
0x401492f	      0xb800000000	                              mov eax, 0	     10317	syntax.c	FUNCTION_168	IF_1
0x4014934	      0xe920010000	                           jmp 0x4014a59	     10317	syntax.c	FUNCTION_168	IF_1
0x4014939	        0x837df000	               cmp dword [rbp - 0x10], 0	     10321	syntax.c	FUNCTION_168	IF_2
0x401493d	            0x7440	                            je 0x401497f	     10321	syntax.c	FUNCTION_168	IF_2
0x401493f	    0x8b0500000000	            mov eax, dword [0x04014945] 	     10321	syntax.c	FUNCTION_168	IF_2
0x4014945	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10321	syntax.c	FUNCTION_168	IF_2
0x4014948	            0x7e35	                           jle 0x401497f	     10321	syntax.c	FUNCTION_168	IF_2
0x401494a	    0x488b0d000000	            mov rcx, qword [0x04014951] 	     10321	syntax.c	FUNCTION_168	IF_2
0x4014951	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10321	syntax.c	FUNCTION_168	IF_2
0x4014954	          0x4863d0	                         movsxd rdx, eax	     10321	syntax.c	FUNCTION_168	IF_2
0x4014957	          0x4889d0	                            mov rax, rdx	     10321	syntax.c	FUNCTION_168	IF_2
0x401495a	        0x48c1e003	                              shl rax, 3	     10321	syntax.c	FUNCTION_168	IF_2
0x401495e	          0x4801d0	                            add rax, rdx	     10321	syntax.c	FUNCTION_168	IF_2
0x4014961	          0x4801c0	                            add rax, rax	     10321	syntax.c	FUNCTION_168	IF_2
0x4014964	          0x4801d0	                            add rax, rdx	     10321	syntax.c	FUNCTION_168	IF_2
0x4014967	        0x48c1e003	                              shl rax, 3	     10321	syntax.c	FUNCTION_168	IF_2
0x401496b	          0x4801c8	                            add rax, rcx	     10321	syntax.c	FUNCTION_168	IF_2
0x401496e	          0x8b4010	            mov eax, dword [rax + 0x10] 	     10321	syntax.c	FUNCTION_168	IF_2
0x4014971	            0x85c0	                           test eax, eax	     10321	syntax.c	FUNCTION_168	IF_2
0x4014973	            0x740a	                            je 0x401497f	     10321	syntax.c	FUNCTION_168	IF_2
0x4014975	      0xb800000000	                              mov eax, 0	     10322	syntax.c	FUNCTION_168	IF_2
0x401497a	      0xe9da000000	                           jmp 0x4014a59	     10322	syntax.c	FUNCTION_168	IF_2
0x401497f	    0x8b0500000000	            mov eax, dword [0x04014985] 	     10325	syntax.c	FUNCTION_168	IF_3
0x4014985	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10325	syntax.c	FUNCTION_168	IF_3
0x4014988	            0x7514	                           jne 0x401499e	     10325	syntax.c	FUNCTION_168	IF_3
0x401498a	    0x8b0500000000	            mov eax, dword [0x04014990] 	     10325	syntax.c	FUNCTION_168	IF_3
0x4014990	            0x85c0	                           test eax, eax	     10325	syntax.c	FUNCTION_168	IF_3
0x4014992	            0x740a	                            je 0x401499e	     10325	syntax.c	FUNCTION_168	IF_3
0x4014994	      0xb800000000	                              mov eax, 0	     10326	syntax.c	FUNCTION_168	IF_3
0x4014999	      0xe9bb000000	                           jmp 0x4014a59	     10326	syntax.c	FUNCTION_168	IF_3
0x401499e	    0x8b1500000000	            mov edx, dword [0x040149a4] 	     10327	syntax.c	FUNCTION_168	IF_4
0x40149a4	    0x8b0500000000	            mov eax, dword [0x040149aa] 	     10327	syntax.c	FUNCTION_168	IF_4
0x40149aa	             0x1d0	                            add eax, edx	     10327	syntax.c	FUNCTION_168	IF_4
0x40149ac	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10327	syntax.c	FUNCTION_168	IF_4
0x40149af	            0x7514	                           jne 0x40149c5	     10327	syntax.c	FUNCTION_168	IF_4
0x40149b1	    0x8b0500000000	            mov eax, dword [0x040149b7] 	     10327	syntax.c	FUNCTION_168	IF_4
0x40149b7	            0x85c0	                           test eax, eax	     10327	syntax.c	FUNCTION_168	IF_4
0x40149b9	            0x740a	                            je 0x40149c5	     10327	syntax.c	FUNCTION_168	IF_4
0x40149bb	      0xb800000000	                              mov eax, 0	     10328	syntax.c	FUNCTION_168	IF_4
0x40149c0	      0xe994000000	                           jmp 0x4014a59	     10328	syntax.c	FUNCTION_168	IF_4
0x40149c5	    0x8b1500000000	            mov edx, dword [0x040149cb] 	     10329	syntax.c	FUNCTION_168	IF_5
0x40149cb	    0x8b0500000000	            mov eax, dword [0x040149d1] 	     10329	syntax.c	FUNCTION_168	IF_5
0x40149d1	             0x1c2	                            add edx, eax	     10329	syntax.c	FUNCTION_168	IF_5
0x40149d3	    0x8b0500000000	            mov eax, dword [0x040149d9] 	     10329	syntax.c	FUNCTION_168	IF_5
0x40149d9	             0x1d0	                            add eax, edx	     10329	syntax.c	FUNCTION_168	IF_5
0x40149db	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10329	syntax.c	FUNCTION_168	IF_5
0x40149de	            0x7511	                           jne 0x40149f1	     10329	syntax.c	FUNCTION_168	IF_5
0x40149e0	    0x8b0500000000	            mov eax, dword [0x040149e6] 	     10330	syntax.c	FUNCTION_168	IF_5
0x40149e6	            0x85c0	                           test eax, eax	     10330	syntax.c	FUNCTION_168	IF_5
0x40149e8	            0x7407	                            je 0x40149f1	     10330	syntax.c	FUNCTION_168	IF_5
0x40149ea	      0xb800000000	                              mov eax, 0	     10331	syntax.c	FUNCTION_168	IF_5
0x40149ef	            0xeb68	                           jmp 0x4014a59	     10331	syntax.c	FUNCTION_168	IF_5
0x40149f1	    0x8b1500000000	            mov edx, dword [0x040149f7] 	     10332	syntax.c	FUNCTION_168	IF_6
0x40149f7	    0x8b0500000000	            mov eax, dword [0x040149fd] 	     10332	syntax.c	FUNCTION_168	IF_6
0x40149fd	             0x1c2	                            add edx, eax	     10332	syntax.c	FUNCTION_168	IF_6
0x40149ff	    0x8b0500000000	            mov eax, dword [0x04014a05] 	     10332	syntax.c	FUNCTION_168	IF_6
0x4014a05	             0x1d0	                            add eax, edx	     10332	syntax.c	FUNCTION_168	IF_6
0x4014a07	          0x83c001	                              add eax, 1	     10332	syntax.c	FUNCTION_168	IF_6
0x4014a0a	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10332	syntax.c	FUNCTION_168	IF_6
0x4014a0d	            0x7511	                           jne 0x4014a20	     10332	syntax.c	FUNCTION_168	IF_6
0x4014a0f	    0x8b0500000000	            mov eax, dword [0x04014a15] 	     10333	syntax.c	FUNCTION_168	IF_6
0x4014a15	            0x85c0	                           test eax, eax	     10333	syntax.c	FUNCTION_168	IF_6
0x4014a17	            0x7407	                            je 0x4014a20	     10333	syntax.c	FUNCTION_168	IF_6
0x4014a19	      0xb800000000	                              mov eax, 0	     10334	syntax.c	FUNCTION_168	IF_6
0x4014a1e	            0xeb39	                           jmp 0x4014a59	     10334	syntax.c	FUNCTION_168	IF_6
0x4014a20	    0x8b0500000000	            mov eax, dword [0x04014a26] 	     10336	syntax.c	FUNCTION_168	IF_7
0x4014a26	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10336	syntax.c	FUNCTION_168	IF_7
0x4014a29	            0x7f07	                            jg 0x4014a32	     10336	syntax.c	FUNCTION_168	IF_7
0x4014a2b	      0xb800000000	                              mov eax, 0	     10337	syntax.c	FUNCTION_168	IF_7
0x4014a30	            0xeb27	                           jmp 0x4014a59	     10337	syntax.c	FUNCTION_168	IF_7
0x4014a32	    0x488b0d000000	            mov rcx, qword [0x04014a39] 	     10338	syntax.c	FUNCTION_168
0x4014a39	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10338	syntax.c	FUNCTION_168
0x4014a3c	          0x4863d0	                         movsxd rdx, eax	     10338	syntax.c	FUNCTION_168
0x4014a3f	          0x4889d0	                            mov rax, rdx	     10338	syntax.c	FUNCTION_168
0x4014a42	        0x48c1e003	                              shl rax, 3	     10338	syntax.c	FUNCTION_168
0x4014a46	          0x4801d0	                            add rax, rdx	     10338	syntax.c	FUNCTION_168
0x4014a49	          0x4801c0	                            add rax, rax	     10338	syntax.c	FUNCTION_168
0x4014a4c	          0x4801d0	                            add rax, rdx	     10338	syntax.c	FUNCTION_168
0x4014a4f	        0x48c1e003	                              shl rax, 3	     10338	syntax.c	FUNCTION_168
0x4014a53	          0x4801c8	                            add rax, rcx	     10338	syntax.c	FUNCTION_168
0x4014a56	          0x488b00	                    mov rax, qword [rax]	     10338	syntax.c	FUNCTION_168
0x4014a59	              0x5d	                                 pop rbp	     10339	syntax.c	FUNCTION_168
0x4014a5a	              0xc3	                                     ret	     10339	syntax.c	FUNCTION_168
syn_match_msg	functions,0:IF,1:SWITCH,0:FOR,0:CALL,5:ELSE,0:WHILE,0:DO,0	23
0x4007361	              0x55	                                push rbp	      4049	syntax.c	FUNCTION_65
0x4007362	          0x4889e5	                            mov rbp, rsp	      4049	syntax.c	FUNCTION_65
0x4007365	    0x488b05000000	            mov rax, qword [0x0400736c] 	      4050	syntax.c	FUNCTION_65	IF_1
0x400736c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4050	syntax.c	FUNCTION_65	IF_1
0x4007370	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	      4050	syntax.c	FUNCTION_65	IF_1
0x4007377	          0x4885c0	                           test rax, rax	      4050	syntax.c	FUNCTION_65	IF_1
0x400737a	            0x7e3e	                           jle 0x40073ba	      4050	syntax.c	FUNCTION_65	IF_1
0x400737c	      0xbf00000000	                              mov edi, 0	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x4007381	      0xe800000000	                          call 0x4007386	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x4007386	          0x4889c7	                            mov rdi, rax	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x4007389	      0xe800000000	                          call 0x400738e	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x400738e	    0x488b05000000	            mov rax, qword [0x04007395] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x4007395	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x4007399	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x40073a0	          0x4889c7	                            mov rdi, rax	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x40073a3	      0xe800000000	                          call 0x40073a8	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x40073a8	      0xbf00000000	                              mov edi, 0	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40073ad	      0xe800000000	                          call 0x40073b2	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40073b2	          0x4889c7	                            mov rdi, rax	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40073b5	      0xe800000000	                          call 0x40073ba	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40073ba	              0x90	                                     nop	      4056	syntax.c	FUNCTION_65
0x40073bb	              0x5d	                                 pop rbp	      4056	syntax.c	FUNCTION_65
0x40073bc	              0xc3	                                     ret	      4056	syntax.c	FUNCTION_65
find_endpos	functions,0:IF,22:SWITCH,0:FOR,4:CALL,14:ELSE,5:WHILE,0:DO,0	405
0x4004c3e	              0x55	                                push rbp	      2944	syntax.c	FUNCTION_37
0x4004c3f	          0x4889e5	                            mov rbp, rsp	      2944	syntax.c	FUNCTION_37
0x4004c42	    0x4881ec600300	                          sub rsp, 0x360	      2944	syntax.c	FUNCTION_37
0x4004c49	    0x89bddcfcffff	            mov dword [rbp - 0x324], edi	      2944	syntax.c	FUNCTION_37
0x4004c4f	    0x4889b5d0fcff	            mov qword [rbp - 0x330], rsi	      2944	syntax.c	FUNCTION_37
0x4004c56	    0x488995c8fcff	            mov qword [rbp - 0x338], rdx	      2944	syntax.c	FUNCTION_37
0x4004c5d	    0x48898dc0fcff	            mov qword [rbp - 0x340], rcx	      2944	syntax.c	FUNCTION_37
0x4004c64	    0x4c8985b8fcff	             mov qword [rbp - 0x348], r8	      2944	syntax.c	FUNCTION_37
0x4004c6b	    0x4c898db0fcff	             mov qword [rbp - 0x350], r9	      2944	syntax.c	FUNCTION_37
0x4004c72	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2944	syntax.c	FUNCTION_37
0x4004c76	    0x488985a8fcff	            mov qword [rbp - 0x358], rax	      2944	syntax.c	FUNCTION_37
0x4004c7d	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      2944	syntax.c	FUNCTION_37
0x4004c81	    0x488985a0fcff	            mov qword [rbp - 0x360], rax	      2944	syntax.c	FUNCTION_37
0x4004c88	    0x64488b042528	                mov rax, qword fs:[0x28]	      2944	syntax.c	FUNCTION_37
0x4004c91	        0x488945f8	                mov qword [rbp - 8], rax	      2944	syntax.c	FUNCTION_37
0x4004c95	            0x31c0	                            xor eax, eax	      2944	syntax.c	FUNCTION_37
0x4004c97	    0xc785ecfcffff	              mov dword [rbp - 0x314], 0	      2953	syntax.c	FUNCTION_37
0x4004ca1	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	      2957	syntax.c	FUNCTION_37	IF_1
0x4004ca8	     0xf8858070000	                            js 0x4005406	      2957	syntax.c	FUNCTION_37	IF_1
0x4004cae	    0x488b05000000	            mov rax, qword [0x04004cb5] 	      2965	syntax.c	FUNCTION_37
0x4004cb5	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2965	syntax.c	FUNCTION_37
0x4004cbc	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	      2965	syntax.c	FUNCTION_37
0x4004cc2	          0x4863d0	                         movsxd rdx, eax	      2965	syntax.c	FUNCTION_37
0x4004cc5	          0x4889d0	                            mov rax, rdx	      2965	syntax.c	FUNCTION_37
0x4004cc8	        0x48c1e002	                              shl rax, 2	      2965	syntax.c	FUNCTION_37
0x4004ccc	          0x4801d0	                            add rax, rdx	      2965	syntax.c	FUNCTION_37
0x4004ccf	        0x48c1e005	                              shl rax, 5	      2965	syntax.c	FUNCTION_37
0x4004cd3	          0x4801c8	                            add rax, rcx	      2965	syntax.c	FUNCTION_37
0x4004cd6	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	      2965	syntax.c	FUNCTION_37
0x4004cdd	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      2966	syntax.c	FUNCTION_37	IF_2
0x4004ce4	           0xfb600	                   movzx eax, byte [rax]	      2966	syntax.c	FUNCTION_37	IF_2
0x4004ce7	            0x3c02	                               cmp al, 2	      2966	syntax.c	FUNCTION_37	IF_2
0x4004ce9	            0x7421	                            je 0x4004d0c	      2966	syntax.c	FUNCTION_37	IF_2
0x4004ceb	    0x488b8dc0fcff	            mov rcx, qword [rbp - 0x340]	      2968	syntax.c	FUNCTION_37	IF_2
0x4004cf2	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      2968	syntax.c	FUNCTION_37	IF_2
0x4004cf9	        0x488b5008	                mov rdx, qword [rax + 8]	      2968	syntax.c	FUNCTION_37	IF_2
0x4004cfd	          0x488b00	                    mov rax, qword [rax]	      2968	syntax.c	FUNCTION_37	IF_2
0x4004d00	          0x488901	                    mov qword [rcx], rax	      2968	syntax.c	FUNCTION_37	IF_2
0x4004d03	        0x48895108	                mov qword [rcx + 8], rdx	      2968	syntax.c	FUNCTION_37	IF_2
0x4004d07	      0xe9fb060000	                           jmp 0x4005407	      2969	syntax.c	FUNCTION_37	IF_2
0x4004d0c	    0x488b05000000	            mov rax, qword [0x04004d13] 	      2977	syntax.c	FUNCTION_37	FOR_1
0x4004d13	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2977	syntax.c	FUNCTION_37	FOR_1
0x4004d1a	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	      2977	syntax.c	FUNCTION_37	FOR_1
0x4004d20	          0x4863d0	                         movsxd rdx, eax	      2977	syntax.c	FUNCTION_37	FOR_1
0x4004d23	          0x4889d0	                            mov rax, rdx	      2977	syntax.c	FUNCTION_37	FOR_1
0x4004d26	        0x48c1e002	                              shl rax, 2	      2977	syntax.c	FUNCTION_37	FOR_1
0x4004d2a	          0x4801d0	                            add rax, rdx	      2977	syntax.c	FUNCTION_37	FOR_1
0x4004d2d	        0x48c1e005	                              shl rax, 5	      2977	syntax.c	FUNCTION_37	FOR_1
0x4004d31	          0x4801c8	                            add rax, rcx	      2977	syntax.c	FUNCTION_37	FOR_1
0x4004d34	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	      2977	syntax.c	FUNCTION_37	FOR_1
0x4004d3b	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4004d42	           0xfb600	                   movzx eax, byte [rax]	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4004d45	            0x3c02	                               cmp al, 2	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4004d47	            0x7509	                           jne 0x4004d52	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4004d49	    0x8385dcfcffff	              add dword [rbp - 0x324], 1	      2980	syntax.c	FUNCTION_37	FOR_1
0x4004d50	            0xebba	                           jmp 0x4004d0c	      2981	syntax.c	FUNCTION_37	FOR_1
0x4004d52	              0x90	                                     nop	      2979	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4004d53	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      2986	syntax.c	FUNCTION_37	IF_4
0x4004d5a	           0xfb600	                   movzx eax, byte [rax]	      2986	syntax.c	FUNCTION_37	IF_4
0x4004d5d	            0x3c04	                               cmp al, 4	      2986	syntax.c	FUNCTION_37	IF_4
0x4004d5f	            0x7517	                           jne 0x4004d78	      2986	syntax.c	FUNCTION_37	IF_4
0x4004d61	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      2988	syntax.c	FUNCTION_37	IF_4
0x4004d68	    0x48898508fdff	            mov qword [rbp - 0x2f8], rax	      2988	syntax.c	FUNCTION_37	IF_4
0x4004d6f	    0x8385dcfcffff	              add dword [rbp - 0x324], 1	      2989	syntax.c	FUNCTION_37	IF_4
0x4004d76	            0xeb0b	                           jmp 0x4004d83	      2989	syntax.c	FUNCTION_37	IF_4
0x4004d78	    0x48c78508fdff	              mov qword [rbp - 0x2f8], 0	      2992	syntax.c	FUNCTION_37	ELSE_1
0x4004d83	    0x488b05000000	            mov rax, qword [0x04004d8a] 	      2995	syntax.c	FUNCTION_37	CALL_1
0x4004d8a	          0x4889c7	                            mov rdi, rax	      2995	syntax.c	FUNCTION_37	CALL_1
0x4004d8d	      0xe800000000	                          call 0x4004d92	      2995	syntax.c	FUNCTION_37	CALL_1
0x4004d92	    0x488b85a0fcff	            mov rax, qword [rbp - 0x360]	      2996	syntax.c	FUNCTION_37	CALL_2
0x4004d99	          0x4889c7	                            mov rdi, rax	      2996	syntax.c	FUNCTION_37	CALL_2
0x4004d9c	      0xe800000000	                          call 0x4004da1	      2996	syntax.c	FUNCTION_37	CALL_2
0x4004da1	    0x488905000000	            mov qword [0x04004da8], rax 	      2996	syntax.c	FUNCTION_37	CALL_2
0x4004da8	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      2998	syntax.c	FUNCTION_37
0x4004daf	          0x8b4008	                mov eax, dword [rax + 8]	      2998	syntax.c	FUNCTION_37
0x4004db2	    0x8985e4fcffff	            mov dword [rbp - 0x31c], eax	      2998	syntax.c	FUNCTION_37
0x4004db8	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	      2999	syntax.c	FUNCTION_37
0x4004dbe	    0x8985f8fcffff	            mov dword [rbp - 0x308], eax	      2999	syntax.c	FUNCTION_37
0x4004dc4	    0xc78590feffff	              mov dword [rbp - 0x170], 0	      3000	syntax.c	FUNCTION_37
0x4004dce	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3003	syntax.c	FUNCTION_37	CALL_3
0x4004dd2	          0x4889c7	                            mov rdi, rax	      3003	syntax.c	FUNCTION_37	CALL_3
0x4004dd5	      0xe877bfffff	                   call sym.save_chartab	      3003	syntax.c	FUNCTION_37	CALL_3
0x4004dda	    0xc785e8fcffff	    mov dword [rbp - 0x318], 0xffffffff 	      3010	syntax.c	FUNCTION_37	FOR_2
0x4004de4	    0x8b85f8fcffff	            mov eax, dword [rbp - 0x308]	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004dea	    0x8985dcfcffff	            mov dword [rbp - 0x324], eax	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004df0	      0xe941010000	                           jmp 0x4004f36	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004df5	    0x8b85e4fcffff	            mov eax, dword [rbp - 0x31c]	      3013	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004dfb	    0x8985f0fcffff	            mov dword [rbp - 0x310], eax	      3013	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e01	    0x488b05000000	            mov rax, qword [0x04004e08] 	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e08	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e0f	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e15	          0x4863d0	                         movsxd rdx, eax	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e18	          0x4889d0	                            mov rax, rdx	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e1b	        0x48c1e002	                              shl rax, 2	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e1f	          0x4801d0	                            add rax, rdx	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e22	        0x48c1e005	                              shl rax, 5	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e26	          0x4801c8	                            add rax, rcx	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e29	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e30	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4004e37	           0xfb600	                   movzx eax, byte [rax]	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4004e3a	            0x3c03	                               cmp al, 3	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4004e3c	     0xf850f010000	                           jne 0x4004f51	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4004e42	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3019	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e49	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3019	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e4c	    0x2985f0fcffff	            sub dword [rbp - 0x310], eax	      3019	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e52	    0x83bdf0fcffff	              cmp dword [rbp - 0x310], 0	      3020	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_6
0x4004e59	            0x790a	                           jns 0x4004e65	      3020	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_6
0x4004e5b	    0xc785f0fcffff	              mov dword [rbp - 0x310], 0	      3021	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_6
0x4004e65	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e6c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e6f	    0x898578feffff	            mov dword [rbp - 0x188], eax	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e75	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e7c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e80	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004e87	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4004e8e	        0x488d4870	                   lea rcx, [rax + 0x70]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4004e92	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4004e99	          0x488b30	                    mov rsi, qword [rax]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4004e9c	    0x8b95f0fcffff	            mov edx, dword [rbp - 0x310]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4004ea2	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4004ea9	          0x4889c7	                            mov rdi, rax	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4004eac	      0xe8e0090000	                    call sym.syn_regexec	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4004eb1	    0x8985fcfcffff	            mov dword [rbp - 0x304], eax	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4004eb7	    0x488b9530fdff	            mov rdx, qword [rbp - 0x2d0]	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004ebe	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004ec5	        0x48895068	             mov qword [rax + 0x68], rdx	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004ec9	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 0	      3028	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7
0x4004ed0	            0x745d	                            je 0x4004f2f	      3028	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7
0x4004ed2	    0x83bde8fcffff	cmp dword [rbp - 0x318], 0xffffffffffffffff	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004ed9	            0x7410	                            je 0x4004eeb	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004edb	    0x8b9540fdffff	            mov edx, dword [rbp - 0x2c0]	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004ee1	    0x8b8590feffff	            mov eax, dword [rbp - 0x170]	      3031	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004ee7	            0x39c2	                            cmp edx, eax	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004ee9	            0x7d44	                           jge 0x4004f2f	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004eeb	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	      3033	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004ef1	    0x8985e8fcffff	            mov dword [rbp - 0x318], eax	      3033	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004ef7	    0x488b8538fdff	            mov rax, qword [rbp - 0x2c8]	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004efe	    0x488b9540fdff	            mov rdx, qword [rbp - 0x2c0]	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004f05	    0x48898588feff	            mov qword [rbp - 0x178], rax	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004f0c	    0x48899590feff	            mov qword [rbp - 0x170], rdx	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004f13	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004f1a	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004f21	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004f28	    0x48899530ffff	             mov qword [rbp - 0xd0], rdx	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4004f2f	    0x8385dcfcffff	              add dword [rbp - 0x324], 1	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004f36	    0x488b05000000	            mov rax, qword [0x04004f3d] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004f3d	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004f43	    0x3b85dcfcffff	            cmp eax, dword [rbp - 0x324]	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004f49	     0xf8fa6feffff	                            jg 0x4004df5	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004f4f	            0xeb01	                           jmp 0x4004f52	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4004f51	              0x90	                                     nop	      3018	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4004f52	    0x83bde8fcffff	cmp dword [rbp - 0x318], 0xffffffffffffffff	      3044	syntax.c	FUNCTION_37	FOR_2	IF_9
0x4004f59	     0xf8461040000	                            je 0x40053c0	      3044	syntax.c	FUNCTION_37	FOR_2	IF_9
0x4004f5f	    0x4883bd08fdff	              cmp qword [rbp - 0x2f8], 0	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004f67	     0xf84ae010000	                            je 0x400511b	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004f6d	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004f74	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004f77	    0x8b95e4fcffff	            mov edx, dword [rbp - 0x31c]	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004f7d	            0x29c2	                            sub edx, eax	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004f7f	            0x89d0	                            mov eax, edx	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004f81	    0x8985f4fcffff	            mov dword [rbp - 0x30c], eax	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004f87	    0x83bdf4fcffff	              cmp dword [rbp - 0x30c], 0	      3056	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_11
0x4004f8e	            0x790a	                           jns 0x4004f9a	      3056	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_11
0x4004f90	    0xc785f4fcffff	              mov dword [rbp - 0x30c], 0	      3057	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_11
0x4004f9a	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004fa1	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004fa4	    0x898578feffff	            mov dword [rbp - 0x188], eax	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004faa	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004fb1	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004fb5	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004fbc	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4004fc3	        0x488d4870	                   lea rcx, [rax + 0x70]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4004fc7	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4004fce	          0x488b30	                    mov rsi, qword [rax]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4004fd1	    0x8b95f4fcffff	            mov edx, dword [rbp - 0x30c]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4004fd7	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4004fde	          0x4889c7	                            mov rdi, rax	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4004fe1	      0xe8ab080000	                    call sym.syn_regexec	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4004fe6	    0x898500fdffff	            mov dword [rbp - 0x300], eax	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4004fec	    0x488b9530fdff	            mov rdx, qword [rbp - 0x2d0]	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004ff3	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004ffa	        0x48895068	             mov qword [rax + 0x68], rdx	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4004ffe	    0x83bd00fdffff	              cmp dword [rbp - 0x300], 0	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4005005	     0xf8410010000	                            je 0x400511b	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x400500b	    0x8b9540fdffff	            mov edx, dword [rbp - 0x2c0]	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4005011	    0x8b8590feffff	            mov eax, dword [rbp - 0x170]	      3064	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4005017	            0x39c2	                            cmp edx, eax	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4005019	     0xf8ffc000000	                            jg 0x400511b	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x400501f	    0x488b9508fdff	            mov rdx, qword [rbp - 0x2f8]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4005026	    0x488db530fdff	                  lea rsi, [rbp - 0x2d0]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x400502d	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4005034	    0x41b801000000	                              mov r8d, 1	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x400503a	      0xb901000000	                              mov ecx, 1	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x400503f	          0x4889c7	                            mov rdi, rax	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4005042	      0xe88d040000	                call sym.syn_add_end_off	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4005047	    0x488b9520fdff	            mov rdx, qword [rbp - 0x2e0]	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x400504e	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x4005055	          0x488b00	                    mov rax, qword [rax]	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x4005058	          0x4839c2	                            cmp rdx, rax	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x400505b	     0xf8f62030000	                            jg 0x40053c3	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x4005061	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x4005068	          0x488b08	                    mov rcx, qword [rax]	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x400506b	    0x488b05000000	            mov rax, qword [0x04005072] 	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x4005072	      0xba00000000	                              mov edx, 0	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x4005077	          0x4889ce	                            mov rsi, rcx	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x400507a	          0x4889c7	                            mov rdi, rax	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x400507d	      0xe800000000	                          call 0x4005082	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x4005082	    0x48898518fdff	            mov qword [rbp - 0x2e8], rax	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x4005089	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_8
0x4005090	          0x4889c7	                            mov rdi, rax	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_8
0x4005093	      0xe800000000	                          call 0x4005098	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_8
0x4005098	    0x898504fdffff	            mov dword [rbp - 0x2fc], eax	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_8
0x400509e	    0x8b8528fdffff	            mov eax, dword [rbp - 0x2d8]	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x40050a4	    0x3b85e4fcffff	            cmp eax, dword [rbp - 0x31c]	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x40050aa	            0x7f09	                            jg 0x40050b5	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x40050ac	    0x8385e4fcffff	              add dword [rbp - 0x31c], 1	      3081	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x40050b3	            0xeb4f	                           jmp 0x4005104	      3081	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x40050b5	    0x8b9528fdffff	            mov edx, dword [rbp - 0x2d8]	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x40050bb	    0x8b85e0fdffff	            mov eax, dword [rbp - 0x220]	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x40050c1	            0x39c2	                            cmp edx, eax	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x40050c3	            0x7f0e	                            jg 0x40050d3	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x40050c5	    0x8b8528fdffff	            mov eax, dword [rbp - 0x2d8]	      3083	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x40050cb	    0x8985e4fcffff	            mov dword [rbp - 0x31c], eax	      3083	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x40050d1	            0xeb31	                           jmp 0x4005104	      3083	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x40050d3	    0x8b85e0fdffff	            mov eax, dword [rbp - 0x220]	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40050d9	    0x8985e4fcffff	            mov dword [rbp - 0x31c], eax	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40050df	            0xeb07	                           jmp 0x40050e8	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40050e1	    0x8385e4fcffff	              add dword [rbp - 0x31c], 1	      3088	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40050e8	    0x8b85e4fcffff	            mov eax, dword [rbp - 0x31c]	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40050ee	    0x3b8504fdffff	            cmp eax, dword [rbp - 0x2fc]	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40050f4	            0x7d0e	                           jge 0x4005104	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40050f6	    0x8b8528fdffff	            mov eax, dword [rbp - 0x2d8]	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40050fc	    0x3b85e4fcffff	            cmp eax, dword [rbp - 0x31c]	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4005102	            0x7fdd	                            jg 0x40050e1	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4005104	    0x8b85e4fcffff	            mov eax, dword [rbp - 0x31c]	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x400510a	    0x3b8504fdffff	            cmp eax, dword [rbp - 0x2fc]	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x4005110	     0xf8db0020000	                           jge 0x40053c6	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x4005116	      0xe9bffcffff	                           jmp 0x4004dda	      3155	syntax.c	FUNCTION_37	FOR_2
0x400511b	    0x488b05000000	            mov rax, qword [0x04005122] 	      3103	syntax.c	FUNCTION_37	FOR_2
0x4005122	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3103	syntax.c	FUNCTION_37	FOR_2
0x4005129	    0x8b85e8fcffff	            mov eax, dword [rbp - 0x318]	      3103	syntax.c	FUNCTION_37	FOR_2
0x400512f	          0x4863d0	                         movsxd rdx, eax	      3103	syntax.c	FUNCTION_37	FOR_2
0x4005132	          0x4889d0	                            mov rax, rdx	      3103	syntax.c	FUNCTION_37	FOR_2
0x4005135	        0x48c1e002	                              shl rax, 2	      3103	syntax.c	FUNCTION_37	FOR_2
0x4005139	          0x4801d0	                            add rax, rdx	      3103	syntax.c	FUNCTION_37	FOR_2
0x400513c	        0x48c1e005	                              shl rax, 5	      3103	syntax.c	FUNCTION_37	FOR_2
0x4005140	          0x4801c8	                            add rax, rcx	      3103	syntax.c	FUNCTION_37	FOR_2
0x4005143	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	      3103	syntax.c	FUNCTION_37	FOR_2
0x400514a	    0x488b9510fdff	            mov rdx, qword [rbp - 0x2f0]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4005151	    0x488db580feff	                  lea rsi, [rbp - 0x180]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4005158	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x400515f	    0x41b801000000	                              mov r8d, 1	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4005165	      0xb901000000	                              mov ecx, 1	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x400516a	          0x4889c7	                            mov rdi, rax	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x400516d	      0xe862030000	                call sym.syn_add_end_off	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4005172	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4005179	          0x488b10	                    mov rdx, qword [rax]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x400517c	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4005183	          0x488b00	                    mov rax, qword [rax]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4005186	          0x4839c2	                            cmp rdx, rax	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4005189	            0x752c	                           jne 0x40051b7	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x400518b	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4005192	          0x8b5008	                mov edx, dword [rax + 8]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4005195	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x400519c	          0x8b4008	                mov eax, dword [rax + 8]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x400519f	            0x39c2	                            cmp edx, eax	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40051a1	            0x7d14	                           jge 0x40051b7	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40051a3	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40051aa	          0x8b5008	                mov edx, dword [rax + 8]	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40051ad	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40051b4	          0x895008	                mov dword [rax + 8], edx	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40051b7	    0x488b9510fdff	            mov rdx, qword [rbp - 0x2f0]	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x40051be	    0x488db580feff	                  lea rsi, [rbp - 0x180]	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x40051c5	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x40051cc	    0x41b801000000	                              mov r8d, 1	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x40051d2	      0xb903000000	                              mov ecx, 3	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x40051d7	          0x4889c7	                            mov rdi, rax	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x40051da	      0xe8f5020000	                call sym.syn_add_end_off	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x40051df	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40051e6	          0x488b10	                    mov rdx, qword [rax]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40051e9	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40051f0	          0x488b00	                    mov rax, qword [rax]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40051f3	          0x4839c2	                            cmp rdx, rax	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40051f6	            0x752c	                           jne 0x4005224	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40051f8	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40051ff	          0x8b5008	                mov edx, dword [rax + 8]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4005202	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4005209	          0x8b4008	                mov eax, dword [rax + 8]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x400520c	            0x39c2	                            cmp edx, eax	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x400520e	            0x7d14	                           jge 0x4005224	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4005210	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4005217	          0x8b5008	                mov edx, dword [rax + 8]	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x400521a	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4005221	          0x895008	                mov dword [rax + 8], edx	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4005224	    0x488b95c8fcff	            mov rdx, qword [rbp - 0x338]	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_11
0x400522b	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_11
0x4005232	          0x4889d6	                            mov rsi, rdx	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_11
0x4005235	          0x4889c7	                            mov rdi, rax	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_11
0x4005238	      0xe8e0010000	                      call sym.limit_pos	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_11
0x400523d	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005244	         0xfb75002	               movzx edx, word [rax + 2]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005248	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400524f	         0xfb74054	           movzx eax, word [rax + 0x54] 	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005253	          0x6639c2	                              cmp dx, ax	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005256	     0xf8418010000	                            je 0x4005374	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400525c	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005263	         0xfb74002	               movzx eax, word [rax + 2]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005267	          0x6685c0	                             test ax, ax	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400526a	     0xf8404010000	                            je 0x4005374	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005270	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005277	    0x8b95e8fcffff	            mov edx, dword [rbp - 0x318]	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400527d	            0x8910	                    mov dword [rax], edx	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400527f	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x4005286	         0xfb74004	               movzx eax, word [rax + 4]	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x400528a	              0x98	                                    cwde	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x400528b	      0x2500100000	                         and eax, 0x1000	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x4005290	            0x85c0	                           test eax, eax	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x4005292	            0x7423	                            je 0x40052b7	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x4005294	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x400529b	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40052a2	          0x488910	                    mov qword [rax], rdx	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40052a5	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40052ab	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40052b2	          0x895008	                mov dword [rax + 8], edx	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40052b5	            0xeb21	                           jmp 0x40052d8	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40052b7	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40052be	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40052c5	          0x488910	                    mov qword [rax], rdx	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40052c8	    0x8b9590feffff	            mov edx, dword [rbp - 0x170]	      3131	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40052ce	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3131	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40052d5	          0x895008	                mov dword [rax + 8], edx	      3131	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40052d8	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40052df	          0x8b5008	                mov edx, dword [rax + 8]	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40052e2	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40052e9	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40052ec	             0x1c2	                            add edx, eax	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40052ee	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40052f5	          0x895008	                mov dword [rax + 8], edx	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40052f8	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40052ff	          0x488b10	                    mov rdx, qword [rax]	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4005302	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4005309	          0x488b00	                    mov rax, qword [rax]	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x400530c	          0x4839c2	                            cmp rdx, rax	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x400530f	            0x752c	                           jne 0x400533d	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4005311	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4005318	          0x8b5008	                mov edx, dword [rax + 8]	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x400531b	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4005322	          0x8b4008	                mov eax, dword [rax + 8]	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4005325	            0x39c2	                            cmp edx, eax	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4005327	            0x7d14	                           jge 0x400533d	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4005329	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4005330	          0x8b5008	                mov edx, dword [rax + 8]	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4005333	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x400533a	          0x895008	                mov dword [rax + 8], edx	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x400533d	    0x488b95c8fcff	            mov rdx, qword [rbp - 0x338]	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_12
0x4005344	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_12
0x400534b	          0x4889d6	                            mov rsi, rdx	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_12
0x400534e	          0x4889c7	                            mov rdi, rax	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_12
0x4005351	      0xe8c7000000	                      call sym.limit_pos	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_12
0x4005356	    0x488b8dc8fcff	            mov rcx, qword [rbp - 0x338]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400535d	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005364	        0x488b5008	                mov rdx, qword [rax + 8]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005368	          0x488b00	                    mov rax, qword [rax]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400536b	          0x488901	                    mov qword [rcx], rax	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400536e	        0x48895108	                mov qword [rcx + 8], rdx	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005372	            0xeb29	                           jmp 0x400539d	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4005374	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      3147	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400537b	    0xc70000000000	                      mov dword [rax], 0	      3147	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4005381	    0x488b8dc0fcff	            mov rcx, qword [rbp - 0x340]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4005388	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400538f	        0x488b5008	                mov rdx, qword [rax + 8]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4005393	          0x488b00	                    mov rax, qword [rax]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4005396	          0x488901	                    mov qword [rcx], rax	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4005399	        0x48895108	                mov qword [rcx + 8], rdx	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400539d	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3151	syntax.c	FUNCTION_37	FOR_2
0x40053a4	          0x8b4024	            mov eax, dword [rax + 0x24] 	      3151	syntax.c	FUNCTION_37	FOR_2
0x40053a7	          0x4863d0	                         movsxd rdx, eax	      3151	syntax.c	FUNCTION_37	FOR_2
0x40053aa	    0x488b85b8fcff	            mov rax, qword [rbp - 0x348]	      3151	syntax.c	FUNCTION_37	FOR_2
0x40053b1	          0x488910	                    mov qword [rax], rdx	      3151	syntax.c	FUNCTION_37	FOR_2
0x40053b4	    0xc785ecfcffff	              mov dword [rbp - 0x314], 1	      3153	syntax.c	FUNCTION_37	FOR_2
0x40053be	            0xeb07	                           jmp 0x40053c7	      3154	syntax.c	FUNCTION_37	FOR_2
0x40053c0	              0x90	                                     nop	      3045	syntax.c	FUNCTION_37	FOR_2	IF_9
0x40053c1	            0xeb04	                           jmp 0x40053c7	      3045	syntax.c	FUNCTION_37	FOR_2	IF_9
0x40053c3	              0x90	                                     nop	      3074	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x40053c4	            0xeb01	                           jmp 0x40053c7	      3074	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x40053c6	              0x90	                                     nop	      3093	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x40053c7	    0x83bdecfcffff	              cmp dword [rbp - 0x314], 0	      3158	syntax.c	FUNCTION_37	IF_22
0x40053ce	            0x750e	                           jne 0x40053de	      3158	syntax.c	FUNCTION_37	IF_22
0x40053d0	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      3159	syntax.c	FUNCTION_37	IF_22
0x40053d7	    0x48c700000000	                      mov qword [rax], 0	      3159	syntax.c	FUNCTION_37	IF_22
0x40053de	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3161	syntax.c	FUNCTION_37	CALL_13
0x40053e2	          0x4889c7	                            mov rdi, rax	      3161	syntax.c	FUNCTION_37	CALL_13
0x40053e5	      0xe8e1b9ffff	                call sym.restore_chartab	      3161	syntax.c	FUNCTION_37	CALL_13
0x40053ea	    0x488b05000000	            mov rax, qword [0x040053f1] 	      3164	syntax.c	FUNCTION_37	CALL_14
0x40053f1	          0x4889c7	                            mov rdi, rax	      3164	syntax.c	FUNCTION_37	CALL_14
0x40053f4	      0xe800000000	                          call 0x40053f9	      3164	syntax.c	FUNCTION_37	CALL_14
0x40053f9	    0x48c705000000	               mov qword [0x04005404], 0	      3165	syntax.c	FUNCTION_37
0x4005404	            0xeb01	                           jmp 0x4005407	      3165	syntax.c	FUNCTION_37
0x4005406	              0x90	                                     nop	      2958	syntax.c	FUNCTION_37	IF_1
0x4005407	        0x488b45f8	                mov rax, qword [rbp - 8]	      3166	syntax.c	FUNCTION_37
0x400540b	    0x644833042528	                xor rax, qword fs:[0x28]	      3166	syntax.c	FUNCTION_37
0x4005414	            0x7405	                            je 0x400541b	      3166	syntax.c	FUNCTION_37
0x4005416	      0xe800000000	                          call 0x400541b	      3166	syntax.c	FUNCTION_37
0x400541b	              0xc9	                                   leave	      3166	syntax.c	FUNCTION_37
0x400541c	              0xc3	                                     ret	      3166	syntax.c	FUNCTION_37
reset_expand_highlight	functions,0:IF,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0	10
0x400c8df	              0x55	                                push rbp	      6467	syntax.c	FUNCTION_98
0x400c8e0	          0x4889e5	                            mov rbp, rsp	      6467	syntax.c	FUNCTION_98
0x400c8e3	    0xc70500000000	               mov dword [0x0400c8ed], 0	      6468	syntax.c	FUNCTION_98
0x400c8ed	    0x8b0500000000	            mov eax, dword [0x0400c8f3] 	      6468	syntax.c	FUNCTION_98
0x400c8f3	    0x890500000000	            mov dword [0x0400c8f9], eax 	      6468	syntax.c	FUNCTION_98
0x400c8f9	    0x8b0500000000	            mov eax, dword [0x0400c8ff] 	      6468	syntax.c	FUNCTION_98
0x400c8ff	    0x890500000000	            mov dword [0x0400c905], eax 	      6468	syntax.c	FUNCTION_98
0x400c905	              0x90	                                     nop	      6469	syntax.c	FUNCTION_98
0x400c906	              0x5d	                                 pop rbp	      6469	syntax.c	FUNCTION_98
0x400c907	              0xc3	                                     ret	      6469	syntax.c	FUNCTION_98
get_group_name	functions,0:IF,1:SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,0:DO,0	32
0x400862a	              0x55	                                push rbp	      4579	syntax.c	FUNCTION_75
0x400862b	          0x4889e5	                            mov rbp, rsp	      4579	syntax.c	FUNCTION_75
0x400862e	        0x4883ec20	                           sub rsp, 0x20	      4579	syntax.c	FUNCTION_75
0x4008632	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4579	syntax.c	FUNCTION_75
0x4008636	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4579	syntax.c	FUNCTION_75
0x400863a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4582	syntax.c	FUNCTION_75	CALL_1
0x400863e	          0x4889c7	                            mov rdi, rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x4008641	      0xe800000000	                          call 0x4008646	      4582	syntax.c	FUNCTION_75	CALL_1
0x4008646	          0x4889c2	                            mov rdx, rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x4008649	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4582	syntax.c	FUNCTION_75	CALL_1
0x400864d	          0x488910	                    mov qword [rax], rdx	      4582	syntax.c	FUNCTION_75	CALL_1
0x4008650	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4583	syntax.c	FUNCTION_75	CALL_2
0x4008654	          0x488b00	                    mov rax, qword [rax]	      4583	syntax.c	FUNCTION_75	CALL_2
0x4008657	          0x4889c7	                            mov rdi, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x400865a	      0xe800000000	                          call 0x400865f	      4583	syntax.c	FUNCTION_75	CALL_2
0x400865f	        0x488945f8	                mov qword [rbp - 8], rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x4008663	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4008667	           0xfb600	                   movzx eax, byte [rax]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400866a	           0xfb6c0	                           movzx eax, al	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400866d	            0x89c7	                            mov edi, eax	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400866f	      0xe800000000	                          call 0x4008674	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4008674	            0x85c0	                           test eax, eax	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4008676	            0x750b	                           jne 0x4008683	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4008678	        0x488b45f8	                mov rax, qword [rbp - 8]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400867c	           0xfb600	                   movzx eax, byte [rax]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400867f	            0x84c0	                             test al, al	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4008681	            0x7507	                           jne 0x400868a	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4008683	      0xb800000000	                              mov eax, 0	      4590	syntax.c	FUNCTION_75	IF_1
0x4008688	            0xeb04	                           jmp 0x400868e	      4590	syntax.c	FUNCTION_75	IF_1
0x400868a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4591	syntax.c	FUNCTION_75
0x400868e	              0xc9	                                   leave	      4592	syntax.c	FUNCTION_75
0x400868f	              0xc3	                                     ret	      4592	syntax.c	FUNCTION_75
highlight_gui_color_rgb	functions,0:IF,3:SWITCH,0:FOR,0:CALL,1:ELSE,1:WHILE,0:DO,0	56
0x40128bd	              0x55	                                push rbp	      9451	syntax.c	FUNCTION_145
0x40128be	          0x4889e5	                            mov rbp, rsp	      9451	syntax.c	FUNCTION_145
0x40128c1	        0x4883ec20	                           sub rsp, 0x20	      9451	syntax.c	FUNCTION_145
0x40128c5	          0x897dec	             mov dword [rbp - 0x14], edi	      9451	syntax.c	FUNCTION_145
0x40128c8	          0x8975e8	             mov dword [rbp - 0x18], esi	      9451	syntax.c	FUNCTION_145
0x40128cb	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9454	syntax.c	FUNCTION_145	IF_1
0x40128cf	            0x7e0b	                           jle 0x40128dc	      9454	syntax.c	FUNCTION_145	IF_1
0x40128d1	    0x8b0500000000	            mov eax, dword [0x040128d7] 	      9454	syntax.c	FUNCTION_145	IF_1
0x40128d7	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      9454	syntax.c	FUNCTION_145	IF_1
0x40128da	            0x7d0a	                           jge 0x40128e6	      9454	syntax.c	FUNCTION_145	IF_1
0x40128dc	      0xb800000000	                              mov eax, 0	      9455	syntax.c	FUNCTION_145	IF_1
0x40128e1	      0xe99c000000	                           jmp 0x4012982	      9455	syntax.c	FUNCTION_145	IF_1
0x40128e6	        0x837de800	               cmp dword [rbp - 0x18], 0	      9457	syntax.c	FUNCTION_145	IF_2
0x40128ea	            0x7434	                            je 0x4012920	      9457	syntax.c	FUNCTION_145	IF_2
0x40128ec	    0x488b0d000000	            mov rcx, qword [0x040128f3] 	      9458	syntax.c	FUNCTION_145	IF_2
0x40128f3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9458	syntax.c	FUNCTION_145	IF_2
0x40128f6	          0x4863d0	                         movsxd rdx, eax	      9458	syntax.c	FUNCTION_145	IF_2
0x40128f9	          0x4889d0	                            mov rax, rdx	      9458	syntax.c	FUNCTION_145	IF_2
0x40128fc	        0x48c1e003	                              shl rax, 3	      9458	syntax.c	FUNCTION_145	IF_2
0x4012900	          0x4801d0	                            add rax, rdx	      9458	syntax.c	FUNCTION_145	IF_2
0x4012903	          0x4801c0	                            add rax, rax	      9458	syntax.c	FUNCTION_145	IF_2
0x4012906	          0x4801d0	                            add rax, rdx	      9458	syntax.c	FUNCTION_145	IF_2
0x4012909	        0x48c1e003	                              shl rax, 3	      9458	syntax.c	FUNCTION_145	IF_2
0x401290d	    0x482d98000000	                           sub rax, 0x98	      9458	syntax.c	FUNCTION_145	IF_2
0x4012913	          0x4801c8	                            add rax, rcx	      9458	syntax.c	FUNCTION_145	IF_2
0x4012916	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9458	syntax.c	FUNCTION_145	IF_2
0x401291a	        0x488945f8	                mov qword [rbp - 8], rax	      9458	syntax.c	FUNCTION_145	IF_2
0x401291e	            0xeb32	                           jmp 0x4012952	      9458	syntax.c	FUNCTION_145	IF_2
0x4012920	    0x488b0d000000	            mov rcx, qword [0x04012927] 	      9460	syntax.c	FUNCTION_145	ELSE_1
0x4012927	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9460	syntax.c	FUNCTION_145	ELSE_1
0x401292a	          0x4863d0	                         movsxd rdx, eax	      9460	syntax.c	FUNCTION_145	ELSE_1
0x401292d	          0x4889d0	                            mov rax, rdx	      9460	syntax.c	FUNCTION_145	ELSE_1
0x4012930	        0x48c1e003	                              shl rax, 3	      9460	syntax.c	FUNCTION_145	ELSE_1
0x4012934	          0x4801d0	                            add rax, rdx	      9460	syntax.c	FUNCTION_145	ELSE_1
0x4012937	          0x4801c0	                            add rax, rax	      9460	syntax.c	FUNCTION_145	ELSE_1
0x401293a	          0x4801d0	                            add rax, rdx	      9460	syntax.c	FUNCTION_145	ELSE_1
0x401293d	        0x48c1e003	                              shl rax, 3	      9460	syntax.c	FUNCTION_145	ELSE_1
0x4012941	    0x482d98000000	                           sub rax, 0x98	      9460	syntax.c	FUNCTION_145	ELSE_1
0x4012947	          0x4801c8	                            add rax, rcx	      9460	syntax.c	FUNCTION_145	ELSE_1
0x401294a	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9460	syntax.c	FUNCTION_145	ELSE_1
0x401294e	        0x488945f8	                mov qword [rbp - 8], rax	      9460	syntax.c	FUNCTION_145	ELSE_1
0x4012952	    0x48817df899d4	 cmp qword [rbp - 8], 0xffffffffffffd499	      9462	syntax.c	FUNCTION_145	IF_3
0x401295a	            0x7507	                           jne 0x4012963	      9462	syntax.c	FUNCTION_145	IF_3
0x401295c	      0xb800000000	                              mov eax, 0	      9463	syntax.c	FUNCTION_145	IF_3
0x4012961	            0xeb1f	                           jmp 0x4012982	      9463	syntax.c	FUNCTION_145	IF_3
0x4012963	    0x8b0500000000	            mov eax, dword [0x04012969] 	      9465	syntax.c	FUNCTION_145	CALL_1
0x4012969	            0x85c0	                           test eax, eax	      9465	syntax.c	FUNCTION_145	CALL_1
0x401296b	            0x7407	                            je 0x4012974	      9465	syntax.c	FUNCTION_145	CALL_1
0x401296d	      0xba00000000	                              mov edx, 0	      9465	syntax.c	FUNCTION_145	CALL_1
0x4012972	            0xeb05	                           jmp 0x4012979	      9465	syntax.c	FUNCTION_145	CALL_1
0x4012974	      0xba00000000	                              mov edx, 0	      9465	syntax.c	FUNCTION_145	CALL_1
0x4012979	        0x488b45f8	                mov rax, qword [rbp - 8]	      9465	syntax.c	FUNCTION_145	CALL_1
0x401297d	          0x4889c7	                            mov rdi, rax	      9465	syntax.c	FUNCTION_145	CALL_1
0x4012980	            0xffd2	                                call rdx	      9465	syntax.c	FUNCTION_145	CALL_1
0x4012982	              0xc9	                                   leave	      9466	syntax.c	FUNCTION_145
0x4012983	              0xc3	                                     ret	      9466	syntax.c	FUNCTION_145
pop_current_state	functions,0:IF,2:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0	29
0x4004bc4	              0x55	                                push rbp	      2911	syntax.c	FUNCTION_36
0x4004bc5	          0x4889e5	                            mov rbp, rsp	      2911	syntax.c	FUNCTION_36
0x4004bc8	    0x8b0500000000	            mov eax, dword [0x04004bce] 	      2912	syntax.c	FUNCTION_36	IF_1
0x4004bce	            0x85c0	                           test eax, eax	      2912	syntax.c	FUNCTION_36	IF_1
0x4004bd0	            0x7445	                            je 0x4004c17	      2912	syntax.c	FUNCTION_36	IF_1
0x4004bd2	    0x488b0d000000	            mov rcx, qword [0x04004bd9] 	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004bd9	    0x8b0500000000	            mov eax, dword [0x04004bdf] 	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004bdf	          0x4863d0	                         movsxd rdx, eax	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004be2	          0x4889d0	                            mov rax, rdx	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004be5	        0x48c1e003	                              shl rax, 3	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004be9	          0x4801d0	                            add rax, rdx	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004bec	        0x48c1e004	                              shl rax, 4	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004bf0	    0x482d90000000	                           sub rax, 0x90	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004bf6	          0x4801c8	                            add rax, rcx	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004bf9	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004c00	          0x4889c7	                            mov rdi, rax	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004c03	      0xe800000000	                          call 0x4004c08	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004c08	    0x8b0500000000	            mov eax, dword [0x04004c0e] 	      2915	syntax.c	FUNCTION_36	IF_1
0x4004c0e	          0x83e801	                              sub eax, 1	      2915	syntax.c	FUNCTION_36	IF_1
0x4004c11	    0x890500000000	            mov dword [0x04004c17], eax 	      2915	syntax.c	FUNCTION_36	IF_1
0x4004c17	    0xc70500000000	     mov dword [0x04004c21], 0xffffffff 	      2918	syntax.c	FUNCTION_36
0x4004c21	    0x8b1500000000	            mov edx, dword [0x04004c27] 	      2921	syntax.c	FUNCTION_36	IF_2
0x4004c27	    0x8b0500000000	            mov eax, dword [0x04004c2d] 	      2921	syntax.c	FUNCTION_36	IF_2
0x4004c2d	            0x39c2	                            cmp edx, eax	      2921	syntax.c	FUNCTION_36	IF_2
0x4004c2f	            0x7f0a	                            jg 0x4004c3b	      2921	syntax.c	FUNCTION_36	IF_2
0x4004c31	    0xc70500000000	     mov dword [0x04004c3b], 0xffffffff 	      2922	syntax.c	FUNCTION_36	IF_2
0x4004c3b	              0x90	                                     nop	      2923	syntax.c	FUNCTION_36
0x4004c3c	              0x5d	                                 pop rbp	      2923	syntax.c	FUNCTION_36
0x4004c3d	              0xc3	                                     ret	      2923	syntax.c	FUNCTION_36
syn_scl_namen2id	functions,0:IF,1:SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,0:DO,0	24
0x400a9fa	              0x55	                                push rbp	      5556	syntax.c	FUNCTION_85
0x400a9fb	          0x4889e5	                            mov rbp, rsp	      5556	syntax.c	FUNCTION_85
0x400a9fe	        0x4883ec20	                           sub rsp, 0x20	      5556	syntax.c	FUNCTION_85
0x400aa02	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5556	syntax.c	FUNCTION_85
0x400aa06	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5556	syntax.c	FUNCTION_85
0x400aa09	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5558	syntax.c	FUNCTION_85
0x400aa10	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      5560	syntax.c	FUNCTION_85	CALL_1
0x400aa13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5560	syntax.c	FUNCTION_85	CALL_1
0x400aa17	            0x89d6	                            mov esi, edx	      5560	syntax.c	FUNCTION_85	CALL_1
0x400aa19	          0x4889c7	                            mov rdi, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x400aa1c	      0xe800000000	                          call 0x400aa21	      5560	syntax.c	FUNCTION_85	CALL_1
0x400aa21	        0x488945f8	                mov qword [rbp - 8], rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x400aa25	      0x48837df800	                  cmp qword [rbp - 8], 0	      5561	syntax.c	FUNCTION_85	IF_1
0x400aa2a	            0x741b	                            je 0x400aa47	      5561	syntax.c	FUNCTION_85	IF_1
0x400aa2c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x400aa30	          0x4889c7	                            mov rdi, rax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x400aa33	      0xe8defeffff	                call sym.syn_scl_name2id	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x400aa38	          0x8945f4	              mov dword [rbp - 0xc], eax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x400aa3b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400aa3f	          0x4889c7	                            mov rdi, rax	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400aa42	      0xe800000000	                          call 0x400aa47	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400aa47	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5566	syntax.c	FUNCTION_85
0x400aa4a	              0xc9	                                   leave	      5567	syntax.c	FUNCTION_85
0x400aa4b	              0xc3	                                     ret	      5567	syntax.c	FUNCTION_85
highlight_list_two	functions,0:IF,0:SWITCH,0:FOR,0:CALL,4:ELSE,0:WHILE,0:DO,0	40
0x4014874	              0x55	                                push rbp	     10289	syntax.c	FUNCTION_166
0x4014875	          0x4889e5	                            mov rbp, rsp	     10289	syntax.c	FUNCTION_166
0x4014878	        0x4883ec10	                           sub rsp, 0x10	     10289	syntax.c	FUNCTION_166
0x401487c	          0x897dfc	                mov dword [rbp - 4], edi	     10289	syntax.c	FUNCTION_166
0x401487f	          0x8975f8	                mov dword [rbp - 8], esi	     10289	syntax.c	FUNCTION_166
0x4014882	          0x8b4dfc	                mov ecx, dword [rbp - 4]	     10290	syntax.c	FUNCTION_166	CALL_1
0x4014885	      0xbae9a28b2e	                     mov edx, 0x2e8ba2e9	     10290	syntax.c	FUNCTION_166	CALL_1
0x401488a	            0x89c8	                            mov eax, ecx	     10290	syntax.c	FUNCTION_166	CALL_1
0x401488c	            0xf7ea	                                imul edx	     10290	syntax.c	FUNCTION_166	CALL_1
0x401488e	            0xd1fa	                              sar edx, 1	     10290	syntax.c	FUNCTION_166	CALL_1
0x4014890	            0x89c8	                            mov eax, ecx	     10290	syntax.c	FUNCTION_166	CALL_1
0x4014892	          0xc1f81f	                           sar eax, 0x1f	     10290	syntax.c	FUNCTION_166	CALL_1
0x4014895	            0x29c2	                            sub edx, eax	     10290	syntax.c	FUNCTION_166	CALL_1
0x4014897	            0x89d0	                            mov eax, edx	     10290	syntax.c	FUNCTION_166	CALL_1
0x4014899	            0x4898	                                    cdqe	     10290	syntax.c	FUNCTION_166	CALL_1
0x401489b	    0x488d90000000	                          lea rdx, [rax]	     10290	syntax.c	FUNCTION_166	CALL_1
0x40148a2	          0x8b45f8	                mov eax, dword [rbp - 8]	     10290	syntax.c	FUNCTION_166	CALL_1
0x40148a5	            0x89c6	                            mov esi, eax	     10290	syntax.c	FUNCTION_166	CALL_1
0x40148a7	          0x4889d7	                            mov rdi, rdx	     10290	syntax.c	FUNCTION_166	CALL_1
0x40148aa	      0xe800000000	                          call 0x40148af	     10290	syntax.c	FUNCTION_166	CALL_1
0x40148af	      0xe800000000	                          call 0x40148b4	     10291	syntax.c	FUNCTION_166	CALL_2
0x40148b4	      0xe800000000	                          call 0x40148b9	     10292	syntax.c	FUNCTION_166	CALL_3
0x40148b9	        0x837dfc63	               cmp dword [rbp - 4], 0x63	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148bd	            0x7420	                            je 0x40148df	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148bf	          0x8b45fc	                mov eax, dword [rbp - 4]	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148c2	          0x4863d0	                         movsxd rdx, eax	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148c5	          0x4889d0	                            mov rax, rdx	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148c8	        0x48c1e002	                              shl rax, 2	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148cc	          0x4801d0	                            add rax, rdx	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148cf	    0x488d14850000	                        lea rdx, [rax*4]	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148d7	          0x4801d0	                            add rax, rdx	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148da	          0x4801c0	                            add rax, rax	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148dd	            0xeb05	                           jmp 0x40148e4	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148df	      0xb828000000	                           mov eax, 0x28	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148e4	      0xbe00000000	                              mov esi, 0	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148e9	          0x4889c7	                            mov rdi, rax	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148ec	      0xe800000000	                          call 0x40148f1	     10293	syntax.c	FUNCTION_166	CALL_4
0x40148f1	              0x90	                                     nop	     10294	syntax.c	FUNCTION_166
0x40148f2	              0xc9	                                   leave	     10294	syntax.c	FUNCTION_166
0x40148f3	              0xc3	                                     ret	     10294	syntax.c	FUNCTION_166
