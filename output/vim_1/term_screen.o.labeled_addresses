rect_contains	DO,0:WHILE,0:IF,4:FOR,0:ELSE,0:functions,0:CALL,0:SWITCH,0	39
0x40001f4	              0x55	                                push rbp	        40	rect.h	FUNCTION_4
0x40001f5	          0x4889e5	                            mov rbp, rsp	        40	rect.h	FUNCTION_4
0x40001f8	        0x48897df8	                mov qword [rbp - 8], rdi	        40	rect.h	FUNCTION_4
0x40001fc	        0x488975f0	             mov qword [rbp - 0x10], rsi	        40	rect.h	FUNCTION_4
0x4000200	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        41	rect.h	FUNCTION_4	IF_1
0x4000204	            0x8b10	                    mov edx, dword [rax]	        41	rect.h	FUNCTION_4	IF_1
0x4000206	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	rect.h	FUNCTION_4	IF_1
0x400020a	            0x8b00	                    mov eax, dword [rax]	        41	rect.h	FUNCTION_4	IF_1
0x400020c	            0x39c2	                            cmp edx, eax	        41	rect.h	FUNCTION_4	IF_1
0x400020e	            0x7d07	                           jge 0x4000217	        41	rect.h	FUNCTION_4	IF_1
0x4000210	      0xb800000000	                              mov eax, 0	        41	rect.h	FUNCTION_4	IF_1
0x4000215	            0xeb50	                           jmp 0x4000267	        41	rect.h	FUNCTION_4	IF_1
0x4000217	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        42	rect.h	FUNCTION_4	IF_2
0x400021b	          0x8b5008	                mov edx, dword [rax + 8]	        42	rect.h	FUNCTION_4	IF_2
0x400021e	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	rect.h	FUNCTION_4	IF_2
0x4000222	          0x8b4008	                mov eax, dword [rax + 8]	        42	rect.h	FUNCTION_4	IF_2
0x4000225	            0x39c2	                            cmp edx, eax	        42	rect.h	FUNCTION_4	IF_2
0x4000227	            0x7d07	                           jge 0x4000230	        42	rect.h	FUNCTION_4	IF_2
0x4000229	      0xb800000000	                              mov eax, 0	        42	rect.h	FUNCTION_4	IF_2
0x400022e	            0xeb37	                           jmp 0x4000267	        42	rect.h	FUNCTION_4	IF_2
0x4000230	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        43	rect.h	FUNCTION_4	IF_3
0x4000234	          0x8b5004	                mov edx, dword [rax + 4]	        43	rect.h	FUNCTION_4	IF_3
0x4000237	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	rect.h	FUNCTION_4	IF_3
0x400023b	          0x8b4004	                mov eax, dword [rax + 4]	        43	rect.h	FUNCTION_4	IF_3
0x400023e	            0x39c2	                            cmp edx, eax	        43	rect.h	FUNCTION_4	IF_3
0x4000240	            0x7e07	                           jle 0x4000249	        43	rect.h	FUNCTION_4	IF_3
0x4000242	      0xb800000000	                              mov eax, 0	        43	rect.h	FUNCTION_4	IF_3
0x4000247	            0xeb1e	                           jmp 0x4000267	        43	rect.h	FUNCTION_4	IF_3
0x4000249	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        44	rect.h	FUNCTION_4	IF_4
0x400024d	          0x8b500c	              mov edx, dword [rax + 0xc]	        44	rect.h	FUNCTION_4	IF_4
0x4000250	        0x488b45f8	                mov rax, qword [rbp - 8]	        44	rect.h	FUNCTION_4	IF_4
0x4000254	          0x8b400c	              mov eax, dword [rax + 0xc]	        44	rect.h	FUNCTION_4	IF_4
0x4000257	            0x39c2	                            cmp edx, eax	        44	rect.h	FUNCTION_4	IF_4
0x4000259	            0x7e07	                           jle 0x4000262	        44	rect.h	FUNCTION_4	IF_4
0x400025b	      0xb800000000	                              mov eax, 0	        44	rect.h	FUNCTION_4	IF_4
0x4000260	            0xeb05	                           jmp 0x4000267	        44	rect.h	FUNCTION_4	IF_4
0x4000262	      0xb801000000	                              mov eax, 1	        45	rect.h	FUNCTION_4
0x4000267	              0x5d	                                 pop rbp	        46	rect.h	FUNCTION_4
0x4000268	              0xc3	                                     ret	        46	rect.h	FUNCTION_4
rect_intersects	DO,0:WHILE,0:IF,2:FOR,0:ELSE,0:functions,0:CALL,0:SWITCH,0	35
0x4000269	              0x55	                                push rbp	        50	rect.h	FUNCTION_5
0x400026a	          0x4889e5	                            mov rbp, rsp	        50	rect.h	FUNCTION_5
0x400026d	        0x48897df8	                mov qword [rbp - 8], rdi	        50	rect.h	FUNCTION_5
0x4000271	        0x488975f0	             mov qword [rbp - 0x10], rsi	        50	rect.h	FUNCTION_5
0x4000275	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	rect.h	FUNCTION_5	IF_1
0x4000279	            0x8b10	                    mov edx, dword [rax]	        51	rect.h	FUNCTION_5	IF_1
0x400027b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        51	rect.h	FUNCTION_5	IF_1
0x400027f	          0x8b4004	                mov eax, dword [rax + 4]	        51	rect.h	FUNCTION_5	IF_1
0x4000282	            0x39c2	                            cmp edx, eax	        51	rect.h	FUNCTION_5	IF_1
0x4000284	            0x7f11	                            jg 0x4000297	        51	rect.h	FUNCTION_5	IF_1
0x4000286	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        51	rect.h	FUNCTION_5	IF_1
0x400028a	            0x8b10	                    mov edx, dword [rax]	        51	rect.h	FUNCTION_5	IF_1
0x400028c	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	rect.h	FUNCTION_5	IF_1
0x4000290	          0x8b4004	                mov eax, dword [rax + 4]	        51	rect.h	FUNCTION_5	IF_1
0x4000293	            0x39c2	                            cmp edx, eax	        51	rect.h	FUNCTION_5	IF_1
0x4000295	            0x7e07	                           jle 0x400029e	        51	rect.h	FUNCTION_5	IF_1
0x4000297	      0xb800000000	                              mov eax, 0	        52	rect.h	FUNCTION_5	IF_1
0x400029c	            0xeb30	                           jmp 0x40002ce	        52	rect.h	FUNCTION_5	IF_1
0x400029e	        0x488b45f8	                mov rax, qword [rbp - 8]	        53	rect.h	FUNCTION_5	IF_2
0x40002a2	          0x8b5008	                mov edx, dword [rax + 8]	        53	rect.h	FUNCTION_5	IF_2
0x40002a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        53	rect.h	FUNCTION_5	IF_2
0x40002a9	          0x8b400c	              mov eax, dword [rax + 0xc]	        53	rect.h	FUNCTION_5	IF_2
0x40002ac	            0x39c2	                            cmp edx, eax	        53	rect.h	FUNCTION_5	IF_2
0x40002ae	            0x7f12	                            jg 0x40002c2	        53	rect.h	FUNCTION_5	IF_2
0x40002b0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        53	rect.h	FUNCTION_5	IF_2
0x40002b4	          0x8b5008	                mov edx, dword [rax + 8]	        53	rect.h	FUNCTION_5	IF_2
0x40002b7	        0x488b45f8	                mov rax, qword [rbp - 8]	        53	rect.h	FUNCTION_5	IF_2
0x40002bb	          0x8b400c	              mov eax, dword [rax + 0xc]	        53	rect.h	FUNCTION_5	IF_2
0x40002be	            0x39c2	                            cmp edx, eax	        53	rect.h	FUNCTION_5	IF_2
0x40002c0	            0x7e07	                           jle 0x40002c9	        53	rect.h	FUNCTION_5	IF_2
0x40002c2	      0xb800000000	                              mov eax, 0	        54	rect.h	FUNCTION_5	IF_2
0x40002c7	            0xeb05	                           jmp 0x40002ce	        54	rect.h	FUNCTION_5	IF_2
0x40002c9	      0xb801000000	                              mov eax, 1	        55	rect.h	FUNCTION_5
0x40002ce	              0x5d	                                 pop rbp	        56	rect.h	FUNCTION_5
0x40002cf	              0xc3	                                     ret	        56	rect.h	FUNCTION_5
rect_equal	DO,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,0:SWITCH,0	33
0x4000194	              0x55	                                push rbp	        31	rect.h	FUNCTION_3
0x4000195	          0x4889e5	                            mov rbp, rsp	        31	rect.h	FUNCTION_3
0x4000198	        0x48897df8	                mov qword [rbp - 8], rdi	        31	rect.h	FUNCTION_3
0x400019c	        0x488975f0	             mov qword [rbp - 0x10], rsi	        31	rect.h	FUNCTION_3
0x40001a0	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	rect.h	FUNCTION_3
0x40001a4	            0x8b10	                    mov edx, dword [rax]	        32	rect.h	FUNCTION_3
0x40001a6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        32	rect.h	FUNCTION_3
0x40001aa	            0x8b00	                    mov eax, dword [rax]	        32	rect.h	FUNCTION_3
0x40001ac	            0x39c2	                            cmp edx, eax	        34	rect.h	FUNCTION_3
0x40001ae	            0x753d	                           jne 0x40001ed	        34	rect.h	FUNCTION_3
0x40001b0	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	rect.h	FUNCTION_3
0x40001b4	          0x8b5008	                mov edx, dword [rax + 8]	        33	rect.h	FUNCTION_3
0x40001b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        33	rect.h	FUNCTION_3
0x40001bb	          0x8b4008	                mov eax, dword [rax + 8]	        33	rect.h	FUNCTION_3
0x40001be	            0x39c2	                            cmp edx, eax	        32	rect.h	FUNCTION_3
0x40001c0	            0x752b	                           jne 0x40001ed	        32	rect.h	FUNCTION_3
0x40001c2	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	rect.h	FUNCTION_3
0x40001c6	          0x8b5004	                mov edx, dword [rax + 4]	        34	rect.h	FUNCTION_3
0x40001c9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        34	rect.h	FUNCTION_3
0x40001cd	          0x8b4004	                mov eax, dword [rax + 4]	        34	rect.h	FUNCTION_3
0x40001d0	            0x39c2	                            cmp edx, eax	        33	rect.h	FUNCTION_3
0x40001d2	            0x7519	                           jne 0x40001ed	        33	rect.h	FUNCTION_3
0x40001d4	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	rect.h	FUNCTION_3
0x40001d8	          0x8b500c	              mov edx, dword [rax + 0xc]	        35	rect.h	FUNCTION_3
0x40001db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        35	rect.h	FUNCTION_3
0x40001df	          0x8b400c	              mov eax, dword [rax + 0xc]	        35	rect.h	FUNCTION_3
0x40001e2	            0x39c2	                            cmp edx, eax	        34	rect.h	FUNCTION_3
0x40001e4	            0x7507	                           jne 0x40001ed	        34	rect.h	FUNCTION_3
0x40001e6	      0xb801000000	                              mov eax, 1	        34	rect.h	FUNCTION_3
0x40001eb	            0xeb05	                           jmp 0x40001f2	        34	rect.h	FUNCTION_3
0x40001ed	      0xb800000000	                              mov eax, 0	        34	rect.h	FUNCTION_3
0x40001f2	              0x5d	                                 pop rbp	        36	rect.h	FUNCTION_3
0x40001f3	              0xc3	                                     ret	        36	rect.h	FUNCTION_3
rect_clip	DO,0:WHILE,0:IF,6:FOR,0:ELSE,0:functions,0:CALL,0:SWITCH,0	67
0x40000cb	              0x55	                                push rbp	        19	rect.h	FUNCTION_2
0x40000cc	          0x4889e5	                            mov rbp, rsp	        19	rect.h	FUNCTION_2
0x40000cf	        0x48897df8	                mov qword [rbp - 8], rdi	        19	rect.h	FUNCTION_2
0x40000d3	        0x488975f0	             mov qword [rbp - 0x10], rsi	        19	rect.h	FUNCTION_2
0x40000d7	        0x488b45f8	                mov rax, qword [rbp - 8]	        20	rect.h	FUNCTION_2	IF_1
0x40000db	            0x8b10	                    mov edx, dword [rax]	        20	rect.h	FUNCTION_2	IF_1
0x40000dd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        20	rect.h	FUNCTION_2	IF_1
0x40000e1	            0x8b00	                    mov eax, dword [rax]	        20	rect.h	FUNCTION_2	IF_1
0x40000e3	            0x39c2	                            cmp edx, eax	        20	rect.h	FUNCTION_2	IF_1
0x40000e5	            0x7d0c	                           jge 0x40000f3	        20	rect.h	FUNCTION_2	IF_1
0x40000e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        20	rect.h	FUNCTION_2	IF_1
0x40000eb	            0x8b10	                    mov edx, dword [rax]	        20	rect.h	FUNCTION_2	IF_1
0x40000ed	        0x488b45f8	                mov rax, qword [rbp - 8]	        20	rect.h	FUNCTION_2	IF_1
0x40000f1	            0x8910	                    mov dword [rax], edx	        20	rect.h	FUNCTION_2	IF_1
0x40000f3	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	rect.h	FUNCTION_2	IF_2
0x40000f7	          0x8b5008	                mov edx, dword [rax + 8]	        21	rect.h	FUNCTION_2	IF_2
0x40000fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        21	rect.h	FUNCTION_2	IF_2
0x40000fe	          0x8b4008	                mov eax, dword [rax + 8]	        21	rect.h	FUNCTION_2	IF_2
0x4000101	            0x39c2	                            cmp edx, eax	        21	rect.h	FUNCTION_2	IF_2
0x4000103	            0x7d0e	                           jge 0x4000113	        21	rect.h	FUNCTION_2	IF_2
0x4000105	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        21	rect.h	FUNCTION_2	IF_2
0x4000109	          0x8b5008	                mov edx, dword [rax + 8]	        21	rect.h	FUNCTION_2	IF_2
0x400010c	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	rect.h	FUNCTION_2	IF_2
0x4000110	          0x895008	                mov dword [rax + 8], edx	        21	rect.h	FUNCTION_2	IF_2
0x4000113	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	rect.h	FUNCTION_2	IF_3
0x4000117	          0x8b5004	                mov edx, dword [rax + 4]	        22	rect.h	FUNCTION_2	IF_3
0x400011a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        22	rect.h	FUNCTION_2	IF_3
0x400011e	          0x8b4004	                mov eax, dword [rax + 4]	        22	rect.h	FUNCTION_2	IF_3
0x4000121	            0x39c2	                            cmp edx, eax	        22	rect.h	FUNCTION_2	IF_3
0x4000123	            0x7e0e	                           jle 0x4000133	        22	rect.h	FUNCTION_2	IF_3
0x4000125	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        22	rect.h	FUNCTION_2	IF_3
0x4000129	          0x8b5004	                mov edx, dword [rax + 4]	        22	rect.h	FUNCTION_2	IF_3
0x400012c	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	rect.h	FUNCTION_2	IF_3
0x4000130	          0x895004	                mov dword [rax + 4], edx	        22	rect.h	FUNCTION_2	IF_3
0x4000133	        0x488b45f8	                mov rax, qword [rbp - 8]	        23	rect.h	FUNCTION_2	IF_4
0x4000137	          0x8b500c	              mov edx, dword [rax + 0xc]	        23	rect.h	FUNCTION_2	IF_4
0x400013a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        23	rect.h	FUNCTION_2	IF_4
0x400013e	          0x8b400c	              mov eax, dword [rax + 0xc]	        23	rect.h	FUNCTION_2	IF_4
0x4000141	            0x39c2	                            cmp edx, eax	        23	rect.h	FUNCTION_2	IF_4
0x4000143	            0x7e0e	                           jle 0x4000153	        23	rect.h	FUNCTION_2	IF_4
0x4000145	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        23	rect.h	FUNCTION_2	IF_4
0x4000149	          0x8b500c	              mov edx, dword [rax + 0xc]	        23	rect.h	FUNCTION_2	IF_4
0x400014c	        0x488b45f8	                mov rax, qword [rbp - 8]	        23	rect.h	FUNCTION_2	IF_4
0x4000150	          0x89500c	              mov dword [rax + 0xc], edx	        23	rect.h	FUNCTION_2	IF_4
0x4000153	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	rect.h	FUNCTION_2	IF_5
0x4000157	          0x8b5004	                mov edx, dword [rax + 4]	        25	rect.h	FUNCTION_2	IF_5
0x400015a	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	rect.h	FUNCTION_2	IF_5
0x400015e	            0x8b00	                    mov eax, dword [rax]	        25	rect.h	FUNCTION_2	IF_5
0x4000160	            0x39c2	                            cmp edx, eax	        25	rect.h	FUNCTION_2	IF_5
0x4000162	            0x7d0d	                           jge 0x4000171	        25	rect.h	FUNCTION_2	IF_5
0x4000164	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	rect.h	FUNCTION_2	IF_5
0x4000168	            0x8b10	                    mov edx, dword [rax]	        25	rect.h	FUNCTION_2	IF_5
0x400016a	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	rect.h	FUNCTION_2	IF_5
0x400016e	          0x895004	                mov dword [rax + 4], edx	        25	rect.h	FUNCTION_2	IF_5
0x4000171	        0x488b45f8	                mov rax, qword [rbp - 8]	        26	rect.h	FUNCTION_2	IF_6
0x4000175	          0x8b500c	              mov edx, dword [rax + 0xc]	        26	rect.h	FUNCTION_2	IF_6
0x4000178	        0x488b45f8	                mov rax, qword [rbp - 8]	        26	rect.h	FUNCTION_2	IF_6
0x400017c	          0x8b4008	                mov eax, dword [rax + 8]	        26	rect.h	FUNCTION_2	IF_6
0x400017f	            0x39c2	                            cmp edx, eax	        26	rect.h	FUNCTION_2	IF_6
0x4000181	            0x7d0e	                           jge 0x4000191	        26	rect.h	FUNCTION_2	IF_6
0x4000183	        0x488b45f8	                mov rax, qword [rbp - 8]	        26	rect.h	FUNCTION_2	IF_6
0x4000187	          0x8b5008	                mov edx, dword [rax + 8]	        26	rect.h	FUNCTION_2	IF_6
0x400018a	        0x488b45f8	                mov rax, qword [rbp - 8]	        26	rect.h	FUNCTION_2	IF_6
0x400018e	          0x89500c	              mov dword [rax + 0xc], edx	        26	rect.h	FUNCTION_2	IF_6
0x4000191	              0x90	                                     nop	        27	rect.h	FUNCTION_2
0x4000192	              0x5d	                                 pop rbp	        27	rect.h	FUNCTION_2
0x4000193	              0xc3	                                     ret	        27	rect.h	FUNCTION_2
rect_expand	DO,0:WHILE,0:IF,4:FOR,0:ELSE,0:functions,0:CALL,0:SWITCH,0	47
0x4000040	              0x55	                                push rbp	        10	rect.h	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        10	rect.h	FUNCTION_1
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	        10	rect.h	FUNCTION_1
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	        10	rect.h	FUNCTION_1
0x400004c	        0x488b45f8	                mov rax, qword [rbp - 8]	        11	rect.h	FUNCTION_1	IF_1
0x4000050	            0x8b10	                    mov edx, dword [rax]	        11	rect.h	FUNCTION_1	IF_1
0x4000052	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        11	rect.h	FUNCTION_1	IF_1
0x4000056	            0x8b00	                    mov eax, dword [rax]	        11	rect.h	FUNCTION_1	IF_1
0x4000058	            0x39c2	                            cmp edx, eax	        11	rect.h	FUNCTION_1	IF_1
0x400005a	            0x7e0c	                           jle 0x4000068	        11	rect.h	FUNCTION_1	IF_1
0x400005c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        11	rect.h	FUNCTION_1	IF_1
0x4000060	            0x8b10	                    mov edx, dword [rax]	        11	rect.h	FUNCTION_1	IF_1
0x4000062	        0x488b45f8	                mov rax, qword [rbp - 8]	        11	rect.h	FUNCTION_1	IF_1
0x4000066	            0x8910	                    mov dword [rax], edx	        11	rect.h	FUNCTION_1	IF_1
0x4000068	        0x488b45f8	                mov rax, qword [rbp - 8]	        12	rect.h	FUNCTION_1	IF_2
0x400006c	          0x8b5008	                mov edx, dword [rax + 8]	        12	rect.h	FUNCTION_1	IF_2
0x400006f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        12	rect.h	FUNCTION_1	IF_2
0x4000073	          0x8b4008	                mov eax, dword [rax + 8]	        12	rect.h	FUNCTION_1	IF_2
0x4000076	            0x39c2	                            cmp edx, eax	        12	rect.h	FUNCTION_1	IF_2
0x4000078	            0x7e0e	                           jle 0x4000088	        12	rect.h	FUNCTION_1	IF_2
0x400007a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        12	rect.h	FUNCTION_1	IF_2
0x400007e	          0x8b5008	                mov edx, dword [rax + 8]	        12	rect.h	FUNCTION_1	IF_2
0x4000081	        0x488b45f8	                mov rax, qword [rbp - 8]	        12	rect.h	FUNCTION_1	IF_2
0x4000085	          0x895008	                mov dword [rax + 8], edx	        12	rect.h	FUNCTION_1	IF_2
0x4000088	        0x488b45f8	                mov rax, qword [rbp - 8]	        13	rect.h	FUNCTION_1	IF_3
0x400008c	          0x8b5004	                mov edx, dword [rax + 4]	        13	rect.h	FUNCTION_1	IF_3
0x400008f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        13	rect.h	FUNCTION_1	IF_3
0x4000093	          0x8b4004	                mov eax, dword [rax + 4]	        13	rect.h	FUNCTION_1	IF_3
0x4000096	            0x39c2	                            cmp edx, eax	        13	rect.h	FUNCTION_1	IF_3
0x4000098	            0x7d0e	                           jge 0x40000a8	        13	rect.h	FUNCTION_1	IF_3
0x400009a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        13	rect.h	FUNCTION_1	IF_3
0x400009e	          0x8b5004	                mov edx, dword [rax + 4]	        13	rect.h	FUNCTION_1	IF_3
0x40000a1	        0x488b45f8	                mov rax, qword [rbp - 8]	        13	rect.h	FUNCTION_1	IF_3
0x40000a5	          0x895004	                mov dword [rax + 4], edx	        13	rect.h	FUNCTION_1	IF_3
0x40000a8	        0x488b45f8	                mov rax, qword [rbp - 8]	        14	rect.h	FUNCTION_1	IF_4
0x40000ac	          0x8b500c	              mov edx, dword [rax + 0xc]	        14	rect.h	FUNCTION_1	IF_4
0x40000af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        14	rect.h	FUNCTION_1	IF_4
0x40000b3	          0x8b400c	              mov eax, dword [rax + 0xc]	        14	rect.h	FUNCTION_1	IF_4
0x40000b6	            0x39c2	                            cmp edx, eax	        14	rect.h	FUNCTION_1	IF_4
0x40000b8	            0x7d0e	                           jge 0x40000c8	        14	rect.h	FUNCTION_1	IF_4
0x40000ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        14	rect.h	FUNCTION_1	IF_4
0x40000be	          0x8b500c	              mov edx, dword [rax + 0xc]	        14	rect.h	FUNCTION_1	IF_4
0x40000c1	        0x488b45f8	                mov rax, qword [rbp - 8]	        14	rect.h	FUNCTION_1	IF_4
0x40000c5	          0x89500c	              mov dword [rax + 0xc], edx	        14	rect.h	FUNCTION_1	IF_4
0x40000c8	              0x90	                                     nop	        15	rect.h	FUNCTION_1
0x40000c9	              0x5d	                                 pop rbp	        15	rect.h	FUNCTION_1
0x40000ca	              0xc3	                                     ret	        15	rect.h	FUNCTION_1
