max_topfill	ELSE,1:FOR,0:functions,0:WHILE,0:CALL,2:IF,2:DO,0:SWITCH,0	42
0x4002ab7	              0x55	                                push rbp	      1394	move.c	FUNCTION_36
0x4002ab8	          0x4889e5	                            mov rbp, rsp	      1394	move.c	FUNCTION_36
0x4002abb	              0x53	                                push rbx	      1394	move.c	FUNCTION_36
0x4002abc	        0x4883ec18	                           sub rsp, 0x18	      1394	move.c	FUNCTION_36
0x4002ac0	    0x488b05000000	            mov rax, qword [0x04002ac7] 	      1397	move.c	FUNCTION_36	CALL_1
0x4002ac7	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1397	move.c	FUNCTION_36	CALL_1
0x4002acb	          0x4889c7	                            mov rdi, rax	      1397	move.c	FUNCTION_36	CALL_1
0x4002ace	      0xe800000000	                          call 0x4002ad3	      1397	move.c	FUNCTION_36	CALL_1
0x4002ad3	          0x8945ec	             mov dword [rbp - 0x14], eax	      1397	move.c	FUNCTION_36	CALL_1
0x4002ad6	    0x488b05000000	            mov rax, qword [0x04002add] 	      1398	move.c	FUNCTION_36	IF_1
0x4002add	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1398	move.c	FUNCTION_36	IF_1
0x4002ae3	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1398	move.c	FUNCTION_36	IF_1
0x4002ae6	            0x7f13	                            jg 0x4002afb	      1398	move.c	FUNCTION_36	IF_1
0x4002ae8	    0x488b05000000	            mov rax, qword [0x04002aef] 	      1399	move.c	FUNCTION_36	IF_1
0x4002aef	    0xc78084000000	               mov dword [rax + 0x84], 0	      1399	move.c	FUNCTION_36	IF_1
0x4002af9	            0xeb6a	                           jmp 0x4002b65	      1406	move.c	FUNCTION_36
0x4002afb	    0x488b1d000000	            mov rbx, qword [0x04002b02] 	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4002b02	    0x488b05000000	            mov rax, qword [0x04002b09] 	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4002b09	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4002b0d	    0x488b05000000	            mov rax, qword [0x04002b14] 	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4002b14	          0x4889d6	                            mov rsi, rdx	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4002b17	          0x4889c7	                            mov rdi, rax	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4002b1a	      0xe800000000	                          call 0x4002b1f	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4002b1f	    0x898384000000	             mov dword [rbx + 0x84], eax	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4002b25	    0x488b05000000	            mov rax, qword [0x04002b2c] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b2c	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b32	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b35	             0x1c2	                            add edx, eax	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b37	    0x488b05000000	            mov rax, qword [0x04002b3e] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b3e	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b44	            0x39c2	                            cmp edx, eax	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b46	            0x7e1d	                           jle 0x4002b65	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b48	    0x488b05000000	            mov rax, qword [0x04002b4f] 	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b4f	    0x488b15000000	            mov rdx, qword [0x04002b56] 	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b56	    0x8b92a0000000	            mov edx, dword [rdx + 0xa0] 	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b5c	          0x2b55ec	             sub edx, dword [rbp - 0x14]	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b5f	    0x899084000000	             mov dword [rax + 0x84], edx	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4002b65	              0x90	                                     nop	      1406	move.c	FUNCTION_36
0x4002b66	        0x4883c418	                           add rsp, 0x18	      1406	move.c	FUNCTION_36
0x4002b6a	              0x5b	                                 pop rbx	      1406	move.c	FUNCTION_36
0x4002b6b	              0x5d	                                 pop rbp	      1406	move.c	FUNCTION_36
0x4002b6c	              0xc3	                                     ret	      1406	move.c	FUNCTION_36
validate_cursor_col	ELSE,1:FOR,0:functions,0:WHILE,0:CALL,3:IF,3:DO,0:SWITCH,0	66
0x400166a	              0x55	                                push rbp	       841	move.c	FUNCTION_27
0x400166b	          0x4889e5	                            mov rbp, rsp	       841	move.c	FUNCTION_27
0x400166e	              0x53	                                push rbx	       841	move.c	FUNCTION_27
0x400166f	        0x4883ec18	                           sub rsp, 0x18	       841	move.c	FUNCTION_27
0x4001673	      0xe800000000	                          call 0x4001678	       846	move.c	FUNCTION_27	CALL_1
0x4001678	    0x488b05000000	            mov rax, qword [0x0400167f] 	       847	move.c	FUNCTION_27	IF_1
0x400167f	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       847	move.c	FUNCTION_27	IF_1
0x4001685	          0x83e002	                              and eax, 2	       847	move.c	FUNCTION_27	IF_1
0x4001688	            0x85c0	                           test eax, eax	       847	move.c	FUNCTION_27	IF_1
0x400168a	     0xf85dd000000	                           jne 0x400176d	       847	move.c	FUNCTION_27	IF_1
0x4001690	    0x488b05000000	            mov rax, qword [0x04001697] 	       849	move.c	FUNCTION_27	IF_1
0x4001697	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	       849	move.c	FUNCTION_27	IF_1
0x400169d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       849	move.c	FUNCTION_27	IF_1
0x40016a0	      0xe800000000	                          call 0x40016a5	       850	move.c	FUNCTION_27	IF_1	CALL_2
0x40016a5	          0x8945e8	             mov dword [rbp - 0x18], eax	       850	move.c	FUNCTION_27	IF_1	CALL_2
0x40016a8	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       851	move.c	FUNCTION_27	IF_1
0x40016ab	           0x145e4	             add dword [rbp - 0x1c], eax	       851	move.c	FUNCTION_27	IF_1
0x40016ae	    0x488b05000000	            mov rax, qword [0x040016b5] 	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x40016b5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x40016bb	          0x2b45e8	             sub eax, dword [rbp - 0x18]	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x40016be	            0x89c3	                            mov ebx, eax	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x40016c0	      0xe800000000	                          call 0x40016c5	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x40016c5	             0x1d8	                            add eax, ebx	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x40016c7	          0x8945ec	             mov dword [rbp - 0x14], eax	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x40016ca	    0x488b05000000	            mov rax, qword [0x040016d1] 	       855	move.c	FUNCTION_27	IF_1	IF_2
0x40016d1	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	       855	move.c	FUNCTION_27	IF_1	IF_2
0x40016d7	            0x85c0	                           test eax, eax	       855	move.c	FUNCTION_27	IF_1	IF_2
0x40016d9	            0x743a	                            je 0x4001715	       855	move.c	FUNCTION_27	IF_1	IF_2
0x40016db	    0x488b05000000	            mov rax, qword [0x040016e2] 	       856	move.c	FUNCTION_27	IF_1	IF_2
0x40016e2	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       856	move.c	FUNCTION_27	IF_1	IF_2
0x40016e8	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       856	move.c	FUNCTION_27	IF_1	IF_2
0x40016eb	            0x7f28	                            jg 0x4001715	       856	move.c	FUNCTION_27	IF_1	IF_2
0x40016ed	        0x837dec00	               cmp dword [rbp - 0x14], 0	       857	move.c	FUNCTION_27	IF_1	IF_2
0x40016f1	            0x7e22	                           jle 0x4001715	       857	move.c	FUNCTION_27	IF_1	IF_2
0x40016f3	    0x488b05000000	            mov rax, qword [0x040016fa] 	       859	move.c	FUNCTION_27	IF_1	IF_2
0x40016fa	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4001700	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4001703	            0x29c2	                            sub edx, eax	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4001705	            0x89d0	                            mov eax, edx	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4001707	              0x99	                                     cdq	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4001708	          0xf77dec	                 idiv dword [rbp - 0x14]	       859	move.c	FUNCTION_27	IF_1	IF_2
0x400170b	          0x83c001	                              add eax, 1	       859	move.c	FUNCTION_27	IF_1	IF_2
0x400170e	         0xfaf45ec	            imul eax, dword [rbp - 0x14]	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4001712	          0x2945e4	             sub dword [rbp - 0x1c], eax	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4001715	    0x488b05000000	            mov rax, qword [0x0400171c] 	       860	move.c	FUNCTION_27	IF_1	IF_3
0x400171c	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       860	move.c	FUNCTION_27	IF_1	IF_3
0x4001722	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       860	move.c	FUNCTION_27	IF_1	IF_3
0x4001725	            0x7d12	                           jge 0x4001739	       860	move.c	FUNCTION_27	IF_1	IF_3
0x4001727	    0x488b05000000	            mov rax, qword [0x0400172e] 	       861	move.c	FUNCTION_27	IF_1	IF_3
0x400172e	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4001734	          0x2945e4	             sub dword [rbp - 0x1c], eax	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4001737	            0xeb07	                           jmp 0x4001740	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4001739	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       863	move.c	FUNCTION_27	IF_1	ELSE_1
0x4001740	    0x488b05000000	            mov rax, qword [0x04001747] 	       864	move.c	FUNCTION_27	IF_1	ELSE_1
0x4001747	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       864	move.c	FUNCTION_27	IF_1	ELSE_1
0x400174a	    0x8990e0000000	             mov dword [rax + 0xe0], edx	       864	move.c	FUNCTION_27	IF_1	ELSE_1
0x4001750	    0x488b05000000	            mov rax, qword [0x04001757] 	       866	move.c	FUNCTION_27	IF_1	ELSE_1
0x4001757	    0x488b15000000	            mov rdx, qword [0x0400175e] 	       866	move.c	FUNCTION_27	IF_1	ELSE_1
0x400175e	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       866	move.c	FUNCTION_27	IF_1	ELSE_1
0x4001764	          0x83ca02	                               or edx, 2	       866	move.c	FUNCTION_27	IF_1	ELSE_1
0x4001767	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       866	move.c	FUNCTION_27	IF_1	ELSE_1
0x400176d	              0x90	                                     nop	       868	move.c	FUNCTION_27	ELSE_1
0x400176e	        0x4883c418	                           add rsp, 0x18	       868	move.c	FUNCTION_27	ELSE_1
0x4001772	              0x5b	                                 pop rbx	       868	move.c	FUNCTION_27	ELSE_1
0x4001773	              0x5d	                                 pop rbp	       868	move.c	FUNCTION_27	ELSE_1
0x4001774	              0xc3	                                     ret	       868	move.c	FUNCTION_27	ELSE_1
win_col_off2	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,2:IF,1:DO,0:SWITCH,0	26
0x4001823	              0x55	                                push rbp	       903	move.c	FUNCTION_30
0x4001824	          0x4889e5	                            mov rbp, rsp	       903	move.c	FUNCTION_30
0x4001827	        0x4883ec10	                           sub rsp, 0x10	       903	move.c	FUNCTION_30
0x400182b	        0x48897df8	                mov qword [rbp - 8], rdi	       903	move.c	FUNCTION_30
0x400182f	        0x488b45f8	                mov rax, qword [rbp - 8]	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001833	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001839	            0x85c0	                           test eax, eax	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x400183b	            0x750e	                           jne 0x400184b	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x400183d	        0x488b45f8	                mov rax, qword [rbp - 8]	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001841	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001847	            0x85c0	                           test eax, eax	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001849	            0x742a	                            je 0x4001875	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x400184b	    0x488b05000000	            mov rax, qword [0x04001852] 	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001852	      0xbe6e000000	                           mov esi, 0x6e	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001857	          0x4889c7	                            mov rdi, rax	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x400185a	      0xe800000000	                          call 0x400185f	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x400185f	          0x4885c0	                           test rax, rax	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001862	            0x7411	                            je 0x4001875	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001864	        0x488b45f8	                mov rax, qword [rbp - 8]	       905	move.c	FUNCTION_30	CALL_2
0x4001868	          0x4889c7	                            mov rdi, rax	       905	move.c	FUNCTION_30	CALL_2
0x400186b	      0xe800000000	                          call 0x4001870	       905	move.c	FUNCTION_30	CALL_2
0x4001870	          0x83c001	                              add eax, 1	       905	move.c	FUNCTION_30	CALL_2
0x4001873	            0xeb05	                           jmp 0x400187a	       905	move.c	FUNCTION_30	CALL_2
0x4001875	      0xb800000000	                              mov eax, 0	       906	move.c	FUNCTION_30
0x400187a	              0xc9	                                   leave	       907	move.c	FUNCTION_30
0x400187b	              0xc3	                                     ret	       907	move.c	FUNCTION_30
redraw_for_cursorline	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,2:IF,1:DO,0:SWITCH,0	27
0x4000249	              0x55	                                push rbp	       132	move.c	FUNCTION_2
0x400024a	          0x4889e5	                            mov rbp, rsp	       132	move.c	FUNCTION_2
0x400024d	        0x4883ec10	                           sub rsp, 0x10	       132	move.c	FUNCTION_2
0x4000251	        0x48897df8	                mov qword [rbp - 8], rdi	       132	move.c	FUNCTION_2
0x4000255	        0x488b45f8	                mov rax, qword [rbp - 8]	       133	move.c	FUNCTION_2	IF_1
0x4000259	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	       133	move.c	FUNCTION_2	IF_1
0x400025f	            0x85c0	                           test eax, eax	       133	move.c	FUNCTION_2	IF_1
0x4000261	            0x750e	                           jne 0x4000271	       133	move.c	FUNCTION_2	IF_1
0x4000263	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	move.c	FUNCTION_2	IF_1
0x4000267	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	       135	move.c	FUNCTION_2	IF_1
0x400026d	            0x85c0	                           test eax, eax	       135	move.c	FUNCTION_2	IF_1
0x400026f	            0x742b	                            je 0x400029c	       135	move.c	FUNCTION_2	IF_1
0x4000271	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	move.c	FUNCTION_2	IF_1
0x4000275	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       138	move.c	FUNCTION_2	IF_1
0x400027b	          0x83e010	                           and eax, 0x10	       138	move.c	FUNCTION_2	IF_1
0x400027e	            0x85c0	                           test eax, eax	       138	move.c	FUNCTION_2	IF_1
0x4000280	            0x751a	                           jne 0x400029c	       138	move.c	FUNCTION_2	IF_1
0x4000282	      0xe800000000	                          call 0x4000287	       140	move.c	FUNCTION_2	IF_1	CALL_1
0x4000287	            0x85c0	                           test eax, eax	       140	move.c	FUNCTION_2	IF_1	CALL_1
0x4000289	            0x7511	                           jne 0x400029c	       140	move.c	FUNCTION_2	IF_1	CALL_1
0x400028b	        0x488b45f8	                mov rax, qword [rbp - 8]	       143	move.c	FUNCTION_2	CALL_2
0x400028f	      0xbe23000000	                           mov esi, 0x23	       143	move.c	FUNCTION_2	CALL_2
0x4000294	          0x4889c7	                            mov rdi, rax	       143	move.c	FUNCTION_2	CALL_2
0x4000297	      0xe800000000	                          call 0x400029c	       143	move.c	FUNCTION_2	CALL_2
0x400029c	              0x90	                                     nop	       144	move.c	FUNCTION_2
0x400029d	              0xc9	                                   leave	       144	move.c	FUNCTION_2
0x400029e	              0xc3	                                     ret	       144	move.c	FUNCTION_2
cursor_valid	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,1:IF,0:DO,0:SWITCH,0	13
0x4000e66	              0x55	                                push rbp	       621	move.c	FUNCTION_20
0x4000e67	          0x4889e5	                            mov rbp, rsp	       621	move.c	FUNCTION_20
0x4000e6a	    0x488b05000000	            mov rax, qword [0x04000e71] 	       622	move.c	FUNCTION_20	CALL_1
0x4000e71	          0x4889c7	                            mov rdi, rax	       622	move.c	FUNCTION_20	CALL_1
0x4000e74	      0xe800000000	                          call 0x4000e79	       622	move.c	FUNCTION_20	CALL_1
0x4000e79	    0x488b05000000	            mov rax, qword [0x04000e80] 	       623	move.c	FUNCTION_20
0x4000e80	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       623	move.c	FUNCTION_20
0x4000e86	          0x83e003	                              and eax, 3	       623	move.c	FUNCTION_20
0x4000e89	          0x83f803	                              cmp eax, 3	       623	move.c	FUNCTION_20
0x4000e8c	           0xf94c0	                                 sete al	       623	move.c	FUNCTION_20
0x4000e8f	           0xfb6c0	                           movzx eax, al	       623	move.c	FUNCTION_20
0x4000e92	              0x5d	                                 pop rbp	       625	move.c	FUNCTION_20
0x4000e93	              0xc3	                                     ret	       625	move.c	FUNCTION_20
set_empty_rows	ELSE,2:FOR,0:functions,0:WHILE,0:CALL,1:IF,3:DO,0:SWITCH,0	57
0x40034f8	              0x55	                                push rbp	      1781	move.c	FUNCTION_44
0x40034f9	          0x4889e5	                            mov rbp, rsp	      1781	move.c	FUNCTION_44
0x40034fc	        0x4883ec10	                           sub rsp, 0x10	      1781	move.c	FUNCTION_44
0x4003500	        0x48897df8	                mov qword [rbp - 8], rdi	      1781	move.c	FUNCTION_44
0x4003504	          0x8975f4	              mov dword [rbp - 0xc], esi	      1781	move.c	FUNCTION_44
0x4003507	        0x488b45f8	                mov rax, qword [rbp - 8]	      1783	move.c	FUNCTION_44
0x400350b	    0xc780f4000000	               mov dword [rax + 0xf4], 0	      1783	move.c	FUNCTION_44
0x4003515	        0x837df400	                cmp dword [rbp - 0xc], 0	      1785	move.c	FUNCTION_44	IF_1
0x4003519	            0x7513	                           jne 0x400352e	      1785	move.c	FUNCTION_44	IF_1
0x400351b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1786	move.c	FUNCTION_44	IF_1
0x400351f	    0xc780f0000000	               mov dword [rax + 0xf0], 0	      1786	move.c	FUNCTION_44	IF_1
0x4003529	      0xe9ba000000	                           jmp 0x40035e8	      1804	move.c	FUNCTION_44
0x400352e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1789	move.c	FUNCTION_44	ELSE_1
0x4003532	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1789	move.c	FUNCTION_44	ELSE_1
0x4003538	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      1789	move.c	FUNCTION_44	ELSE_1
0x400353b	            0x89c2	                            mov edx, eax	      1789	move.c	FUNCTION_44	ELSE_1
0x400353d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1789	move.c	FUNCTION_44	ELSE_1
0x4003541	    0x8990f0000000	             mov dword [rax + 0xf0], edx	      1789	move.c	FUNCTION_44	ELSE_1
0x4003547	        0x488b45f8	                mov rax, qword [rbp - 8]	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x400354b	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4003552	        0x488b45f8	                mov rax, qword [rbp - 8]	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4003556	        0x488b4008	                mov rax, qword [rax + 8]	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x400355a	          0x488b00	                    mov rax, qword [rax]	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x400355d	          0x4839c2	                            cmp rdx, rax	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4003560	     0xf8f82000000	                            jg 0x40035e8	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4003566	        0x488b45f8	                mov rax, qword [rbp - 8]	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x400356a	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4003571	        0x488b45f8	                mov rax, qword [rbp - 8]	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4003575	          0x4889d6	                            mov rsi, rdx	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4003578	          0x4889c7	                            mov rdi, rax	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x400357b	      0xe800000000	                          call 0x4003580	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4003580	            0x89c2	                            mov edx, eax	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4003582	        0x488b45f8	                mov rax, qword [rbp - 8]	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4003586	    0x8990f4000000	             mov dword [rax + 0xf4], edx	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x400358c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x4003590	    0x8b90f0000000	            mov edx, dword [rax + 0xf0] 	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x4003596	        0x488b45f8	                mov rax, qword [rbp - 8]	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x400359a	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40035a0	            0x39c2	                            cmp edx, eax	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40035a2	            0x7e22	                           jle 0x40035c6	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40035a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40035a8	    0x8b90f0000000	            mov edx, dword [rax + 0xf0] 	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40035ae	        0x488b45f8	                mov rax, qword [rbp - 8]	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40035b2	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40035b8	            0x29c2	                            sub edx, eax	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40035ba	        0x488b45f8	                mov rax, qword [rbp - 8]	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40035be	    0x8990f0000000	             mov dword [rax + 0xf0], edx	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40035c4	            0xeb22	                           jmp 0x40035e8	      1804	move.c	FUNCTION_44
0x40035c6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x40035ca	    0x8b90f0000000	            mov edx, dword [rax + 0xf0] 	      1798	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x40035d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x40035d4	    0x8990f4000000	             mov dword [rax + 0xf4], edx	      1798	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x40035da	        0x488b45f8	                mov rax, qword [rbp - 8]	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x40035de	    0xc780f0000000	               mov dword [rax + 0xf0], 0	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x40035e8	              0x90	                                     nop	      1804	move.c	FUNCTION_44
0x40035e9	              0xc9	                                   leave	      1804	move.c	FUNCTION_44
0x40035ea	              0xc3	                                     ret	      1804	move.c	FUNCTION_44
do_check_cursorbind	ELSE,0:FOR,0:functions,1:WHILE,0:CALL,0:IF,0:DO,0:SWITCH,0	117
0x40051c0	              0x55	                                push rbp	      2774	move.c	FUNCTION_51
0x40051c1	          0x4889e5	                            mov rbp, rsp	      2774	move.c	FUNCTION_51
0x40051c4	              0x53	                                push rbx	      2774	move.c	FUNCTION_51
0x40051c5	        0x4883ec48	                           sub rsp, 0x48	      2774	move.c	FUNCTION_51
0x40051c9	    0x488b05000000	            mov rax, qword [0x040051d0] 	      2775	move.c	FUNCTION_51
0x40051d0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2775	move.c	FUNCTION_51
0x40051d4	        0x488945d8	             mov qword [rbp - 0x28], rax	      2775	move.c	FUNCTION_51
0x40051d8	    0x488b05000000	            mov rax, qword [0x040051df] 	      2776	move.c	FUNCTION_51
0x40051df	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2776	move.c	FUNCTION_51
0x40051e2	          0x8945bc	             mov dword [rbp - 0x44], eax	      2776	move.c	FUNCTION_51
0x40051e5	    0x488b05000000	            mov rax, qword [0x040051ec] 	      2778	move.c	FUNCTION_51
0x40051ec	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2778	move.c	FUNCTION_51
0x40051ef	          0x8945c0	             mov dword [rbp - 0x40], eax	      2778	move.c	FUNCTION_51
0x40051f2	    0x488b05000000	            mov rax, qword [0x040051f9] 	      2780	move.c	FUNCTION_51
0x40051f9	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2780	move.c	FUNCTION_51
0x40051fc	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2780	move.c	FUNCTION_51
0x40051ff	    0x488b05000000	            mov rax, qword [0x04005206] 	      2781	move.c	FUNCTION_51
0x4005206	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      2781	move.c	FUNCTION_51
0x4005209	          0x8945c8	             mov dword [rbp - 0x38], eax	      2781	move.c	FUNCTION_51
0x400520c	    0x488b05000000	            mov rax, qword [0x04005213] 	      2782	move.c	FUNCTION_51
0x4005213	        0x488945e0	             mov qword [rbp - 0x20], rax	      2782	move.c	FUNCTION_51
0x4005217	    0x488b05000000	            mov rax, qword [0x0400521e] 	      2783	move.c	FUNCTION_51
0x400521e	        0x488945e8	             mov qword [rbp - 0x18], rax	      2783	move.c	FUNCTION_51
0x4005222	    0x8b0500000000	            mov eax, dword [0x04005228] 	      2785	move.c	FUNCTION_51
0x4005228	          0x8945cc	             mov dword [rbp - 0x34], eax	      2785	move.c	FUNCTION_51
0x400522b	    0x8b0500000000	            mov eax, dword [0x04005231] 	      2786	move.c	FUNCTION_51
0x4005231	          0x8945d0	             mov dword [rbp - 0x30], eax	      2786	move.c	FUNCTION_51
0x4005234	    0xc70500000000	               mov dword [0x0400523e], 0	      2791	move.c	FUNCTION_51
0x400523e	    0x8b0500000000	            mov eax, dword [0x04005244] 	      2791	move.c	FUNCTION_51
0x4005244	    0x890500000000	            mov dword [0x0400524a], eax 	      2791	move.c	FUNCTION_51
0x400524a	    0x488b05000000	            mov rax, qword [0x04005251] 	      2792	move.c	FUNCTION_51
0x4005251	    0x488905000000	            mov qword [0x04005258], rax 	      2792	move.c	FUNCTION_51
0x4005258	      0xe946010000	                           jmp 0x40053a3	      2792	move.c	FUNCTION_51
0x400525d	    0x488b05000000	            mov rax, qword [0x04005264] 	      2794	move.c	FUNCTION_51	FUNCTION_1
0x4005264	        0x488b4008	                mov rax, qword [rax + 8]	      2794	move.c	FUNCTION_51	FUNCTION_1
0x4005268	    0x488905000000	            mov qword [0x0400526f], rax 	      2794	move.c	FUNCTION_51	FUNCTION_1
0x400526f	    0x488b05000000	            mov rax, qword [0x04005276] 	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4005276	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x400527a	     0xf8411010000	                            je 0x4005391	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4005280	    0x488b05000000	            mov rax, qword [0x04005287] 	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4005287	    0x8b80b0020000	           mov eax, dword [rax + 0x2b0] 	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x400528d	            0x85c0	                           test eax, eax	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x400528f	     0xf84fc000000	                            je 0x4005391	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4005295	    0x488b05000000	            mov rax, qword [0x0400529c] 	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x400529c	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40052a2	            0x85c0	                           test eax, eax	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40052a4	            0x7420	                            je 0x40052c6	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40052a6	    0x488b1d000000	            mov rbx, qword [0x040052ad] 	      2800	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40052ad	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x40052b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x40052b5	          0x4889d6	                            mov rsi, rdx	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x40052b8	          0x4889c7	                            mov rdi, rax	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x40052bb	      0xe800000000	                          call 0x40052c0	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x40052c0	        0x48894338	             mov qword [rbx + 0x38], rax	      2800	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40052c4	            0xeb0f	                           jmp 0x40052d5	      2800	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40052c6	    0x488b05000000	            mov rax, qword [0x040052cd] 	      2804	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x40052cd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2804	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x40052d1	        0x48895038	             mov qword [rax + 0x38], rdx	      2804	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x40052d5	    0x488b05000000	            mov rax, qword [0x040052dc] 	      2805	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40052dc	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2805	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40052df	          0x895040	             mov dword [rax + 0x40], edx	      2805	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40052e2	    0x488b05000000	            mov rax, qword [0x040052e9] 	      2807	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40052e9	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      2807	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40052ec	          0x895044	             mov dword [rax + 0x44], edx	      2807	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40052ef	    0x488b05000000	            mov rax, qword [0x040052f6] 	      2809	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40052f6	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2809	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40052f9	          0x895048	             mov dword [rax + 0x48], edx	      2809	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40052fc	    0x488b05000000	            mov rax, qword [0x04005303] 	      2810	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4005303	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2810	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4005306	          0x89504c	             mov dword [rax + 0x4c], edx	      2810	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4005309	    0x8b0500000000	            mov eax, dword [0x0400530f] 	      2814	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x400530f	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2814	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4005312	    0xc70500000000	               mov dword [0x0400531c], 1	      2815	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x400531c	      0xe800000000	                          call 0x4005321	      2816	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_2
0x4005321	    0x488b05000000	            mov rax, qword [0x04005328] 	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4005328	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x400532e	            0x85c0	                           test eax, eax	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4005330	            0x7511	                           jne 0x4005343	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4005332	    0x488b05000000	            mov rax, qword [0x04005339] 	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4005339	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x400533f	            0x85c0	                           test eax, eax	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4005341	            0x7405	                            je 0x4005348	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4005343	      0xe800000000	                          call 0x4005348	      2819	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_3
0x4005348	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2821	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x400534b	    0x890500000000	            mov dword [0x04005351], eax 	      2821	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4005351	    0x8b0500000000	            mov eax, dword [0x04005357] 	      2824	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x4005357	            0x85c0	                           test eax, eax	      2824	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x4005359	            0x7405	                            je 0x4005360	      2824	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x400535b	      0xe800000000	                          call 0x4005360	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_4
0x4005360	      0xbf0a000000	                            mov edi, 0xa	      2827	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_5
0x4005365	      0xe800000000	                          call 0x400536a	      2827	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_5
0x400536a	    0x488b05000000	            mov rax, qword [0x04005371] 	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x4005371	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x4005377	            0x85c0	                           test eax, eax	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x4005379	            0x7505	                           jne 0x4005380	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x400537b	      0xe800000000	                          call 0x4005380	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_6
0x4005380	    0x488b05000000	            mov rax, qword [0x04005387] 	      2832	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4005387	    0xc78040010000	              mov dword [rax + 0x140], 1	      2832	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4005391	    0x488b05000000	            mov rax, qword [0x04005398] 	      2792	move.c	FUNCTION_51
0x4005398	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2792	move.c	FUNCTION_51
0x400539c	    0x488905000000	            mov qword [0x040053a3], rax 	      2792	move.c	FUNCTION_51
0x40053a3	    0x488b05000000	            mov rax, qword [0x040053aa] 	      2792	move.c	FUNCTION_51
0x40053aa	          0x4885c0	                           test rax, rax	      2792	move.c	FUNCTION_51
0x40053ad	     0xf85aafeffff	                           jne 0x400525d	      2792	move.c	FUNCTION_51
0x40053b3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2839	move.c	FUNCTION_51
0x40053b6	    0x890500000000	            mov dword [0x040053bc], eax 	      2839	move.c	FUNCTION_51
0x40053bc	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2840	move.c	FUNCTION_51
0x40053bf	    0x890500000000	            mov dword [0x040053c5], eax 	      2840	move.c	FUNCTION_51
0x40053c5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2841	move.c	FUNCTION_51
0x40053c9	    0x488905000000	            mov qword [0x040053d0], rax 	      2841	move.c	FUNCTION_51
0x40053d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2842	move.c	FUNCTION_51
0x40053d4	    0x488905000000	            mov qword [0x040053db], rax 	      2842	move.c	FUNCTION_51
0x40053db	              0x90	                                     nop	      2843	move.c	FUNCTION_51
0x40053dc	        0x4883c448	                           add rsp, 0x48	      2843	move.c	FUNCTION_51
0x40053e0	              0x5b	                                 pop rbx	      2843	move.c	FUNCTION_51
0x40053e1	              0x5d	                                 pop rbp	      2843	move.c	FUNCTION_51
0x40053e2	              0xc3	                                     ret	      2843	move.c	FUNCTION_51
validate_cheight	ELSE,1:FOR,0:functions,0:WHILE,0:CALL,4:IF,2:DO,0:SWITCH,0	53
0x400157d	              0x55	                                push rbp	       818	move.c	FUNCTION_26
0x400157e	          0x4889e5	                            mov rbp, rsp	       818	move.c	FUNCTION_26
0x4001581	              0x53	                                push rbx	       818	move.c	FUNCTION_26
0x4001582	        0x4883ec08	                              sub rsp, 8	       818	move.c	FUNCTION_26
0x4001586	    0x488b05000000	            mov rax, qword [0x0400158d] 	       819	move.c	FUNCTION_26	CALL_1
0x400158d	          0x4889c7	                            mov rdi, rax	       819	move.c	FUNCTION_26	CALL_1
0x4001590	      0xe800000000	                          call 0x4001595	       819	move.c	FUNCTION_26	CALL_1
0x4001595	    0x488b05000000	            mov rax, qword [0x0400159c] 	       820	move.c	FUNCTION_26	IF_1
0x400159c	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       820	move.c	FUNCTION_26	IF_1
0x40015a2	          0x83e008	                              and eax, 8	       820	move.c	FUNCTION_26	IF_1
0x40015a5	            0x85c0	                           test eax, eax	       820	move.c	FUNCTION_26	IF_1
0x40015a7	     0xf85b5000000	                           jne 0x4001662	       820	move.c	FUNCTION_26	IF_1
0x40015ad	    0x488b05000000	            mov rax, qword [0x040015b4] 	       823	move.c	FUNCTION_26	IF_1	IF_2
0x40015b4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       823	move.c	FUNCTION_26	IF_1	IF_2
0x40015b8	    0x488b05000000	            mov rax, qword [0x040015bf] 	       823	move.c	FUNCTION_26	IF_1	IF_2
0x40015bf	        0x488b4078	            mov rax, qword [rax + 0x78] 	       823	move.c	FUNCTION_26	IF_1	IF_2
0x40015c3	          0x4839c2	                            cmp rdx, rax	       823	move.c	FUNCTION_26	IF_1	IF_2
0x40015c6	            0x7533	                           jne 0x40015fb	       823	move.c	FUNCTION_26	IF_1	IF_2
0x40015c8	    0x488b1d000000	            mov rbx, qword [0x040015cf] 	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40015cf	    0x488b05000000	            mov rax, qword [0x040015d6] 	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40015d6	        0x488b4038	            mov rax, qword [rax + 0x38] 	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40015da	          0x4889c7	                            mov rdi, rax	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40015dd	      0xe800000000	                          call 0x40015e2	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40015e2	            0x89c2	                            mov edx, eax	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40015e4	    0x488b05000000	            mov rax, qword [0x040015eb] 	       825	move.c	FUNCTION_26	IF_1	IF_2
0x40015eb	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       825	move.c	FUNCTION_26	IF_1	IF_2
0x40015f1	             0x1d0	                            add eax, edx	       825	move.c	FUNCTION_26	IF_1	IF_2
0x40015f3	    0x8983cc000000	             mov dword [rbx + 0xcc], eax	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40015f9	            0xeb20	                           jmp 0x400161b	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40015fb	    0x488b1d000000	            mov rbx, qword [0x04001602] 	       828	move.c	FUNCTION_26	IF_1	CALL_3
0x4001602	    0x488b05000000	            mov rax, qword [0x04001609] 	       828	move.c	FUNCTION_26	IF_1	CALL_3
0x4001609	        0x488b4038	            mov rax, qword [rax + 0x38] 	       828	move.c	FUNCTION_26	IF_1	CALL_3
0x400160d	          0x4889c7	                            mov rdi, rax	       828	move.c	FUNCTION_26	IF_1	CALL_3
0x4001610	      0xe800000000	                          call 0x4001615	       828	move.c	FUNCTION_26	IF_1	CALL_3
0x4001615	    0x8983cc000000	             mov dword [rbx + 0xcc], eax	       828	move.c	FUNCTION_26	IF_1	CALL_3
0x400161b	    0x488b1d000000	            mov rbx, qword [0x04001622] 	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x4001622	    0x488b05000000	            mov rax, qword [0x04001629] 	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x4001629	        0x488b4038	            mov rax, qword [rax + 0x38] 	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x400162d	      0xba00000000	                              mov edx, 0	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x4001632	      0xbe00000000	                              mov esi, 0	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x4001637	          0x4889c7	                            mov rdi, rax	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x400163a	      0xe800000000	                          call 0x400163f	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x400163f	    0x8983d0000000	             mov dword [rbx + 0xd0], eax	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x4001645	    0x488b05000000	            mov rax, qword [0x0400164c] 	       832	move.c	FUNCTION_26	IF_1
0x400164c	    0x488b15000000	            mov rdx, qword [0x04001653] 	       832	move.c	FUNCTION_26	IF_1
0x4001653	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       832	move.c	FUNCTION_26	IF_1
0x4001659	          0x83ca08	                               or edx, 8	       832	move.c	FUNCTION_26	IF_1
0x400165c	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       832	move.c	FUNCTION_26	IF_1
0x4001662	              0x90	                                     nop	       834	move.c	FUNCTION_26
0x4001663	        0x4883c408	                              add rsp, 8	       834	move.c	FUNCTION_26
0x4001667	              0x5b	                                 pop rbx	       834	move.c	FUNCTION_26
0x4001668	              0x5d	                                 pop rbp	       834	move.c	FUNCTION_26
0x4001669	              0xc3	                                     ret	       834	move.c	FUNCTION_26
changed_line_abv_curs_win	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,0:IF,0:DO,0:SWITCH,0	12
0x4000dad	              0x55	                                push rbp	       579	move.c	FUNCTION_15
0x4000dae	          0x4889e5	                            mov rbp, rsp	       579	move.c	FUNCTION_15
0x4000db1	        0x48897df8	                mov qword [rbp - 8], rdi	       579	move.c	FUNCTION_15
0x4000db5	        0x488b45f8	                mov rax, qword [rbp - 8]	       580	move.c	FUNCTION_15
0x4000db9	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       580	move.c	FUNCTION_15
0x4000dbf	            0x2460	                            and al, 0x60	       580	move.c	FUNCTION_15
0x4000dc1	            0x89c2	                            mov edx, eax	       580	move.c	FUNCTION_15
0x4000dc3	        0x488b45f8	                mov rax, qword [rbp - 8]	       580	move.c	FUNCTION_15
0x4000dc7	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       580	move.c	FUNCTION_15
0x4000dcd	              0x90	                                     nop	       582	move.c	FUNCTION_15
0x4000dce	              0x5d	                                 pop rbp	       582	move.c	FUNCTION_15
0x4000dcf	              0xc3	                                     ret	       582	move.c	FUNCTION_15
scroll_cursor_bot	ELSE,5:FOR,2:functions,0:WHILE,1:CALL,12:IF,21:DO,0:SWITCH,0	366
0x40035eb	              0x55	                                push rbp	      1814	move.c	FUNCTION_45
0x40035ec	          0x4889e5	                            mov rbp, rsp	      1814	move.c	FUNCTION_45
0x40035ef	    0x4881ec900000	                           sub rsp, 0x90	      1814	move.c	FUNCTION_45
0x40035f6	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	      1814	move.c	FUNCTION_45
0x40035fc	    0x89b578ffffff	             mov dword [rbp - 0x88], esi	      1814	move.c	FUNCTION_45
0x4003602	    0x64488b042528	                mov rax, qword fs:[0x28]	      1814	move.c	FUNCTION_45
0x400360b	        0x488945f8	                mov qword [rbp - 8], rax	      1814	move.c	FUNCTION_45
0x400360f	            0x31c0	                            xor eax, eax	      1814	move.c	FUNCTION_45
0x4003611	    0xc74590000000	               mov dword [rbp - 0x70], 0	      1816	move.c	FUNCTION_45
0x4003618	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      1817	move.c	FUNCTION_45
0x400361f	    0x488b05000000	            mov rax, qword [0x04003626] 	      1820	move.c	FUNCTION_45
0x4003626	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1820	move.c	FUNCTION_45
0x400362a	        0x488945b0	             mov qword [rbp - 0x50], rax	      1820	move.c	FUNCTION_45
0x400362e	    0x488b05000000	            mov rax, qword [0x04003635] 	      1824	move.c	FUNCTION_45
0x4003635	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1824	move.c	FUNCTION_45
0x400363b	          0x89459c	             mov dword [rbp - 0x64], eax	      1824	move.c	FUNCTION_45
0x400363e	    0x488b05000000	            mov rax, qword [0x04003645] 	      1827	move.c	FUNCTION_45
0x4003645	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1827	move.c	FUNCTION_45
0x400364c	        0x488945b8	             mov qword [rbp - 0x48], rax	      1827	move.c	FUNCTION_45
0x4003650	    0x488b05000000	            mov rax, qword [0x04003657] 	      1828	move.c	FUNCTION_45
0x4003657	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1828	move.c	FUNCTION_45
0x400365d	            0x4898	                                    cdqe	      1828	move.c	FUNCTION_45
0x400365f	        0x488945c0	             mov qword [rbp - 0x40], rax	      1828	move.c	FUNCTION_45
0x4003663	    0x488b05000000	            mov rax, qword [0x0400366a] 	      1829	move.c	FUNCTION_45
0x400366a	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      1829	move.c	FUNCTION_45
0x4003670	          0x8945a0	             mov dword [rbp - 0x60], eax	      1829	move.c	FUNCTION_45
0x4003673	    0x488b05000000	            mov rax, qword [0x0400367a] 	      1832	move.c	FUNCTION_45
0x400367a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1832	move.c	FUNCTION_45
0x400367e	        0x488945c8	             mov qword [rbp - 0x38], rax	      1832	move.c	FUNCTION_45
0x4003682	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      1833	move.c	FUNCTION_45	IF_1
0x4003689	     0xf8426010000	                            je 0x40037b5	      1833	move.c	FUNCTION_45	IF_1
0x400368f	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      1835	move.c	FUNCTION_45	IF_1
0x4003696	    0x488b05000000	            mov rax, qword [0x0400369d] 	      1836	move.c	FUNCTION_45	IF_1
0x400369d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1836	move.c	FUNCTION_45	IF_1
0x40036a1	        0x4883c201	                              add rdx, 1	      1836	move.c	FUNCTION_45	IF_1
0x40036a5	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1836	move.c	FUNCTION_45	IF_1
0x40036ac	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1838	move.c	FUNCTION_45	IF_1
0x40036b3	    0x488b05000000	            mov rax, qword [0x040036ba] 	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40036ba	    0x488b15000000	            mov rdx, qword [0x040036c1] 	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40036c1	    0x488b92e80000	            mov rdx, qword [rdx + 0xe8] 	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40036c8	        0x48895078	             mov qword [rax + 0x78], rdx	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40036cc	            0xeb63	                           jmp 0x4003731	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40036ce	    0x488b05000000	            mov rax, qword [0x040036d5] 	      1844	move.c	FUNCTION_45	IF_1	FOR_1
0x40036d5	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1844	move.c	FUNCTION_45	IF_1	FOR_1
0x40036d9	        0x488945d0	             mov qword [rbp - 0x30], rax	      1844	move.c	FUNCTION_45	IF_1	FOR_1
0x40036dd	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1845	move.c	FUNCTION_45	IF_1	FOR_1	CALL_1
0x40036e1	          0x4889c7	                            mov rdi, rax	      1845	move.c	FUNCTION_45	IF_1	FOR_1	CALL_1
0x40036e4	      0xe8d1f7ffff	                   call sym.topline_back	      1845	move.c	FUNCTION_45	IF_1	FOR_1	CALL_1
0x40036e9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40036ec	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40036f1	            0x744f	                            je 0x4003742	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40036f3	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40036f6	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40036f9	             0x1c2	                            add edx, eax	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40036fb	    0x488b05000000	            mov rax, qword [0x04003702] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4003702	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4003708	            0x39c2	                            cmp edx, eax	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x400370a	            0x7f36	                            jg 0x4003742	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x400370c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1848	move.c	FUNCTION_45	IF_1	FOR_1
0x400370f	           0x1458c	             add dword [rbp - 0x74], eax	      1848	move.c	FUNCTION_45	IF_1	FOR_1
0x4003712	    0x488b05000000	            mov rax, qword [0x04003719] 	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x4003719	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x400371c	    0x899084000000	             mov dword [rax + 0x84], edx	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x4003722	    0x488b05000000	            mov rax, qword [0x04003729] 	      1842	move.c	FUNCTION_45	IF_1	FOR_1
0x4003729	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1842	move.c	FUNCTION_45	IF_1	FOR_1
0x400372d	        0x48895078	             mov qword [rax + 0x78], rdx	      1842	move.c	FUNCTION_45	IF_1	FOR_1
0x4003731	    0x488b05000000	            mov rax, qword [0x04003738] 	      1841	move.c	FUNCTION_45	IF_1	FOR_1
0x4003738	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1841	move.c	FUNCTION_45	IF_1	FOR_1
0x400373c	        0x4883f801	                              cmp rax, 1	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4003740	            0x7f8c	                            jg 0x40036ce	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4003742	    0x488b05000000	            mov rax, qword [0x04003749] 	      1853	move.c	FUNCTION_45	IF_1	CALL_2
0x4003749	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1853	move.c	FUNCTION_45	IF_1	CALL_2
0x400374c	            0x89d6	                            mov esi, edx	      1853	move.c	FUNCTION_45	IF_1	CALL_2
0x400374e	          0x4889c7	                            mov rdi, rax	      1853	move.c	FUNCTION_45	IF_1	CALL_2
0x4003751	      0xe800000000	                          call 0x4003756	      1853	move.c	FUNCTION_45	IF_1	CALL_2
0x4003756	    0x488b05000000	            mov rax, qword [0x0400375d] 	      1854	move.c	FUNCTION_45	IF_1
0x400375d	    0x488b15000000	            mov rdx, qword [0x04003764] 	      1854	move.c	FUNCTION_45	IF_1
0x4003764	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1854	move.c	FUNCTION_45	IF_1
0x400376a	          0x83ca60	                            or edx, 0x60	      1854	move.c	FUNCTION_45	IF_1
0x400376d	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1854	move.c	FUNCTION_45	IF_1
0x4003773	    0x488b05000000	            mov rax, qword [0x0400377a] 	      1855	move.c	FUNCTION_45	IF_1	IF_3
0x400377a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1855	move.c	FUNCTION_45	IF_1	IF_3
0x400377e	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      1855	move.c	FUNCTION_45	IF_1	IF_3
0x4003782	            0x7512	                           jne 0x4003796	      1855	move.c	FUNCTION_45	IF_1	IF_3
0x4003784	    0x488b05000000	            mov rax, qword [0x0400378b] 	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x400378b	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x4003791	          0x3b459c	             cmp eax, dword [rbp - 0x64]	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x4003794	            0x7424	                            je 0x40037ba	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x4003796	    0x488b05000000	            mov rax, qword [0x0400379d] 	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x400379d	    0x488b15000000	            mov rdx, qword [0x040037a4] 	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x40037a4	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x40037aa	          0x83e2ee	                     and edx, 0xffffffee	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x40037ad	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x40037b3	            0xeb05	                           jmp 0x40037ba	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x40037b5	      0xe800000000	                          call 0x40037ba	      1863	move.c	FUNCTION_45	CALL_3
0x40037ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1867	move.c	FUNCTION_45	CALL_4
0x40037be	          0x4889c7	                            mov rdi, rax	      1867	move.c	FUNCTION_45	CALL_4
0x40037c1	      0xe800000000	                          call 0x40037c6	      1867	move.c	FUNCTION_45	CALL_4
0x40037c6	          0x89458c	             mov dword [rbp - 0x74], eax	      1867	move.c	FUNCTION_45	CALL_4
0x40037c9	    0x488b05000000	            mov rax, qword [0x040037d0] 	      1876	move.c	FUNCTION_45	IF_4
0x40037d0	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1876	move.c	FUNCTION_45	IF_4
0x40037d7	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1876	move.c	FUNCTION_45	IF_4
0x40037db	            0x7f2a	                            jg 0x4003807	      1876	move.c	FUNCTION_45	IF_4
0x40037dd	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1878	move.c	FUNCTION_45	IF_4
0x40037e0	          0x894590	             mov dword [rbp - 0x70], eax	      1878	move.c	FUNCTION_45	IF_4
0x40037e3	    0x488b05000000	            mov rax, qword [0x040037ea] 	      1879	move.c	FUNCTION_45	IF_4	IF_5
0x40037ea	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1879	move.c	FUNCTION_45	IF_4	IF_5
0x40037f1	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1879	move.c	FUNCTION_45	IF_4	IF_5
0x40037f5	            0x7510	                           jne 0x4003807	      1879	move.c	FUNCTION_45	IF_4	IF_5
0x40037f7	    0x488b05000000	            mov rax, qword [0x040037fe] 	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x40037fe	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x4003804	          0x294590	             sub dword [rbp - 0x70], eax	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x4003807	    0x488b05000000	            mov rax, qword [0x0400380e] 	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x400380e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4003812	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4003816	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x400381a	          0x4889ce	                            mov rsi, rcx	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x400381d	          0x4889c7	                            mov rdi, rax	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4003820	      0xe800000000	                          call 0x4003825	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4003825	            0x85c0	                           test eax, eax	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4003827	            0x7510	                           jne 0x4003839	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4003829	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1894	move.c	FUNCTION_45	IF_6
0x400382d	        0x488945d0	             mov qword [rbp - 0x30], rax	      1894	move.c	FUNCTION_45	IF_6
0x4003831	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1895	move.c	FUNCTION_45	IF_6
0x4003835	        0x488945e0	             mov qword [rbp - 0x20], rax	      1895	move.c	FUNCTION_45	IF_6
0x4003839	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1898	move.c	FUNCTION_45
0x4003840	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1899	move.c	FUNCTION_45
0x4003847	    0x488b05000000	            mov rax, qword [0x0400384e] 	      1900	move.c	FUNCTION_45	CALL_7
0x400384e	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1900	move.c	FUNCTION_45	CALL_7
0x4003855	    0x488b05000000	            mov rax, qword [0x0400385c] 	      1900	move.c	FUNCTION_45	CALL_7
0x400385c	          0x4889d6	                            mov rsi, rdx	      1900	move.c	FUNCTION_45	CALL_7
0x400385f	          0x4889c7	                            mov rdi, rax	      1900	move.c	FUNCTION_45	CALL_7
0x4003862	      0xe800000000	                          call 0x4003867	      1900	move.c	FUNCTION_45	CALL_7
0x4003867	            0x89c2	                            mov edx, eax	      1900	move.c	FUNCTION_45	CALL_7
0x4003869	    0x488b05000000	            mov rax, qword [0x04003870] 	      1901	move.c	FUNCTION_45
0x4003870	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      1901	move.c	FUNCTION_45
0x4003876	            0x29c2	                            sub edx, eax	      1900	move.c	FUNCTION_45	CALL_7
0x4003878	            0x89d0	                            mov eax, edx	      1900	move.c	FUNCTION_45	CALL_7
0x400387a	          0x8945a4	             mov dword [rbp - 0x5c], eax	      1900	move.c	FUNCTION_45	CALL_7
0x400387d	      0xe92b020000	                           jmp 0x4003aad	      1904	move.c	FUNCTION_45	WHILE_1
0x4003882	        0x837d9000	               cmp dword [rbp - 0x70], 0	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x4003886	            0x7e0b	                           jle 0x4003893	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x4003888	          0x8b4590	             mov eax, dword [rbp - 0x70]	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x400388b	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x4003891	            0x7c29	                            jl 0x40038bc	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x4003893	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x4003896	          0x4863d0	                         movsxd rdx, eax	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x4003899	    0x8b0500000000	            mov eax, dword [0x0400389f] 	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x400389f	            0x85c0	                           test eax, eax	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038a1	            0x7e0d	                           jle 0x40038b0	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038a3	    0x8b0500000000	            mov eax, dword [0x040038a9] 	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038a9	          0x83e801	                              sub eax, 1	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038ac	            0x4898	                                    cdqe	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038ae	            0xeb07	                           jmp 0x40038b7	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038b0	    0x488b05000000	            mov rax, qword [0x040038b7] 	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038b7	          0x4839c2	                            cmp rdx, rax	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038ba	            0x7d17	                           jge 0x40038d3	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038c0	        0x488d5001	                      lea rdx, [rax + 1]	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038c4	    0x488b05000000	            mov rax, qword [0x040038cb] 	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038cb	          0x488b00	                    mov rax, qword [rax]	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038ce	          0x4839c2	                            cmp rdx, rax	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038d1	            0x7e3e	                           jle 0x4003911	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038d3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038d7	    0x488b05000000	            mov rax, qword [0x040038de] 	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038de	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038e5	          0x4839c2	                            cmp rdx, rax	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038e8	            0x7f27	                            jg 0x4003911	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038ea	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038ee	    0x488b05000000	            mov rax, qword [0x040038f5] 	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038f5	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038fc	          0x4839c2	                            cmp rdx, rax	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x40038ff	     0xf8cbc010000	                            jl 0x4003ac1	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x4003905	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1918	move.c	FUNCTION_45	WHILE_1	IF_7
0x4003908	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      1918	move.c	FUNCTION_45	WHILE_1	IF_7
0x400390b	     0xf8db0010000	                           jge 0x4003ac1	      1918	move.c	FUNCTION_45	WHILE_1	IF_7
0x4003911	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1924	move.c	FUNCTION_45	WHILE_1	CALL_8
0x4003915	          0x4889c7	                            mov rdi, rax	      1924	move.c	FUNCTION_45	WHILE_1	CALL_8
0x4003918	      0xe89df5ffff	                   call sym.topline_back	      1924	move.c	FUNCTION_45	WHILE_1	CALL_8
0x400391d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1925	move.c	FUNCTION_45	WHILE_1	IF_8
0x4003920	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1925	move.c	FUNCTION_45	WHILE_1	IF_8
0x4003925	            0x7509	                           jne 0x4003930	      1925	move.c	FUNCTION_45	WHILE_1	IF_8
0x4003927	    0xc7458cffffff	      mov dword [rbp - 0x74], 0x7fffffff	      1926	move.c	FUNCTION_45	WHILE_1	IF_8
0x400392e	            0xeb06	                           jmp 0x4003936	      1926	move.c	FUNCTION_45	WHILE_1	IF_8
0x4003930	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1928	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x4003933	           0x1458c	             add dword [rbp - 0x74], eax	      1928	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x4003936	    0x488b05000000	            mov rax, qword [0x0400393d] 	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x400393d	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x4003943	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x4003946	     0xf8c71010000	                            jl 0x4003abd	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x400394c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x4003950	    0x488b05000000	            mov rax, qword [0x04003957] 	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x4003957	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x400395e	          0x4839c2	                            cmp rdx, rax	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x4003961	            0x7c53	                            jl 0x40039b6	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x4003963	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1933	move.c	FUNCTION_45	WHILE_1	IF_10
0x4003967	    0x488b05000000	            mov rax, qword [0x0400396e] 	      1933	move.c	FUNCTION_45	WHILE_1	IF_10
0x400396e	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1933	move.c	FUNCTION_45	WHILE_1	IF_10
0x4003975	          0x4839c2	                            cmp rdx, rax	      1933	move.c	FUNCTION_45	WHILE_1	IF_10
0x4003978	            0x7f08	                            jg 0x4003982	      1933	move.c	FUNCTION_45	WHILE_1	IF_10
0x400397a	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1934	move.c	FUNCTION_45	WHILE_1	IF_10
0x400397d	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      1934	move.c	FUNCTION_45	WHILE_1	IF_10
0x4003980	            0x7f34	                            jg 0x40039b6	      1934	move.c	FUNCTION_45	WHILE_1	IF_10
0x4003982	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x4003985	           0x14590	             add dword [rbp - 0x70], eax	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x4003988	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1940	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x400398c	    0x488b05000000	            mov rax, qword [0x04003993] 	      1940	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4003993	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1940	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x400399a	          0x4839c2	                            cmp rdx, rax	      1940	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x400399d	            0x7517	                           jne 0x40039b6	      1940	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x400399f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1942	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x40039a2	            0x85c0	                           test eax, eax	      1942	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x40039a4	            0x7510	                           jne 0x40039b6	      1942	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x40039a6	    0x488b05000000	            mov rax, qword [0x040039ad] 	      1945	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x40039ad	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      1945	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x40039b3	          0x294590	             sub dword [rbp - 0x70], eax	      1945	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x40039b6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x40039ba	    0x488b05000000	            mov rax, qword [0x040039c1] 	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x40039c1	          0x488b00	                    mov rax, qword [rax]	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x40039c4	          0x4839c2	                            cmp rdx, rax	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x40039c7	     0xf8de0000000	                           jge 0x4003aad	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x40039cd	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1951	move.c	FUNCTION_45	WHILE_1	IF_12	CALL_9
0x40039d1	          0x4889c7	                            mov rdi, rax	      1951	move.c	FUNCTION_45	WHILE_1	IF_12	CALL_9
0x40039d4	      0xe8b2f5ffff	                   call sym.botline_forw	      1951	move.c	FUNCTION_45	WHILE_1	IF_12	CALL_9
0x40039d9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1952	move.c	FUNCTION_45	WHILE_1	IF_12
0x40039dc	           0x1458c	             add dword [rbp - 0x74], eax	      1952	move.c	FUNCTION_45	WHILE_1	IF_12
0x40039df	    0x488b05000000	            mov rax, qword [0x040039e6] 	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40039e6	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40039ec	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40039ef	     0xf8ccb000000	                            jl 0x4003ac0	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40039f5	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1955	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40039f8	          0x4863d0	                         movsxd rdx, eax	      1955	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40039fb	    0x8b0500000000	            mov eax, dword [0x04003a01] 	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a01	            0x85c0	                           test eax, eax	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a03	            0x7e0d	                           jle 0x4003a12	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a05	    0x8b0500000000	            mov eax, dword [0x04003a0b] 	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a0b	          0x83e801	                              sub eax, 1	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a0e	            0x4898	                                    cdqe	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a10	            0xeb07	                           jmp 0x4003a19	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a12	    0x488b05000000	            mov rax, qword [0x04003a19] 	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a19	          0x4839c2	                            cmp rdx, rax	      1955	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a1c	            0x7c0f	                            jl 0x4003a2d	      1955	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a1e	          0x8b4590	             mov eax, dword [rbp - 0x70]	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a21	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a27	     0xf8d80000000	                           jge 0x4003aad	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a2d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1961	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a30	           0x14594	             add dword [rbp - 0x6c], eax	      1961	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4003a33	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a37	    0x488b05000000	            mov rax, qword [0x04003a3e] 	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a3e	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a45	          0x4839c2	                            cmp rdx, rax	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a48	            0x7d2f	                           jge 0x4003a79	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a4a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a4e	        0x488d5001	                      lea rdx, [rax + 1]	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a52	    0x488b05000000	            mov rax, qword [0x04003a59] 	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a59	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a60	          0x4839c2	                            cmp rdx, rax	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a63	            0x7548	                           jne 0x4003aad	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a65	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a68	    0x488b05000000	            mov rax, qword [0x04003a6f] 	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a6f	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a75	            0x39c2	                            cmp edx, eax	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a77	            0x7e34	                           jle 0x4003aad	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a79	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a7c	           0x14590	             add dword [rbp - 0x70], eax	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4003a7f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4003a83	    0x488b05000000	            mov rax, qword [0x04003a8a] 	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4003a8a	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4003a91	          0x4839c2	                            cmp rdx, rax	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4003a94	            0x7517	                           jne 0x4003aad	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4003a96	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1973	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4003a99	            0x85c0	                           test eax, eax	      1973	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4003a9b	            0x7510	                           jne 0x4003aad	      1973	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4003a9d	    0x488b05000000	            mov rax, qword [0x04003aa4] 	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4003aa4	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4003aaa	          0x294590	             sub dword [rbp - 0x70], eax	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4003aad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1904	move.c	FUNCTION_45	WHILE_1
0x4003ab1	        0x4883f801	                              cmp rax, 1	      1904	move.c	FUNCTION_45	WHILE_1
0x4003ab5	     0xf8fc7fdffff	                            jg 0x4003882	      1904	move.c	FUNCTION_45	WHILE_1
0x4003abb	            0xeb04	                           jmp 0x4003ac1	      1904	move.c	FUNCTION_45	WHILE_1
0x4003abd	              0x90	                                     nop	      1930	move.c	FUNCTION_45	WHILE_1	IF_9
0x4003abe	            0xeb01	                           jmp 0x4003ac1	      1930	move.c	FUNCTION_45	WHILE_1	IF_9
0x4003ac0	              0x90	                                     nop	      1954	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x4003ac1	        0x837d9000	               cmp dword [rbp - 0x70], 0	      1983	move.c	FUNCTION_45	IF_17
0x4003ac5	            0x7f0d	                            jg 0x4003ad4	      1983	move.c	FUNCTION_45	IF_17
0x4003ac7	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1984	move.c	FUNCTION_45	IF_17
0x4003acf	      0xe997000000	                           jmp 0x4003b6b	      1984	move.c	FUNCTION_45	IF_17
0x4003ad4	    0x488b05000000	            mov rax, qword [0x04003adb] 	      1986	move.c	FUNCTION_45	ELSE_3	IF_18
0x4003adb	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1986	move.c	FUNCTION_45	ELSE_3	IF_18
0x4003ae1	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      1986	move.c	FUNCTION_45	ELSE_3	IF_18
0x4003ae4	            0x7d0b	                           jge 0x4003af1	      1986	move.c	FUNCTION_45	ELSE_3	IF_18
0x4003ae6	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x4003ae9	            0x4898	                                    cdqe	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x4003aeb	        0x488945a8	             mov qword [rbp - 0x58], rax	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x4003aef	            0xeb7a	                           jmp 0x4003b6b	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x4003af1	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1991	move.c	FUNCTION_45	ELSE_4
0x4003af9	    0x488b05000000	            mov rax, qword [0x04003b00] 	      1993	move.c	FUNCTION_45	ELSE_4
0x4003b00	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1993	move.c	FUNCTION_45	ELSE_4
0x4003b06	          0x8945e8	             mov dword [rbp - 0x18], eax	      1993	move.c	FUNCTION_45	ELSE_4
0x4003b09	    0x488b05000000	            mov rax, qword [0x04003b10] 	      1995	move.c	FUNCTION_45	ELSE_4
0x4003b10	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1995	move.c	FUNCTION_45	ELSE_4
0x4003b14	        0x4883e801	                              sub rax, 1	      1995	move.c	FUNCTION_45	ELSE_4
0x4003b18	        0x488945e0	             mov qword [rbp - 0x20], rax	      1995	move.c	FUNCTION_45	ELSE_4
0x4003b1c	    0xc74598000000	               mov dword [rbp - 0x68], 0	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b23	            0xeb17	                           jmp 0x4003b3c	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b25	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1998	move.c	FUNCTION_45	ELSE_4	FOR_2	CALL_10
0x4003b29	          0x4889c7	                            mov rdi, rax	      1998	move.c	FUNCTION_45	ELSE_4	FOR_2	CALL_10
0x4003b2c	      0xe85af4ffff	                   call sym.botline_forw	      1998	move.c	FUNCTION_45	ELSE_4	FOR_2	CALL_10
0x4003b31	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1999	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b34	           0x14598	             add dword [rbp - 0x68], eax	      1999	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b37	      0x488345a801	               add qword [rbp - 0x58], 1	      2000	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b3c	          0x8b4598	             mov eax, dword [rbp - 0x68]	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b3f	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b42	            0x7d17	                           jge 0x4003b5b	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b44	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b48	    0x488b05000000	            mov rax, qword [0x04003b4f] 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b4f	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b56	          0x4839c2	                            cmp rdx, rax	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b59	            0x7cca	                            jl 0x4003b25	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4003b5b	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2002	move.c	FUNCTION_45	ELSE_4	IF_19
0x4003b5e	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      2002	move.c	FUNCTION_45	ELSE_4	IF_19
0x4003b61	            0x7d08	                           jge 0x4003b6b	      2002	move.c	FUNCTION_45	ELSE_4	IF_19
0x4003b63	    0x48c745a80f27	          mov qword [rbp - 0x58], 0x270f	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x4003b6b	    0x488b05000000	            mov rax, qword [0x04003b72] 	      2010	move.c	FUNCTION_45	IF_20
0x4003b72	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2010	move.c	FUNCTION_45	IF_20
0x4003b78	            0x4898	                                    cdqe	      2010	move.c	FUNCTION_45	IF_20
0x4003b7a	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2010	move.c	FUNCTION_45	IF_20
0x4003b7e	            0x7f1a	                            jg 0x4003b9a	      2010	move.c	FUNCTION_45	IF_20
0x4003b80	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2010	move.c	FUNCTION_45	IF_20
0x4003b86	            0x4898	                                    cdqe	      2010	move.c	FUNCTION_45	IF_20
0x4003b88	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2010	move.c	FUNCTION_45	IF_20
0x4003b8c	            0x7d0c	                           jge 0x4003b9a	      2010	move.c	FUNCTION_45	IF_20
0x4003b8e	      0xbf00000000	                              mov edi, 0	      2011	move.c	FUNCTION_45	CALL_11
0x4003b93	      0xe800000000	                          call 0x4003b98	      2011	move.c	FUNCTION_45	CALL_11
0x4003b98	            0xeb11	                           jmp 0x4003bab	      2011	move.c	FUNCTION_45	CALL_11
0x4003b9a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2013	move.c	FUNCTION_45	CALL_12
0x4003b9e	      0xbe01000000	                              mov esi, 1	      2013	move.c	FUNCTION_45	CALL_12
0x4003ba3	          0x4889c7	                            mov rdi, rax	      2013	move.c	FUNCTION_45	CALL_12
0x4003ba6	      0xe800000000	                          call 0x4003bab	      2013	move.c	FUNCTION_45	CALL_12
0x4003bab	    0x488b05000000	            mov rax, qword [0x04003bb2] 	      2020	move.c	FUNCTION_45	IF_21
0x4003bb2	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2020	move.c	FUNCTION_45	IF_21
0x4003bb6	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      2020	move.c	FUNCTION_45	IF_21
0x4003bba	            0x753c	                           jne 0x4003bf8	      2020	move.c	FUNCTION_45	IF_21
0x4003bbc	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      2020	move.c	FUNCTION_45	IF_21
0x4003bc3	            0x7433	                            je 0x4003bf8	      2020	move.c	FUNCTION_45	IF_21
0x4003bc5	    0x488b05000000	            mov rax, qword [0x04003bcc] 	      2022	move.c	FUNCTION_45	IF_21
0x4003bcc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2022	move.c	FUNCTION_45	IF_21
0x4003bd0	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2022	move.c	FUNCTION_45	IF_21
0x4003bd7	    0x488b05000000	            mov rax, qword [0x04003bde] 	      2023	move.c	FUNCTION_45	IF_21
0x4003bde	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2023	move.c	FUNCTION_45	IF_21
0x4003be1	    0x8990f0000000	             mov dword [rax + 0xf0], edx	      2023	move.c	FUNCTION_45	IF_21
0x4003be7	    0x488b05000000	            mov rax, qword [0x04003bee] 	      2024	move.c	FUNCTION_45	IF_21
0x4003bee	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2024	move.c	FUNCTION_45	IF_21
0x4003bf2	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2024	move.c	FUNCTION_45	IF_21
0x4003bf8	    0x488b05000000	            mov rax, qword [0x04003bff] 	      2026	move.c	FUNCTION_45
0x4003bff	    0x488b15000000	            mov rdx, qword [0x04003c06] 	      2026	move.c	FUNCTION_45
0x4003c06	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2026	move.c	FUNCTION_45
0x4003c0c	          0x80ca80	                             or dl, 0x80	      2026	move.c	FUNCTION_45
0x4003c0f	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2026	move.c	FUNCTION_45
0x4003c15	              0x90	                                     nop	      2027	move.c	FUNCTION_45
0x4003c16	        0x488b45f8	                mov rax, qword [rbp - 8]	      2027	move.c	FUNCTION_45
0x4003c1a	    0x644833042528	                xor rax, qword fs:[0x28]	      2027	move.c	FUNCTION_45
0x4003c23	            0x7405	                            je 0x4003c2a	      2027	move.c	FUNCTION_45
0x4003c25	      0xe800000000	                          call 0x4003c2a	      2027	move.c	FUNCTION_45
0x4003c2a	              0xc9	                                   leave	      2027	move.c	FUNCTION_45
0x4003c2b	              0xc3	                                     ret	      2027	move.c	FUNCTION_45
curs_rows	ELSE,7:FOR,1:functions,0:WHILE,0:CALL,10:IF,14:DO,0:SWITCH,0	377
0x4000f07	              0x55	                                push rbp	       662	move.c	FUNCTION_23
0x4000f08	          0x4889e5	                            mov rbp, rsp	       662	move.c	FUNCTION_23
0x4000f0b	        0x4883ec30	                           sub rsp, 0x30	       662	move.c	FUNCTION_23
0x4000f0f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       662	move.c	FUNCTION_23
0x4000f13	      0xe800000000	                          call 0x4000f18	       672	move.c	FUNCTION_23	CALL_1
0x4000f18	            0x85c0	                           test eax, eax	       674	move.c	FUNCTION_23
0x4000f1a	            0x7429	                            je 0x4000f45	       674	move.c	FUNCTION_23
0x4000f1c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       673	move.c	FUNCTION_23
0x4000f20	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       673	move.c	FUNCTION_23
0x4000f26	            0x85c0	                           test eax, eax	       673	move.c	FUNCTION_23
0x4000f28	            0x741b	                            je 0x4000f45	       673	move.c	FUNCTION_23
0x4000f2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       674	move.c	FUNCTION_23
0x4000f2e	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       674	move.c	FUNCTION_23
0x4000f35	          0x488b10	                    mov rdx, qword [rax]	       674	move.c	FUNCTION_23
0x4000f38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       674	move.c	FUNCTION_23
0x4000f3c	        0x488b4078	            mov rax, qword [rax + 0x78] 	       674	move.c	FUNCTION_23
0x4000f40	          0x4839c2	                            cmp rdx, rax	       674	move.c	FUNCTION_23
0x4000f43	            0x7e07	                           jle 0x4000f4c	       674	move.c	FUNCTION_23
0x4000f45	      0xb801000000	                              mov eax, 1	       674	move.c	FUNCTION_23
0x4000f4a	            0xeb05	                           jmp 0x4000f51	       674	move.c	FUNCTION_23
0x4000f4c	      0xb800000000	                              mov eax, 0	       674	move.c	FUNCTION_23
0x4000f51	          0x8945ec	             mov dword [rbp - 0x14], eax	       672	move.c	FUNCTION_23	CALL_1
0x4000f54	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       675	move.c	FUNCTION_23
0x4000f5b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       676	move.c	FUNCTION_23
0x4000f5f	    0xc780d4000000	               mov dword [rax + 0xd4], 0	       676	move.c	FUNCTION_23
0x4000f69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       677	move.c	FUNCTION_23	FOR_1
0x4000f6d	        0x488b4078	            mov rax, qword [rax + 0x78] 	       677	move.c	FUNCTION_23	FOR_1
0x4000f71	        0x488945f0	             mov qword [rbp - 0x10], rax	       677	move.c	FUNCTION_23	FOR_1
0x4000f75	      0xe9fe020000	                           jmp 0x4001278	       677	move.c	FUNCTION_23	FOR_1
0x4000f7a	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       679	move.c	FUNCTION_23	FOR_1
0x4000f81	        0x837dec00	               cmp dword [rbp - 0x14], 0	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000f85	     0xf8554010000	                           jne 0x40010df	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000f8b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000f8f	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000f95	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000f98	     0xf8e41010000	                           jle 0x40010df	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000f9e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fa2	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fa9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fac	          0x4863d0	                         movsxd rdx, eax	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000faf	          0x4889d0	                            mov rax, rdx	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fb2	          0x4801c0	                            add rax, rax	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fb5	          0x4801d0	                            add rax, rdx	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fb8	        0x48c1e003	                              shl rax, 3	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fbc	          0x4801c8	                            add rax, rcx	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fbf	          0x488b00	                    mov rax, qword [rax]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fc2	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fc6	     0xf8ca7020000	                            jl 0x4001273	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fcc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fd0	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fd7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fda	          0x4863d0	                         movsxd rdx, eax	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fdd	          0x4889d0	                            mov rax, rdx	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fe0	          0x4801c0	                            add rax, rax	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fe3	          0x4801d0	                            add rax, rdx	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fe6	        0x48c1e003	                              shl rax, 3	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fea	          0x4801c8	                            add rax, rcx	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000fed	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000ff1	            0x84c0	                             test al, al	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000ff3	     0xf847a020000	                            je 0x4001273	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000ff9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4000ffd	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4001004	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4001007	          0x4863d0	                         movsxd rdx, eax	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400100a	          0x4889d0	                            mov rax, rdx	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400100d	          0x4801c0	                            add rax, rax	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4001010	          0x4801d0	                            add rax, rdx	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4001013	        0x48c1e003	                              shl rax, 3	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4001017	          0x4801c8	                            add rax, rcx	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400101a	          0x488b00	                    mov rax, qword [rax]	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400101d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4001021	     0xf858a000000	                           jne 0x40010b1	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4001027	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400102b	        0x488b4008	                mov rax, qword [rax + 8]	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400102f	    0x8b800c010000	           mov eax, dword [rax + 0x10c] 	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001035	            0x85c0	                           test eax, eax	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001037	            0x746f	                            je 0x40010a8	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001039	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400103d	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001044	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001047	          0x4863d0	                         movsxd rdx, eax	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400104a	          0x4889d0	                            mov rax, rdx	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400104d	          0x4801c0	                            add rax, rax	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001050	          0x4801d0	                            add rax, rdx	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001053	        0x48c1e003	                              shl rax, 3	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001057	          0x4801c8	                            add rax, rcx	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400105a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400105e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001062	        0x488b4038	            mov rax, qword [rax + 0x38] 	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001066	          0x4839c2	                            cmp rdx, rax	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001069	            0x7c3d	                            jl 0x40010a8	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400106b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400106f	        0x488b4008	                mov rax, qword [rax + 8]	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001073	    0x488b88100100	           mov rcx, qword [rax + 0x110] 	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400107a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       692	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400107e	    0x488bb0000100	           mov rsi, qword [rax + 0x100] 	       692	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001085	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       692	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001088	          0x4863d0	                         movsxd rdx, eax	       692	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400108b	          0x4889d0	                            mov rax, rdx	       692	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400108e	          0x4801c0	                            add rax, rax	       692	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001091	          0x4801d0	                            add rax, rdx	       692	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001094	        0x48c1e003	                              shl rax, 3	       692	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4001098	          0x4801f0	                            add rax, rsi	       692	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400109b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       692	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400109f	        0x4883c001	                              add rax, 1	       692	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40010a3	          0x4839c1	                            cmp rcx, rax	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40010a6	            0x7e37	                           jle 0x40010df	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40010a8	    0xc745e8010000	               mov dword [rbp - 0x18], 1	       694	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40010af	            0xeb2e	                           jmp 0x40010df	       694	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40010b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010b5	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010bc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010bf	          0x4863d0	                         movsxd rdx, eax	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010c2	          0x4889d0	                            mov rax, rdx	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010c5	          0x4801c0	                            add rax, rax	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010c8	          0x4801d0	                            add rax, rdx	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010cb	        0x48c1e003	                              shl rax, 3	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010cf	          0x4801c8	                            add rax, rcx	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010d2	          0x488b00	                    mov rax, qword [rax]	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010d5	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010d9	            0x7e04	                           jle 0x40010df	       696	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010db	        0x836de401	               sub dword [rbp - 0x1c], 1	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40010df	        0x837de800	               cmp dword [rbp - 0x18], 0	       699	move.c	FUNCTION_23	FOR_1	IF_6
0x40010e3	     0xf84a3000000	                            je 0x400118c	       699	move.c	FUNCTION_23	FOR_1	IF_6
0x40010e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40010ed	        0x488b4078	            mov rax, qword [rax + 0x78] 	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40010f1	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40010f5	            0x7512	                           jne 0x4001109	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40010f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40010fb	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x4001101	            0x85c0	                           test eax, eax	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x4001103	     0xf8583000000	                           jne 0x400118c	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x4001109	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x400110d	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x4001114	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x4001117	          0x4863d0	                         movsxd rdx, eax	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x400111a	          0x4889d0	                            mov rax, rdx	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x400111d	          0x4801c0	                            add rax, rax	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x4001120	          0x4801d0	                            add rax, rdx	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x4001123	        0x48c1e003	                              shl rax, 3	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x4001127	          0x4801c8	                            add rax, rcx	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x400112a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x400112e	        0x4883c001	                              add rax, 1	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x4001132	        0x488945f0	             mov qword [rbp - 0x10], rax	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x4001136	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x400113a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x400113e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x4001142	     0xf8c44010000	                            jl 0x400128c	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x4001148	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x400114c	    0x8b88d4000000	            mov ecx, dword [rax + 0xd4] 	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4001152	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4001156	    0x488bb0000100	           mov rsi, qword [rax + 0x100] 	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x400115d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4001160	          0x4863d0	                         movsxd rdx, eax	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4001163	          0x4889d0	                            mov rax, rdx	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4001166	          0x4801c0	                            add rax, rax	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4001169	          0x4801d0	                            add rax, rdx	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x400116c	        0x48c1e003	                              shl rax, 3	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4001170	          0x4801f0	                            add rax, rsi	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4001173	         0xfb74008	               movzx eax, word [rax + 8]	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4001177	           0xfb7c0	                           movzx eax, ax	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x400117a	          0x8d1401	                    lea edx, [rcx + rax]	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x400117d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4001181	    0x8990d4000000	             mov dword [rax + 0xd4], edx	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4001187	      0xe9e8000000	                           jmp 0x4001274	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x400118c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x4001190	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x4001194	      0xba00000000	                              mov edx, 0	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x4001199	          0x4889ce	                            mov rsi, rcx	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x400119c	          0x4889c7	                            mov rdi, rax	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x400119f	      0xe800000000	                          call 0x40011a4	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x40011a4	        0x488945f8	                mov qword [rbp - 8], rax	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x40011a8	      0x48837df800	                  cmp qword [rbp - 8], 0	       719	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40011ad	            0x7436	                            je 0x40011e5	       719	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40011af	        0x488b45f8	                mov rax, qword [rbp - 8]	       721	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40011b3	        0x480145f0	            add qword [rbp - 0x10], rax 	       721	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40011b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x40011bb	        0x488b4038	            mov rax, qword [rax + 0x38] 	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x40011bf	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x40011c3	     0xf8cc6000000	                            jl 0x400128f	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x40011c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40011cd	    0x8b80d4000000	            mov eax, dword [rax + 0xd4] 	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40011d3	          0x8d5001	                      lea edx, [rax + 1]	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40011d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40011da	    0x8990d4000000	             mov dword [rax + 0xd4], edx	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40011e0	      0xe98f000000	                           jmp 0x4001274	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40011e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       729	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x40011e9	        0x488b4078	            mov rax, qword [rax + 0x78] 	       729	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x40011ed	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       729	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x40011f1	            0x7546	                           jne 0x4001239	       729	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x40011f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40011f7	        0x488d5001	                      lea rdx, [rax + 1]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40011fb	        0x488955f0	             mov qword [rbp - 0x10], rdx	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40011ff	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4001203	      0xba01000000	                              mov edx, 1	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4001208	          0x4889c6	                            mov rsi, rax	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x400120b	          0x4889cf	                            mov rdi, rcx	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x400120e	      0xe800000000	                          call 0x4001213	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4001213	            0x89c2	                            mov edx, eax	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4001215	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       731	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x4001219	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       731	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x400121f	             0x1c2	                            add edx, eax	       731	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x4001221	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4001225	    0x8b80d4000000	            mov eax, dword [rax + 0xd4] 	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x400122b	             0x1c2	                            add edx, eax	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x400122d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4001231	    0x8990d4000000	             mov dword [rax + 0xd4], edx	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4001237	            0xeb3b	                           jmp 0x4001274	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4001239	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x400123d	        0x488d5001	                      lea rdx, [rax + 1]	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4001241	        0x488955f0	             mov qword [rbp - 0x10], rdx	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4001245	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4001249	      0xba01000000	                              mov edx, 1	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x400124e	          0x4889c6	                            mov rsi, rax	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4001251	          0x4889cf	                            mov rdi, rcx	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4001254	      0xe800000000	                          call 0x4001259	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4001259	            0x89c2	                            mov edx, eax	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x400125b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x400125f	    0x8b80d4000000	            mov eax, dword [rax + 0xd4] 	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4001265	             0x1c2	                            add edx, eax	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4001267	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x400126b	    0x8990d4000000	             mov dword [rax + 0xd4], edx	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4001271	            0xeb01	                           jmp 0x4001274	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4001273	              0x90	                                     nop	       683	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4001274	        0x8345e401	               add dword [rbp - 0x1c], 1	       677	move.c	FUNCTION_23	FOR_1
0x4001278	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       677	move.c	FUNCTION_23	FOR_1
0x400127c	        0x488b4038	            mov rax, qword [rax + 0x38] 	       677	move.c	FUNCTION_23	FOR_1
0x4001280	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       677	move.c	FUNCTION_23	FOR_1
0x4001284	     0xf8ff0fcffff	                            jg 0x4000f7a	       677	move.c	FUNCTION_23	FOR_1
0x400128a	            0xeb04	                           jmp 0x4001290	       677	move.c	FUNCTION_23	FOR_1
0x400128c	              0x90	                                     nop	       709	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x400128d	            0xeb01	                           jmp 0x4001290	       709	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x400128f	              0x90	                                     nop	       723	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x4001290	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       738	move.c	FUNCTION_23	CALL_5
0x4001294	          0x4889c7	                            mov rdi, rax	       738	move.c	FUNCTION_23	CALL_5
0x4001297	      0xe800000000	                          call 0x400129c	       738	move.c	FUNCTION_23	CALL_5
0x400129c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       739	move.c	FUNCTION_23	IF_11
0x40012a0	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       739	move.c	FUNCTION_23	IF_11
0x40012a6	          0x83e008	                              and eax, 8	       739	move.c	FUNCTION_23	IF_11
0x40012a9	            0x85c0	                           test eax, eax	       739	move.c	FUNCTION_23	IF_11
0x40012ab	     0xf85f1010000	                           jne 0x40014a2	       739	move.c	FUNCTION_23	IF_11
0x40012b1	        0x837dec00	               cmp dword [rbp - 0x14], 0	       741	move.c	FUNCTION_23	IF_11	IF_12
0x40012b5	     0xf8580000000	                           jne 0x400133b	       741	move.c	FUNCTION_23	IF_11	IF_12
0x40012bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       742	move.c	FUNCTION_23	IF_11	IF_12
0x40012bf	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       742	move.c	FUNCTION_23	IF_11	IF_12
0x40012c5	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       742	move.c	FUNCTION_23	IF_11	IF_12
0x40012c8	            0x7471	                            je 0x400133b	       742	move.c	FUNCTION_23	IF_11	IF_12
0x40012ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       743	move.c	FUNCTION_23	IF_11	IF_12
0x40012ce	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       743	move.c	FUNCTION_23	IF_11	IF_12
0x40012d4	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       743	move.c	FUNCTION_23	IF_11	IF_12
0x40012d7	     0xf8e0c010000	                           jle 0x40013e9	       743	move.c	FUNCTION_23	IF_11	IF_12
0x40012dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40012e1	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40012e8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40012eb	          0x4863d0	                         movsxd rdx, eax	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40012ee	          0x4889d0	                            mov rax, rdx	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40012f1	          0x4801c0	                            add rax, rax	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40012f4	          0x4801d0	                            add rax, rdx	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40012f7	        0x48c1e003	                              shl rax, 3	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40012fb	          0x4801c8	                            add rax, rcx	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40012fe	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	       744	move.c	FUNCTION_23	IF_11	IF_12
0x4001302	            0x84c0	                             test al, al	       744	move.c	FUNCTION_23	IF_11	IF_12
0x4001304	            0x7435	                            je 0x400133b	       744	move.c	FUNCTION_23	IF_11	IF_12
0x4001306	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       745	move.c	FUNCTION_23	IF_11	IF_12
0x400130a	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4001311	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4001314	          0x4863d0	                         movsxd rdx, eax	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4001317	          0x4889d0	                            mov rax, rdx	       745	move.c	FUNCTION_23	IF_11	IF_12
0x400131a	          0x4801c0	                            add rax, rax	       745	move.c	FUNCTION_23	IF_11	IF_12
0x400131d	          0x4801d0	                            add rax, rdx	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4001320	        0x48c1e003	                              shl rax, 3	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4001324	          0x4801c8	                            add rax, rcx	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4001327	          0x488b10	                    mov rdx, qword [rax]	       745	move.c	FUNCTION_23	IF_11	IF_12
0x400132a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       745	move.c	FUNCTION_23	IF_11	IF_12
0x400132e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4001332	          0x4839c2	                            cmp rdx, rax	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4001335	     0xf84ae000000	                            je 0x40013e9	       745	move.c	FUNCTION_23	IF_11	IF_12
0x400133b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x400133f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x4001343	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x4001347	        0x488b4078	            mov rax, qword [rax + 0x78] 	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x400134b	          0x4839c2	                            cmp rdx, rax	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x400134e	            0x7536	                           jne 0x4001386	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x4001350	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4001354	        0x488b4838	            mov rcx, qword [rax + 0x38] 	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4001358	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x400135c	      0xba01000000	                              mov edx, 1	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4001361	          0x4889ce	                            mov rsi, rcx	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4001364	          0x4889c7	                            mov rdi, rax	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4001367	      0xe800000000	                          call 0x400136c	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x400136c	            0x89c2	                            mov edx, eax	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x400136e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       750	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x4001372	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       750	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x4001378	             0x1c2	                            add edx, eax	       750	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x400137a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x400137e	    0x8990cc000000	             mov dword [rax + 0xcc], edx	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4001384	            0xeb28	                           jmp 0x40013ae	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4001386	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x400138a	        0x488b4838	            mov rcx, qword [rax + 0x38] 	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x400138e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x4001392	      0xba01000000	                              mov edx, 1	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x4001397	          0x4889ce	                            mov rsi, rcx	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x400139a	          0x4889c7	                            mov rdi, rax	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x400139d	      0xe800000000	                          call 0x40013a2	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x40013a2	            0x89c2	                            mov edx, eax	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x40013a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x40013a8	    0x8990cc000000	             mov dword [rax + 0xcc], edx	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x40013ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013b2	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013ba	    0x41b900000000	                              mov r9d, 0	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013c0	    0x41b801000000	                              mov r8d, 1	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013c6	      0xb900000000	                              mov ecx, 0	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013cb	      0xba00000000	                              mov edx, 0	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013d0	          0x4889c7	                            mov rdi, rax	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013d3	      0xe800000000	                          call 0x40013d8	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013d8	            0x89c2	                            mov edx, eax	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013de	    0x8990d0000000	             mov dword [rax + 0xd0], edx	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013e4	      0xe9b9000000	                           jmp 0x40014a2	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40013e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x40013ed	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x40013f3	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x40013f6	            0x7d46	                           jge 0x400143e	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x40013f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       762	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x40013fc	    0xc780cc000000	               mov dword [rax + 0xcc], 0	       762	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x4001406	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400140a	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400140e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4001412	    0x41b900000000	                              mov r9d, 0	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4001418	    0x41b801000000	                              mov r8d, 1	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400141e	      0xb900000000	                              mov ecx, 0	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4001423	      0xba00000000	                              mov edx, 0	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4001428	          0x4889c7	                            mov rdi, rax	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400142b	      0xe800000000	                          call 0x4001430	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4001430	            0x89c2	                            mov edx, eax	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4001432	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4001436	    0x8990d0000000	             mov dword [rax + 0xd0], edx	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400143c	            0xeb64	                           jmp 0x40014a2	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400143e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001442	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001449	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x400144c	          0x4863d0	                         movsxd rdx, eax	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x400144f	          0x4889d0	                            mov rax, rdx	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001452	          0x4801c0	                            add rax, rax	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001455	          0x4801d0	                            add rax, rdx	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001458	        0x48c1e003	                              shl rax, 3	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x400145c	          0x4801c8	                            add rax, rcx	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x400145f	         0xfb74008	               movzx eax, word [rax + 8]	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001463	           0xfb7d0	                           movzx edx, ax	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001466	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x400146a	    0x8990cc000000	             mov dword [rax + 0xcc], edx	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001470	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001474	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x400147b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x400147e	          0x4863d0	                         movsxd rdx, eax	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001481	          0x4889d0	                            mov rax, rdx	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001484	          0x4801c0	                            add rax, rax	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001487	          0x4801d0	                            add rax, rdx	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x400148a	        0x48c1e003	                              shl rax, 3	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x400148e	          0x4801c8	                            add rax, rcx	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001491	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001495	           0xfbed0	                           movsx edx, al	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x4001498	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x400149c	    0x8990d0000000	             mov dword [rax + 0xd0], edx	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x40014a2	    0x488b05000000	            mov rax, qword [0x040014a9] 	       777	move.c	FUNCTION_23	CALL_10
0x40014a9	          0x4889c7	                            mov rdi, rax	       777	move.c	FUNCTION_23	CALL_10
0x40014ac	      0xe898edffff	          call sym.redraw_for_cursorline	       777	move.c	FUNCTION_23	CALL_10
0x40014b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       778	move.c	FUNCTION_23
0x40014b5	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       778	move.c	FUNCTION_23
0x40014bb	          0x83c818	                            or eax, 0x18	       778	move.c	FUNCTION_23
0x40014be	            0x89c2	                            mov edx, eax	       778	move.c	FUNCTION_23
0x40014c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       778	move.c	FUNCTION_23
0x40014c4	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       778	move.c	FUNCTION_23
0x40014ca	              0x90	                                     nop	       780	move.c	FUNCTION_23
0x40014cb	              0xc9	                                   leave	       780	move.c	FUNCTION_23
0x40014cc	              0xc3	                                     ret	       780	move.c	FUNCTION_23
validate_virtcol	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,1:IF,0:DO,0:SWITCH,0	8
0x40014cd	              0x55	                                push rbp	       787	move.c	FUNCTION_24
0x40014ce	          0x4889e5	                            mov rbp, rsp	       787	move.c	FUNCTION_24
0x40014d1	    0x488b05000000	            mov rax, qword [0x040014d8] 	       788	move.c	FUNCTION_24	CALL_1
0x40014d8	          0x4889c7	                            mov rdi, rax	       788	move.c	FUNCTION_24	CALL_1
0x40014db	      0xe800000000	                          call 0x40014e0	       788	move.c	FUNCTION_24	CALL_1
0x40014e0	              0x90	                                     nop	       789	move.c	FUNCTION_24
0x40014e1	              0x5d	                                 pop rbp	       789	move.c	FUNCTION_24
0x40014e2	              0xc3	                                     ret	       789	move.c	FUNCTION_24
win_col_off	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,2:IF,0:DO,0:SWITCH,0	46
0x4001775	              0x55	                                push rbp	       876	move.c	ELSE_1	FUNCTION_28
0x4001776	          0x4889e5	                            mov rbp, rsp	       876	move.c	ELSE_1	FUNCTION_28
0x4001779	              0x53	                                push rbx	       876	move.c	ELSE_1	FUNCTION_28
0x400177a	        0x4883ec18	                           sub rsp, 0x18	       876	move.c	ELSE_1	FUNCTION_28
0x400177e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       876	move.c	ELSE_1	FUNCTION_28
0x4001782	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4001786	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400178c	            0x85c0	                           test eax, eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400178e	            0x750e	                           jne 0x400179e	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4001790	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4001794	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400179a	            0x85c0	                           test eax, eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400179c	            0x7411	                            je 0x40017af	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400179e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40017a2	          0x4889c7	                            mov rdi, rax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40017a5	      0xe800000000	                          call 0x40017aa	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40017aa	          0x8d5001	                      lea edx, [rax + 1]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40017ad	            0xeb05	                           jmp 0x40017b4	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40017af	      0xba00000000	                              mov edx, 0	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40017b4	    0x8b0500000000	            mov eax, dword [0x040017ba] 	       879	move.c	ELSE_1	FUNCTION_28
0x40017ba	            0x85c0	                           test eax, eax	       879	move.c	ELSE_1	FUNCTION_28
0x40017bc	            0x7414	                            je 0x40017d2	       879	move.c	ELSE_1	FUNCTION_28
0x40017be	    0x488b05000000	            mov rax, qword [0x040017c5] 	       879	move.c	ELSE_1	FUNCTION_28
0x40017c5	        0x483945e8	            cmp qword [rbp - 0x18], rax 	       879	move.c	ELSE_1	FUNCTION_28
0x40017c9	            0x7507	                           jne 0x40017d2	       879	move.c	ELSE_1	FUNCTION_28
0x40017cb	      0xb801000000	                              mov eax, 1	       879	move.c	ELSE_1	FUNCTION_28
0x40017d0	            0xeb05	                           jmp 0x40017d7	       879	move.c	ELSE_1	FUNCTION_28
0x40017d2	      0xb800000000	                              mov eax, 0	       879	move.c	ELSE_1	FUNCTION_28
0x40017d7	             0x1d0	                            add eax, edx	       879	move.c	ELSE_1	FUNCTION_28
0x40017d9	            0x89c2	                            mov edx, eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40017db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       882	move.c	ELSE_1	FUNCTION_28
0x40017df	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	       882	move.c	ELSE_1	FUNCTION_28
0x40017e6	          0x8d1c02	                    lea ebx, [rdx + rax]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40017e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       885	move.c	ELSE_1	FUNCTION_28	CALL_2
0x40017ed	          0x4889c7	                            mov rdi, rax	       885	move.c	ELSE_1	FUNCTION_28	CALL_2
0x40017f0	      0xe800000000	                          call 0x40017f5	       885	move.c	ELSE_1	FUNCTION_28	CALL_2
0x40017f5	            0x85c0	                           test eax, eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40017f7	            0x7407	                            je 0x4001800	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40017f9	      0xb802000000	                              mov eax, 2	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40017fe	            0xeb05	                           jmp 0x4001805	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4001800	      0xb800000000	                              mov eax, 0	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4001805	             0x1d8	                            add eax, ebx	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4001807	        0x4883c418	                           add rsp, 0x18	       888	move.c	ELSE_1	FUNCTION_28
0x400180b	              0x5b	                                 pop rbx	       888	move.c	ELSE_1	FUNCTION_28
0x400180c	              0x5d	                                 pop rbp	       888	move.c	ELSE_1	FUNCTION_28
0x400180d	              0xc3	                                     ret	       888	move.c	ELSE_1	FUNCTION_28
scrollup_clamp	ELSE,1:FOR,0:functions,0:WHILE,0:CALL,5:IF,4:DO,0:SWITCH,0	84
0x4002d49	              0x55	                                push rbp	      1483	move.c	FUNCTION_38
0x4002d4a	          0x4889e5	                            mov rbp, rsp	      1483	move.c	FUNCTION_38
0x4002d4d	              0x53	                                push rbx	      1483	move.c	FUNCTION_38
0x4002d4e	        0x4883ec18	                           sub rsp, 0x18	      1483	move.c	FUNCTION_38
0x4002d52	    0x488b05000000	            mov rax, qword [0x04002d59] 	      1486	move.c	FUNCTION_38	IF_1
0x4002d59	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1486	move.c	FUNCTION_38	IF_1
0x4002d5d	    0x488b05000000	            mov rax, qword [0x04002d64] 	      1486	move.c	FUNCTION_38	IF_1
0x4002d64	          0x488b00	                    mov rax, qword [rax]	      1486	move.c	FUNCTION_38	IF_1
0x4002d67	          0x4839c2	                            cmp rdx, rax	      1486	move.c	FUNCTION_38	IF_1
0x4002d6a	            0x7515	                           jne 0x4002d81	      1486	move.c	FUNCTION_38	IF_1
0x4002d6c	    0x488b05000000	            mov rax, qword [0x04002d73] 	      1488	move.c	FUNCTION_38	IF_1
0x4002d73	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1488	move.c	FUNCTION_38	IF_1
0x4002d79	            0x85c0	                           test eax, eax	      1488	move.c	FUNCTION_38	IF_1
0x4002d7b	     0xf8431010000	                            je 0x4002eb2	      1488	move.c	FUNCTION_38	IF_1
0x4002d81	      0xe800000000	                          call 0x4002d86	      1493	move.c	FUNCTION_38	CALL_1
0x4002d86	    0x488b05000000	            mov rax, qword [0x04002d8d] 	      1501	move.c	FUNCTION_38	CALL_2
0x4002d8d	    0x8b98dc000000	            mov ebx, dword [rax + 0xdc] 	      1501	move.c	FUNCTION_38	CALL_2
0x4002d93	    0x488b05000000	            mov rax, qword [0x04002d9a] 	      1501	move.c	FUNCTION_38	CALL_2
0x4002d9a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1501	move.c	FUNCTION_38	CALL_2
0x4002d9e	          0x4889c7	                            mov rdi, rax	      1501	move.c	FUNCTION_38	CALL_2
0x4002da1	      0xe800000000	                          call 0x4002da6	      1501	move.c	FUNCTION_38	CALL_2
0x4002da6	            0x29c3	                            sub ebx, eax	      1501	move.c	FUNCTION_38	CALL_2
0x4002da8	            0x89da	                            mov edx, ebx	      1501	move.c	FUNCTION_38	CALL_2
0x4002daa	    0x488b05000000	            mov rax, qword [0x04002db1] 	      1502	move.c	FUNCTION_38
0x4002db1	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1502	move.c	FUNCTION_38
0x4002db7	            0x29c2	                            sub edx, eax	      1501	move.c	FUNCTION_38	CALL_2
0x4002db9	            0x89d0	                            mov eax, edx	      1501	move.c	FUNCTION_38	CALL_2
0x4002dbb	          0x8945ec	             mov dword [rbp - 0x14], eax	      1501	move.c	FUNCTION_38	CALL_2
0x4002dbe	    0x488b05000000	            mov rax, qword [0x04002dc5] 	      1506	move.c	FUNCTION_38	IF_2
0x4002dc5	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1506	move.c	FUNCTION_38	IF_2
0x4002dcb	            0x85c0	                           test eax, eax	      1506	move.c	FUNCTION_38	IF_2
0x4002dcd	            0x7436	                            je 0x4002e05	      1506	move.c	FUNCTION_38	IF_2
0x4002dcf	    0x488b05000000	            mov rax, qword [0x04002dd6] 	      1506	move.c	FUNCTION_38	IF_2
0x4002dd6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1506	move.c	FUNCTION_38	IF_2
0x4002ddc	            0x85c0	                           test eax, eax	      1506	move.c	FUNCTION_38	IF_2
0x4002dde	            0x7425	                            je 0x4002e05	      1506	move.c	FUNCTION_38	IF_2
0x4002de0	      0xe800000000	                          call 0x4002de5	      1508	move.c	FUNCTION_38	IF_2	CALL_4
0x4002de5	    0x488b05000000	            mov rax, qword [0x04002dec] 	      1509	move.c	FUNCTION_38	IF_2
0x4002dec	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1509	move.c	FUNCTION_38	IF_2
0x4002df2	    0x488b15000000	            mov rdx, qword [0x04002df9] 	      1509	move.c	FUNCTION_38	IF_2
0x4002df9	    0x8b8aac000000	            mov ecx, dword [rdx + 0xac] 	      1509	move.c	FUNCTION_38	IF_2
0x4002dff	              0x99	                                     cdq	      1509	move.c	FUNCTION_38	IF_2
0x4002e00	            0xf7f9	                                idiv ecx	      1509	move.c	FUNCTION_38	IF_2
0x4002e02	          0x2945ec	             sub dword [rbp - 0x14], eax	      1509	move.c	FUNCTION_38	IF_2
0x4002e05	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1511	move.c	FUNCTION_38	IF_3
0x4002e08	          0x4863d0	                         movsxd rdx, eax	      1511	move.c	FUNCTION_38	IF_3
0x4002e0b	    0x488b05000000	            mov rax, qword [0x04002e12] 	      1511	move.c	FUNCTION_38	IF_3
0x4002e12	          0x4839c2	                            cmp rdx, rax	      1511	move.c	FUNCTION_38	IF_3
0x4002e15	     0xf8c98000000	                            jl 0x4002eb3	      1511	move.c	FUNCTION_38	IF_3
0x4002e1b	    0x488b05000000	            mov rax, qword [0x04002e22] 	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x4002e22	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x4002e28	            0x85c0	                           test eax, eax	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x4002e2a	            0x7e18	                           jle 0x4002e44	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x4002e2c	    0x488b05000000	            mov rax, qword [0x04002e33] 	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x4002e33	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x4002e39	          0x83ea01	                              sub edx, 1	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x4002e3c	    0x899084000000	             mov dword [rax + 0x84], edx	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x4002e42	            0xeb36	                           jmp 0x4002e7a	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x4002e44	    0x488b05000000	            mov rax, qword [0x04002e4b] 	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4002e4b	        0x488d5078	                   lea rdx, [rax + 0x78]	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4002e4f	    0x488b05000000	            mov rax, qword [0x04002e56] 	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4002e56	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4002e5a	      0xbe00000000	                              mov esi, 0	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4002e5f	          0x4889c7	                            mov rdi, rax	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4002e62	      0xe800000000	                          call 0x4002e67	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4002e67	    0x488b05000000	            mov rax, qword [0x04002e6e] 	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
0x4002e6e	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
0x4002e72	        0x4883c201	                              add rdx, 1	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
0x4002e76	        0x48895078	             mov qword [rax + 0x78], rdx	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
0x4002e7a	    0x488b05000000	            mov rax, qword [0x04002e81] 	      1524	move.c	FUNCTION_38	IF_3
0x4002e81	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1524	move.c	FUNCTION_38	IF_3
0x4002e88	        0x4883c201	                              add rdx, 1	      1524	move.c	FUNCTION_38	IF_3
0x4002e8c	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1524	move.c	FUNCTION_38	IF_3
0x4002e93	    0x488b05000000	            mov rax, qword [0x04002e9a] 	      1525	move.c	FUNCTION_38	IF_3
0x4002e9a	    0x488b15000000	            mov rdx, qword [0x04002ea1] 	      1525	move.c	FUNCTION_38	IF_3
0x4002ea1	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1525	move.c	FUNCTION_38	IF_3
0x4002ea7	          0x83e2ce	                     and edx, 0xffffffce	      1525	move.c	FUNCTION_38	IF_3
0x4002eaa	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1525	move.c	FUNCTION_38	IF_3
0x4002eb0	            0xeb01	                           jmp 0x4002eb3	      1525	move.c	FUNCTION_38	IF_3
0x4002eb2	              0x90	                                     nop	      1491	move.c	FUNCTION_38	IF_1
0x4002eb3	        0x4883c418	                           add rsp, 0x18	      1527	move.c	FUNCTION_38
0x4002eb7	              0x5b	                                 pop rbx	      1527	move.c	FUNCTION_38
0x4002eb8	              0x5d	                                 pop rbp	      1527	move.c	FUNCTION_38
0x4002eb9	              0xc3	                                     ret	      1527	move.c	FUNCTION_38
botline_topline	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,1:IF,1:DO,0:SWITCH,0	30
0x400306a	              0x55	                                push rbp	      1612	move.c	FUNCTION_41
0x400306b	          0x4889e5	                            mov rbp, rsp	      1612	move.c	FUNCTION_41
0x400306e	        0x4883ec10	                           sub rsp, 0x10	      1612	move.c	FUNCTION_41
0x4003072	        0x48897df8	                mov qword [rbp - 8], rdi	      1612	move.c	FUNCTION_41
0x4003076	        0x488b45f8	                mov rax, qword [rbp - 8]	      1613	move.c	FUNCTION_41	IF_1
0x400307a	          0x8b4008	                mov eax, dword [rax + 8]	      1613	move.c	FUNCTION_41	IF_1
0x400307d	            0x85c0	                           test eax, eax	      1613	move.c	FUNCTION_41	IF_1
0x400307f	            0x7e42	                           jle 0x40030c3	      1613	move.c	FUNCTION_41	IF_1
0x4003081	        0x488b45f8	                mov rax, qword [rbp - 8]	      1615	move.c	FUNCTION_41	IF_1
0x4003085	          0x488b00	                    mov rax, qword [rax]	      1615	move.c	FUNCTION_41	IF_1
0x4003088	        0x488d5001	                      lea rdx, [rax + 1]	      1615	move.c	FUNCTION_41	IF_1
0x400308c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1615	move.c	FUNCTION_41	IF_1
0x4003090	          0x488910	                    mov qword [rax], rdx	      1615	move.c	FUNCTION_41	IF_1
0x4003093	        0x488b45f8	                mov rax, qword [rbp - 8]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4003097	          0x488b10	                    mov rdx, qword [rax]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x400309a	    0x488b05000000	            mov rax, qword [0x040030a1] 	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030a1	          0x4889d6	                            mov rsi, rdx	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030a4	          0x4889c7	                            mov rdi, rax	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030a7	      0xe800000000	                          call 0x40030ac	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030ac	            0x89c2	                            mov edx, eax	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030ae	        0x488b45f8	                mov rax, qword [rbp - 8]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030b2	          0x8b4008	                mov eax, dword [rax + 8]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030b5	            0x29c2	                            sub edx, eax	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030b7	            0x89d0	                            mov eax, edx	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030b9	          0x8d5001	                      lea edx, [rax + 1]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030c0	          0x895008	                mov dword [rax + 8], edx	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40030c3	              0x90	                                     nop	      1618	move.c	FUNCTION_41
0x40030c4	              0xc9	                                   leave	      1618	move.c	FUNCTION_41
0x40030c5	              0xc3	                                     ret	      1618	move.c	FUNCTION_41
changed_window_setting	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,1:IF,0:DO,0:SWITCH,0	8
0x4000c30	              0x55	                                push rbp	       511	move.c	FUNCTION_9
0x4000c31	          0x4889e5	                            mov rbp, rsp	       511	move.c	FUNCTION_9
0x4000c34	    0x488b05000000	            mov rax, qword [0x04000c3b] 	       512	move.c	FUNCTION_9	CALL_1
0x4000c3b	          0x4889c7	                            mov rdi, rax	       512	move.c	FUNCTION_9	CALL_1
0x4000c3e	      0xe800000000	                          call 0x4000c43	       512	move.c	FUNCTION_9	CALL_1
0x4000c43	              0x90	                                     nop	       513	move.c	FUNCTION_9
0x4000c44	              0x5d	                                 pop rbp	       513	move.c	FUNCTION_9
0x4000c45	              0xc3	                                     ret	       513	move.c	FUNCTION_9
cursor_correct	ELSE,4:FOR,0:functions,0:WHILE,1:CALL,7:IF,15:DO,0:SWITCH,0	236
0x4003e56	              0x55	                                push rbp	      2119	move.c	FUNCTION_47
0x4003e57	          0x4889e5	                            mov rbp, rsp	      2119	move.c	FUNCTION_47
0x4003e5a	        0x4883ec40	                           sub rsp, 0x40	      2119	move.c	FUNCTION_47
0x4003e5e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2119	move.c	FUNCTION_47
0x4003e67	        0x488945f8	                mov qword [rbp - 8], rax	      2119	move.c	FUNCTION_47
0x4003e6b	            0x31c0	                            xor eax, eax	      2119	move.c	FUNCTION_47
0x4003e6d	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2120	move.c	FUNCTION_47
0x4003e74	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      2122	move.c	FUNCTION_47
0x4003e7b	    0x488b05000000	            mov rax, qword [0x04003e82] 	      2132	move.c	FUNCTION_47
0x4003e82	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2132	move.c	FUNCTION_47
0x4003e85	    0x488b05000000	            mov rax, qword [0x04003e8c] 	      2133	move.c	FUNCTION_47
0x4003e8c	          0x8945d8	             mov dword [rbp - 0x28], eax	      2133	move.c	FUNCTION_47
0x4003e8f	    0x8b0500000000	            mov eax, dword [0x04003e95] 	      2135	move.c	FUNCTION_47	IF_1
0x4003e95	            0x85c0	                           test eax, eax	      2135	move.c	FUNCTION_47	IF_1
0x4003e97	            0x7e18	                           jle 0x4003eb1	      2135	move.c	FUNCTION_47	IF_1
0x4003e99	    0x8b0500000000	            mov eax, dword [0x04003e9f] 	      2137	move.c	FUNCTION_47	IF_1
0x4003e9f	          0x83e801	                              sub eax, 1	      2137	move.c	FUNCTION_47	IF_1
0x4003ea2	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2137	move.c	FUNCTION_47	IF_1
0x4003ea5	    0x8b0500000000	            mov eax, dword [0x04003eab] 	      2138	move.c	FUNCTION_47	IF_1
0x4003eab	          0x83e801	                              sub eax, 1	      2138	move.c	FUNCTION_47	IF_1
0x4003eae	          0x8945d8	             mov dword [rbp - 0x28], eax	      2138	move.c	FUNCTION_47	IF_1
0x4003eb1	    0x488b05000000	            mov rax, qword [0x04003eb8] 	      2141	move.c	FUNCTION_47	IF_2
0x4003eb8	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2141	move.c	FUNCTION_47	IF_2
0x4003ebc	        0x4883f801	                              cmp rax, 1	      2141	move.c	FUNCTION_47	IF_2
0x4003ec0	            0x752e	                           jne 0x4003ef0	      2141	move.c	FUNCTION_47	IF_2
0x4003ec2	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      2143	move.c	FUNCTION_47	IF_2
0x4003ec9	    0x488b05000000	            mov rax, qword [0x04003ed0] 	      2144	move.c	FUNCTION_47	IF_2
0x4003ed0	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2144	move.c	FUNCTION_47	IF_2
0x4003ed6	            0x89c2	                            mov edx, eax	      2144	move.c	FUNCTION_47	IF_2
0x4003ed8	          0xc1ea1f	                           shr edx, 0x1f	      2144	move.c	FUNCTION_47	IF_2
0x4003edb	             0x1d0	                            add eax, edx	      2144	move.c	FUNCTION_47	IF_2
0x4003edd	            0xd1f8	                              sar eax, 1	      2144	move.c	FUNCTION_47	IF_2
0x4003edf	          0x8945dc	             mov dword [rbp - 0x24], eax	      2144	move.c	FUNCTION_47	IF_2
0x4003ee2	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2145	move.c	FUNCTION_47	IF_2	IF_3
0x4003ee5	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      2145	move.c	FUNCTION_47	IF_2	IF_3
0x4003ee8	            0x7e06	                           jle 0x4003ef0	      2145	move.c	FUNCTION_47	IF_2	IF_3
0x4003eea	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2146	move.c	FUNCTION_47	IF_2	IF_3
0x4003eed	          0x8945d8	             mov dword [rbp - 0x28], eax	      2146	move.c	FUNCTION_47	IF_2	IF_3
0x4003ef0	      0xe800000000	                          call 0x4003ef5	      2148	move.c	FUNCTION_47	CALL_1
0x4003ef5	    0x488b05000000	            mov rax, qword [0x04003efc] 	      2149	move.c	FUNCTION_47	IF_4
0x4003efc	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2149	move.c	FUNCTION_47	IF_4
0x4003f03	    0x488b05000000	            mov rax, qword [0x04003f0a] 	      2149	move.c	FUNCTION_47	IF_4
0x4003f0a	          0x488b00	                    mov rax, qword [rax]	      2149	move.c	FUNCTION_47	IF_4
0x4003f0d	        0x4883c001	                              add rax, 1	      2149	move.c	FUNCTION_47	IF_4
0x4003f11	          0x4839c2	                            cmp rdx, rax	      2149	move.c	FUNCTION_47	IF_4
0x4003f14	            0x753b	                           jne 0x4003f51	      2149	move.c	FUNCTION_47	IF_4
0x4003f16	    0x8b0500000000	            mov eax, dword [0x04003f1c] 	      2151	move.c	FUNCTION_47	IF_4
0x4003f1c	            0x85c0	                           test eax, eax	      2151	move.c	FUNCTION_47	IF_4
0x4003f1e	            0x7531	                           jne 0x4003f51	      2151	move.c	FUNCTION_47	IF_4
0x4003f20	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2155	move.c	FUNCTION_47	IF_4
0x4003f27	    0x488b05000000	            mov rax, qword [0x04003f2e] 	      2156	move.c	FUNCTION_47	IF_4
0x4003f2e	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2156	move.c	FUNCTION_47	IF_4
0x4003f34	          0x83e801	                              sub eax, 1	      2156	move.c	FUNCTION_47	IF_4
0x4003f37	            0x89c2	                            mov edx, eax	      2156	move.c	FUNCTION_47	IF_4
0x4003f39	          0xc1ea1f	                           shr edx, 0x1f	      2156	move.c	FUNCTION_47	IF_4
0x4003f3c	             0x1d0	                            add eax, edx	      2156	move.c	FUNCTION_47	IF_4
0x4003f3e	            0xd1f8	                              sar eax, 1	      2156	move.c	FUNCTION_47	IF_4
0x4003f40	          0x8945dc	             mov dword [rbp - 0x24], eax	      2156	move.c	FUNCTION_47	IF_4
0x4003f43	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2157	move.c	FUNCTION_47	IF_4	IF_5
0x4003f46	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      2157	move.c	FUNCTION_47	IF_4	IF_5
0x4003f49	            0x7e06	                           jle 0x4003f51	      2157	move.c	FUNCTION_47	IF_4	IF_5
0x4003f4b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2158	move.c	FUNCTION_47	IF_4	IF_5
0x4003f4e	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2158	move.c	FUNCTION_47	IF_4	IF_5
0x4003f51	    0x488b05000000	            mov rax, qword [0x04003f58] 	      2165	move.c	FUNCTION_47
0x4003f58	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2165	move.c	FUNCTION_47
0x4003f5c	        0x488945f0	             mov qword [rbp - 0x10], rax	      2165	move.c	FUNCTION_47
0x4003f60	    0x488b05000000	            mov rax, qword [0x04003f67] 	      2166	move.c	FUNCTION_47	IF_6
0x4003f67	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2166	move.c	FUNCTION_47	IF_6
0x4003f6b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2166	move.c	FUNCTION_47	IF_6
0x4003f6e	            0x4898	                                    cdqe	      2166	move.c	FUNCTION_47	IF_6
0x4003f70	          0x4801d0	                            add rax, rdx	      2166	move.c	FUNCTION_47	IF_6
0x4003f73	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2166	move.c	FUNCTION_47	IF_6
0x4003f77	            0x7f36	                            jg 0x4003faf	      2166	move.c	FUNCTION_47	IF_6
0x4003f79	    0x488b05000000	            mov rax, qword [0x04003f80] 	      2167	move.c	FUNCTION_47	IF_6
0x4003f80	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2167	move.c	FUNCTION_47	IF_6
0x4003f87	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2167	move.c	FUNCTION_47	IF_6
0x4003f8a	            0x4898	                                    cdqe	      2167	move.c	FUNCTION_47	IF_6
0x4003f8c	          0x4829c2	                            sub rdx, rax	      2167	move.c	FUNCTION_47	IF_6
0x4003f8f	          0x4889d0	                            mov rax, rdx	      2167	move.c	FUNCTION_47	IF_6
0x4003f92	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2167	move.c	FUNCTION_47	IF_6
0x4003f96	            0x7e17	                           jle 0x4003faf	      2167	move.c	FUNCTION_47	IF_6
0x4003f98	    0x488b05000000	            mov rax, qword [0x04003f9f] 	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4003f9f	          0x4889c7	                            mov rdi, rax	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4003fa2	      0xe800000000	                          call 0x4003fa7	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4003fa7	            0x85c0	                           test eax, eax	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4003fa9	     0xf8440020000	                            je 0x40041ef	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4003faf	    0x488b05000000	            mov rax, qword [0x04003fb6] 	      2180	move.c	FUNCTION_47
0x4003fb6	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2180	move.c	FUNCTION_47
0x4003fba	        0x488945e0	             mov qword [rbp - 0x20], rax	      2180	move.c	FUNCTION_47
0x4003fbe	    0x488b05000000	            mov rax, qword [0x04003fc5] 	      2181	move.c	FUNCTION_47
0x4003fc5	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      2181	move.c	FUNCTION_47
0x4003fcc	        0x4883e801	                              sub rax, 1	      2181	move.c	FUNCTION_47
0x4003fd0	        0x488945e8	             mov qword [rbp - 0x18], rax	      2181	move.c	FUNCTION_47
0x4003fd4	    0x488b05000000	            mov rax, qword [0x04003fdb] 	      2184	move.c	FUNCTION_47
0x4003fdb	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2184	move.c	FUNCTION_47
0x4003fe1	          0x8945cc	             mov dword [rbp - 0x34], eax	      2184	move.c	FUNCTION_47
0x4003fe4	    0x488b05000000	            mov rax, qword [0x04003feb] 	      2185	move.c	FUNCTION_47
0x4003feb	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      2185	move.c	FUNCTION_47
0x4003ff1	          0x8945d0	             mov dword [rbp - 0x30], eax	      2185	move.c	FUNCTION_47
0x4003ff4	      0xe9d1000000	                           jmp 0x40040ca	      2187	move.c	FUNCTION_47	WHILE_1
0x4003ff9	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4003ffc	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4003fff	            0x7d4d	                           jge 0x400404e	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4004001	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4004004	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4004007	            0x7e08	                           jle 0x4004011	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4004009	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x400400c	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x400400f	            0x7c3d	                            jl 0x400404e	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4004011	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4004015	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4004019	      0xba00000000	                              mov edx, 0	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x400401e	          0x4889ce	                            mov rsi, rcx	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4004021	          0x4889c7	                            mov rdi, rax	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4004024	      0xe800000000	                          call 0x4004029	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4004029	            0x85c0	                           test eax, eax	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x400402b	            0x7406	                            je 0x4004033	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x400402d	        0x8345d001	               add dword [rbp - 0x30], 1	      2193	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8
0x4004031	            0xeb0f	                           jmp 0x4004042	      2193	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8
0x4004033	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x4004037	          0x4889c7	                            mov rdi, rax	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x400403a	      0xe800000000	                          call 0x400403f	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x400403f	           0x145d0	             add dword [rbp - 0x30], eax	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x4004042	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x4004046	        0x4883e801	                              sub rax, 1	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x400404a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x400404e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4004051	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4004054	            0x7d74	                           jge 0x40040ca	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4004056	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4004059	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x400405c	            0x7c08	                            jl 0x4004066	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x400405e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4004061	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4004064	            0x7c64	                            jl 0x40040ca	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4004066	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x400406a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x400406e	      0xbe00000000	                              mov esi, 0	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x4004073	          0x4889c7	                            mov rdi, rax	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x4004076	      0xe800000000	                          call 0x400407b	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x400407b	            0x85c0	                           test eax, eax	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x400407d	            0x7406	                            je 0x4004085	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x400407f	        0x8345cc01	               add dword [rbp - 0x34], 1	      2203	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10
0x4004083	            0xeb0f	                           jmp 0x4004094	      2203	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10
0x4004085	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x4004089	          0x4889c7	                            mov rdi, rax	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x400408c	      0xe800000000	                          call 0x4004091	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x4004091	           0x145cc	             add dword [rbp - 0x34], eax	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x4004094	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x4004098	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x400409c	          0x4839c2	                            cmp rdx, rax	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x400409f	            0x7d1d	                           jge 0x40040be	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x40040a1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40040a5	        0x488d5001	                      lea rdx, [rax + 1]	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40040a9	    0x488b05000000	            mov rax, qword [0x040040b0] 	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40040b0	          0x4889d6	                            mov rsi, rdx	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40040b3	          0x4889c7	                            mov rdi, rax	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40040b6	      0xe800000000	                          call 0x40040bb	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40040bb	           0x145cc	             add dword [rbp - 0x34], eax	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40040be	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x40040c2	        0x4883c001	                              add rax, 1	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x40040c6	        0x488945e0	             mov qword [rbp - 0x20], rax	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x40040ca	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2187	move.c	FUNCTION_47	WHILE_1
0x40040cd	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      2187	move.c	FUNCTION_47	WHILE_1
0x40040d0	            0x7c08	                            jl 0x40040da	      2187	move.c	FUNCTION_47	WHILE_1
0x40040d2	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2187	move.c	FUNCTION_47	WHILE_1
0x40040d5	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      2187	move.c	FUNCTION_47	WHILE_1
0x40040d8	            0x7d11	                           jge 0x40040eb	      2187	move.c	FUNCTION_47	WHILE_1
0x40040da	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2187	move.c	FUNCTION_47	WHILE_1
0x40040de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2187	move.c	FUNCTION_47	WHILE_1
0x40040e2	          0x4839c2	                            cmp rdx, rax	      2187	move.c	FUNCTION_47	WHILE_1
0x40040e5	     0xf8c0effffff	                            jl 0x4003ff9	      2187	move.c	FUNCTION_47	WHILE_1
0x40040eb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2215	move.c	FUNCTION_47	IF_12
0x40040ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2215	move.c	FUNCTION_47	IF_12
0x40040f3	          0x4839c2	                            cmp rdx, rax	      2215	move.c	FUNCTION_47	IF_12
0x40040f6	            0x7409	                            je 0x4004101	      2215	move.c	FUNCTION_47	IF_12
0x40040f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2215	move.c	FUNCTION_47	IF_12
0x40040fc	          0x4885c0	                           test rax, rax	      2215	move.c	FUNCTION_47	IF_12
0x40040ff	            0x7514	                           jne 0x4004115	      2215	move.c	FUNCTION_47	IF_12
0x4004101	    0x488b05000000	            mov rax, qword [0x04004108] 	      2216	move.c	FUNCTION_47	IF_12
0x4004108	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2216	move.c	FUNCTION_47	IF_12
0x400410c	        0x48895038	             mov qword [rax + 0x38], rdx	      2216	move.c	FUNCTION_47	IF_12
0x4004110	      0xe9bb000000	                           jmp 0x40041d0	      2216	move.c	FUNCTION_47	IF_12
0x4004115	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2217	move.c	FUNCTION_47	ELSE_3	IF_13
0x4004119	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2217	move.c	FUNCTION_47	ELSE_3	IF_13
0x400411d	          0x4839c2	                            cmp rdx, rax	      2217	move.c	FUNCTION_47	ELSE_3	IF_13
0x4004120	            0x7e14	                           jle 0x4004136	      2217	move.c	FUNCTION_47	ELSE_3	IF_13
0x4004122	    0x488b05000000	            mov rax, qword [0x04004129] 	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x4004129	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x400412d	        0x48895038	             mov qword [rax + 0x38], rdx	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x4004131	      0xe99a000000	                           jmp 0x40041d0	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x4004136	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x400413a	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x400413e	            0x7d3d	                           jge 0x400417d	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x4004140	    0x488b05000000	            mov rax, qword [0x04004147] 	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x4004147	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x400414b	        0x4883f801	                              cmp rax, 1	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x400414f	            0x7e2c	                           jle 0x400417d	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x4004151	    0x488b05000000	            mov rax, qword [0x04004158] 	      2223	move.c	FUNCTION_47	ELSE_4	IF_14
0x4004158	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2223	move.c	FUNCTION_47	ELSE_4	IF_14
0x400415c	        0x48895038	             mov qword [rax + 0x38], rdx	      2223	move.c	FUNCTION_47	ELSE_4	IF_14
0x4004160	    0x488b05000000	            mov rax, qword [0x04004167] 	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x4004167	    0x488b15000000	            mov rdx, qword [0x0400416e] 	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x400416e	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x4004174	          0x83e2e4	                     and edx, 0xffffffe4	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x4004177	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x400417d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4004181	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4004185	            0x7e49	                           jle 0x40041d0	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4004187	    0x488b05000000	            mov rax, qword [0x0400418e] 	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x400418e	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4004195	    0x488b05000000	            mov rax, qword [0x0400419c] 	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x400419c	          0x488b00	                    mov rax, qword [rax]	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x400419f	          0x4839c2	                            cmp rdx, rax	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x40041a2	            0x7f2c	                            jg 0x40041d0	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x40041a4	    0x488b05000000	            mov rax, qword [0x040041ab] 	      2229	move.c	FUNCTION_47	ELSE_4	IF_15
0x40041ab	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2229	move.c	FUNCTION_47	ELSE_4	IF_15
0x40041af	        0x48895038	             mov qword [rax + 0x38], rdx	      2229	move.c	FUNCTION_47	ELSE_4	IF_15
0x40041b3	    0x488b05000000	            mov rax, qword [0x040041ba] 	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40041ba	    0x488b15000000	            mov rdx, qword [0x040041c1] 	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40041c1	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40041c7	          0x83e2e4	                     and edx, 0xffffffe4	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40041ca	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40041d0	    0x488b05000000	            mov rax, qword [0x040041d7] 	      2234	move.c	FUNCTION_47
0x40041d7	    0x488b15000000	            mov rdx, qword [0x040041de] 	      2234	move.c	FUNCTION_47
0x40041de	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2234	move.c	FUNCTION_47
0x40041e4	          0x80ca80	                             or dl, 0x80	      2234	move.c	FUNCTION_47
0x40041e7	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2234	move.c	FUNCTION_47
0x40041ed	            0xeb01	                           jmp 0x40041f0	      2234	move.c	FUNCTION_47
0x40041ef	              0x90	                                     nop	      2172	move.c	FUNCTION_47	IF_6
0x40041f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2235	move.c	FUNCTION_47
0x40041f4	    0x644833042528	                xor rax, qword fs:[0x28]	      2235	move.c	FUNCTION_47
0x40041fd	            0x7405	                            je 0x4004204	      2235	move.c	FUNCTION_47
0x40041ff	      0xe800000000	                          call 0x4004204	      2235	move.c	FUNCTION_47
0x4004204	              0xc9	                                   leave	      2235	move.c	FUNCTION_47
0x4004205	              0xc3	                                     ret	      2235	move.c	FUNCTION_47
topline_back	ELSE,3:FOR,0:functions,0:WHILE,0:CALL,3:IF,3:DO,0:SWITCH,0	61
0x4002eba	              0x55	                                push rbp	      1538	move.c	FUNCTION_39
0x4002ebb	          0x4889e5	                            mov rbp, rsp	      1538	move.c	FUNCTION_39
0x4002ebe	              0x53	                                push rbx	      1538	move.c	FUNCTION_39
0x4002ebf	        0x4883ec18	                           sub rsp, 0x18	      1538	move.c	FUNCTION_39
0x4002ec3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1538	move.c	FUNCTION_39
0x4002ec7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002ecb	          0x8b5808	                mov ebx, dword [rax + 8]	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002ece	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002ed2	          0x488b10	                    mov rdx, qword [rax]	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002ed5	    0x488b05000000	            mov rax, qword [0x04002edc] 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002edc	          0x4889d6	                            mov rsi, rdx	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002edf	          0x4889c7	                            mov rdi, rax	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002ee2	      0xe800000000	                          call 0x4002ee7	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002ee7	            0x39c3	                            cmp ebx, eax	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002ee9	            0x7d1e	                           jge 0x4002f09	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002eeb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1543	move.c	FUNCTION_39	IF_1
0x4002eef	          0x8b4008	                mov eax, dword [rax + 8]	      1543	move.c	FUNCTION_39	IF_1
0x4002ef2	          0x8d5001	                      lea edx, [rax + 1]	      1543	move.c	FUNCTION_39	IF_1
0x4002ef5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1543	move.c	FUNCTION_39	IF_1
0x4002ef9	          0x895008	                mov dword [rax + 8], edx	      1543	move.c	FUNCTION_39	IF_1
0x4002efc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1544	move.c	FUNCTION_39	IF_1
0x4002f00	    0xc7400c010000	                mov dword [rax + 0xc], 1	      1544	move.c	FUNCTION_39	IF_1
0x4002f07	            0xeb7a	                           jmp 0x4002f83	      1564	move.c	FUNCTION_39
0x4002f09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1549	move.c	FUNCTION_39	ELSE_1
0x4002f0d	          0x488b00	                    mov rax, qword [rax]	      1549	move.c	FUNCTION_39	ELSE_1
0x4002f10	        0x488d50ff	                      lea rdx, [rax - 1]	      1549	move.c	FUNCTION_39	ELSE_1
0x4002f14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1549	move.c	FUNCTION_39	ELSE_1
0x4002f18	          0x488910	                    mov qword [rax], rdx	      1549	move.c	FUNCTION_39	ELSE_1
0x4002f1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1551	move.c	FUNCTION_39	ELSE_1
0x4002f1f	    0xc74008000000	                  mov dword [rax + 8], 0	      1551	move.c	FUNCTION_39	ELSE_1
0x4002f26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4002f2a	          0x488b00	                    mov rax, qword [rax]	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4002f2d	          0x4885c0	                           test rax, rax	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4002f30	            0x7f0d	                            jg 0x4002f3f	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4002f32	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x4002f36	    0xc7400cffffff	      mov dword [rax + 0xc], 0x7fffffff 	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x4002f3d	            0xeb44	                           jmp 0x4002f83	      1564	move.c	FUNCTION_39
0x4002f3f	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002f43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002f47	          0x488b00	                    mov rax, qword [rax]	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002f4a	      0xba00000000	                              mov edx, 0	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002f4f	          0x4889ce	                            mov rsi, rcx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002f52	          0x4889c7	                            mov rdi, rax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002f55	      0xe800000000	                          call 0x4002f5a	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002f5a	            0x85c0	                           test eax, eax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002f5c	            0x740d	                            je 0x4002f6b	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002f5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1559	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4002f62	    0xc7400c010000	                mov dword [rax + 0xc], 1	      1559	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4002f69	            0xeb18	                           jmp 0x4002f83	      1564	move.c	FUNCTION_39
0x4002f6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1562	move.c	FUNCTION_39	ELSE_1	CALL_3
0x4002f6f	          0x488b00	                    mov rax, qword [rax]	      1562	move.c	FUNCTION_39	ELSE_1	CALL_3
0x4002f72	          0x4889c7	                            mov rdi, rax	      1562	move.c	FUNCTION_39	ELSE_1	CALL_3
0x4002f75	      0xe800000000	                          call 0x4002f7a	      1562	move.c	FUNCTION_39	ELSE_1	CALL_3
0x4002f7a	            0x89c2	                            mov edx, eax	      1562	move.c	FUNCTION_39	ELSE_1	CALL_3
0x4002f7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1562	move.c	FUNCTION_39	ELSE_1	CALL_3
0x4002f80	          0x89500c	              mov dword [rax + 0xc], edx	      1562	move.c	FUNCTION_39	ELSE_1	CALL_3
0x4002f83	              0x90	                                     nop	      1564	move.c	FUNCTION_39
0x4002f84	        0x4883c418	                           add rsp, 0x18	      1564	move.c	FUNCTION_39
0x4002f88	              0x5b	                                 pop rbx	      1564	move.c	FUNCTION_39
0x4002f89	              0x5d	                                 pop rbp	      1564	move.c	FUNCTION_39
0x4002f8a	              0xc3	                                     ret	      1564	move.c	FUNCTION_39
topline_botline	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,1:IF,1:DO,0:SWITCH,0	30
0x40030c6	              0x55	                                push rbp	      1627	move.c	FUNCTION_42
0x40030c7	          0x4889e5	                            mov rbp, rsp	      1627	move.c	FUNCTION_42
0x40030ca	        0x4883ec10	                           sub rsp, 0x10	      1627	move.c	FUNCTION_42
0x40030ce	        0x48897df8	                mov qword [rbp - 8], rdi	      1627	move.c	FUNCTION_42
0x40030d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1628	move.c	FUNCTION_42	IF_1
0x40030d6	          0x8b4008	                mov eax, dword [rax + 8]	      1628	move.c	FUNCTION_42	IF_1
0x40030d9	            0x85c0	                           test eax, eax	      1628	move.c	FUNCTION_42	IF_1
0x40030db	            0x7e42	                           jle 0x400311f	      1628	move.c	FUNCTION_42	IF_1
0x40030dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40030e1	          0x488b10	                    mov rdx, qword [rax]	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40030e4	    0x488b05000000	            mov rax, qword [0x040030eb] 	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40030eb	          0x4889d6	                            mov rsi, rdx	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40030ee	          0x4889c7	                            mov rdi, rax	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40030f1	      0xe800000000	                          call 0x40030f6	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40030f6	            0x89c2	                            mov edx, eax	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40030f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40030fc	          0x8b4008	                mov eax, dword [rax + 8]	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40030ff	            0x29c2	                            sub edx, eax	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x4003101	            0x89d0	                            mov eax, edx	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x4003103	          0x8d5001	                      lea edx, [rax + 1]	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x4003106	        0x488b45f8	                mov rax, qword [rbp - 8]	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x400310a	          0x895008	                mov dword [rax + 8], edx	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x400310d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1631	move.c	FUNCTION_42	IF_1
0x4003111	          0x488b00	                    mov rax, qword [rax]	      1631	move.c	FUNCTION_42	IF_1
0x4003114	        0x488d50ff	                      lea rdx, [rax - 1]	      1631	move.c	FUNCTION_42	IF_1
0x4003118	        0x488b45f8	                mov rax, qword [rbp - 8]	      1631	move.c	FUNCTION_42	IF_1
0x400311c	          0x488910	                    mov qword [rax], rdx	      1631	move.c	FUNCTION_42	IF_1
0x400311f	              0x90	                                     nop	      1633	move.c	FUNCTION_42
0x4003120	              0xc9	                                   leave	      1633	move.c	FUNCTION_42
0x4003121	              0xc3	                                     ret	      1633	move.c	FUNCTION_42
scrollup	ELSE,2:FOR,0:functions,0:WHILE,1:CALL,7:IF,8:DO,0:SWITCH,0	160
0x4002715	              0x55	                                push rbp	      1283	move.c	FUNCTION_34
0x4002716	          0x4889e5	                            mov rbp, rsp	      1283	move.c	FUNCTION_34
0x4002719	              0x53	                                push rbx	      1283	move.c	FUNCTION_34
0x400271a	        0x4883ec28	                           sub rsp, 0x28	      1283	move.c	FUNCTION_34
0x400271e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1283	move.c	FUNCTION_34
0x4002722	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1283	move.c	FUNCTION_34
0x4002725	    0x64488b042528	                mov rax, qword fs:[0x28]	      1283	move.c	FUNCTION_34
0x400272e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1283	move.c	FUNCTION_34
0x4002732	            0x31c0	                            xor eax, eax	      1283	move.c	FUNCTION_34
0x4002734	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1287	move.c	FUNCTION_34	IF_1
0x4002738	            0x7413	                            je 0x400274d	      1287	move.c	FUNCTION_34	IF_1
0x400273a	    0x488b05000000	            mov rax, qword [0x04002741] 	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x4002741	          0x4889c7	                            mov rdi, rax	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x4002744	      0xe800000000	                          call 0x4002749	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x4002749	            0x85c0	                           test eax, eax	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x400274b	            0x7515	                           jne 0x4002762	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x400274d	    0x488b05000000	            mov rax, qword [0x04002754] 	      1295	move.c	FUNCTION_34	IF_1
0x4002754	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1295	move.c	FUNCTION_34	IF_1
0x400275a	            0x85c0	                           test eax, eax	      1291	move.c	FUNCTION_34	IF_1
0x400275c	     0xf84f7000000	                            je 0x4002859	      1291	move.c	FUNCTION_34	IF_1
0x4002762	    0x488b05000000	            mov rax, qword [0x04002769] 	      1300	move.c	FUNCTION_34	IF_1
0x4002769	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1300	move.c	FUNCTION_34	IF_1
0x400276d	        0x488945e0	             mov qword [rbp - 0x20], rax	      1300	move.c	FUNCTION_34	IF_1
0x4002771	      0xe986000000	                           jmp 0x40027fc	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4002776	    0x488b05000000	            mov rax, qword [0x0400277d] 	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x400277d	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4002783	            0x85c0	                           test eax, eax	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4002785	            0x7e18	                           jle 0x400279f	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4002787	    0x488b05000000	            mov rax, qword [0x0400278e] 	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x400278e	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4002794	          0x83ea01	                              sub edx, 1	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4002797	    0x899084000000	             mov dword [rax + 0x84], edx	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x400279d	            0xeb5d	                           jmp 0x40027fc	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x400279f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1310	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_3
0x40027a3	            0x7415	                            je 0x40027ba	      1310	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_3
0x40027a5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x40027a9	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x40027ad	      0xbe00000000	                              mov esi, 0	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x40027b2	          0x4889c7	                            mov rdi, rax	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x40027b5	      0xe800000000	                          call 0x40027ba	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x40027ba	    0x488b05000000	            mov rax, qword [0x040027c1] 	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40027c1	          0x488b10	                    mov rdx, qword [rax]	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40027c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40027c8	          0x4839c2	                            cmp rdx, rax	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40027cb	            0x7e46	                           jle 0x4002813	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40027cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1315	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x40027d1	        0x4883c001	                              add rax, 1	      1315	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x40027d5	        0x488945e0	             mov qword [rbp - 0x20], rax	      1315	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x40027d9	    0x488b1d000000	            mov rbx, qword [0x040027e0] 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40027e0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40027e4	    0x488b05000000	            mov rax, qword [0x040027eb] 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40027eb	          0x4889d6	                            mov rsi, rdx	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40027ee	          0x4889c7	                            mov rdi, rax	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40027f1	      0xe800000000	                          call 0x40027f6	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40027f6	    0x898384000000	             mov dword [rbx + 0x84], eax	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40027fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4002800	        0x488d50ff	                      lea rdx, [rax - 1]	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4002804	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4002808	          0x4885c0	                           test rax, rax	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x400280b	     0xf8565ffffff	                           jne 0x4002776	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4002811	            0xeb01	                           jmp 0x4002814	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4002813	              0x90	                                     nop	      1314	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4002814	    0x488b05000000	            mov rax, qword [0x0400281b] 	      1322	move.c	FUNCTION_34	IF_1
0x400281b	    0x488b15000000	            mov rdx, qword [0x04002822] 	      1322	move.c	FUNCTION_34	IF_1
0x4002822	    0x488b8ae80000	            mov rcx, qword [rdx + 0xe8] 	      1322	move.c	FUNCTION_34	IF_1
0x4002829	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1322	move.c	FUNCTION_34	IF_1
0x400282d	    0x488b15000000	            mov rdx, qword [0x04002834] 	      1322	move.c	FUNCTION_34	IF_1
0x4002834	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      1322	move.c	FUNCTION_34	IF_1
0x4002838	          0x4829d6	                            sub rsi, rdx	      1322	move.c	FUNCTION_34	IF_1
0x400283b	          0x4889f2	                            mov rdx, rsi	      1322	move.c	FUNCTION_34	IF_1
0x400283e	          0x4801ca	                            add rdx, rcx	      1322	move.c	FUNCTION_34	IF_1
0x4002841	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1322	move.c	FUNCTION_34	IF_1
0x4002848	    0x488b05000000	            mov rax, qword [0x0400284f] 	      1323	move.c	FUNCTION_34	IF_1
0x400284f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1323	move.c	FUNCTION_34	IF_1
0x4002853	        0x48895078	             mov qword [rax + 0x78], rdx	      1323	move.c	FUNCTION_34	IF_1
0x4002857	            0xeb40	                           jmp 0x4002899	      1323	move.c	FUNCTION_34	IF_1
0x4002859	    0x488b05000000	            mov rax, qword [0x04002860] 	      1328	move.c	FUNCTION_34	ELSE_2
0x4002860	    0x488b15000000	            mov rdx, qword [0x04002867] 	      1328	move.c	FUNCTION_34	ELSE_2
0x4002867	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	      1328	move.c	FUNCTION_34	ELSE_2
0x400286b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1328	move.c	FUNCTION_34	ELSE_2
0x400286f	          0x4801ca	                            add rdx, rcx	      1328	move.c	FUNCTION_34	ELSE_2
0x4002872	        0x48895078	             mov qword [rax + 0x78], rdx	      1328	move.c	FUNCTION_34	ELSE_2
0x4002876	    0x488b05000000	            mov rax, qword [0x0400287d] 	      1329	move.c	FUNCTION_34	ELSE_2
0x400287d	    0x488b15000000	            mov rdx, qword [0x04002884] 	      1329	move.c	FUNCTION_34	ELSE_2
0x4002884	    0x488b8ae80000	            mov rcx, qword [rdx + 0xe8] 	      1329	move.c	FUNCTION_34	ELSE_2
0x400288b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1329	move.c	FUNCTION_34	ELSE_2
0x400288f	          0x4801ca	                            add rdx, rcx	      1329	move.c	FUNCTION_34	ELSE_2
0x4002892	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1329	move.c	FUNCTION_34	ELSE_2
0x4002899	    0x488b05000000	            mov rax, qword [0x040028a0] 	      1332	move.c	FUNCTION_34	IF_5
0x40028a0	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1332	move.c	FUNCTION_34	IF_5
0x40028a4	    0x488b05000000	            mov rax, qword [0x040028ab] 	      1332	move.c	FUNCTION_34	IF_5
0x40028ab	          0x488b00	                    mov rax, qword [rax]	      1332	move.c	FUNCTION_34	IF_5
0x40028ae	          0x4839c2	                            cmp rdx, rax	      1332	move.c	FUNCTION_34	IF_5
0x40028b1	            0x7e15	                           jle 0x40028c8	      1332	move.c	FUNCTION_34	IF_5
0x40028b3	    0x488b05000000	            mov rax, qword [0x040028ba] 	      1333	move.c	FUNCTION_34	IF_5
0x40028ba	    0x488b15000000	            mov rdx, qword [0x040028c1] 	      1333	move.c	FUNCTION_34	IF_5
0x40028c1	          0x488b12	                    mov rdx, qword [rdx]	      1333	move.c	FUNCTION_34	IF_5
0x40028c4	        0x48895078	             mov qword [rax + 0x78], rdx	      1333	move.c	FUNCTION_34	IF_5
0x40028c8	    0x488b05000000	            mov rax, qword [0x040028cf] 	      1334	move.c	FUNCTION_34	IF_6
0x40028cf	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1334	move.c	FUNCTION_34	IF_6
0x40028d6	    0x488b05000000	            mov rax, qword [0x040028dd] 	      1334	move.c	FUNCTION_34	IF_6
0x40028dd	          0x488b00	                    mov rax, qword [rax]	      1334	move.c	FUNCTION_34	IF_6
0x40028e0	        0x4883c001	                              add rax, 1	      1334	move.c	FUNCTION_34	IF_6
0x40028e4	          0x4839c2	                            cmp rdx, rax	      1334	move.c	FUNCTION_34	IF_6
0x40028e7	            0x7e1c	                           jle 0x4002905	      1334	move.c	FUNCTION_34	IF_6
0x40028e9	    0x488b05000000	            mov rax, qword [0x040028f0] 	      1335	move.c	FUNCTION_34	IF_6
0x40028f0	    0x488b15000000	            mov rdx, qword [0x040028f7] 	      1335	move.c	FUNCTION_34	IF_6
0x40028f7	          0x488b12	                    mov rdx, qword [rdx]	      1335	move.c	FUNCTION_34	IF_6
0x40028fa	        0x4883c201	                              add rdx, 1	      1335	move.c	FUNCTION_34	IF_6
0x40028fe	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1335	move.c	FUNCTION_34	IF_6
0x4002905	    0x488b05000000	            mov rax, qword [0x0400290c] 	      1338	move.c	FUNCTION_34	CALL_4
0x400290c	      0xbe00000000	                              mov esi, 0	      1338	move.c	FUNCTION_34	CALL_4
0x4002911	          0x4889c7	                            mov rdi, rax	      1338	move.c	FUNCTION_34	CALL_4
0x4002914	      0xe800000000	                          call 0x4002919	      1338	move.c	FUNCTION_34	CALL_4
0x4002919	    0x488b05000000	            mov rax, qword [0x04002920] 	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4002920	          0x4889c7	                            mov rdi, rax	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4002923	      0xe800000000	                          call 0x4002928	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4002928	            0x85c0	                           test eax, eax	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x400292a	            0x7426	                            je 0x4002952	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x400292c	    0x488b05000000	            mov rax, qword [0x04002933] 	      1344	move.c	FUNCTION_34	CALL_6
0x4002933	        0x488d4878	                   lea rcx, [rax + 0x78]	      1344	move.c	FUNCTION_34	CALL_6
0x4002937	    0x488b05000000	            mov rax, qword [0x0400293e] 	      1344	move.c	FUNCTION_34	CALL_6
0x400293e	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1344	move.c	FUNCTION_34	CALL_6
0x4002942	      0xba00000000	                              mov edx, 0	      1344	move.c	FUNCTION_34	CALL_6
0x4002947	          0x4889ce	                            mov rsi, rcx	      1344	move.c	FUNCTION_34	CALL_6
0x400294a	          0x4889c7	                            mov rdi, rax	      1344	move.c	FUNCTION_34	CALL_6
0x400294d	      0xe800000000	                          call 0x4002952	      1344	move.c	FUNCTION_34	CALL_6
0x4002952	    0x488b05000000	            mov rax, qword [0x04002959] 	      1347	move.c	FUNCTION_34
0x4002959	    0x488b15000000	            mov rdx, qword [0x04002960] 	      1347	move.c	FUNCTION_34
0x4002960	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1347	move.c	FUNCTION_34
0x4002966	          0x83e2ce	                     and edx, 0xffffffce	      1347	move.c	FUNCTION_34
0x4002969	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1347	move.c	FUNCTION_34
0x400296f	    0x488b05000000	            mov rax, qword [0x04002976] 	      1348	move.c	FUNCTION_34	IF_8
0x4002976	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1348	move.c	FUNCTION_34	IF_8
0x400297a	    0x488b05000000	            mov rax, qword [0x04002981] 	      1348	move.c	FUNCTION_34	IF_8
0x4002981	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1348	move.c	FUNCTION_34	IF_8
0x4002985	          0x4839c2	                            cmp rdx, rax	      1348	move.c	FUNCTION_34	IF_8
0x4002988	            0x7d44	                           jge 0x40029ce	      1348	move.c	FUNCTION_34	IF_8
0x400298a	    0x488b05000000	            mov rax, qword [0x04002991] 	      1350	move.c	FUNCTION_34	IF_8
0x4002991	    0x488b15000000	            mov rdx, qword [0x04002998] 	      1350	move.c	FUNCTION_34	IF_8
0x4002998	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      1350	move.c	FUNCTION_34	IF_8
0x400299c	        0x48895038	             mov qword [rax + 0x38], rdx	      1350	move.c	FUNCTION_34	IF_8
0x40029a0	    0x488b05000000	            mov rax, qword [0x040029a7] 	      1351	move.c	FUNCTION_34	IF_8
0x40029a7	    0x488b15000000	            mov rdx, qword [0x040029ae] 	      1351	move.c	FUNCTION_34	IF_8
0x40029ae	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1351	move.c	FUNCTION_34	IF_8
0x40029b4	          0x83e2e0	                     and edx, 0xffffffe0	      1351	move.c	FUNCTION_34	IF_8
0x40029b7	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1351	move.c	FUNCTION_34	IF_8
0x40029bd	    0x488b05000000	            mov rax, qword [0x040029c4] 	      1353	move.c	FUNCTION_34	IF_8	CALL_7
0x40029c4	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1353	move.c	FUNCTION_34	IF_8	CALL_7
0x40029c7	            0x89c7	                            mov edi, eax	      1353	move.c	FUNCTION_34	IF_8	CALL_7
0x40029c9	      0xe800000000	                          call 0x40029ce	      1353	move.c	FUNCTION_34	IF_8	CALL_7
0x40029ce	              0x90	                                     nop	      1355	move.c	FUNCTION_34
0x40029cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	move.c	FUNCTION_34
0x40029d3	    0x644833042528	                xor rax, qword fs:[0x28]	      1355	move.c	FUNCTION_34
0x40029dc	            0x7405	                            je 0x40029e3	      1355	move.c	FUNCTION_34
0x40029de	      0xe800000000	                          call 0x40029e3	      1355	move.c	FUNCTION_34
0x40029e3	        0x4883c428	                           add rsp, 0x28	      1355	move.c	FUNCTION_34
0x40029e7	              0x5b	                                 pop rbx	      1355	move.c	FUNCTION_34
0x40029e8	              0x5d	                                 pop rbp	      1355	move.c	FUNCTION_34
0x40029e9	              0xc3	                                     ret	      1355	move.c	FUNCTION_34
update_curswant	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,1:IF,1:DO,0:SWITCH,0	16
0x4000aee	              0x55	                                push rbp	       466	move.c	FUNCTION_7
0x4000aef	          0x4889e5	                            mov rbp, rsp	       466	move.c	FUNCTION_7
0x4000af2	    0x488b05000000	            mov rax, qword [0x04000af9] 	       467	move.c	FUNCTION_7	IF_1
0x4000af9	          0x8b404c	            mov eax, dword [rax + 0x4c] 	       467	move.c	FUNCTION_7	IF_1
0x4000afc	            0x85c0	                           test eax, eax	       467	move.c	FUNCTION_7	IF_1
0x4000afe	            0x742a	                            je 0x4000b2a	       467	move.c	FUNCTION_7	IF_1
0x4000b00	      0xe800000000	                          call 0x4000b05	       469	move.c	FUNCTION_7	IF_1	CALL_1
0x4000b05	    0x488b05000000	            mov rax, qword [0x04000b0c] 	       470	move.c	FUNCTION_7	IF_1
0x4000b0c	    0x488b15000000	            mov rdx, qword [0x04000b13] 	       470	move.c	FUNCTION_7	IF_1
0x4000b13	    0x8b92d8000000	            mov edx, dword [rdx + 0xd8] 	       470	move.c	FUNCTION_7	IF_1
0x4000b19	          0x895048	             mov dword [rax + 0x48], edx	       470	move.c	FUNCTION_7	IF_1
0x4000b1c	    0x488b05000000	            mov rax, qword [0x04000b23] 	       471	move.c	FUNCTION_7	IF_1
0x4000b23	    0xc7404c000000	               mov dword [rax + 0x4c], 0	       471	move.c	FUNCTION_7	IF_1
0x4000b2a	              0x90	                                     nop	       473	move.c	FUNCTION_7
0x4000b2b	              0x5d	                                 pop rbp	       473	move.c	FUNCTION_7
0x4000b2c	              0xc3	                                     ret	       473	move.c	FUNCTION_7
halfpage	ELSE,7:FOR,0:functions,0:WHILE,6:CALL,24:IF,19:DO,1:SWITCH,0	335
0x4004bd7	              0x55	                                push rbp	      2556	move.c	ELSE_5	FUNCTION_50
0x4004bd8	          0x4889e5	                            mov rbp, rsp	      2556	move.c	ELSE_5	FUNCTION_50
0x4004bdb	              0x53	                                push rbx	      2556	move.c	ELSE_5	FUNCTION_50
0x4004bdc	        0x4883ec38	                           sub rsp, 0x38	      2556	move.c	ELSE_5	FUNCTION_50
0x4004be0	          0x897dcc	             mov dword [rbp - 0x34], edi	      2556	move.c	ELSE_5	FUNCTION_50
0x4004be3	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2556	move.c	ELSE_5	FUNCTION_50
0x4004be7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2557	move.c	ELSE_5	FUNCTION_50
0x4004bef	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x4004bf4	            0x7429	                            je 0x4004c1f	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x4004bf6	    0x488b0d000000	            mov rcx, qword [0x04004bfd] 	      2563	move.c	ELSE_5	FUNCTION_50	IF_1
0x4004bfd	    0x488b05000000	            mov rax, qword [0x04004c04] 	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4004c04	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4004c0a	          0x4863d0	                         movsxd rdx, eax	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4004c0d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4004c11	          0x4839c2	                            cmp rdx, rax	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4004c14	        0x480f4ec2	                         cmovle rax, rdx	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4004c18	    0x488981600200	            mov qword [rcx + 0x260], rax	      2563	move.c	ELSE_5	FUNCTION_50	IF_1
0x4004c1f	    0x488b05000000	            mov rax, qword [0x04004c26] 	      2566	move.c	ELSE_5	FUNCTION_50
0x4004c26	    0x488b90600200	           mov rdx, qword [rax + 0x260] 	      2566	move.c	ELSE_5	FUNCTION_50
0x4004c2d	    0x488b05000000	            mov rax, qword [0x04004c34] 	      2566	move.c	ELSE_5	FUNCTION_50
0x4004c34	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2566	move.c	ELSE_5	FUNCTION_50
0x4004c3a	            0x4898	                                    cdqe	      2566	move.c	ELSE_5	FUNCTION_50
0x4004c3c	          0x4839c2	                            cmp rdx, rax	      2566	move.c	ELSE_5	FUNCTION_50
0x4004c3f	        0x480f4ec2	                         cmovle rax, rdx	      2566	move.c	ELSE_5	FUNCTION_50
0x4004c43	          0x8945e0	             mov dword [rbp - 0x20], eax	      2565	move.c	ELSE_5	FUNCTION_50
0x4004c46	      0xe800000000	                          call 0x4004c4b	      2568	move.c	ELSE_5	FUNCTION_50	CALL_1
0x4004c4b	      0xe800000000	                          call 0x4004c50	      2569	move.c	ELSE_5	FUNCTION_50	CALL_2
0x4004c50	    0x488b05000000	            mov rax, qword [0x04004c57] 	      2570	move.c	ELSE_5	FUNCTION_50
0x4004c57	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      2570	move.c	ELSE_5	FUNCTION_50
0x4004c5d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2570	move.c	ELSE_5	FUNCTION_50
0x4004c60	    0x488b05000000	            mov rax, qword [0x04004c67] 	      2572	move.c	ELSE_5	FUNCTION_50
0x4004c67	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      2572	move.c	ELSE_5	FUNCTION_50
0x4004c6d	           0x145e4	             add dword [rbp - 0x1c], eax	      2572	move.c	ELSE_5	FUNCTION_50
0x4004c70	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2574	move.c	ELSE_5	FUNCTION_50	IF_2
0x4004c74	     0xf8424040000	                            je 0x400509e	      2574	move.c	ELSE_5	FUNCTION_50	IF_2
0x4004c7a	      0xe90a020000	                           jmp 0x4004e89	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004c7f	    0x488b05000000	            mov rax, qword [0x04004c86] 	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4004c86	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4004c8c	            0x85c0	                           test eax, eax	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4004c8e	            0x7e37	                           jle 0x4004cc7	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4004c90	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      2584	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4004c97	        0x836de001	               sub dword [rbp - 0x20], 1	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4004c9b	        0x837de000	               cmp dword [rbp - 0x20], 0	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4004c9f	            0x790b	                           jns 0x4004cac	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4004ca1	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4004ca6	     0xf8f06020000	                            jg 0x4004eb2	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4004cac	    0x488b05000000	            mov rax, qword [0x04004cb3] 	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4004cb3	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4004cb9	          0x83ea01	                              sub edx, 1	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4004cbc	    0x899084000000	             mov dword [rax + 0x84], edx	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4004cc2	      0xe9d7000000	                           jmp 0x4004d9e	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4004cc7	    0x488b05000000	            mov rax, qword [0x04004cce] 	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4004cce	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4004cd2	          0x4889c7	                            mov rdi, rax	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4004cd5	      0xe800000000	                          call 0x4004cda	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4004cda	          0x8945dc	             mov dword [rbp - 0x24], eax	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4004cdd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2593	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4004ce0	          0x2945e0	             sub dword [rbp - 0x20], eax	      2593	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4004ce3	        0x837de000	               cmp dword [rbp - 0x20], 0	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4004ce7	            0x790b	                           jns 0x4004cf4	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4004ce9	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4004cee	     0xf8fc1010000	                            jg 0x4004eb5	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4004cf4	    0x488b05000000	            mov rax, qword [0x04004cfb] 	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4004cfb	        0x488d5078	                   lea rdx, [rax + 0x78]	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4004cff	    0x488b05000000	            mov rax, qword [0x04004d06] 	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4004d06	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4004d0a	      0xbe00000000	                              mov esi, 0	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4004d0f	          0x4889c7	                            mov rdi, rax	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4004d12	      0xe800000000	                          call 0x4004d17	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4004d17	    0x488b05000000	            mov rax, qword [0x04004d1e] 	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4004d1e	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4004d22	        0x4883c201	                              add rdx, 1	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4004d26	        0x48895078	             mov qword [rax + 0x78], rdx	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4004d2a	    0x488b1d000000	            mov rbx, qword [0x04004d31] 	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4004d31	    0x488b05000000	            mov rax, qword [0x04004d38] 	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4004d38	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4004d3c	    0x488b05000000	            mov rax, qword [0x04004d43] 	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4004d43	          0x4889d6	                            mov rsi, rdx	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4004d46	          0x4889c7	                            mov rdi, rax	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4004d49	      0xe800000000	                          call 0x4004d4e	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4004d4e	    0x898384000000	             mov dword [rbx + 0x84], eax	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4004d54	    0x488b05000000	            mov rax, qword [0x04004d5b] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d5b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d5f	    0x488b05000000	            mov rax, qword [0x04004d66] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d66	          0x488b00	                    mov rax, qword [rax]	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d69	          0x4839c2	                            cmp rdx, rax	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d6c	            0x7d30	                           jge 0x4004d9e	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d6e	    0x488b05000000	            mov rax, qword [0x04004d75] 	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d75	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d79	        0x4883c201	                              add rdx, 1	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d7d	        0x48895038	             mov qword [rax + 0x38], rdx	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d81	    0x488b05000000	            mov rax, qword [0x04004d88] 	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d88	    0x488b15000000	            mov rdx, qword [0x04004d8f] 	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d8f	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d95	          0x83e2f1	                     and edx, 0xfffffff1	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d98	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4004d9e	    0x488b05000000	            mov rax, qword [0x04004da5] 	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004da5	    0x488b15000000	            mov rdx, qword [0x04004dac] 	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004dac	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004db2	          0x83e2ee	                     and edx, 0xffffffee	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004db5	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004dbb	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004dbe	            0x4898	                                    cdqe	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004dc0	        0x480145e8	            add qword [rbp - 0x18], rax 	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004dc4	    0x488b05000000	            mov rax, qword [0x04004dcb] 	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4004dcb	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4004dd1	            0x85c0	                           test eax, eax	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4004dd3	            0x7422	                            je 0x4004df7	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4004dd5	    0x488b05000000	            mov rax, qword [0x04004ddc] 	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4004ddc	    0x488b15000000	            mov rdx, qword [0x04004de3] 	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4004de3	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4004de9	          0x83e29f	                     and edx, 0xffffff9f	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4004dec	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4004df2	      0xe992000000	                           jmp 0x4004e89	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4004df7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2626	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2
0x4004dfa	           0x145e4	             add dword [rbp - 0x1c], eax	      2626	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2
0x4004dfd	    0x488b05000000	            mov rax, qword [0x04004e04] 	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4004e04	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4004e0b	          0x4889c7	                            mov rdi, rax	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4004e0e	      0xe800000000	                          call 0x4004e13	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4004e13	          0x8945dc	             mov dword [rbp - 0x24], eax	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4004e16	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2630	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4004e19	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2630	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4004e1c	            0x7e02	                           jle 0x4004e20	      2630	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4004e1e	            0xeb69	                           jmp 0x4004e89	      2631	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4004e20	    0x488b05000000	            mov rax, qword [0x04004e27] 	      2634	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e27	    0x488d90e80000	                   lea rdx, [rax + 0xe8]	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4004e2e	    0x488b05000000	            mov rax, qword [0x04004e35] 	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4004e35	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4004e3c	      0xbe00000000	                              mov esi, 0	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4004e41	          0x4889c7	                            mov rdi, rax	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4004e44	      0xe800000000	                          call 0x4004e49	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4004e49	    0x488b05000000	            mov rax, qword [0x04004e50] 	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e50	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e57	        0x4883c201	                              add rdx, 1	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e5b	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e62	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2637	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e65	          0x2945e4	             sub dword [rbp - 0x1c], eax	      2637	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e68	    0x488b05000000	            mov rax, qword [0x04004e6f] 	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e6f	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e76	    0x488b05000000	            mov rax, qword [0x04004e7d] 	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e7d	          0x488b00	                    mov rax, qword [rax]	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e80	          0x4839c2	                            cmp rdx, rax	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e83	     0xf8e74ffffff	                           jle 0x4004dfd	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4004e89	        0x837de000	               cmp dword [rbp - 0x20], 0	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004e8d	            0x7e27	                           jle 0x4004eb6	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004e8f	    0x488b05000000	            mov rax, qword [0x04004e96] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004e96	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004e9d	    0x488b05000000	            mov rax, qword [0x04004ea4] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004ea4	          0x488b00	                    mov rax, qword [rax]	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004ea7	          0x4839c2	                            cmp rdx, rax	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004eaa	     0xf8ecffdffff	                           jle 0x4004c7f	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004eb0	            0xeb04	                           jmp 0x4004eb6	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4004eb2	              0x90	                                     nop	      2586	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4004eb3	            0xeb01	                           jmp 0x4004eb6	      2586	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4004eb5	              0x90	                                     nop	      2595	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4004eb6	        0x837de000	               cmp dword [rbp - 0x20], 0	      2646	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9
0x4004eba	     0xf8ebf020000	                           jle 0x400517f	      2646	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9
0x4004ec0	    0x488b05000000	            mov rax, qword [0x04004ec7] 	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4004ec7	          0x4889c7	                            mov rdi, rax	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4004eca	      0xe800000000	                          call 0x4004ecf	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4004ecf	            0x85c0	                           test eax, eax	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4004ed1	            0x745e	                            je 0x4004f31	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4004ed3	            0xeb36	                           jmp 0x4004f0b	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004ed5	    0x488b05000000	            mov rax, qword [0x04004edc] 	      2655	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004edc	        0x488d5038	                   lea rdx, [rax + 0x38]	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4004ee0	    0x488b05000000	            mov rax, qword [0x04004ee7] 	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4004ee7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4004eeb	      0xbe00000000	                              mov esi, 0	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4004ef0	          0x4889c7	                            mov rdi, rax	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4004ef3	      0xe800000000	                          call 0x4004ef8	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4004ef8	    0x488b05000000	            mov rax, qword [0x04004eff] 	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004eff	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f03	        0x4883c201	                              add rdx, 1	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f07	        0x48895038	             mov qword [rax + 0x38], rdx	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f0b	        0x836de001	               sub dword [rbp - 0x20], 1	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f0f	        0x837de000	               cmp dword [rbp - 0x20], 0	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f13	            0x783b	                            js 0x4004f50	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f15	    0x488b05000000	            mov rax, qword [0x04004f1c] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f1c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f20	    0x488b05000000	            mov rax, qword [0x04004f27] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f27	          0x488b00	                    mov rax, qword [rax]	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f2a	          0x4839c2	                            cmp rdx, rax	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f2d	            0x7ca6	                            jl 0x4004ed5	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f2f	            0xeb1f	                           jmp 0x4004f50	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4004f31	    0x488b05000000	            mov rax, qword [0x04004f38] 	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4004f38	    0x488b15000000	            mov rdx, qword [0x04004f3f] 	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4004f3f	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4004f43	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4004f46	          0x4863d2	                         movsxd rdx, edx	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4004f49	          0x4801ca	                            add rdx, rcx	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4004f4c	        0x48895038	             mov qword [rax + 0x38], rdx	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4004f50	      0xe800000000	                          call 0x4004f55	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	CALL_10
0x4004f55	      0xe925020000	                           jmp 0x400517f	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	CALL_10
0x4004f5a	    0x488b05000000	            mov rax, qword [0x04004f61] 	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4004f61	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4004f67	    0x488b05000000	            mov rax, qword [0x04004f6e] 	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4004f6e	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4004f72	    0x488b05000000	            mov rax, qword [0x04004f79] 	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4004f79	          0x4889d6	                            mov rsi, rdx	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4004f7c	          0x4889c7	                            mov rdi, rax	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4004f7f	      0xe800000000	                          call 0x4004f84	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4004f84	            0x39c3	                            cmp ebx, eax	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4004f86	            0x7d34	                           jge 0x4004fbc	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4004f88	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      2690	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4004f8f	        0x836de001	               sub dword [rbp - 0x20], 1	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4004f93	        0x837de000	               cmp dword [rbp - 0x20], 0	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4004f97	            0x790b	                           jns 0x4004fa4	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4004f99	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4004f9e	     0xf8f17010000	                            jg 0x40050bb	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4004fa4	    0x488b05000000	            mov rax, qword [0x04004fab] 	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4004fab	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4004fb1	          0x83c201	                              add edx, 1	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4004fb4	    0x899084000000	             mov dword [rax + 0x84], edx	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4004fba	            0xeb7b	                           jmp 0x4005037	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4004fbc	    0x488b05000000	            mov rax, qword [0x04004fc3] 	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4004fc3	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4004fc7	        0x4883e801	                              sub rax, 1	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4004fcb	          0x4889c7	                            mov rdi, rax	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4004fce	      0xe800000000	                          call 0x4004fd3	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4004fd3	          0x8945dc	             mov dword [rbp - 0x24], eax	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4004fd6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2699	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4004fd9	          0x2945e0	             sub dword [rbp - 0x20], eax	      2699	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4004fdc	        0x837de000	               cmp dword [rbp - 0x20], 0	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4004fe0	            0x790b	                           jns 0x4004fed	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4004fe2	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4004fe7	     0xf8fd1000000	                            jg 0x40050be	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4004fed	    0x488b05000000	            mov rax, qword [0x04004ff4] 	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4004ff4	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4004ff8	        0x4883ea01	                              sub rdx, 1	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4004ffc	        0x48895078	             mov qword [rax + 0x78], rdx	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4005000	    0x488b05000000	            mov rax, qword [0x04005007] 	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4005007	        0x488d4878	                   lea rcx, [rax + 0x78]	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x400500b	    0x488b05000000	            mov rax, qword [0x04005012] 	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4005012	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4005016	      0xba00000000	                              mov edx, 0	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x400501b	          0x4889ce	                            mov rsi, rcx	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x400501e	          0x4889c7	                            mov rdi, rax	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4005021	      0xe800000000	                          call 0x4005026	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4005026	    0x488b05000000	            mov rax, qword [0x0400502d] 	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x400502d	    0xc78084000000	               mov dword [rax + 0x84], 0	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4005037	    0x488b05000000	            mov rax, qword [0x0400503e] 	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x400503e	    0x488b15000000	            mov rdx, qword [0x04005045] 	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4005045	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x400504b	          0x83e28e	                     and edx, 0xffffff8e	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x400504e	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4005054	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2712	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4005057	            0x4898	                                    cdqe	      2712	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4005059	        0x480145e8	            add qword [rbp - 0x18], rax 	      2712	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x400505d	    0x488b05000000	            mov rax, qword [0x04005064] 	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4005064	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4005068	        0x4883f801	                              cmp rax, 1	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x400506c	            0x7e30	                           jle 0x400509e	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x400506e	    0x488b05000000	            mov rax, qword [0x04005075] 	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4005075	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4005079	        0x4883ea01	                              sub rdx, 1	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x400507d	        0x48895038	             mov qword [rax + 0x38], rdx	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4005081	    0x488b05000000	            mov rax, qword [0x04005088] 	      2717	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4005088	    0x488b15000000	            mov rdx, qword [0x0400508f] 	      2717	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x400508f	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2717	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4005095	          0x83e2f1	                     and edx, 0xfffffff1	      2717	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4005098	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2717	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x400509e	        0x837de000	               cmp dword [rbp - 0x20], 0	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40050a2	            0x7e1b	                           jle 0x40050bf	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40050a4	    0x488b05000000	            mov rax, qword [0x040050ab] 	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40050ab	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40050af	        0x4883f801	                              cmp rax, 1	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40050b3	     0xf8fa1feffff	                            jg 0x4004f5a	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40050b9	            0xeb04	                           jmp 0x40050bf	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40050bb	              0x90	                                     nop	      2692	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x40050bc	            0xeb01	                           jmp 0x40050bf	      2692	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x40050be	              0x90	                                     nop	      2701	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x40050bf	        0x837de000	               cmp dword [rbp - 0x20], 0	      2725	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16
0x40050c3	     0xf8eb6000000	                           jle 0x400517f	      2725	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16
0x40050c9	    0x488b05000000	            mov rax, qword [0x040050d0] 	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x40050d0	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x40050d4	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x40050d7	            0x4898	                                    cdqe	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x40050d9	          0x4839c2	                            cmp rdx, rax	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x40050dc	            0x7f14	                            jg 0x40050f2	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x40050de	    0x488b05000000	            mov rax, qword [0x040050e5] 	      2728	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x40050e5	    0x48c740380100	               mov qword [rax + 0x38], 1	      2728	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x40050ed	      0xe98d000000	                           jmp 0x400517f	      2728	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x40050f2	    0x488b05000000	            mov rax, qword [0x040050f9] 	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x40050f9	          0x4889c7	                            mov rdi, rax	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x40050fc	      0xe800000000	                          call 0x4005101	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x4005101	            0x85c0	                           test eax, eax	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x4005103	            0x7458	                            je 0x400515d	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x4005105	            0xeb39	                           jmp 0x4005140	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4005107	    0x488b05000000	            mov rax, qword [0x0400510e] 	      2735	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400510e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2735	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4005112	        0x4883ea01	                              sub rdx, 1	      2735	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4005116	        0x48895038	             mov qword [rax + 0x38], rdx	      2735	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400511a	    0x488b05000000	            mov rax, qword [0x04005121] 	      2737	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4005121	        0x488d4838	                   lea rcx, [rax + 0x38]	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x4005125	    0x488b05000000	            mov rax, qword [0x0400512c] 	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x400512c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x4005130	      0xba00000000	                              mov edx, 0	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x4005135	          0x4889ce	                            mov rsi, rcx	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x4005138	          0x4889c7	                            mov rdi, rax	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x400513b	      0xe800000000	                          call 0x4005140	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x4005140	        0x836de001	               sub dword [rbp - 0x20], 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4005144	        0x837de000	               cmp dword [rbp - 0x20], 0	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4005148	            0x7835	                            js 0x400517f	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400514a	    0x488b05000000	            mov rax, qword [0x04005151] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4005151	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4005155	        0x4883f801	                              cmp rax, 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4005159	            0x7fac	                            jg 0x4005107	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400515b	            0xeb22	                           jmp 0x400517f	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400515d	    0x488b05000000	            mov rax, qword [0x04005164] 	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x4005164	    0x488b15000000	            mov rdx, qword [0x0400516b] 	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x400516b	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x400516f	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x4005172	          0x4863d2	                         movsxd rdx, edx	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x4005175	          0x4829d1	                            sub rcx, rdx	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x4005178	          0x4889ca	                            mov rdx, rcx	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x400517b	        0x48895038	             mov qword [rax + 0x38], rdx	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x400517f	      0xe800000000	                          call 0x4005184	      2762	move.c	FUNCTION_50	ELSE_5	CALL_20
0x4005184	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x4005188	           0xf94c0	                                 sete al	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x400518b	           0xfb6d0	                           movzx edx, al	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x400518e	    0x488b05000000	            mov rax, qword [0x04005195] 	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x4005195	            0x89d6	                            mov esi, edx	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x4005197	          0x4889c7	                            mov rdi, rax	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x400519a	      0xe800000000	                          call 0x400519f	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x400519f	      0xe800000000	                          call 0x40051a4	      2767	move.c	FUNCTION_50	ELSE_5	CALL_22
0x40051a4	      0xbf06000000	                              mov edi, 6	      2768	move.c	FUNCTION_50	ELSE_5	CALL_23
0x40051a9	      0xe800000000	                          call 0x40051ae	      2768	move.c	FUNCTION_50	ELSE_5	CALL_23
0x40051ae	      0xbf0a000000	                            mov edi, 0xa	      2769	move.c	FUNCTION_50	ELSE_5	CALL_24
0x40051b3	      0xe800000000	                          call 0x40051b8	      2769	move.c	FUNCTION_50	ELSE_5	CALL_24
0x40051b8	              0x90	                                     nop	      2770	move.c	FUNCTION_50	ELSE_5
0x40051b9	        0x4883c438	                           add rsp, 0x38	      2770	move.c	FUNCTION_50	ELSE_5
0x40051bd	              0x5b	                                 pop rbx	      2770	move.c	FUNCTION_50	ELSE_5
0x40051be	              0x5d	                                 pop rbp	      2770	move.c	FUNCTION_50	ELSE_5
0x40051bf	              0xc3	                                     ret	      2770	move.c	FUNCTION_50	ELSE_5
validate_cursor	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,2:IF,1:DO,0:SWITCH,0	15
0x4000e94	              0x55	                                push rbp	       633	move.c	FUNCTION_21
0x4000e95	          0x4889e5	                            mov rbp, rsp	       633	move.c	FUNCTION_21
0x4000e98	    0x488b05000000	            mov rax, qword [0x04000e9f] 	       634	move.c	FUNCTION_21	CALL_1
0x4000e9f	          0x4889c7	                            mov rdi, rax	       634	move.c	FUNCTION_21	CALL_1
0x4000ea2	      0xe800000000	                          call 0x4000ea7	       634	move.c	FUNCTION_21	CALL_1
0x4000ea7	    0x488b05000000	            mov rax, qword [0x04000eae] 	       635	move.c	FUNCTION_21	IF_1
0x4000eae	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       635	move.c	FUNCTION_21	IF_1
0x4000eb4	          0x83e003	                              and eax, 3	       635	move.c	FUNCTION_21	IF_1
0x4000eb7	          0x83f803	                              cmp eax, 3	       635	move.c	FUNCTION_21	IF_1
0x4000eba	            0x740a	                            je 0x4000ec6	       635	move.c	FUNCTION_21	IF_1
0x4000ebc	      0xbf01000000	                              mov edi, 1	       636	move.c	FUNCTION_21	CALL_2
0x4000ec1	      0xe800000000	                          call 0x4000ec6	       636	move.c	FUNCTION_21	CALL_2
0x4000ec6	              0x90	                                     nop	       637	move.c	FUNCTION_21
0x4000ec7	              0x5d	                                 pop rbp	       637	move.c	FUNCTION_21
0x4000ec8	              0xc3	                                     ret	       637	move.c	FUNCTION_21
curwin_col_off	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,1:IF,0:DO,0:SWITCH,0	7
0x400180e	              0x55	                                push rbp	       892	move.c	FUNCTION_29
0x400180f	          0x4889e5	                            mov rbp, rsp	       892	move.c	FUNCTION_29
0x4001812	    0x488b05000000	            mov rax, qword [0x04001819] 	       893	move.c	FUNCTION_29	CALL_1
0x4001819	          0x4889c7	                            mov rdi, rax	       893	move.c	FUNCTION_29	CALL_1
0x400181c	      0xe800000000	                          call 0x4001821	       893	move.c	FUNCTION_29	CALL_1
0x4001821	              0x5d	                                 pop rbp	       894	move.c	FUNCTION_29
0x4001822	              0xc3	                                     ret	       894	move.c	FUNCTION_29
check_topfill	ELSE,1:FOR,0:functions,0:WHILE,0:CALL,1:IF,4:DO,0:SWITCH,0	54
0x40029ea	              0x55	                                push rbp	      1365	move.c	FUNCTION_35
0x40029eb	          0x4889e5	                            mov rbp, rsp	      1365	move.c	FUNCTION_35
0x40029ee	        0x4883ec20	                           sub rsp, 0x20	      1365	move.c	FUNCTION_35
0x40029f2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1365	move.c	FUNCTION_35
0x40029f6	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1365	move.c	FUNCTION_35
0x40029f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1368	move.c	FUNCTION_35	IF_1
0x40029fd	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1368	move.c	FUNCTION_35	IF_1
0x4002a03	            0x85c0	                           test eax, eax	      1368	move.c	FUNCTION_35	IF_1
0x4002a05	     0xf8ea9000000	                           jle 0x4002ab4	      1368	move.c	FUNCTION_35	IF_1
0x4002a0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4002a0f	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4002a13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4002a17	      0xba01000000	                              mov edx, 1	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4002a1c	          0x4889ce	                            mov rsi, rcx	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4002a1f	          0x4889c7	                            mov rdi, rax	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4002a22	      0xe800000000	                          call 0x4002a27	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4002a27	          0x8945fc	                mov dword [rbp - 4], eax	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4002a2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4002a2e	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4002a34	          0x8b45fc	                mov eax, dword [rbp - 4]	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4002a37	             0x1c2	                            add edx, eax	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4002a39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4002a3d	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4002a43	            0x39c2	                            cmp edx, eax	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4002a45	            0x7e6d	                           jle 0x4002ab4	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4002a47	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a4b	            0x7432	                            je 0x4002a7f	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a51	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a55	        0x4883f801	                              cmp rax, 1	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a59	            0x7e24	                           jle 0x4002a7f	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a5b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a5f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a63	        0x488d50ff	                      lea rdx, [rax - 1]	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a6b	        0x48895078	             mov qword [rax + 0x78], rdx	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1376	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a73	    0xc78084000000	               mov dword [rax + 0x84], 0	      1376	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002a7d	            0xeb35	                           jmp 0x4002ab4	      1386	move.c	FUNCTION_35
0x4002a7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4002a83	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4002a89	          0x2b45fc	                sub eax, dword [rbp - 4]	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4002a8c	            0x89c2	                            mov edx, eax	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4002a8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4002a92	    0x899084000000	             mov dword [rax + 0x84], edx	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4002a98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4002a9c	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4002aa2	            0x85c0	                           test eax, eax	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4002aa4	            0x790e	                           jns 0x4002ab4	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4002aa6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4002aaa	    0xc78084000000	               mov dword [rax + 0x84], 0	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4002ab4	              0x90	                                     nop	      1386	move.c	FUNCTION_35
0x4002ab5	              0xc9	                                   leave	      1386	move.c	FUNCTION_35
0x4002ab6	              0xc3	                                     ret	      1386	move.c	FUNCTION_35
validate_botline	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,1:IF,1:DO,0:SWITCH,0	13
0x4000dd0	              0x55	                                push rbp	       589	move.c	FUNCTION_16
0x4000dd1	          0x4889e5	                            mov rbp, rsp	       589	move.c	FUNCTION_16
0x4000dd4	    0x488b05000000	            mov rax, qword [0x04000ddb] 	       590	move.c	FUNCTION_16	IF_1
0x4000ddb	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       590	move.c	FUNCTION_16	IF_1
0x4000de1	          0x83e020	                           and eax, 0x20	       590	move.c	FUNCTION_16	IF_1
0x4000de4	            0x85c0	                           test eax, eax	       590	move.c	FUNCTION_16	IF_1
0x4000de6	            0x750f	                           jne 0x4000df7	       590	move.c	FUNCTION_16	IF_1
0x4000de8	    0x488b05000000	            mov rax, qword [0x04000def] 	       591	move.c	FUNCTION_16	CALL_1
0x4000def	          0x4889c7	                            mov rdi, rax	       591	move.c	FUNCTION_16	CALL_1
0x4000df2	      0xe849f2ffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x4000df7	              0x90	                                     nop	       592	move.c	FUNCTION_16
0x4000df8	              0x5d	                                 pop rbp	       592	move.c	FUNCTION_16
0x4000df9	              0xc3	                                     ret	       592	move.c	FUNCTION_16
get_scroll_overlap	ELSE,5:FOR,0:functions,0:WHILE,0:CALL,8:IF,8:DO,0:SWITCH,0	138
0x4004a01	              0x55	                                push rbp	      2496	move.c	FUNCTION_49
0x4004a02	          0x4889e5	                            mov rbp, rsp	      2496	move.c	FUNCTION_49
0x4004a05	        0x4883ec60	                           sub rsp, 0x60	      2496	move.c	FUNCTION_49
0x4004a09	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2496	move.c	FUNCTION_49
0x4004a0d	          0x8975a4	             mov dword [rbp - 0x5c], esi	      2496	move.c	FUNCTION_49
0x4004a10	    0x488b05000000	            mov rax, qword [0x04004a17] 	      2498	move.c	FUNCTION_49
0x4004a17	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2498	move.c	FUNCTION_49
0x4004a1d	          0x83e802	                              sub eax, 2	      2498	move.c	FUNCTION_49
0x4004a20	          0x8945bc	             mov dword [rbp - 0x44], eax	      2498	move.c	FUNCTION_49
0x4004a23	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2502	move.c	FUNCTION_49	IF_1
0x4004a27	          0x8b4008	                mov eax, dword [rax + 8]	      2502	move.c	FUNCTION_49	IF_1
0x4004a2a	            0x85c0	                           test eax, eax	      2502	move.c	FUNCTION_49	IF_1
0x4004a2c	            0x7e0d	                           jle 0x4004a3b	      2502	move.c	FUNCTION_49	IF_1
0x4004a2e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2503	move.c	FUNCTION_49	IF_1
0x4004a32	    0xc7400c010000	                mov dword [rax + 0xc], 1	      2503	move.c	FUNCTION_49	IF_1
0x4004a39	            0xeb18	                           jmp 0x4004a53	      2503	move.c	FUNCTION_49	IF_1
0x4004a3b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2505	move.c	FUNCTION_49	CALL_1
0x4004a3f	          0x488b00	                    mov rax, qword [rax]	      2505	move.c	FUNCTION_49	CALL_1
0x4004a42	          0x4889c7	                            mov rdi, rax	      2505	move.c	FUNCTION_49	CALL_1
0x4004a45	      0xe800000000	                          call 0x4004a4a	      2505	move.c	FUNCTION_49	CALL_1
0x4004a4a	            0x89c2	                            mov edx, eax	      2505	move.c	FUNCTION_49	CALL_1
0x4004a4c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2505	move.c	FUNCTION_49	CALL_1
0x4004a50	          0x89500c	              mov dword [rax + 0xc], edx	      2505	move.c	FUNCTION_49	CALL_1
0x4004a53	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2509	move.c	FUNCTION_49
0x4004a57	          0x8b400c	              mov eax, dword [rax + 0xc]	      2509	move.c	FUNCTION_49
0x4004a5a	          0x8945c0	             mov dword [rbp - 0x40], eax	      2509	move.c	FUNCTION_49
0x4004a5d	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2510	move.c	FUNCTION_49	IF_2
0x4004a60	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2510	move.c	FUNCTION_49	IF_2
0x4004a63	     0xf8f6b010000	                            jg 0x4004bd4	      2510	move.c	FUNCTION_49	IF_2
0x4004a69	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2513	move.c	FUNCTION_49
0x4004a6d	        0x488b5008	                mov rdx, qword [rax + 8]	      2513	move.c	FUNCTION_49
0x4004a71	          0x488b00	                    mov rax, qword [rax]	      2513	move.c	FUNCTION_49
0x4004a74	        0x488945d0	             mov qword [rbp - 0x30], rax	      2513	move.c	FUNCTION_49
0x4004a78	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2513	move.c	FUNCTION_49
0x4004a7c	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2514	move.c	FUNCTION_49	IF_3
0x4004a80	            0x7e0e	                           jle 0x4004a90	      2514	move.c	FUNCTION_49	IF_3
0x4004a82	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2515	move.c	FUNCTION_49	CALL_3
0x4004a86	          0x4889c7	                            mov rdi, rax	      2515	move.c	FUNCTION_49	CALL_3
0x4004a89	      0xe8fde4ffff	                   call sym.botline_forw	      2515	move.c	FUNCTION_49	CALL_3
0x4004a8e	            0xeb0c	                           jmp 0x4004a9c	      2515	move.c	FUNCTION_49	CALL_3
0x4004a90	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2517	move.c	FUNCTION_49	CALL_4
0x4004a94	          0x4889c7	                            mov rdi, rax	      2517	move.c	FUNCTION_49	CALL_4
0x4004a97	      0xe81ee4ffff	                   call sym.topline_back	      2517	move.c	FUNCTION_49	CALL_4
0x4004a9c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2518	move.c	FUNCTION_49
0x4004aa0	          0x8b400c	              mov eax, dword [rax + 0xc]	      2518	move.c	FUNCTION_49
0x4004aa3	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2518	move.c	FUNCTION_49
0x4004aa6	    0x817dc4ffffff	     cmp dword [rbp - 0x3c], 0x7fffffff 	      2519	move.c	FUNCTION_49	IF_4
0x4004aad	            0x740d	                            je 0x4004abc	      2519	move.c	FUNCTION_49	IF_4
0x4004aaf	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2519	move.c	FUNCTION_49	IF_4
0x4004ab2	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2519	move.c	FUNCTION_49	IF_4
0x4004ab5	             0x1d0	                            add eax, edx	      2519	move.c	FUNCTION_49	IF_4
0x4004ab7	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2519	move.c	FUNCTION_49	IF_4
0x4004aba	            0x7e18	                           jle 0x4004ad4	      2519	move.c	FUNCTION_49	IF_4
0x4004abc	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2521	move.c	FUNCTION_49	IF_4
0x4004ac0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2521	move.c	FUNCTION_49	IF_4
0x4004ac4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2521	move.c	FUNCTION_49	IF_4
0x4004ac8	          0x488901	                    mov qword [rcx], rax	      2521	move.c	FUNCTION_49	IF_4
0x4004acb	        0x48895108	                mov qword [rcx + 8], rdx	      2521	move.c	FUNCTION_49	IF_4
0x4004acf	      0xe901010000	                           jmp 0x4004bd5	      2522	move.c	FUNCTION_49	IF_4
0x4004ad4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2525	move.c	FUNCTION_49
0x4004ad8	        0x488b5008	                mov rdx, qword [rax + 8]	      2525	move.c	FUNCTION_49
0x4004adc	          0x488b00	                    mov rax, qword [rax]	      2525	move.c	FUNCTION_49
0x4004adf	        0x488945e0	             mov qword [rbp - 0x20], rax	      2525	move.c	FUNCTION_49
0x4004ae3	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2525	move.c	FUNCTION_49
0x4004ae7	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2526	move.c	FUNCTION_49	IF_5
0x4004aeb	            0x7e0e	                           jle 0x4004afb	      2526	move.c	FUNCTION_49	IF_5
0x4004aed	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2527	move.c	FUNCTION_49	CALL_5
0x4004af1	          0x4889c7	                            mov rdi, rax	      2527	move.c	FUNCTION_49	CALL_5
0x4004af4	      0xe892e4ffff	                   call sym.botline_forw	      2527	move.c	FUNCTION_49	CALL_5
0x4004af9	            0xeb0c	                           jmp 0x4004b07	      2527	move.c	FUNCTION_49	CALL_5
0x4004afb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2529	move.c	FUNCTION_49	CALL_6
0x4004aff	          0x4889c7	                            mov rdi, rax	      2529	move.c	FUNCTION_49	CALL_6
0x4004b02	      0xe8b3e3ffff	                   call sym.topline_back	      2529	move.c	FUNCTION_49	CALL_6
0x4004b07	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2530	move.c	FUNCTION_49
0x4004b0b	          0x8b400c	              mov eax, dword [rax + 0xc]	      2530	move.c	FUNCTION_49
0x4004b0e	          0x8945c8	             mov dword [rbp - 0x38], eax	      2530	move.c	FUNCTION_49
0x4004b11	    0x817dc8ffffff	     cmp dword [rbp - 0x38], 0x7fffffff 	      2531	move.c	FUNCTION_49	IF_6
0x4004b18	            0x740d	                            je 0x4004b27	      2531	move.c	FUNCTION_49	IF_6
0x4004b1a	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2531	move.c	FUNCTION_49	IF_6
0x4004b1d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2531	move.c	FUNCTION_49	IF_6
0x4004b20	             0x1d0	                            add eax, edx	      2531	move.c	FUNCTION_49	IF_6
0x4004b22	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2531	move.c	FUNCTION_49	IF_6
0x4004b25	            0x7e18	                           jle 0x4004b3f	      2531	move.c	FUNCTION_49	IF_6
0x4004b27	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2533	move.c	FUNCTION_49	IF_6
0x4004b2b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2533	move.c	FUNCTION_49	IF_6
0x4004b2f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2533	move.c	FUNCTION_49	IF_6
0x4004b33	          0x488901	                    mov qword [rcx], rax	      2533	move.c	FUNCTION_49	IF_6
0x4004b36	        0x48895108	                mov qword [rcx + 8], rdx	      2533	move.c	FUNCTION_49	IF_6
0x4004b3a	      0xe996000000	                           jmp 0x4004bd5	      2534	move.c	FUNCTION_49	IF_6
0x4004b3f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2537	move.c	FUNCTION_49
0x4004b43	        0x488b5008	                mov rdx, qword [rax + 8]	      2537	move.c	FUNCTION_49
0x4004b47	          0x488b00	                    mov rax, qword [rax]	      2537	move.c	FUNCTION_49
0x4004b4a	        0x488945f0	             mov qword [rbp - 0x10], rax	      2537	move.c	FUNCTION_49
0x4004b4e	        0x488955f8	                mov qword [rbp - 8], rdx	      2537	move.c	FUNCTION_49
0x4004b52	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2538	move.c	FUNCTION_49	IF_7
0x4004b56	            0x7e0e	                           jle 0x4004b66	      2538	move.c	FUNCTION_49	IF_7
0x4004b58	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2539	move.c	FUNCTION_49	CALL_7
0x4004b5c	          0x4889c7	                            mov rdi, rax	      2539	move.c	FUNCTION_49	CALL_7
0x4004b5f	      0xe827e4ffff	                   call sym.botline_forw	      2539	move.c	FUNCTION_49	CALL_7
0x4004b64	            0xeb0c	                           jmp 0x4004b72	      2539	move.c	FUNCTION_49	CALL_7
0x4004b66	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2541	move.c	FUNCTION_49	CALL_8
0x4004b6a	          0x4889c7	                            mov rdi, rax	      2541	move.c	FUNCTION_49	CALL_8
0x4004b6d	      0xe848e3ffff	                   call sym.topline_back	      2541	move.c	FUNCTION_49	CALL_8
0x4004b72	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2542	move.c	FUNCTION_49
0x4004b76	          0x8b400c	              mov eax, dword [rax + 0xc]	      2542	move.c	FUNCTION_49
0x4004b79	          0x8945cc	             mov dword [rbp - 0x34], eax	      2542	move.c	FUNCTION_49
0x4004b7c	    0x817dccffffff	     cmp dword [rbp - 0x34], 0x7fffffff 	      2543	move.c	FUNCTION_49	IF_8
0x4004b83	            0x7424	                            je 0x4004ba9	      2543	move.c	FUNCTION_49	IF_8
0x4004b85	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2543	move.c	FUNCTION_49	IF_8
0x4004b88	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2543	move.c	FUNCTION_49	IF_8
0x4004b8b	             0x1c2	                            add edx, eax	      2543	move.c	FUNCTION_49	IF_8
0x4004b8d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2543	move.c	FUNCTION_49	IF_8
0x4004b90	             0x1d0	                            add eax, edx	      2543	move.c	FUNCTION_49	IF_8
0x4004b92	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2543	move.c	FUNCTION_49	IF_8
0x4004b95	            0x7f12	                            jg 0x4004ba9	      2543	move.c	FUNCTION_49	IF_8
0x4004b97	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2543	move.c	FUNCTION_49	IF_8
0x4004b9a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2543	move.c	FUNCTION_49	IF_8
0x4004b9d	             0x1c2	                            add edx, eax	      2543	move.c	FUNCTION_49	IF_8
0x4004b9f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2543	move.c	FUNCTION_49	IF_8
0x4004ba2	             0x1d0	                            add eax, edx	      2543	move.c	FUNCTION_49	IF_8
0x4004ba4	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2543	move.c	FUNCTION_49	IF_8
0x4004ba7	            0x7e15	                           jle 0x4004bbe	      2543	move.c	FUNCTION_49	IF_8
0x4004ba9	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2544	move.c	FUNCTION_49	IF_8
0x4004bad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2544	move.c	FUNCTION_49	IF_8
0x4004bb1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2544	move.c	FUNCTION_49	IF_8
0x4004bb5	          0x488901	                    mov qword [rcx], rax	      2544	move.c	FUNCTION_49	IF_8
0x4004bb8	        0x48895108	                mov qword [rcx + 8], rdx	      2544	move.c	FUNCTION_49	IF_8
0x4004bbc	            0xeb13	                           jmp 0x4004bd1	      2544	move.c	FUNCTION_49	IF_8
0x4004bbe	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2546	move.c	FUNCTION_49	ELSE_5
0x4004bc2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2546	move.c	FUNCTION_49	ELSE_5
0x4004bc6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2546	move.c	FUNCTION_49	ELSE_5
0x4004bca	          0x488901	                    mov qword [rcx], rax	      2546	move.c	FUNCTION_49	ELSE_5
0x4004bcd	        0x48895108	                mov qword [rcx + 8], rdx	      2546	move.c	FUNCTION_49	ELSE_5
0x4004bd1	              0x90	                                     nop	      2547	move.c	FUNCTION_49	ELSE_5
0x4004bd2	            0xeb01	                           jmp 0x4004bd5	      2547	move.c	FUNCTION_49	ELSE_5
0x4004bd4	              0x90	                                     nop	      2511	move.c	FUNCTION_49	IF_2
0x4004bd5	              0xc9	                                   leave	      2548	move.c	FUNCTION_49	ELSE_5
0x4004bd6	              0xc3	                                     ret	      2548	move.c	FUNCTION_49	ELSE_5
invalidate_botline_win	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,0:IF,0:DO,0:SWITCH,0	12
0x4000e1e	              0x55	                                push rbp	       605	move.c	FUNCTION_18
0x4000e1f	          0x4889e5	                            mov rbp, rsp	       605	move.c	FUNCTION_18
0x4000e22	        0x48897df8	                mov qword [rbp - 8], rdi	       605	move.c	FUNCTION_18
0x4000e26	        0x488b45f8	                mov rax, qword [rbp - 8]	       606	move.c	FUNCTION_18
0x4000e2a	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       606	move.c	FUNCTION_18
0x4000e30	          0x83e09f	                     and eax, 0xffffff9f	       606	move.c	FUNCTION_18
0x4000e33	            0x89c2	                            mov edx, eax	       606	move.c	FUNCTION_18
0x4000e35	        0x488b45f8	                mov rax, qword [rbp - 8]	       606	move.c	FUNCTION_18
0x4000e39	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       606	move.c	FUNCTION_18
0x4000e3f	              0x90	                                     nop	       607	move.c	FUNCTION_18
0x4000e40	              0x5d	                                 pop rbp	       607	move.c	FUNCTION_18
0x4000e41	              0xc3	                                     ret	       607	move.c	FUNCTION_18
scrolljump_value	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,0:IF,1:DO,0:SWITCH,0	26
0x4000989	              0x55	                                push rbp	       416	move.c	FUNCTION_5
0x400098a	          0x4889e5	                            mov rbp, rsp	       416	move.c	FUNCTION_5
0x400098d	    0x488b05000000	            mov rax, qword [0x04000994] 	       417	move.c	FUNCTION_5	IF_1
0x4000994	          0x4885c0	                           test rax, rax	       417	move.c	FUNCTION_5	IF_1
0x4000997	            0x7809	                            js 0x40009a2	       417	move.c	FUNCTION_5	IF_1
0x4000999	    0x488b05000000	            mov rax, qword [0x040009a0] 	       418	move.c	FUNCTION_5	IF_1
0x40009a0	            0xeb48	                           jmp 0x40009ea	       418	move.c	FUNCTION_5	IF_1
0x40009a2	    0x488b05000000	            mov rax, qword [0x040009a9] 	       419	move.c	FUNCTION_5
0x40009a9	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       419	move.c	FUNCTION_5
0x40009af	            0x4898	                                    cdqe	       419	move.c	FUNCTION_5
0x40009b1	    0x488b15000000	            mov rdx, qword [0x040009b8] 	       419	move.c	FUNCTION_5
0x40009b8	          0x48f7da	                                 neg rdx	       419	move.c	FUNCTION_5
0x40009bb	        0x480fafc2	                           imul rax, rdx	       419	move.c	FUNCTION_5
0x40009bf	          0x4889c1	                            mov rcx, rax	       419	move.c	FUNCTION_5
0x40009c2	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       419	move.c	FUNCTION_5
0x40009cc	          0x4889c8	                            mov rax, rcx	       419	move.c	FUNCTION_5
0x40009cf	          0x48f7ea	                                imul rdx	       419	move.c	FUNCTION_5
0x40009d2	        0x488d040a	                    lea rax, [rdx + rcx]	       419	move.c	FUNCTION_5
0x40009d6	        0x48c1f806	                              sar rax, 6	       419	move.c	FUNCTION_5
0x40009da	          0x4889c2	                            mov rdx, rax	       419	move.c	FUNCTION_5
0x40009dd	          0x4889c8	                            mov rax, rcx	       419	move.c	FUNCTION_5
0x40009e0	        0x48c1f83f	                           sar rax, 0x3f	       419	move.c	FUNCTION_5
0x40009e4	          0x4829c2	                            sub rdx, rax	       419	move.c	FUNCTION_5
0x40009e7	          0x4889d0	                            mov rax, rdx	       419	move.c	FUNCTION_5
0x40009ea	              0x5d	                                 pop rbp	       420	move.c	FUNCTION_5
0x40009eb	              0xc3	                                     ret	       420	move.c	FUNCTION_5
check_top_offset	ELSE,0:FOR,0:functions,0:WHILE,1:CALL,2:IF,3:DO,0:SWITCH,0	64
0x40009ec	              0x55	                                push rbp	       428	move.c	FUNCTION_6
0x40009ed	          0x4889e5	                            mov rbp, rsp	       428	move.c	FUNCTION_6
0x40009f0	        0x4883ec30	                           sub rsp, 0x30	       428	move.c	FUNCTION_6
0x40009f4	    0x64488b042528	                mov rax, qword fs:[0x28]	       428	move.c	FUNCTION_6
0x40009fd	        0x488945f8	                mov qword [rbp - 8], rax	       428	move.c	FUNCTION_6
0x4000a01	            0x31c0	                            xor eax, eax	       428	move.c	FUNCTION_6
0x4000a03	    0x488b05000000	            mov rax, qword [0x04000a0a] 	       432	move.c	FUNCTION_6	IF_1
0x4000a0a	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       432	move.c	FUNCTION_6	IF_1
0x4000a0e	    0x488b05000000	            mov rax, qword [0x04000a15] 	       432	move.c	FUNCTION_6	IF_1
0x4000a15	        0x488b4878	            mov rcx, qword [rax + 0x78] 	       432	move.c	FUNCTION_6	IF_1
0x4000a19	    0x488b05000000	            mov rax, qword [0x04000a20] 	       432	move.c	FUNCTION_6	IF_1
0x4000a20	          0x4801c8	                            add rax, rcx	       432	move.c	FUNCTION_6	IF_1
0x4000a23	          0x4839c2	                            cmp rdx, rax	       432	move.c	FUNCTION_6	IF_1
0x4000a26	            0x7c17	                            jl 0x4000a3f	       432	move.c	FUNCTION_6	IF_1
0x4000a28	    0x488b05000000	            mov rax, qword [0x04000a2f] 	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x4000a2f	          0x4889c7	                            mov rdi, rax	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x4000a32	      0xe800000000	                          call 0x4000a37	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x4000a37	            0x85c0	                           test eax, eax	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x4000a39	     0xf8494000000	                            je 0x4000ad3	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x4000a3f	    0x488b05000000	            mov rax, qword [0x04000a46] 	       438	move.c	FUNCTION_6	IF_1
0x4000a46	        0x488b4038	            mov rax, qword [rax + 0x38] 	       438	move.c	FUNCTION_6	IF_1
0x4000a4a	        0x488945e0	             mov qword [rbp - 0x20], rax	       438	move.c	FUNCTION_6	IF_1
0x4000a4e	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       440	move.c	FUNCTION_6	IF_1
0x4000a55	    0x488b05000000	            mov rax, qword [0x04000a5c] 	       441	move.c	FUNCTION_6	IF_1
0x4000a5c	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       441	move.c	FUNCTION_6	IF_1
0x4000a62	          0x8945dc	             mov dword [rbp - 0x24], eax	       441	move.c	FUNCTION_6	IF_1
0x4000a65	            0xeb41	                           jmp 0x4000aa8	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000a67	        0x488d45e0	                   lea rax, [rbp - 0x20]	       448	move.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000a6b	          0x4889c7	                            mov rdi, rax	       448	move.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000a6e	      0xe847240000	                   call sym.topline_back	       448	move.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000a73	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000a77	    0x488b05000000	            mov rax, qword [0x04000a7e] 	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000a7e	        0x488b4078	            mov rax, qword [rax + 0x78] 	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000a82	          0x4839c2	                            cmp rdx, rax	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000a85	            0x7c33	                            jl 0x4000aba	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000a87	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000a8b	    0x488b05000000	            mov rax, qword [0x04000a92] 	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000a92	        0x488b4078	            mov rax, qword [rax + 0x78] 	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000a96	          0x4839c2	                            cmp rdx, rax	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000a99	            0x7507	                           jne 0x4000aa2	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000a9b	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000a9e	            0x85c0	                           test eax, eax	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000aa0	            0x7f18	                            jg 0x4000aba	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000aa2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       456	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000aa5	           0x145dc	             add dword [rbp - 0x24], eax	       456	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000aa8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000aab	          0x4863d0	                         movsxd rdx, eax	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000aae	    0x488b05000000	            mov rax, qword [0x04000ab5] 	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000ab5	          0x4839c2	                            cmp rdx, rax	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000ab8	            0x7cad	                            jl 0x4000a67	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000aba	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       458	move.c	FUNCTION_6	IF_1	IF_3
0x4000abd	          0x4863d0	                         movsxd rdx, eax	       458	move.c	FUNCTION_6	IF_1	IF_3
0x4000ac0	    0x488b05000000	            mov rax, qword [0x04000ac7] 	       458	move.c	FUNCTION_6	IF_1	IF_3
0x4000ac7	          0x4839c2	                            cmp rdx, rax	       458	move.c	FUNCTION_6	IF_1	IF_3
0x4000aca	            0x7d07	                           jge 0x4000ad3	       458	move.c	FUNCTION_6	IF_1	IF_3
0x4000acc	      0xb801000000	                              mov eax, 1	       459	move.c	FUNCTION_6	IF_1	IF_3
0x4000ad1	            0xeb05	                           jmp 0x4000ad8	       459	move.c	FUNCTION_6	IF_1	IF_3
0x4000ad3	      0xb800000000	                              mov eax, 0	       461	move.c	FUNCTION_6
0x4000ad8	        0x488b75f8	                mov rsi, qword [rbp - 8]	       462	move.c	FUNCTION_6
0x4000adc	    0x644833342528	                xor rsi, qword fs:[0x28]	       462	move.c	FUNCTION_6
0x4000ae5	            0x7405	                            je 0x4000aec	       462	move.c	FUNCTION_6
0x4000ae7	      0xe800000000	                          call 0x4000aec	       462	move.c	FUNCTION_6
0x4000aec	              0xc9	                                   leave	       462	move.c	FUNCTION_6
0x4000aed	              0xc3	                                     ret	       462	move.c	FUNCTION_6
update_topline_redraw	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,2:IF,1:DO,0:SWITCH,0	11
0x400029f	              0x55	                                push rbp	       152	move.c	FUNCTION_3
0x40002a0	          0x4889e5	                            mov rbp, rsp	       152	move.c	FUNCTION_3
0x40002a3	      0xe800000000	                          call 0x40002a8	       153	move.c	FUNCTION_3	CALL_1
0x40002a8	    0x8b0500000000	            mov eax, dword [0x040002ae] 	       154	move.c	FUNCTION_3	IF_1
0x40002ae	            0x85c0	                           test eax, eax	       154	move.c	FUNCTION_3	IF_1
0x40002b0	            0x740a	                            je 0x40002bc	       154	move.c	FUNCTION_3	IF_1
0x40002b2	      0xbf00000000	                              mov edi, 0	       155	move.c	FUNCTION_3	CALL_2
0x40002b7	      0xe800000000	                          call 0x40002bc	       155	move.c	FUNCTION_3	CALL_2
0x40002bc	              0x90	                                     nop	       156	move.c	FUNCTION_3
0x40002bd	              0x5d	                                 pop rbp	       156	move.c	FUNCTION_3
0x40002be	              0xc3	                                     ret	       156	move.c	FUNCTION_3
curwin_col_off2	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,1:IF,0:DO,0:SWITCH,0	7
0x400187c	              0x55	                                push rbp	       911	move.c	FUNCTION_31
0x400187d	          0x4889e5	                            mov rbp, rsp	       911	move.c	FUNCTION_31
0x4001880	    0x488b05000000	            mov rax, qword [0x04001887] 	       912	move.c	FUNCTION_31	CALL_1
0x4001887	          0x4889c7	                            mov rdi, rax	       912	move.c	FUNCTION_31	CALL_1
0x400188a	      0xe800000000	                          call 0x400188f	       912	move.c	FUNCTION_31	CALL_1
0x400188f	              0x5d	                                 pop rbp	       913	move.c	FUNCTION_31
0x4001890	              0xc3	                                     ret	       913	move.c	FUNCTION_31
scrolldown	ELSE,4:FOR,0:functions,0:WHILE,2:CALL,13:IF,9:DO,0:SWITCH,0	216
0x4002334	              0x55	                                push rbp	      1180	move.c	FUNCTION_33
0x4002335	          0x4889e5	                            mov rbp, rsp	      1180	move.c	FUNCTION_33
0x4002338	              0x53	                                push rbx	      1180	move.c	FUNCTION_33
0x4002339	        0x4883ec38	                           sub rsp, 0x38	      1180	move.c	FUNCTION_33
0x400233d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1180	move.c	FUNCTION_33
0x4002341	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1180	move.c	FUNCTION_33
0x4002344	    0x64488b042528	                mov rax, qword fs:[0x28]	      1180	move.c	FUNCTION_33
0x400234d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1180	move.c	FUNCTION_33
0x4002351	            0x31c0	                            xor eax, eax	      1180	move.c	FUNCTION_33
0x4002353	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1181	move.c	FUNCTION_33
0x400235b	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1183	move.c	FUNCTION_33
0x4002362	    0x488b05000000	            mov rax, qword [0x04002369] 	      1189	move.c	FUNCTION_33	CALL_1
0x4002369	        0x488d4878	                   lea rcx, [rax + 0x78]	      1189	move.c	FUNCTION_33	CALL_1
0x400236d	    0x488b05000000	            mov rax, qword [0x04002374] 	      1189	move.c	FUNCTION_33	CALL_1
0x4002374	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1189	move.c	FUNCTION_33	CALL_1
0x4002378	      0xba00000000	                              mov edx, 0	      1189	move.c	FUNCTION_33	CALL_1
0x400237d	          0x4889ce	                            mov rsi, rcx	      1189	move.c	FUNCTION_33	CALL_1
0x4002380	          0x4889c7	                            mov rdi, rax	      1189	move.c	FUNCTION_33	CALL_1
0x4002383	      0xe800000000	                          call 0x4002388	      1189	move.c	FUNCTION_33	CALL_1
0x4002388	      0xe800000000	                          call 0x400238d	      1191	move.c	FUNCTION_33	CALL_2
0x400238d	      0xe972010000	                           jmp 0x4002504	      1192	move.c	FUNCTION_33	WHILE_1
0x4002392	    0x488b05000000	            mov rax, qword [0x04002399] 	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x4002399	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x400239f	    0x488b05000000	            mov rax, qword [0x040023a6] 	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023a6	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023aa	    0x488b05000000	            mov rax, qword [0x040023b1] 	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023b1	          0x4889d6	                            mov rsi, rdx	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023b4	          0x4889c7	                            mov rdi, rax	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023b7	      0xe800000000	                          call 0x40023bc	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023bc	            0x39c3	                            cmp ebx, eax	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023be	            0x7d41	                           jge 0x4002401	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023c0	    0x488b05000000	            mov rax, qword [0x040023c7] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023c7	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023cd	    0x488b05000000	            mov rax, qword [0x040023d4] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023d4	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023da	          0x83e801	                              sub eax, 1	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023dd	            0x39c2	                            cmp edx, eax	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023df	            0x7d20	                           jge 0x4002401	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023e1	    0x488b05000000	            mov rax, qword [0x040023e8] 	      1198	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023e8	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1198	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023ee	          0x83c201	                              add edx, 1	      1198	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023f1	    0x899084000000	             mov dword [rax + 0x84], edx	      1198	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023f7	      0x488345e001	               add qword [rbp - 0x20], 1	      1199	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023fc	      0xe9e5000000	                           jmp 0x40024e6	      1199	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002401	    0x488b05000000	            mov rax, qword [0x04002408] 	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4002408	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x400240c	        0x4883f801	                              cmp rax, 1	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4002410	     0xf8405010000	                            je 0x400251b	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4002416	    0x488b05000000	            mov rax, qword [0x0400241d] 	      1206	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x400241d	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1206	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x4002421	        0x4883ea01	                              sub rdx, 1	      1206	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x4002425	        0x48895078	             mov qword [rax + 0x78], rdx	      1206	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x4002429	    0x488b05000000	            mov rax, qword [0x04002430] 	      1208	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x4002430	    0xc78084000000	               mov dword [rax + 0x84], 0	      1208	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x400243a	    0x488b05000000	            mov rax, qword [0x04002441] 	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002441	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002445	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002449	      0xba00000000	                              mov edx, 0	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x400244e	          0x4889ce	                            mov rsi, rcx	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002451	          0x4889c7	                            mov rdi, rax	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002454	      0xe800000000	                          call 0x4002459	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002459	            0x85c0	                           test eax, eax	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x400245b	            0x7470	                            je 0x40024cd	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x400245d	      0x488345e001	               add qword [rbp - 0x20], 1	      1214	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002462	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002466	            0x751d	                           jne 0x4002485	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002468	    0x488b05000000	            mov rax, qword [0x0400246f] 	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x400246f	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002473	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002477	          0x4829c2	                            sub rdx, rax	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x400247a	          0x4889d0	                            mov rax, rdx	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x400247d	        0x4883e801	                              sub rax, 1	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002481	        0x482945c8	             sub qword [rbp - 0x38], rax	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002485	    0x488b05000000	            mov rax, qword [0x0400248c] 	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x400248c	    0x488b15000000	            mov rdx, qword [0x04002493] 	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002493	    0x488b8ae80000	            mov rcx, qword [rdx + 0xe8] 	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x400249a	    0x488b15000000	            mov rdx, qword [0x040024a1] 	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024a1	        0x488b7278	            mov rsi, qword [rdx + 0x78] 	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024a5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024a9	          0x4829d6	                            sub rsi, rdx	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024ac	          0x4889f2	                            mov rdx, rsi	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024af	          0x4829d1	                            sub rcx, rdx	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024b2	          0x4889ca	                            mov rdx, rcx	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024b5	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024bc	    0x488b05000000	            mov rax, qword [0x040024c3] 	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024c3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024c7	        0x48895078	             mov qword [rax + 0x78], rdx	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024cb	            0xeb19	                           jmp 0x40024e6	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x40024cd	    0x488b05000000	            mov rax, qword [0x040024d4] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x40024d4	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x40024d8	          0x4889c7	                            mov rdi, rax	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x40024db	      0xe800000000	                          call 0x40024e0	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x40024e0	            0x4898	                                    cdqe	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x40024e2	        0x480145e0	            add qword [rbp - 0x20], rax 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x40024e6	    0x488b05000000	            mov rax, qword [0x040024ed] 	      1224	move.c	FUNCTION_33	WHILE_1
0x40024ed	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1224	move.c	FUNCTION_33	WHILE_1
0x40024f4	        0x4883ea01	                              sub rdx, 1	      1224	move.c	FUNCTION_33	WHILE_1
0x40024f8	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1224	move.c	FUNCTION_33	WHILE_1
0x40024ff	      0xe800000000	                          call 0x4002504	      1225	move.c	FUNCTION_33	WHILE_1	CALL_6
0x4002504	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1192	move.c	FUNCTION_33	WHILE_1
0x4002508	        0x488d50ff	                      lea rdx, [rax - 1]	      1192	move.c	FUNCTION_33	WHILE_1
0x400250c	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1192	move.c	FUNCTION_33	WHILE_1
0x4002510	          0x4885c0	                           test rax, rax	      1192	move.c	FUNCTION_33	WHILE_1
0x4002513	     0xf8f79feffff	                            jg 0x4002392	      1192	move.c	FUNCTION_33	WHILE_1
0x4002519	            0xeb01	                           jmp 0x400251c	      1192	move.c	FUNCTION_33	WHILE_1
0x400251b	              0x90	                                     nop	      1205	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x400251c	    0x488b05000000	            mov rax, qword [0x04002523] 	      1227	move.c	FUNCTION_33
0x4002523	    0x488b15000000	            mov rdx, qword [0x0400252a] 	      1227	move.c	FUNCTION_33
0x400252a	    0x8b92dc000000	            mov edx, dword [rdx + 0xdc] 	      1227	move.c	FUNCTION_33
0x4002530	            0x89d1	                            mov ecx, edx	      1227	move.c	FUNCTION_33
0x4002532	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1227	move.c	FUNCTION_33
0x4002536	             0x1ca	                            add edx, ecx	      1227	move.c	FUNCTION_33
0x4002538	    0x8990dc000000	             mov dword [rax + 0xdc], edx	      1227	move.c	FUNCTION_33
0x400253e	    0x488b05000000	            mov rax, qword [0x04002545] 	      1228	move.c	FUNCTION_33
0x4002545	    0x488b15000000	            mov rdx, qword [0x0400254c] 	      1228	move.c	FUNCTION_33
0x400254c	    0x8b92d4000000	            mov edx, dword [rdx + 0xd4] 	      1228	move.c	FUNCTION_33
0x4002552	            0x89d1	                            mov ecx, edx	      1228	move.c	FUNCTION_33
0x4002554	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1228	move.c	FUNCTION_33
0x4002558	             0x1ca	                            add edx, ecx	      1228	move.c	FUNCTION_33
0x400255a	    0x8990d4000000	             mov dword [rax + 0xd4], edx	      1228	move.c	FUNCTION_33
0x4002560	    0x488b05000000	            mov rax, qword [0x04002567] 	      1231	move.c	FUNCTION_33	IF_5
0x4002567	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1231	move.c	FUNCTION_33	IF_5
0x400256b	    0x488b05000000	            mov rax, qword [0x04002572] 	      1231	move.c	FUNCTION_33	IF_5
0x4002572	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1231	move.c	FUNCTION_33	IF_5
0x4002576	          0x4839c2	                            cmp rdx, rax	      1231	move.c	FUNCTION_33	IF_5
0x4002579	            0x7511	                           jne 0x400258c	      1231	move.c	FUNCTION_33	IF_5
0x400257b	    0x488b05000000	            mov rax, qword [0x04002582] 	      1232	move.c	FUNCTION_33	IF_5
0x4002582	    0xc780d4000000	               mov dword [rax + 0xd4], 0	      1232	move.c	FUNCTION_33	IF_5
0x400258c	    0x488b05000000	            mov rax, qword [0x04002593] 	      1233	move.c	FUNCTION_33	CALL_7
0x4002593	      0xbe01000000	                              mov esi, 1	      1233	move.c	FUNCTION_33	CALL_7
0x4002598	          0x4889c7	                            mov rdi, rax	      1233	move.c	FUNCTION_33	CALL_7
0x400259b	      0xe800000000	                          call 0x40025a0	      1233	move.c	FUNCTION_33	CALL_7
0x40025a0	    0x488b05000000	            mov rax, qword [0x040025a7] 	      1240	move.c	FUNCTION_33
0x40025a7	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      1240	move.c	FUNCTION_33
0x40025ad	          0x8945d0	             mov dword [rbp - 0x30], eax	      1240	move.c	FUNCTION_33
0x40025b0	    0x488b05000000	            mov rax, qword [0x040025b7] 	      1241	move.c	FUNCTION_33	IF_6
0x40025b7	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1241	move.c	FUNCTION_33	IF_6
0x40025bd	            0x85c0	                           test eax, eax	      1241	move.c	FUNCTION_33	IF_6
0x40025bf	     0xf84f1000000	                            je 0x40026b6	      1241	move.c	FUNCTION_33	IF_6
0x40025c5	    0x488b05000000	            mov rax, qword [0x040025cc] 	      1241	move.c	FUNCTION_33	IF_6
0x40025cc	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1241	move.c	FUNCTION_33	IF_6
0x40025d2	            0x85c0	                           test eax, eax	      1241	move.c	FUNCTION_33	IF_6
0x40025d4	     0xf84dc000000	                            je 0x40026b6	      1241	move.c	FUNCTION_33	IF_6
0x40025da	      0xe800000000	                          call 0x40025df	      1243	move.c	FUNCTION_33	IF_6	CALL_8
0x40025df	      0xe899efffff	               call sym.validate_cheight	      1244	move.c	FUNCTION_33	IF_6	CALL_9
0x40025e4	    0x488b05000000	            mov rax, qword [0x040025eb] 	      1245	move.c	FUNCTION_33	IF_6
0x40025eb	    0x8b80cc000000	            mov eax, dword [rax + 0xcc] 	      1245	move.c	FUNCTION_33	IF_6
0x40025f1	          0x8d48ff	                      lea ecx, [rax - 1]	      1245	move.c	FUNCTION_33	IF_6
0x40025f4	    0x488b05000000	            mov rax, qword [0x040025fb] 	      1246	move.c	FUNCTION_33	IF_6
0x40025fb	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1246	move.c	FUNCTION_33	IF_6
0x4002601	    0x488b15000000	            mov rdx, qword [0x04002608] 	      1246	move.c	FUNCTION_33	IF_6
0x4002608	    0x8b9aac000000	            mov ebx, dword [rdx + 0xac] 	      1246	move.c	FUNCTION_33	IF_6
0x400260e	              0x99	                                     cdq	      1246	move.c	FUNCTION_33	IF_6
0x400260f	            0xf7fb	                                idiv ebx	      1246	move.c	FUNCTION_33	IF_6
0x4002611	            0x29c1	                            sub ecx, eax	      1245	move.c	FUNCTION_33	IF_6
0x4002613	            0x89c8	                            mov eax, ecx	      1245	move.c	FUNCTION_33	IF_6
0x4002615	           0x145d0	             add dword [rbp - 0x30], eax	      1245	move.c	FUNCTION_33	IF_6
0x4002618	      0xe999000000	                           jmp 0x40026b6	      1248	move.c	FUNCTION_33	WHILE_2
0x400261d	    0x488b05000000	            mov rax, qword [0x04002624] 	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002624	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002628	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x400262c	      0xba00000000	                              mov edx, 0	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002631	          0x4889ce	                            mov rsi, rcx	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002634	          0x4889c7	                            mov rdi, rax	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002637	      0xe800000000	                          call 0x400263c	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x400263c	            0x85c0	                           test eax, eax	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x400263e	            0x7434	                            je 0x4002674	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002640	        0x836dd001	               sub dword [rbp - 0x30], 1	      1253	move.c	FUNCTION_33	WHILE_2	IF_7
0x4002644	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002648	        0x4883f801	                              cmp rax, 1	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x400264c	            0x7511	                           jne 0x400265f	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x400264e	    0x488b05000000	            mov rax, qword [0x04002655] 	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002655	    0x48c740380100	               mov qword [rax + 0x38], 1	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x400265d	            0xeb33	                           jmp 0x4002692	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x400265f	    0x488b05000000	            mov rax, qword [0x04002666] 	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x4002666	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x400266a	        0x4883ea01	                              sub rdx, 1	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x400266e	        0x48895038	             mov qword [rax + 0x38], rdx	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x4002672	            0xeb1e	                           jmp 0x4002692	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x4002674	    0x488b15000000	            mov rdx, qword [0x0400267b] 	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x400267b	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x400267f	        0x488d48ff	                      lea rcx, [rax - 1]	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x4002683	        0x48894a38	             mov qword [rdx + 0x38], rcx	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x4002687	          0x4889c7	                            mov rdi, rax	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x400268a	      0xe800000000	                          call 0x400268f	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x400268f	          0x2945d0	             sub dword [rbp - 0x30], eax	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x4002692	    0x488b05000000	            mov rax, qword [0x04002699] 	      1262	move.c	FUNCTION_33	WHILE_2
0x4002699	    0x488b15000000	            mov rdx, qword [0x040026a0] 	      1262	move.c	FUNCTION_33	WHILE_2
0x40026a0	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1262	move.c	FUNCTION_33	WHILE_2
0x40026a6	          0x83e2e0	                     and edx, 0xffffffe0	      1262	move.c	FUNCTION_33	WHILE_2
0x40026a9	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1262	move.c	FUNCTION_33	WHILE_2
0x40026af	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      1264	move.c	FUNCTION_33	WHILE_2
0x40026b6	    0x488b05000000	            mov rax, qword [0x040026bd] 	      1248	move.c	FUNCTION_33	WHILE_2
0x40026bd	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1248	move.c	FUNCTION_33	WHILE_2
0x40026c3	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      1248	move.c	FUNCTION_33	WHILE_2
0x40026c6	            0x7f15	                            jg 0x40026dd	      1248	move.c	FUNCTION_33	WHILE_2
0x40026c8	    0x488b05000000	            mov rax, qword [0x040026cf] 	      1248	move.c	FUNCTION_33	WHILE_2
0x40026cf	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1248	move.c	FUNCTION_33	WHILE_2
0x40026d3	        0x4883f801	                              cmp rax, 1	      1248	move.c	FUNCTION_33	WHILE_2
0x40026d7	     0xf8f40ffffff	                            jg 0x400261d	      1248	move.c	FUNCTION_33	WHILE_2
0x40026dd	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1266	move.c	FUNCTION_33	IF_9
0x40026e1	            0x7416	                            je 0x40026f9	      1266	move.c	FUNCTION_33	IF_9
0x40026e3	      0xe800000000	                          call 0x40026e8	      1270	move.c	FUNCTION_33	IF_9	CALL_12
0x40026e8	    0x488b05000000	            mov rax, qword [0x040026ef] 	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x40026ef	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x40026f2	            0x89c7	                            mov edi, eax	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x40026f4	      0xe800000000	                          call 0x40026f9	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x40026f9	              0x90	                                     nop	      1274	move.c	FUNCTION_33
0x40026fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1274	move.c	FUNCTION_33
0x40026fe	    0x644833042528	                xor rax, qword fs:[0x28]	      1274	move.c	FUNCTION_33
0x4002707	            0x7405	                            je 0x400270e	      1274	move.c	FUNCTION_33
0x4002709	      0xe800000000	                          call 0x400270e	      1274	move.c	FUNCTION_33
0x400270e	        0x4883c438	                           add rsp, 0x38	      1274	move.c	FUNCTION_33
0x4002712	              0x5b	                                 pop rbx	      1274	move.c	FUNCTION_33
0x4002713	              0x5d	                                 pop rbp	      1274	move.c	FUNCTION_33
0x4002714	              0xc3	                                     ret	      1274	move.c	FUNCTION_33
check_cursor_moved	ELSE,1:FOR,0:functions,0:WHILE,0:CALL,0:IF,2:DO,0:SWITCH,0	65
0x4000b2d	              0x55	                                push rbp	       480	move.c	FUNCTION_8
0x4000b2e	          0x4889e5	                            mov rbp, rsp	       480	move.c	FUNCTION_8
0x4000b31	        0x48897df8	                mov qword [rbp - 8], rdi	       480	move.c	FUNCTION_8
0x4000b35	        0x488b45f8	                mov rax, qword [rbp - 8]	       481	move.c	FUNCTION_8	IF_1
0x4000b39	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       481	move.c	FUNCTION_8	IF_1
0x4000b3d	        0x488b45f8	                mov rax, qword [rbp - 8]	       481	move.c	FUNCTION_8	IF_1
0x4000b41	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x4000b48	          0x4839c2	                            cmp rdx, rax	       481	move.c	FUNCTION_8	IF_1
0x4000b4b	            0x744f	                            je 0x4000b9c	       481	move.c	FUNCTION_8	IF_1
0x4000b4d	        0x488b45f8	                mov rax, qword [rbp - 8]	       483	move.c	FUNCTION_8	IF_1
0x4000b51	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x4000b57	            0x2460	                            and al, 0x60	       483	move.c	FUNCTION_8	IF_1
0x4000b59	            0x89c2	                            mov edx, eax	       483	move.c	FUNCTION_8	IF_1
0x4000b5b	        0x488b45f8	                mov rax, qword [rbp - 8]	       483	move.c	FUNCTION_8	IF_1
0x4000b5f	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       483	move.c	FUNCTION_8	IF_1
0x4000b65	        0x488b4df8	                mov rcx, qword [rbp - 8]	       485	move.c	FUNCTION_8	IF_1
0x4000b69	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	move.c	FUNCTION_8	IF_1
0x4000b6d	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x4000b71	        0x488b4038	            mov rax, qword [rax + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x4000b75	    0x488981b80000	             mov qword [rcx + 0xb8], rax	       485	move.c	FUNCTION_8	IF_1
0x4000b7c	    0x488991c00000	             mov qword [rcx + 0xc0], rdx	       485	move.c	FUNCTION_8	IF_1
0x4000b83	        0x488b45f8	                mov rax, qword [rbp - 8]	       486	move.c	FUNCTION_8	IF_1
0x4000b87	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x4000b8d	        0x488b45f8	                mov rax, qword [rbp - 8]	       486	move.c	FUNCTION_8	IF_1
0x4000b91	    0x8990c8000000	             mov dword [rax + 0xc8], edx	       486	move.c	FUNCTION_8	IF_1
0x4000b97	      0xe991000000	                           jmp 0x4000c2d	       502	move.c	FUNCTION_8
0x4000b9c	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000ba0	          0x8b5040	            mov edx, dword [rax + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000ba3	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000ba7	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bad	            0x39c2	                            cmp edx, eax	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000baf	            0x752d	                           jne 0x4000bde	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bb1	        0x488b45f8	                mov rax, qword [rbp - 8]	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bb5	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bbb	        0x488b45f8	                mov rax, qword [rbp - 8]	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bbf	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bc5	            0x39c2	                            cmp edx, eax	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bc7	            0x7515	                           jne 0x4000bde	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bc9	        0x488b45f8	                mov rax, qword [rbp - 8]	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bcd	          0x8b5044	            mov edx, dword [rax + 0x44] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bd0	        0x488b45f8	                mov rax, qword [rbp - 8]	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bd4	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bda	            0x39c2	                            cmp edx, eax	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bdc	            0x744f	                            je 0x4000c2d	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bde	        0x488b45f8	                mov rax, qword [rbp - 8]	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000be2	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000be8	          0x83e0f8	                     and eax, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000beb	            0x89c2	                            mov edx, eax	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bed	        0x488b45f8	                mov rax, qword [rbp - 8]	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bf1	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bf7	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bfb	          0x8b5040	            mov edx, dword [rax + 0x40] 	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000bfe	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000c02	    0x8990c0000000	             mov dword [rax + 0xc0], edx	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000c08	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000c0c	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000c12	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000c16	    0x8990c8000000	             mov dword [rax + 0xc8], edx	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000c1c	        0x488b45f8	                mov rax, qword [rbp - 8]	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000c20	          0x8b5044	            mov edx, dword [rax + 0x44] 	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000c23	        0x488b45f8	                mov rax, qword [rbp - 8]	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000c27	    0x8990c4000000	             mov dword [rax + 0xc4], edx	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000c2d	              0x90	                                     nop	       502	move.c	FUNCTION_8
0x4000c2e	              0x5d	                                 pop rbp	       502	move.c	FUNCTION_8
0x4000c2f	              0xc3	                                     ret	       502	move.c	FUNCTION_8
changed_cline_bef_curs	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,0:IF,0:DO,0:SWITCH,0	10
0x4000d42	              0x55	                                push rbp	       553	move.c	FUNCTION_12
0x4000d43	          0x4889e5	                            mov rbp, rsp	       553	move.c	FUNCTION_12
0x4000d46	    0x488b05000000	            mov rax, qword [0x04000d4d] 	       554	move.c	FUNCTION_12
0x4000d4d	    0x488b15000000	            mov rdx, qword [0x04000d54] 	       554	move.c	FUNCTION_12
0x4000d54	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       554	move.c	FUNCTION_12
0x4000d5a	          0x80e270	                            and dl, 0x70	       554	move.c	FUNCTION_12
0x4000d5d	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       554	move.c	FUNCTION_12
0x4000d63	              0x90	                                     nop	       556	move.c	FUNCTION_12
0x4000d64	              0x5d	                                 pop rbp	       556	move.c	FUNCTION_12
0x4000d65	              0xc3	                                     ret	       556	move.c	FUNCTION_12
comp_botline	ELSE,3:FOR,1:functions,0:WHILE,0:CALL,6:IF,5:DO,0:SWITCH,0	134
0x4000040	              0x55	                                push rbp	        52	move.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        52	move.c	FUNCTION_1
0x4000044	        0x4883ec40	                           sub rsp, 0x40	        52	move.c	FUNCTION_1
0x4000048	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        52	move.c	FUNCTION_1
0x400004c	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	move.c	FUNCTION_1
0x4000055	        0x488945f8	                mov qword [rbp - 8], rax	        52	move.c	FUNCTION_1
0x4000059	            0x31c0	                            xor eax, eax	        52	move.c	FUNCTION_1
0x400005b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        65	move.c	FUNCTION_1	CALL_1
0x400005f	          0x4889c7	                            mov rdi, rax	        65	move.c	FUNCTION_1	CALL_1
0x4000062	      0xe800000000	                          call 0x4000067	        65	move.c	FUNCTION_1	CALL_1
0x4000067	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        66	move.c	FUNCTION_1	IF_1
0x400006b	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	        66	move.c	FUNCTION_1	IF_1
0x4000071	          0x83e010	                           and eax, 0x10	        66	move.c	FUNCTION_1	IF_1
0x4000074	            0x85c0	                           test eax, eax	        66	move.c	FUNCTION_1	IF_1
0x4000076	            0x741e	                            je 0x4000096	        66	move.c	FUNCTION_1	IF_1
0x4000078	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        68	move.c	FUNCTION_1	IF_1
0x400007c	        0x488b4038	            mov rax, qword [rax + 0x38] 	        68	move.c	FUNCTION_1	IF_1
0x4000080	        0x488945f0	             mov qword [rbp - 0x10], rax	        68	move.c	FUNCTION_1	IF_1
0x4000084	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        69	move.c	FUNCTION_1	IF_1
0x4000088	    0x8b80d4000000	            mov eax, dword [rax + 0xd4] 	        69	move.c	FUNCTION_1	IF_1
0x400008e	          0x8945e0	             mov dword [rbp - 0x20], eax	        69	move.c	FUNCTION_1	IF_1
0x4000091	      0xe94b010000	                           jmp 0x40001e1	        69	move.c	FUNCTION_1	IF_1
0x4000096	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        73	move.c	FUNCTION_1	ELSE_1
0x400009a	        0x488b4078	            mov rax, qword [rax + 0x78] 	        73	move.c	FUNCTION_1	ELSE_1
0x400009e	        0x488945f0	             mov qword [rbp - 0x10], rax	        73	move.c	FUNCTION_1	ELSE_1
0x40000a2	    0xc745e0000000	               mov dword [rbp - 0x20], 0	        74	move.c	FUNCTION_1	ELSE_1
0x40000a9	      0xe933010000	                           jmp 0x40001e1	        77	move.c	FUNCTION_1	FOR_1
0x40000ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        80	move.c	FUNCTION_1	FOR_1
0x40000b2	        0x488945e8	             mov qword [rbp - 0x18], rax	        80	move.c	FUNCTION_1	FOR_1
0x40000b6	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        81	move.c	FUNCTION_1	FOR_1
0x40000bd	        0x488d55e8	                   lea rdx, [rbp - 0x18]	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000c1	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000c9	    0x41b900000000	                              mov r9d, 0	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000cf	    0x41b801000000	                              mov r8d, 1	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000d5	          0x4889d1	                            mov rcx, rdx	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000d8	      0xba00000000	                              mov edx, 0	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000dd	          0x4889c7	                            mov rdi, rax	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000e0	      0xe800000000	                          call 0x40000e5	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000e5	            0x85c0	                           test eax, eax	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000e7	            0x7410	                            je 0x40000f9	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000e9	    0xc745dc010000	               mov dword [rbp - 0x24], 1	        84	move.c	FUNCTION_1	FOR_1	IF_2
0x40000f0	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	        85	move.c	FUNCTION_1	FOR_1	IF_2
0x40000f7	            0xeb54	                           jmp 0x400014d	        85	move.c	FUNCTION_1	FOR_1	IF_2
0x40000f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x40000fd	        0x488b4078	            mov rax, qword [rax + 0x78] 	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000101	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000105	            0x752b	                           jne 0x4000132	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000107	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x400010b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x400010f	      0xba01000000	                              mov edx, 1	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000114	          0x4889ce	                            mov rsi, rcx	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000117	          0x4889c7	                            mov rdi, rax	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x400011a	      0xe800000000	                          call 0x400011f	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x400011f	            0x89c2	                            mov edx, eax	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000121	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000125	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x400012b	             0x1d0	                            add eax, edx	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x400012d	          0x8945dc	             mov dword [rbp - 0x24], eax	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000130	            0xeb1b	                           jmp 0x400014d	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000132	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000136	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x400013a	      0xba01000000	                              mov edx, 1	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x400013f	          0x4889ce	                            mov rsi, rcx	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000142	          0x4889c7	                            mov rdi, rax	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000145	      0xe800000000	                          call 0x400014a	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x400014a	          0x8945dc	             mov dword [rbp - 0x24], eax	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x400014d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x4000151	        0x488b4038	            mov rax, qword [rax + 0x38] 	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x4000155	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        95	move.c	FUNCTION_1	FOR_1	IF_4
0x4000159	            0x7c5d	                            jl 0x40001b8	        95	move.c	FUNCTION_1	FOR_1	IF_4
0x400015b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x400015f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x4000163	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x4000167	          0x4839c2	                            cmp rdx, rax	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x400016a	            0x7f4c	                            jg 0x40001b8	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x400016c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       103	move.c	FUNCTION_1	FOR_1	IF_4
0x4000170	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       103	move.c	FUNCTION_1	FOR_1	IF_4
0x4000173	    0x8990d4000000	             mov dword [rax + 0xd4], edx	       103	move.c	FUNCTION_1	FOR_1	IF_4
0x4000179	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       104	move.c	FUNCTION_1	FOR_1	IF_4
0x400017d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       104	move.c	FUNCTION_1	FOR_1	IF_4
0x4000180	    0x8990cc000000	             mov dword [rax + 0xcc], edx	       104	move.c	FUNCTION_1	FOR_1	IF_4
0x4000186	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       106	move.c	FUNCTION_1	FOR_1	IF_4
0x400018a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       106	move.c	FUNCTION_1	FOR_1	IF_4
0x400018d	    0x8990d0000000	             mov dword [rax + 0xd0], edx	       106	move.c	FUNCTION_1	FOR_1	IF_4
0x4000193	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       108	move.c	FUNCTION_1	FOR_1	IF_4	CALL_5
0x4000197	          0x4889c7	                            mov rdi, rax	       108	move.c	FUNCTION_1	FOR_1	IF_4	CALL_5
0x400019a	      0xe8aa000000	          call sym.redraw_for_cursorline	       108	move.c	FUNCTION_1	FOR_1	IF_4	CALL_5
0x400019f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x40001a3	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x40001a9	          0x83c818	                            or eax, 0x18	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x40001ac	            0x89c2	                            mov edx, eax	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x40001ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x40001b2	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x40001b8	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40001bb	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40001be	             0x1c2	                            add edx, eax	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40001c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40001c4	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40001ca	            0x39c2	                            cmp edx, eax	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40001cc	            0x7f2a	                            jg 0x40001f8	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40001ce	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       113	move.c	FUNCTION_1	FOR_1
0x40001d1	           0x145e0	             add dword [rbp - 0x20], eax	       113	move.c	FUNCTION_1	FOR_1
0x40001d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       115	move.c	FUNCTION_1	FOR_1
0x40001d8	        0x488945f0	             mov qword [rbp - 0x10], rax	       115	move.c	FUNCTION_1	FOR_1
0x40001dc	      0x488345f001	               add qword [rbp - 0x10], 1	        77	move.c	FUNCTION_1	FOR_1
0x40001e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        77	move.c	FUNCTION_1	FOR_1
0x40001e5	        0x488b4008	                mov rax, qword [rax + 8]	        77	move.c	FUNCTION_1	FOR_1
0x40001e9	          0x488b00	                    mov rax, qword [rax]	        77	move.c	FUNCTION_1	FOR_1
0x40001ec	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        77	move.c	FUNCTION_1	FOR_1
0x40001f0	     0xf8db8feffff	                           jge 0x40000ae	        77	move.c	FUNCTION_1	FOR_1
0x40001f6	            0xeb01	                           jmp 0x40001f9	        77	move.c	FUNCTION_1	FOR_1
0x40001f8	              0x90	                                     nop	       112	move.c	FUNCTION_1	FOR_1	IF_5
0x40001f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       120	move.c	FUNCTION_1
0x40001fd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       120	move.c	FUNCTION_1
0x4000201	    0x488990e80000	             mov qword [rax + 0xe8], rdx	       120	move.c	FUNCTION_1
0x4000208	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       121	move.c	FUNCTION_1
0x400020c	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       121	move.c	FUNCTION_1
0x4000212	          0x83c860	                            or eax, 0x60	       121	move.c	FUNCTION_1
0x4000215	            0x89c2	                            mov edx, eax	       121	move.c	FUNCTION_1
0x4000217	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       121	move.c	FUNCTION_1
0x400021b	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       121	move.c	FUNCTION_1
0x4000221	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       123	move.c	FUNCTION_1	CALL_6
0x4000224	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       123	move.c	FUNCTION_1	CALL_6
0x4000228	            0x89d6	                            mov esi, edx	       123	move.c	FUNCTION_1	CALL_6
0x400022a	          0x4889c7	                            mov rdi, rax	       123	move.c	FUNCTION_1	CALL_6
0x400022d	      0xe800000000	                          call 0x4000232	       123	move.c	FUNCTION_1	CALL_6
0x4000232	              0x90	                                     nop	       124	move.c	FUNCTION_1
0x4000233	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	move.c	FUNCTION_1
0x4000237	    0x644833042528	                xor rax, qword fs:[0x28]	       124	move.c	FUNCTION_1
0x4000240	            0x7405	                            je 0x4000247	       124	move.c	FUNCTION_1
0x4000242	      0xe800000000	                          call 0x4000247	       124	move.c	FUNCTION_1
0x4000247	              0xc9	                                   leave	       124	move.c	FUNCTION_1
0x4000248	              0xc3	                                     ret	       124	move.c	FUNCTION_1
curs_columns	ELSE,15:FOR,0:functions,0:WHILE,1:CALL,16:IF,35:DO,0:SWITCH,0	627
0x4001891	              0x55	                                push rbp	       923	move.c	FUNCTION_32
0x4001892	          0x4889e5	                            mov rbp, rsp	       923	move.c	FUNCTION_32
0x4001895	              0x53	                                push rbx	       923	move.c	FUNCTION_32
0x4001896	        0x4883ec58	                           sub rsp, 0x58	       923	move.c	FUNCTION_32
0x400189a	          0x897dac	             mov dword [rbp - 0x54], edi	       923	move.c	FUNCTION_32
0x400189d	    0x64488b042528	                mov rax, qword fs:[0x28]	       923	move.c	FUNCTION_32
0x40018a6	        0x488945e8	             mov qword [rbp - 0x18], rax	       923	move.c	FUNCTION_32
0x40018aa	            0x31c0	                            xor eax, eax	       923	move.c	FUNCTION_32
0x40018ac	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       929	move.c	FUNCTION_32
0x40018b3	      0xe800000000	                          call 0x40018b8	       939	move.c	FUNCTION_32	CALL_1
0x40018b8	    0x488b05000000	            mov rax, qword [0x040018bf] 	       944	move.c	FUNCTION_32	IF_1
0x40018bf	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       944	move.c	FUNCTION_32	IF_1
0x40018c5	          0x83e010	                           and eax, 0x10	       944	move.c	FUNCTION_32	IF_1
0x40018c8	            0x85c0	                           test eax, eax	       944	move.c	FUNCTION_32	IF_1
0x40018ca	            0x750f	                           jne 0x40018db	       944	move.c	FUNCTION_32	IF_1
0x40018cc	    0x488b05000000	            mov rax, qword [0x040018d3] 	       945	move.c	FUNCTION_32	CALL_2
0x40018d3	          0x4889c7	                            mov rdi, rax	       945	move.c	FUNCTION_32	CALL_2
0x40018d6	      0xe82cf6ffff	                      call sym.curs_rows	       945	move.c	FUNCTION_32	CALL_2
0x40018db	    0x488b05000000	            mov rax, qword [0x040018e2] 	       951	move.c	FUNCTION_32	IF_2
0x40018e2	    0x8b80d0000000	            mov eax, dword [rax + 0xd0] 	       951	move.c	FUNCTION_32	IF_2
0x40018e8	            0x85c0	                           test eax, eax	       951	move.c	FUNCTION_32	IF_2
0x40018ea	            0x742b	                            je 0x4001917	       951	move.c	FUNCTION_32	IF_2
0x40018ec	    0x488b05000000	            mov rax, qword [0x040018f3] 	       953	move.c	FUNCTION_32	IF_2
0x40018f3	    0x488b15000000	            mov rdx, qword [0x040018fa] 	       953	move.c	FUNCTION_32	IF_2
0x40018fa	    0x8b9294000000	            mov edx, dword [rdx + 0x94] 	       953	move.c	FUNCTION_32	IF_2
0x4001900	          0x8955bc	             mov dword [rbp - 0x44], edx	       953	move.c	FUNCTION_32	IF_2
0x4001903	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       953	move.c	FUNCTION_32	IF_2
0x4001906	    0x8990d8000000	             mov dword [rax + 0xd8], edx	       953	move.c	FUNCTION_32	IF_2
0x400190c	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	       953	move.c	FUNCTION_32	IF_2
0x4001912	          0x8945b8	             mov dword [rbp - 0x48], eax	       953	move.c	FUNCTION_32	IF_2
0x4001915	            0xeb33	                           jmp 0x400194a	       953	move.c	FUNCTION_32	IF_2
0x4001917	    0x488b05000000	            mov rax, qword [0x0400191e] 	       957	move.c	FUNCTION_32	ELSE_1
0x400191e	    0x488d88d80000	                   lea rcx, [rax + 0xd8]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4001925	    0x488b05000000	            mov rax, qword [0x0400192c] 	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x400192c	        0x488d7038	                   lea rsi, [rax + 0x38]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4001930	    0x488b05000000	            mov rax, qword [0x04001937] 	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4001937	        0x488d7dbc	                   lea rdi, [rbp - 0x44]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x400193b	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x400193f	          0x4989f8	                             mov r8, rdi	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4001942	          0x4889c7	                            mov rdi, rax	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4001945	      0xe800000000	                          call 0x400194a	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x400194a	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       960	move.c	FUNCTION_32	IF_3
0x400194d	    0x8b0500000000	            mov eax, dword [0x04001953] 	       960	move.c	FUNCTION_32	IF_3
0x4001953	            0x39c2	                            cmp edx, eax	       960	move.c	FUNCTION_32	IF_3
0x4001955	            0x7e0a	                           jle 0x4001961	       960	move.c	FUNCTION_32	IF_3
0x4001957	    0xc70500000000	     mov dword [0x04001961], 0xffffffff 	       961	move.c	FUNCTION_32	IF_3
0x4001961	      0xe800000000	                          call 0x4001966	       963	move.c	FUNCTION_32	CALL_4
0x4001966	          0x8945c4	             mov dword [rbp - 0x3c], eax	       963	move.c	FUNCTION_32	CALL_4
0x4001969	    0x488b05000000	            mov rax, qword [0x04001970] 	       964	move.c	FUNCTION_32
0x4001970	    0x488b15000000	            mov rdx, qword [0x04001977] 	       964	move.c	FUNCTION_32
0x4001977	    0x8b8ad8000000	            mov ecx, dword [rdx + 0xd8] 	       964	move.c	FUNCTION_32
0x400197d	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       964	move.c	FUNCTION_32
0x4001980	             0x1ca	                            add edx, ecx	       964	move.c	FUNCTION_32
0x4001982	    0x8990e0000000	             mov dword [rax + 0xe0], edx	       964	move.c	FUNCTION_32
0x4001988	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       965	move.c	FUNCTION_32
0x400198b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       965	move.c	FUNCTION_32
0x400198e	             0x1d0	                            add eax, edx	       965	move.c	FUNCTION_32
0x4001990	          0x8945bc	             mov dword [rbp - 0x44], eax	       965	move.c	FUNCTION_32
0x4001993	    0x488b05000000	            mov rax, qword [0x0400199a] 	       970	move.c	FUNCTION_32
0x400199a	    0x488b15000000	            mov rdx, qword [0x040019a1] 	       970	move.c	FUNCTION_32
0x40019a1	    0x8b92d4000000	            mov edx, dword [rdx + 0xd4] 	       970	move.c	FUNCTION_32
0x40019a7	    0x8990dc000000	             mov dword [rax + 0xdc], edx	       970	move.c	FUNCTION_32
0x40019ad	    0x488b05000000	            mov rax, qword [0x040019b4] 	       972	move.c	FUNCTION_32
0x40019b4	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       972	move.c	FUNCTION_32
0x40019ba	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	       972	move.c	FUNCTION_32
0x40019bd	          0x8945d8	             mov dword [rbp - 0x28], eax	       972	move.c	FUNCTION_32
0x40019c0	        0x837dd800	               cmp dword [rbp - 0x28], 0	       973	move.c	FUNCTION_32	IF_4
0x40019c4	            0x7f3f	                            jg 0x4001a05	       973	move.c	FUNCTION_32	IF_4
0x40019c6	    0x488b05000000	            mov rax, qword [0x040019cd] 	       976	move.c	FUNCTION_32	IF_4
0x40019cd	    0x488b15000000	            mov rdx, qword [0x040019d4] 	       976	move.c	FUNCTION_32	IF_4
0x40019d4	    0x8b92ac000000	            mov edx, dword [rdx + 0xac] 	       976	move.c	FUNCTION_32	IF_4
0x40019da	          0x83ea01	                              sub edx, 1	       976	move.c	FUNCTION_32	IF_4
0x40019dd	    0x8990e0000000	             mov dword [rax + 0xe0], edx	       976	move.c	FUNCTION_32	IF_4
0x40019e3	    0x488b05000000	            mov rax, qword [0x040019ea] 	       977	move.c	FUNCTION_32	IF_4
0x40019ea	    0x488b15000000	            mov rdx, qword [0x040019f1] 	       977	move.c	FUNCTION_32	IF_4
0x40019f1	    0x8b92a0000000	            mov edx, dword [rdx + 0xa0] 	       977	move.c	FUNCTION_32	IF_4
0x40019f7	          0x83ea01	                              sub edx, 1	       977	move.c	FUNCTION_32	IF_4
0x40019fa	    0x8990dc000000	             mov dword [rax + 0xdc], edx	       977	move.c	FUNCTION_32	IF_4
0x4001a00	      0xe91f030000	                           jmp 0x4001d24	       977	move.c	FUNCTION_32	IF_4
0x4001a05	    0x488b05000000	            mov rax, qword [0x04001a0c] 	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001a0c	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001a12	            0x85c0	                           test eax, eax	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001a14	     0xf840e010000	                            je 0x4001b28	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001a1a	    0x488b05000000	            mov rax, qword [0x04001a21] 	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001a21	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001a27	            0x85c0	                           test eax, eax	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001a29	     0xf84f9000000	                            je 0x4001b28	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001a2f	      0xe800000000	                          call 0x4001a34	       981	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x4001a34	            0x89c2	                            mov edx, eax	       981	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x4001a36	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       981	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x4001a39	             0x1d0	                            add eax, edx	       981	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x4001a3b	          0x8945d0	             mov dword [rbp - 0x30], eax	       981	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x4001a3e	    0x488b05000000	            mov rax, qword [0x04001a45] 	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a45	    0x8b90e0000000	            mov edx, dword [rax + 0xe0] 	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a4b	    0x488b05000000	            mov rax, qword [0x04001a52] 	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a52	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a58	            0x39c2	                            cmp edx, eax	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a5a	     0xf8cc3020000	                            jl 0x4001d23	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a60	    0x488b05000000	            mov rax, qword [0x04001a67] 	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a67	    0x8b90e0000000	            mov edx, dword [rax + 0xe0] 	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a6d	    0x488b05000000	            mov rax, qword [0x04001a74] 	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a74	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a7a	            0x29c2	                            sub edx, eax	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a7c	            0x89d0	                            mov eax, edx	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a7e	              0x99	                                     cdq	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a7f	          0xf77dd0	                 idiv dword [rbp - 0x30]	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a82	          0x83c001	                              add eax, 1	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a85	          0x8945c8	             mov dword [rbp - 0x38], eax	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a88	    0x488b05000000	            mov rax, qword [0x04001a8f] 	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a8f	    0x488b15000000	            mov rdx, qword [0x04001a96] 	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a96	    0x8b8ae0000000	            mov ecx, dword [rdx + 0xe0] 	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a9c	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001a9f	         0xfaf55d0	            imul edx, dword [rbp - 0x30]	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001aa3	            0x29d1	                            sub ecx, edx	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001aa5	            0x89ca	                            mov edx, ecx	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001aa7	    0x8990e0000000	             mov dword [rax + 0xe0], edx	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001aad	    0x488b05000000	            mov rax, qword [0x04001ab4] 	       989	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001ab4	    0x488b15000000	            mov rdx, qword [0x04001abb] 	       989	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001abb	    0x8b8adc000000	            mov ecx, dword [rdx + 0xdc] 	       989	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001ac1	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       989	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001ac4	             0x1ca	                            add edx, ecx	       989	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001ac6	    0x8990dc000000	             mov dword [rax + 0xdc], edx	       989	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001acc	    0x488b05000000	            mov rax, qword [0x04001ad3] 	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ad3	           0xfb600	                   movzx eax, byte [rax]	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ad6	            0x84c0	                             test al, al	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ad8	     0xf8445020000	                            je 0x4001d23	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ade	      0xe800000000	                          call 0x4001ae3	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ae3	           0xfb600	                   movzx eax, byte [rax]	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ae6	            0x84c0	                             test al, al	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ae8	     0xf8535020000	                           jne 0x4001d23	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001aee	    0x488b05000000	            mov rax, qword [0x04001af5] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001af5	    0x8b98e0000000	            mov ebx, dword [rax + 0xe0] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001afb	    0x488b05000000	            mov rax, qword [0x04001b02] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001b02	          0x4889c7	                            mov rdi, rax	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001b05	      0xe800000000	                          call 0x4001b0a	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001b0a	            0x39c3	                            cmp ebx, eax	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001b0c	     0xf8511020000	                           jne 0x4001d23	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001b12	    0x488b05000000	            mov rax, qword [0x04001b19] 	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x4001b19	    0xc780e0000000	               mov dword [rax + 0xe0], 0	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x4001b23	      0xe9fb010000	                           jmp 0x4001d23	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001b28	        0x837dac00	               cmp dword [rbp - 0x54], 0	      1005	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b2c	     0xf8493010000	                            je 0x4001cc5	      1005	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b32	    0x488b05000000	            mov rax, qword [0x04001b39] 	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b39	    0x8b80d0000000	            mov eax, dword [rax + 0xd0] 	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b3f	            0x85c0	                           test eax, eax	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b41	     0xf857e010000	                           jne 0x4001cc5	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b47	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b4a	    0x488b05000000	            mov rax, qword [0x04001b51] 	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b51	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b57	            0x29c2	                            sub edx, eax	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b59	            0x89d0	                            mov eax, edx	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b5b	            0x89c2	                            mov edx, eax	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b5d	    0x488b05000000	            mov rax, qword [0x04001b64] 	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b64	            0x29c2	                            sub edx, eax	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b66	            0x89d0	                            mov eax, edx	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b68	          0x8945dc	             mov dword [rbp - 0x24], eax	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b6b	    0x488b05000000	            mov rax, qword [0x04001b72] 	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b72	            0x89c1	                            mov ecx, eax	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b74	    0x488b05000000	            mov rax, qword [0x04001b7b] 	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b7b	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b81	    0x488b05000000	            mov rax, qword [0x04001b88] 	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b88	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b8e	             0x1d0	                            add eax, edx	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b90	            0x29c1	                            sub ecx, eax	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b92	            0x89c8	                            mov eax, ecx	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b94	            0x89c2	                            mov edx, eax	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b96	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b99	             0x1d0	                            add eax, edx	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b9b	          0x83c001	                              add eax, 1	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001b9e	          0x8945e0	             mov dword [rbp - 0x20], eax	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001ba1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4001ba5	            0x780a	                            js 0x4001bb1	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4001ba7	        0x837de000	               cmp dword [rbp - 0x20], 0	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4001bab	     0xf8ee7000000	                           jle 0x4001c98	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4001bb1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1022	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4001bb5	            0x790a	                           jns 0x4001bc1	      1022	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4001bb7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4001bba	            0xf7d8	                                 neg eax	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4001bbc	          0x8945c0	             mov dword [rbp - 0x40], eax	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4001bbf	            0xeb06	                           jmp 0x4001bc7	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4001bc1	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1025	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_4
0x4001bc4	          0x8945c0	             mov dword [rbp - 0x40], eax	      1025	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_4
0x4001bc7	    0x488b05000000	            mov rax, qword [0x04001bce] 	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bce	          0x4885c0	                           test rax, rax	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bd1	            0x7419	                            je 0x4001bec	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bd3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bd6	            0x89c2	                            mov edx, eax	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bd8	          0xc1ea1f	                           shr edx, 0x1f	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bdb	             0x1d0	                            add eax, edx	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bdd	            0xd1f8	                              sar eax, 1	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bdf	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001be2	            0x7e08	                           jle 0x4001bec	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001be4	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001be7	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bea	            0x7c27	                            jl 0x4001c13	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bec	    0x488b05000000	            mov rax, qword [0x04001bf3] 	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bf3	    0x8b80e0000000	            mov eax, dword [rax + 0xe0] 	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bf9	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bfc	            0x89c2	                            mov edx, eax	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001bfe	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001c01	            0x89c1	                            mov ecx, eax	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001c03	          0xc1e91f	                           shr ecx, 0x1f	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001c06	             0x1c8	                            add eax, ecx	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001c08	            0xd1f8	                              sar eax, 1	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001c0a	            0x29c2	                            sub edx, eax	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001c0c	            0x89d0	                            mov eax, edx	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001c0e	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001c11	            0xeb4c	                           jmp 0x4001c5f	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001c13	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1033	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4001c16	          0x4863d0	                         movsxd rdx, eax	      1033	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4001c19	    0x488b05000000	            mov rax, qword [0x04001c20] 	      1033	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4001c20	          0x4839c2	                            cmp rdx, rax	      1033	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4001c23	            0x7d0a	                           jge 0x4001c2f	      1033	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4001c25	    0x488b05000000	            mov rax, qword [0x04001c2c] 	      1034	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4001c2c	          0x8945c0	             mov dword [rbp - 0x40], eax	      1034	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4001c2f	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001c33	            0x7915	                           jns 0x4001c4a	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001c35	    0x488b05000000	            mov rax, qword [0x04001c3c] 	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001c3c	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001c42	          0x2b45c0	             sub eax, dword [rbp - 0x40]	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001c45	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001c48	            0xeb15	                           jmp 0x4001c5f	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001c4a	    0x488b05000000	            mov rax, qword [0x04001c51] 	      1038	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	ELSE_6
0x4001c51	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      1038	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	ELSE_6
0x4001c57	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1038	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	ELSE_6
0x4001c5a	             0x1d0	                            add eax, edx	      1038	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	ELSE_6
0x4001c5c	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1038	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	ELSE_6
0x4001c5f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1040	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_14
0x4001c63	            0x7907	                           jns 0x4001c6c	      1040	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_14
0x4001c65	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1041	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_14
0x4001c6c	    0x488b05000000	            mov rax, qword [0x04001c73] 	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4001c73	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4001c79	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4001c7c	            0x741a	                            je 0x4001c98	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4001c7e	    0x488b05000000	            mov rax, qword [0x04001c85] 	      1044	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4001c85	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1044	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4001c88	    0x899094000000	             mov dword [rax + 0x94], edx	      1044	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4001c8e	      0xbf28000000	                           mov edi, 0x28	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4001c93	      0xe800000000	                          call 0x4001c98	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4001c98	    0x488b05000000	            mov rax, qword [0x04001c9f] 	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001c9f	    0x488b15000000	            mov rdx, qword [0x04001ca6] 	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001ca6	    0x8b8ae0000000	            mov ecx, dword [rdx + 0xe0] 	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001cac	    0x488b15000000	            mov rdx, qword [0x04001cb3] 	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001cb3	    0x8b9294000000	            mov edx, dword [rdx + 0x94] 	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001cb9	            0x29d1	                            sub ecx, edx	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001cbb	            0x89ca	                            mov edx, ecx	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001cbd	    0x8990e0000000	             mov dword [rax + 0xe0], edx	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001cc3	            0xeb5f	                           jmp 0x4001d24	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001cc5	    0x488b05000000	            mov rax, qword [0x04001ccc] 	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001ccc	    0x8b90e0000000	            mov edx, dword [rax + 0xe0] 	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001cd2	    0x488b05000000	            mov rax, qword [0x04001cd9] 	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001cd9	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001cdf	            0x39c2	                            cmp edx, eax	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001ce1	            0x7e2d	                           jle 0x4001d10	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001ce3	    0x488b05000000	            mov rax, qword [0x04001cea] 	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001cea	    0x488b15000000	            mov rdx, qword [0x04001cf1] 	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001cf1	    0x8b8ae0000000	            mov ecx, dword [rdx + 0xe0] 	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001cf7	    0x488b15000000	            mov rdx, qword [0x04001cfe] 	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001cfe	    0x8b9294000000	            mov edx, dword [rdx + 0x94] 	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001d04	            0x29d1	                            sub ecx, edx	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001d06	            0x89ca	                            mov edx, ecx	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001d08	    0x8990e0000000	             mov dword [rax + 0xe0], edx	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001d0e	            0xeb14	                           jmp 0x4001d24	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001d10	    0x488b05000000	            mov rax, qword [0x04001d17] 	      1054	move.c	FUNCTION_32	ELSE_8
0x4001d17	    0xc780e0000000	               mov dword [rax + 0xe0], 0	      1054	move.c	FUNCTION_32	ELSE_8
0x4001d21	            0xeb01	                           jmp 0x4001d24	      1054	move.c	FUNCTION_32	ELSE_8
0x4001d23	              0x90	                                     nop	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001d24	    0x488b05000000	            mov rax, qword [0x04001d2b] 	      1059	move.c	FUNCTION_32	IF_17
0x4001d2b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1059	move.c	FUNCTION_32	IF_17
0x4001d2f	    0x488b05000000	            mov rax, qword [0x04001d36] 	      1059	move.c	FUNCTION_32	IF_17
0x4001d36	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1059	move.c	FUNCTION_32	IF_17
0x4001d3a	          0x4839c2	                            cmp rdx, rax	      1059	move.c	FUNCTION_32	IF_17
0x4001d3d	            0x752b	                           jne 0x4001d6a	      1059	move.c	FUNCTION_32	IF_17
0x4001d3f	    0x488b05000000	            mov rax, qword [0x04001d46] 	      1060	move.c	FUNCTION_32	IF_17
0x4001d46	    0x488b15000000	            mov rdx, qword [0x04001d4d] 	      1060	move.c	FUNCTION_32	IF_17
0x4001d4d	    0x8b8adc000000	            mov ecx, dword [rdx + 0xdc] 	      1060	move.c	FUNCTION_32	IF_17
0x4001d53	    0x488b15000000	            mov rdx, qword [0x04001d5a] 	      1060	move.c	FUNCTION_32	IF_17
0x4001d5a	    0x8b9284000000	            mov edx, dword [rdx + 0x84] 	      1060	move.c	FUNCTION_32	IF_17
0x4001d60	             0x1ca	                            add edx, ecx	      1060	move.c	FUNCTION_32	IF_17
0x4001d62	    0x8990dc000000	             mov dword [rax + 0xdc], edx	      1060	move.c	FUNCTION_32	IF_17
0x4001d68	            0xeb3b	                           jmp 0x4001da5	      1060	move.c	FUNCTION_32	IF_17
0x4001d6a	    0x488b05000000	            mov rax, qword [0x04001d71] 	      1062	move.c	FUNCTION_32	CALL_9
0x4001d71	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1062	move.c	FUNCTION_32	CALL_9
0x4001d75	    0x488b05000000	            mov rax, qword [0x04001d7c] 	      1062	move.c	FUNCTION_32	CALL_9
0x4001d7c	          0x4889d6	                            mov rsi, rdx	      1062	move.c	FUNCTION_32	CALL_9
0x4001d7f	          0x4889c7	                            mov rdi, rax	      1062	move.c	FUNCTION_32	CALL_9
0x4001d82	      0xe800000000	                          call 0x4001d87	      1062	move.c	FUNCTION_32	CALL_9
0x4001d87	            0x89c1	                            mov ecx, eax	      1062	move.c	FUNCTION_32	CALL_9
0x4001d89	    0x488b05000000	            mov rax, qword [0x04001d90] 	      1062	move.c	FUNCTION_32	CALL_9
0x4001d90	    0x488b15000000	            mov rdx, qword [0x04001d97] 	      1062	move.c	FUNCTION_32	CALL_9
0x4001d97	    0x8b92dc000000	            mov edx, dword [rdx + 0xdc] 	      1062	move.c	FUNCTION_32	CALL_9
0x4001d9d	             0x1ca	                            add edx, ecx	      1062	move.c	FUNCTION_32	CALL_9
0x4001d9f	    0x8990dc000000	             mov dword [rax + 0xdc], edx	      1062	move.c	FUNCTION_32	CALL_9
0x4001da5	    0x488b05000000	            mov rax, qword [0x04001dac] 	      1065	move.c	FUNCTION_32
0x4001dac	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1065	move.c	FUNCTION_32
0x4001db2	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1065	move.c	FUNCTION_32
0x4001db5	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1067	move.c	FUNCTION_32
0x4001dbc	    0x488b05000000	            mov rax, qword [0x04001dc3] 	      1068	move.c	FUNCTION_32	IF_18
0x4001dc3	    0x8b90dc000000	            mov edx, dword [rax + 0xdc] 	      1068	move.c	FUNCTION_32	IF_18
0x4001dc9	    0x488b05000000	            mov rax, qword [0x04001dd0] 	      1068	move.c	FUNCTION_32	IF_18
0x4001dd0	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1068	move.c	FUNCTION_32	IF_18
0x4001dd6	            0x39c2	                            cmp edx, eax	      1068	move.c	FUNCTION_32	IF_18
0x4001dd8	            0x7d78	                           jge 0x4001e52	      1068	move.c	FUNCTION_32	IF_18
0x4001dda	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1069	move.c	FUNCTION_32	IF_18
0x4001dde	            0x7f32	                            jg 0x4001e12	      1069	move.c	FUNCTION_32	IF_18
0x4001de0	    0x488b05000000	            mov rax, qword [0x04001de7] 	      1070	move.c	FUNCTION_32	IF_18
0x4001de7	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      1070	move.c	FUNCTION_32	IF_18
0x4001ded	          0x4863d0	                         movsxd rdx, eax	      1070	move.c	FUNCTION_32	IF_18
0x4001df0	    0x488b05000000	            mov rax, qword [0x04001df7] 	      1070	move.c	FUNCTION_32	IF_18
0x4001df7	          0x4801c2	                            add rdx, rax	      1070	move.c	FUNCTION_32	IF_18
0x4001dfa	    0x488b05000000	            mov rax, qword [0x04001e01] 	      1070	move.c	FUNCTION_32	IF_18
0x4001e01	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1070	move.c	FUNCTION_32	IF_18
0x4001e07	            0x4898	                                    cdqe	      1070	move.c	FUNCTION_32	IF_18
0x4001e09	          0x4839c2	                            cmp rdx, rax	      1070	move.c	FUNCTION_32	IF_18
0x4001e0c	     0xf8c81040000	                            jl 0x4002293	      1070	move.c	FUNCTION_32	IF_18
0x4001e12	    0x488b05000000	            mov rax, qword [0x04001e19] 	      1077	move.c	FUNCTION_32	IF_18
0x4001e19	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      1073	move.c	FUNCTION_32	IF_18
0x4001e1d	    0x488b05000000	            mov rax, qword [0x04001e24] 	      1073	move.c	FUNCTION_32	IF_18
0x4001e24	      0xba00000000	                              mov edx, 0	      1071	move.c	FUNCTION_32	IF_18
0x4001e29	          0x4889ce	                            mov rsi, rcx	      1071	move.c	FUNCTION_32	IF_18
0x4001e2c	          0x4889c7	                            mov rdi, rax	      1071	move.c	FUNCTION_32	IF_18
0x4001e2f	      0xe800000000	                          call 0x4001e34	      1071	move.c	FUNCTION_32	IF_18
0x4001e34	          0x8945cc	             mov dword [rbp - 0x34], eax	      1071	move.c	FUNCTION_32	IF_18
0x4001e37	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1078	move.c	FUNCTION_32	IF_18
0x4001e3a	          0x8d50ff	                      lea edx, [rax - 1]	      1078	move.c	FUNCTION_32	IF_18
0x4001e3d	    0x488b05000000	            mov rax, qword [0x04001e44] 	      1078	move.c	FUNCTION_32	IF_18
0x4001e44	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1078	move.c	FUNCTION_32	IF_18
0x4001e4a	            0x39c2	                            cmp edx, eax	      1071	move.c	FUNCTION_32	IF_18
0x4001e4c	     0xf8c41040000	                            jl 0x4002293	      1071	move.c	FUNCTION_32	IF_18
0x4001e52	    0x488b05000000	            mov rax, qword [0x04001e59] 	      1079	move.c	FUNCTION_32	IF_18
0x4001e59	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1079	move.c	FUNCTION_32	IF_18
0x4001e5f	            0x85c0	                           test eax, eax	      1079	move.c	FUNCTION_32	IF_18
0x4001e61	     0xf842c040000	                            je 0x4002293	      1079	move.c	FUNCTION_32	IF_18
0x4001e67	    0x488b05000000	            mov rax, qword [0x04001e6e] 	      1080	move.c	FUNCTION_32	IF_18
0x4001e6e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1080	move.c	FUNCTION_32	IF_18
0x4001e72	    0x488b05000000	            mov rax, qword [0x04001e79] 	      1080	move.c	FUNCTION_32	IF_18
0x4001e79	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1080	move.c	FUNCTION_32	IF_18
0x4001e7d	          0x4839c2	                            cmp rdx, rax	      1080	move.c	FUNCTION_32	IF_18
0x4001e80	     0xf850d040000	                           jne 0x4002293	      1080	move.c	FUNCTION_32	IF_18
0x4001e86	        0x837dd000	               cmp dword [rbp - 0x30], 0	      1081	move.c	FUNCTION_32	IF_18
0x4001e8a	     0xf8e03040000	                           jle 0x4002293	      1081	move.c	FUNCTION_32	IF_18
0x4001e90	    0x488b05000000	            mov rax, qword [0x04001e97] 	      1082	move.c	FUNCTION_32	IF_18
0x4001e97	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1082	move.c	FUNCTION_32	IF_18
0x4001e9d	            0x85c0	                           test eax, eax	      1082	move.c	FUNCTION_32	IF_18
0x4001e9f	     0xf84ee030000	                            je 0x4002293	      1082	move.c	FUNCTION_32	IF_18
0x4001ea5	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      1090	move.c	FUNCTION_32	IF_18
0x4001eac	    0x488b05000000	            mov rax, qword [0x04001eb3] 	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001eb3	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001eb9	          0x4863d0	                         movsxd rdx, eax	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001ebc	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001ebf	          0x4863c8	                         movsxd rcx, eax	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001ec2	    0x488b05000000	            mov rax, qword [0x04001ec9] 	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001ec9	        0x480fafc1	                           imul rax, rcx	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001ecd	          0x4801c2	                            add rdx, rax	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001ed0	    0x488b05000000	            mov rax, qword [0x04001ed7] 	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001ed7	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001edd	            0x4898	                                    cdqe	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001edf	          0x4839c2	                            cmp rdx, rax	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001ee2	            0x7e07	                           jle 0x4001eeb	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4001ee4	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      1092	move.c	FUNCTION_32	IF_18	IF_19
0x4001eeb	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1095	move.c	FUNCTION_32	IF_18	IF_20
0x4001eef	            0x7525	                           jne 0x4001f16	      1095	move.c	FUNCTION_32	IF_18	IF_20
0x4001ef1	    0x488b05000000	            mov rax, qword [0x04001ef8] 	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4001ef8	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4001efc	    0x488b05000000	            mov rax, qword [0x04001f03] 	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4001f03	      0xba00000000	                              mov edx, 0	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4001f08	          0x4889ce	                            mov rsi, rcx	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4001f0b	          0x4889c7	                            mov rdi, rax	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4001f0e	      0xe800000000	                          call 0x4001f13	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4001f13	          0x8945cc	             mov dword [rbp - 0x34], eax	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4001f16	        0x836dcc01	               sub dword [rbp - 0x34], 1	      1097	move.c	FUNCTION_32	IF_18
0x4001f1a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4001f1d	          0x4863d0	                         movsxd rdx, eax	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4001f20	    0x488b05000000	            mov rax, qword [0x04001f27] 	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4001f27	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4001f2d	          0x4863c8	                         movsxd rcx, eax	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4001f30	    0x488b05000000	            mov rax, qword [0x04001f37] 	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4001f37	          0x4801c8	                            add rax, rcx	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4001f3a	          0x4839c2	                            cmp rdx, rax	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4001f3d	            0x7e1d	                           jle 0x4001f5c	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4001f3f	    0x488b05000000	            mov rax, qword [0x04001f46] 	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4001f46	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4001f4c	            0x89c2	                            mov edx, eax	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4001f4e	    0x488b05000000	            mov rax, qword [0x04001f55] 	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4001f55	             0x1d0	                            add eax, edx	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4001f57	          0x8945c8	             mov dword [rbp - 0x38], eax	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4001f5a	            0xeb06	                           jmp 0x4001f62	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4001f5c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1101	move.c	FUNCTION_32	IF_18	ELSE_10
0x4001f5f	          0x8945c8	             mov dword [rbp - 0x38], eax	      1101	move.c	FUNCTION_32	IF_18	ELSE_10
0x4001f62	    0x488b05000000	            mov rax, qword [0x04001f69] 	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4001f69	    0x8b88a0000000	            mov ecx, dword [rax + 0xa0] 	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4001f6f	    0x488b05000000	            mov rax, qword [0x04001f76] 	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4001f76	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4001f7c	              0x99	                                     cdq	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4001f7d	          0xf77dd0	                 idiv dword [rbp - 0x30]	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4001f80	             0x1c8	                            add eax, ecx	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4001f82	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4001f85	            0x7f04	                            jg 0x4001f8b	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4001f87	        0x8345c402	               add dword [rbp - 0x3c], 2	      1103	move.c	FUNCTION_32	IF_18	IF_22
0x4001f8b	        0x837dc403	               cmp dword [rbp - 0x3c], 3	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4001f8f	            0x7418	                            je 0x4001fa9	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4001f91	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4001f94	            0x4898	                                    cdqe	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4001f96	    0x488b15000000	            mov rdx, qword [0x04001f9d] 	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4001f9d	          0x4801d2	                            add rdx, rdx	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4001fa0	          0x4839d0	                            cmp rax, rdx	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4001fa3	     0xf8da0000000	                           jge 0x4002049	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4001fa9	    0x488b05000000	            mov rax, qword [0x04001fb0] 	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4001fb0	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4001fb6	              0x99	                                     cdq	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4001fb7	          0xf77dd0	                 idiv dword [rbp - 0x30]	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4001fba	          0x8945c8	             mov dword [rbp - 0x38], eax	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4001fbd	    0x488b05000000	            mov rax, qword [0x04001fc4] 	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fc4	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fca	            0x89c2	                            mov edx, eax	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fcc	          0xc1ea1f	                           shr edx, 0x1f	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fcf	             0x1d0	                            add eax, edx	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fd1	            0xd1f8	                              sar eax, 1	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fd3	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fd6	            0x7d1b	                           jge 0x4001ff3	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fd8	    0x488b05000000	            mov rax, qword [0x04001fdf] 	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fdf	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fe5	            0x89c2	                            mov edx, eax	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fe7	          0xc1ea1f	                           shr edx, 0x1f	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fea	             0x1d0	                            add eax, edx	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fec	            0xd1f8	                              sar eax, 1	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001fee	          0x2945c8	             sub dword [rbp - 0x38], eax	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001ff1	            0xeb07	                           jmp 0x4001ffa	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4001ff3	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      1112	move.c	FUNCTION_32	IF_18	IF_23	ELSE_11
0x4001ffa	    0x488b05000000	            mov rax, qword [0x04002001] 	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x4002001	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x4002007	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x400200a	            0x29c2	                            sub edx, eax	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x400200c	            0x89d0	                            mov eax, edx	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x400200e	          0x83c001	                              add eax, 1	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x4002011	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x4002014	            0x7d1a	                           jge 0x4002030	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x4002016	    0x488b05000000	            mov rax, qword [0x0400201d] 	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x400201d	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x4002023	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x4002026	            0x29c2	                            sub edx, eax	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x4002028	            0x89d0	                            mov eax, edx	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x400202a	          0x83c001	                              add eax, 1	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x400202d	          0x8945c8	             mov dword [rbp - 0x38], eax	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x4002030	    0x488b05000000	            mov rax, qword [0x04002037] 	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x4002037	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x400203a	         0xfaf55d0	            imul edx, dword [rbp - 0x30]	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x400203e	    0x899098000000	             mov dword [rax + 0x98], edx	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x4002044	      0xe920010000	                           jmp 0x4002169	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x4002049	        0x837dc401	               cmp dword [rbp - 0x3c], 1	      1118	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400204d	     0xf85af000000	                           jne 0x4002102	      1118	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002053	    0x488b05000000	            mov rax, qword [0x0400205a] 	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400205a	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002060	          0x4863d0	                         movsxd rdx, eax	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002063	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002066	          0x4863c8	                         movsxd rcx, eax	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002069	    0x488b05000000	            mov rax, qword [0x04002070] 	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002070	        0x480fafc1	                           imul rax, rcx	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002074	          0x4801c2	                            add rdx, rax	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002077	    0x488b05000000	            mov rax, qword [0x0400207e] 	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400207e	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002084	            0x4898	                                    cdqe	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002086	          0x4829c2	                            sub rdx, rax	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002089	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1122	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400208c	            0x4898	                                    cdqe	      1122	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400208e	          0x4801d0	                            add rax, rdx	      1122	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002091	        0x4883e801	                              sub rax, 1	      1122	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002095	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1122	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002098	          0x4863da	                         movsxd rbx, edx	      1122	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400209b	            0x4899	                                     cqo	      1122	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400209d	          0x48f7fb	                                idiv rbx	      1122	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40020a0	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40020a3	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1123	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40020a7	     0xf8ebc000000	                           jle 0x4002169	      1123	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40020ad	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020b0	         0xfaf45d0	            imul eax, dword [rbp - 0x30]	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020b4	            0x89c2	                            mov edx, eax	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020b6	    0x488b05000000	            mov rax, qword [0x040020bd] 	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020bd	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020c3	            0x39c2	                            cmp edx, eax	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020c5	            0x7e14	                           jle 0x40020db	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020c7	    0x488b05000000	            mov rax, qword [0x040020ce] 	      1126	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020ce	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1126	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020d4	              0x99	                                     cdq	      1126	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020d5	          0xf77dd0	                 idiv dword [rbp - 0x30]	      1126	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020d8	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1126	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40020db	    0x488b05000000	            mov rax, qword [0x040020e2] 	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40020e2	    0x488b15000000	            mov rdx, qword [0x040020e9] 	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40020e9	    0x8b8a98000000	            mov ecx, dword [rdx + 0x98] 	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40020ef	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40020f2	         0xfaf55d0	            imul edx, dword [rbp - 0x30]	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40020f6	            0x29d1	                            sub ecx, edx	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40020f8	            0x89ca	                            mov edx, ecx	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40020fa	    0x899098000000	             mov dword [rax + 0x98], edx	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x4002100	            0xeb67	                           jmp 0x4002169	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x4002102	        0x837dc402	               cmp dword [rbp - 0x3c], 2	      1130	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002106	            0x7561	                           jne 0x4002169	      1130	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002108	    0x488b05000000	            mov rax, qword [0x0400210f] 	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x400210f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002115	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002118	            0x29c2	                            sub edx, eax	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x400211a	            0x89d0	                            mov eax, edx	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x400211c	          0x83c001	                              add eax, 1	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x400211f	         0xfaf45d0	            imul eax, dword [rbp - 0x30]	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002123	          0x8945bc	             mov dword [rbp - 0x44], eax	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002126	            0xeb09	                           jmp 0x4002131	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002128	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1135	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x400212b	          0x2b45d0	             sub eax, dword [rbp - 0x30]	      1135	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x400212e	          0x8945bc	             mov dword [rbp - 0x44], eax	      1135	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002131	    0x488b05000000	            mov rax, qword [0x04002138] 	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002138	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x400213e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002141	            0x39c2	                            cmp edx, eax	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002143	            0x7ce3	                            jl 0x4002128	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002145	    0x488b05000000	            mov rax, qword [0x0400214c] 	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x400214c	    0x8b9098000000	            mov edx, dword [rax + 0x98] 	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002152	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002155	            0x39c2	                            cmp edx, eax	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002157	            0x7d10	                           jge 0x4002169	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002159	    0x488b05000000	            mov rax, qword [0x04002160] 	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002160	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002163	    0x899098000000	             mov dword [rax + 0x98], edx	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002169	    0x488b0d000000	            mov rcx, qword [0x04002170] 	      1140	move.c	FUNCTION_32	IF_18
0x4002170	    0x488b05000000	            mov rax, qword [0x04002177] 	      1140	move.c	FUNCTION_32	IF_18
0x4002177	    0x8bb0dc000000	            mov esi, dword [rax + 0xdc] 	      1140	move.c	FUNCTION_32	IF_18
0x400217d	    0x488b05000000	            mov rax, qword [0x04002184] 	      1140	move.c	FUNCTION_32	IF_18
0x4002184	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1140	move.c	FUNCTION_32	IF_18
0x400218a	              0x99	                                     cdq	      1140	move.c	FUNCTION_32	IF_18
0x400218b	          0xf77dd0	                 idiv dword [rbp - 0x30]	      1140	move.c	FUNCTION_32	IF_18
0x400218e	            0x29c6	                            sub esi, eax	      1140	move.c	FUNCTION_32	IF_18
0x4002190	            0x89f0	                            mov eax, esi	      1140	move.c	FUNCTION_32	IF_18
0x4002192	    0x8981dc000000	             mov dword [rcx + 0xdc], eax	      1140	move.c	FUNCTION_32	IF_18
0x4002198	    0x488b05000000	            mov rax, qword [0x0400219f] 	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x400219f	    0x8b90dc000000	            mov edx, dword [rax + 0xdc] 	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x40021a5	    0x488b05000000	            mov rax, qword [0x040021ac] 	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x40021ac	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x40021b2	            0x39c2	                            cmp edx, eax	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x40021b4	            0x7c64	                            jl 0x400221a	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x40021b6	    0x488b05000000	            mov rax, qword [0x040021bd] 	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40021bd	    0x8b90dc000000	            mov edx, dword [rax + 0xdc] 	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40021c3	    0x488b05000000	            mov rax, qword [0x040021ca] 	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40021ca	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40021d0	            0x29c2	                            sub edx, eax	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40021d2	            0x89d0	                            mov eax, edx	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40021d4	          0x83c001	                              add eax, 1	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40021d7	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40021da	    0x488b05000000	            mov rax, qword [0x040021e1] 	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40021e1	    0x488b15000000	            mov rdx, qword [0x040021e8] 	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40021e8	    0x8b8a98000000	            mov ecx, dword [rdx + 0x98] 	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40021ee	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40021f1	         0xfaf55d0	            imul edx, dword [rbp - 0x30]	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40021f5	             0x1ca	                            add edx, ecx	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40021f7	    0x899098000000	             mov dword [rax + 0x98], edx	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40021fd	    0x488b05000000	            mov rax, qword [0x04002204] 	      1146	move.c	FUNCTION_32	IF_18	IF_31
0x4002204	    0x488b15000000	            mov rdx, qword [0x0400220b] 	      1146	move.c	FUNCTION_32	IF_18	IF_31
0x400220b	    0x8b92dc000000	            mov edx, dword [rdx + 0xdc] 	      1146	move.c	FUNCTION_32	IF_18	IF_31
0x4002211	          0x2b55c4	             sub edx, dword [rbp - 0x3c]	      1146	move.c	FUNCTION_32	IF_18	IF_31
0x4002214	    0x8990dc000000	             mov dword [rax + 0xdc], edx	      1146	move.c	FUNCTION_32	IF_18	IF_31
0x400221a	    0x488b05000000	            mov rax, qword [0x04002221] 	      1149	move.c	FUNCTION_32	IF_18
0x4002221	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1149	move.c	FUNCTION_32	IF_18
0x4002227	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1149	move.c	FUNCTION_32	IF_18
0x400222a	            0x29c2	                            sub edx, eax	      1149	move.c	FUNCTION_32	IF_18
0x400222c	            0x89d0	                            mov eax, edx	      1149	move.c	FUNCTION_32	IF_18
0x400222e	              0x99	                                     cdq	      1149	move.c	FUNCTION_32	IF_18
0x400222f	          0xf77dd0	                 idiv dword [rbp - 0x30]	      1149	move.c	FUNCTION_32	IF_18
0x4002232	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1149	move.c	FUNCTION_32	IF_18
0x4002235	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1150	move.c	FUNCTION_32	IF_18	IF_32
0x4002239	            0x7e24	                           jle 0x400225f	      1150	move.c	FUNCTION_32	IF_18	IF_32
0x400223b	    0x488b05000000	            mov rax, qword [0x04002242] 	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002242	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002245	    0x41b800000000	                              mov r8d, 0	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x400224b	      0xb900000000	                              mov ecx, 0	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002250	      0xbe00000000	                              mov esi, 0	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002255	          0x4889c7	                            mov rdi, rax	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002258	      0xe800000000	                          call 0x400225d	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x400225d	            0xeb47	                           jmp 0x40022a6	      1150	move.c	FUNCTION_32	IF_18	IF_32
0x400225f	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1152	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002263	            0x7941	                           jns 0x40022a6	      1152	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002265	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002268	            0xf7d8	                                 neg eax	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400226a	            0x89c2	                            mov edx, eax	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400226c	    0x488b05000000	            mov rax, qword [0x04002273] 	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002273	    0x41b900000000	                              mov r9d, 0	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002279	    0x41b800000000	                              mov r8d, 0	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400227f	      0xb900000000	                              mov ecx, 0	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002284	      0xbe00000000	                              mov esi, 0	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002289	          0x4889c7	                            mov rdi, rax	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400228c	      0xe800000000	                          call 0x4002291	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002291	            0xeb13	                           jmp 0x40022a6	      1150	move.c	FUNCTION_32	IF_18	IF_32
0x4002293	    0x488b05000000	            mov rax, qword [0x0400229a] 	      1156	move.c	FUNCTION_32	ELSE_15
0x400229a	    0xc78098000000	               mov dword [rax + 0x98], 0	      1156	move.c	FUNCTION_32	ELSE_15
0x40022a4	            0xeb01	                           jmp 0x40022a7	      1156	move.c	FUNCTION_32	ELSE_15
0x40022a6	              0x90	                                     nop	      1150	move.c	FUNCTION_32	IF_18	IF_32
0x40022a7	    0x488b05000000	            mov rax, qword [0x040022ae] 	      1157	move.c	FUNCTION_32	IF_34
0x40022ae	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1157	move.c	FUNCTION_32	IF_34
0x40022b4	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1157	move.c	FUNCTION_32	IF_34
0x40022b7	            0x740a	                            je 0x40022c3	      1157	move.c	FUNCTION_32	IF_34
0x40022b9	      0xbf28000000	                           mov edi, 0x28	      1158	move.c	FUNCTION_32	CALL_14
0x40022be	      0xe800000000	                          call 0x40022c3	      1158	move.c	FUNCTION_32	CALL_14
0x40022c3	    0x488b05000000	            mov rax, qword [0x040022ca] 	      1162	move.c	FUNCTION_32	IF_35
0x40022ca	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	      1162	move.c	FUNCTION_32	IF_35
0x40022d0	            0x85c0	                           test eax, eax	      1162	move.c	FUNCTION_32	IF_35
0x40022d2	            0x7427	                            je 0x40022fb	      1162	move.c	FUNCTION_32	IF_35
0x40022d4	    0x488b05000000	            mov rax, qword [0x040022db] 	      1162	move.c	FUNCTION_32	IF_35
0x40022db	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1162	move.c	FUNCTION_32	IF_35
0x40022e1	          0x83e004	                              and eax, 4	      1162	move.c	FUNCTION_32	IF_35
0x40022e4	            0x85c0	                           test eax, eax	      1162	move.c	FUNCTION_32	IF_35
0x40022e6	            0x7513	                           jne 0x40022fb	      1162	move.c	FUNCTION_32	IF_35
0x40022e8	      0xe800000000	                          call 0x40022ed	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40022ed	            0x85c0	                           test eax, eax	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40022ef	            0x750a	                           jne 0x40022fb	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40022f1	      0xbf23000000	                           mov edi, 0x23	      1167	move.c	FUNCTION_32	CALL_16
0x40022f6	      0xe800000000	                          call 0x40022fb	      1167	move.c	FUNCTION_32	CALL_16
0x40022fb	    0x488b05000000	            mov rax, qword [0x04002302] 	      1170	move.c	FUNCTION_32
0x4002302	    0x488b15000000	            mov rdx, qword [0x04002309] 	      1170	move.c	FUNCTION_32
0x4002309	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1170	move.c	FUNCTION_32
0x400230f	          0x83ca07	                               or edx, 7	      1170	move.c	FUNCTION_32
0x4002312	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1170	move.c	FUNCTION_32
0x4002318	              0x90	                                     nop	      1171	move.c	FUNCTION_32
0x4002319	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1171	move.c	FUNCTION_32
0x400231d	    0x644833042528	                xor rax, qword fs:[0x28]	      1171	move.c	FUNCTION_32
0x4002326	            0x7405	                            je 0x400232d	      1171	move.c	FUNCTION_32
0x4002328	      0xe800000000	                          call 0x400232d	      1171	move.c	FUNCTION_32
0x400232d	        0x4883c458	                           add rsp, 0x58	      1171	move.c	FUNCTION_32
0x4002331	              0x5b	                                 pop rbx	      1171	move.c	FUNCTION_32
0x4002332	              0x5d	                                 pop rbp	      1171	move.c	FUNCTION_32
0x4002333	              0xc3	                                     ret	      1171	move.c	FUNCTION_32
scroll_cursor_halfway	ELSE,2:FOR,0:functions,0:WHILE,1:CALL,7:IF,9:DO,0:SWITCH,0	132
0x4003c2c	              0x55	                                push rbp	      2035	move.c	FUNCTION_46
0x4003c2d	          0x4889e5	                            mov rbp, rsp	      2035	move.c	FUNCTION_46
0x4003c30	        0x4883ec60	                           sub rsp, 0x60	      2035	move.c	FUNCTION_46
0x4003c34	          0x897dac	             mov dword [rbp - 0x54], edi	      2035	move.c	FUNCTION_46
0x4003c37	    0x64488b042528	                mov rax, qword fs:[0x28]	      2035	move.c	FUNCTION_46
0x4003c40	        0x488945f8	                mov qword [rbp - 8], rax	      2035	move.c	FUNCTION_46
0x4003c44	            0x31c0	                            xor eax, eax	      2035	move.c	FUNCTION_46
0x4003c46	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      2036	move.c	FUNCTION_46
0x4003c4d	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      2039	move.c	FUNCTION_46
0x4003c54	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      2041	move.c	FUNCTION_46
0x4003c5b	    0x488b05000000	            mov rax, qword [0x04003c62] 	      2046	move.c	FUNCTION_46
0x4003c62	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2046	move.c	FUNCTION_46
0x4003c66	        0x488945c8	             mov qword [rbp - 0x38], rax	      2046	move.c	FUNCTION_46
0x4003c6a	    0x488b05000000	            mov rax, qword [0x04003c71] 	      2049	move.c	FUNCTION_46
0x4003c71	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2049	move.c	FUNCTION_46
0x4003c75	        0x488945e0	             mov qword [rbp - 0x20], rax	      2049	move.c	FUNCTION_46
0x4003c79	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2049	move.c	FUNCTION_46
0x4003c7d	        0x488945d0	             mov qword [rbp - 0x30], rax	      2049	move.c	FUNCTION_46
0x4003c81	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2051	move.c	FUNCTION_46	CALL_1
0x4003c85	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2051	move.c	FUNCTION_46	CALL_1
0x4003c89	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      2051	move.c	FUNCTION_46	CALL_1
0x4003c8d	          0x4889ce	                            mov rsi, rcx	      2051	move.c	FUNCTION_46	CALL_1
0x4003c90	          0x4889c7	                            mov rdi, rax	      2051	move.c	FUNCTION_46	CALL_1
0x4003c93	      0xe800000000	                          call 0x4003c98	      2051	move.c	FUNCTION_46	CALL_1
0x4003c98	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2054	move.c	FUNCTION_46	CALL_2
0x4003c9c	          0x4889c7	                            mov rdi, rax	      2054	move.c	FUNCTION_46	CALL_2
0x4003c9f	      0xe800000000	                          call 0x4003ca4	      2054	move.c	FUNCTION_46	CALL_2
0x4003ca4	          0x8945bc	             mov dword [rbp - 0x44], eax	      2054	move.c	FUNCTION_46	CALL_2
0x4003ca7	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2055	move.c	FUNCTION_46
0x4003cae	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      2056	move.c	FUNCTION_46
0x4003cb5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2060	move.c	FUNCTION_46
0x4003cb9	        0x488945c0	             mov qword [rbp - 0x40], rax	      2060	move.c	FUNCTION_46
0x4003cbd	      0xe9a8000000	                           jmp 0x4003d6a	      2061	move.c	FUNCTION_46	WHILE_1
0x4003cc2	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2063	move.c	FUNCTION_46	WHILE_1	IF_1
0x4003cc5	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      2063	move.c	FUNCTION_46	WHILE_1	IF_1
0x4003cc8	            0x7f4d	                            jg 0x4003d17	      2063	move.c	FUNCTION_46	WHILE_1	IF_1
0x4003cca	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4003cce	    0x488b05000000	            mov rax, qword [0x04003cd5] 	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4003cd5	          0x488b00	                    mov rax, qword [rax]	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4003cd8	          0x4839c2	                            cmp rdx, rax	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4003cdb	            0x7d2c	                           jge 0x4003d09	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4003cdd	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2067	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	CALL_4
0x4003ce1	          0x4889c7	                            mov rdi, rax	      2067	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	CALL_4
0x4003ce4	      0xe8a2f2ffff	                   call sym.botline_forw	      2067	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	CALL_4
0x4003ce9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2068	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4003cec	           0x145bc	             add dword [rbp - 0x44], eax	      2068	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4003cef	    0x488b05000000	            mov rax, qword [0x04003cf6] 	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4003cf6	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4003cfc	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4003cff	            0x7c76	                            jl 0x4003d77	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4003d01	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4003d04	           0x145b8	             add dword [rbp - 0x48], eax	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4003d07	            0xeb0e	                           jmp 0x4003d17	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4003d09	        0x8345b801	               add dword [rbp - 0x48], 1	      2075	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1
0x4003d0d	        0x837dac00	               cmp dword [rbp - 0x54], 0	      2076	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x4003d11	            0x7404	                            je 0x4003d17	      2076	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x4003d13	        0x8345bc01	               add dword [rbp - 0x44], 1	      2077	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x4003d17	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x4003d1a	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x4003d1d	            0x7e4b	                           jle 0x4003d6a	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x4003d1f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2083	move.c	FUNCTION_46	WHILE_1	IF_5	CALL_5
0x4003d23	          0x4889c7	                            mov rdi, rax	      2083	move.c	FUNCTION_46	WHILE_1	IF_5	CALL_5
0x4003d26	      0xe88ff1ffff	                   call sym.topline_back	      2083	move.c	FUNCTION_46	WHILE_1	IF_5	CALL_5
0x4003d2b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2084	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4003d2e	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2084	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4003d33	            0x7509	                           jne 0x4003d3e	      2084	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4003d35	    0xc745bcffffff	      mov dword [rbp - 0x44], 0x7fffffff	      2085	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4003d3c	            0xeb06	                           jmp 0x4003d44	      2085	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4003d3e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2087	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x4003d41	           0x145bc	             add dword [rbp - 0x44], eax	      2087	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x4003d44	    0x488b05000000	            mov rax, qword [0x04003d4b] 	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x4003d4b	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x4003d51	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x4003d54	            0x7c24	                            jl 0x4003d7a	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x4003d56	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2090	move.c	FUNCTION_46	WHILE_1	IF_5
0x4003d59	           0x145b0	             add dword [rbp - 0x50], eax	      2090	move.c	FUNCTION_46	WHILE_1	IF_5
0x4003d5c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2091	move.c	FUNCTION_46	WHILE_1	IF_5
0x4003d60	        0x488945c0	             mov qword [rbp - 0x40], rax	      2091	move.c	FUNCTION_46	WHILE_1	IF_5
0x4003d64	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2093	move.c	FUNCTION_46	WHILE_1	IF_5
0x4003d67	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2093	move.c	FUNCTION_46	WHILE_1	IF_5
0x4003d6a	      0x48837dc001	               cmp qword [rbp - 0x40], 1	      2061	move.c	FUNCTION_46	WHILE_1
0x4003d6f	     0xf8f4dffffff	                            jg 0x4003cc2	      2061	move.c	FUNCTION_46	WHILE_1
0x4003d75	            0xeb04	                           jmp 0x4003d7b	      2061	move.c	FUNCTION_46	WHILE_1
0x4003d77	              0x90	                                     nop	      2070	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4003d78	            0xeb01	                           jmp 0x4003d7b	      2070	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4003d7a	              0x90	                                     nop	      2089	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x4003d7b	    0x488b05000000	            mov rax, qword [0x04003d82] 	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4003d82	        0x488d4878	                   lea rcx, [rax + 0x78]	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4003d86	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4003d8a	      0xba00000000	                              mov edx, 0	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4003d8f	          0x4889ce	                            mov rsi, rcx	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4003d92	          0x4889c7	                            mov rdi, rax	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4003d95	      0xe800000000	                          call 0x4003d9a	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4003d9a	            0x85c0	                           test eax, eax	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4003d9c	            0x750f	                           jne 0x4003dad	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4003d9e	    0x488b05000000	            mov rax, qword [0x04003da5] 	      2100	move.c	FUNCTION_46	IF_8
0x4003da5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2100	move.c	FUNCTION_46	IF_8
0x4003da9	        0x48895078	             mov qword [rax + 0x78], rdx	      2100	move.c	FUNCTION_46	IF_8
0x4003dad	    0x488b05000000	            mov rax, qword [0x04003db4] 	      2102	move.c	FUNCTION_46
0x4003db4	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2102	move.c	FUNCTION_46
0x4003db7	    0x899084000000	             mov dword [rax + 0x84], edx	      2102	move.c	FUNCTION_46
0x4003dbd	    0x488b05000000	            mov rax, qword [0x04003dc4] 	      2103	move.c	FUNCTION_46	IF_9
0x4003dc4	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2103	move.c	FUNCTION_46	IF_9
0x4003dc8	    0x488b05000000	            mov rax, qword [0x04003dcf] 	      2103	move.c	FUNCTION_46	IF_9
0x4003dcf	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2103	move.c	FUNCTION_46	IF_9
0x4003dd5	            0x4898	                                    cdqe	      2103	move.c	FUNCTION_46	IF_9
0x4003dd7	          0x4801d0	                            add rax, rdx	      2103	move.c	FUNCTION_46	IF_9
0x4003dda	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2103	move.c	FUNCTION_46	IF_9
0x4003dde	            0x7d11	                           jge 0x4003df1	      2103	move.c	FUNCTION_46	IF_9
0x4003de0	    0x488b05000000	            mov rax, qword [0x04003de7] 	      2104	move.c	FUNCTION_46	IF_9
0x4003de7	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      2104	move.c	FUNCTION_46	IF_9
0x4003df1	    0x488b05000000	            mov rax, qword [0x04003df8] 	      2105	move.c	FUNCTION_46	CALL_7
0x4003df8	      0xbe00000000	                              mov esi, 0	      2105	move.c	FUNCTION_46	CALL_7
0x4003dfd	          0x4889c7	                            mov rdi, rax	      2105	move.c	FUNCTION_46	CALL_7
0x4003e00	      0xe800000000	                          call 0x4003e05	      2105	move.c	FUNCTION_46	CALL_7
0x4003e05	    0x488b05000000	            mov rax, qword [0x04003e0c] 	      2107	move.c	FUNCTION_46
0x4003e0c	    0x488b15000000	            mov rdx, qword [0x04003e13] 	      2107	move.c	FUNCTION_46
0x4003e13	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2107	move.c	FUNCTION_46
0x4003e19	          0x83e28e	                     and edx, 0xffffff8e	      2107	move.c	FUNCTION_46
0x4003e1c	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2107	move.c	FUNCTION_46
0x4003e22	    0x488b05000000	            mov rax, qword [0x04003e29] 	      2108	move.c	FUNCTION_46
0x4003e29	    0x488b15000000	            mov rdx, qword [0x04003e30] 	      2108	move.c	FUNCTION_46
0x4003e30	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2108	move.c	FUNCTION_46
0x4003e36	          0x80ca80	                             or dl, 0x80	      2108	move.c	FUNCTION_46
0x4003e39	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2108	move.c	FUNCTION_46
0x4003e3f	              0x90	                                     nop	      2109	move.c	FUNCTION_46
0x4003e40	        0x488b45f8	                mov rax, qword [rbp - 8]	      2109	move.c	FUNCTION_46
0x4003e44	    0x644833042528	                xor rax, qword fs:[0x28]	      2109	move.c	FUNCTION_46
0x4003e4d	            0x7405	                            je 0x4003e54	      2109	move.c	FUNCTION_46
0x4003e4f	      0xe800000000	                          call 0x4003e54	      2109	move.c	FUNCTION_46
0x4003e54	              0xc9	                                   leave	      2109	move.c	FUNCTION_46
0x4003e55	              0xc3	                                     ret	      2109	move.c	FUNCTION_46
scrolldown_clamp	ELSE,2:FOR,0:functions,0:WHILE,0:CALL,8:IF,5:DO,0:SWITCH,0	108
0x4002b6d	              0x55	                                push rbp	      1416	move.c	FUNCTION_37
0x4002b6e	          0x4889e5	                            mov rbp, rsp	      1416	move.c	FUNCTION_37
0x4002b71	              0x53	                                push rbx	      1416	move.c	FUNCTION_37
0x4002b72	        0x4883ec18	                           sub rsp, 0x18	      1416	move.c	FUNCTION_37
0x4002b76	    0x488b05000000	            mov rax, qword [0x04002b7d] 	      1419	move.c	FUNCTION_37
0x4002b7d	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      1419	move.c	FUNCTION_37
0x4002b83	    0x488b05000000	            mov rax, qword [0x04002b8a] 	      1420	move.c	FUNCTION_37	CALL_1
0x4002b8a	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1420	move.c	FUNCTION_37	CALL_1
0x4002b8e	    0x488b05000000	            mov rax, qword [0x04002b95] 	      1420	move.c	FUNCTION_37	CALL_1
0x4002b95	          0x4889d6	                            mov rsi, rdx	      1420	move.c	FUNCTION_37	CALL_1
0x4002b98	          0x4889c7	                            mov rdi, rax	      1420	move.c	FUNCTION_37	CALL_1
0x4002b9b	      0xe800000000	                          call 0x4002ba0	      1420	move.c	FUNCTION_37	CALL_1
0x4002ba0	            0x39c3	                            cmp ebx, eax	      1420	move.c	FUNCTION_37	CALL_1
0x4002ba2	           0xf9cc0	                                 setl al	      1420	move.c	FUNCTION_37	CALL_1
0x4002ba5	           0xfb6c0	                           movzx eax, al	      1419	move.c	FUNCTION_37
0x4002ba8	          0x8945ec	             mov dword [rbp - 0x14], eax	      1419	move.c	FUNCTION_37
0x4002bab	    0x488b05000000	            mov rax, qword [0x04002bb2] 	      1423	move.c	FUNCTION_37	IF_1
0x4002bb2	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1423	move.c	FUNCTION_37	IF_1
0x4002bb6	        0x4883f801	                              cmp rax, 1	      1423	move.c	FUNCTION_37	IF_1
0x4002bba	            0x7f0a	                            jg 0x4002bc6	      1423	move.c	FUNCTION_37	IF_1
0x4002bbc	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1425	move.c	FUNCTION_37	IF_1
0x4002bc0	     0xf847b010000	                            je 0x4002d41	      1425	move.c	FUNCTION_37	IF_1
0x4002bc6	      0xe800000000	                          call 0x4002bcb	      1430	move.c	FUNCTION_37	CALL_2
0x4002bcb	    0x488b05000000	            mov rax, qword [0x04002bd2] 	      1437	move.c	FUNCTION_37
0x4002bd2	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      1437	move.c	FUNCTION_37
0x4002bd8	          0x8945e8	             mov dword [rbp - 0x18], eax	      1437	move.c	FUNCTION_37
0x4002bdb	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1439	move.c	FUNCTION_37	IF_2
0x4002bdf	            0x7406	                            je 0x4002be7	      1439	move.c	FUNCTION_37	IF_2
0x4002be1	        0x8345e801	               add dword [rbp - 0x18], 1	      1440	move.c	FUNCTION_37	IF_2
0x4002be5	            0xeb1a	                           jmp 0x4002c01	      1440	move.c	FUNCTION_37	IF_2
0x4002be7	    0x488b05000000	            mov rax, qword [0x04002bee] 	      1442	move.c	FUNCTION_37	CALL_3
0x4002bee	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1442	move.c	FUNCTION_37	CALL_3
0x4002bf2	        0x4883e801	                              sub rax, 1	      1442	move.c	FUNCTION_37	CALL_3
0x4002bf6	          0x4889c7	                            mov rdi, rax	      1442	move.c	FUNCTION_37	CALL_3
0x4002bf9	      0xe800000000	                          call 0x4002bfe	      1442	move.c	FUNCTION_37	CALL_3
0x4002bfe	           0x145e8	             add dword [rbp - 0x18], eax	      1442	move.c	FUNCTION_37	CALL_3
0x4002c01	    0x488b05000000	            mov rax, qword [0x04002c08] 	      1446	move.c	FUNCTION_37	IF_3
0x4002c08	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1446	move.c	FUNCTION_37	IF_3
0x4002c0e	            0x85c0	                           test eax, eax	      1446	move.c	FUNCTION_37	IF_3
0x4002c10	            0x744f	                            je 0x4002c61	      1446	move.c	FUNCTION_37	IF_3
0x4002c12	    0x488b05000000	            mov rax, qword [0x04002c19] 	      1446	move.c	FUNCTION_37	IF_3
0x4002c19	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1446	move.c	FUNCTION_37	IF_3
0x4002c1f	            0x85c0	                           test eax, eax	      1446	move.c	FUNCTION_37	IF_3
0x4002c21	            0x743e	                            je 0x4002c61	      1446	move.c	FUNCTION_37	IF_3
0x4002c23	      0xe855e9ffff	               call sym.validate_cheight	      1448	move.c	FUNCTION_37	IF_3	CALL_5
0x4002c28	      0xe800000000	                          call 0x4002c2d	      1449	move.c	FUNCTION_37	IF_3	CALL_6
0x4002c2d	    0x488b05000000	            mov rax, qword [0x04002c34] 	      1450	move.c	FUNCTION_37	IF_3
0x4002c34	    0x8b80cc000000	            mov eax, dword [rax + 0xcc] 	      1450	move.c	FUNCTION_37	IF_3
0x4002c3a	          0x8d48ff	                      lea ecx, [rax - 1]	      1450	move.c	FUNCTION_37	IF_3
0x4002c3d	    0x488b05000000	            mov rax, qword [0x04002c44] 	      1451	move.c	FUNCTION_37	IF_3
0x4002c44	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1451	move.c	FUNCTION_37	IF_3
0x4002c4a	    0x488b15000000	            mov rdx, qword [0x04002c51] 	      1451	move.c	FUNCTION_37	IF_3
0x4002c51	    0x8b9aac000000	            mov ebx, dword [rdx + 0xac] 	      1451	move.c	FUNCTION_37	IF_3
0x4002c57	              0x99	                                     cdq	      1451	move.c	FUNCTION_37	IF_3
0x4002c58	            0xf7fb	                                idiv ebx	      1451	move.c	FUNCTION_37	IF_3
0x4002c5a	            0x29c1	                            sub ecx, eax	      1450	move.c	FUNCTION_37	IF_3
0x4002c5c	            0x89c8	                            mov eax, ecx	      1450	move.c	FUNCTION_37	IF_3
0x4002c5e	           0x145e8	             add dword [rbp - 0x18], eax	      1450	move.c	FUNCTION_37	IF_3
0x4002c61	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1453	move.c	FUNCTION_37	IF_4
0x4002c64	          0x4863d0	                         movsxd rdx, eax	      1453	move.c	FUNCTION_37	IF_4
0x4002c67	    0x488b05000000	            mov rax, qword [0x04002c6e] 	      1453	move.c	FUNCTION_37	IF_4
0x4002c6e	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1453	move.c	FUNCTION_37	IF_4
0x4002c74	          0x4863c8	                         movsxd rcx, eax	      1453	move.c	FUNCTION_37	IF_4
0x4002c77	    0x488b05000000	            mov rax, qword [0x04002c7e] 	      1453	move.c	FUNCTION_37	IF_4
0x4002c7e	          0x4829c1	                            sub rcx, rax	      1453	move.c	FUNCTION_37	IF_4
0x4002c81	          0x4889c8	                            mov rax, rcx	      1453	move.c	FUNCTION_37	IF_4
0x4002c84	          0x4839c2	                            cmp rdx, rax	      1453	move.c	FUNCTION_37	IF_4
0x4002c87	     0xf8db5000000	                           jge 0x4002d42	      1453	move.c	FUNCTION_37	IF_4
0x4002c8d	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1456	move.c	FUNCTION_37	IF_4	IF_5
0x4002c91	            0x742c	                            je 0x4002cbf	      1456	move.c	FUNCTION_37	IF_4	IF_5
0x4002c93	    0x488b05000000	            mov rax, qword [0x04002c9a] 	      1458	move.c	FUNCTION_37	IF_4	IF_5
0x4002c9a	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1458	move.c	FUNCTION_37	IF_4	IF_5
0x4002ca0	          0x83c201	                              add edx, 1	      1458	move.c	FUNCTION_37	IF_4	IF_5
0x4002ca3	    0x899084000000	             mov dword [rax + 0x84], edx	      1458	move.c	FUNCTION_37	IF_4	IF_5
0x4002ca9	    0x488b05000000	            mov rax, qword [0x04002cb0] 	      1459	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x4002cb0	      0xbe01000000	                              mov esi, 1	      1459	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x4002cb5	          0x4889c7	                            mov rdi, rax	      1459	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x4002cb8	      0xe800000000	                          call 0x4002cbd	      1459	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x4002cbd	            0xeb24	                           jmp 0x4002ce3	      1459	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x4002cbf	    0x488b05000000	            mov rax, qword [0x04002cc6] 	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002cc6	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002cca	        0x4883ea01	                              sub rdx, 1	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002cce	        0x48895078	             mov qword [rax + 0x78], rdx	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002cd2	    0x488b05000000	            mov rax, qword [0x04002cd9] 	      1464	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002cd9	    0xc78084000000	               mov dword [rax + 0x84], 0	      1464	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002ce3	    0x488b05000000	            mov rax, qword [0x04002cea] 	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002cea	        0x488d4878	                   lea rcx, [rax + 0x78]	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002cee	    0x488b05000000	            mov rax, qword [0x04002cf5] 	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002cf5	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002cf9	      0xba00000000	                              mov edx, 0	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002cfe	          0x4889ce	                            mov rsi, rcx	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002d01	          0x4889c7	                            mov rdi, rax	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002d04	      0xe800000000	                          call 0x4002d09	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002d09	    0x488b05000000	            mov rax, qword [0x04002d10] 	      1472	move.c	FUNCTION_37	IF_4
0x4002d10	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1472	move.c	FUNCTION_37	IF_4
0x4002d17	        0x4883ea01	                              sub rdx, 1	      1472	move.c	FUNCTION_37	IF_4
0x4002d1b	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1472	move.c	FUNCTION_37	IF_4
0x4002d22	    0x488b05000000	            mov rax, qword [0x04002d29] 	      1473	move.c	FUNCTION_37	IF_4
0x4002d29	    0x488b15000000	            mov rdx, qword [0x04002d30] 	      1473	move.c	FUNCTION_37	IF_4
0x4002d30	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1473	move.c	FUNCTION_37	IF_4
0x4002d36	          0x83e2ce	                     and edx, 0xffffffce	      1473	move.c	FUNCTION_37	IF_4
0x4002d39	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1473	move.c	FUNCTION_37	IF_4
0x4002d3f	            0xeb01	                           jmp 0x4002d42	      1473	move.c	FUNCTION_37	IF_4
0x4002d41	              0x90	                                     nop	      1428	move.c	FUNCTION_37	IF_1
0x4002d42	        0x4883c418	                           add rsp, 0x18	      1475	move.c	FUNCTION_37
0x4002d46	              0x5b	                                 pop rbx	      1475	move.c	FUNCTION_37
0x4002d47	              0x5d	                                 pop rbp	      1475	move.c	FUNCTION_37
0x4002d48	              0xc3	                                     ret	      1475	move.c	FUNCTION_37
onepage	ELSE,9:FOR,1:functions,0:WHILE,1:CALL,30:IF,21:DO,0:SWITCH,0	438
0x4004206	              0x55	                                push rbp	      2246	move.c	FUNCTION_48
0x4004207	          0x4889e5	                            mov rbp, rsp	      2246	move.c	FUNCTION_48
0x400420a	              0x53	                                push rbx	      2246	move.c	FUNCTION_48
0x400420b	        0x4883ec58	                           sub rsp, 0x58	      2246	move.c	FUNCTION_48
0x400420f	          0x897dac	             mov dword [rbp - 0x54], edi	      2246	move.c	FUNCTION_48
0x4004212	        0x488975a0	             mov qword [rbp - 0x60], rsi	      2246	move.c	FUNCTION_48
0x4004216	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	move.c	FUNCTION_48
0x400421f	        0x488945e8	             mov qword [rbp - 0x18], rax	      2246	move.c	FUNCTION_48
0x4004223	            0x31c0	                            xor eax, eax	      2246	move.c	FUNCTION_48
0x4004225	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      2248	move.c	FUNCTION_48
0x400422c	    0x488b05000000	            mov rax, qword [0x04004233] 	      2250	move.c	FUNCTION_48
0x4004233	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2250	move.c	FUNCTION_48
0x4004237	        0x488945c8	             mov qword [rbp - 0x38], rax	      2250	move.c	FUNCTION_48
0x400423b	    0x488b05000000	            mov rax, qword [0x04004242] 	      2252	move.c	FUNCTION_48	IF_1
0x4004242	          0x488b00	                    mov rax, qword [rax]	      2252	move.c	FUNCTION_48	IF_1
0x4004245	        0x4883f801	                              cmp rax, 1	      2252	move.c	FUNCTION_48	IF_1
0x4004249	     0xf85c5060000	                           jne 0x4004914	      2252	move.c	FUNCTION_48	IF_1
0x400424f	      0xe800000000	                          call 0x4004254	      2254	move.c	FUNCTION_48	IF_1	CALL_1
0x4004254	      0xb800000000	                              mov eax, 0	      2255	move.c	FUNCTION_48	IF_1
0x4004259	      0xe988070000	                           jmp 0x40049e6	      2255	move.c	FUNCTION_48	IF_1
0x400425e	      0xe800000000	                          call 0x4004263	      2260	move.c	FUNCTION_48	FOR_1	CALL_2
0x4004263	        0x837dac01	               cmp dword [rbp - 0x54], 1	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4004267	            0x7555	                           jne 0x40042be	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4004269	    0x488b05000000	            mov rax, qword [0x04004270] 	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x4004270	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x4004274	    0x488b05000000	            mov rax, qword [0x0400427b] 	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x400427b	          0x488b08	                    mov rcx, qword [rax]	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x400427e	    0x488b05000000	            mov rax, qword [0x04004285] 	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x4004285	          0x4829c1	                            sub rcx, rax	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x4004288	          0x4889c8	                            mov rax, rcx	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x400428b	          0x4839c2	                            cmp rdx, rax	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x400428e	            0x7c24	                            jl 0x40042b4	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4004290	    0x488b05000000	            mov rax, qword [0x04004297] 	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4004297	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x400429e	    0x488b05000000	            mov rax, qword [0x040042a5] 	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40042a5	          0x488b00	                    mov rax, qword [rax]	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40042a8	          0x4839c2	                            cmp rdx, rax	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40042ab	            0x7e07	                           jle 0x40042b4	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40042ad	      0xb801000000	                              mov eax, 1	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40042b2	            0xeb05	                           jmp 0x40042b9	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40042b4	      0xb800000000	                              mov eax, 0	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40042b9	          0x83e001	                              and eax, 1	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x40042bc	            0xeb4e	                           jmp 0x400430c	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x40042be	    0x488b05000000	            mov rax, qword [0x040042c5] 	      2270	move.c	FUNCTION_48	FOR_1	IF_2
0x40042c5	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2270	move.c	FUNCTION_48	FOR_1	IF_2
0x40042c9	        0x4883f801	                              cmp rax, 1	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x40042cd	            0x7535	                           jne 0x4004304	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x40042cf	    0x488b05000000	            mov rax, qword [0x040042d6] 	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x40042d6	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x40042dc	    0x488b05000000	            mov rax, qword [0x040042e3] 	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x40042e3	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x40042e7	    0x488b05000000	            mov rax, qword [0x040042ee] 	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x40042ee	          0x4889d6	                            mov rsi, rdx	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x40042f1	          0x4889c7	                            mov rdi, rax	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x40042f4	      0xe800000000	                          call 0x40042f9	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x40042f9	            0x39c3	                            cmp ebx, eax	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x40042fb	            0x7507	                           jne 0x4004304	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x40042fd	      0xb801000000	                              mov eax, 1	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x4004302	            0xeb05	                           jmp 0x4004309	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x4004304	      0xb800000000	                              mov eax, 0	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x4004309	          0x83e001	                              and eax, 1	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x400430c	            0x84c0	                             test al, al	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x400430e	            0x7411	                            je 0x4004321	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4004310	      0xe800000000	                          call 0x4004315	      2277	move.c	FUNCTION_48	FOR_1	IF_2	CALL_4
0x4004315	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x400431c	      0xe9fe050000	                           jmp 0x400491f	      2279	move.c	FUNCTION_48	FOR_1	IF_2
0x4004321	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2283	move.c	FUNCTION_48	FOR_1
0x4004328	        0x837dac01	               cmp dword [rbp - 0x54], 1	      2285	move.c	FUNCTION_48	FOR_1	IF_3
0x400432c	     0xf85f1010000	                           jne 0x4004523	      2285	move.c	FUNCTION_48	FOR_1	IF_3
0x4004332	    0x488b15000000	            mov rdx, qword [0x04004339] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4004339	    0x488b05000000	            mov rax, qword [0x04004340] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4004340	          0x4839c2	                            cmp rdx, rax	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4004343	     0xf85bb000000	                           jne 0x4004404	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4004349	    0x488b05000000	            mov rax, qword [0x04004350] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4004350	          0x4885c0	                           test rax, rax	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4004353	     0xf8eab000000	                           jle 0x4004404	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4004359	    0x488b05000000	            mov rax, qword [0x04004360] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4004360	        0x488d50ff	                      lea rdx, [rax - 1]	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4004364	    0x488b05000000	            mov rax, qword [0x0400436b] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x400436b	          0x4839c2	                            cmp rdx, rax	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x400436e	     0xf8e90000000	                           jle 0x4004404	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4004374	    0x488b05000000	            mov rax, qword [0x0400437b] 	      2290	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x400437b	        0x4883f802	                              cmp rax, 2	      2290	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x400437f	            0x7f15	                            jg 0x4004396	      2290	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4004381	    0x488b05000000	            mov rax, qword [0x04004388] 	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4004388	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x400438c	        0x4883c201	                              add rdx, 1	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4004390	        0x48895078	             mov qword [rax + 0x78], rdx	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4004394	            0xeb24	                           jmp 0x40043ba	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4004396	    0x488b05000000	            mov rax, qword [0x0400439d] 	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x400439d	    0x488b15000000	            mov rdx, qword [0x040043a4] 	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x40043a4	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x40043a8	    0x488b0d000000	            mov rcx, qword [0x040043af] 	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x40043af	        0x4883e902	                              sub rcx, 2	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x40043b3	          0x4801ca	                            add rdx, rcx	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x40043b6	        0x48895078	             mov qword [rax + 0x78], rdx	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x40043ba	    0x488b05000000	            mov rax, qword [0x040043c1] 	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x40043c1	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x40043c5	    0x488b05000000	            mov rax, qword [0x040043cc] 	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x40043cc	          0x488b00	                    mov rax, qword [rax]	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x40043cf	          0x4839c2	                            cmp rdx, rax	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x40043d2	            0x7e15	                           jle 0x40043e9	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x40043d4	    0x488b05000000	            mov rax, qword [0x040043db] 	      2295	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x40043db	    0x488b15000000	            mov rdx, qword [0x040043e2] 	      2295	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x40043e2	          0x488b12	                    mov rdx, qword [rdx]	      2295	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x40043e5	        0x48895078	             mov qword [rax + 0x78], rdx	      2295	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x40043e9	    0x488b05000000	            mov rax, qword [0x040043f0] 	      2296	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40043f0	    0x488b15000000	            mov rdx, qword [0x040043f7] 	      2296	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40043f7	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      2296	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40043fb	        0x48895038	             mov qword [rax + 0x38], rdx	      2296	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40043ff	      0xe90b050000	                           jmp 0x400490f	      2296	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4004404	    0x488b05000000	            mov rax, qword [0x0400440b] 	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x400440b	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4004412	    0x488b05000000	            mov rax, qword [0x04004419] 	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4004419	          0x488b00	                    mov rax, qword [rax]	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x400441c	          0x4839c2	                            cmp rdx, rax	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x400441f	            0x7e48	                           jle 0x4004469	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4004421	    0x488b05000000	            mov rax, qword [0x04004428] 	      2301	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4004428	    0x488b15000000	            mov rdx, qword [0x0400442f] 	      2301	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x400442f	          0x488b12	                    mov rdx, qword [rdx]	      2301	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4004432	        0x48895078	             mov qword [rax + 0x78], rdx	      2301	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4004436	    0x488b05000000	            mov rax, qword [0x0400443d] 	      2303	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x400443d	    0xc78084000000	               mov dword [rax + 0x84], 0	      2303	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4004447	    0x488b05000000	            mov rax, qword [0x0400444e] 	      2305	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x400444e	    0x488b15000000	            mov rdx, qword [0x04004455] 	      2305	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4004455	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2305	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x400445b	          0x83e2ee	                     and edx, 0xffffffee	      2305	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x400445e	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2305	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4004464	      0xe9a6040000	                           jmp 0x400490f	      2305	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4004469	    0x488b05000000	            mov rax, qword [0x04004470] 	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4004470	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4004477	        0x488945d0	             mov qword [rbp - 0x30], rax	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x400447b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x400447f	    0x488b05000000	            mov rax, qword [0x04004486] 	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4004486	          0x4889d6	                            mov rsi, rdx	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4004489	          0x4889c7	                            mov rdi, rax	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x400448c	      0xe800000000	                          call 0x4004491	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4004491	            0x89c2	                            mov edx, eax	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4004493	    0x488b05000000	            mov rax, qword [0x0400449a] 	      2314	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x400449a	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      2314	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044a0	            0x29c2	                            sub edx, eax	      2314	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044a2	            0x89d0	                            mov eax, edx	      2314	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044a4	          0x8945d8	             mov dword [rbp - 0x28], eax	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x40044a7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x40044ab	      0xbeffffffff	                     mov esi, 0xffffffff	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x40044b0	          0x4889c7	                            mov rdi, rax	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x40044b3	      0xe849050000	             call sym.get_scroll_overlap	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x40044b8	    0x488b05000000	            mov rax, qword [0x040044bf] 	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044bf	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044c3	        0x48895078	             mov qword [rax + 0x78], rdx	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044c7	    0x488b05000000	            mov rax, qword [0x040044ce] 	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044ce	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044d1	    0x899084000000	             mov dword [rax + 0x84], edx	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044d7	    0x488b05000000	            mov rax, qword [0x040044de] 	      2320	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_7
0x40044de	      0xbe00000000	                              mov esi, 0	      2320	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_7
0x40044e3	          0x4889c7	                            mov rdi, rax	      2320	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_7
0x40044e6	      0xe800000000	                          call 0x40044eb	      2320	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_7
0x40044eb	    0x488b05000000	            mov rax, qword [0x040044f2] 	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044f2	    0x488b15000000	            mov rdx, qword [0x040044f9] 	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044f9	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x40044fd	        0x48895038	             mov qword [rax + 0x38], rdx	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4004501	    0x488b05000000	            mov rax, qword [0x04004508] 	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4004508	    0x488b15000000	            mov rdx, qword [0x0400450f] 	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x400450f	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4004515	          0x83e284	                     and edx, 0xffffff84	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4004518	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x400451e	      0xe9ec030000	                           jmp 0x400490f	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4004523	    0x488b05000000	            mov rax, qword [0x0400452a] 	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x400452a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x400452e	        0x4883f801	                              cmp rax, 1	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4004532	            0x750a	                           jne 0x400453e	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4004534	      0xe87ee5ffff	                    call sym.max_topfill	      2333	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8	CALL_8
0x4004539	      0xe9d1030000	                           jmp 0x400490f	      2334	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x400453e	    0x488b15000000	            mov rdx, qword [0x04004545] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4004545	    0x488b05000000	            mov rax, qword [0x0400454c] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400454c	          0x4839c2	                            cmp rdx, rax	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400454f	     0xf85ec000000	                           jne 0x4004641	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4004555	    0x488b05000000	            mov rax, qword [0x0400455c] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400455c	          0x4885c0	                           test rax, rax	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400455f	     0xf8edc000000	                           jle 0x4004641	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4004565	    0x488b05000000	            mov rax, qword [0x0400456c] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400456c	        0x488d50ff	                      lea rdx, [rax - 1]	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4004570	    0x488b05000000	            mov rax, qword [0x04004577] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4004577	          0x4839c2	                            cmp rdx, rax	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400457a	     0xf8ec1000000	                           jle 0x4004641	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4004580	    0x488b05000000	            mov rax, qword [0x04004587] 	      2340	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4004587	        0x4883f802	                              cmp rax, 2	      2340	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x400458b	            0x7f15	                            jg 0x40045a2	      2340	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x400458d	    0x488b05000000	            mov rax, qword [0x04004594] 	      2341	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4004594	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2341	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4004598	        0x4883ea01	                              sub rdx, 1	      2341	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x400459c	        0x48895078	             mov qword [rax + 0x78], rdx	      2341	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x40045a0	            0xeb24	                           jmp 0x40045c6	      2341	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x40045a2	    0x488b05000000	            mov rax, qword [0x040045a9] 	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x40045a9	    0x488b15000000	            mov rdx, qword [0x040045b0] 	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x40045b0	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x40045b4	    0x488b0d000000	            mov rcx, qword [0x040045bb] 	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x40045bb	        0x4883e902	                              sub rcx, 2	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x40045bf	          0x4829ca	                            sub rdx, rcx	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x40045c2	        0x48895078	             mov qword [rax + 0x78], rdx	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x40045c6	    0x488b05000000	            mov rax, qword [0x040045cd] 	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40045cd	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40045d1	          0x4885c0	                           test rax, rax	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40045d4	            0x7f0f	                            jg 0x40045e5	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40045d6	    0x488b05000000	            mov rax, qword [0x040045dd] 	      2345	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40045dd	    0x48c740780100	               mov qword [rax + 0x78], 1	      2345	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40045e5	    0x488b05000000	            mov rax, qword [0x040045ec] 	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x40045ec	    0x488b15000000	            mov rdx, qword [0x040045f3] 	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x40045f3	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x40045f7	    0x488b15000000	            mov rdx, qword [0x040045fe] 	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x40045fe	          0x4801ca	                            add rdx, rcx	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4004601	        0x4883ea01	                              sub rdx, 1	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4004605	        0x48895038	             mov qword [rax + 0x38], rdx	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4004609	    0x488b05000000	            mov rax, qword [0x04004610] 	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4004610	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4004614	    0x488b05000000	            mov rax, qword [0x0400461b] 	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x400461b	          0x488b00	                    mov rax, qword [rax]	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x400461e	          0x4839c2	                            cmp rdx, rax	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4004621	     0xf8ee7020000	                           jle 0x400490e	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4004627	    0x488b05000000	            mov rax, qword [0x0400462e] 	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x400462e	    0x488b15000000	            mov rdx, qword [0x04004635] 	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4004635	          0x488b12	                    mov rdx, qword [rdx]	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4004638	        0x48895038	             mov qword [rax + 0x38], rdx	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x400463c	      0xe9cd020000	                           jmp 0x400490e	      2349	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4004641	    0x488b05000000	            mov rax, qword [0x04004648] 	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4004648	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4
0x400464c	        0x4883e801	                              sub rax, 1	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4004650	        0x488945d0	             mov qword [rbp - 0x30], rax	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4004654	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4004658	        0x488d5001	                      lea rdx, [rax + 1]	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x400465c	    0x488b05000000	            mov rax, qword [0x04004663] 	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4004663	          0x4889d6	                            mov rsi, rdx	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4004666	          0x4889c7	                            mov rdi, rax	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4004669	      0xe800000000	                          call 0x400466e	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x400466e	            0x89c2	                            mov edx, eax	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4004670	    0x488b05000000	            mov rax, qword [0x04004677] 	      2358	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4004677	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2358	move.c	FUNCTION_48	FOR_1	ELSE_4
0x400467d	            0x29c2	                            sub edx, eax	      2358	move.c	FUNCTION_48	FOR_1	ELSE_4
0x400467f	            0x89d0	                            mov eax, edx	      2358	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4004681	          0x8945d8	             mov dword [rbp - 0x28], eax	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4004684	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x4004688	      0xbe01000000	                              mov esi, 1	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x400468d	          0x4889c7	                            mov rdi, rax	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x4004690	      0xe86c030000	             call sym.get_scroll_overlap	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x4004695	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4004699	    0x488b05000000	            mov rax, qword [0x040046a0] 	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40046a0	          0x488b00	                    mov rax, qword [rax]	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40046a3	          0x4839c2	                            cmp rdx, rax	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40046a6	            0x7c17	                            jl 0x40046bf	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40046a8	    0x488b05000000	            mov rax, qword [0x040046af] 	      2364	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40046af	          0x488b00	                    mov rax, qword [rax]	      2364	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40046b2	        0x488945d0	             mov qword [rbp - 0x30], rax	      2364	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40046b6	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2366	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40046bd	            0xeb0c	                           jmp 0x40046cb	      2366	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40046bf	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2370	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_6	CALL_11
0x40046c3	          0x4889c7	                            mov rdi, rax	      2370	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_6	CALL_11
0x40046c6	      0xe89fe9ffff	                call sym.botline_topline	      2370	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_6	CALL_11
0x40046cb	    0x488b05000000	            mov rax, qword [0x040046d2] 	      2373	move.c	FUNCTION_48	FOR_1	ELSE_4
0x40046d2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2373	move.c	FUNCTION_48	FOR_1	ELSE_4
0x40046d6	        0x48895038	             mov qword [rax + 0x38], rdx	      2373	move.c	FUNCTION_48	FOR_1	ELSE_4
0x40046da	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2377	move.c	FUNCTION_48	FOR_1	ELSE_4
0x40046e2	            0xeb29	                           jmp 0x400470d	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40046e4	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2380	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	CALL_12
0x40046e8	          0x4889c7	                            mov rdi, rax	      2380	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	CALL_12
0x40046eb	      0xe8cae7ffff	                   call sym.topline_back	      2380	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	CALL_12
0x40046f0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x40046f3	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x40046f8	            0x750a	                           jne 0x4004704	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x40046fa	    0x48c745c0ffff	      mov qword [rbp - 0x40], 0x7fffffff	      2382	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4004702	            0xeb09	                           jmp 0x400470d	      2382	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4004704	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x4004707	            0x4898	                                    cdqe	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x4004709	        0x480145c0	            add qword [rbp - 0x40], rax 	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x400470d	    0x488b05000000	            mov rax, qword [0x04004714] 	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4004714	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x400471a	            0x4898	                                    cdqe	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x400471c	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4004720	            0x7c09	                            jl 0x400472b	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4004722	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4004726	          0x4885c0	                           test rax, rax	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4004729	            0x7fb9	                            jg 0x40046e4	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x400472b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x400472f	          0x4885c0	                           test rax, rax	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4004732	            0x7f36	                            jg 0x400476a	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4004734	    0x488b05000000	            mov rax, qword [0x0400473b] 	      2388	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x400473b	    0x48c740780100	               mov qword [rax + 0x78], 1	      2388	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4004743	      0xe86fe3ffff	                    call sym.max_topfill	      2390	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15	CALL_13
0x4004748	    0x488b05000000	            mov rax, qword [0x0400474f] 	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x400474f	    0x488b15000000	            mov rdx, qword [0x04004756] 	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4004756	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x400475c	          0x83e2ce	                     and edx, 0xffffffce	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x400475f	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4004765	      0xe9a5010000	                           jmp 0x400490f	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x400476a	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2398	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_14
0x400476e	          0x4889c7	                            mov rdi, rax	      2398	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_14
0x4004771	      0xe850e9ffff	                call sym.topline_botline	      2398	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_14
0x4004776	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2400	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_15
0x400477a	          0x4889c7	                            mov rdi, rax	      2400	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_15
0x400477d	      0xe809e8ffff	                   call sym.botline_forw	      2400	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_15
0x4004782	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2401	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_16
0x4004786	          0x4889c7	                            mov rdi, rax	      2401	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_16
0x4004789	      0xe8fde7ffff	                   call sym.botline_forw	      2401	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_16
0x400478e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2403	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_17
0x4004792	          0x4889c7	                            mov rdi, rax	      2403	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_17
0x4004795	      0xe8d0e8ffff	                call sym.botline_topline	      2403	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_17
0x400479a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x400479e	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40047a2	      0xba00000000	                              mov edx, 0	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40047a7	          0x4889ce	                            mov rsi, rcx	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40047aa	          0x4889c7	                            mov rdi, rax	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40047ad	      0xe800000000	                          call 0x40047b2	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40047b2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047b6	    0x488b05000000	            mov rax, qword [0x040047bd] 	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047bd	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047c1	          0x4839c2	                            cmp rdx, rax	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047c4	     0xf8cf2000000	                            jl 0x40048bc	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047ca	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2414	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047ce	    0x488b05000000	            mov rax, qword [0x040047d5] 	      2414	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047d5	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2414	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047d9	          0x4839c2	                            cmp rdx, rax	      2414	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047dc	            0x7f18	                            jg 0x40047f6	      2414	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047de	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047e1	    0x488b05000000	            mov rax, qword [0x040047e8] 	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047e8	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047ee	            0x39c2	                            cmp edx, eax	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047f0	     0xf8cc6000000	                            jl 0x40048bc	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047f6	    0x488b05000000	            mov rax, qword [0x040047fd] 	      2422	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40047fd	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2422	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4004803	          0x8945d8	             mov dword [rbp - 0x28], eax	      2422	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4004806	    0x488b05000000	            mov rax, qword [0x0400480d] 	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x400480d	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4004813	    0x488b05000000	            mov rax, qword [0x0400481a] 	      2424	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17
0x400481a	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x400481e	    0x488b05000000	            mov rax, qword [0x04004825] 	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4004825	          0x4889d6	                            mov rsi, rdx	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4004828	          0x4889c7	                            mov rdi, rax	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x400482b	      0xe800000000	                          call 0x4004830	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4004830	            0x39c3	                            cmp ebx, eax	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4004832	            0x7d05	                           jge 0x4004839	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4004834	      0xe87ee2ffff	                    call sym.max_topfill	      2425	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_20
0x4004839	    0x488b05000000	            mov rax, qword [0x04004840] 	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4004840	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4004846	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4004849	            0x39c2	                            cmp edx, eax	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x400484b	            0x7524	                           jne 0x4004871	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x400484d	    0x488b05000000	            mov rax, qword [0x04004854] 	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4004854	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4004858	        0x4883ea01	                              sub rdx, 1	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x400485c	        0x48895078	             mov qword [rax + 0x78], rdx	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4004860	    0x488b05000000	            mov rax, qword [0x04004867] 	      2431	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4004867	    0xc78084000000	               mov dword [rax + 0x84], 0	      2431	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4004871	    0x488b05000000	            mov rax, qword [0x04004878] 	      2434	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_21
0x4004878	          0x4889c7	                            mov rdi, rax	      2434	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_21
0x400487b	      0xe8c0b7ffff	                   call sym.comp_botline	      2434	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_21
0x4004880	    0x488b05000000	            mov rax, qword [0x04004887] 	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4004887	    0x488b15000000	            mov rdx, qword [0x0400488e] 	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x400488e	    0x488b92e80000	            mov rdx, qword [rdx + 0xe8] 	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4004895	        0x4883ea01	                              sub rdx, 1	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4004899	        0x48895038	             mov qword [rax + 0x38], rdx	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x400489d	    0x488b05000000	            mov rax, qword [0x040048a4] 	      2436	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40048a4	    0x488b15000000	            mov rdx, qword [0x040048ab] 	      2436	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40048ab	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2436	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40048b1	          0x83e2e4	                     and edx, 0xffffffe4	      2436	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40048b4	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2436	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40048ba	            0xeb53	                           jmp 0x400490f	      2436	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40048bc	    0x488b05000000	            mov rax, qword [0x040048c3] 	      2441	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x40048c3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2441	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x40048c7	        0x48895078	             mov qword [rax + 0x78], rdx	      2441	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x40048cb	    0x488b05000000	            mov rax, qword [0x040048d2] 	      2443	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x40048d2	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2443	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x40048d5	    0x899084000000	             mov dword [rax + 0x84], edx	      2443	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x40048db	    0x488b05000000	            mov rax, qword [0x040048e2] 	      2444	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9	CALL_22
0x40048e2	      0xbe00000000	                              mov esi, 0	      2444	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9	CALL_22
0x40048e7	          0x4889c7	                            mov rdi, rax	      2444	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9	CALL_22
0x40048ea	      0xe800000000	                          call 0x40048ef	      2444	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9	CALL_22
0x40048ef	    0x488b05000000	            mov rax, qword [0x040048f6] 	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x40048f6	    0x488b15000000	            mov rdx, qword [0x040048fd] 	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x40048fd	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4004903	          0x83e2ce	                     and edx, 0xffffffce	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4004906	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x400490c	            0xeb01	                           jmp 0x400490f	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x400490e	              0x90	                                     nop	      2349	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400490f	      0x48836da001	               sub qword [rbp - 0x60], 1	      2258	move.c	FUNCTION_48	FOR_1
0x4004914	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2258	move.c	FUNCTION_48	FOR_1
0x4004919	     0xf8f3ff9ffff	                            jg 0x400425e	      2258	move.c	FUNCTION_48	FOR_1
0x400491f	      0xe800000000	                          call 0x4004924	      2452	move.c	FUNCTION_48	CALL_23
0x4004924	      0xe800000000	                          call 0x4004929	      2454	move.c	FUNCTION_48	CALL_24
0x4004929	      0xe800000000	                          call 0x400492e	      2455	move.c	FUNCTION_48	CALL_25
0x400492e	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      2456	move.c	FUNCTION_48	IF_19
0x4004932	            0x750a	                           jne 0x400493e	      2456	move.c	FUNCTION_48	IF_19
0x4004934	      0xbf06000000	                              mov edi, 6	      2457	move.c	FUNCTION_48	CALL_26
0x4004939	      0xe800000000	                          call 0x400493e	      2457	move.c	FUNCTION_48	CALL_26
0x400493e	    0x488b05000000	            mov rax, qword [0x04004945] 	      2458	move.c	FUNCTION_48
0x4004945	    0x488b15000000	            mov rdx, qword [0x0400494c] 	      2458	move.c	FUNCTION_48
0x400494c	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2458	move.c	FUNCTION_48
0x4004952	          0x83e2f8	                     and edx, 0xfffffff8	      2458	move.c	FUNCTION_48
0x4004955	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2458	move.c	FUNCTION_48
0x400495b	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x400495f	            0x7578	                           jne 0x40049d9	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x4004961	        0x837dac01	               cmp dword [rbp - 0x54], 1	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x4004965	            0x7572	                           jne 0x40049d9	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x4004967	      0xe880c0ffff	               call sym.check_top_offset	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x400496c	            0x85c0	                           test eax, eax	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x400496e	            0x7469	                            je 0x40049d9	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x4004970	      0xbe00000000	                              mov esi, 0	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x4004975	      0xbf01000000	                              mov edi, 1	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x400497a	      0xe800000000	                          call 0x400497f	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x400497f	    0x488b05000000	            mov rax, qword [0x04004986] 	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x4004986	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x400498a	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x400498e	            0x7f49	                            jg 0x40049d9	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x4004990	    0x488b05000000	            mov rax, qword [0x04004997] 	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x4004997	          0x488b00	                    mov rax, qword [rax]	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x400499a	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x400499e	            0x7e39	                           jle 0x40049d9	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x40049a0	    0x488b05000000	            mov rax, qword [0x040049a7] 	      2471	move.c	FUNCTION_48	IF_20	IF_21
0x40049a7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2471	move.c	FUNCTION_48	IF_20	IF_21
0x40049ab	        0x4883c201	                              add rdx, 1	      2471	move.c	FUNCTION_48	IF_20	IF_21
0x40049af	        0x48895078	             mov qword [rax + 0x78], rdx	      2471	move.c	FUNCTION_48	IF_20	IF_21
0x40049b3	    0x488b05000000	            mov rax, qword [0x040049ba] 	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x40049ba	        0x488d4878	                   lea rcx, [rax + 0x78]	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x40049be	    0x488b05000000	            mov rax, qword [0x040049c5] 	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x40049c5	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x40049c9	      0xba00000000	                              mov edx, 0	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x40049ce	          0x4889ce	                            mov rsi, rcx	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x40049d1	          0x4889c7	                            mov rdi, rax	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x40049d4	      0xe800000000	                          call 0x40049d9	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x40049d9	      0xbf0a000000	                            mov edi, 0xa	      2478	move.c	FUNCTION_48	CALL_30
0x40049de	      0xe800000000	                          call 0x40049e3	      2478	move.c	FUNCTION_48	CALL_30
0x40049e3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2479	move.c	FUNCTION_48
0x40049e6	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2480	move.c	FUNCTION_48
0x40049ea	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2480	move.c	FUNCTION_48
0x40049f3	            0x7405	                            je 0x40049fa	      2480	move.c	FUNCTION_48
0x40049f5	      0xe800000000	                          call 0x40049fa	      2480	move.c	FUNCTION_48
0x40049fa	        0x4883c458	                           add rsp, 0x58	      2480	move.c	FUNCTION_48
0x40049fe	              0x5b	                                 pop rbx	      2480	move.c	FUNCTION_48
0x40049ff	              0x5d	                                 pop rbp	      2480	move.c	FUNCTION_48
0x4004a00	              0xc3	                                     ret	      2480	move.c	FUNCTION_48
approximate_botline_win	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,0:IF,0:DO,0:SWITCH,0	12
0x4000e42	              0x55	                                push rbp	       612	move.c	FUNCTION_19
0x4000e43	          0x4889e5	                            mov rbp, rsp	       612	move.c	FUNCTION_19
0x4000e46	        0x48897df8	                mov qword [rbp - 8], rdi	       612	move.c	FUNCTION_19
0x4000e4a	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	move.c	FUNCTION_19
0x4000e4e	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       613	move.c	FUNCTION_19
0x4000e54	          0x83e0df	                     and eax, 0xffffffdf	       613	move.c	FUNCTION_19
0x4000e57	            0x89c2	                            mov edx, eax	       613	move.c	FUNCTION_19
0x4000e59	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	move.c	FUNCTION_19
0x4000e5d	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       613	move.c	FUNCTION_19
0x4000e63	              0x90	                                     nop	       614	move.c	FUNCTION_19
0x4000e64	              0x5d	                                 pop rbp	       614	move.c	FUNCTION_19
0x4000e65	              0xc3	                                     ret	       614	move.c	FUNCTION_19
changed_window_setting_win	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,2:IF,0:DO,0:SWITCH,0	22
0x4000c46	              0x55	                                push rbp	       517	move.c	FUNCTION_10
0x4000c47	          0x4889e5	                            mov rbp, rsp	       517	move.c	FUNCTION_10
0x4000c4a	        0x4883ec10	                           sub rsp, 0x10	       517	move.c	FUNCTION_10
0x4000c4e	        0x48897df8	                mov qword [rbp - 8], rdi	       517	move.c	FUNCTION_10
0x4000c52	        0x488b45f8	                mov rax, qword [rbp - 8]	       518	move.c	FUNCTION_10
0x4000c56	    0xc780f8000000	               mov dword [rax + 0xf8], 0	       518	move.c	FUNCTION_10
0x4000c60	        0x488b45f8	                mov rax, qword [rbp - 8]	       519	move.c	FUNCTION_10	CALL_1
0x4000c64	          0x4889c7	                            mov rdi, rax	       519	move.c	FUNCTION_10	CALL_1
0x4000c67	      0xe800000000	                          call 0x4000c6c	       519	move.c	FUNCTION_10	CALL_1
0x4000c6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       520	move.c	FUNCTION_10
0x4000c70	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       520	move.c	FUNCTION_10
0x4000c76	            0x241f	                            and al, 0x1f	       520	move.c	FUNCTION_10
0x4000c78	            0x89c2	                            mov edx, eax	       520	move.c	FUNCTION_10
0x4000c7a	        0x488b45f8	                mov rax, qword [rbp - 8]	       520	move.c	FUNCTION_10
0x4000c7e	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       520	move.c	FUNCTION_10
0x4000c84	        0x488b45f8	                mov rax, qword [rbp - 8]	       521	move.c	FUNCTION_10	CALL_2
0x4000c88	      0xbe28000000	                           mov esi, 0x28	       521	move.c	FUNCTION_10	CALL_2
0x4000c8d	          0x4889c7	                            mov rdi, rax	       521	move.c	FUNCTION_10	CALL_2
0x4000c90	      0xe800000000	                          call 0x4000c95	       521	move.c	FUNCTION_10	CALL_2
0x4000c95	              0x90	                                     nop	       522	move.c	FUNCTION_10
0x4000c96	              0xc9	                                   leave	       522	move.c	FUNCTION_10
0x4000c97	              0xc3	                                     ret	       522	move.c	FUNCTION_10
update_topline	ELSE,9:FOR,2:functions,0:WHILE,1:CALL,24:IF,28:DO,0:SWITCH,0	385
0x40002bf	              0x55	                                push rbp	       163	move.c	FUNCTION_4
0x40002c0	          0x4889e5	                            mov rbp, rsp	       163	move.c	FUNCTION_4
0x40002c3	              0x53	                                push rbx	       163	move.c	FUNCTION_4
0x40002c4	        0x4883ec58	                           sub rsp, 0x58	       163	move.c	FUNCTION_4
0x40002c8	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	move.c	FUNCTION_4
0x40002d1	        0x488945e8	             mov qword [rbp - 0x18], rax	       163	move.c	FUNCTION_4
0x40002d5	            0x31c0	                            xor eax, eax	       163	move.c	FUNCTION_4
0x40002d7	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       174	move.c	FUNCTION_4
0x40002de	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       175	move.c	FUNCTION_4
0x40002e5	    0x488b05000000	            mov rax, qword [0x040002ec] 	       177	move.c	FUNCTION_4
0x40002ec	          0x8945b0	             mov dword [rbp - 0x50], eax	       177	move.c	FUNCTION_4
0x40002ef	      0xbf01000000	                              mov edi, 1	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x40002f4	      0xe800000000	                          call 0x40002f9	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x40002f9	            0x85c0	                           test eax, eax	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x40002fb	            0x7411	                            je 0x400030e	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x40002fd	    0x488b05000000	            mov rax, qword [0x04000304] 	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4000304	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x400030a	            0x85c0	                           test eax, eax	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x400030c	            0x7563	                           jne 0x4000371	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x400030e	    0x488b05000000	            mov rax, qword [0x04000315] 	       184	move.c	FUNCTION_4	IF_1
0x4000315	    0x488b15000000	            mov rdx, qword [0x0400031c] 	       184	move.c	FUNCTION_4	IF_1
0x400031c	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       184	move.c	FUNCTION_4	IF_1
0x4000320	        0x48895078	             mov qword [rax + 0x78], rdx	       184	move.c	FUNCTION_4	IF_1
0x4000324	    0x488b05000000	            mov rax, qword [0x0400032b] 	       185	move.c	FUNCTION_4	IF_1
0x400032b	    0x488b15000000	            mov rdx, qword [0x04000332] 	       185	move.c	FUNCTION_4	IF_1
0x4000332	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	       185	move.c	FUNCTION_4	IF_1
0x4000336	    0x488990e80000	             mov qword [rax + 0xe8], rdx	       185	move.c	FUNCTION_4	IF_1
0x400033d	    0x488b05000000	            mov rax, qword [0x04000344] 	       186	move.c	FUNCTION_4	IF_1
0x4000344	    0x488b15000000	            mov rdx, qword [0x0400034b] 	       186	move.c	FUNCTION_4	IF_1
0x400034b	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       186	move.c	FUNCTION_4	IF_1
0x4000351	          0x83ca60	                            or edx, 0x60	       186	move.c	FUNCTION_4	IF_1
0x4000354	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       186	move.c	FUNCTION_4	IF_1
0x400035a	    0x488b05000000	            mov rax, qword [0x04000361] 	       187	move.c	FUNCTION_4	IF_1
0x4000361	    0x48c780500500	              mov qword [rax + 0x550], 1	       187	move.c	FUNCTION_4	IF_1
0x400036c	      0xe9fd050000	                           jmp 0x400096e	       188	move.c	FUNCTION_4	IF_1
0x4000371	    0x488b05000000	            mov rax, qword [0x04000378] 	       191	move.c	FUNCTION_4	CALL_2
0x4000378	          0x4889c7	                            mov rdi, rax	       191	move.c	FUNCTION_4	CALL_2
0x400037b	      0xe800000000	                          call 0x4000380	       191	move.c	FUNCTION_4	CALL_2
0x4000380	    0x488b05000000	            mov rax, qword [0x04000387] 	       192	move.c	FUNCTION_4	IF_2
0x4000387	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       192	move.c	FUNCTION_4	IF_2
0x400038d	      0x2580000000	                           and eax, 0x80	       192	move.c	FUNCTION_4	IF_2
0x4000392	            0x85c0	                           test eax, eax	       192	move.c	FUNCTION_4	IF_2
0x4000394	     0xf85d3050000	                           jne 0x400096d	       192	move.c	FUNCTION_4	IF_2
0x400039a	    0x8b0500000000	            mov eax, dword [0x040003a0] 	       197	move.c	FUNCTION_4	IF_3
0x40003a0	            0x85c0	                           test eax, eax	       197	move.c	FUNCTION_4	IF_3
0x40003a2	            0x7e12	                           jle 0x40003b6	       197	move.c	FUNCTION_4	IF_3
0x40003a4	    0x8b0500000000	            mov eax, dword [0x040003aa] 	       198	move.c	FUNCTION_4	IF_3
0x40003aa	          0x83e801	                              sub eax, 1	       198	move.c	FUNCTION_4	IF_3
0x40003ad	            0x4898	                                    cdqe	       198	move.c	FUNCTION_4	IF_3
0x40003af	    0x488905000000	            mov qword [0x040003b6], rax 	       198	move.c	FUNCTION_4	IF_3
0x40003b6	    0x488b05000000	            mov rax, qword [0x040003bd] 	       201	move.c	FUNCTION_4
0x40003bd	        0x488b4078	            mov rax, qword [rax + 0x78] 	       201	move.c	FUNCTION_4
0x40003c1	        0x488945c8	             mov qword [rbp - 0x38], rax	       201	move.c	FUNCTION_4
0x40003c5	    0x488b05000000	            mov rax, qword [0x040003cc] 	       203	move.c	FUNCTION_4
0x40003cc	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       203	move.c	FUNCTION_4
0x40003d2	          0x8945b4	             mov dword [rbp - 0x4c], eax	       203	move.c	FUNCTION_4
0x40003d5	    0x488b05000000	            mov rax, qword [0x040003dc] 	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40003dc	          0x488b00	                    mov rax, qword [rax]	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40003df	        0x4883f801	                              cmp rax, 1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40003e3	     0xf8581000000	                           jne 0x400046a	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40003e9	      0xbf01000000	                              mov edi, 1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40003ee	      0xe800000000	                          call 0x40003f3	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40003f3	           0xfb600	                   movzx eax, byte [rax]	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40003f6	            0x84c0	                             test al, al	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40003f8	            0x7570	                           jne 0x400046a	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40003fa	    0x488b05000000	            mov rax, qword [0x04000401] 	       211	move.c	FUNCTION_4	IF_4	IF_5
0x4000401	        0x488b4078	            mov rax, qword [rax + 0x78] 	       211	move.c	FUNCTION_4	IF_4	IF_5
0x4000405	        0x4883f801	                              cmp rax, 1	       211	move.c	FUNCTION_4	IF_4	IF_5
0x4000409	            0x740a	                            je 0x4000415	       211	move.c	FUNCTION_4	IF_4	IF_5
0x400040b	      0xbf28000000	                           mov edi, 0x28	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x4000410	      0xe800000000	                          call 0x4000415	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x4000415	    0x488b05000000	            mov rax, qword [0x0400041c] 	       213	move.c	FUNCTION_4	IF_4
0x400041c	    0x48c740780100	               mov qword [rax + 0x78], 1	       213	move.c	FUNCTION_4	IF_4
0x4000424	    0x488b05000000	            mov rax, qword [0x0400042b] 	       214	move.c	FUNCTION_4	IF_4
0x400042b	    0x48c780e80000	               mov qword [rax + 0xe8], 2	       214	move.c	FUNCTION_4	IF_4
0x4000436	    0x488b05000000	            mov rax, qword [0x0400043d] 	       215	move.c	FUNCTION_4	IF_4
0x400043d	    0x488b15000000	            mov rdx, qword [0x04000444] 	       215	move.c	FUNCTION_4	IF_4
0x4000444	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       215	move.c	FUNCTION_4	IF_4
0x400044a	          0x83ca60	                            or edx, 0x60	       215	move.c	FUNCTION_4	IF_4
0x400044d	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       215	move.c	FUNCTION_4	IF_4
0x4000453	    0x488b05000000	            mov rax, qword [0x0400045a] 	       216	move.c	FUNCTION_4	IF_4
0x400045a	    0x48c780500500	              mov qword [rax + 0x550], 1	       216	move.c	FUNCTION_4	IF_4
0x4000465	      0xe9c1010000	                           jmp 0x400062b	       216	move.c	FUNCTION_4	IF_4
0x400046a	    0x488b05000000	            mov rax, qword [0x04000471] 	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x4000471	        0x488b4078	            mov rax, qword [rax + 0x78] 	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x4000475	        0x4883f801	                              cmp rax, 1	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x4000479	            0x7e34	                           jle 0x40004af	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x400047b	    0x488b05000000	            mov rax, qword [0x04000482] 	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4000482	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4000486	    0x488b05000000	            mov rax, qword [0x0400048d] 	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x400048d	        0x488b4078	            mov rax, qword [rax + 0x78] 	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4000491	          0x4839c2	                            cmp rdx, rax	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4000494	            0x7d09	                           jge 0x400049f	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4000496	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       231	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x400049d	            0xeb10	                           jmp 0x40004af	       231	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x400049f	      0xe848050000	               call sym.check_top_offset	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x40004a4	            0x85c0	                           test eax, eax	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x40004a6	            0x7407	                            je 0x40004af	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x40004a8	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       233	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8
0x40004af	        0x837da800	               cmp dword [rbp - 0x58], 0	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40004b3	            0x7535	                           jne 0x40004ea	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40004b5	    0x488b05000000	            mov rax, qword [0x040004bc] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40004bc	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40004c2	    0x488b05000000	            mov rax, qword [0x040004c9] 	       238	move.c	FUNCTION_4	ELSE_1	IF_9
0x40004c9	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40004cd	    0x488b05000000	            mov rax, qword [0x040004d4] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40004d4	          0x4889d6	                            mov rsi, rdx	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40004d7	          0x4889c7	                            mov rdi, rax	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40004da	      0xe800000000	                          call 0x40004df	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40004df	            0x39c3	                            cmp ebx, eax	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40004e1	            0x7e07	                           jle 0x40004ea	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40004e3	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       239	move.c	FUNCTION_4	ELSE_1	IF_9
0x40004ea	        0x837da800	               cmp dword [rbp - 0x58], 0	       242	move.c	FUNCTION_4	ELSE_1	IF_10
0x40004ee	     0xf840a010000	                            je 0x40005fe	       242	move.c	FUNCTION_4	ELSE_1	IF_10
0x40004f4	    0x488b05000000	            mov rax, qword [0x040004fb] 	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x40004fb	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4000501	            0x89c2	                            mov edx, eax	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4000503	          0xc1ea1f	                           shr edx, 0x1f	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4000506	             0x1d0	                            add eax, edx	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4000508	            0xd1f8	                              sar eax, 1	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x400050a	          0x83e801	                              sub eax, 1	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x400050d	          0x8945a0	             mov dword [rbp - 0x60], eax	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4000510	        0x837da001	               cmp dword [rbp - 0x60], 1	       245	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4000514	            0x7f07	                            jg 0x400051d	       245	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4000516	    0xc745a0020000	               mov dword [rbp - 0x60], 2	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x400051d	    0x488b05000000	            mov rax, qword [0x04000524] 	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4000524	          0x4889c7	                            mov rdi, rax	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4000527	      0xe800000000	                          call 0x400052c	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x400052c	            0x85c0	                           test eax, eax	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x400052e	            0x7478	                            je 0x40005a8	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4000530	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       254	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12
0x4000537	    0x488b05000000	            mov rax, qword [0x0400053e] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x400053e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4000542	        0x488945b8	             mov qword [rbp - 0x48], rax	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4000546	            0xeb40	                           jmp 0x4000588	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4000548	        0x8345a401	               add dword [rbp - 0x5c], 1	       258	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x400054c	    0x488b05000000	            mov rax, qword [0x04000553] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4000553	          0x488b10	                    mov rdx, qword [rax]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4000556	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x400055a	          0x4839c2	                            cmp rdx, rax	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x400055d	            0x7e71	                           jle 0x40005d0	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x400055f	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4000562	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4000565	            0x7d69	                           jge 0x40005d0	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4000567	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x400056b	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x400056f	      0xbe00000000	                              mov esi, 0	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x4000574	          0x4889c7	                            mov rdi, rax	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x4000577	      0xe800000000	                          call 0x400057c	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x400057c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4000580	        0x4883c001	                              add rax, 1	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4000584	        0x488945b8	             mov qword [rbp - 0x48], rax	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4000588	    0x488b05000000	            mov rax, qword [0x0400058f] 	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x400058f	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4000593	    0x488b05000000	            mov rax, qword [0x0400059a] 	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x400059a	          0x4801c2	                            add rdx, rax	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x400059d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40005a1	          0x4839c2	                            cmp rdx, rax	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40005a4	            0x7fa2	                            jg 0x4000548	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40005a6	            0xeb28	                           jmp 0x40005d0	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40005a8	    0x488b05000000	            mov rax, qword [0x040005af] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40005af	        0x488b4078	            mov rax, qword [rax + 0x78] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40005b3	            0x89c2	                            mov edx, eax	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40005b5	    0x488b05000000	            mov rax, qword [0x040005bc] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40005bc	             0x1c2	                            add edx, eax	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40005be	    0x488b05000000	            mov rax, qword [0x040005c5] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40005c5	        0x488b4038	            mov rax, qword [rax + 0x38] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40005c9	            0x29c2	                            sub edx, eax	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40005cb	            0x89d0	                            mov eax, edx	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40005cd	          0x8945a4	             mov dword [rbp - 0x5c], eax	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40005d0	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       272	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x40005d3	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	       272	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x40005d6	            0x7c0c	                            jl 0x40005e4	       272	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x40005d8	      0xbf00000000	                              mov edi, 0	       273	move.c	FUNCTION_4	ELSE_1	IF_10	CALL_9
0x40005dd	      0xe800000000	                          call 0x40005e2	       273	move.c	FUNCTION_4	ELSE_1	IF_10	CALL_9
0x40005e2	            0xeb47	                           jmp 0x400062b	       273	move.c	FUNCTION_4	ELSE_1	IF_10	CALL_9
0x40005e4	      0xe8a0030000	               call sym.scrolljump_value	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x40005e9	      0xbe00000000	                              mov esi, 0	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x40005ee	            0x89c7	                            mov edi, eax	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x40005f0	      0xe800000000	                          call 0x40005f5	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x40005f5	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       277	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4
0x40005fc	            0xeb2d	                           jmp 0x400062b	       277	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4
0x40005fe	    0x488b05000000	            mov rax, qword [0x04000605] 	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4000605	        0x488d4878	                   lea rcx, [rax + 0x78]	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4000609	    0x488b05000000	            mov rax, qword [0x04000610] 	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4000610	        0x488b4078	            mov rax, qword [rax + 0x78] 	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4000614	      0xba00000000	                              mov edx, 0	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4000619	          0x4889ce	                            mov rsi, rcx	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x400061c	          0x4889c7	                            mov rdi, rax	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x400061f	      0xe800000000	                          call 0x4000624	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4000624	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       287	move.c	FUNCTION_4	ELSE_1	ELSE_5
0x400062b	        0x837dac00	               cmp dword [rbp - 0x54], 0	       299	move.c	FUNCTION_4	IF_15
0x400062f	     0xf8488020000	                            je 0x40008bd	       299	move.c	FUNCTION_4	IF_15
0x4000635	    0x488b05000000	            mov rax, qword [0x0400063c] 	       301	move.c	FUNCTION_4	IF_15	IF_16
0x400063c	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       301	move.c	FUNCTION_4	IF_15	IF_16
0x4000642	          0x83e040	                           and eax, 0x40	       301	move.c	FUNCTION_4	IF_15	IF_16
0x4000645	            0x85c0	                           test eax, eax	       301	move.c	FUNCTION_4	IF_15	IF_16
0x4000647	            0x7505	                           jne 0x400064e	       301	move.c	FUNCTION_4	IF_15	IF_16
0x4000649	      0xe800000000	                          call 0x400064e	       302	move.c	FUNCTION_4	IF_15	CALL_13
0x400064e	    0x488b05000000	            mov rax, qword [0x04000655] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4000655	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x400065c	    0x488b05000000	            mov rax, qword [0x04000663] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4000663	          0x488b00	                    mov rax, qword [rax]	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4000666	          0x4839c2	                            cmp rdx, rax	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4000669	     0xf8f4e020000	                            jg 0x40008bd	       304	move.c	FUNCTION_4	IF_15	IF_17
0x400066f	    0x488b05000000	            mov rax, qword [0x04000676] 	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4000676	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x400067a	    0x488b05000000	            mov rax, qword [0x04000681] 	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4000681	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4000688	          0x4839c2	                            cmp rdx, rax	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x400068b	     0xf8d1b010000	                           jge 0x40007ac	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4000691	    0x488b05000000	            mov rax, qword [0x04000698] 	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4000698	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400069c	    0x488b05000000	            mov rax, qword [0x040006a3] 	       309	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006a3	    0x488b88e80000	            mov rcx, qword [rax + 0xe8] 	       309	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006aa	    0x488b05000000	            mov rax, qword [0x040006b1] 	       309	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006b1	          0x4829c1	                            sub rcx, rax	       309	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006b4	          0x4889c8	                            mov rax, rcx	       309	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006b7	          0x4839c2	                            cmp rdx, rax	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006ba	            0x7d17	                           jge 0x40006d3	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006bc	    0x488b05000000	            mov rax, qword [0x040006c3] 	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40006c3	          0x4889c7	                            mov rdi, rax	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40006c6	      0xe800000000	                          call 0x40006cb	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40006cb	            0x85c0	                           test eax, eax	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40006cd	     0xf84cf000000	                            je 0x40007a2	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40006d3	    0x488b05000000	            mov rax, qword [0x040006da] 	       320	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006da	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	       320	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006e0	          0x8945a4	             mov dword [rbp - 0x5c], eax	       320	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006e3	    0x488b05000000	            mov rax, qword [0x040006ea] 	       321	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006ea	        0x488b4038	            mov rax, qword [rax + 0x38] 	       321	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006ee	        0x488945d0	             mov qword [rbp - 0x30], rax	       321	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40006f2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x40006f6	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x40006fa	      0xbe00000000	                              mov esi, 0	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x40006ff	          0x4889c7	                            mov rdi, rax	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x4000702	      0xe800000000	                          call 0x4000707	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x4000707	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       327	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400070e	    0x488b05000000	            mov rax, qword [0x04000715] 	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4000715	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400071b	           0x145a4	             add dword [rbp - 0x5c], eax	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400071e	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       330	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4000725	            0xeb24	                           jmp 0x400074b	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4000727	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400072a	           0x145a4	             add dword [rbp - 0x5c], eax	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400072d	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x4000730	          0x4863d0	                         movsxd rdx, eax	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x4000733	    0x488b05000000	            mov rax, qword [0x0400073a] 	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x400073a	          0x4839c2	                            cmp rdx, rax	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x400073d	            0x7d47	                           jge 0x4000786	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x400073f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       340	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	CALL_16
0x4000743	          0x4889c7	                            mov rdi, rax	       340	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	CALL_16
0x4000746	      0xe840280000	                   call sym.botline_forw	       340	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	CALL_16
0x400074b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400074f	    0x488b05000000	            mov rax, qword [0x04000756] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4000756	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400075d	          0x4839c2	                            cmp rdx, rax	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4000760	            0x7d25	                           jge 0x4000787	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4000762	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4000766	        0x488d5001	                      lea rdx, [rax + 1]	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400076a	    0x488b05000000	            mov rax, qword [0x04000771] 	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4000771	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4000778	          0x4839c2	                            cmp rdx, rax	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400077b	            0x7caa	                            jl 0x4000727	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400077d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4000780	            0x85c0	                           test eax, eax	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4000782	            0x74a3	                            je 0x4000727	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4000784	            0xeb01	                           jmp 0x4000787	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4000786	              0x90	                                     nop	       339	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x4000787	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       342	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x400078a	          0x4863d0	                         movsxd rdx, eax	       342	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x400078d	    0x488b05000000	            mov rax, qword [0x04000794] 	       342	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x4000794	          0x4839c2	                            cmp rdx, rax	       342	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x4000797	            0x7c12	                            jl 0x40007ab	       342	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x4000799	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       344	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x40007a0	            0xeb09	                           jmp 0x40007ab	       314	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40007a2	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       348	move.c	FUNCTION_4	IF_15	IF_17	IF_18	ELSE_6
0x40007a9	            0xeb01	                           jmp 0x40007ac	       348	move.c	FUNCTION_4	IF_15	IF_17	IF_18	ELSE_6
0x40007ab	              0x90	                                     nop	       314	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40007ac	        0x837dac00	               cmp dword [rbp - 0x54], 0	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x40007b0	     0xf8407010000	                            je 0x40008bd	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x40007b6	    0x488b05000000	            mov rax, qword [0x040007bd] 	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x40007bd	          0x4889c7	                            mov rdi, rax	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x40007c0	      0xe800000000	                          call 0x40007c5	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x40007c5	            0x85c0	                           test eax, eax	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x40007c7	     0xf848a000000	                            je 0x4000857	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x40007cd	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       358	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23
0x40007d5	    0x488b05000000	            mov rax, qword [0x040007dc] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40007dc	        0x488b4038	            mov rax, qword [rax + 0x38] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40007e0	        0x488945b8	             mov qword [rbp - 0x48], rax	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40007e4	            0xeb4e	                           jmp 0x4000834	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40007e6	      0x488345c001	               add qword [rbp - 0x40], 1	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40007eb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x40007ef	          0x4885c0	                           test rax, rax	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x40007f2	     0xf8e90000000	                           jle 0x4000888	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x40007f8	    0x488b05000000	            mov rax, qword [0x040007ff] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x40007ff	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4000805	          0x83c001	                              add eax, 1	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4000808	            0x4898	                                    cdqe	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x400080a	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x400080e	            0x7c78	                            jl 0x4000888	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4000810	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4000814	        0x488d4db8	                   lea rcx, [rbp - 0x48]	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4000818	      0xba00000000	                              mov edx, 0	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x400081d	          0x4889ce	                            mov rsi, rcx	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4000820	          0x4889c7	                            mov rdi, rax	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4000823	      0xe800000000	                          call 0x4000828	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4000828	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x400082c	        0x4883e801	                              sub rax, 1	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4000830	        0x488945b8	             mov qword [rbp - 0x48], rax	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4000834	    0x488b05000000	            mov rax, qword [0x0400083b] 	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x400083b	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4000842	    0x488b05000000	            mov rax, qword [0x04000849] 	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4000849	          0x4829c2	                            sub rdx, rax	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x400084c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4000850	          0x4839c2	                            cmp rdx, rax	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4000853	            0x7e91	                           jle 0x40007e6	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4000855	            0xeb31	                           jmp 0x4000888	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4000857	    0x488b05000000	            mov rax, qword [0x0400085e] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x400085e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4000862	    0x488b05000000	            mov rax, qword [0x04000869] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4000869	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4000870	          0x4829c2	                            sub rdx, rax	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4000873	          0x4889d0	                            mov rax, rdx	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4000876	        0x488d5001	                      lea rdx, [rax + 1]	       372	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x400087a	    0x488b05000000	            mov rax, qword [0x04000881] 	       372	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4000881	          0x4801d0	                            add rax, rdx	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4000884	        0x488945c0	             mov qword [rbp - 0x40], rax	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4000888	    0x488b05000000	            mov rax, qword [0x0400088f] 	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x400088f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4000895	          0x83c001	                              add eax, 1	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4000898	            0x4898	                                    cdqe	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x400089a	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x400089e	            0x7c13	                            jl 0x40008b3	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x40008a0	      0xe8e4000000	               call sym.scrolljump_value	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x40008a5	      0xbe00000000	                              mov esi, 0	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x40008aa	            0x89c7	                            mov edi, eax	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x40008ac	      0xe800000000	                          call 0x40008b1	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x40008b1	            0xeb0a	                           jmp 0x40008bd	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x40008b3	      0xbf00000000	                              mov edi, 0	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x40008b8	      0xe800000000	                          call 0x40008bd	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x40008bd	    0x488b05000000	            mov rax, qword [0x040008c4] 	       380	move.c	FUNCTION_4
0x40008c4	    0x488b15000000	            mov rdx, qword [0x040008cb] 	       380	move.c	FUNCTION_4
0x40008cb	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       380	move.c	FUNCTION_4
0x40008d1	          0x80ca80	                             or dl, 0x80	       380	move.c	FUNCTION_4
0x40008d4	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       380	move.c	FUNCTION_4
0x40008da	    0x488b05000000	            mov rax, qword [0x040008e1] 	       385	move.c	FUNCTION_4	IF_26
0x40008e1	        0x488b4078	            mov rax, qword [rax + 0x78] 	       385	move.c	FUNCTION_4	IF_26
0x40008e5	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       385	move.c	FUNCTION_4	IF_26
0x40008e9	            0x7512	                           jne 0x40008fd	       385	move.c	FUNCTION_4	IF_26
0x40008eb	    0x488b05000000	            mov rax, qword [0x040008f2] 	       387	move.c	FUNCTION_4	IF_26
0x40008f2	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       387	move.c	FUNCTION_4	IF_26
0x40008f8	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       387	move.c	FUNCTION_4	IF_26
0x40008fb	            0x7462	                            je 0x400095f	       387	move.c	FUNCTION_4	IF_26
0x40008fd	    0xc70500000000	     mov dword [0x04000907], 0xffffffff 	       391	move.c	FUNCTION_4	IF_26
0x4000907	    0x488b05000000	            mov rax, qword [0x0400090e] 	       392	move.c	FUNCTION_4	IF_26	IF_27
0x400090e	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4000914	            0x85c0	                           test eax, eax	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4000916	            0x741d	                            je 0x4000935	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4000918	    0x488b05000000	            mov rax, qword [0x0400091f] 	       394	move.c	FUNCTION_4	IF_26	IF_27
0x400091f	    0xc78098000000	               mov dword [rax + 0x98], 0	       394	move.c	FUNCTION_4	IF_26	IF_27
0x4000929	      0xbf28000000	                           mov edi, 0x28	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x400092e	      0xe800000000	                          call 0x4000933	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x4000933	            0xeb0a	                           jmp 0x400093f	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x4000935	      0xbf0a000000	                            mov edi, 0xa	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x400093a	      0xe800000000	                          call 0x400093f	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x400093f	    0x488b05000000	            mov rax, qword [0x04000946] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4000946	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x400094a	    0x488b05000000	            mov rax, qword [0x04000951] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4000951	        0x488b4078	            mov rax, qword [rax + 0x78] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4000955	          0x4839c2	                            cmp rdx, rax	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4000958	            0x7505	                           jne 0x400095f	       400	move.c	FUNCTION_4	IF_26	IF_28
0x400095a	      0xe800000000	                          call 0x400095f	       401	move.c	FUNCTION_4	IF_26	CALL_24
0x400095f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       405	move.c	FUNCTION_4
0x4000962	            0x4898	                                    cdqe	       405	move.c	FUNCTION_4
0x4000964	    0x488905000000	            mov qword [0x0400096b], rax 	       405	move.c	FUNCTION_4
0x400096b	            0xeb01	                           jmp 0x400096e	       405	move.c	FUNCTION_4
0x400096d	              0x90	                                     nop	       193	move.c	FUNCTION_4	IF_2
0x400096e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	move.c	FUNCTION_4
0x4000972	    0x644833042528	                xor rax, qword fs:[0x28]	       407	move.c	FUNCTION_4
0x400097b	            0x7405	                            je 0x4000982	       407	move.c	FUNCTION_4
0x400097d	      0xe800000000	                          call 0x4000982	       407	move.c	FUNCTION_4
0x4000982	        0x4883c458	                           add rsp, 0x58	       407	move.c	FUNCTION_4
0x4000986	              0x5b	                                 pop rbx	       407	move.c	FUNCTION_4
0x4000987	              0x5d	                                 pop rbp	       407	move.c	FUNCTION_4
0x4000988	              0xc3	                                     ret	       407	move.c	FUNCTION_4
botline_forw	ELSE,3:FOR,0:functions,0:WHILE,0:CALL,3:IF,3:DO,0:SWITCH,0	63
0x4002f8b	              0x55	                                push rbp	      1574	move.c	FUNCTION_40
0x4002f8c	          0x4889e5	                            mov rbp, rsp	      1574	move.c	FUNCTION_40
0x4002f8f	              0x53	                                push rbx	      1574	move.c	FUNCTION_40
0x4002f90	        0x4883ec18	                           sub rsp, 0x18	      1574	move.c	FUNCTION_40
0x4002f94	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1574	move.c	FUNCTION_40
0x4002f98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002f9c	          0x8b5808	                mov ebx, dword [rax + 8]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002f9f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002fa3	          0x488b00	                    mov rax, qword [rax]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002fa6	        0x488d5001	                      lea rdx, [rax + 1]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002faa	    0x488b05000000	            mov rax, qword [0x04002fb1] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002fb1	          0x4889d6	                            mov rsi, rdx	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002fb4	          0x4889c7	                            mov rdi, rax	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002fb7	      0xe800000000	                          call 0x4002fbc	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002fbc	            0x39c3	                            cmp ebx, eax	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002fbe	            0x7d21	                           jge 0x4002fe1	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002fc0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1579	move.c	FUNCTION_40	IF_1
0x4002fc4	          0x8b4008	                mov eax, dword [rax + 8]	      1579	move.c	FUNCTION_40	IF_1
0x4002fc7	          0x8d5001	                      lea edx, [rax + 1]	      1579	move.c	FUNCTION_40	IF_1
0x4002fca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1579	move.c	FUNCTION_40	IF_1
0x4002fce	          0x895008	                mov dword [rax + 8], edx	      1579	move.c	FUNCTION_40	IF_1
0x4002fd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1580	move.c	FUNCTION_40	IF_1
0x4002fd5	    0xc7400c010000	                mov dword [rax + 0xc], 1	      1580	move.c	FUNCTION_40	IF_1
0x4002fdc	      0xe981000000	                           jmp 0x4003062	      1602	move.c	FUNCTION_40
0x4002fe1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1585	move.c	FUNCTION_40	ELSE_1
0x4002fe5	          0x488b00	                    mov rax, qword [rax]	      1585	move.c	FUNCTION_40	ELSE_1
0x4002fe8	        0x488d5001	                      lea rdx, [rax + 1]	      1585	move.c	FUNCTION_40	ELSE_1
0x4002fec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1585	move.c	FUNCTION_40	ELSE_1
0x4002ff0	          0x488910	                    mov qword [rax], rdx	      1585	move.c	FUNCTION_40	ELSE_1
0x4002ff3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1587	move.c	FUNCTION_40	ELSE_1
0x4002ff7	    0xc74008000000	                  mov dword [rax + 8], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x4002ffe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4003002	          0x488b10	                    mov rdx, qword [rax]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4003005	    0x488b05000000	            mov rax, qword [0x0400300c] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x400300c	          0x488b00	                    mov rax, qword [rax]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x400300f	          0x4839c2	                            cmp rdx, rax	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4003012	            0x7e0d	                           jle 0x4003021	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4003014	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x4003018	    0xc7400cffffff	      mov dword [rax + 0xc], 0x7fffffff 	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x400301f	            0xeb41	                           jmp 0x4003062	      1602	move.c	FUNCTION_40
0x4003021	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4003025	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4003029	          0x488b00	                    mov rax, qword [rax]	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x400302c	      0xbe00000000	                              mov esi, 0	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4003031	          0x4889c7	                            mov rdi, rax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4003034	      0xe800000000	                          call 0x4003039	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4003039	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x400303b	            0x740d	                            je 0x400304a	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x400303d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4003041	    0xc7400c010000	                mov dword [rax + 0xc], 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4003048	            0xeb18	                           jmp 0x4003062	      1602	move.c	FUNCTION_40
0x400304a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x400304e	          0x488b00	                    mov rax, qword [rax]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4003051	          0x4889c7	                            mov rdi, rax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4003054	      0xe800000000	                          call 0x4003059	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4003059	            0x89c2	                            mov edx, eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x400305b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x400305f	          0x89500c	              mov dword [rax + 0xc], edx	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4003062	              0x90	                                     nop	      1602	move.c	FUNCTION_40
0x4003063	        0x4883c418	                           add rsp, 0x18	      1602	move.c	FUNCTION_40
0x4003067	              0x5b	                                 pop rbx	      1602	move.c	FUNCTION_40
0x4003068	              0x5d	                                 pop rbp	      1602	move.c	FUNCTION_40
0x4003069	              0xc3	                                     ret	      1602	move.c	FUNCTION_40
scroll_cursor_top	ELSE,4:FOR,0:functions,0:WHILE,1:CALL,10:IF,15:DO,0:SWITCH,0	237
0x4003122	              0x55	                                push rbp	      1643	move.c	FUNCTION_43
0x4003123	          0x4889e5	                            mov rbp, rsp	      1643	move.c	FUNCTION_43
0x4003126	              0x53	                                push rbx	      1643	move.c	FUNCTION_43
0x4003127	        0x4883ec68	                           sub rsp, 0x68	      1643	move.c	FUNCTION_43
0x400312b	          0x897d9c	             mov dword [rbp - 0x64], edi	      1643	move.c	FUNCTION_43
0x400312e	          0x897598	             mov dword [rbp - 0x68], esi	      1643	move.c	FUNCTION_43
0x4003131	    0x64488b042528	                mov rax, qword fs:[0x28]	      1643	move.c	FUNCTION_43
0x400313a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1643	move.c	FUNCTION_43
0x400313e	            0x31c0	                            xor eax, eax	      1643	move.c	FUNCTION_43
0x4003140	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      1644	move.c	FUNCTION_43
0x4003147	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1645	move.c	FUNCTION_43
0x400314e	    0x488b05000000	            mov rax, qword [0x04003155] 	      1650	move.c	FUNCTION_43
0x4003155	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1650	move.c	FUNCTION_43
0x4003159	        0x488945d8	             mov qword [rbp - 0x28], rax	      1650	move.c	FUNCTION_43
0x400315d	    0x488b05000000	            mov rax, qword [0x04003164] 	      1652	move.c	FUNCTION_43
0x4003164	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1652	move.c	FUNCTION_43
0x400316a	            0x4898	                                    cdqe	      1652	move.c	FUNCTION_43
0x400316c	        0x488945e0	             mov qword [rbp - 0x20], rax	      1652	move.c	FUNCTION_43
0x4003170	    0x488b05000000	            mov rax, qword [0x04003177] 	      1655	move.c	FUNCTION_43
0x4003177	          0x8945bc	             mov dword [rbp - 0x44], eax	      1655	move.c	FUNCTION_43
0x400317a	    0x8b0500000000	            mov eax, dword [0x04003180] 	      1658	move.c	FUNCTION_43	IF_1
0x4003180	            0x85c0	                           test eax, eax	      1658	move.c	FUNCTION_43	IF_1
0x4003182	            0x7e0c	                           jle 0x4003190	      1658	move.c	FUNCTION_43	IF_1
0x4003184	    0x8b0500000000	            mov eax, dword [0x0400318a] 	      1659	move.c	FUNCTION_43	IF_1
0x400318a	          0x83e801	                              sub eax, 1	      1659	move.c	FUNCTION_43	IF_1
0x400318d	          0x8945bc	             mov dword [rbp - 0x44], eax	      1659	move.c	FUNCTION_43	IF_1
0x4003190	      0xe8e8e3ffff	               call sym.validate_cheight	      1669	move.c	FUNCTION_43	CALL_1
0x4003195	    0x488b05000000	            mov rax, qword [0x0400319c] 	      1670	move.c	FUNCTION_43
0x400319c	    0x8b80cc000000	            mov eax, dword [rax + 0xcc] 	      1670	move.c	FUNCTION_43
0x40031a2	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1670	move.c	FUNCTION_43
0x40031a5	    0x488b05000000	            mov rax, qword [0x040031ac] 	      1671	move.c	FUNCTION_43	IF_2
0x40031ac	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1671	move.c	FUNCTION_43	IF_2
0x40031b0	    0x488b05000000	            mov rax, qword [0x040031b7] 	      1671	move.c	FUNCTION_43	IF_2
0x40031b7	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1671	move.c	FUNCTION_43	IF_2
0x40031bb	          0x4839c2	                            cmp rdx, rax	      1671	move.c	FUNCTION_43	IF_2
0x40031be	            0x7d06	                           jge 0x40031c6	      1671	move.c	FUNCTION_43	IF_2
0x40031c0	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1672	move.c	FUNCTION_43	IF_2
0x40031c3	          0x8945ac	             mov dword [rbp - 0x54], eax	      1672	move.c	FUNCTION_43	IF_2
0x40031c6	    0x488b05000000	            mov rax, qword [0x040031cd] 	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x40031cd	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x40031d1	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x40031d5	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x40031d9	          0x4889ce	                            mov rsi, rcx	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x40031dc	          0x4889c7	                            mov rdi, rax	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x40031df	      0xe800000000	                          call 0x40031e4	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x40031e4	            0x85c0	                           test eax, eax	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x40031e6	            0x741a	                            je 0x4003202	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x40031e8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1677	move.c	FUNCTION_43	IF_3
0x40031ec	        0x4883e801	                              sub rax, 1	      1677	move.c	FUNCTION_43	IF_3
0x40031f0	        0x488945c0	             mov qword [rbp - 0x40], rax	      1677	move.c	FUNCTION_43	IF_3
0x40031f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1678	move.c	FUNCTION_43	IF_3
0x40031f8	        0x4883c001	                              add rax, 1	      1678	move.c	FUNCTION_43	IF_3
0x40031fc	        0x488945c8	             mov qword [rbp - 0x38], rax	      1678	move.c	FUNCTION_43	IF_3
0x4003200	            0xeb26	                           jmp 0x4003228	      1678	move.c	FUNCTION_43	IF_3
0x4003202	    0x488b05000000	            mov rax, qword [0x04003209] 	      1683	move.c	FUNCTION_43	ELSE_1
0x4003209	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1683	move.c	FUNCTION_43	ELSE_1
0x400320d	        0x4883e801	                              sub rax, 1	      1683	move.c	FUNCTION_43	ELSE_1
0x4003211	        0x488945c0	             mov qword [rbp - 0x40], rax	      1683	move.c	FUNCTION_43	ELSE_1
0x4003215	    0x488b05000000	            mov rax, qword [0x0400321c] 	      1684	move.c	FUNCTION_43	ELSE_1
0x400321c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1684	move.c	FUNCTION_43	ELSE_1
0x4003220	        0x4883c001	                              add rax, 1	      1684	move.c	FUNCTION_43	ELSE_1
0x4003224	        0x488945c8	             mov qword [rbp - 0x38], rax	      1684	move.c	FUNCTION_43	ELSE_1
0x4003228	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1686	move.c	FUNCTION_43
0x400322c	        0x4883c001	                              add rax, 1	      1686	move.c	FUNCTION_43
0x4003230	        0x488945d0	             mov qword [rbp - 0x30], rax	      1686	move.c	FUNCTION_43
0x4003234	    0x488b05000000	            mov rax, qword [0x0400323b] 	      1692	move.c	FUNCTION_43	CALL_3
0x400323b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1692	move.c	FUNCTION_43	CALL_3
0x400323f	    0x488b05000000	            mov rax, qword [0x04003246] 	      1692	move.c	FUNCTION_43	CALL_3
0x4003246	          0x4889d6	                            mov rsi, rdx	      1692	move.c	FUNCTION_43	CALL_3
0x4003249	          0x4889c7	                            mov rdi, rax	      1692	move.c	FUNCTION_43	CALL_3
0x400324c	      0xe800000000	                          call 0x4003251	      1692	move.c	FUNCTION_43	CALL_3
0x4003251	           0x145b0	             add dword [rbp - 0x50], eax	      1692	move.c	FUNCTION_43	CALL_3
0x4003254	      0xe9fb000000	                           jmp 0x4003354	      1699	move.c	FUNCTION_43	WHILE_1
0x4003259	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x400325d	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4003261	      0xba00000000	                              mov edx, 0	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4003266	          0x4889ce	                            mov rsi, rcx	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4003269	          0x4889c7	                            mov rdi, rax	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x400326c	      0xe800000000	                          call 0x4003271	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4003271	            0x85c0	                           test eax, eax	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4003273	            0x7409	                            je 0x400327e	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4003275	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      1704	move.c	FUNCTION_43	WHILE_1	IF_4
0x400327c	            0xeb0f	                           jmp 0x400328d	      1704	move.c	FUNCTION_43	WHILE_1	IF_4
0x400327e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4003282	          0x4889c7	                            mov rdi, rax	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4003285	      0xe800000000	                          call 0x400328a	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x400328a	          0x8945b8	             mov dword [rbp - 0x48], eax	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x400328d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1708	move.c	FUNCTION_43	WHILE_1
0x4003290	           0x145b4	             add dword [rbp - 0x4c], eax	      1708	move.c	FUNCTION_43	WHILE_1
0x4003293	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4003296	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4003299	             0x1d0	                            add eax, edx	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x400329b	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x400329e	            0x7f41	                            jg 0x40032e1	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40032a0	    0x488b05000000	            mov rax, qword [0x040032a7] 	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40032a7	          0x488b10	                    mov rdx, qword [rax]	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40032aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40032ae	          0x4839c2	                            cmp rdx, rax	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40032b1	            0x7e2e	                           jle 0x40032e1	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40032b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40032b7	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40032bb	      0xbe00000000	                              mov esi, 0	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40032c0	          0x4889c7	                            mov rdi, rax	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40032c3	      0xe800000000	                          call 0x40032c8	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40032c8	            0x85c0	                           test eax, eax	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40032ca	            0x7406	                            je 0x40032d2	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40032cc	        0x8345b401	               add dword [rbp - 0x4c], 1	      1714	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6
0x40032d0	            0xeb0f	                           jmp 0x40032e1	      1714	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6
0x40032d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x40032d6	          0x4889c7	                            mov rdi, rax	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x40032d9	      0xe800000000	                          call 0x40032de	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x40032de	           0x145b4	             add dword [rbp - 0x4c], eax	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x40032e1	    0x488b05000000	            mov rax, qword [0x040032e8] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x40032e8	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x40032ee	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x40032f1	            0x7c70	                            jl 0x4003363	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x40032f3	    0x488b05000000	            mov rax, qword [0x040032fa] 	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x40032fa	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x40032fe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x4003302	          0x4839c2	                            cmp rdx, rax	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x4003305	            0x7e06	                           jle 0x400330d	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x4003307	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1722	move.c	FUNCTION_43	WHILE_1	IF_8
0x400330a	           0x145ac	             add dword [rbp - 0x54], eax	      1722	move.c	FUNCTION_43	WHILE_1	IF_8
0x400330d	    0x488b05000000	            mov rax, qword [0x04003314] 	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x4003314	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x4003318	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x400331c	            0x7e08	                           jle 0x4003326	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x400331e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x4003321	          0x3b459c	             cmp eax, dword [rbp - 0x64]	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x4003324	            0x7e08	                           jle 0x400332e	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x4003326	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1728	move.c	FUNCTION_43	WHILE_1	IF_9
0x4003329	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      1728	move.c	FUNCTION_43	WHILE_1	IF_9
0x400332c	            0x7d38	                           jge 0x4003366	      1728	move.c	FUNCTION_43	WHILE_1	IF_9
0x400332e	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1731	move.c	FUNCTION_43	WHILE_1
0x4003331	           0x145b0	             add dword [rbp - 0x50], eax	      1731	move.c	FUNCTION_43	WHILE_1
0x4003334	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1732	move.c	FUNCTION_43	WHILE_1
0x4003338	        0x488945d0	             mov qword [rbp - 0x30], rax	      1732	move.c	FUNCTION_43	WHILE_1
0x400333c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1733	move.c	FUNCTION_43	WHILE_1
0x4003340	        0x4883e801	                              sub rax, 1	      1733	move.c	FUNCTION_43	WHILE_1
0x4003344	        0x488945c0	             mov qword [rbp - 0x40], rax	      1733	move.c	FUNCTION_43	WHILE_1
0x4003348	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1734	move.c	FUNCTION_43	WHILE_1
0x400334c	        0x4883c001	                              add rax, 1	      1734	move.c	FUNCTION_43	WHILE_1
0x4003350	        0x488945c8	             mov qword [rbp - 0x38], rax	      1734	move.c	FUNCTION_43	WHILE_1
0x4003354	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1699	move.c	FUNCTION_43	WHILE_1
0x4003358	          0x4885c0	                           test rax, rax	      1699	move.c	FUNCTION_43	WHILE_1
0x400335b	     0xf8ff8feffff	                            jg 0x4003259	      1699	move.c	FUNCTION_43	WHILE_1
0x4003361	            0xeb04	                           jmp 0x4003367	      1699	move.c	FUNCTION_43	WHILE_1
0x4003363	              0x90	                                     nop	      1720	move.c	FUNCTION_43	WHILE_1	IF_7
0x4003364	            0xeb01	                           jmp 0x4003367	      1720	move.c	FUNCTION_43	WHILE_1	IF_7
0x4003366	              0x90	                                     nop	      1729	move.c	FUNCTION_43	WHILE_1	IF_9
0x4003367	    0x488b05000000	            mov rax, qword [0x0400336e] 	      1742	move.c	FUNCTION_43	IF_10
0x400336e	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1742	move.c	FUNCTION_43	IF_10
0x4003374	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      1742	move.c	FUNCTION_43	IF_10
0x4003377	            0x7d0f	                           jge 0x4003388	      1742	move.c	FUNCTION_43	IF_10
0x4003379	      0xbf00000000	                              mov edi, 0	      1743	move.c	FUNCTION_43	CALL_8
0x400337e	      0xe800000000	                          call 0x4003383	      1743	move.c	FUNCTION_43	CALL_8
0x4003383	      0xe954010000	                           jmp 0x40034dc	      1773	move.c	FUNCTION_43
0x4003388	    0x488b05000000	            mov rax, qword [0x0400338f] 	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x400338f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x4003393	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x4003397	            0x7f06	                            jg 0x400339f	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x4003399	        0x837d9800	               cmp dword [rbp - 0x68], 0	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x400339d	            0x740f	                            je 0x40033ae	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x400339f	    0x488b05000000	            mov rax, qword [0x040033a6] 	      1751	move.c	FUNCTION_43	ELSE_4	IF_11
0x40033a6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1751	move.c	FUNCTION_43	ELSE_4	IF_11
0x40033aa	        0x48895078	             mov qword [rax + 0x78], rdx	      1751	move.c	FUNCTION_43	ELSE_4	IF_11
0x40033ae	    0x488b05000000	            mov rax, qword [0x040033b5] 	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40033b5	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40033b9	    0x488b05000000	            mov rax, qword [0x040033c0] 	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40033c0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40033c4	          0x4839c2	                            cmp rdx, rax	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40033c7	            0x7e16	                           jle 0x40033df	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40033c9	    0x488b05000000	            mov rax, qword [0x040033d0] 	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x40033d0	    0x488b15000000	            mov rdx, qword [0x040033d7] 	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x40033d7	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x40033db	        0x48895078	             mov qword [rax + 0x78], rdx	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x40033df	    0x488b1d000000	            mov rbx, qword [0x040033e6] 	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x40033e6	    0x488b05000000	            mov rax, qword [0x040033ed] 	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x40033ed	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x40033f1	    0x488b05000000	            mov rax, qword [0x040033f8] 	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x40033f8	          0x4889d6	                            mov rsi, rdx	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x40033fb	          0x4889c7	                            mov rdi, rax	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x40033fe	      0xe800000000	                          call 0x4003403	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4003403	    0x898384000000	             mov dword [rbx + 0x84], eax	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4003409	    0x488b05000000	            mov rax, qword [0x04003410] 	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4003410	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4003416	            0x85c0	                           test eax, eax	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4003418	            0x7e4e	                           jle 0x4003468	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x400341a	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x400341d	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4003420	            0x7e46	                           jle 0x4003468	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4003422	    0x488b05000000	            mov rax, qword [0x04003429] 	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4003429	    0x488b15000000	            mov rdx, qword [0x04003430] 	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4003430	    0x8b8a84000000	            mov ecx, dword [rdx + 0x84] 	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4003436	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4003439	          0x2b55bc	             sub edx, dword [rbp - 0x44]	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x400343c	            0x29d1	                            sub ecx, edx	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x400343e	            0x89ca	                            mov edx, ecx	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4003440	    0x899084000000	             mov dword [rax + 0x84], edx	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4003446	    0x488b05000000	            mov rax, qword [0x0400344d] 	      1759	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x400344d	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1759	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x4003453	            0x85c0	                           test eax, eax	      1759	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x4003455	            0x7911	                           jns 0x4003468	      1759	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x4003457	    0x488b05000000	            mov rax, qword [0x0400345e] 	      1760	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x400345e	    0xc78084000000	               mov dword [rax + 0x84], 0	      1760	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x4003468	    0x488b05000000	            mov rax, qword [0x0400346f] 	      1762	move.c	FUNCTION_43	ELSE_4	CALL_10
0x400346f	      0xbe00000000	                              mov esi, 0	      1762	move.c	FUNCTION_43	ELSE_4	CALL_10
0x4003474	          0x4889c7	                            mov rdi, rax	      1762	move.c	FUNCTION_43	ELSE_4	CALL_10
0x4003477	      0xe800000000	                          call 0x400347c	      1762	move.c	FUNCTION_43	ELSE_4	CALL_10
0x400347c	    0x488b05000000	            mov rax, qword [0x04003483] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x4003483	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x4003487	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x400348b	            0x7515	                           jne 0x40034a2	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x400348d	    0x488b05000000	            mov rax, qword [0x04003494] 	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x4003494	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x400349a	            0x4898	                                    cdqe	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x400349c	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x40034a0	            0x741d	                            je 0x40034bf	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x40034a2	    0x488b05000000	            mov rax, qword [0x040034a9] 	      1769	move.c	FUNCTION_43	ELSE_4	IF_15
0x40034a9	    0x488b15000000	            mov rdx, qword [0x040034b0] 	      1769	move.c	FUNCTION_43	ELSE_4	IF_15
0x40034b0	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1769	move.c	FUNCTION_43	ELSE_4	IF_15
0x40034b6	          0x83e28e	                     and edx, 0xffffff8e	      1769	move.c	FUNCTION_43	ELSE_4	IF_15
0x40034b9	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1769	move.c	FUNCTION_43	ELSE_4	IF_15
0x40034bf	    0x488b05000000	            mov rax, qword [0x040034c6] 	      1771	move.c	FUNCTION_43	ELSE_4
0x40034c6	    0x488b15000000	            mov rdx, qword [0x040034cd] 	      1771	move.c	FUNCTION_43	ELSE_4
0x40034cd	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1771	move.c	FUNCTION_43	ELSE_4
0x40034d3	          0x80ca80	                             or dl, 0x80	      1771	move.c	FUNCTION_43	ELSE_4
0x40034d6	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1771	move.c	FUNCTION_43	ELSE_4
0x40034dc	              0x90	                                     nop	      1773	move.c	FUNCTION_43
0x40034dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1773	move.c	FUNCTION_43
0x40034e1	    0x644833042528	                xor rax, qword fs:[0x28]	      1773	move.c	FUNCTION_43
0x40034ea	            0x7405	                            je 0x40034f1	      1773	move.c	FUNCTION_43
0x40034ec	      0xe800000000	                          call 0x40034f1	      1773	move.c	FUNCTION_43
0x40034f1	        0x4883c468	                           add rsp, 0x68	      1773	move.c	FUNCTION_43
0x40034f5	              0x5b	                                 pop rbx	      1773	move.c	FUNCTION_43
0x40034f6	              0x5d	                                 pop rbp	      1773	move.c	FUNCTION_43
0x40034f7	              0xc3	                                     ret	      1773	move.c	FUNCTION_43
validate_cline_row	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,3:IF,1:DO,0:SWITCH,0	17
0x4000ec9	              0x55	                                push rbp	       645	move.c	FUNCTION_22
0x4000eca	          0x4889e5	                            mov rbp, rsp	       645	move.c	FUNCTION_22
0x4000ecd	      0xe800000000	                          call 0x4000ed2	       649	move.c	FUNCTION_22	CALL_1
0x4000ed2	    0x488b05000000	            mov rax, qword [0x04000ed9] 	       650	move.c	FUNCTION_22	CALL_2
0x4000ed9	          0x4889c7	                            mov rdi, rax	       650	move.c	FUNCTION_22	CALL_2
0x4000edc	      0xe800000000	                          call 0x4000ee1	       650	move.c	FUNCTION_22	CALL_2
0x4000ee1	    0x488b05000000	            mov rax, qword [0x04000ee8] 	       651	move.c	FUNCTION_22	IF_1
0x4000ee8	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       651	move.c	FUNCTION_22	IF_1
0x4000eee	          0x83e010	                           and eax, 0x10	       651	move.c	FUNCTION_22	IF_1
0x4000ef1	            0x85c0	                           test eax, eax	       651	move.c	FUNCTION_22	IF_1
0x4000ef3	            0x750f	                           jne 0x4000f04	       651	move.c	FUNCTION_22	IF_1
0x4000ef5	    0x488b05000000	            mov rax, qword [0x04000efc] 	       652	move.c	FUNCTION_22	CALL_3
0x4000efc	          0x4889c7	                            mov rdi, rax	       652	move.c	FUNCTION_22	CALL_3
0x4000eff	      0xe803000000	                      call sym.curs_rows	       652	move.c	FUNCTION_22	CALL_3
0x4000f04	              0x90	                                     nop	       653	move.c	FUNCTION_22
0x4000f05	              0x5d	                                 pop rbp	       653	move.c	FUNCTION_22
0x4000f06	              0xc3	                                     ret	       653	move.c	FUNCTION_22
changed_line_abv_curs	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,0:IF,0:DO,0:SWITCH,0	10
0x4000d89	              0x55	                                push rbp	       572	move.c	FUNCTION_14
0x4000d8a	          0x4889e5	                            mov rbp, rsp	       572	move.c	FUNCTION_14
0x4000d8d	    0x488b05000000	            mov rax, qword [0x04000d94] 	       573	move.c	FUNCTION_14
0x4000d94	    0x488b15000000	            mov rdx, qword [0x04000d9b] 	       573	move.c	FUNCTION_14
0x4000d9b	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       573	move.c	FUNCTION_14
0x4000da1	          0x80e260	                            and dl, 0x60	       573	move.c	FUNCTION_14
0x4000da4	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       573	move.c	FUNCTION_14
0x4000daa	              0x90	                                     nop	       575	move.c	FUNCTION_14
0x4000dab	              0x5d	                                 pop rbp	       575	move.c	FUNCTION_14
0x4000dac	              0xc3	                                     ret	       575	move.c	FUNCTION_14
set_topline	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,2:IF,0:DO,0:SWITCH,0	41
0x4000c98	              0x55	                                push rbp	       529	move.c	FUNCTION_11
0x4000c99	          0x4889e5	                            mov rbp, rsp	       529	move.c	FUNCTION_11
0x4000c9c	        0x4883ec10	                           sub rsp, 0x10	       529	move.c	FUNCTION_11
0x4000ca0	        0x48897df8	                mov qword [rbp - 8], rdi	       529	move.c	FUNCTION_11
0x4000ca4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       529	move.c	FUNCTION_11
0x4000ca8	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       532	move.c	FUNCTION_11	CALL_1
0x4000cac	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       532	move.c	FUNCTION_11	CALL_1
0x4000cb0	        0x488b45f8	                mov rax, qword [rbp - 8]	       532	move.c	FUNCTION_11	CALL_1
0x4000cb4	    0x41b900000000	                              mov r9d, 0	       532	move.c	FUNCTION_11	CALL_1
0x4000cba	    0x41b801000000	                              mov r8d, 1	       532	move.c	FUNCTION_11	CALL_1
0x4000cc0	      0xb900000000	                              mov ecx, 0	       532	move.c	FUNCTION_11	CALL_1
0x4000cc5	          0x4889c7	                            mov rdi, rax	       532	move.c	FUNCTION_11	CALL_1
0x4000cc8	      0xe800000000	                          call 0x4000ccd	       532	move.c	FUNCTION_11	CALL_1
0x4000ccd	        0x488b45f8	                mov rax, qword [rbp - 8]	       535	move.c	FUNCTION_11
0x4000cd1	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	       535	move.c	FUNCTION_11
0x4000cd8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       535	move.c	FUNCTION_11
0x4000cdc	        0x488b45f8	                mov rax, qword [rbp - 8]	       535	move.c	FUNCTION_11
0x4000ce0	        0x488b4078	            mov rax, qword [rax + 0x78] 	       535	move.c	FUNCTION_11
0x4000ce4	          0x4829c1	                            sub rcx, rax	       535	move.c	FUNCTION_11
0x4000ce7	          0x4889c8	                            mov rax, rcx	       535	move.c	FUNCTION_11
0x4000cea	          0x4801c2	                            add rdx, rax	       535	move.c	FUNCTION_11
0x4000ced	        0x488b45f8	                mov rax, qword [rbp - 8]	       535	move.c	FUNCTION_11
0x4000cf1	    0x488990e80000	             mov qword [rax + 0xe8], rdx	       535	move.c	FUNCTION_11
0x4000cf8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       536	move.c	FUNCTION_11
0x4000cfc	        0x488b45f8	                mov rax, qword [rbp - 8]	       536	move.c	FUNCTION_11
0x4000d00	        0x48895078	             mov qword [rax + 0x78], rdx	       536	move.c	FUNCTION_11
0x4000d04	        0x488b45f8	                mov rax, qword [rbp - 8]	       537	move.c	FUNCTION_11
0x4000d08	    0xc68080000000	                mov byte [rax + 0x80], 1	       537	move.c	FUNCTION_11
0x4000d0f	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	move.c	FUNCTION_11
0x4000d13	    0xc78084000000	               mov dword [rax + 0x84], 0	       539	move.c	FUNCTION_11
0x4000d1d	        0x488b45f8	                mov rax, qword [rbp - 8]	       541	move.c	FUNCTION_11
0x4000d21	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       541	move.c	FUNCTION_11
0x4000d27	            0x244e	                            and al, 0x4e	       541	move.c	FUNCTION_11
0x4000d29	            0x89c2	                            mov edx, eax	       541	move.c	FUNCTION_11
0x4000d2b	        0x488b45f8	                mov rax, qword [rbp - 8]	       541	move.c	FUNCTION_11
0x4000d2f	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       541	move.c	FUNCTION_11
0x4000d35	      0xbf0a000000	                            mov edi, 0xa	       543	move.c	FUNCTION_11	CALL_2
0x4000d3a	      0xe800000000	                          call 0x4000d3f	       543	move.c	FUNCTION_11	CALL_2
0x4000d3f	              0x90	                                     nop	       544	move.c	FUNCTION_11
0x4000d40	              0xc9	                                   leave	       544	move.c	FUNCTION_11
0x4000d41	              0xc3	                                     ret	       544	move.c	FUNCTION_11
invalidate_botline	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,0:IF,0:DO,0:SWITCH,0	10
0x4000dfa	              0x55	                                push rbp	       599	move.c	FUNCTION_17
0x4000dfb	          0x4889e5	                            mov rbp, rsp	       599	move.c	FUNCTION_17
0x4000dfe	    0x488b05000000	            mov rax, qword [0x04000e05] 	       600	move.c	FUNCTION_17
0x4000e05	    0x488b15000000	            mov rdx, qword [0x04000e0c] 	       600	move.c	FUNCTION_17
0x4000e0c	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       600	move.c	FUNCTION_17
0x4000e12	          0x83e29f	                     and edx, 0xffffff9f	       600	move.c	FUNCTION_17
0x4000e15	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       600	move.c	FUNCTION_17
0x4000e1b	              0x90	                                     nop	       601	move.c	FUNCTION_17
0x4000e1c	              0x5d	                                 pop rbp	       601	move.c	FUNCTION_17
0x4000e1d	              0xc3	                                     ret	       601	move.c	FUNCTION_17
validate_virtcol_win	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,4:IF,2:DO,0:SWITCH,0	42
0x40014e3	              0x55	                                push rbp	       796	move.c	FUNCTION_25
0x40014e4	          0x4889e5	                            mov rbp, rsp	       796	move.c	FUNCTION_25
0x40014e7	        0x4883ec10	                           sub rsp, 0x10	       796	move.c	FUNCTION_25
0x40014eb	        0x48897df8	                mov qword [rbp - 8], rdi	       796	move.c	FUNCTION_25
0x40014ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       797	move.c	FUNCTION_25	CALL_1
0x40014f3	          0x4889c7	                            mov rdi, rax	       797	move.c	FUNCTION_25	CALL_1
0x40014f6	      0xe800000000	                          call 0x40014fb	       797	move.c	FUNCTION_25	CALL_1
0x40014fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	move.c	FUNCTION_25	IF_1
0x40014ff	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       798	move.c	FUNCTION_25	IF_1
0x4001505	          0x83e004	                              and eax, 4	       798	move.c	FUNCTION_25	IF_1
0x4001508	            0x85c0	                           test eax, eax	       798	move.c	FUNCTION_25	IF_1
0x400150a	            0x756e	                           jne 0x400157a	       798	move.c	FUNCTION_25	IF_1
0x400150c	        0x488b45f8	                mov rax, qword [rbp - 8]	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4001510	    0x488d90d80000	                   lea rdx, [rax + 0xd8]	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4001517	        0x488b45f8	                mov rax, qword [rbp - 8]	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x400151b	        0x488d7038	                   lea rsi, [rax + 0x38]	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x400151f	        0x488b45f8	                mov rax, qword [rbp - 8]	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4001523	    0x41b800000000	                              mov r8d, 0	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4001529	          0x4889d1	                            mov rcx, rdx	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x400152c	      0xba00000000	                              mov edx, 0	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4001531	          0x4889c7	                            mov rdi, rax	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4001534	      0xe800000000	                          call 0x4001539	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4001539	        0x488b45f8	                mov rax, qword [rbp - 8]	       801	move.c	FUNCTION_25	IF_1
0x400153d	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       801	move.c	FUNCTION_25	IF_1
0x4001543	          0x83c804	                               or eax, 4	       801	move.c	FUNCTION_25	IF_1
0x4001546	            0x89c2	                            mov edx, eax	       801	move.c	FUNCTION_25	IF_1
0x4001548	        0x488b45f8	                mov rax, qword [rbp - 8]	       801	move.c	FUNCTION_25	IF_1
0x400154c	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       801	move.c	FUNCTION_25	IF_1
0x4001552	        0x488b45f8	                mov rax, qword [rbp - 8]	       803	move.c	FUNCTION_25	IF_1	IF_2
0x4001556	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	       803	move.c	FUNCTION_25	IF_1	IF_2
0x400155c	            0x85c0	                           test eax, eax	       803	move.c	FUNCTION_25	IF_1	IF_2
0x400155e	            0x741a	                            je 0x400157a	       803	move.c	FUNCTION_25	IF_1	IF_2
0x4001560	      0xe800000000	                          call 0x4001565	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4001565	            0x85c0	                           test eax, eax	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4001567	            0x7511	                           jne 0x400157a	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4001569	        0x488b45f8	                mov rax, qword [rbp - 8]	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x400156d	      0xbe23000000	                           mov esi, 0x23	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x4001572	          0x4889c7	                            mov rdi, rax	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x4001575	      0xe800000000	                          call 0x400157a	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x400157a	              0x90	                                     nop	       811	move.c	FUNCTION_25
0x400157b	              0xc9	                                   leave	       811	move.c	FUNCTION_25
0x400157c	              0xc3	                                     ret	       811	move.c	FUNCTION_25
changed_cline_bef_curs_win	ELSE,0:FOR,0:functions,0:WHILE,0:CALL,0:IF,0:DO,0:SWITCH,0	12
0x4000d66	              0x55	                                push rbp	       560	move.c	FUNCTION_13
0x4000d67	          0x4889e5	                            mov rbp, rsp	       560	move.c	FUNCTION_13
0x4000d6a	        0x48897df8	                mov qword [rbp - 8], rdi	       560	move.c	FUNCTION_13
0x4000d6e	        0x488b45f8	                mov rax, qword [rbp - 8]	       561	move.c	FUNCTION_13
0x4000d72	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       561	move.c	FUNCTION_13
0x4000d78	            0x2470	                            and al, 0x70	       561	move.c	FUNCTION_13
0x4000d7a	            0x89c2	                            mov edx, eax	       561	move.c	FUNCTION_13
0x4000d7c	        0x488b45f8	                mov rax, qword [rbp - 8]	       561	move.c	FUNCTION_13
0x4000d80	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       561	move.c	FUNCTION_13
0x4000d86	              0x90	                                     nop	       563	move.c	FUNCTION_13
0x4000d87	              0x5d	                                 pop rbp	       563	move.c	FUNCTION_13
0x4000d88	              0xc3	                                     ret	       563	move.c	FUNCTION_13
