block_prep	CALL,5:ELSE,7:WHILE,2:FOR,0:functions,0:IF,14:SWITCH,0:DO,0	223
0x4000080	            0x4157	                                push r15	      5364	ops.c	FUNCTION_65
0x4000082	            0x4156	                                push r14	      5364	ops.c	FUNCTION_65
0x4000084	            0x4155	                                push r13	      5364	ops.c	FUNCTION_65
0x4000086	            0x4154	                                push r12	      5364	ops.c	FUNCTION_65
0x4000088	              0x55	                                push rbp	      5364	ops.c	FUNCTION_65
0x4000089	              0x53	                                push rbx	      5364	ops.c	FUNCTION_65
0x400008a	        0x4883ec28	                           sub rsp, 0x28	      5364	ops.c	FUNCTION_65
0x400008e	          0x4989fe	                            mov r14, rdi	      5364	ops.c	FUNCTION_65
0x4000091	          0x4889f3	                            mov rbx, rsi	      5364	ops.c	FUNCTION_65
0x4000094	        0x894c240c	              mov dword [rsp + 0xc], ecx	      5364	ops.c	FUNCTION_65
0x4000098	    0x64488b042528	                mov rax, qword fs:[0x28]	      5364	ops.c	FUNCTION_65
0x40000a1	      0x4889442418	             mov qword [rsp + 0x18], rax	      5364	ops.c	FUNCTION_65
0x40000a6	            0x31c0	                            xor eax, eax	      5364	ops.c	FUNCTION_65
0x40000a8	    0xc70600000000	                      mov dword [rsi], 0	      5372	ops.c	FUNCTION_65
0x40000ae	    0xc74604000000	                  mov dword [rsi + 4], 0	      5373	ops.c	FUNCTION_65
0x40000b5	    0xc74608000000	                  mov dword [rsi + 8], 0	      5374	ops.c	FUNCTION_65
0x40000bc	    0xc7461c000000	               mov dword [rsi + 0x1c], 0	      5375	ops.c	FUNCTION_65
0x40000c3	    0xc74620000000	               mov dword [rsi + 0x20], 0	      5376	ops.c	FUNCTION_65
0x40000ca	    0xc74624000000	               mov dword [rsi + 0x24], 0	      5378	ops.c	FUNCTION_65
0x40000d1	    0xc7462c000000	               mov dword [rsi + 0x2c], 0	      5379	ops.c	FUNCTION_65
0x40000d8	    0xc74630000000	               mov dword [rsi + 0x30], 0	      5380	ops.c	FUNCTION_65
0x40000df	    0xc74634000000	               mov dword [rsi + 0x34], 0	      5381	ops.c	FUNCTION_65
0x40000e6	    0xc74638000000	               mov dword [rsi + 0x38], 0	      5382	ops.c	FUNCTION_65
0x40000ed	    0xc7463c000000	               mov dword [rsi + 0x3c], 0	      5384	ops.c	FUNCTION_65
0x40000f4	          0x4889d7	                            mov rdi, rdx	      5386	ops.c	FUNCTION_65	CALL_1
0x40000f7	      0xe800000000	                          call 0x40000fc	      5386	ops.c	FUNCTION_65	CALL_1
0x40000fc	          0x4989c7	                            mov r15, rax	      5386	ops.c	FUNCTION_65	CALL_1
0x40000ff	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000102	        0x413b5664	            cmp edx, dword [r14 + 0x64] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000106	            0x7d71	                           jge 0x4000179	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000108	          0x803800	                       cmp byte [rax], 0	      5389	ops.c	FUNCTION_65	WHILE_1
0x400010b	            0x747a	                            je 0x4000187	      5389	ops.c	FUNCTION_65	WHILE_1
0x400010d	          0x4989c4	                            mov r12, rax	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000110	            0xeb03	                           jmp 0x4000115	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000112	          0x4989ec	                            mov r12, rbp	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000115	          0x4c89e6	                            mov rsi, r12	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x4000118	          0x4c89ff	                            mov rdi, r15	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x400011b	      0xe800000000	                          call 0x4000120	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x4000120	          0x4189c5	                           mov r13d, eax	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x4000123	           0x1431c	             add dword [rbx + 0x1c], eax	      5393	ops.c	FUNCTION_65	WHILE_1
0x4000126	      0x410fb60424	                   movzx eax, byte [r12]	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400012b	            0x3c20	                            cmp al, 0x20	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400012d	            0x7404	                            je 0x4000133	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400012f	            0x3c09	                               cmp al, 9	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x4000131	            0x750a	                           jne 0x400013d	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x4000133	        0x44016b30	            add dword [rbx + 0x30], r13d	      5397	ops.c	FUNCTION_65	WHILE_1	IF_1
0x4000137	        0x83433401	               add dword [rbx + 0x34], 1	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400013b	            0xeb0e	                           jmp 0x400014b	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400013d	    0xc74330000000	               mov dword [rbx + 0x30], 0	      5402	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0x4000144	    0xc74334000000	               mov dword [rbx + 0x34], 0	      5403	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0x400014b	      0xb801000000	                              mov eax, 1	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000150	    0x833d00000000	               cmp dword [0x04000157], 0	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000157	            0x7409	                            je 0x4000162	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000159	          0x4c89e7	                            mov rdi, r12	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400015c	    0xff1500000000	                 call qword [0x04000162]	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000162	            0x4898	                                    cdqe	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000164	        0x498d2c04	                    lea rbp, [r12 + rax]	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000168	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x400016b	        0x413b5664	            cmp edx, dword [r14 + 0x64] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x400016f	            0x7d22	                           jge 0x4000193	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000171	        0x807d0000	                       cmp byte [rbp], 0	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000175	            0x759b	                           jne 0x4000112	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000177	            0xeb1a	                           jmp 0x4000193	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000179	          0x4989c4	                            mov r12, rax	      5388	ops.c	FUNCTION_65
0x400017c	          0x4889c5	                            mov rbp, rax	      5387	ops.c	FUNCTION_65
0x400017f	    0x41bd00000000	                             mov r13d, 0	      5365	ops.c	FUNCTION_65
0x4000185	            0xeb0c	                           jmp 0x4000193	      5365	ops.c	FUNCTION_65
0x4000187	          0x4989c4	                            mov r12, rax	      5388	ops.c	FUNCTION_65
0x400018a	          0x4889c5	                            mov rbp, rax	      5387	ops.c	FUNCTION_65
0x400018d	    0x41bd00000000	                             mov r13d, 0	      5365	ops.c	FUNCTION_65
0x4000193	        0x44896b3c	            mov dword [rbx + 0x3c], r13d	      5409	ops.c	FUNCTION_65
0x4000197	        0x418b4664	            mov eax, dword [r14 + 0x64] 	      5410	ops.c	FUNCTION_65	IF_2
0x400019b	            0x39d0	                            cmp eax, edx	      5410	ops.c	FUNCTION_65	IF_2
0x400019d	            0x7e2e	                           jle 0x40001cd	      5410	ops.c	FUNCTION_65	IF_2
0x400019f	          0x895320	             mov dword [rbx + 0x20], edx	      5412	ops.c	FUNCTION_65	IF_2
0x40001a2	    0xc74324010000	               mov dword [rbx + 0x24], 1	      5414	ops.c	FUNCTION_65	IF_2
0x40001a9	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40001ae	            0x740a	                            je 0x40001ba	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40001b0	        0x41833e12	                   cmp dword [r14], 0x12	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40001b4	     0xf8577010000	                           jne 0x4000331	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40001ba	        0x418b4668	            mov eax, dword [r14 + 0x68] 	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40001be	        0x412b4664	             sub eax, dword [r14 + 0x64]	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40001c2	          0x83c001	                              add eax, 1	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40001c5	          0x894304	                mov dword [rbx + 4], eax	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40001c8	      0xe964010000	                           jmp 0x4000331	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40001cd	            0x89d1	                            mov ecx, edx	      5423	ops.c	FUNCTION_65	ELSE_2
0x40001cf	            0x29c1	                            sub ecx, eax	      5423	ops.c	FUNCTION_65	ELSE_2
0x40001d1	            0x89c8	                            mov eax, ecx	      5423	ops.c	FUNCTION_65	ELSE_2
0x40001d3	            0x890b	                    mov dword [rbx], ecx	      5423	ops.c	FUNCTION_65	ELSE_2
0x40001d5	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x40001da	     0xf8470010000	                            je 0x4000350	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x40001e0	            0x85c9	                           test ecx, ecx	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x40001e2	     0xf8468010000	                            je 0x4000350	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x40001e8	          0x4489e9	                           mov ecx, r13d	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x40001eb	            0x29c1	                            sub ecx, eax	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x40001ed	            0x890b	                    mov dword [rbx], ecx	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x40001ef	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      5426	ops.c	FUNCTION_65	ELSE_2
0x40001f4	          0x895320	             mov dword [rbx + 0x20], edx	      5427	ops.c	FUNCTION_65	ELSE_2
0x40001f7	        0x41395668	            cmp dword [r14 + 0x68], edx 	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x40001fb	            0x7c13	                            jl 0x4000210	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x40001fd	        0x48892c24	                    mov qword [rsp], rbp	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x4000201	        0x807d0000	                       cmp byte [rbp], 0	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x4000205	     0xf8581000000	                           jne 0x400028c	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400020b	      0xe96d010000	                           jmp 0x400037d	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x4000210	    0xc7432c010000	               mov dword [rbx + 0x2c], 1	      5431	ops.c	FUNCTION_65	ELSE_2	IF_5
0x4000217	          0x418b06	                    mov eax, dword [r14]	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400021a	          0x83f811	                           cmp eax, 0x11	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400021d	            0x750d	                           jne 0x400022c	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400021f	          0x4489e8	                           mov eax, r13d	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000222	            0x2b03	                    sub eax, dword [rbx]	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000224	          0x894304	                mov dword [rbx + 4], eax	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000227	      0xe9e8000000	                           jmp 0x4000314	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400022c	          0x83f812	                           cmp eax, 0x12	      5435	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400022f	            0x751d	                           jne 0x400024e	      5435	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000231	        0x418b4668	            mov eax, dword [r14 + 0x68] 	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000235	        0x412b4664	             sub eax, dword [r14 + 0x64]	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000239	            0x8b13	                    mov edx, dword [rbx]	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400023b	        0x8d441001	                lea eax, [rax + rdx + 1]	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400023f	            0x8903	                    mov dword [rbx], eax	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000241	          0x4489e9	                           mov ecx, r13d	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000244	            0x29c1	                            sub ecx, eax	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000246	          0x894b04	                mov dword [rbx + 4], ecx	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000249	      0xe9c6000000	                           jmp 0x4000314	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400024e	        0x418b4668	            mov eax, dword [r14 + 0x68] 	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x4000252	        0x412b4664	             sub eax, dword [r14 + 0x64]	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x4000256	          0x83c001	                              add eax, 1	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x4000259	            0x8903	                    mov dword [rbx], eax	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400025b	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000260	     0xf8427010000	                            je 0x400038d	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000266	        0x41833e04	                      cmp dword [r14], 4	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400026a	     0xf8423010000	                            je 0x4000393	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000270	            0x89d0	                            mov eax, edx	      5448	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000272	        0x412b4664	             sub eax, dword [r14 + 0x64]	      5448	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000276	          0x4489e9	                           mov ecx, r13d	      5448	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000279	            0x29c1	                            sub ecx, eax	      5448	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400027b	            0x890b	                    mov dword [rbx], ecx	      5448	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400027d	        0x412b5668	             sub edx, dword [r14 + 0x68]	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000281	          0x8d42ff	                      lea eax, [rdx - 1]	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000284	          0x894304	                mov dword [rbx + 4], eax	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000287	      0xe907010000	                           jmp 0x4000393	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400028c	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x4000291	          0x4c89ff	                            mov rdi, r15	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x4000294	      0xe800000000	                          call 0x4000299	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x4000299	          0x4189c5	                           mov r13d, eax	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x400029c	            0x89c2	                            mov edx, eax	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400029e	           0x35320	             add edx, dword [rbx + 0x20]	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40002a1	          0x895320	             mov dword [rbx + 0x20], edx	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40002a4	        0x418b4668	            mov eax, dword [r14 + 0x68] 	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40002a8	            0x39d0	                            cmp eax, edx	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40002aa	     0xf8cb7000000	                            jl 0x4000367	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40002b0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40002b5	        0x48890424	                    mov qword [rsp], rax	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40002b9	          0x803800	                       cmp byte [rax], 0	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40002bc	            0x75ce	                           jne 0x400028c	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40002be	      0xe9ba000000	                           jmp 0x400037d	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40002c3	          0x418b06	                    mov eax, dword [r14]	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x40002c6	          0x83e0fd	                     and eax, 0xfffffffd	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x40002c9	          0x83f810	                           cmp eax, 0x10	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x40002cc	            0x7546	                           jne 0x4000314	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x40002ce	    0xc74324010000	               mov dword [rbx + 0x24], 1	      5470	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x40002d5	        0x41833e12	                   cmp dword [r14], 0x12	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x40002d9	            0x7409	                            je 0x40002e4	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x40002db	    0x833d00000000	               cmp dword [0x040002e2], 0	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x40002e2	            0x740f	                            je 0x40002f3	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x40002e4	        0x418b4668	            mov eax, dword [r14 + 0x68] 	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x40002e8	            0x29d0	                            sub eax, edx	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x40002ea	        0x41034614	             add eax, dword [r14 + 0x14]	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x40002ee	          0x894304	                mov dword [rbx + 4], eax	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x40002f1	            0xeb21	                           jmp 0x4000314	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x40002f3	    0xc74304000000	                  mov dword [rbx + 4], 0	      5480	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	ELSE_6
0x40002fa	            0xeb18	                           jmp 0x4000314	      5480	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	ELSE_6
0x40002fc	          0x4489e9	                           mov ecx, r13d	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40002ff	            0x29c1	                            sub ecx, eax	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x4000301	          0x894b04	                mov dword [rbx + 4], ecx	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x4000304	      0x48396c2410	            cmp qword [rsp + 0x10], rbp 	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x4000309	            0x7409	                            je 0x4000314	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x400030b	        0x488b0424	                    mov rax, qword [rsp]	      5489	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x400030f	      0x4889442410	             mov qword [rsp + 0x10], rax	      5489	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x4000314	        0x44896b38	            mov dword [rbx + 0x38], r13d	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000318	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400031d	            0x7407	                            je 0x4000326	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400031f	          0x833b00	                      cmp dword [rbx], 0	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x4000322	        0x490f45ec	                         cmovne rbp, r12	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x4000326	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5498	ops.c	FUNCTION_65	ELSE_2
0x400032b	          0x4829e8	                            sub rax, rbp	      5498	ops.c	FUNCTION_65	ELSE_2
0x400032e	          0x894308	                mov dword [rbx + 8], eax	      5498	ops.c	FUNCTION_65	ELSE_2
0x4000331	          0x4889e8	                            mov rax, rbp	      5500	ops.c	FUNCTION_65
0x4000334	          0x4c29f8	                            sub rax, r15	      5500	ops.c	FUNCTION_65
0x4000337	          0x894318	             mov dword [rbx + 0x18], eax	      5500	ops.c	FUNCTION_65
0x400033a	        0x48896b10	             mov qword [rbx + 0x10], rbp	      5501	ops.c	FUNCTION_65
0x400033e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5502	ops.c	FUNCTION_65
0x4000343	    0x644833042528	                xor rax, qword fs:[0x28]	      5502	ops.c	FUNCTION_65
0x400034c	            0x7450	                            je 0x400039e	      5502	ops.c	FUNCTION_65
0x400034e	            0xeb49	                           jmp 0x4000399	      5502	ops.c	FUNCTION_65
0x4000350	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      5426	ops.c	FUNCTION_65	ELSE_2
0x4000355	          0x895320	             mov dword [rbx + 0x20], edx	      5427	ops.c	FUNCTION_65	ELSE_2
0x4000358	        0x41395668	            cmp dword [r14 + 0x68], edx 	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400035c	     0xf8caefeffff	                            jl 0x4000210	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x4000362	      0xe996feffff	                           jmp 0x40001fd	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x4000367	            0x29c2	                            sub edx, eax	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x4000369	          0x8d42ff	                      lea eax, [rdx - 1]	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400036c	          0x83fa01	                              cmp edx, 1	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400036f	            0x7407	                            je 0x4000378	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x4000371	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x4000376	            0x7484	                            je 0x40002fc	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x4000378	          0x894304	                mov dword [rbx + 4], eax	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400037b	            0xeb97	                           jmp 0x4000314	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400037d	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000382	     0xf8446ffffff	                            je 0x40002ce	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000388	      0xe936ffffff	                           jmp 0x40002c3	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400038d	        0x44896b38	            mov dword [rbx + 0x38], r13d	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000391	            0xeb93	                           jmp 0x4000326	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000393	        0x44896b38	            mov dword [rbx + 0x38], r13d	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000397	            0xeb86	                           jmp 0x400031f	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000399	      0xe800000000	                          call 0x400039e	      5502	ops.c	FUNCTION_65
0x400039e	        0x4883c428	                           add rsp, 0x28	      5502	ops.c	FUNCTION_65
0x40003a2	              0x5b	                                 pop rbx	      5502	ops.c	FUNCTION_65
0x40003a3	              0x5d	                                 pop rbp	      5502	ops.c	FUNCTION_65
0x40003a4	            0x415c	                                 pop r12	      5502	ops.c	FUNCTION_65
0x40003a6	            0x415d	                                 pop r13	      5502	ops.c	FUNCTION_65
0x40003a8	            0x415e	                                 pop r14	      5502	ops.c	FUNCTION_65
0x40003aa	            0x415f	                                 pop r15	      5502	ops.c	FUNCTION_65
0x40003ac	              0xc3	                                     ret	      5502	ops.c	FUNCTION_65
free_register	CALL,2:ELSE,0:WHILE,0:FOR,0:functions,0:IF,0:SWITCH,0:DO,0	39
0x4002418	            0x4157	                                push r15	      1055	ops.c	FUNCTION_19
0x400241a	            0x4156	                                push r14	      1055	ops.c	FUNCTION_19
0x400241c	            0x4155	                                push r13	      1055	ops.c	FUNCTION_19
0x400241e	            0x4154	                                push r12	      1055	ops.c	FUNCTION_19
0x4002420	              0x55	                                push rbp	      1055	ops.c	FUNCTION_19
0x4002421	              0x53	                                push rbx	      1055	ops.c	FUNCTION_19
0x4002422	        0x4883ec08	                              sub rsp, 8	      1055	ops.c	FUNCTION_19
0x4002426	          0x4889fb	                            mov rbx, rdi	      1055	ops.c	FUNCTION_19
0x4002429	    0x488b05000000	            mov rax, qword [0x04002430] 	      1058	ops.c	FUNCTION_19
0x4002430	          0x4c8b38	                    mov r15, qword [rax]	      1058	ops.c	FUNCTION_19
0x4002433	        0x4c8b7008	                mov r14, qword [rax + 8]	      1058	ops.c	FUNCTION_19
0x4002437	      0x440fb66810	          movzx r13d, byte [rax + 0x10] 	      1058	ops.c	FUNCTION_19
0x400243c	        0x448b6014	           mov r12d, dword [rax + 0x14] 	      1058	ops.c	FUNCTION_19
0x4002440	        0x488b6818	            mov rbp, qword [rax + 0x18] 	      1058	ops.c	FUNCTION_19
0x4002444	          0x488b17	                    mov rdx, qword [rdi]	      1059	ops.c	FUNCTION_19
0x4002447	          0x488910	                    mov qword [rax], rdx	      1059	ops.c	FUNCTION_19
0x400244a	        0x488b5708	                mov rdx, qword [rdi + 8]	      1059	ops.c	FUNCTION_19
0x400244e	        0x48895008	                mov qword [rax + 8], rdx	      1059	ops.c	FUNCTION_19
0x4002452	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1059	ops.c	FUNCTION_19
0x4002456	        0x48895010	             mov qword [rax + 0x10], rdx	      1059	ops.c	FUNCTION_19
0x400245a	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      1059	ops.c	FUNCTION_19
0x400245e	        0x48895018	             mov qword [rax + 0x18], rdx	      1059	ops.c	FUNCTION_19
0x4002462	      0xe8b6dfffff	                  call sym.free_yank_all	      1060	ops.c	FUNCTION_19	CALL_1
0x4002467	          0x4889df	                            mov rdi, rbx	      1061	ops.c	FUNCTION_19	CALL_2
0x400246a	      0xe800000000	                          call 0x400246f	      1061	ops.c	FUNCTION_19	CALL_2
0x400246f	    0x488b05000000	            mov rax, qword [0x04002476] 	      1062	ops.c	FUNCTION_19
0x4002476	          0x4c8938	                    mov qword [rax], r15	      1062	ops.c	FUNCTION_19
0x4002479	        0x4c897008	                mov qword [rax + 8], r14	      1062	ops.c	FUNCTION_19
0x400247d	        0x44886810	             mov byte [rax + 0x10], r13b	      1062	ops.c	FUNCTION_19
0x4002481	        0x44896014	            mov dword [rax + 0x14], r12d	      1062	ops.c	FUNCTION_19
0x4002485	        0x48896818	             mov qword [rax + 0x18], rbp	      1062	ops.c	FUNCTION_19
0x4002489	        0x4883c408	                              add rsp, 8	      1063	ops.c	FUNCTION_19
0x400248d	              0x5b	                                 pop rbx	      1063	ops.c	FUNCTION_19
0x400248e	              0x5d	                                 pop rbp	      1063	ops.c	FUNCTION_19
0x400248f	            0x415c	                                 pop r12	      1063	ops.c	FUNCTION_19
0x4002491	            0x415d	                                 pop r13	      1063	ops.c	FUNCTION_19
0x4002493	            0x415e	                                 pop r14	      1063	ops.c	FUNCTION_19
0x4002495	            0x415f	                                 pop r15	      1063	ops.c	FUNCTION_19
0x4002497	              0xc3	                                     ret	      1063	ops.c	FUNCTION_19
str_to_reg	CALL,11:ELSE,5:WHILE,1:FOR,6:functions,0:IF,19:SWITCH,0:DO,0	277
0x4000a1e	            0x4157	                                push r15	      7132	ops.c	FUNCTION_88
0x4000a20	            0x4156	                                push r14	      7132	ops.c	FUNCTION_88
0x4000a22	            0x4155	                                push r13	      7132	ops.c	FUNCTION_88
0x4000a24	            0x4154	                                push r12	      7132	ops.c	FUNCTION_88
0x4000a26	              0x55	                                push rbp	      7132	ops.c	FUNCTION_88
0x4000a27	              0x53	                                push rbx	      7132	ops.c	FUNCTION_88
0x4000a28	        0x4883ec48	                           sub rsp, 0x48	      7132	ops.c	FUNCTION_88
0x4000a2c	          0x4989ff	                            mov r15, rdi	      7132	ops.c	FUNCTION_88
0x4000a2f	        0x8974241c	             mov dword [rsp + 0x1c], esi	      7132	ops.c	FUNCTION_88
0x4000a33	          0x4989d6	                            mov r14, rdx	      7132	ops.c	FUNCTION_88
0x4000a36	          0x4989cd	                            mov r13, rcx	      7132	ops.c	FUNCTION_88
0x4000a39	      0x4c89442438	              mov qword [rsp + 0x38], r8	      7132	ops.c	FUNCTION_88
0x4000a3e	          0x4489cb	                            mov ebx, r9d	      7132	ops.c	FUNCTION_88
0x4000a41	          0x488b3f	                    mov rdi, qword [rdi]	      7146	ops.c	FUNCTION_88	IF_1
0x4000a44	          0x4885ff	                           test rdi, rdi	      7146	ops.c	FUNCTION_88	IF_1
0x4000a47	            0x7508	                           jne 0x4000a51	      7146	ops.c	FUNCTION_88	IF_1
0x4000a49	    0x49c747080000	                  mov qword [r15 + 8], 0	      7147	ops.c	FUNCTION_88	IF_1
0x4000a51	    0x817c241cff00	           cmp dword [rsp + 0x1c], 0xff 	      7149	ops.c	FUNCTION_88	IF_2
0x4000a59	            0x752a	                           jne 0x4000a85	      7149	ops.c	FUNCTION_88	IF_2
0x4000a5b	            0x85db	                           test ebx, ebx	      7152	ops.c	FUNCTION_88	IF_2
0x4000a5d	            0x7536	                           jne 0x4000a95	      7152	ops.c	FUNCTION_88	IF_2
0x4000a5f	          0x4d85ed	                           test r13, r13	      7152	ops.c	FUNCTION_88	IF_2
0x4000a62	     0xf8e8b000000	                           jle 0x4000af3	      7152	ops.c	FUNCTION_88	IF_2
0x4000a68	    0x430fb6542eff	         movzx edx, byte [r14 + r13 - 1]	      7150	ops.c	FUNCTION_88	IF_2
0x4000a6e	          0x80fa0a	                             cmp dl, 0xa	      7152	ops.c	FUNCTION_88	IF_2
0x4000a71	           0xf94c1	                                 sete cl	      7152	ops.c	FUNCTION_88	IF_2
0x4000a74	          0x80fa0d	                             cmp dl, 0xd	      7152	ops.c	FUNCTION_88	IF_2
0x4000a77	           0xf94c0	                                 sete al	      7152	ops.c	FUNCTION_88	IF_2
0x4000a7a	             0x9c8	                             or eax, ecx	      7152	ops.c	FUNCTION_88	IF_2
0x4000a7c	           0xfb6c0	                           movzx eax, al	      7152	ops.c	FUNCTION_88	IF_2
0x4000a7f	        0x8944241c	             mov dword [rsp + 0x1c], eax	      7152	ops.c	FUNCTION_88	IF_2
0x4000a83	            0xeb4c	                           jmp 0x4000ad1	      7152	ops.c	FUNCTION_88	IF_2
0x4000a85	            0x85db	                           test ebx, ebx	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x4000a87	            0x7514	                           jne 0x4000a9d	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x4000a89	      0xb800000000	                              mov eax, 0	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x4000a8e	          0x4d85ed	                           test r13, r13	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x4000a91	            0x7e6d	                           jle 0x4000b00	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x4000a93	            0xeb3c	                           jmp 0x4000ad1	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x4000a95	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      7152	ops.c	FUNCTION_88	IF_2
0x4000a9d	        0x49833e00	                      cmp qword [r14], 0	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000aa1	     0xf84a3000000	                            je 0x4000b4a	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000aa7	          0x4c89f2	                            mov rdx, r14	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000aaa	      0xb800000000	                              mov eax, 0	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000aaf	          0x83c001	                              add eax, 1	      7163	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000ab2	        0x4883c208	                              add rdx, 8	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000ab6	        0x48833a00	                      cmp qword [rdx], 0	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000aba	            0x75f3	                           jne 0x4000aaf	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000abc	    0xc74424180000	               mov dword [rsp + 0x18], 0	      7140	ops.c	FUNCTION_88
0x4000ac4	    0xc74424080000	                  mov dword [rsp + 8], 0	      7139	ops.c	FUNCTION_88
0x4000acc	      0xe98e000000	                           jmp 0x4000b5f	      7139	ops.c	FUNCTION_88
0x4000ad1	          0x4c89f2	                            mov rdx, r14	      7139	ops.c	FUNCTION_88
0x4000ad4	        0x4b8d342e	                    lea rsi, [r14 + r13]	      7139	ops.c	FUNCTION_88
0x4000ad8	      0xb800000000	                              mov eax, 0	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000add	          0x803a0a	                     cmp byte [rdx], 0xa	      7169	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x4000ae0	           0xf94c1	                                 sete cl	      7169	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x4000ae3	           0xfb6c9	                           movzx ecx, cl	      7169	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x4000ae6	             0x1c8	                            add eax, ecx	      7169	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x4000ae8	        0x4883c201	                              add rdx, 1	      7169	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x4000aec	          0x4839d6	                            cmp rsi, rdx	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x4000aef	            0x75ec	                           jne 0x4000add	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x4000af1	            0xeb0d	                           jmp 0x4000b00	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x4000af3	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      7152	ops.c	FUNCTION_88	IF_2
0x4000afb	      0xb800000000	                              mov eax, 0	      7152	ops.c	FUNCTION_88	IF_2
0x4000b00	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x4000b05	            0x7415	                            je 0x4000b1c	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x4000b07	          0x4d85ed	                           test r13, r13	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x4000b0a	            0x7410	                            je 0x4000b1c	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x4000b0c	    0xc74424080000	                  mov dword [rsp + 8], 0	      7139	ops.c	FUNCTION_88
0x4000b14	    0x43807c2eff0a	          cmp byte [r14 + r13 - 1], 0xa 	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x4000b1a	            0x740b	                            je 0x4000b27	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x4000b1c	          0x83c001	                              add eax, 1	      7173	ops.c	FUNCTION_88	ELSE_2	IF_5
0x4000b1f	    0xc74424080100	                  mov dword [rsp + 8], 1	      7172	ops.c	FUNCTION_88	ELSE_2	IF_5
0x4000b27	    0xc74424180000	               mov dword [rsp + 0x18], 0	      7140	ops.c	FUNCTION_88
0x4000b2f	      0x49837f0800	                  cmp qword [r15 + 8], 0	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x4000b34	            0x7e29	                           jle 0x4000b5f	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x4000b36	      0x41807f1000	                cmp byte [r15 + 0x10], 0	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x4000b3b	            0x7522	                           jne 0x4000b5f	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x4000b3d	          0x83e801	                              sub eax, 1	      7178	ops.c	FUNCTION_88	ELSE_2	IF_6
0x4000b40	    0xc74424180100	               mov dword [rsp + 0x18], 1	      7177	ops.c	FUNCTION_88	ELSE_2	IF_6
0x4000b48	            0xeb15	                           jmp 0x4000b5f	      7177	ops.c	FUNCTION_88	ELSE_2	IF_6
0x4000b4a	    0xc74424180000	               mov dword [rsp + 0x18], 0	      7140	ops.c	FUNCTION_88
0x4000b52	    0xc74424080000	                  mov dword [rsp + 8], 0	      7139	ops.c	FUNCTION_88
0x4000b5a	      0xb800000000	                              mov eax, 0	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x4000b5f	            0x4898	                                    cdqe	      7183	ops.c	FUNCTION_88	IF_7
0x4000b61	        0x49034708	                add rax, qword [r15 + 8]	      7183	ops.c	FUNCTION_88	IF_7
0x4000b65	            0x751a	                           jne 0x4000b81	      7183	ops.c	FUNCTION_88	IF_7
0x4000b67	          0x4885ff	                           test rdi, rdi	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x4000b6a	     0xf84d8020000	                            je 0x4000e48	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x4000b70	      0xe800000000	                          call 0x4000b75	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x4000b75	    0x49c707000000	                      mov qword [r15], 0	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x4000b7c	      0xe9c7020000	                           jmp 0x4000e48	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x4000b81	    0x488d3cc50000	                        lea rdi, [rax*8]	      7193	ops.c	FUNCTION_88	CALL_2
0x4000b89	      0xbe01000000	                              mov esi, 1	      7193	ops.c	FUNCTION_88	CALL_2
0x4000b8e	      0xe800000000	                          call 0x4000b93	      7193	ops.c	FUNCTION_88	CALL_2
0x4000b93	          0x4889c5	                            mov rbp, rax	      7193	ops.c	FUNCTION_88	CALL_2
0x4000b96	          0x4885c0	                           test rax, rax	      7195	ops.c	FUNCTION_88	IF_8
0x4000b99	     0xf84a9020000	                            je 0x4000e48	      7195	ops.c	FUNCTION_88	IF_8
0x4000b9f	      0x49837f0800	                  cmp qword [r15 + 8], 0	      7197	ops.c	FUNCTION_88	FOR_3
0x4000ba4	            0x7e24	                           jle 0x4000bca	      7197	ops.c	FUNCTION_88	FOR_3
0x4000ba6	    0x41bc00000000	                             mov r12d, 0	      7197	ops.c	FUNCTION_88	FOR_3
0x4000bac	          0x4963c4	                        movsxd rax, r12d	      7198	ops.c	FUNCTION_88	FOR_3
0x4000baf	          0x498b17	                    mov rdx, qword [r15]	      7198	ops.c	FUNCTION_88	FOR_3
0x4000bb2	        0x488b14c2	            mov rdx, qword [rdx + rax*8]	      7198	ops.c	FUNCTION_88	FOR_3
0x4000bb6	      0x488954c500	            mov qword [rbp + rax*8], rdx	      7198	ops.c	FUNCTION_88	FOR_3
0x4000bbb	        0x4183c401	                             add r12d, 1	      7197	ops.c	FUNCTION_88	FOR_3
0x4000bbf	          0x4963c4	                        movsxd rax, r12d	      7197	ops.c	FUNCTION_88	FOR_3
0x4000bc2	        0x493b4708	                cmp rax, qword [r15 + 8]	      7197	ops.c	FUNCTION_88	FOR_3
0x4000bc6	            0x7ce4	                            jl 0x4000bac	      7197	ops.c	FUNCTION_88	FOR_3
0x4000bc8	            0xeb06	                           jmp 0x4000bd0	      7197	ops.c	FUNCTION_88	FOR_3
0x4000bca	    0x41bc00000000	                             mov r12d, 0	      7197	ops.c	FUNCTION_88	FOR_3
0x4000bd0	          0x498b3f	                    mov rdi, qword [r15]	      7199	ops.c	FUNCTION_88	CALL_3
0x4000bd3	      0xe800000000	                          call 0x4000bd8	      7199	ops.c	FUNCTION_88	CALL_3
0x4000bd8	          0x49892f	                    mov qword [r15], rbp	      7200	ops.c	FUNCTION_88
0x4000bdb	            0x85db	                           test ebx, ebx	      7206	ops.c	FUNCTION_88	IF_9
0x4000bdd	            0x7532	                           jne 0x4000c11	      7206	ops.c	FUNCTION_88	IF_9
0x4000bdf	      0x4863442408	            movsxd rax, dword [rsp + 8] 	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000be4	          0x4c01e8	                            add rax, r13	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000be7	      0x4889442428	             mov qword [rsp + 0x28], rax	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000bec	    0x48c744241000	               mov qword [rsp + 0x10], 0	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000bf5	    0x48c744240800	                  mov qword [rsp + 8], 0	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000bfe	      0xbb00000000	                              mov ebx, 0	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000c03	          0x4885c0	                           test rax, rax	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000c06	     0xf8f94010000	                            jg 0x4000da0	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000c0c	      0xe9bc010000	                           jmp 0x4000dcd	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000c11	          0x498b16	                    mov rdx, qword [r14]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c14	          0x4885d2	                           test rdx, rdx	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c17	     0xf84a0010000	                            je 0x4000dbd	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c1d	    0x41bd00000000	                             mov r13d, 0	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c23	      0x4c897c2408	                mov qword [rsp + 8], r15	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x4000c28	      0xb800000000	                              mov eax, 0	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x4000c2d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x4000c34	          0x4889d7	                            mov rdi, rdx	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x4000c37	            0xf2ae	              repne scasb al, byte [rdi]	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x4000c39	          0x4889c8	                            mov rax, rcx	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x4000c3c	          0x48f7d0	                                 not rax	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x4000c3f	        0x488d58ff	                      lea rbx, [rax - 1]	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x4000c43	          0x4963c4	                        movsxd rax, r12d	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000c46	      0x4c8d7cc500	                  lea r15, [rbp + rax*8]	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000c4b	            0x89de	                            mov esi, ebx	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000c4d	          0x4889d7	                            mov rdi, rdx	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000c50	      0xe800000000	                          call 0x4000c55	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000c55	          0x498907	                    mov qword [r15], rax	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000c58	          0x4939dd	                            cmp r13, rbx	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000c5b	        0x4c0f4ceb	                          cmovl r13, rbx	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x4000c5f	        0x4983c608	                              add r14, 8	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c63	        0x4183c401	                             add r12d, 1	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c67	          0x498b16	                    mov rdx, qword [r14]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c6a	          0x4885d2	                           test rdx, rdx	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c6d	            0x75b9	                           jne 0x4000c28	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c6f	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c74	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c79	      0xe94f010000	                           jmp 0x4000dcd	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000c7e	      0x41803c1e0a	               cmp byte [r14 + rbx], 0xa	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x4000c83	            0x7409	                            je 0x4000c8e	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x4000c85	        0x4883c301	                              add rbx, 1	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x4000c89	          0x4939dd	                            cmp r13, rbx	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x4000c8c	            0x7ff0	                            jg 0x4000c7e	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x4000c8e	      0x482b5c2408	                sub rbx, qword [rsp + 8]	      7223	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000c93	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      7223	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000c98	          0x4839de	                            cmp rsi, rbx	      7223	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000c9b	        0x480f4cf3	                          cmovl rsi, rbx	      7223	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000c9f	      0x4889742410	             mov qword [rsp + 0x10], rsi	      7223	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000ca4	            0x85c0	                           test eax, eax	      7226	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x4000ca6	     0xf8460010000	                            je 0x4000e0c	      7226	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x4000cac	      0x418d4424ff	                      lea eax, [r12 - 1]	      7228	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x4000cb1	        0x89442418	             mov dword [rsp + 0x18], eax	      7228	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x4000cb5	            0x4898	                                    cdqe	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000cb7	          0x4889c6	                            mov rsi, rax	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000cba	          0x498b07	                    mov rax, qword [r15]	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000cbd	      0x4889742430	             mov qword [rsp + 0x30], rsi	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000cc2	        0x488b3cf0	            mov rdi, qword [rax + rsi*8]	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000cc6	      0xb800000000	                              mov eax, 0	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000ccb	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000cd2	            0xf2ae	              repne scasb al, byte [rdi]	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000cd4	          0x4889c8	                            mov rax, rcx	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000cd7	          0x48f7d0	                                 not rax	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000cda	        0x4c8d60ff	                      lea r12, [rax - 1]	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000cde	      0x4489642424	            mov dword [rsp + 0x24], r12d	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x4000ce3	        0x428d0423	                    lea eax, [rbx + r12]	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000ce7	        0x89442420	             mov dword [rsp + 0x20], eax	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000ceb	          0x8d7801	                      lea edi, [rax + 1]	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000cee	      0xe800000000	                          call 0x4000cf3	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000cf3	          0x4889c5	                            mov rbp, rax	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000cf6	          0x4885c0	                           test rax, rax	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000cf9	     0xf84c9000000	                            je 0x4000dc8	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000cff	          0x4585e4	                         test r12d, r12d	      7236	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_15
0x4000d02	     0xf842a010000	                            je 0x4000e32	      7236	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_15
0x4000d08	          0x4963d4	                        movsxd rdx, r12d	        59	string3.h	FUNCTION_93	CALL_3
0x4000d0b	          0x498b07	                    mov rax, qword [r15]	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x4000d0e	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        59	string3.h	FUNCTION_93	CALL_3
0x4000d13	        0x488b34f0	            mov rsi, qword [rax + rsi*8]	        59	string3.h	FUNCTION_93	CALL_3
0x4000d17	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x4000d1a	      0xe800000000	                          call 0x4000d1f	        59	string3.h	FUNCTION_93	CALL_3
0x4000d1f	      0xe90e010000	                           jmp 0x4000e32	        59	string3.h	FUNCTION_93	CALL_3
0x4000d24	          0x4885db	                           test rbx, rbx	      7240	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0x4000d27	            0x7419	                            je 0x4000d42	      7240	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0x4000d29	      0x488b442408	                mov rax, qword [rsp + 8]	        59	string3.h	FUNCTION_93	CALL_3
0x4000d2e	        0x498d3406	                    lea rsi, [r14 + rax]	        59	string3.h	FUNCTION_93	CALL_3
0x4000d32	      0x48637c2424	         movsxd rdi, dword [rsp + 0x24] 	        59	string3.h	FUNCTION_93	CALL_3
0x4000d37	          0x4801ef	                            add rdi, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x4000d3a	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4000d3d	      0xe800000000	                          call 0x4000d42	        59	string3.h	FUNCTION_93	CALL_3
0x4000d42	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      7243	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d46	            0x89c8	                            mov eax, ecx	      7243	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d48	            0x4898	                                    cdqe	      7243	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d4a	      0xc644050000	                 mov byte [rbp + rax], 0	      7243	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d4f	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d53	        0x448d6001	                     lea r12d, [rax + 1]	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d57	          0x4863d0	                         movsxd rdx, eax	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d5a	          0x498b07	                    mov rax, qword [r15]	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d5d	        0x48892cd0	            mov qword [rax + rdx*8], rbp	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d61	            0x89c8	                            mov eax, ecx	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000d63	          0x83e901	                              sub ecx, 1	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000d66	            0x781b	                            js 0x4000d83	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000d68	          0x8d40ff	                      lea eax, [rax - 1]	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000d6b	      0x488d440501	                lea rax, [rbp + rax + 1]	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000d70	        0x807d0000	                       cmp byte [rbp], 0	      7247	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x4000d74	            0x7504	                           jne 0x4000d7a	      7247	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x4000d76	        0xc645000a	                     mov byte [rbp], 0xa	      7248	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x4000d7a	        0x4883c501	                              add rbp, 1	      7249	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000d7e	          0x4839e8	                            cmp rax, rbp	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000d81	            0x75ed	                           jne 0x4000d70	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x4000d83	      0x488b442408	                mov rax, qword [rsp + 8]	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d88	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d8d	      0xb800000000	                              mov eax, 0	      7251	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d92	      0x483b5c2428	            cmp rbx, qword [rsp + 0x28] 	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d97	            0x7d34	                           jge 0x4000dcd	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d99	      0x48895c2408	                mov qword [rsp + 8], rbx	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000d9e	            0xeb04	                           jmp 0x4000da4	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000da0	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x4000da4	          0x4c39eb	                            cmp rbx, r13	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x4000da7	     0xf8de1feffff	                           jge 0x4000c8e	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x4000dad	      0x41803c1e0a	               cmp byte [r14 + rbx], 0xa	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x4000db2	     0xf85cdfeffff	                           jne 0x4000c85	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x4000db8	      0xe9d1feffff	                           jmp 0x4000c8e	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x4000dbd	    0x48c744241000	               mov qword [rsp + 0x10], 0	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000dc6	            0xeb05	                           jmp 0x4000dcd	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x4000dc8	      0x448b642418	           mov r12d, dword [rsp + 0x18] 	      7228	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x4000dcd	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      7254	ops.c	FUNCTION_88
0x4000dd1	        0x41884710	               mov byte [r15 + 0x10], al	      7254	ops.c	FUNCTION_88
0x4000dd5	          0x4d63e4	                        movsxd r12, r12d	      7255	ops.c	FUNCTION_88
0x4000dd8	        0x4d896708	                mov qword [r15 + 8], r12	      7255	ops.c	FUNCTION_88
0x4000ddc	          0x83f802	                              cmp eax, 2	      7256	ops.c	FUNCTION_88	IF_19
0x4000ddf	            0x7518	                           jne 0x4000df9	      7256	ops.c	FUNCTION_88	IF_19
0x4000de1	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      7257	ops.c	FUNCTION_88	IF_19
0x4000de5	          0x83e801	                              sub eax, 1	      7257	ops.c	FUNCTION_88	IF_19
0x4000de8	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      7257	ops.c	FUNCTION_88	IF_19
0x4000ded	          0x4885ff	                           test rdi, rdi	      7257	ops.c	FUNCTION_88	IF_19
0x4000df0	           0xf49c7	                         cmovns eax, edi	      7257	ops.c	FUNCTION_88	IF_19
0x4000df3	        0x41894714	             mov dword [r15 + 0x14], eax	      7257	ops.c	FUNCTION_88	IF_19
0x4000df7	            0xeb08	                           jmp 0x4000e01	      7257	ops.c	FUNCTION_88	IF_19
0x4000df9	    0x41c747140000	               mov dword [r15 + 0x14], 0	      7259	ops.c	FUNCTION_88	ELSE_5
0x4000e01	      0xe800000000	                          call 0x4000e06	      7261	ops.c	FUNCTION_88	CALL_11
0x4000e06	        0x49894718	             mov qword [r15 + 0x18], rax	      7261	ops.c	FUNCTION_88	CALL_11
0x4000e0a	            0xeb3c	                           jmp 0x4000e48	      7261	ops.c	FUNCTION_88	CALL_11
0x4000e0c	        0x895c2420	             mov dword [rsp + 0x20], ebx	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000e10	          0x8d7b01	                      lea edi, [rbx + 1]	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000e13	      0xe800000000	                          call 0x4000e18	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000e18	          0x4889c5	                            mov rbp, rax	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x4000e1b	          0x4885c0	                           test rax, rax	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000e1e	            0x74ad	                            je 0x4000dcd	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000e20	      0x4489642418	            mov dword [rsp + 0x18], r12d	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x4000e25	    0xc74424240000	               mov dword [rsp + 0x24], 0	      7232	ops.c	FUNCTION_88	ELSE_3	FOR_5	ELSE_4
0x4000e2d	      0xe9f2feffff	                           jmp 0x4000d24	      7232	ops.c	FUNCTION_88	ELSE_3	FOR_5	ELSE_4
0x4000e32	      0x4863442418	         movsxd rax, dword [rsp + 0x18] 	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x4000e37	          0x498b17	                    mov rdx, qword [r15]	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x4000e3a	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x4000e3e	      0xe800000000	                          call 0x4000e43	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x4000e43	      0xe9dcfeffff	                           jmp 0x4000d24	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x4000e48	        0x4883c448	                           add rsp, 0x48	      7263	ops.c	FUNCTION_88
0x4000e4c	              0x5b	                                 pop rbx	      7263	ops.c	FUNCTION_88
0x4000e4d	              0x5d	                                 pop rbp	      7263	ops.c	FUNCTION_88
0x4000e4e	            0x415c	                                 pop r12	      7263	ops.c	FUNCTION_88
0x4000e50	            0x415d	                                 pop r13	      7263	ops.c	FUNCTION_88
0x4000e52	            0x415e	                                 pop r14	      7263	ops.c	FUNCTION_88
0x4000e54	            0x415f	                                 pop r15	      7263	ops.c	FUNCTION_88
0x4000e56	              0xc3	                                     ret	      7263	ops.c	FUNCTION_88
paragraph_start	CALL,9:ELSE,0:WHILE,0:FOR,0:functions,0:IF,7:SWITCH,0:DO,0	75
0x4005a00	            0x4154	                                push r12	      5296	ops.c	FUNCTION_64
0x4005a02	              0x55	                                push rbp	      5296	ops.c	FUNCTION_64
0x4005a03	              0x53	                                push rbx	      5296	ops.c	FUNCTION_64
0x4005a04	        0x4883ec20	                           sub rsp, 0x20	      5296	ops.c	FUNCTION_64
0x4005a08	    0x64488b042528	                mov rax, qword fs:[0x28]	      5296	ops.c	FUNCTION_64
0x4005a11	      0x4889442418	             mov qword [rsp + 0x18], rax	      5296	ops.c	FUNCTION_64
0x4005a16	            0x31c0	                            xor eax, eax	      5296	ops.c	FUNCTION_64
0x4005a18	    0xc70424000000	                      mov dword [rsp], 0	      5299	ops.c	FUNCTION_64
0x4005a1f	    0x48c744240800	                  mov qword [rsp + 8], 0	      5300	ops.c	FUNCTION_64
0x4005a28	      0xba01000000	                              mov edx, 1	      5307	ops.c	FUNCTION_64	IF_1
0x4005a2d	        0x4883ff01	                              cmp rdi, 1	      5306	ops.c	FUNCTION_64	IF_1
0x4005a31	     0xf8ec2000000	                           jle 0x4005af9	      5306	ops.c	FUNCTION_64	IF_1
0x4005a37	          0x4889fb	                            mov rbx, rdi	      5306	ops.c	FUNCTION_64	IF_1
0x4005a3a	        0x488d6fff	                      lea rbp, [rdi - 1]	      5309	ops.c	FUNCTION_64	CALL_1
0x4005a3e	          0x4889ef	                            mov rdi, rbp	      5309	ops.c	FUNCTION_64	CALL_1
0x4005a41	      0xe800000000	                          call 0x4005a46	      5309	ops.c	FUNCTION_64	CALL_1
0x4005a46	      0xba01000000	                              mov edx, 1	      5311	ops.c	FUNCTION_64	IF_2
0x4005a4b	          0x803800	                       cmp byte [rax], 0	      5310	ops.c	FUNCTION_64	IF_2
0x4005a4e	     0xf84a5000000	                            je 0x4005af9	      5310	ops.c	FUNCTION_64	IF_2
0x4005a54	      0xbf71000000	                           mov edi, 0x71	      5314	ops.c	FUNCTION_64	CALL_2
0x4005a59	      0xe800000000	                          call 0x4005a5e	      5314	ops.c	FUNCTION_64	CALL_2
0x4005a5e	          0x4189c4	                           mov r12d, eax	      5314	ops.c	FUNCTION_64	CALL_2
0x4005a61	            0x89c1	                            mov ecx, eax	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x4005a63	      0x488d542408	                      lea rdx, [rsp + 8]	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x4005a68	          0x4889e6	                            mov rsi, rsp	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x4005a6b	          0x4889ef	                            mov rdi, rbp	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x4005a6e	      0xe8a4b5ffff	                  call sym.fmt_check_par	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x4005a73	      0xba01000000	                              mov edx, 1	      5321	ops.c	FUNCTION_64	IF_3
0x4005a78	            0x85c0	                           test eax, eax	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x4005a7a	            0x757d	                           jne 0x4005af9	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x4005a7c	          0x4489e1	                           mov ecx, r12d	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4005a7f	      0x488d542410	                   lea rdx, [rsp + 0x10]	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4005a84	      0x488d742404	                      lea rsi, [rsp + 4]	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4005a89	          0x4889df	                            mov rdi, rbx	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4005a8c	      0xe886b5ffff	                  call sym.fmt_check_par	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4005a91	      0xba01000000	                              mov edx, 1	      5328	ops.c	FUNCTION_64	IF_4
0x4005a96	            0x85c0	                           test eax, eax	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4005a98	            0x755f	                           jne 0x4005af9	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x4005a9a	      0xbf77000000	                           mov edi, 0x77	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4005a9f	      0xe800000000	                          call 0x4005aa4	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4005aa4	            0x85c0	                           test eax, eax	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4005aa6	            0x7411	                            je 0x4005ab9	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4005aa8	          0x4889ef	                            mov rdi, rbp	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4005aab	      0xe890a5ffff	                  call sym.ends_in_white	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4005ab0	      0xba01000000	                              mov edx, 1	      5331	ops.c	FUNCTION_64	IF_5
0x4005ab5	            0x85c0	                           test eax, eax	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4005ab7	            0x7440	                            je 0x4005af9	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4005ab9	      0xbf6e000000	                           mov edi, 0x6e	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4005abe	      0xe800000000	                          call 0x4005ac3	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4005ac3	            0x85c0	                           test eax, eax	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4005ac5	            0x7411	                            je 0x4005ad8	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4005ac7	          0x4889df	                            mov rdi, rbx	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4005aca	      0xe800000000	                          call 0x4005acf	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4005acf	      0xba01000000	                              mov edx, 1	      5334	ops.c	FUNCTION_64	IF_6
0x4005ad4	            0x85c0	                           test eax, eax	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4005ad6	            0x7f21	                            jg 0x4005af9	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4005ad8	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x4005add	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x4005ae1	      0x488b542408	                mov rdx, qword [rsp + 8]	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x4005ae6	          0x8b3424	                    mov esi, dword [rsp]	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x4005ae9	          0x4889ef	                            mov rdi, rbp	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x4005aec	      0xe845a9ffff	                    call sym.same_leader	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x4005af1	            0x85c0	                           test eax, eax	      5307	ops.c	FUNCTION_64	IF_1
0x4005af3	           0xf94c2	                                 sete dl	      5307	ops.c	FUNCTION_64	IF_1
0x4005af6	           0xfb6d2	                           movzx edx, dl	      5307	ops.c	FUNCTION_64	IF_1
0x4005af9	            0x89d0	                            mov eax, edx	      5343	ops.c	FUNCTION_64
0x4005afb	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5343	ops.c	FUNCTION_64
0x4005b00	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5343	ops.c	FUNCTION_64
0x4005b09	            0x7405	                            je 0x4005b10	      5343	ops.c	FUNCTION_64
0x4005b0b	      0xe800000000	                          call 0x4005b10	      5343	ops.c	FUNCTION_64
0x4005b10	        0x4883c420	                           add rsp, 0x20	      5343	ops.c	FUNCTION_64
0x4005b14	              0x5b	                                 pop rbx	      5343	ops.c	FUNCTION_64
0x4005b15	              0x5d	                                 pop rbp	      5343	ops.c	FUNCTION_64
0x4005b16	            0x415c	                                 pop r12	      5343	ops.c	FUNCTION_64
0x4005b18	              0xc3	                                     ret	      5343	ops.c	FUNCTION_64
op_format	CALL,5:ELSE,0:WHILE,0:FOR,0:functions,1:IF,6:SWITCH,0:DO,0	98
0x4005838	            0x4155	                                push r13	      4828	ops.c	FUNCTION_57
0x400583a	            0x4154	                                push r12	      4828	ops.c	FUNCTION_57
0x400583c	              0x55	                                push rbp	      4828	ops.c	FUNCTION_57
0x400583d	              0x53	                                push rbx	      4828	ops.c	FUNCTION_57
0x400583e	        0x4883ec08	                              sub rsp, 8	      4828	ops.c	FUNCTION_57
0x4005842	          0x4889fb	                            mov rbx, rdi	      4828	ops.c	FUNCTION_57
0x4005845	          0x4189f4	                           mov r12d, esi	      4828	ops.c	FUNCTION_57
0x4005848	    0x488b05000000	            mov rax, qword [0x0400584f] 	      4829	ops.c	FUNCTION_57
0x400584f	          0x4c8b28	                    mov r13, qword [rax]	      4829	ops.c	FUNCTION_57
0x4005852	        0x488b7740	            mov rsi, qword [rdi + 0x40] 	      4833	ops.c	FUNCTION_57
0x4005856	        0x488b7f48	            mov rdi, qword [rdi + 0x48] 	      4833	ops.c	FUNCTION_57
0x400585a	    0x488b05000000	            mov rax, qword [0x04005861] 	      4833	ops.c	FUNCTION_57
0x4005861	        0x48897038	             mov qword [rax + 0x38], rsi	      4833	ops.c	FUNCTION_57
0x4005865	        0x48897840	             mov qword [rax + 0x40], rdi	      4833	ops.c	FUNCTION_57
0x4005869	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x400586d	        0x488d7001	                      lea rsi, [rax + 1]	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4005871	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4005875	        0x488d78ff	                      lea rdi, [rax - 1]	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4005879	      0xe800000000	                          call 0x400587e	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x400587e	            0x85c0	                           test eax, eax	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4005880	     0xf8436010000	                            je 0x40059bc	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4005886	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      4838	ops.c	FUNCTION_57
0x400588a	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      4838	ops.c	FUNCTION_57
0x400588e	    0x488b05000000	            mov rax, qword [0x04005895] 	      4838	ops.c	FUNCTION_57
0x4005895	        0x48897038	             mov qword [rax + 0x38], rsi	      4838	ops.c	FUNCTION_57
0x4005899	        0x48897840	             mov qword [rax + 0x40], rdi	      4838	ops.c	FUNCTION_57
0x400589d	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      4840	ops.c	FUNCTION_57	IF_2
0x40058a1	            0x740a	                            je 0x40058ad	      4840	ops.c	FUNCTION_57	IF_2
0x40058a3	      0xbf14000000	                           mov edi, 0x14	      4842	ops.c	FUNCTION_57	CALL_2
0x40058a8	      0xe800000000	                          call 0x40058ad	      4842	ops.c	FUNCTION_57	CALL_2
0x40058ad	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      4845	ops.c	FUNCTION_57
0x40058b1	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      4845	ops.c	FUNCTION_57
0x40058b5	    0x488b05000000	            mov rax, qword [0x040058bc] 	      4845	ops.c	FUNCTION_57
0x40058bc	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      4845	ops.c	FUNCTION_57
0x40058c3	    0x4889b8e81100	          mov qword [rax + 0x11e8], rdi 	      4845	ops.c	FUNCTION_57
0x40058ca	          0x4585e4	                         test r12d, r12d	      4849	ops.c	FUNCTION_57	IF_3
0x40058cd	            0x7416	                            je 0x40058e5	      4849	ops.c	FUNCTION_57	IF_3
0x40058cf	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      4850	ops.c	FUNCTION_57	IF_3
0x40058d3	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      4850	ops.c	FUNCTION_57	IF_3
0x40058d7	    0x488905000000	            mov qword [0x040058de], rax 	      4850	ops.c	FUNCTION_57	IF_3
0x40058de	    0x488915000000	            mov qword [0x040058e5], rdx 	      4850	ops.c	FUNCTION_57	IF_3
0x40058e5	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      4852	ops.c	FUNCTION_57	CALL_3
0x40058e9	          0x4489e6	                           mov esi, r12d	      4852	ops.c	FUNCTION_57	CALL_3
0x40058ec	      0xe800000000	                          call 0x40058f1	      4852	ops.c	FUNCTION_57	CALL_3
0x40058f1	        0x837b1800	               cmp dword [rbx + 0x18], 0	      4859	ops.c	FUNCTION_57	IF_4
0x40058f5	            0x741f	                            je 0x4005916	      4859	ops.c	FUNCTION_57	IF_4
0x40058f7	    0x488b15000000	            mov rdx, qword [0x040058fe] 	      4859	ops.c	FUNCTION_57	IF_4
0x40058fe	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      4859	ops.c	FUNCTION_57	IF_4
0x4005902	    0x488b0d000000	            mov rcx, qword [0x04005909] 	      4859	ops.c	FUNCTION_57	IF_4
0x4005909	          0x483b01	                    cmp rax, qword [rcx]	      4859	ops.c	FUNCTION_57	IF_4
0x400590c	            0x7d08	                           jge 0x4005916	      4859	ops.c	FUNCTION_57	IF_4
0x400590e	        0x4883c001	                              add rax, 1	      4860	ops.c	FUNCTION_57	IF_4
0x4005912	        0x48894238	             mov qword [rdx + 0x38], rax	      4860	ops.c	FUNCTION_57	IF_4
0x4005916	      0xbf05000000	                              mov edi, 5	      4861	ops.c	FUNCTION_57	CALL_4
0x400591b	      0xe800000000	                          call 0x4005920	      4861	ops.c	FUNCTION_57	CALL_4
0x4005920	    0x488b05000000	            mov rax, qword [0x04005927] 	      4862	ops.c	FUNCTION_57
0x4005927	          0x488b28	                    mov rbp, qword [rax]	      4862	ops.c	FUNCTION_57
0x400592a	          0x4c29ed	                            sub rbp, r13	      4862	ops.c	FUNCTION_57
0x400592d	          0x4889ef	                            mov rdi, rbp	      4863	ops.c	FUNCTION_57	CALL_5
0x4005930	      0xe800000000	                          call 0x4005935	      4863	ops.c	FUNCTION_57	CALL_5
0x4005935	    0x488b05000000	            mov rax, qword [0x0400593c] 	      4866	ops.c	FUNCTION_57
0x400593c	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      4866	ops.c	FUNCTION_57
0x4005940	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      4866	ops.c	FUNCTION_57
0x4005944	    0x488b15000000	            mov rdx, qword [0x0400594b] 	      4866	ops.c	FUNCTION_57
0x400594b	    0x4889b2001200	          mov qword [rdx + 0x1200], rsi 	      4866	ops.c	FUNCTION_57
0x4005952	    0x4889ba081200	          mov qword [rdx + 0x1208], rdi 	      4866	ops.c	FUNCTION_57
0x4005959	          0x4585e4	                         test r12d, r12d	      4868	ops.c	FUNCTION_57	IF_5
0x400595c	            0x7421	                            je 0x400597f	      4868	ops.c	FUNCTION_57	IF_5
0x400595e	    0x488b35000000	            mov rsi, qword [0x04005965] 	      4870	ops.c	FUNCTION_57	IF_5
0x4005965	    0x488b3d000000	            mov rdi, qword [0x0400596c] 	      4870	ops.c	FUNCTION_57	IF_5
0x400596c	        0x48897038	             mov qword [rax + 0x38], rsi	      4870	ops.c	FUNCTION_57	IF_5
0x4005970	        0x48897840	             mov qword [rax + 0x40], rdi	      4870	ops.c	FUNCTION_57	IF_5
0x4005974	    0x48c705000000	               mov qword [0x0400597f], 0	      4871	ops.c	FUNCTION_57	IF_5
0x400597f	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      4874	ops.c	FUNCTION_57	IF_6
0x4005983	            0x7437	                            je 0x40059bc	      4874	ops.c	FUNCTION_57	IF_6
0x4005985	    0x488b05000000	            mov rax, qword [0x0400598c] 	      4878	ops.c	FUNCTION_57	IF_6
0x400598c	          0x4885c0	                           test rax, rax	      4878	ops.c	FUNCTION_57	IF_6
0x400598f	            0x742b	                            je 0x40059bc	      4878	ops.c	FUNCTION_57	IF_6
0x4005991	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4005995	          0x4885d2	                           test rdx, rdx	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4005998	            0x7419	                            je 0x40059b3	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x400599a	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x400599e	          0x4839ca	                            cmp rdx, rcx	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x40059a1	            0x7e09	                           jle 0x40059ac	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x40059a3	          0x4801ea	                            add rdx, rbp	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x40059a6	        0x48895058	             mov qword [rax + 0x58], rdx	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x40059aa	            0xeb07	                           jmp 0x40059b3	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x40059ac	          0x4801e9	                            add rcx, rbp	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x40059af	        0x48894868	             mov qword [rax + 0x68], rcx	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x40059b3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4878	ops.c	FUNCTION_57	IF_6
0x40059b7	          0x4885c0	                           test rax, rax	      4878	ops.c	FUNCTION_57	IF_6
0x40059ba	            0x75d5	                           jne 0x4005991	      4878	ops.c	FUNCTION_57	IF_6
0x40059bc	        0x4883c408	                              add rsp, 8	      4891	ops.c	FUNCTION_57	ELSE_1
0x40059c0	              0x5b	                                 pop rbx	      4891	ops.c	FUNCTION_57	ELSE_1
0x40059c1	              0x5d	                                 pop rbp	      4891	ops.c	FUNCTION_57	ELSE_1
0x40059c2	            0x415c	                                 pop r12	      4891	ops.c	FUNCTION_57	ELSE_1
0x40059c4	            0x415d	                                 pop r13	      4891	ops.c	FUNCTION_57	ELSE_1
0x40059c6	              0xc3	                                     ret	      4891	ops.c	FUNCTION_57	ELSE_1
clip_free_selection	CALL,1:ELSE,1:WHILE,0:FOR,0:functions,0:IF,1:SWITCH,0:DO,0	13
0x4006a04	              0x53	                                push rbx	      6553	ops.c	FUNCTION_74
0x4006a05	    0x488b1d000000	            mov rbx, qword [0x04006a0c] 	      6554	ops.c	FUNCTION_74
0x4006a0c	    0x4881ff000000	                              cmp rdi, 0	      6556	ops.c	FUNCTION_74	IF_1
0x4006a13	      0xba00000000	                              mov edx, 0	      6557	ops.c	FUNCTION_74	IF_1
0x4006a18	      0xb800000000	                              mov eax, 0	      6557	ops.c	FUNCTION_74	IF_1
0x4006a1d	        0x480f44c2	                          cmove rax, rdx	      6557	ops.c	FUNCTION_74	IF_1
0x4006a21	    0x488905000000	            mov qword [0x04006a28], rax 	      6557	ops.c	FUNCTION_74	IF_1
0x4006a28	      0xe8f099ffff	                  call sym.free_yank_all	      6560	ops.c	FUNCTION_74	CALL_1
0x4006a2d	    0x488b05000000	            mov rax, qword [0x04006a34] 	      6561	ops.c	FUNCTION_74
0x4006a34	    0x48c740080000	                  mov qword [rax + 8], 0	      6561	ops.c	FUNCTION_74
0x4006a3c	    0x48891d000000	            mov qword [0x04006a43], rbx 	      6562	ops.c	FUNCTION_74
0x4006a43	              0x5b	                                 pop rbx	      6563	ops.c	FUNCTION_74
0x4006a44	              0xc3	                                     ret	      6563	ops.c	FUNCTION_74
get_register	CALL,10:ELSE,2:WHILE,0:FOR,1:functions,0:IF,8:SWITCH,0:DO,0	79
0x4007380	            0x4154	                                push r12	       990	ops.c	FUNCTION_17
0x4007382	              0x55	                                push rbp	       990	ops.c	FUNCTION_17
0x4007383	              0x53	                                push rbx	       990	ops.c	FUNCTION_17
0x4007384	            0x89fb	                            mov ebx, edi	       990	ops.c	FUNCTION_17
0x4007386	          0x4189f4	                           mov r12d, esi	       990	ops.c	FUNCTION_17
0x4007389	          0x83ff2a	                           cmp edi, 0x2a	       997	ops.c	FUNCTION_17	IF_1
0x400738c	            0x7528	                           jne 0x40073b6	       997	ops.c	FUNCTION_17	IF_1
0x400738e	    0x833d00000000	               cmp dword [0x04007395], 0	       997	ops.c	FUNCTION_17	IF_1
0x4007395	            0x744a	                            je 0x40073e1	       997	ops.c	FUNCTION_17	IF_1
0x4007397	      0xe800000000	                          call 0x400739c	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400739c	            0x85c0	                           test eax, eax	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400739e	            0x740a	                            je 0x40073aa	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40073a0	      0xbf00000000	                              mov edi, 0	      1000	ops.c	FUNCTION_17	IF_1	CALL_2
0x40073a5	      0xe800000000	                          call 0x40073aa	      1000	ops.c	FUNCTION_17	IF_1	CALL_2
0x40073aa	      0xbf2a000000	                           mov edi, 0x2a	      1001	ops.c	FUNCTION_17	IF_1	CALL_3
0x40073af	      0xe800000000	                          call 0x40073b4	      1001	ops.c	FUNCTION_17	IF_1	CALL_3
0x40073b4	            0xeb2b	                           jmp 0x40073e1	      1001	ops.c	FUNCTION_17	IF_1	CALL_3
0x40073b6	          0x83ff2b	                           cmp edi, 0x2b	      1003	ops.c	FUNCTION_17	IF_3
0x40073b9	            0x7526	                           jne 0x40073e1	      1003	ops.c	FUNCTION_17	IF_3
0x40073bb	    0x833d00000000	               cmp dword [0x040073c2], 0	      1003	ops.c	FUNCTION_17	IF_3
0x40073c2	            0x741d	                            je 0x40073e1	      1003	ops.c	FUNCTION_17	IF_3
0x40073c4	      0xe800000000	                          call 0x40073c9	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40073c9	            0x85c0	                           test eax, eax	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40073cb	            0x740a	                            je 0x40073d7	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40073cd	      0xbf00000000	                              mov edi, 0	      1006	ops.c	FUNCTION_17	IF_3	CALL_5
0x40073d2	      0xe800000000	                          call 0x40073d7	      1006	ops.c	FUNCTION_17	IF_3	CALL_5
0x40073d7	      0xbf2b000000	                           mov edi, 0x2b	      1007	ops.c	FUNCTION_17	IF_3	CALL_6
0x40073dc	      0xe800000000	                          call 0x40073e1	      1007	ops.c	FUNCTION_17	IF_3	CALL_6
0x40073e1	      0xbe00000000	                              mov esi, 0	      1011	ops.c	FUNCTION_17	CALL_7
0x40073e6	            0x89df	                            mov edi, ebx	      1011	ops.c	FUNCTION_17	CALL_7
0x40073e8	      0xe800000000	                          call 0x40073ed	      1011	ops.c	FUNCTION_17	CALL_7
0x40073ed	      0xbf20000000	                           mov edi, 0x20	      1012	ops.c	FUNCTION_17	CALL_8
0x40073f2	      0xe800000000	                          call 0x40073f7	      1012	ops.c	FUNCTION_17	CALL_8
0x40073f7	          0x4889c5	                            mov rbp, rax	      1012	ops.c	FUNCTION_17	CALL_8
0x40073fa	          0x4885c0	                           test rax, rax	      1013	ops.c	FUNCTION_17	IF_5
0x40073fd	     0xf8492000000	                            je 0x4007495	      1013	ops.c	FUNCTION_17	IF_5
0x4007403	    0x488b05000000	            mov rax, qword [0x0400740a] 	      1015	ops.c	FUNCTION_17	IF_5
0x400740a	          0x488b10	                    mov rdx, qword [rax]	      1015	ops.c	FUNCTION_17	IF_5
0x400740d	        0x48895500	                    mov qword [rbp], rdx	      1015	ops.c	FUNCTION_17	IF_5
0x4007411	        0x488b5008	                mov rdx, qword [rax + 8]	      1015	ops.c	FUNCTION_17	IF_5
0x4007415	        0x48895508	                mov qword [rbp + 8], rdx	      1015	ops.c	FUNCTION_17	IF_5
0x4007419	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1015	ops.c	FUNCTION_17	IF_5
0x400741d	        0x48895510	            mov qword [rbp + 0x10], rdx 	      1015	ops.c	FUNCTION_17	IF_5
0x4007421	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1015	ops.c	FUNCTION_17	IF_5
0x4007425	        0x48895518	            mov qword [rbp + 0x18], rdx 	      1015	ops.c	FUNCTION_17	IF_5
0x4007429	          0x4585e4	                         test r12d, r12d	      1016	ops.c	FUNCTION_17	IF_5	IF_6
0x400742c	            0x7460	                            je 0x400748e	      1016	ops.c	FUNCTION_17	IF_5	IF_6
0x400742e	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1019	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x4007432	          0x4885ff	                           test rdi, rdi	      1019	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x4007435	            0x750a	                           jne 0x4007441	      1019	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x4007437	    0x48c745000000	                      mov qword [rbp], 0	      1020	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x400743f	            0xeb54	                           jmp 0x4007495	      1020	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x4007441	          0xc1e703	                              shl edi, 3	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x4007444	      0xe800000000	                          call 0x4007449	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x4007449	        0x48894500	                    mov qword [rbp], rax	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x400744d	          0x4885c0	                           test rax, rax	      1024	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x4007450	            0x7443	                            je 0x4007495	      1024	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x4007452	      0x48837d0800	                  cmp qword [rbp + 8], 0	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x4007457	            0x7e3c	                           jle 0x4007495	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x4007459	      0xbb00000000	                              mov ebx, 0	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400745e	          0x4863c3	                         movsxd rax, ebx	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x4007461	        0x488b5500	                    mov rdx, qword [rbp]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x4007465	        0x4c8d24c2	                  lea r12, [rdx + rax*8]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x4007469	    0x488b15000000	            mov rdx, qword [0x04007470] 	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x4007470	          0x488b12	                    mov rdx, qword [rdx]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x4007473	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x4007477	      0xe800000000	                          call 0x400747c	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x400747c	        0x49890424	                    mov qword [r12], rax	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x4007480	          0x83c301	                              add ebx, 1	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x4007483	          0x4863c3	                         movsxd rax, ebx	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x4007486	        0x483b4508	                cmp rax, qword [rbp + 8]	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400748a	            0x7cd2	                            jl 0x400745e	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400748c	            0xeb07	                           jmp 0x4007495	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400748e	    0x48c700000000	                      mov qword [rax], 0	      1031	ops.c	FUNCTION_17	IF_5	ELSE_2
0x4007495	          0x4889e8	                            mov rax, rbp	      1034	ops.c	FUNCTION_17
0x4007498	              0x5b	                                 pop rbx	      1034	ops.c	FUNCTION_17
0x4007499	              0x5d	                                 pop rbp	      1034	ops.c	FUNCTION_17
0x400749a	            0x415c	                                 pop r12	      1034	ops.c	FUNCTION_17
0x400749c	              0xc3	                                     ret	      1034	ops.c	FUNCTION_17
mb_adjust_opend	CALL,2:ELSE,0:WHILE,0:FOR,0:functions,0:IF,1:SWITCH,0:DO,0	13
0x400092d	        0x837f1400	               cmp dword [rdi + 0x14], 0	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x4000931	            0x7420	                            je 0x4000953	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x4000933	              0x53	                                push rbx	      2114	ops.c	ELSE_6	FUNCTION_34
0x4000934	          0x4889fb	                            mov rbx, rdi	      2114	ops.c	ELSE_6	FUNCTION_34
0x4000937	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	      2119	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x400093b	      0xe800000000	                          call 0x4000940	      2119	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x4000940	        0x48637338	         movsxd rsi, dword [rbx + 0x38] 	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4000944	          0x4801c6	                            add rsi, rax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4000947	          0x4889c7	                            mov rdi, rax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400094a	      0xe800000000	                          call 0x400094f	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400094f	           0x14338	             add dword [rbx + 0x38], eax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4000952	              0x5b	                                 pop rbx	      2122	ops.c	ELSE_6	FUNCTION_34
0x4000953	            0xf3c3	                                     ret	      2122	ops.c	ELSE_6	FUNCTION_34
cmdline_paste_reg	CALL,4:ELSE,0:WHILE,0:FOR,1:functions,0:IF,4:SWITCH,0:DO,0	51
0x40028fd	            0x4154	                                push r12	      1606	ops.c	FUNCTION_29
0x40028ff	              0x55	                                push rbp	      1606	ops.c	FUNCTION_29
0x4002900	              0x53	                                push rbx	      1606	ops.c	FUNCTION_29
0x4002901	            0x89f5	                            mov ebp, esi	      1606	ops.c	FUNCTION_29
0x4002903	          0x4189d4	                           mov r12d, edx	      1606	ops.c	FUNCTION_29
0x4002906	      0xbe00000000	                              mov esi, 0	      1610	ops.c	FUNCTION_29	IF_1	CALL_1
0x400290b	      0xe800000000	                          call 0x4002910	      1610	ops.c	FUNCTION_29	IF_1	CALL_1
0x4002910	            0x85c0	                           test eax, eax	      1610	ops.c	FUNCTION_29	IF_1	CALL_1
0x4002912	      0xb801000000	                              mov eax, 1	      1611	ops.c	FUNCTION_29	IF_1
0x4002917	           0xf45e8	                         cmovne ebp, eax	      1611	ops.c	FUNCTION_29	IF_1
0x400291a	    0x488b05000000	            mov rax, qword [0x04002921] 	      1612	ops.c	FUNCTION_29	IF_2
0x4002921	        0x48833800	                      cmp qword [rax], 0	      1612	ops.c	FUNCTION_29	IF_2
0x4002925	            0x746c	                            je 0x4002993	      1612	ops.c	FUNCTION_29	IF_2
0x4002927	      0x4883780800	                  cmp qword [rax + 8], 0	      1615	ops.c	FUNCTION_29	FOR_1
0x400292c	            0x7e6c	                           jle 0x400299a	      1615	ops.c	FUNCTION_29	FOR_1
0x400292e	      0xbb00000000	                              mov ebx, 0	      1615	ops.c	FUNCTION_29	FOR_1
0x4002933	          0x488b00	                    mov rax, qword [rax]	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4002936	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x400293a	            0x89ee	                            mov esi, ebp	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x400293c	      0xe800000000	                          call 0x4002941	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4002941	    0x488b05000000	            mov rax, qword [0x04002948] 	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002948	        0x80781001	                cmp byte [rax + 0x10], 1	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x400294c	            0x740d	                            je 0x400295b	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x400294e	        0x488b4008	                mov rax, qword [rax + 8]	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002952	        0x4883e801	                              sub rax, 1	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002956	          0x4839d8	                            cmp rax, rbx	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002959	            0x7e11	                           jle 0x400296c	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x400295b	          0x4585e4	                         test r12d, r12d	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x400295e	            0x750c	                           jne 0x400296c	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002960	            0x89ee	                            mov esi, ebp	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x4002962	      0xbf00000000	                              mov edi, 0	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x4002967	      0xe800000000	                          call 0x400296c	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x400296c	      0xe800000000	                          call 0x4002971	      1626	ops.c	FUNCTION_29	FOR_1	CALL_4
0x4002971	    0x8b0500000000	            mov eax, dword [0x04002977] 	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002977	            0x85c0	                           test eax, eax	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002979	            0x7526	                           jne 0x40029a1	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x400297b	        0x4883c301	                              add rbx, 1	      1615	ops.c	FUNCTION_29	FOR_1
0x400297f	    0x488b05000000	            mov rax, qword [0x04002986] 	      1615	ops.c	FUNCTION_29	FOR_1
0x4002986	        0x48395808	                cmp qword [rax + 8], rbx	      1615	ops.c	FUNCTION_29	FOR_1
0x400298a	            0x7fa7	                            jg 0x4002933	      1615	ops.c	FUNCTION_29	FOR_1
0x400298c	      0xb801000000	                              mov eax, 1	      1630	ops.c	FUNCTION_29
0x4002991	            0xeb13	                           jmp 0x40029a6	      1630	ops.c	FUNCTION_29
0x4002993	      0xb800000000	                              mov eax, 0	      1613	ops.c	FUNCTION_29	IF_2
0x4002998	            0xeb0c	                           jmp 0x40029a6	      1613	ops.c	FUNCTION_29	IF_2
0x400299a	      0xb801000000	                              mov eax, 1	      1630	ops.c	FUNCTION_29
0x400299f	            0xeb05	                           jmp 0x40029a6	      1630	ops.c	FUNCTION_29
0x40029a1	      0xb800000000	                              mov eax, 0	      1628	ops.c	FUNCTION_29	FOR_1	IF_4
0x40029a6	              0x5b	                                 pop rbx	      1631	ops.c	FUNCTION_29
0x40029a7	              0x5d	                                 pop rbp	      1631	ops.c	FUNCTION_29
0x40029a8	            0x415c	                                 pop r12	      1631	ops.c	FUNCTION_29
0x40029aa	              0xc3	                                     ret	      1631	ops.c	FUNCTION_29
do_record	CALL,6:ELSE,3:WHILE,0:FOR,0:functions,0:IF,3:SWITCH,0:DO,0	131
0x40024d8	            0x4156	                                push r14	      1088	ops.c	FUNCTION_21
0x40024da	            0x4155	                                push r13	      1088	ops.c	FUNCTION_21
0x40024dc	            0x4154	                                push r12	      1088	ops.c	FUNCTION_21
0x40024de	              0x55	                                push rbp	      1088	ops.c	FUNCTION_21
0x40024df	              0x53	                                push rbx	      1088	ops.c	FUNCTION_21
0x40024e0	    0x833d00000000	               cmp dword [0x040024e7], 0	      1094	ops.c	FUNCTION_21	IF_1
0x40024e7	            0x7548	                           jne 0x4002531	      1094	ops.c	FUNCTION_21	IF_1
0x40024e9	            0x89fb	                            mov ebx, edi	      1094	ops.c	FUNCTION_21	IF_1
0x40024eb	            0x85ff	                           test edi, edi	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40024ed	     0xf88e1010000	                            js 0x40026d4	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40024f3	            0x89f8	                            mov eax, edi	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40024f5	          0x83e0df	                     and eax, 0xffffffdf	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40024f8	          0x83e841	                           sub eax, 0x41	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40024fb	          0x83f819	                           cmp eax, 0x19	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x40024fe	            0x7616	                           jbe 0x4002516	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4002500	          0x8d47d0	                   lea eax, [rdi - 0x30]	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4002503	          0x83f809	                              cmp eax, 9	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4002506	            0x760e	                           jbe 0x4002516	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4002508	      0xb800000000	                              mov eax, 0	      1098	ops.c	FUNCTION_21	IF_1	IF_2
0x400250d	          0x83ff22	                           cmp edi, 0x22	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4002510	     0xf85c3010000	                           jne 0x40026d9	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4002516	    0x891d00000000	            mov dword [0x0400251c], ebx 	      1101	ops.c	FUNCTION_21	IF_1	ELSE_1
0x400251c	      0xe800000000	                          call 0x4002521	      1102	ops.c	FUNCTION_21	IF_1	ELSE_1	CALL_2
0x4002521	    0x891d00000000	            mov dword [0x04002527], ebx 	      1103	ops.c	FUNCTION_21	IF_1	ELSE_1
0x4002527	      0xb801000000	                              mov eax, 1	      1104	ops.c	FUNCTION_21	IF_1	ELSE_1
0x400252c	      0xe9a8010000	                           jmp 0x40026d9	      1104	ops.c	FUNCTION_21	IF_1	ELSE_1
0x4002531	    0xc70500000000	               mov dword [0x0400253b], 0	      1114	ops.c	FUNCTION_21	ELSE_2
0x400253b	      0xbf00000000	                              mov edi, 0	      1115	ops.c	FUNCTION_21	ELSE_2	CALL_3
0x4002540	      0xe800000000	                          call 0x4002545	      1115	ops.c	FUNCTION_21	ELSE_2	CALL_3
0x4002545	      0xe800000000	                          call 0x400254a	      1116	ops.c	FUNCTION_21	ELSE_2	CALL_4
0x400254a	          0x4889c3	                            mov rbx, rax	      1116	ops.c	FUNCTION_21	ELSE_2	CALL_4
0x400254d	      0xb800000000	                              mov eax, 0	      1118	ops.c	FUNCTION_21	ELSE_2	IF_3
0x4002552	          0x4885db	                           test rbx, rbx	      1117	ops.c	FUNCTION_21	ELSE_2	IF_3
0x4002555	     0xf847e010000	                            je 0x40026d9	      1117	ops.c	FUNCTION_21	ELSE_2	IF_3
0x400255b	          0x4889df	                            mov rdi, rbx	      1122	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x400255e	      0xe800000000	                          call 0x4002563	      1122	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x4002563	    0x4c8b2d000000	            mov r13, qword [0x0400256a] 	      1128	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x400256a	    0x4c8b25000000	            mov r12, qword [0x04002571] 	      1129	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4002571	    0x8b2d00000000	            mov ebp, dword [0x04002577] 	      1131	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x4002577	            0x85ed	                           test ebp, ebp	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002579	            0x7439	                            je 0x40025b4	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x400257b	      0xbe01000000	                              mov esi, 1	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002580	            0x89ef	                            mov edi, ebp	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002582	      0xe800000000	                          call 0x4002587	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002587	            0x85c0	                           test eax, eax	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4002589	            0x7512	                           jne 0x400259d	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x400258b	          0x4889df	                            mov rdi, rbx	      1155	ops.c	FUNCTION_22	IF_1	CALL_2
0x400258e	      0xe800000000	                          call 0x4002593	      1155	ops.c	FUNCTION_22	IF_1	CALL_2
0x4002593	      0xb800000000	                              mov eax, 0	      1156	ops.c	FUNCTION_22	IF_1
0x4002598	      0xe927010000	                           jmp 0x40026c4	      1156	ops.c	FUNCTION_22	IF_1
0x400259d	          0x83fd5f	                           cmp ebp, 0x5f	      1158	ops.c	FUNCTION_22	IF_2
0x40025a0	            0x7512	                           jne 0x40025b4	      1158	ops.c	FUNCTION_22	IF_2
0x40025a2	          0x4889df	                            mov rdi, rbx	      1160	ops.c	FUNCTION_22	IF_2	CALL_3
0x40025a5	      0xe800000000	                          call 0x40025aa	      1160	ops.c	FUNCTION_22	IF_2	CALL_3
0x40025aa	      0xb801000000	                              mov eax, 1	      1161	ops.c	FUNCTION_22	IF_2
0x40025af	      0xe910010000	                           jmp 0x40026c4	      1161	ops.c	FUNCTION_22	IF_2
0x40025b4	      0xbe01000000	                              mov esi, 1	      1163	ops.c	FUNCTION_22	CALL_4
0x40025b9	            0x89ef	                            mov edi, ebp	      1163	ops.c	FUNCTION_22	CALL_4
0x40025bb	      0xe800000000	                          call 0x40025c0	      1163	ops.c	FUNCTION_22	CALL_4
0x40025c0	    0x833d00000000	               cmp dword [0x040025c7], 0	      1164	ops.c	FUNCTION_22	IF_3
0x40025c7	     0xf84a1000000	                            je 0x400266e	      1164	ops.c	FUNCTION_22	IF_3
0x40025cd	    0x488b15000000	            mov rdx, qword [0x040025d4] 	      1164	ops.c	FUNCTION_22	IF_3
0x40025d4	          0x488b02	                    mov rax, qword [rdx]	      1164	ops.c	FUNCTION_22	IF_3
0x40025d7	          0x4885c0	                           test rax, rax	      1164	ops.c	FUNCTION_22	IF_3
0x40025da	     0xf848e000000	                            je 0x400266e	      1164	ops.c	FUNCTION_22	IF_3
0x40025e0	        0x488b5208	                mov rdx, qword [rdx + 8]	      1166	ops.c	FUNCTION_22	IF_3
0x40025e4	      0x488d6cd0f8	              lea rbp, [rax + rdx*8 - 8]	      1166	ops.c	FUNCTION_22	IF_3
0x40025e9	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x40025f0	        0x488b7d00	                    mov rdi, qword [rbp]	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x40025f4	      0xb800000000	                              mov eax, 0	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x40025f9	          0x4889f1	                            mov rcx, rsi	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x40025fc	            0xf2ae	              repne scasb al, byte [rdi]	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x40025fe	          0x4889ca	                            mov rdx, rcx	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002601	          0x48f7d2	                                 not rdx	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002604	          0x4889f1	                            mov rcx, rsi	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002607	          0x4889df	                            mov rdi, rbx	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x400260a	            0xf2ae	              repne scasb al, byte [rdi]	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x400260c	          0x4889c8	                            mov rax, rcx	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x400260f	          0x48f7d0	                                 not rax	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002612	      0x488d7c02ff	                lea rdi, [rdx + rax - 1]	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002617	      0xbe01000000	                              mov esi, 1	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x400261c	      0xe800000000	                          call 0x4002621	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002621	          0x4989c6	                            mov r14, rax	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4002624	          0x4885c0	                           test rax, rax	      1168	ops.c	FUNCTION_22	IF_3	IF_4
0x4002627	            0x7512	                           jne 0x400263b	      1168	ops.c	FUNCTION_22	IF_3	IF_4
0x4002629	          0x4889df	                            mov rdi, rbx	      1170	ops.c	FUNCTION_22	IF_3	IF_4	CALL_8
0x400262c	      0xe800000000	                          call 0x4002631	      1170	ops.c	FUNCTION_22	IF_3	IF_4	CALL_8
0x4002631	      0xb800000000	                              mov eax, 0	      1171	ops.c	FUNCTION_22	IF_3	IF_4
0x4002636	      0xe989000000	                           jmp 0x40026c4	      1171	ops.c	FUNCTION_22	IF_3	IF_4
0x400263b	        0x488b7500	                    mov rsi, qword [rbp]	       110	string3.h	FUNCTION_98	CALL_3
0x400263f	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_98	CALL_3
0x4002642	      0xe800000000	                          call 0x4002647	       110	string3.h	FUNCTION_98	CALL_3
0x4002647	          0x4889de	                            mov rsi, rbx	       148	string3.h	FUNCTION_102	CALL_3
0x400264a	          0x4c89f7	                            mov rdi, r14	       148	string3.h	FUNCTION_102	CALL_3
0x400264d	      0xe800000000	                          call 0x4002652	       148	string3.h	FUNCTION_102	CALL_3
0x4002652	          0x4889df	                            mov rdi, rbx	      1175	ops.c	FUNCTION_22	IF_3	CALL_11
0x4002655	      0xe800000000	                          call 0x400265a	      1175	ops.c	FUNCTION_22	IF_3	CALL_11
0x400265a	        0x488b7d00	                    mov rdi, qword [rbp]	      1176	ops.c	FUNCTION_22	IF_3	CALL_12
0x400265e	      0xe800000000	                          call 0x4002663	      1176	ops.c	FUNCTION_22	IF_3	CALL_12
0x4002663	        0x4c897500	                    mov qword [rbp], r14	      1177	ops.c	FUNCTION_22	IF_3
0x4002667	      0xb801000000	                              mov eax, 1	      1195	ops.c	FUNCTION_22
0x400266c	            0xeb56	                           jmp 0x40026c4	      1195	ops.c	FUNCTION_22
0x400266e	      0xe8aaddffff	                  call sym.free_yank_all	      1181	ops.c	FUNCTION_22	ELSE_1	CALL_13
0x4002673	    0x488b2d000000	            mov rbp, qword [0x0400267a] 	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x400267a	      0xbf08000000	                              mov edi, 8	      1183	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_14
0x400267f	      0xe800000000	                          call 0x4002684	      1183	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_14
0x4002684	        0x48894500	                    mov qword [rbp], rax	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4002688	          0x4885c0	                           test rax, rax	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x400268b	            0x750f	                           jne 0x400269c	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x400268d	          0x4889df	                            mov rdi, rbx	      1185	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x4002690	      0xe800000000	                          call 0x4002695	      1185	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x4002695	      0xb800000000	                              mov eax, 0	      1186	ops.c	FUNCTION_22	ELSE_1	IF_5
0x400269a	            0xeb28	                           jmp 0x40026c4	      1186	ops.c	FUNCTION_22	ELSE_1	IF_5
0x400269c	    0x488b2d000000	            mov rbp, qword [0x040026a3] 	      1188	ops.c	FUNCTION_22	ELSE_1
0x40026a3	        0x488b4500	                    mov rax, qword [rbp]	      1188	ops.c	FUNCTION_22	ELSE_1
0x40026a7	          0x488918	                    mov qword [rax], rbx	      1188	ops.c	FUNCTION_22	ELSE_1
0x40026aa	    0x48c745080100	                  mov qword [rbp + 8], 1	      1189	ops.c	FUNCTION_22	ELSE_1
0x40026b2	        0xc6451000	                mov byte [rbp + 0x10], 0	      1190	ops.c	FUNCTION_22	ELSE_1
0x40026b6	      0xe800000000	                          call 0x40026bb	      1192	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x40026bb	        0x48894518	            mov qword [rbp + 0x18], rax 	      1192	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x40026bf	      0xb801000000	                              mov eax, 1	      1195	ops.c	FUNCTION_22
0x40026c4	    0x4c892d000000	            mov qword [0x040026cb], r13 	      1133	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x40026cb	    0x4c8925000000	            mov qword [0x040026d2], r12 	      1134	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x40026d2	            0xeb05	                           jmp 0x40026d9	      1134	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x40026d4	      0xb800000000	                              mov eax, 0	      1098	ops.c	FUNCTION_21	IF_1	IF_2
0x40026d9	              0x5b	                                 pop rbx	      1138	ops.c	FUNCTION_21
0x40026da	              0x5d	                                 pop rbp	      1138	ops.c	FUNCTION_21
0x40026db	            0x415c	                                 pop r12	      1138	ops.c	FUNCTION_21
0x40026dd	            0x415d	                                 pop r13	      1138	ops.c	FUNCTION_21
0x40026df	            0x415e	                                 pop r14	      1138	ops.c	FUNCTION_21
0x40026e1	              0xc3	                                     ret	      1138	ops.c	FUNCTION_21
op_insert	CALL,28:ELSE,3:WHILE,1:FOR,1:functions,0:IF,25:SWITCH,0:DO,0	512
0x40038fa	            0x4157	                                push r15	      2611	ops.c	FUNCTION_39
0x40038fc	            0x4156	                                push r14	      2611	ops.c	FUNCTION_39
0x40038fe	            0x4155	                                push r13	      2611	ops.c	FUNCTION_39
0x4003900	            0x4154	                                push r12	      2611	ops.c	FUNCTION_39
0x4003902	              0x55	                                push rbp	      2611	ops.c	FUNCTION_39
0x4003903	              0x53	                                push rbx	      2611	ops.c	FUNCTION_39
0x4003904	    0x4881ecd80000	                           sub rsp, 0xd8	      2611	ops.c	FUNCTION_39
0x400390b	          0x4989ff	                            mov r15, rdi	      2611	ops.c	FUNCTION_39
0x400390e	          0x4889f5	                            mov rbp, rsi	      2611	ops.c	FUNCTION_39
0x4003911	    0x64488b042528	                mov rax, qword fs:[0x28]	      2611	ops.c	FUNCTION_39
0x400391a	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      2611	ops.c	FUNCTION_39
0x4003922	            0x31c0	                            xor eax, eax	      2611	ops.c	FUNCTION_39
0x4003924	    0x488b05000000	            mov rax, qword [0x0400392b] 	      2620	ops.c	FUNCTION_39
0x400392b	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      2620	ops.c	FUNCTION_39
0x4003932	           0xf94c2	                                 sete dl	      2620	ops.c	FUNCTION_39
0x4003935	           0xfb6d2	                           movzx edx, dl	      2620	ops.c	FUNCTION_39
0x4003938	        0x89542468	             mov dword [rsp + 0x68], edx	      2620	ops.c	FUNCTION_39
0x400393c	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      2623	ops.c	FUNCTION_39
0x4003940	        0x48895038	             mov qword [rax + 0x38], rdx	      2623	ops.c	FUNCTION_39
0x4003944	      0xbf14000000	                           mov edi, 0x14	      2624	ops.c	FUNCTION_39	CALL_1
0x4003949	      0xe800000000	                          call 0x400394e	      2624	ops.c	FUNCTION_39	CALL_1
0x400394e	      0x41837f6000	               cmp dword [r15 + 0x60], 0	      2626	ops.c	FUNCTION_39	IF_1
0x4003953	     0xf8448070000	                            je 0x40040a1	      2626	ops.c	FUNCTION_39	IF_1
0x4003959	    0x488b05000000	            mov rax, qword [0x04003960] 	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x4003960	        0x83784400	               cmp dword [rax + 0x44], 0	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x4003964	            0x7e4f	                           jle 0x40039b5	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x4003966	    0x8b1d00000000	            mov ebx, dword [0x0400396c] 	      2635	ops.c	FUNCTION_39	IF_1	IF_2
0x400396c	    0xc70500000000	               mov dword [0x04003976], 4	      2637	ops.c	FUNCTION_39	IF_1	IF_2
0x4003976	      0xe800000000	                          call 0x400397b	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x400397b	            0x85c0	                           test eax, eax	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x400397d	     0xf84ae070000	                            je 0x4004131	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4003983	        0x41833f12	                   cmp dword [r15], 0x12	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4003987	            0x7509	                           jne 0x4003992	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4003989	        0x418b4768	            mov eax, dword [r15 + 0x68] 	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x400398d	          0x8d7801	                      lea edi, [rax + 1]	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4003990	            0xeb07	                           jmp 0x4003999	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4003992	      0xe800000000	                          call 0x4003997	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4003997	            0x89c7	                            mov edi, eax	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4003999	      0xe800000000	                          call 0x400399e	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x400399e	        0x41833f12	                   cmp dword [r15], 0x12	      2642	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x40039a2	            0x750b	                           jne 0x40039af	      2642	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x40039a4	    0x488b05000000	            mov rax, qword [0x040039ab] 	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x40039ab	        0x83684001	               sub dword [rax + 0x40], 1	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x40039af	    0x891d00000000	            mov dword [0x040039b5], ebx 	      2644	ops.c	FUNCTION_39	IF_1	IF_2
0x40039b5	        0x498b5720	            mov rdx, qword [r15 + 0x20] 	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x40039b9	      0xb901000000	                              mov ecx, 1	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x40039be	      0x488d742440	                   lea rsi, [rsp + 0x40]	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x40039c3	          0x4c89ff	                            mov rdi, r15	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x40039c6	      0xe8b5c6ffff	                     call sym.block_prep	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x40039cb	      0xe800000000	                          call 0x40039d0	      2650	ops.c	FUNCTION_39	IF_1	CALL_6
0x40039d0	        0x89442408	                mov dword [rsp + 8], eax	      2650	ops.c	FUNCTION_39	IF_1	CALL_6
0x40039d4	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x40039d8	      0xe800000000	                          call 0x40039dd	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x40039dd	      0x4863542458	         movsxd rdx, dword [rsp + 0x58] 	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x40039e2	        0x488d3c10	                    lea rdi, [rax + rdx]	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x40039e6	        0x41833f12	                   cmp dword [r15], 0x12	      2653	ops.c	FUNCTION_39	IF_1	IF_5
0x40039ea	     0xf85e8060000	                           jne 0x40040d8	      2653	ops.c	FUNCTION_39	IF_1	IF_5
0x40039f0	      0x4863442448	         movsxd rax, dword [rsp + 0x48] 	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40039f5	        0x488d3c07	                    lea rdi, [rdi + rax]	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40039f9	      0xb800000000	                              mov eax, 0	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40039fe	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4003a05	            0xf2ae	              repne scasb al, byte [rdi]	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4003a07	          0x4889cb	                            mov rbx, rcx	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4003a0a	          0x48f7d3	                                 not rbx	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4003a0d	        0x488d5bff	                      lea rbx, [rbx - 1]	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4003a11	      0x41837f6000	               cmp dword [r15 + 0x60], 0	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x4003a16	     0xf849b000000	                            je 0x4003ab7	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x4003a1c	    0x488b05000000	            mov rax, qword [0x04003a23] 	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x4003a23	        0x83784400	               cmp dword [rax + 0x44], 0	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x4003a27	     0xf858a000000	                           jne 0x4003ab7	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x4003a2d	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2667	ops.c	FUNCTION_39	IF_6	IF_7
0x4003a34	            0xeb06	                           jmp 0x4003a3c	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4003a36	          0x83c001	                              add eax, 1	      2670	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4003a39	          0x894140	             mov dword [rcx + 0x40], eax	      2670	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4003a3c	      0xe800000000	                          call 0x4003a41	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4003a41	          0x803800	                       cmp byte [rax], 0	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4003a44	            0x7416	                            je 0x4003a5c	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4003a46	    0x488b0d000000	            mov rcx, qword [0x04003a4d] 	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4003a4d	          0x8b4140	            mov eax, dword [rcx + 0x40] 	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4003a50	        0x8b542448	            mov edx, dword [rsp + 0x48] 	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4003a54	         0x3542458	             add edx, dword [rsp + 0x58]	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4003a58	            0x39d0	                            cmp eax, edx	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4003a5a	            0x7cda	                            jl 0x4003a36	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4003a5c	      0x837c246400	               cmp dword [rsp + 0x64], 0	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4003a61	     0xf8490000000	                            je 0x4003af7	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4003a67	      0x837c246800	               cmp dword [rsp + 0x68], 0	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4003a6c	     0xf8585000000	                           jne 0x4003af7	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4003a72	      0xe800000000	                          call 0x4003a77	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x4003a77	            0x85c0	                           test eax, eax	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x4003a79	     0xf84b2060000	                            je 0x4004131	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x4003a7f	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4003a83	            0x85c0	                           test eax, eax	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4003a85	            0x7e1d	                           jle 0x4003aa4	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4003a87	    0x41bc00000000	                             mov r12d, 0	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4003a8d	      0xbf20000000	                           mov edi, 0x20	      2678	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	CALL_11
0x4003a92	      0xe800000000	                          call 0x4003a97	      2678	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	CALL_11
0x4003a97	        0x4183c401	                             add r12d, 1	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4003a9b	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4003a9f	          0x4439e0	                           cmp eax, r12d	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4003aa2	            0x7fe9	                            jg 0x4003a8d	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4003aa4	         0x1442448	             add dword [rsp + 0x48], eax	      2679	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4003aa8	            0xeb4d	                           jmp 0x4003af7	      2679	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4003aaa	    0xc74424080000	                  mov dword [rsp + 8], 0	      2614	ops.c	FUNCTION_39
0x4003ab2	      0xbb00000000	                              mov ebx, 0	      2612	ops.c	FUNCTION_39
0x4003ab7	        0x498b7730	            mov rsi, qword [r15 + 0x30] 	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4003abb	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4003abf	    0x488b05000000	            mov rax, qword [0x04003ac6] 	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4003ac6	        0x48897038	             mov qword [rax + 0x38], rsi	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4003aca	        0x48897840	             mov qword [rax + 0x40], rdi	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4003ace	      0xe800000000	                          call 0x4003ad3	      2685	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_12
0x4003ad3	    0x488b05000000	            mov rax, qword [0x04003ada] 	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4003ada	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4003ade	      0xe800000000	                          call 0x4003ae3	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4003ae3	          0x803800	                       cmp byte [rax], 0	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4003ae6	            0x740f	                            je 0x4003af7	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4003ae8	        0x418b4768	            mov eax, dword [r15 + 0x68] 	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4003aec	        0x41394764	            cmp dword [r15 + 0x64], eax 	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4003af0	            0x7405	                            je 0x4003af7	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4003af2	      0xe800000000	                          call 0x4003af7	      2690	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_14
0x4003af7	        0x4d8b6720	            mov r12, qword [r15 + 0x20] 	      2694	ops.c	FUNCTION_39
0x4003afb	        0x458b6f28	           mov r13d, dword [r15 + 0x28] 	      2694	ops.c	FUNCTION_39
0x4003aff	        0x458b772c	           mov r14d, dword [r15 + 0x2c] 	      2694	ops.c	FUNCTION_39
0x4003b03	          0x4889ea	                            mov rdx, rbp	      2695	ops.c	FUNCTION_39	CALL_15
0x4003b06	      0xbe00000000	                              mov esi, 0	      2695	ops.c	FUNCTION_39	CALL_15
0x4003b0b	      0xbf00000000	                              mov edi, 0	      2695	ops.c	FUNCTION_39	CALL_15
0x4003b10	      0xe800000000	                          call 0x4003b15	      2695	ops.c	FUNCTION_39	CALL_15
0x4003b15	    0x488b05000000	            mov rax, qword [0x04003b1c] 	      2700	ops.c	FUNCTION_39	IF_11
0x4003b1c	    0x4c39a0f01100	          cmp qword [rax + 0x11f0], r12 	      2700	ops.c	FUNCTION_39	IF_11
0x4003b23	            0x7537	                           jne 0x4003b5c	      2700	ops.c	FUNCTION_39	IF_11
0x4003b25	    0x8b90f8110000	          mov edx, dword [rax + 0x11f8] 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4003b2b	          0x4439ea	                           cmp edx, r13d	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4003b2e	            0x7408	                            je 0x4003b38	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4003b30	          0x4439ea	                           cmp edx, r13d	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4003b33	           0xf9cc2	                                 setl dl	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4003b36	            0xeb0a	                           jmp 0x4003b42	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4003b38	    0x4439b0fc1100	         cmp dword [rax + 0x11fc], r14d 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4003b3f	           0xf9cc2	                                 setl dl	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4003b42	            0x84d2	                             test dl, dl	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4003b44	            0x7416	                            je 0x4003b5c	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4003b46	    0x488b90f81100	          mov rdx, qword [rax + 0x11f8] 	      2702	ops.c	FUNCTION_39	IF_11
0x4003b4d	    0x488b80f01100	          mov rax, qword [rax + 0x11f0] 	      2702	ops.c	FUNCTION_39	IF_11
0x4003b54	        0x49894720	             mov qword [r15 + 0x20], rax	      2702	ops.c	FUNCTION_39	IF_11
0x4003b58	        0x49895728	             mov qword [r15 + 0x28], rdx	      2702	ops.c	FUNCTION_39	IF_11
0x4003b5c	    0x488b05000000	            mov rax, qword [0x04003b63] 	      2707	ops.c	FUNCTION_39	IF_12
0x4003b63	        0x498b7720	            mov rsi, qword [r15 + 0x20] 	      2707	ops.c	FUNCTION_39	IF_12
0x4003b67	        0x48397038	            cmp qword [rax + 0x38], rsi 	      2707	ops.c	FUNCTION_39	IF_12
0x4003b6b	     0xf85c0050000	                           jne 0x4004131	      2707	ops.c	FUNCTION_39	IF_12
0x4003b71	    0x8b0500000000	            mov eax, dword [0x04003b77] 	      2707	ops.c	FUNCTION_39	IF_12
0x4003b77	            0x85c0	                           test eax, eax	      2707	ops.c	FUNCTION_39	IF_12
0x4003b79	     0xf85b2050000	                           jne 0x4004131	      2707	ops.c	FUNCTION_39	IF_12
0x4003b7f	      0x41837f6000	               cmp dword [r15 + 0x60], 0	      2710	ops.c	FUNCTION_39	IF_13
0x4003b84	     0xf84a7050000	                            je 0x4004131	      2710	ops.c	FUNCTION_39	IF_13
0x4003b8a	      0xe800000000	                          call 0x4003b8f	      2719	ops.c	FUNCTION_39	IF_13	CALL_17
0x4003b8f	    0x488b15000000	            mov rdx, qword [0x04003b96] 	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4003b96	        0x8b742408	                mov esi, dword [rsp + 8]	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4003b9a	    0x39b2e8110000	          cmp dword [rdx + 0x11e8], esi 	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4003ba0	            0x7e15	                           jle 0x4003bb7	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4003ba2	            0x39f0	                            cmp eax, esi	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4003ba4	            0x7e11	                           jle 0x4003bb7	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4003ba6	            0x29f0	                            sub eax, esi	      2722	ops.c	FUNCTION_39	IF_13	IF_14
0x4003ba8	         0x1442458	             add dword [rsp + 0x58], eax	      2722	ops.c	FUNCTION_39	IF_13	IF_14
0x4003bac	         0x144245c	             add dword [rsp + 0x5c], eax	      2723	ops.c	FUNCTION_39	IF_13	IF_14
0x4003bb0	      0xb801000000	                              mov eax, 1	      2724	ops.c	FUNCTION_39	IF_13	IF_14
0x4003bb5	            0xeb05	                           jmp 0x4003bbc	      2724	ops.c	FUNCTION_39	IF_13	IF_14
0x4003bb7	      0xb800000000	                              mov eax, 0	      2713	ops.c	FUNCTION_39	IF_13
0x4003bbc	    0x488bb2f01100	          mov rsi, qword [rdx + 0x11f0] 	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x4003bc3	        0x49397720	            cmp qword [r15 + 0x20], rsi 	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x4003bc7	     0xf85aa000000	                           jne 0x4003c77	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x4003bcd	         0xb442468	              or eax, dword [rsp + 0x68]	      2731	ops.c	FUNCTION_39	IF_13	IF_15
0x4003bd1	     0xf85a0000000	                           jne 0x4003c77	      2731	ops.c	FUNCTION_39	IF_13	IF_15
0x4003bd7	          0x418b07	                    mov eax, dword [r15]	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003bda	          0x83f811	                           cmp eax, 0x11	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003bdd	            0x7543	                           jne 0x4003c22	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003bdf	    0x8bbaf8110000	          mov edi, dword [rdx + 0x11f8] 	      2738	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003be5	    0x8bb2fc110000	          mov esi, dword [rdx + 0x11fc] 	      2740	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003beb	        0x418b472c	            mov eax, dword [r15 + 0x2c] 	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003bef	        0x41034728	             add eax, dword [r15 + 0x28]	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003bf3	          0x8d1437	                    lea edx, [rdi + rsi]	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003bf6	            0x39d0	                            cmp eax, edx	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003bf8	            0x747d	                            je 0x4003c77	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003bfa	      0xe800000000	                          call 0x4003bff	      2744	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x4003bff	    0x488b15000000	            mov rdx, qword [0x04003c06] 	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003c06	    0x8b92f8110000	          mov edx, dword [rdx + 0x11f8] 	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003c0c	        0x41895728	             mov dword [r15 + 0x28], edx	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003c10	            0x89c2	                            mov edx, eax	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003c12	        0x412b5764	             sub edx, dword [r15 + 0x64]	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003c16	          0x4863d2	                         movsxd rdx, edx	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003c19	          0x4829d3	                            sub rbx, rdx	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003c1c	        0x41894764	             mov dword [r15 + 0x64], eax	      2748	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003c20	            0xeb55	                           jmp 0x4003c77	      2743	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4003c22	          0x83f812	                           cmp eax, 0x12	      2750	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c25	            0x7550	                           jne 0x4003c77	      2750	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c27	    0x8bbaf8110000	          mov edi, dword [rdx + 0x11f8] 	      2755	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c2d	    0x8bb2fc110000	          mov esi, dword [rdx + 0x11fc] 	      2757	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c33	        0x418b473c	            mov eax, dword [r15 + 0x3c] 	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c37	        0x41034738	             add eax, dword [r15 + 0x38]	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c3b	          0x8d1437	                    lea edx, [rdi + rsi]	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c3e	            0x39d0	                            cmp eax, edx	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c40	            0x7c35	                            jl 0x4003c77	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c42	      0xe800000000	                          call 0x4003c47	      2761	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x4003c47	    0x488b15000000	            mov rdx, qword [0x04003c4e] 	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c4e	    0x8b92f8110000	          mov edx, dword [rdx + 0x11f8] 	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c54	        0x41895728	             mov dword [r15 + 0x28], edx	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c58	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	      2765	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c5d	          0x4801d3	                            add rbx, rdx	      2765	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c60	            0x89c2	                            mov edx, eax	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c62	        0x412b5764	             sub edx, dword [r15 + 0x64]	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c66	          0x4863d2	                         movsxd rdx, edx	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c69	          0x4829d3	                            sub rbx, rdx	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c6c	        0x41894764	             mov dword [r15 + 0x64], eax	      2767	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c70	    0x41c707110000	                   mov dword [r15], 0x11	      2768	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4003c77	        0x498b5720	            mov rdx, qword [r15 + 0x20] 	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x4003c7b	      0xb901000000	                              mov ecx, 1	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x4003c80	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x4003c88	          0x4c89ff	                            mov rdi, r15	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x4003c8b	      0xe8f0c3ffff	                     call sym.block_prep	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x4003c90	      0x837c246800	               cmp dword [rsp + 0x68], 0	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4003c95	            0x740d	                            je 0x4003ca4	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4003c97	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4003c9b	    0x398424880000	            cmp dword [rsp + 0x88], eax 	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4003ca2	            0x7d42	                           jge 0x4003ce6	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4003ca4	        0x41833f12	                   cmp dword [r15], 0x12	      2780	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4003ca8	            0x7526	                           jne 0x4003cd0	      2780	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4003caa	    0x8b9424880000	            mov edx, dword [rsp + 0x88] 	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4003cb1	            0x89d0	                            mov eax, edx	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4003cb3	        0x2b442448	             sub eax, dword [rsp + 0x48]	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4003cb7	            0x4898	                                    cdqe	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4003cb9	          0x4801c3	                            add rbx, rax	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4003cbc	    0x83bc24840000	               cmp dword [rsp + 0x84], 0	      2783	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4003cc4	            0x740a	                            je 0x4003cd0	      2783	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4003cc6	          0x83ea01	                              sub edx, 1	      2784	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4003cc9	    0x899424880000	             mov dword [rsp + 0x88], edx	      2784	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4003cd0	    0x8b8424980000	            mov eax, dword [rsp + 0x98] 	      2786	ops.c	FUNCTION_39	IF_13	IF_18
0x4003cd7	        0x89442458	             mov dword [rsp + 0x58], eax	      2786	ops.c	FUNCTION_39	IF_13	IF_18
0x4003cdb	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      2787	ops.c	FUNCTION_39	IF_13	IF_18
0x4003ce2	        0x89442448	             mov dword [rsp + 0x48], eax	      2787	ops.c	FUNCTION_39	IF_13	IF_18
0x4003ce6	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x4003cea	      0xe800000000	                          call 0x4003cef	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x4003cef	          0x4889c2	                            mov rdx, rax	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x4003cf2	      0xb800000000	                              mov eax, 0	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x4003cf7	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x4003cfe	          0x4889d7	                            mov rdi, rdx	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x4003d01	            0xf2ae	              repne scasb al, byte [rdi]	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x4003d03	          0x4889c8	                            mov rax, rcx	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x4003d06	          0x48f7d0	                                 not rax	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x4003d09	        0x4883e801	                              sub rax, 1	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x4003d0d	        0x8b4c2458	            mov ecx, dword [rsp + 0x58] 	      2796	ops.c	FUNCTION_39	IF_13
0x4003d11	        0x41833f12	                   cmp dword [r15], 0x12	      2797	ops.c	FUNCTION_39	IF_13	IF_21
0x4003d15	            0x7504	                           jne 0x4003d1b	      2797	ops.c	FUNCTION_39	IF_13	IF_21
0x4003d17	         0x34c2448	             add ecx, dword [rsp + 0x48]	      2798	ops.c	FUNCTION_39	IF_13	IF_21
0x4003d1b	          0x4863c9	                         movsxd rcx, ecx	      2799	ops.c	FUNCTION_39	IF_13	IF_22
0x4003d1e	        0x488d3402	                    lea rsi, [rdx + rax]	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x4003d22	          0x4801ca	                            add rdx, rcx	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x4003d25	          0x4839c8	                            cmp rax, rcx	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x4003d28	        0x480f42d6	                          cmovb rdx, rsi	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x4003d2c	          0x4885db	                           test rbx, rbx	      2803	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23
0x4003d2f	     0xf88fc030000	                            js 0x4004131	      2803	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23
0x4003d35	      0xb800000000	                              mov eax, 0	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4003d3a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4003d41	          0x4889d7	                            mov rdi, rdx	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4003d44	            0xf2ae	              repne scasb al, byte [rdi]	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4003d46	          0x4889ce	                            mov rsi, rcx	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4003d49	          0x48f7d6	                                 not rsi	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4003d4c	        0x488d76ff	                      lea rsi, [rsi - 1]	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4003d50	          0x4829de	                            sub rsi, rbx	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4003d53	          0x4885f6	                           test rsi, rsi	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4003d56	     0xf8ed5030000	                           jle 0x4004131	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4003d5c	          0x4889d7	                            mov rdi, rdx	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x4003d5f	      0xe800000000	                          call 0x4003d64	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x4003d64	      0x4889442408	                mov qword [rsp + 8], rax	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x4003d69	          0x4885c0	                           test rax, rax	      2807	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x4003d6c	     0xf84bf030000	                            je 0x4004131	      2807	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x4003d72	        0x498b4730	            mov rax, qword [r15 + 0x30] 	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4003d76	        0x488d7001	                      lea rsi, [rax + 1]	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4003d7a	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4003d7e	      0xe800000000	                          call 0x4003d83	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4003d83	          0x83f801	                              cmp eax, 1	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4003d86	     0xf85f3020000	                           jne 0x400407f	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4003d8c	          0x418b07	                    mov eax, dword [r15]	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x4003d8f	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x4003d93	    0x8b0500000000	            mov eax, dword [0x04003d99] 	       589	ops.c	FUNCTION_8
0x4003d99	        0x8944243c	             mov dword [rsp + 0x3c], eax	       589	ops.c	FUNCTION_8
0x4003d9d	    0xc70500000000	           mov dword [0x04003da7], 0x10 	       591	ops.c	FUNCTION_8
0x4003da7	      0xb800000000	                              mov eax, 0	       592	ops.c	FUNCTION_8	CALL_1
0x4003dac	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       592	ops.c	FUNCTION_8	CALL_1
0x4003db3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       592	ops.c	FUNCTION_8	CALL_1
0x4003db8	            0xf2ae	              repne scasb al, byte [rdi]	       592	ops.c	FUNCTION_8	CALL_1
0x4003dba	          0x4889c8	                            mov rax, rcx	       592	ops.c	FUNCTION_8	CALL_1
0x4003dbd	          0x48f7d0	                                 not rax	       592	ops.c	FUNCTION_8	CALL_1
0x4003dc0	        0x488d50ff	                      lea rdx, [rax - 1]	       592	ops.c	FUNCTION_8	CALL_1
0x4003dc4	        0x89542438	             mov dword [rsp + 0x38], edx	       592	ops.c	FUNCTION_8	CALL_1
0x4003dc8	        0x498b4720	            mov rax, qword [r15 + 0x20] 	       594	ops.c	FUNCTION_8	FOR_1
0x4003dcc	        0x488d5801	                      lea rbx, [rax + 1]	       594	ops.c	FUNCTION_8	FOR_1
0x4003dd0	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       594	ops.c	FUNCTION_8	FOR_1
0x4003dd4	          0x4839c3	                            cmp rbx, rax	       594	ops.c	FUNCTION_8	FOR_1
0x4003dd7	     0xf8f7d020000	                            jg 0x400405a	       594	ops.c	FUNCTION_8	FOR_1
0x4003ddd	    0x41be00000000	                             mov r14d, 0	       594	ops.c	FUNCTION_8	FOR_1
0x4003de3	    0xc74424140000	               mov dword [rsp + 0x14], 0	       594	ops.c	FUNCTION_8	FOR_1
0x4003deb	            0x89d0	                            mov eax, edx	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003ded	          0x83c001	                              add eax, 1	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003df0	        0x8944242c	             mov dword [rsp + 0x2c], eax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003df4	            0x89d0	                            mov eax, edx	        59	string3.h	FUNCTION_93	CALL_3
0x4003df6	      0x4889442430	             mov qword [rsp + 0x30], rax	        59	string3.h	FUNCTION_93	CALL_3
0x4003dfb	      0xb901000000	                              mov ecx, 1	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4003e00	          0x4889da	                            mov rdx, rbx	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4003e03	      0x488d742440	                   lea rsi, [rsp + 0x40]	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4003e08	          0x4c89ff	                            mov rdi, r15	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4003e0b	      0xe870c2ffff	                     call sym.block_prep	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4003e10	      0x837c246400	               cmp dword [rsp + 0x64], 0	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4003e15	            0x740b	                            je 0x4003e22	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4003e17	      0x837c241c11	           cmp dword [rsp + 0x1c], 0x11 	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4003e1c	     0xf8427020000	                            je 0x4004049	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4003e22	          0x4889df	                            mov rdi, rbx	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4003e25	      0xe800000000	                          call 0x4003e2a	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4003e2a	          0x4889c5	                            mov rbp, rax	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4003e2d	      0x837c241c11	           cmp dword [rsp + 0x1c], 0x11 	       602	ops.c	FUNCTION_8	FOR_1	IF_2
0x4003e32	            0x753c	                           jne 0x4003e70	       602	ops.c	FUNCTION_8	FOR_1	IF_2
0x4003e34	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0x4003e38	        0x89442428	             mov dword [rsp + 0x28], eax	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0x4003e3c	      0x448b742440	           mov r14d, dword [rsp + 0x40] 	       605	ops.c	FUNCTION_8	FOR_1	IF_2
0x4003e41	          0x4585f6	                         test r14d, r14d	       606	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4003e44	     0xf84da020000	                            je 0x4004124	       606	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4003e4a	          0x83e801	                              sub eax, 1	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4003e4d	        0x89442414	             mov dword [rsp + 0x14], eax	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4003e51	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4003e55	        0x89442418	             mov dword [rsp + 0x18], eax	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4003e59	    0x833d00000000	               cmp dword [0x04003e60], 0	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4003e60	     0xf84bc000000	                            je 0x4003f22	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4003e66	          0x4585f6	                         test r14d, r14d	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4003e69	            0x7f7b	                            jg 0x4003ee6	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4003e6b	      0xe9b2000000	                           jmp 0x4003f22	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4003e70	        0x8b442478	            mov eax, dword [rsp + 0x78] 	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0x4003e74	            0x89c6	                            mov esi, eax	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0x4003e76	        0x89442428	             mov dword [rsp + 0x28], eax	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0x4003e7a	      0x837c246400	               cmp dword [rsp + 0x64], 0	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003e7f	            0x753b	                           jne 0x4003ebc	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003e81	        0x8b442444	            mov eax, dword [rsp + 0x44] 	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003e85	    0x41be00000000	                             mov r14d, 0	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003e8b	            0x85c0	                           test eax, eax	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003e8d	            0x7411	                            je 0x4003ea0	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003e8f	          0x4189f6	                           mov r14d, esi	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4003e92	          0x4129c6	                           sub r14d, eax	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4003e95	            0x7409	                            je 0x4003ea0	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4003e97	            0x89f0	                            mov eax, esi	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4003e99	          0x83e801	                              sub eax, 1	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4003e9c	        0x89442414	             mov dword [rsp + 0x14], eax	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4003ea0	        0x8b442448	            mov eax, dword [rsp + 0x48] 	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003ea4	         0x3442458	             add eax, dword [rsp + 0x58]	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003ea8	          0x4585f6	                         test r14d, r14d	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003eab	           0xf95c2	                                setne dl	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003eae	           0xfb6d2	                           movzx edx, dl	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003eb1	            0x29d0	                            sub eax, edx	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003eb3	        0x89442418	             mov dword [rsp + 0x18], eax	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003eb7	      0xe901020000	                           jmp 0x40040bd	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4003ebc	      0x837c246800	               cmp dword [rsp + 0x68], 0	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4003ec1	            0x750d	                           jne 0x4003ed0	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4003ec3	        0x458b7768	           mov r14d, dword [r15 + 0x68] 	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4003ec7	      0x442b742460	            sub r14d, dword [rsp + 0x60]	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4003ecc	        0x4183c601	                             add r14d, 1	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4003ed0	        0x8b442448	            mov eax, dword [rsp + 0x48] 	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4003ed4	         0x3442458	             add eax, dword [rsp + 0x58]	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4003ed8	        0x89442418	             mov dword [rsp + 0x18], eax	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4003edc	      0x4489742414	            mov dword [rsp + 0x14], r14d	       625	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4003ee1	      0xe9d7010000	                           jmp 0x40040bd	       625	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4003ee6	      0x4863742418	         movsxd rsi, dword [rsp + 0x18] 	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4003eeb	          0x4963c6	                        movsxd rax, r14d	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4003eee	          0x4801c6	                            add rsi, rax	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4003ef1	          0x4801ee	                            add rsi, rbp	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4003ef4	          0x4889ef	                            mov rdi, rbp	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4003ef7	    0xff1500000000	                 call qword [0x04003efd]	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4003efd	            0xeb1c	                           jmp 0x4003f1b	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4003eff	      0x448b6c2418	           mov r13d, dword [rsp + 0x18] 	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4003f04	          0x4963f5	                        movsxd rsi, r13d	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4003f07	          0x4801ee	                            add rsi, rbp	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4003f0a	          0x4889ef	                            mov rdi, rbp	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4003f0d	      0xe800000000	                          call 0x4003f12	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4003f12	          0x4489ee	                           mov esi, r13d	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4003f15	             0x1c6	                            add esi, eax	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4003f17	        0x89742418	             mov dword [rsp + 0x18], esi	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4003f1b	          0x4129c6	                           sub r14d, eax	       645	ops.c	FUNCTION_8	FOR_1	IF_7
0x4003f1e	        0x29442414	             sub dword [rsp + 0x14], eax	       646	ops.c	FUNCTION_8	FOR_1	IF_7
0x4003f22	      0xb800000000	                              mov eax, 0	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003f27	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003f2e	          0x4889ef	                            mov rdi, rbp	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003f31	            0xf2ae	              repne scasb al, byte [rdi]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003f33	          0x4889c8	                            mov rax, rcx	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003f36	          0x48f7d0	                                 not rax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003f39	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003f3d	        0x8d7c06ff	                lea edi, [rsi + rax - 1]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003f41	         0x37c2414	             add edi, dword [rsp + 0x14]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003f45	      0xe800000000	                          call 0x4003f4a	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003f4a	          0x4989c5	                            mov r13, rax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4003f4d	          0x4885c0	                           test rax, rax	       651	ops.c	FUNCTION_8	FOR_1	IF_9
0x4003f50	     0xf84f3000000	                            je 0x4004049	       651	ops.c	FUNCTION_8	FOR_1	IF_9
0x4003f56	      0x4c63642418	         movsxd r12, dword [rsp + 0x18] 	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0x4003f5b	          0x4c89e2	                            mov rdx, r12	        59	string3.h	FUNCTION_93	CALL_3
0x4003f5e	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x4003f61	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x4003f64	      0xe800000000	                          call 0x4003f69	        59	string3.h	FUNCTION_93	CALL_3
0x4003f69	      0x4a8d742500	                    lea rsi, [rbp + r12]	       656	ops.c	FUNCTION_8	FOR_1
0x4003f6e	      0x4889742420	             mov qword [rsp + 0x20], rsi	       656	ops.c	FUNCTION_8	FOR_1
0x4003f73	          0x4963ee	                        movsxd rbp, r14d	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4003f76	      0x4b8d7c2500	                    lea rdi, [r13 + r12]	        90	string3.h	FUNCTION_95	CALL_6
0x4003f7b	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4003f7e	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4003f83	      0xe800000000	                          call 0x4003f88	        90	string3.h	FUNCTION_95	CALL_6
0x4003f88	        0x498d3c2c	                    lea rdi, [r12 + rbp]	        59	string3.h	FUNCTION_93	CALL_3
0x4003f8c	          0x4c01ef	                            add rdi, r13	        59	string3.h	FUNCTION_93	CALL_3
0x4003f8f	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        59	string3.h	FUNCTION_93	CALL_3
0x4003f94	      0x488b742408	                mov rsi, qword [rsp + 8]	        59	string3.h	FUNCTION_93	CALL_3
0x4003f99	      0xe800000000	                          call 0x4003f9e	        59	string3.h	FUNCTION_93	CALL_3
0x4003f9e	      0x448b642418	           mov r12d, dword [rsp + 0x18] 	       663	ops.c	FUNCTION_8	FOR_1
0x4003fa3	      0x4403642438	            add r12d, dword [rsp + 0x38]	       663	ops.c	FUNCTION_8	FOR_1
0x4003fa8	      0x4489642418	            mov dword [rsp + 0x18], r12d	       663	ops.c	FUNCTION_8	FOR_1
0x4003fad	          0x4585f6	                         test r14d, r14d	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4003fb0	            0x743e	                            je 0x4003ff0	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4003fb2	      0x837c246400	               cmp dword [rsp + 0x64], 0	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4003fb7	            0x7528	                           jne 0x4003fe1	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4003fb9	        0x8b542428	            mov edx, dword [rsp + 0x28] 	        90	string3.h	FUNCTION_95	CALL_6
0x4003fbd	          0x4429f2	                           sub edx, r14d	        90	string3.h	FUNCTION_95	CALL_6
0x4003fc0	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x4003fc3	          0x4963fc	                        movsxd rdi, r12d	        90	string3.h	FUNCTION_95	CALL_6
0x4003fc6	          0x4801ef	                            add rdi, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4003fc9	          0x4c01ef	                            add rdi, r13	        90	string3.h	FUNCTION_95	CALL_6
0x4003fcc	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4003fd1	      0xe800000000	                          call 0x4003fd6	        90	string3.h	FUNCTION_95	CALL_6
0x4003fd6	    0x488344242001	               add qword [rsp + 0x20], 1	       670	ops.c	FUNCTION_8	FOR_1	IF_10
0x4003fdc	      0x8344241401	               add dword [rsp + 0x14], 1	       672	ops.c	FUNCTION_8	FOR_1	IF_10
0x4003fe1	          0x4585f6	                         test r14d, r14d	       675	ops.c	FUNCTION_8	FOR_1	IF_11
0x4003fe4	            0x7e0a	                           jle 0x4003ff0	       675	ops.c	FUNCTION_8	FOR_1	IF_11
0x4003fe6	      0x4403642414	            add r12d, dword [rsp + 0x14]	       676	ops.c	FUNCTION_8	FOR_1	IF_11
0x4003feb	      0x4489642418	            mov dword [rsp + 0x18], r12d	       676	ops.c	FUNCTION_8	FOR_1	IF_11
0x4003ff0	      0xb800000000	                              mov eax, 0	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4003ff5	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4003ffc	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4004001	            0xf2ae	              repne scasb al, byte [rdi]	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4004003	          0x48f7d1	                                 not rcx	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4004006	          0x4889ca	                            mov rdx, rcx	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4004009	      0x48637c2418	         movsxd rdi, dword [rsp + 0x18] 	        59	string3.h	FUNCTION_93	CALL_3
0x400400e	          0x4c01ef	                            add rdi, r13	        59	string3.h	FUNCTION_93	CALL_3
0x4004011	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004016	      0xe800000000	                          call 0x400401b	        59	string3.h	FUNCTION_93	CALL_3
0x400401b	      0xba00000000	                              mov edx, 0	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4004020	          0x4c89ee	                            mov rsi, r13	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4004023	          0x4889df	                            mov rdi, rbx	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4004026	      0xe800000000	                          call 0x400402b	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x400402b	        0x49395f30	            cmp qword [r15 + 0x30], rbx 	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x400402f	            0x7518	                           jne 0x4004049	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x4004031	    0x488b05000000	            mov rax, qword [0x04004038] 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0x4004038	    0x488998001200	          mov qword [rax + 0x1200], rbx 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0x400403f	        0x8b742418	            mov esi, dword [rsp + 0x18] 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x4004043	    0x89b008120000	          mov dword [rax + 0x1208], esi 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x4004049	        0x4883c301	                              add rbx, 1	       594	ops.c	FUNCTION_8	FOR_1
0x400404d	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       594	ops.c	FUNCTION_8	FOR_1
0x4004051	          0x4839c3	                            cmp rbx, rax	       594	ops.c	FUNCTION_8	FOR_1
0x4004054	     0xf8ea1fdffff	                           jle 0x4003dfb	       594	ops.c	FUNCTION_8	FOR_1
0x400405a	        0x488d5001	                      lea rdx, [rax + 1]	       690	ops.c	FUNCTION_8	CALL_12
0x400405e	        0x498b4720	            mov rax, qword [r15 + 0x20] 	       690	ops.c	FUNCTION_8	CALL_12
0x4004062	        0x488d7801	                      lea rdi, [rax + 1]	       690	ops.c	FUNCTION_8	CALL_12
0x4004066	      0xb900000000	                              mov ecx, 0	       690	ops.c	FUNCTION_8	CALL_12
0x400406b	      0xbe00000000	                              mov esi, 0	       690	ops.c	FUNCTION_8	CALL_12
0x4004070	      0xe800000000	                          call 0x4004075	       690	ops.c	FUNCTION_8	CALL_12
0x4004075	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	       692	ops.c	FUNCTION_8
0x4004079	    0x890500000000	            mov dword [0x0400407f], eax 	       692	ops.c	FUNCTION_8
0x400407f	        0x418b5728	            mov edx, dword [r15 + 0x28] 	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x4004083	    0x488b05000000	            mov rax, qword [0x0400408a] 	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x400408a	          0x895040	             mov dword [rax + 0x40], edx	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x400408d	      0xe800000000	                          call 0x4004092	      2816	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_27
0x4004092	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x4004097	      0xe800000000	                          call 0x400409c	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x400409c	      0xe990000000	                           jmp 0x4004131	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x40040a1	        0x41833f12	                   cmp dword [r15], 0x12	      2658	ops.c	FUNCTION_39	IF_6
0x40040a5	     0xf84fff9ffff	                            je 0x4003aaa	      2658	ops.c	FUNCTION_39	IF_6
0x40040ab	    0xc74424080000	                  mov dword [rsp + 8], 0	      2614	ops.c	FUNCTION_39
0x40040b3	      0xbb00000000	                              mov ebx, 0	      2612	ops.c	FUNCTION_39
0x40040b8	      0xe93afaffff	                           jmp 0x4003af7	      2612	ops.c	FUNCTION_39
0x40040bd	    0x833d00000000	               cmp dword [0x040040c4], 0	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40040c4	     0xf8458feffff	                            je 0x4003f22	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40040ca	          0x4585f6	                         test r14d, r14d	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40040cd	     0xf8f2cfeffff	                            jg 0x4003eff	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40040d3	      0xe94afeffff	                           jmp 0x4003f22	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40040d8	      0xb800000000	                              mov eax, 0	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40040dd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40040e4	            0xf2ae	              repne scasb al, byte [rdi]	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40040e6	          0x48f7d1	                                 not rcx	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40040e9	        0x488d59ff	                      lea rbx, [rcx - 1]	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x40040ed	        0x4d8b6720	            mov r12, qword [r15 + 0x20] 	      2694	ops.c	FUNCTION_39
0x40040f1	        0x458b6f28	           mov r13d, dword [r15 + 0x28] 	      2694	ops.c	FUNCTION_39
0x40040f5	        0x458b772c	           mov r14d, dword [r15 + 0x2c] 	      2694	ops.c	FUNCTION_39
0x40040f9	          0x4889ea	                            mov rdx, rbp	      2695	ops.c	FUNCTION_39	CALL_15
0x40040fc	      0xbe00000000	                              mov esi, 0	      2695	ops.c	FUNCTION_39	CALL_15
0x4004101	      0xbf00000000	                              mov edi, 0	      2695	ops.c	FUNCTION_39	CALL_15
0x4004106	      0xe800000000	                          call 0x400410b	      2695	ops.c	FUNCTION_39	CALL_15
0x400410b	    0x488b05000000	            mov rax, qword [0x04004112] 	      2700	ops.c	FUNCTION_39	IF_11
0x4004112	    0x4c3ba0f01100	          cmp r12, qword [rax + 0x11f0] 	      2700	ops.c	FUNCTION_39	IF_11
0x4004119	     0xf853dfaffff	                           jne 0x4003b5c	      2700	ops.c	FUNCTION_39	IF_11
0x400411f	      0xe901faffff	                           jmp 0x4003b25	      2700	ops.c	FUNCTION_39	IF_11
0x4004124	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4004128	        0x89442418	             mov dword [rsp + 0x18], eax	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x400412c	      0xe9f1fdffff	                           jmp 0x4003f22	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4004131	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      2821	ops.c	FUNCTION_39
0x4004139	    0x644833042528	                xor rax, qword fs:[0x28]	      2821	ops.c	FUNCTION_39
0x4004142	            0x7405	                            je 0x4004149	      2821	ops.c	FUNCTION_39
0x4004144	      0xe800000000	                          call 0x4004149	      2821	ops.c	FUNCTION_39
0x4004149	    0x4881c4d80000	                           add rsp, 0xd8	      2821	ops.c	FUNCTION_39
0x4004150	              0x5b	                                 pop rbx	      2821	ops.c	FUNCTION_39
0x4004151	              0x5d	                                 pop rbp	      2821	ops.c	FUNCTION_39
0x4004152	            0x415c	                                 pop r12	      2821	ops.c	FUNCTION_39
0x4004154	            0x415d	                                 pop r13	      2821	ops.c	FUNCTION_39
0x4004156	            0x415e	                                 pop r14	      2821	ops.c	FUNCTION_39
0x4004158	            0x415f	                                 pop r15	      2821	ops.c	FUNCTION_39
0x400415a	              0xc3	                                     ret	      2821	ops.c	FUNCTION_39
yank_register_mline	CALL,2:ELSE,0:WHILE,0:FOR,0:functions,0:IF,2:SWITCH,0:DO,0	21
0x4002498	              0x53	                                push rbx	      1071	ops.c	FUNCTION_20
0x4002499	            0x89fb	                            mov ebx, edi	      1071	ops.c	FUNCTION_20
0x400249b	            0x85ff	                           test edi, edi	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x400249d	            0x7413	                            je 0x40024b2	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x400249f	      0xbe00000000	                              mov esi, 0	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x40024a4	      0xe800000000	                          call 0x40024a9	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x40024a9	            0x85c0	                           test eax, eax	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x40024ab	            0x7429	                            je 0x40024d6	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x40024ad	          0x83fb5f	                           cmp ebx, 0x5f	      1074	ops.c	FUNCTION_20	IF_2
0x40024b0	            0x741f	                            je 0x40024d1	      1074	ops.c	FUNCTION_20	IF_2
0x40024b2	      0xbe00000000	                              mov esi, 0	      1076	ops.c	FUNCTION_20	CALL_2
0x40024b7	            0x89df	                            mov edi, ebx	      1076	ops.c	FUNCTION_20	CALL_2
0x40024b9	      0xe800000000	                          call 0x40024be	      1076	ops.c	FUNCTION_20	CALL_2
0x40024be	    0x488b05000000	            mov rax, qword [0x040024c5] 	      1077	ops.c	FUNCTION_20
0x40024c5	        0x80781001	                cmp byte [rax + 0x10], 1	      1077	ops.c	FUNCTION_20
0x40024c9	           0xf94c0	                                 sete al	      1077	ops.c	FUNCTION_20
0x40024cc	           0xfb6c0	                           movzx eax, al	      1077	ops.c	FUNCTION_20
0x40024cf	            0xeb05	                           jmp 0x40024d6	      1077	ops.c	FUNCTION_20
0x40024d1	      0xb800000000	                              mov eax, 0	      1075	ops.c	FUNCTION_20	IF_2
0x40024d6	              0x5b	                                 pop rbx	      1078	ops.c	FUNCTION_20
0x40024d7	              0xc3	                                     ret	      1078	ops.c	FUNCTION_20
do_join	CALL,34:ELSE,3:WHILE,0:FOR,2:functions,0:IF,22:SWITCH,0:DO,0	383
0x4004ad7	            0x4157	                                push r15	      4526	ops.c	FUNCTION_55
0x4004ad9	            0x4156	                                push r14	      4526	ops.c	FUNCTION_55
0x4004adb	            0x4155	                                push r13	      4526	ops.c	FUNCTION_55
0x4004add	            0x4154	                                push r12	      4526	ops.c	FUNCTION_55
0x4004adf	              0x55	                                push rbp	      4526	ops.c	FUNCTION_55
0x4004ae0	              0x53	                                push rbx	      4526	ops.c	FUNCTION_55
0x4004ae1	        0x4883ec68	                           sub rsp, 0x68	      4526	ops.c	FUNCTION_55
0x4004ae5	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      4526	ops.c	FUNCTION_55
0x4004aea	        0x8974240c	              mov dword [rsp + 0xc], esi	      4526	ops.c	FUNCTION_55
0x4004aee	            0x89d3	                            mov ebx, edx	      4526	ops.c	FUNCTION_55
0x4004af0	      0x448944242c	             mov dword [rsp + 0x2c], r8d	      4526	ops.c	FUNCTION_55
0x4004af5	    0x64488b042528	                mov rax, qword fs:[0x28]	      4526	ops.c	FUNCTION_55
0x4004afe	      0x4889442458	             mov qword [rsp + 0x58], rax	      4526	ops.c	FUNCTION_55
0x4004b03	            0x31c0	                            xor eax, eax	      4526	ops.c	FUNCTION_55
0x4004b05	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4542	ops.c	FUNCTION_55	CALL_1
0x4004b0d	          0x83f901	                              cmp ecx, 1	      4542	ops.c	FUNCTION_55	CALL_1
0x4004b10	            0x7516	                           jne 0x4004b28	      4542	ops.c	FUNCTION_55	CALL_1
0x4004b12	      0xbf6a000000	                           mov edi, 0x6a	      4542	ops.c	FUNCTION_55	CALL_1
0x4004b17	      0xe800000000	                          call 0x4004b1c	      4542	ops.c	FUNCTION_55	CALL_1
0x4004b1c	            0x85c0	                           test eax, eax	      4542	ops.c	FUNCTION_55	CALL_1
0x4004b1e	           0xf95c0	                                setne al	      4542	ops.c	FUNCTION_55	CALL_1
0x4004b21	           0xfb6c0	                           movzx eax, al	      4542	ops.c	FUNCTION_55	CALL_1
0x4004b24	        0x89442418	             mov dword [rsp + 0x18], eax	      4542	ops.c	FUNCTION_55	CALL_1
0x4004b28	            0x85db	                           test ebx, ebx	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4004b2a	            0x7425	                            je 0x4004b51	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4004b2c	    0x488b05000000	            mov rax, qword [0x04004b33] 	      4548	ops.c	FUNCTION_55	IF_1
0x4004b33	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4548	ops.c	FUNCTION_55	IF_1
0x4004b37	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4004b3c	        0x488d3407	                    lea rsi, [rdi + rax]	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4004b40	        0x4883ef01	                              sub rdi, 1	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4004b44	      0xe800000000	                          call 0x4004b49	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4004b49	            0x85c0	                           test eax, eax	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4004b4b	     0xf84ae050000	                            je 0x40050ff	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4004b51	      0xbe01000000	                              mov esi, 1	      4554	ops.c	FUNCTION_55	CALL_3
0x4004b56	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4554	ops.c	FUNCTION_55	CALL_3
0x4004b5b	      0xe800000000	                          call 0x4004b60	      4554	ops.c	FUNCTION_55	CALL_3
0x4004b60	      0x4889442438	             mov qword [rsp + 0x38], rax	      4554	ops.c	FUNCTION_55	CALL_3
0x4004b65	          0x4885c0	                           test rax, rax	      4555	ops.c	FUNCTION_55	IF_2
0x4004b68	     0xf848c050000	                            je 0x40050fa	      4555	ops.c	FUNCTION_55	IF_2
0x4004b6e	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4540	ops.c	FUNCTION_55
0x4004b77	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4558	ops.c	FUNCTION_55	IF_3
0x4004b7c	            0x7435	                            je 0x4004bb3	      4558	ops.c	FUNCTION_55	IF_3
0x4004b7e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x4004b83	    0x488d3c850000	                        lea rdi, [rax*4]	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x4004b8b	      0xbe01000000	                              mov esi, 1	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x4004b90	      0xe800000000	                          call 0x4004b95	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x4004b95	      0x4889442430	             mov qword [rsp + 0x30], rax	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x4004b9a	          0x4885c0	                           test rax, rax	      4561	ops.c	FUNCTION_55	IF_3	IF_4
0x4004b9d	            0x7514	                           jne 0x4004bb3	      4561	ops.c	FUNCTION_55	IF_3	IF_4
0x4004b9f	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      4563	ops.c	FUNCTION_55	IF_3	IF_4	CALL_5
0x4004ba4	      0xe800000000	                          call 0x4004ba9	      4563	ops.c	FUNCTION_55	IF_3	IF_4	CALL_5
0x4004ba9	      0xb800000000	                              mov eax, 0	      4564	ops.c	FUNCTION_55	IF_3	IF_4
0x4004bae	      0xe94c050000	                           jmp 0x40050ff	      4564	ops.c	FUNCTION_55	IF_3	IF_4
0x4004bb3	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      4573	ops.c	FUNCTION_55	FOR_1
0x4004bb9	     0xf8ec9020000	                           jle 0x4004e88	      4573	ops.c	FUNCTION_55	FOR_1
0x4004bbf	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      4573	ops.c	FUNCTION_55	FOR_1
0x4004bc4	    0x41bc00000000	                             mov r12d, 0	      4573	ops.c	FUNCTION_55	FOR_1
0x4004bca	    0x41be00000000	                             mov r14d, 0	      4573	ops.c	FUNCTION_55	FOR_1
0x4004bd0	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4573	ops.c	FUNCTION_55	FOR_1
0x4004bd8	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4573	ops.c	FUNCTION_55	FOR_1
0x4004be0	    0xc74424200000	               mov dword [rsp + 0x20], 0	      4573	ops.c	FUNCTION_55	FOR_1
0x4004be8	    0x488b05000000	            mov rax, qword [0x04004bef] 	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x4004bef	          0x4c89e7	                            mov rdi, r12	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x4004bf2	        0x48037838	             add rdi, qword [rax + 0x38]	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x4004bf6	      0xe800000000	                          call 0x4004bfb	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x4004bfb	          0x4989c7	                            mov r15, rax	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x4004bfe	          0x4d85e4	                           test r12, r12	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x4004c01	            0x753f	                           jne 0x4004c42	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x4004c03	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x4004c08	            0x7438	                            je 0x4004c42	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x4004c0a	    0x488b05000000	            mov rax, qword [0x04004c11] 	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x4004c11	        0x488b5008	                mov rdx, qword [rax + 8]	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x4004c15	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x4004c19	    0x48898ae01100	          mov qword [rdx + 0x11e0], rcx 	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x4004c20	        0x488b5008	                mov rdx, qword [rax + 8]	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4004c24	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4004c2b	          0x4c89ff	                            mov rdi, r15	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4004c2e	      0xb800000000	                              mov eax, 0	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4004c33	            0xf2ae	              repne scasb al, byte [rdi]	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4004c35	          0x48f7d1	                                 not rcx	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4004c38	        0x4883e901	                              sub rcx, 1	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4004c3c	    0x898ae8110000	          mov dword [rdx + 0x11e8], ecx 	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4004c42	          0x4c89fb	                            mov rbx, r15	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x4004c45	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4583	ops.c	FUNCTION_55	FOR_1	IF_6
0x4004c4a	            0x744c	                            je 0x4004c98	      4583	ops.c	FUNCTION_55	FOR_1	IF_6
0x4004c4c	      0x837c245400	               cmp dword [rsp + 0x54], 0	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4004c51	            0x742c	                            je 0x4004c7f	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4004c53	          0x4d85e4	                           test r12, r12	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4004c56	            0x7e27	                           jle 0x4004c7f	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4004c58	      0x488d4c2454	                   lea rcx, [rsp + 0x54]	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x4004c5d	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x4004c61	      0xbe01000000	                              mov esi, 1	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x4004c66	          0x4c89ff	                            mov rdi, r15	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x4004c69	      0xe800000000	                          call 0x4004c6e	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x4004c6e	          0x4889c3	                            mov rbx, rax	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x4004c71	          0x4c29f8	                            sub rax, r15	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4004c74	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4004c79	        0x428904a6	            mov dword [rsi + r12*4], eax	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4004c7d	            0xeb19	                           jmp 0x4004c98	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4004c7f	      0x488d4c2454	                   lea rcx, [rsp + 0x54]	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4004c84	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4004c88	      0xbe00000000	                              mov esi, 0	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4004c8d	          0x4c89ff	                            mov rdi, r15	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4004c90	      0xe800000000	                          call 0x4004c95	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4004c95	          0x4889c3	                            mov rbx, rax	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4004c98	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x4004c9d	        0x400f95c5	                               setne bpl	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x4004ca1	          0x4d85e4	                           test r12, r12	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x4004ca4	     0xf8ed6000000	                           jle 0x4004d80	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x4004caa	          0x4084ed	                           test bpl, bpl	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x4004cad	     0xf84cd000000	                            je 0x4004d80	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x4004cb3	          0x4889df	                            mov rdi, rbx	      4603	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x4004cb6	      0xe800000000	                          call 0x4004cbb	      4603	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x4004cbb	          0x4889c3	                            mov rbx, rax	      4603	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x4004cbe	          0x803829	                    cmp byte [rax], 0x29	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x4004cc1	     0xf84b9000000	                            je 0x4004d80	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x4004cc7	      0x837c242800	               cmp dword [rsp + 0x28], 0	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x4004ccc	     0xf84ae000000	                            je 0x4004d80	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x4004cd2	      0x837c242009	               cmp dword [rsp + 0x20], 9	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x4004cd7	     0xf84a3000000	                            je 0x4004d80	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x4004cdd	      0xbf4d000000	                           mov edi, 0x4d	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x4004ce2	      0xe800000000	                          call 0x4004ce7	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x4004ce7	            0x85c0	                           test eax, eax	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x4004ce9	            0x741e	                            je 0x4004d09	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x4004ceb	          0x4889df	                            mov rdi, rbx	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4004cee	    0xff1500000000	                 call qword [0x04004cf4]	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4004cf4	      0x3dff000000	                           cmp eax, 0xff	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4004cf9	     0xf8f81000000	                            jg 0x4004d80	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4004cff	    0x817c2420ff00	           cmp dword [rsp + 0x20], 0xff 	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4004d07	            0x7f77	                            jg 0x4004d80	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4004d09	      0xbf42000000	                           mov edi, 0x42	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x4004d0e	      0xe800000000	                          call 0x4004d13	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x4004d13	            0x85c0	                           test eax, eax	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x4004d15	            0x741a	                            je 0x4004d31	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x4004d17	          0x4889df	                            mov rdi, rbx	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4004d1a	    0xff1500000000	                 call qword [0x04004d20]	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4004d20	    0x817c2420ff00	           cmp dword [rsp + 0x20], 0xff 	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4004d28	            0x7e07	                           jle 0x4004d31	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4004d2a	      0x3dff000000	                           cmp eax, 0xff	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4004d2f	            0x7f4f	                            jg 0x4004d80	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4004d31	      0x837c242020	           cmp dword [rsp + 0x20], 0x20 	      4614	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x4004d36	            0x7407	                            je 0x4004d3f	      4614	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x4004d38	      0x4180450001	                       add byte [r13], 1	      4617	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x4004d3d	            0xeb08	                           jmp 0x4004d47	      4617	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x4004d3f	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      4617	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x4004d43	        0x89442420	             mov dword [rsp + 0x20], eax	      4617	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x4004d47	    0x833d00000000	               cmp dword [0x04004d4e], 0	      4619	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4004d4e	            0x7430	                            je 0x4004d80	      4619	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4004d50	      0x837c24202e	           cmp dword [rsp + 0x20], 0x2e 	      4620	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4004d55	            0x7424	                            je 0x4004d7b	      4620	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4004d57	      0xbe6a000000	                           mov esi, 0x6a	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x4004d5c	    0x488b3d000000	            mov rdi, qword [0x04004d63] 	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x4004d63	      0xe800000000	                          call 0x4004d68	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x4004d68	          0x4885c0	                           test rax, rax	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x4004d6b	            0x7513	                           jne 0x4004d80	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x4004d6d	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4004d71	          0x83f83f	                           cmp eax, 0x3f	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4004d74	            0x7405	                            je 0x4004d7b	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4004d76	          0x83f821	                           cmp eax, 0x21	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4004d79	            0x7505	                           jne 0x4004d80	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4004d7b	      0x4180450001	                       add byte [r13], 1	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4004d80	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x4004d87	          0x4889df	                            mov rdi, rbx	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x4004d8a	      0xb800000000	                              mov eax, 0	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x4004d8f	            0xf2ae	              repne scasb al, byte [rdi]	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x4004d91	          0x48f7d1	                                 not rcx	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x4004d94	        0x4883e901	                              sub rcx, 1	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x4004d98	        0x894c2428	             mov dword [rsp + 0x28], ecx	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x4004d9c	      0x410fb64500	                   movzx eax, byte [r13]	      4627	ops.c	FUNCTION_55	FOR_1
0x4004da1	             0x1c8	                            add eax, ecx	      4627	ops.c	FUNCTION_55	FOR_1
0x4004da3	          0x4101c6	                           add r14d, eax	      4627	ops.c	FUNCTION_55	FOR_1
0x4004da6	            0x85c9	                           test ecx, ecx	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x4004da8	     0xf8e9d000000	                           jle 0x4004e4b	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x4004dae	          0x4084ed	                           test bpl, bpl	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x4004db1	     0xf8494000000	                            je 0x4004e4b	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x4004db7	    0x833d00000000	               cmp dword [0x04004dbe], 0	      4632	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4004dbe	            0x7467	                            je 0x4004e27	      4632	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4004dc0	          0x4863e9	                         movsxd rbp, ecx	      4634	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4004dc3	          0x4801dd	                            add rbp, rbx	      4634	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4004dc6	        0x488d75ff	                      lea rsi, [rbp - 1]	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4004dca	          0x4889df	                            mov rdi, rbx	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4004dcd	    0xff1500000000	                 call qword [0x04004dd3]	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4004dd3	          0x83c001	                              add eax, 1	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4004dd6	            0x4898	                                    cdqe	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4004dd8	          0x4829c5	                            sub rbp, rax	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4004ddb	          0x4889ef	                            mov rdi, rbp	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4004dde	    0xff1500000000	                 call qword [0x04004de4]	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4004de4	        0x89442420	             mov dword [rsp + 0x20], eax	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4004de8	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4628	ops.c	FUNCTION_55	FOR_1
0x4004df0	          0x4839eb	                            cmp rbx, rbp	      4637	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4004df3	            0x7366	                           jae 0x4004e5b	      4637	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4004df5	      0xb801000000	                              mov eax, 1	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4004dfa	    0x833d00000000	               cmp dword [0x04004e01], 0	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4004e01	            0x7410	                            je 0x4004e13	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4004e03	        0x488d75ff	                      lea rsi, [rbp - 1]	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4004e07	          0x4889df	                            mov rdi, rbx	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4004e0a	    0xff1500000000	                 call qword [0x04004e10]	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4004e10	          0x83c001	                              add eax, 1	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4004e13	            0x4898	                                    cdqe	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4004e15	          0x4889ef	                            mov rdi, rbp	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4004e18	          0x4829c7	                            sub rdi, rax	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4004e1b	    0xff1500000000	                 call qword [0x04004e21]	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4004e21	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4004e25	            0xeb34	                           jmp 0x4004e5b	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4004e27	          0x4863c1	                         movsxd rax, ecx	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x4004e2a	       0xfb67403ff	         movzx esi, byte [rbx + rax - 1]	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x4004e2f	        0x89742420	             mov dword [rsp + 0x20], esi	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x4004e33	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4628	ops.c	FUNCTION_55	FOR_1
0x4004e3b	          0x83f901	                              cmp ecx, 1	      4647	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4004e3e	            0x7e1b	                           jle 0x4004e5b	      4647	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4004e40	       0xfb64403fe	         movzx eax, byte [rbx + rax - 2]	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4004e45	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4004e49	            0xeb10	                           jmp 0x4004e5b	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4004e4b	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4628	ops.c	FUNCTION_55	FOR_1
0x4004e53	    0xc74424200000	               mov dword [rsp + 0x20], 0	      4628	ops.c	FUNCTION_55	FOR_1
0x4004e5b	      0xe800000000	                          call 0x4004e60	      4651	ops.c	FUNCTION_55	FOR_1	CALL_19
0x4004e60	    0x8b0500000000	            mov eax, dword [0x04004e66] 	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x4004e66	            0x85c0	                           test eax, eax	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x4004e68	     0xf8566020000	                           jne 0x40050d4	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x4004e6e	        0x4983c401	                              add r12, 1	      4573	ops.c	FUNCTION_55	FOR_1
0x4004e72	        0x4983c501	                              add r13, 1	      4573	ops.c	FUNCTION_55	FOR_1
0x4004e76	      0x4c39642410	            cmp qword [rsp + 0x10], r12 	      4573	ops.c	FUNCTION_55	FOR_1
0x4004e7b	     0xf8567fdffff	                           jne 0x4004be8	      4573	ops.c	FUNCTION_55	FOR_1
0x4004e81	      0x4489742448	            mov dword [rsp + 0x48], r14d	      4573	ops.c	FUNCTION_55	FOR_1
0x4004e86	            0xeb1b	                           jmp 0x4004ea3	      4573	ops.c	FUNCTION_55	FOR_1
0x4004e88	    0xc74424480000	               mov dword [rsp + 0x48], 0	      4535	ops.c	FUNCTION_55
0x4004e90	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4534	ops.c	FUNCTION_55
0x4004e98	    0x41bf00000000	                             mov r15d, 0	      4528	ops.c	FUNCTION_55
0x4004e9e	      0xbb00000000	                              mov ebx, 0	      4527	ops.c	FUNCTION_55
0x4004ea3	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      4660	ops.c	FUNCTION_55
0x4004ea8	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      4660	ops.c	FUNCTION_55
0x4004ead	    0x410fb6442eff	         movzx eax, byte [r14 + rbp - 1]	      4660	ops.c	FUNCTION_55
0x4004eb3	        0x8844244f	               mov byte [rsp + 0x4f], al	      4660	ops.c	FUNCTION_55
0x4004eb7	      0x448b6c2448	           mov r13d, dword [rsp + 0x48] 	      4663	ops.c	FUNCTION_55	CALL_20
0x4004ebc	        0x418d7d01	                      lea edi, [r13 + 1]	      4663	ops.c	FUNCTION_55	CALL_20
0x4004ec0	      0xe800000000	                          call 0x4004ec5	      4663	ops.c	FUNCTION_55	CALL_20
0x4004ec5	      0x4889442420	             mov qword [rsp + 0x20], rax	      4663	ops.c	FUNCTION_55	CALL_20
0x4004eca	          0x4d63e5	                        movsxd r12, r13d	      4664	ops.c	FUNCTION_55
0x4004ecd	          0x4901c4	                            add r12, rax	      4664	ops.c	FUNCTION_55
0x4004ed0	      0x41c6042400	                       mov byte [r12], 0	      4665	ops.c	FUNCTION_55
0x4004ed5	        0x488d75ff	                      lea rsi, [rbp - 1]	      4674	ops.c	FUNCTION_55	FOR_2
0x4004ed9	      0x4889742440	             mov qword [rsp + 0x40], rsi	      4674	ops.c	FUNCTION_55	FOR_2
0x4004ede	    0x41bd01000000	                             mov r13d, 1	      4674	ops.c	FUNCTION_55	FOR_2
0x4004ee4	          0x4929ed	                            sub r13, rbp	      4674	ops.c	FUNCTION_55	FOR_2
0x4004ee7	          0x4889f5	                            mov rbp, rsi	      4674	ops.c	FUNCTION_55	FOR_2
0x4004eea	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      4674	ops.c	FUNCTION_55	FOR_2
0x4004eee	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4674	ops.c	FUNCTION_55	FOR_2
0x4004ef2	      0x486354241c	         movsxd rdx, dword [rsp + 0x1c] 	      4676	ops.c	FUNCTION_55	FOR_2
0x4004ef7	          0x4929d4	                            sub r12, rdx	      4676	ops.c	FUNCTION_55	FOR_2
0x4004efa	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4004efd	          0x4c89e7	                            mov rdi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x4004f00	      0xe800000000	                          call 0x4004f05	        59	string3.h	FUNCTION_93	CALL_3
0x4004f05	      0x48896c2410	             mov qword [rsp + 0x10], rbp	        59	string3.h	FUNCTION_93	CALL_3
0x4004f0a	      0x410fb6142e	             movzx edx, byte [r14 + rbp]	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x4004f0f	            0x84d2	                             test dl, dl	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x4004f11	            0x7413	                            je 0x4004f26	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x4004f13	           0xfb6d2	                           movzx edx, dl	      4680	ops.c	FUNCTION_55	FOR_2	IF_17
0x4004f16	          0x4929d4	                            sub r12, rdx	      4680	ops.c	FUNCTION_55	FOR_2	IF_17
0x4004f19	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4004f1e	          0x4c89e7	                            mov rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x4004f21	      0xe800000000	                          call 0x4004f26	        90	string3.h	FUNCTION_95	CALL_6
0x4004f26	          0x4c89e1	                            mov rcx, r12	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f29	      0x482b4c2420	             sub rcx, qword [rsp + 0x20]	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f2e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f33	      0x410fb60406	             movzx eax, byte [r14 + rax]	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f38	          0x4801c1	                            add rcx, rax	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f3b	          0x4c29fb	                            sub rbx, r15	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f3e	          0x4829d9	                            sub rcx, rbx	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f41	    0x488b05000000	            mov rax, qword [0x04004f48] 	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f48	          0x4889ef	                            mov rdi, rbp	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f4b	        0x48037838	             add rdi, qword [rax + 0x38]	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f4f	          0x4c89ea	                            mov rdx, r13	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f52	      0xbe00000000	                              mov esi, 0	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f57	      0xe800000000	                          call 0x4004f5c	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4004f5c	          0x4885ed	                           test rbp, rbp	      4685	ops.c	FUNCTION_55	FOR_2	IF_18
0x4004f5f	            0x7479	                            je 0x4004fda	      4685	ops.c	FUNCTION_55	FOR_2	IF_18
0x4004f61	    0x488b05000000	            mov rax, qword [0x04004f68] 	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4004f68	          0x4889ef	                            mov rdi, rbp	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4004f6b	        0x48037838	             add rdi, qword [rax + 0x38]	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4004f6f	        0x4883ef01	                              sub rdi, 1	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4004f73	      0xe800000000	                          call 0x4004f78	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4004f78	          0x4989c7	                            mov r15, rax	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4004f7b	          0x4889c3	                            mov rbx, rax	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4004f7e	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4689	ops.c	FUNCTION_55	FOR_2	IF_19
0x4004f83	            0x7412	                            je 0x4004f97	      4689	ops.c	FUNCTION_55	FOR_2	IF_19
0x4004f85	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x4004f8a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x4004f8f	      0x48635c86fc	     movsxd rbx, dword [rsi + rax*4 - 4]	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x4004f94	          0x4c01fb	                            add rbx, r15	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x4004f97	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x4004f9c	            0x7411	                            je 0x4004faf	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x4004f9e	        0x4883fd01	                              cmp rbp, 1	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x4004fa2	            0x7e0b	                           jle 0x4004faf	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x4004fa4	          0x4889df	                            mov rdi, rbx	      4693	ops.c	FUNCTION_55	FOR_2	CALL_25
0x4004fa7	      0xe800000000	                          call 0x4004fac	      4693	ops.c	FUNCTION_55	FOR_2	CALL_25
0x4004fac	          0x4889c3	                            mov rbx, rax	      4693	ops.c	FUNCTION_55	FOR_2	CALL_25
0x4004faf	      0xb800000000	                              mov eax, 0	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x4004fb4	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x4004fbb	          0x4889df	                            mov rdi, rbx	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x4004fbe	            0xf2ae	              repne scasb al, byte [rdi]	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x4004fc0	          0x4889c8	                            mov rax, rcx	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x4004fc3	          0x48f7d0	                                 not rax	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x4004fc6	          0x8d40ff	                      lea eax, [rax - 1]	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x4004fc9	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x4004fcd	        0x4883ed01	                              sub rbp, 1	      4674	ops.c	FUNCTION_55	FOR_2
0x4004fd1	        0x4983c501	                              add r13, 1	      4674	ops.c	FUNCTION_55	FOR_2
0x4004fd5	      0xe918ffffff	                           jmp 0x4004ef2	      4695	ops.c	FUNCTION_55	FOR_2
0x4004fda	    0x488b05000000	            mov rax, qword [0x04004fe1] 	      4696	ops.c	FUNCTION_55	CALL_27
0x4004fe1	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4696	ops.c	FUNCTION_55	CALL_27
0x4004fe5	      0xba00000000	                              mov edx, 0	      4696	ops.c	FUNCTION_55	CALL_27
0x4004fea	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      4696	ops.c	FUNCTION_55	CALL_27
0x4004fef	          0x4889de	                            mov rsi, rbx	      4696	ops.c	FUNCTION_55	CALL_27
0x4004ff2	      0xe800000000	                          call 0x4004ff7	      4696	ops.c	FUNCTION_55	CALL_27
0x4004ff7	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	      4698	ops.c	FUNCTION_55	IF_21
0x4004ffc	            0x743b	                            je 0x4005039	      4698	ops.c	FUNCTION_55	IF_21
0x4004ffe	    0x488b05000000	            mov rax, qword [0x04005005] 	      4701	ops.c	FUNCTION_55	IF_21
0x4005005	        0x488b5008	                mov rdx, qword [rax + 8]	      4701	ops.c	FUNCTION_55	IF_21
0x4005009	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      4701	ops.c	FUNCTION_55	IF_21
0x400500d	    0x48898a001200	          mov qword [rdx + 0x1200], rcx 	      4701	ops.c	FUNCTION_55	IF_21
0x4005014	        0x488b5008	                mov rdx, qword [rax + 8]	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4005018	      0xb800000000	                              mov eax, 0	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x400501d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4005024	          0x4889df	                            mov rdi, rbx	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4005027	            0xf2ae	              repne scasb al, byte [rdi]	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4005029	          0x4889c8	                            mov rax, rcx	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x400502c	          0x48f7d0	                                 not rax	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x400502f	        0x4883e801	                              sub rax, 1	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4005033	    0x898208120000	          mov dword [rdx + 0x1208], eax 	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4005039	    0x488b05000000	            mov rax, qword [0x04005040] 	      4708	ops.c	FUNCTION_55
0x4005040	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4708	ops.c	FUNCTION_55
0x4005044	        0x488d5701	                      lea rdx, [rdi + 1]	      4707	ops.c	FUNCTION_55	CALL_29
0x4005048	      0xb900000000	                              mov ecx, 0	      4707	ops.c	FUNCTION_55	CALL_29
0x400504d	      0x448b7c241c	           mov r15d, dword [rsp + 0x1c] 	      4707	ops.c	FUNCTION_55	CALL_29
0x4005052	          0x4489fe	                           mov esi, r15d	      4707	ops.c	FUNCTION_55	CALL_29
0x4005055	      0xe800000000	                          call 0x400505a	      4707	ops.c	FUNCTION_55	CALL_29
0x400505a	    0x488b05000000	            mov rax, qword [0x04005061] 	      4715	ops.c	FUNCTION_55
0x4005061	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      4715	ops.c	FUNCTION_55
0x4005065	        0x488d5501	                      lea rdx, [rbp + 1]	      4716	ops.c	FUNCTION_55
0x4005069	        0x48895038	             mov qword [rax + 0x38], rdx	      4716	ops.c	FUNCTION_55
0x400506d	      0xbe00000000	                              mov esi, 0	      4717	ops.c	FUNCTION_55	CALL_30
0x4005072	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4717	ops.c	FUNCTION_55	CALL_30
0x4005077	      0xe800000000	                          call 0x400507c	      4717	ops.c	FUNCTION_55	CALL_30
0x400507c	    0x488b1d000000	            mov rbx, qword [0x04005083] 	      4718	ops.c	FUNCTION_55
0x4005083	        0x48896b38	             mov qword [rbx + 0x38], rbp	      4718	ops.c	FUNCTION_55
0x4005087	      0xbe71000000	                           mov esi, 0x71	      4726	ops.c	FUNCTION_55	CALL_31
0x400508c	    0x488b3d000000	            mov rdi, qword [0x04005093] 	      4726	ops.c	FUNCTION_55	CALL_31
0x4005093	      0xe800000000	                          call 0x4005098	      4726	ops.c	FUNCTION_55	CALL_31
0x4005098	          0x4885c0	                           test rax, rax	      4726	ops.c	FUNCTION_55	CALL_31
0x400509b	            0x7512	                           jne 0x40050af	      4726	ops.c	FUNCTION_55	CALL_31
0x400509d	      0x448b7c2448	           mov r15d, dword [rsp + 0x48] 	      4660	ops.c	FUNCTION_55
0x40050a2	      0x442b7c2428	            sub r15d, dword [rsp + 0x28]	      4660	ops.c	FUNCTION_55
0x40050a7	       0xfb644244f	           movzx eax, byte [rsp + 0x4f] 	      4660	ops.c	FUNCTION_55
0x40050ac	          0x4129c7	                           sub r15d, eax	      4726	ops.c	FUNCTION_55	CALL_31
0x40050af	        0x44897b40	            mov dword [rbx + 0x40], r15d	      4725	ops.c	FUNCTION_55
0x40050b3	      0xe800000000	                          call 0x40050b8	      4727	ops.c	FUNCTION_55	CALL_32
0x40050b8	    0x488b05000000	            mov rax, qword [0x040050bf] 	      4730	ops.c	FUNCTION_55
0x40050bf	    0xc74044000000	               mov dword [rax + 0x44], 0	      4730	ops.c	FUNCTION_55
0x40050c6	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      4732	ops.c	FUNCTION_55
0x40050cd	      0xbb01000000	                              mov ebx, 1	      4538	ops.c	FUNCTION_55
0x40050d2	            0xeb05	                           jmp 0x40050d9	      4538	ops.c	FUNCTION_55
0x40050d4	      0xbb00000000	                              mov ebx, 0	      4654	ops.c	FUNCTION_55	FOR_1	IF_16
0x40050d9	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      4735	ops.c	FUNCTION_55	CALL_33
0x40050de	      0xe800000000	                          call 0x40050e3	      4735	ops.c	FUNCTION_55	CALL_33
0x40050e3	            0x89d8	                            mov eax, ebx	      4740	ops.c	FUNCTION_55
0x40050e5	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4737	ops.c	FUNCTION_55	IF_22
0x40050ea	            0x7413	                            je 0x40050ff	      4737	ops.c	FUNCTION_55	IF_22
0x40050ec	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4738	ops.c	FUNCTION_55	CALL_34
0x40050f1	      0xe800000000	                          call 0x40050f6	      4738	ops.c	FUNCTION_55	CALL_34
0x40050f6	            0x89d8	                            mov eax, ebx	      4740	ops.c	FUNCTION_55
0x40050f8	            0xeb05	                           jmp 0x40050ff	      4740	ops.c	FUNCTION_55
0x40050fa	      0xb800000000	                              mov eax, 0	      4556	ops.c	FUNCTION_55	IF_2
0x40050ff	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      4741	ops.c	FUNCTION_55
0x4005104	    0x644833342528	                xor rsi, qword fs:[0x28]	      4741	ops.c	FUNCTION_55
0x400510d	            0x7405	                            je 0x4005114	      4741	ops.c	FUNCTION_55
0x400510f	      0xe800000000	                          call 0x4005114	      4741	ops.c	FUNCTION_55
0x4005114	        0x4883c468	                           add rsp, 0x68	      4741	ops.c	FUNCTION_55
0x4005118	              0x5b	                                 pop rbx	      4741	ops.c	FUNCTION_55
0x4005119	              0x5d	                                 pop rbp	      4741	ops.c	FUNCTION_55
0x400511a	            0x415c	                                 pop r12	      4741	ops.c	FUNCTION_55
0x400511c	            0x415d	                                 pop r13	      4741	ops.c	FUNCTION_55
0x400511e	            0x415e	                                 pop r14	      4741	ops.c	FUNCTION_55
0x4005120	            0x415f	                                 pop r15	      4741	ops.c	FUNCTION_55
0x4005122	              0xc3	                                     ret	      4741	ops.c	FUNCTION_55
adjust_clip_reg	CALL,0:ELSE,1:WHILE,0:FOR,0:functions,0:IF,4:SWITCH,0:DO,0	36
0x40029ab	          0x833f00	                      cmp dword [rdi], 0	      1643	ops.c	FUNCTION_30	IF_1
0x40029ae	            0x7546	                           jne 0x40029f6	      1643	ops.c	FUNCTION_30	IF_1
0x40029b0	    0x8b0500000000	            mov eax, dword [0x040029b6] 	      1643	ops.c	FUNCTION_30	IF_1
0x40029b6	            0x85c0	                           test eax, eax	      1643	ops.c	FUNCTION_30	IF_1
0x40029b8	            0x750c	                           jne 0x40029c6	      1643	ops.c	FUNCTION_30	IF_1
0x40029ba	    0x8b0500000000	            mov eax, dword [0x040029c0] 	      1643	ops.c	FUNCTION_30	IF_1
0x40029c0	            0x85c0	                           test eax, eax	      1643	ops.c	FUNCTION_30	IF_1
0x40029c2	            0x751b	                           jne 0x40029df	      1643	ops.c	FUNCTION_30	IF_1
0x40029c4	            0xf3c3	                                     ret	      1643	ops.c	FUNCTION_30	IF_1
0x40029c6	      0xba2a000000	                           mov edx, 0x2a	      1647	ops.c	FUNCTION_30	IF_1	IF_2
0x40029cb	            0xa802	                              test al, 2	      1647	ops.c	FUNCTION_30	IF_1	IF_2
0x40029cd	            0x740c	                            je 0x40029db	      1647	ops.c	FUNCTION_30	IF_1	IF_2
0x40029cf	    0x833d00000000	               cmp dword [0x040029d6], 1	      1647	ops.c	FUNCTION_30	IF_1	IF_2
0x40029d6	            0x19d2	                            sbb edx, edx	      1647	ops.c	FUNCTION_30	IF_1	IF_2
0x40029d8	          0x83c22b	                           add edx, 0x2b	      1647	ops.c	FUNCTION_30	IF_1	IF_2
0x40029db	            0x8917	                    mov dword [rdi], edx	      1646	ops.c	FUNCTION_30	IF_1	IF_2
0x40029dd	            0xeb17	                           jmp 0x40029f6	      1646	ops.c	FUNCTION_30	IF_1	IF_2
0x40029df	      0xba2a000000	                           mov edx, 0x2a	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40029e4	            0xa802	                              test al, 2	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40029e6	            0x740c	                            je 0x40029f4	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40029e8	    0x833d00000000	               cmp dword [0x040029ef], 1	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40029ef	            0x19d2	                            sbb edx, edx	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40029f1	          0x83c22b	                           add edx, 0x2b	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40029f4	            0x8917	                    mov dword [rdi], edx	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40029f6	    0x833d00000000	               cmp dword [0x040029fd], 0	      1652	ops.c	FUNCTION_30	IF_3
0x40029fd	            0x750c	                           jne 0x4002a0b	      1652	ops.c	FUNCTION_30	IF_3
0x40029ff	          0x833f2a	                   cmp dword [rdi], 0x2a	      1652	ops.c	FUNCTION_30	IF_3
0x4002a02	            0x7507	                           jne 0x4002a0b	      1652	ops.c	FUNCTION_30	IF_3
0x4002a04	    0xc70700000000	                      mov dword [rdi], 0	      1653	ops.c	FUNCTION_30	IF_3
0x4002a0a	              0xc3	                                     ret	      1653	ops.c	FUNCTION_30	IF_3
0x4002a0b	    0x833d00000000	               cmp dword [0x04002a12], 0	      1654	ops.c	FUNCTION_30	IF_4
0x4002a12	            0x750b	                           jne 0x4002a1f	      1654	ops.c	FUNCTION_30	IF_4
0x4002a14	          0x833f2b	                   cmp dword [rdi], 0x2b	      1654	ops.c	FUNCTION_30	IF_4
0x4002a17	            0x7506	                           jne 0x4002a1f	      1654	ops.c	FUNCTION_30	IF_4
0x4002a19	    0xc70700000000	                      mov dword [rdi], 0	      1655	ops.c	FUNCTION_30	IF_4
0x4002a1f	            0xf3c3	                                     ret	      1655	ops.c	FUNCTION_30	IF_4
swapchar	CALL,17:ELSE,4:WHILE,0:FOR,0:functions,0:IF,11:SWITCH,0:DO,0	157
0x4003236	            0x4157	                                push r15	      2541	ops.c	FUNCTION_38
0x4003238	            0x4156	                                push r14	      2541	ops.c	FUNCTION_38
0x400323a	            0x4155	                                push r13	      2541	ops.c	FUNCTION_38
0x400323c	            0x4154	                                push r12	      2541	ops.c	FUNCTION_38
0x400323e	              0x55	                                push rbp	      2541	ops.c	FUNCTION_38
0x400323f	              0x53	                                push rbx	      2541	ops.c	FUNCTION_38
0x4003240	        0x4883ec18	                           sub rsp, 0x18	      2541	ops.c	FUNCTION_38
0x4003244	            0x89fd	                            mov ebp, edi	      2541	ops.c	FUNCTION_38
0x4003246	          0x4989f4	                            mov r12, rsi	      2541	ops.c	FUNCTION_38
0x4003249	          0x4889f7	                            mov rdi, rsi	      2545	ops.c	FUNCTION_38	CALL_1
0x400324c	      0xe800000000	                          call 0x4003251	      2545	ops.c	FUNCTION_38	CALL_1
0x4003251	            0x89c3	                            mov ebx, eax	      2545	ops.c	FUNCTION_38	CALL_1
0x4003253	          0x83f87f	                           cmp eax, 0x7f	      2548	ops.c	FUNCTION_38	IF_1
0x4003256	        0x410f9fc5	                               setg r13b	      2548	ops.c	FUNCTION_38	IF_1
0x400325a	          0x83fd0f	                            cmp ebp, 0xf	      2548	ops.c	FUNCTION_38	IF_1
0x400325d	            0x750e	                           jne 0x400326d	      2548	ops.c	FUNCTION_38	IF_1
0x400325f	      0xb800000000	                              mov eax, 0	      2549	ops.c	FUNCTION_38	IF_1
0x4003264	          0x4584ed	                         test r13b, r13b	      2548	ops.c	FUNCTION_38	IF_1
0x4003267	     0xf85f0010000	                           jne 0x400345d	      2548	ops.c	FUNCTION_38	IF_1
0x400326d	          0x83fd0b	                            cmp ebp, 0xb	      2552	ops.c	FUNCTION_38	IF_2
0x4003270	     0xf8595000000	                           jne 0x400330b	      2552	ops.c	FUNCTION_38	IF_2
0x4003276	    0x81fbdf000000	                           cmp ebx, 0xdf	      2552	ops.c	FUNCTION_38	IF_2
0x400327c	     0xf8589000000	                           jne 0x400330b	      2552	ops.c	FUNCTION_38	IF_2
0x4003282	    0x833d00000000	               cmp dword [0x04003289], 0	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4003289	            0x751d	                           jne 0x40032a8	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x400328b	      0xbf00000000	                              mov edi, 0	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4003290	      0xb90b000000	                            mov ecx, 0xb	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4003295	    0x488b35000000	            mov rsi, qword [0x0400329c] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x400329c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x400329e	           0xf97c2	                                 seta dl	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x40032a1	           0xf92c0	                                 setb al	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x40032a4	            0x38c2	                              cmp dl, al	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x40032a6	            0x7563	                           jne 0x400330b	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x40032a8	    0x488b05000000	            mov rax, qword [0x040032af] 	      2555	ops.c	FUNCTION_38	IF_2
0x40032af	        0x4c8b7838	            mov r15, qword [rax + 0x38] 	      2555	ops.c	FUNCTION_38	IF_2
0x40032b3	        0x448b7040	           mov r14d, dword [rax + 0x40] 	      2555	ops.c	FUNCTION_38	IF_2
0x40032b7	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      2555	ops.c	FUNCTION_38	IF_2
0x40032ba	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2555	ops.c	FUNCTION_38	IF_2
0x40032be	        0x498b3424	                    mov rsi, qword [r12]	      2558	ops.c	FUNCTION_38	IF_2
0x40032c2	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2558	ops.c	FUNCTION_38	IF_2
0x40032c7	        0x48897038	             mov qword [rax + 0x38], rsi	      2558	ops.c	FUNCTION_38	IF_2
0x40032cb	        0x48897840	             mov qword [rax + 0x40], rdi	      2558	ops.c	FUNCTION_38	IF_2
0x40032cf	      0xbf00000000	                              mov edi, 0	      2559	ops.c	FUNCTION_38	IF_2	CALL_3
0x40032d4	      0xe800000000	                          call 0x40032d9	      2559	ops.c	FUNCTION_38	IF_2	CALL_3
0x40032d9	      0xbf53000000	                           mov edi, 0x53	      2560	ops.c	FUNCTION_38	IF_2	CALL_4
0x40032de	      0xe800000000	                          call 0x40032e3	      2560	ops.c	FUNCTION_38	IF_2	CALL_4
0x40032e3	      0xbf53000000	                           mov edi, 0x53	      2561	ops.c	FUNCTION_38	IF_2	CALL_5
0x40032e8	      0xe800000000	                          call 0x40032ed	      2561	ops.c	FUNCTION_38	IF_2	CALL_5
0x40032ed	    0x488b05000000	            mov rax, qword [0x040032f4] 	      2562	ops.c	FUNCTION_38	IF_2
0x40032f4	        0x4c897838	             mov qword [rax + 0x38], r15	      2562	ops.c	FUNCTION_38	IF_2
0x40032f8	        0x44897040	            mov dword [rax + 0x40], r14d	      2562	ops.c	FUNCTION_38	IF_2
0x40032fc	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2562	ops.c	FUNCTION_38	IF_2
0x4003300	          0x894844	             mov dword [rax + 0x44], ecx	      2562	ops.c	FUNCTION_38	IF_2
0x4003303	          0x4c89e7	                            mov rdi, r12	      2563	ops.c	FUNCTION_38	IF_2	CALL_6
0x4003306	      0xe800000000	                          call 0x400330b	      2563	ops.c	FUNCTION_38	IF_2	CALL_6
0x400330b	    0x833d00000000	               cmp dword [0x04003312], 0	      2566	ops.c	FUNCTION_38	IF_3
0x4003312	            0x7411	                            je 0x4003325	      2566	ops.c	FUNCTION_38	IF_3
0x4003314	      0xb800000000	                              mov eax, 0	      2567	ops.c	FUNCTION_38	IF_3
0x4003319	    0x81fbff000000	                           cmp ebx, 0xff	      2566	ops.c	FUNCTION_38	IF_3
0x400331f	     0xf8f38010000	                            jg 0x400345d	      2566	ops.c	FUNCTION_38	IF_3
0x4003325	            0x89df	                            mov edi, ebx	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4003327	      0xe800000000	                          call 0x400332c	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x400332c	            0x85c0	                           test eax, eax	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x400332e	            0x7439	                            je 0x4003369	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4003330	          0x83fd0f	                            cmp ebp, 0xf	      2572	ops.c	FUNCTION_38	IF_4	IF_5
0x4003333	            0x7520	                           jne 0x4003355	      2572	ops.c	FUNCTION_38	IF_4	IF_5
0x4003335	          0x8d4bac	                   lea ecx, [rbx - 0x54]	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003338	      0xba4fecc44e	                     mov edx, 0x4ec4ec4f	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400333d	            0x89c8	                            mov eax, ecx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400333f	            0xf7ea	                                imul edx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003341	          0xc1fa03	                              sar edx, 3	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003344	            0x89c8	                            mov eax, ecx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003346	          0xc1f81f	                           sar eax, 0x1f	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003349	            0x29c2	                            sub edx, eax	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400334b	          0x6bea1a	                     imul ebp, edx, 0x1a	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400334e	            0x29e9	                            sub ecx, ebp	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003350	          0x8d6961	                   lea ebp, [rcx + 0x61]	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003353	            0xeb5a	                           jmp 0x40033af	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4003355	          0x83fd0c	                            cmp ebp, 0xc	      2574	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4003358	     0xf84fa000000	                            je 0x4003458	      2574	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x400335e	            0x89df	                            mov edi, ebx	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4003360	      0xe800000000	                          call 0x4003365	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4003365	            0x89c5	                            mov ebp, eax	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4003367	            0xeb46	                           jmp 0x40033af	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4003369	            0x89df	                            mov edi, ebx	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x400336b	      0xe800000000	                          call 0x4003370	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4003370	            0x85c0	                           test eax, eax	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4003372	     0xf84e0000000	                            je 0x4003458	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4003378	          0x83fd0f	                            cmp ebp, 0xf	      2579	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x400337b	            0x7520	                           jne 0x400339d	      2579	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x400337d	          0x8d4bcc	                   lea ecx, [rbx - 0x34]	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003380	      0xba4fecc44e	                     mov edx, 0x4ec4ec4f	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003385	            0x89c8	                            mov eax, ecx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003387	            0xf7ea	                                imul edx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003389	          0xc1fa03	                              sar edx, 3	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x400338c	            0x89c8	                            mov eax, ecx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x400338e	          0xc1f81f	                           sar eax, 0x1f	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003391	            0x29c2	                            sub edx, eax	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003393	          0x6bea1a	                     imul ebp, edx, 0x1a	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003396	            0x29e9	                            sub ecx, ebp	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4003398	          0x8d6941	                   lea ebp, [rcx + 0x41]	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x400339b	            0xeb12	                           jmp 0x40033af	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x400339d	          0x83fd0b	                            cmp ebp, 0xb	      2581	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x40033a0	     0xf84b2000000	                            je 0x4003458	      2581	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x40033a6	            0x89df	                            mov edi, ebx	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x40033a8	      0xe800000000	                          call 0x40033ad	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x40033ad	            0x89c5	                            mov ebp, eax	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x40033af	            0x39dd	                            cmp ebp, ebx	      2584	ops.c	FUNCTION_38	IF_10
0x40033b1	     0xf849a000000	                            je 0x4003451	      2584	ops.c	FUNCTION_38	IF_10
0x40033b7	    0x833d00000000	               cmp dword [0x040033be], 0	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40033be	            0x746c	                            je 0x400342c	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40033c0	          0x83fd7f	                           cmp ebp, 0x7f	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40033c3	            0x7f05	                            jg 0x40033ca	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40033c5	          0x4584ed	                         test r13b, r13b	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40033c8	            0x7462	                            je 0x400342c	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40033ca	    0x488b05000000	            mov rax, qword [0x040033d1] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40033d1	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40033d5	        0x448b6840	           mov r13d, dword [rax + 0x40] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40033d9	          0x8b5844	            mov ebx, dword [rax + 0x44] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40033dc	        0x498b3424	                    mov rsi, qword [r12]	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40033e0	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40033e5	        0x48897038	             mov qword [rax + 0x38], rsi	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40033e9	        0x48897840	             mov qword [rax + 0x40], rdi	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40033ed	      0xe800000000	                          call 0x40033f2	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x40033f2	          0x4889c7	                            mov rdi, rax	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x40033f5	      0xe800000000	                          call 0x40033fa	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x40033fa	          0x4863f8	                         movsxd rdi, eax	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x40033fd	      0xba00000000	                              mov edx, 0	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4003402	      0xbe00000000	                              mov esi, 0	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4003407	      0xe800000000	                          call 0x400340c	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x400340c	            0x89ef	                            mov edi, ebp	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x400340e	      0xe800000000	                          call 0x4003413	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x4003413	    0x488b05000000	            mov rax, qword [0x0400341a] 	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x400341a	        0x4c897038	             mov qword [rax + 0x38], r14	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x400341e	        0x44896840	            mov dword [rax + 0x40], r13d	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4003422	          0x895844	             mov dword [rax + 0x44], ebx	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4003425	      0xb801000000	                              mov eax, 1	      2600	ops.c	FUNCTION_38	IF_10
0x400342a	            0xeb31	                           jmp 0x400345d	      2588	ops.c	FUNCTION_38	IF_10	IF_11
0x400342c	      0xba01000000	                              mov edx, 1	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4003431	        0x498b3424	                    mov rsi, qword [r12]	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4003435	    0x488b3d000000	            mov rdi, qword [0x0400343c] 	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x400343c	      0xe800000000	                          call 0x4003441	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4003441	      0x4963542408	            movsxd rdx, dword [r12 + 8] 	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4003446	        0x40882c10	               mov byte [rax + rdx], bpl	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x400344a	      0xb801000000	                              mov eax, 1	      2600	ops.c	FUNCTION_38	IF_10
0x400344f	            0xeb0c	                           jmp 0x400345d	      2600	ops.c	FUNCTION_38	IF_10
0x4003451	      0xb800000000	                              mov eax, 0	      2602	ops.c	FUNCTION_38
0x4003456	            0xeb05	                           jmp 0x400345d	      2602	ops.c	FUNCTION_38
0x4003458	      0xb800000000	                              mov eax, 0	      2602	ops.c	FUNCTION_38
0x400345d	        0x4883c418	                           add rsp, 0x18	      2603	ops.c	FUNCTION_38
0x4003461	              0x5b	                                 pop rbx	      2603	ops.c	FUNCTION_38
0x4003462	              0x5d	                                 pop rbp	      2603	ops.c	FUNCTION_38
0x4003463	            0x415c	                                 pop r12	      2603	ops.c	FUNCTION_38
0x4003465	            0x415d	                                 pop r13	      2603	ops.c	FUNCTION_38
0x4003467	            0x415e	                                 pop r14	      2603	ops.c	FUNCTION_38
0x4003469	            0x415f	                                 pop r15	      2603	ops.c	FUNCTION_38
0x400346b	              0xc3	                                     ret	      2603	ops.c	FUNCTION_38
clip_yank_selection	CALL,2:ELSE,1:WHILE,0:FOR,0:functions,0:IF,1:SWITCH,0:DO,0	27
0x4006a45	            0x4155	                                push r13	      6635	ops.c	FUNCTION_76
0x4006a47	            0x4154	                                push r12	      6635	ops.c	FUNCTION_76
0x4006a49	              0x55	                                push rbp	      6635	ops.c	FUNCTION_76
0x4006a4a	              0x53	                                push rbx	      6635	ops.c	FUNCTION_76
0x4006a4b	        0x4883ec08	                              sub rsp, 8	      6635	ops.c	FUNCTION_76
0x4006a4f	            0x89fd	                            mov ebp, edi	      6635	ops.c	FUNCTION_76
0x4006a51	          0x4989f4	                            mov r12, rsi	      6635	ops.c	FUNCTION_76
0x4006a54	          0x4989d5	                            mov r13, rdx	      6635	ops.c	FUNCTION_76
0x4006a57	    0x4881f9000000	                              cmp rcx, 0	      6638	ops.c	FUNCTION_76	IF_1
0x4006a5e	      0xbb00000000	                              mov ebx, 0	      6641	ops.c	FUNCTION_76	ELSE_1
0x4006a63	      0xb800000000	                              mov eax, 0	      6641	ops.c	FUNCTION_76	ELSE_1
0x4006a68	        0x480f44d8	                          cmove rbx, rax	      6641	ops.c	FUNCTION_76	ELSE_1
0x4006a6c	          0x4889cf	                            mov rdi, rcx	      6643	ops.c	FUNCTION_76	CALL_1
0x4006a6f	      0xe800000000	                          call 0x4006a74	      6643	ops.c	FUNCTION_76	CALL_1
0x4006a74	    0x41b900000000	                              mov r9d, 0	      6645	ops.c	FUNCTION_76	CALL_2
0x4006a7a	    0x41b800000000	                              mov r8d, 0	      6645	ops.c	FUNCTION_76	CALL_2
0x4006a80	          0x4c89e9	                            mov rcx, r13	      6645	ops.c	FUNCTION_76	CALL_2
0x4006a83	          0x4c89e2	                            mov rdx, r12	      6645	ops.c	FUNCTION_76	CALL_2
0x4006a86	            0x89ee	                            mov esi, ebp	      6645	ops.c	FUNCTION_76	CALL_2
0x4006a88	          0x4889df	                            mov rdi, rbx	      6645	ops.c	FUNCTION_76	CALL_2
0x4006a8b	      0xe88e9fffff	                     call sym.str_to_reg	      6645	ops.c	FUNCTION_76	CALL_2
0x4006a90	        0x4883c408	                              add rsp, 8	      6646	ops.c	FUNCTION_76
0x4006a94	              0x5b	                                 pop rbx	      6646	ops.c	FUNCTION_76
0x4006a95	              0x5d	                                 pop rbp	      6646	ops.c	FUNCTION_76
0x4006a96	            0x415c	                                 pop r12	      6646	ops.c	FUNCTION_76
0x4006a98	            0x415d	                                 pop r13	      6646	ops.c	FUNCTION_76
0x4006a9a	              0xc3	                                     ret	      6646	ops.c	FUNCTION_76
free_yank	CALL,5:ELSE,0:WHILE,0:FOR,1:functions,0:IF,3:SWITCH,0:DO,0	30
0x40003ad	              0x55	                                push rbp	      3011	ops.c	FUNCTION_43
0x40003ae	              0x53	                                push rbx	      3011	ops.c	FUNCTION_43
0x40003af	        0x4883ec08	                              sub rsp, 8	      3011	ops.c	FUNCTION_43
0x40003b3	          0x4889fb	                            mov rbx, rdi	      3011	ops.c	FUNCTION_43
0x40003b6	    0x488b05000000	            mov rax, qword [0x040003bd] 	      3012	ops.c	FUNCTION_43	IF_1
0x40003bd	          0x488b38	                    mov rdi, qword [rax]	      3012	ops.c	FUNCTION_43	IF_1
0x40003c0	          0x4885ff	                           test rdi, rdi	      3012	ops.c	FUNCTION_43	IF_1
0x40003c3	            0x7451	                            je 0x4000416	      3012	ops.c	FUNCTION_43	IF_1
0x40003c5	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x40003c9	            0x7838	                            js 0x4000403	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x40003cb	    0x488d2cdd0000	                        lea rbp, [rbx*8]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x40003d3	    0x488b05000000	            mov rax, qword [0x040003da] 	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x40003da	          0x488b00	                    mov rax, qword [rax]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x40003dd	        0x488b3c28	              mov rdi, qword [rax + rbp]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x40003e1	      0xe800000000	                          call 0x40003e6	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x40003e6	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x40003ea	        0x4883ed08	                              sub rbp, 8	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x40003ee	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x40003f2	            0x75df	                           jne 0x40003d3	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x40003f4	    0x488b05000000	            mov rax, qword [0x040003fb] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x40003fb	          0x488b38	                    mov rdi, qword [rax]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x40003fe	          0x4885ff	                           test rdi, rdi	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4000401	            0x7413	                            je 0x4000416	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4000403	      0xe800000000	                          call 0x4000408	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4000408	    0x488b05000000	            mov rax, qword [0x0400040f] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400040f	    0x48c700000000	                      mov qword [rax], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4000416	        0x4883c408	                              add rsp, 8	      3040	ops.c	FUNCTION_43
0x400041a	              0x5b	                                 pop rbx	      3040	ops.c	FUNCTION_43
0x400041b	              0x5d	                                 pop rbp	      3040	ops.c	FUNCTION_43
0x400041c	              0xc3	                                     ret	      3040	ops.c	FUNCTION_43
do_execreg	CALL,28:ELSE,4:WHILE,0:FOR,1:functions,0:IF,18:SWITCH,0:DO,0	219
0x400749d	            0x4157	                                push r15	      1211	ops.c	FUNCTION_23
0x400749f	            0x4156	                                push r14	      1211	ops.c	FUNCTION_23
0x40074a1	            0x4155	                                push r13	      1211	ops.c	FUNCTION_23
0x40074a3	            0x4154	                                push r12	      1211	ops.c	FUNCTION_23
0x40074a5	              0x55	                                push rbp	      1211	ops.c	FUNCTION_23
0x40074a6	              0x53	                                push rbx	      1211	ops.c	FUNCTION_23
0x40074a7	        0x4883ec18	                           sub rsp, 0x18	      1211	ops.c	FUNCTION_23
0x40074ab	            0x89fb	                            mov ebx, edi	      1211	ops.c	FUNCTION_23
0x40074ad	          0x4189f7	                           mov r15d, esi	      1211	ops.c	FUNCTION_23
0x40074b0	        0x8954240c	              mov dword [rsp + 0xc], edx	      1211	ops.c	FUNCTION_23
0x40074b4	          0x4189cc	                           mov r12d, ecx	      1211	ops.c	FUNCTION_23
0x40074b7	          0x83ff40	                           cmp edi, 0x40	      1217	ops.c	FUNCTION_23	IF_1
0x40074ba	            0x7530	                           jne 0x40074ec	      1217	ops.c	FUNCTION_23	IF_1
0x40074bc	    0x8b1d00000000	            mov ebx, dword [0x040074c2] 	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x40074c2	            0x85db	                           test ebx, ebx	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x40074c4	            0x7526	                           jne 0x40074ec	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x40074c6	      0xba05000000	                              mov edx, 5	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x40074cb	      0xbe00000000	                              mov esi, 0	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x40074d0	      0xbf00000000	                              mov edi, 0	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x40074d5	      0xe800000000	                          call 0x40074da	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x40074da	          0x4889c7	                            mov rdi, rax	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x40074dd	      0xe800000000	                          call 0x40074e2	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x40074e2	      0xb800000000	                              mov eax, 0	      1222	ops.c	FUNCTION_23	IF_1	IF_2
0x40074e7	      0xe9f4020000	                           jmp 0x40077e0	      1222	ops.c	FUNCTION_23	IF_1	IF_2
0x40074ec	          0x8d43dd	                   lea eax, [rbx - 0x23]	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40074ef	      0xa9fdffffff	                    test eax, 0xfffffffd	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40074f4	            0x7410	                            je 0x4007506	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40074f6	      0xbe00000000	                              mov esi, 0	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40074fb	            0x89df	                            mov edi, ebx	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x40074fd	      0xe800000000	                          call 0x4007502	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4007502	            0x85c0	                           test eax, eax	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4007504	            0x7511	                           jne 0x4007517	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4007506	            0x89df	                            mov edi, ebx	      1229	ops.c	FUNCTION_23	IF_3	CALL_4
0x4007508	      0xe800000000	                          call 0x400750d	      1229	ops.c	FUNCTION_23	IF_3	CALL_4
0x400750d	      0xb800000000	                              mov eax, 0	      1230	ops.c	FUNCTION_23	IF_3
0x4007512	      0xe9c9020000	                           jmp 0x40077e0	      1230	ops.c	FUNCTION_23	IF_3
0x4007517	    0x891d00000000	            mov dword [0x0400751d], ebx 	      1232	ops.c	FUNCTION_23
0x400751d	            0x89df	                            mov edi, ebx	      1235	ops.c	FUNCTION_23	CALL_5
0x400751f	      0xe800000000	                          call 0x4007524	      1235	ops.c	FUNCTION_23	CALL_5
0x4007524	          0x83f85f	                           cmp eax, 0x5f	      1238	ops.c	FUNCTION_23	IF_4
0x4007527	     0xf8499020000	                            je 0x40077c6	      1238	ops.c	FUNCTION_23	IF_4
0x400752d	          0x83f83a	                           cmp eax, 0x3a	      1242	ops.c	FUNCTION_23	IF_5
0x4007530	     0xf85d8000000	                           jne 0x400760e	      1242	ops.c	FUNCTION_23	IF_5
0x4007536	    0x48833d000000	               cmp qword [0x0400753e], 0	      1244	ops.c	FUNCTION_23	IF_5	IF_6
0x400753e	            0x7526	                           jne 0x4007566	      1244	ops.c	FUNCTION_23	IF_5	IF_6
0x4007540	      0xba05000000	                              mov edx, 5	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x4007545	      0xbe00000000	                              mov esi, 0	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x400754a	      0xbf00000000	                              mov edi, 0	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x400754f	      0xe800000000	                          call 0x4007554	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x4007554	          0x4889c7	                            mov rdi, rax	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x4007557	      0xe800000000	                          call 0x400755c	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x400755c	      0xb800000000	                              mov eax, 0	      1247	ops.c	FUNCTION_23	IF_5	IF_6
0x4007561	      0xe97a020000	                           jmp 0x40077e0	      1247	ops.c	FUNCTION_23	IF_5	IF_6
0x4007566	    0x488b3d000000	            mov rdi, qword [0x0400756d] 	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x400756d	          0x4885ff	                           test rdi, rdi	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4007570	            0x7410	                            je 0x4007582	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4007572	      0xe800000000	                          call 0x4007577	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4007577	    0x48c705000000	               mov qword [0x04007582], 0	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4007582	      0xb900000000	                              mov ecx, 0	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4007587	      0xba16000000	                           mov edx, 0x16	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x400758c	      0xbe00000000	                              mov esi, 0	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4007591	    0x488b3d000000	            mov rdi, qword [0x04007598] 	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4007598	      0xe800000000	                          call 0x400759d	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x400759d	          0x4889c5	                            mov rbp, rax	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x40075a0	          0x4885c0	                           test rax, rax	      1253	ops.c	FUNCTION_23	IF_5	IF_7
0x40075a3	            0x7455	                            je 0x40075fa	      1253	ops.c	FUNCTION_23	IF_5	IF_7
0x40075a5	    0x833d00000000	               cmp dword [0x040075ac], 0	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x40075ac	            0x7433	                            je 0x40075e1	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x40075ae	      0xbf00000000	                              mov edi, 0	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x40075b3	      0xb905000000	                              mov ecx, 5	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x40075b8	          0x4889c6	                            mov rsi, rax	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x40075bb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x40075bd	           0xf97c2	                                 seta dl	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x40075c0	           0xf92c0	                                 setb al	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x40075c3	            0x38c2	                              cmp dl, al	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x40075c5	            0x751a	                           jne 0x40075e1	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x40075c7	        0x488d7d05	                      lea rdi, [rbp + 5]	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x40075cb	          0x4489e1	                           mov ecx, r12d	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x40075ce	      0xba01000000	                              mov edx, 1	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x40075d3	      0xbe01000000	                              mov esi, 1	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x40075d8	      0xe8ce91ffff	                 call sym.put_in_typebuf	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x40075dd	            0x89c3	                            mov ebx, eax	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x40075df	            0xeb1e	                           jmp 0x40075ff	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x40075e1	          0x4489e1	                           mov ecx, r12d	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x40075e4	      0xba01000000	                              mov edx, 1	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x40075e9	      0xbe01000000	                              mov esi, 1	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x40075ee	          0x4889ef	                            mov rdi, rbp	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x40075f1	      0xe8b591ffff	                 call sym.put_in_typebuf	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x40075f6	            0x89c3	                            mov ebx, eax	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x40075f8	            0xeb05	                           jmp 0x40075ff	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x40075fa	      0xbb01000000	                              mov ebx, 1	      1214	ops.c	FUNCTION_23
0x40075ff	          0x4889ef	                            mov rdi, rbp	      1262	ops.c	FUNCTION_23	IF_5	CALL_13
0x4007602	      0xe800000000	                          call 0x4007607	      1262	ops.c	FUNCTION_23	IF_5	CALL_13
0x4007607	            0x89d8	                            mov eax, ebx	      1262	ops.c	FUNCTION_23	IF_5	CALL_13
0x4007609	      0xe9d2010000	                           jmp 0x40077e0	      1262	ops.c	FUNCTION_23	IF_5	CALL_13
0x400760e	          0x83f83d	                           cmp eax, 0x3d	      1266	ops.c	FUNCTION_23	ELSE_2	IF_9
0x4007611	            0x753a	                           jne 0x400764d	      1266	ops.c	FUNCTION_23	ELSE_2	IF_9
0x4007613	      0xe800000000	                          call 0x4007618	      1268	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_14
0x4007618	          0x4889c5	                            mov rbp, rax	      1268	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_14
0x400761b	      0xb800000000	                              mov eax, 0	      1270	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x4007620	          0x4885ed	                           test rbp, rbp	      1269	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x4007623	     0xf84b7010000	                            je 0x40077e0	      1269	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x4007629	          0x4489e1	                           mov ecx, r12d	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x400762c	          0x4489fa	                           mov edx, r15d	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x400762f	      0xbe01000000	                              mov esi, 1	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4007634	          0x4889ef	                            mov rdi, rbp	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4007637	      0xe86f91ffff	                 call sym.put_in_typebuf	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x400763c	            0x89c3	                            mov ebx, eax	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x400763e	          0x4889ef	                            mov rdi, rbp	      1272	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_16
0x4007641	      0xe800000000	                          call 0x4007646	      1272	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_16
0x4007646	            0x89d8	                            mov eax, ebx	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4007648	      0xe993010000	                           jmp 0x40077e0	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x400764d	          0x83f82e	                           cmp eax, 0x2e	      1275	ops.c	FUNCTION_23	ELSE_3	IF_11
0x4007650	            0x7557	                           jne 0x40076a9	      1275	ops.c	FUNCTION_23	ELSE_3	IF_11
0x4007652	      0xe800000000	                          call 0x4007657	      1277	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_17
0x4007657	          0x4889c5	                            mov rbp, rax	      1277	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_17
0x400765a	          0x4885c0	                           test rax, rax	      1278	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x400765d	            0x7526	                           jne 0x4007685	      1278	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x400765f	      0xba05000000	                              mov edx, 5	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4007664	      0xbe00000000	                              mov esi, 0	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4007669	      0xbf00000000	                              mov edi, 0	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x400766e	      0xe800000000	                          call 0x4007673	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4007673	          0x4889c7	                            mov rdi, rax	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4007676	      0xe800000000	                          call 0x400767b	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x400767b	      0xb800000000	                              mov eax, 0	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4007680	      0xe95b010000	                           jmp 0x40077e0	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4007685	          0x4489e1	                           mov ecx, r12d	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007688	          0x4489fa	                           mov edx, r15d	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x400768b	      0xbe00000000	                              mov esi, 0	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007690	          0x4889c7	                            mov rdi, rax	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007693	      0xe81391ffff	                 call sym.put_in_typebuf	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4007698	            0x89c3	                            mov ebx, eax	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x400769a	          0x4889ef	                            mov rdi, rbp	      1284	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x400769d	      0xe800000000	                          call 0x40076a2	      1284	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x40076a2	            0x89d8	                            mov eax, ebx	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x40076a4	      0xe937010000	                           jmp 0x40077e0	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x40076a9	      0xbe00000000	                              mov esi, 0	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x40076ae	            0x89c7	                            mov edi, eax	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x40076b0	      0xe800000000	                          call 0x40076b5	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x40076b5	    0x488b05000000	            mov rax, qword [0x040076bc] 	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x40076bc	        0x48833800	                      cmp qword [rax], 0	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x40076c0	     0xf8407010000	                            je 0x40077cd	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x40076c6	          0x4585ff	                         test r15d, r15d	      1293	ops.c	FUNCTION_23	ELSE_4
0x40076c9	        0x410f95c6	                              setne r14b	      1293	ops.c	FUNCTION_23	ELSE_4
0x40076cd	        0x450fb6f6	                        movzx r14d, r14b	      1293	ops.c	FUNCTION_23	ELSE_4
0x40076d1	          0x41f7de	                                neg r14d	      1293	ops.c	FUNCTION_23	ELSE_4
0x40076d4	          0x4489e7	                           mov edi, r12d	      1298	ops.c	FUNCTION_23	ELSE_4	CALL_23
0x40076d7	      0xe84690ffff	          call sym.put_reedit_in_typebuf	      1298	ops.c	FUNCTION_23	ELSE_4	CALL_23
0x40076dc	    0x488b05000000	            mov rax, qword [0x040076e3] 	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x40076e3	        0x488b5808	                mov rbx, qword [rax + 8]	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x40076e7	    0x4c8d2cddf8ff	                    lea r13, [rbx*8 - 8]	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x40076ef	    0xc74424080100	                  mov dword [rsp + 8], 1	      1214	ops.c	FUNCTION_23
0x40076f7	      0xe9b0000000	                           jmp 0x40077ac	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x40076fc	    0x488b05000000	            mov rax, qword [0x04007703] 	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4007703	        0x80781001	                cmp byte [rax + 0x10], 1	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4007707	            0x7414	                            je 0x400771d	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4007709	        0x488b4008	                mov rax, qword [rax + 8]	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x400770d	        0x4883e801	                              sub rax, 1	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4007711	          0x4839c3	                            cmp rbx, rax	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4007714	            0x7c07	                            jl 0x400771d	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4007716	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x400771b	            0x7422	                            je 0x400773f	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x400771d	          0x4589e0	                           mov r8d, r12d	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007720	      0xb901000000	                              mov ecx, 1	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007725	      0xba00000000	                              mov edx, 0	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x400772a	          0x4489f6	                           mov esi, r14d	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x400772d	      0xbf00000000	                              mov edi, 0	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007732	      0xe800000000	                          call 0x4007737	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007737	            0x85c0	                           test eax, eax	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4007739	     0xf84a1000000	                            je 0x40077e0	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x400773f	    0x488b05000000	            mov rax, qword [0x04007746] 	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4007746	          0x488b00	                    mov rax, qword [rax]	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4007749	        0x4a8b3c28	              mov rdi, qword [rax + r13]	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x400774d	      0xe800000000	                          call 0x4007752	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4007752	          0x4889c5	                            mov rbp, rax	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4007755	          0x4885c0	                           test rax, rax	      1311	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x4007758	            0x747a	                            je 0x40077d4	      1311	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x400775a	          0x4589e0	                           mov r8d, r12d	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x400775d	      0xb901000000	                              mov ecx, 1	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4007762	      0xba00000000	                              mov edx, 0	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4007767	          0x4489f6	                           mov esi, r14d	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x400776a	          0x4889c7	                            mov rdi, rax	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x400776d	      0xe800000000	                          call 0x4007772	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4007772	        0x89442408	                mov dword [rsp + 8], eax	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4007776	          0x4889ef	                            mov rdi, rbp	      1314	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x4007779	      0xe800000000	                          call 0x400777e	      1314	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x400777e	      0x837c240800	                  cmp dword [rsp + 8], 0	      1315	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x4007783	            0x7456	                            je 0x40077db	      1315	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x4007785	          0x4585ff	                         test r15d, r15d	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007788	            0x741e	                            je 0x40077a8	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x400778a	          0x4589e0	                           mov r8d, r12d	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x400778d	      0xb901000000	                              mov ecx, 1	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007792	      0xba00000000	                              mov edx, 0	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4007797	          0x4489f6	                           mov esi, r14d	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x400779a	      0xbf00000000	                              mov edi, 0	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x400779f	      0xe800000000	                          call 0x40077a4	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x40077a4	            0x85c0	                           test eax, eax	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x40077a6	            0x7438	                            je 0x40077e0	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x40077a8	        0x4983ed08	                              sub r13, 8	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x40077ac	        0x4883eb01	                              sub rbx, 1	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x40077b0	     0xf8946ffffff	                           jns 0x40076fc	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x40077b6	    0xc70500000000	               mov dword [0x040077c0], 1	      1321	ops.c	FUNCTION_23	ELSE_4
0x40077c0	        0x8b442408	                mov eax, dword [rsp + 8]	      1321	ops.c	FUNCTION_23	ELSE_4
0x40077c4	            0xeb1a	                           jmp 0x40077e0	      1321	ops.c	FUNCTION_23	ELSE_4
0x40077c6	      0xb801000000	                              mov eax, 1	      1239	ops.c	FUNCTION_23	IF_4
0x40077cb	            0xeb13	                           jmp 0x40077e0	      1239	ops.c	FUNCTION_23	IF_4
0x40077cd	      0xb800000000	                              mov eax, 0	      1290	ops.c	FUNCTION_23	ELSE_4	IF_13
0x40077d2	            0xeb0c	                           jmp 0x40077e0	      1290	ops.c	FUNCTION_23	ELSE_4	IF_13
0x40077d4	      0xb800000000	                              mov eax, 0	      1312	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x40077d9	            0xeb05	                           jmp 0x40077e0	      1312	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x40077db	      0xb800000000	                              mov eax, 0	      1316	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x40077e0	        0x4883c418	                           add rsp, 0x18	      1324	ops.c	FUNCTION_23
0x40077e4	              0x5b	                                 pop rbx	      1324	ops.c	FUNCTION_23
0x40077e5	              0x5d	                                 pop rbp	      1324	ops.c	FUNCTION_23
0x40077e6	            0x415c	                                 pop r12	      1324	ops.c	FUNCTION_23
0x40077e8	            0x415d	                                 pop r13	      1324	ops.c	FUNCTION_23
0x40077ea	            0x415e	                                 pop r14	      1324	ops.c	FUNCTION_23
0x40077ec	            0x415f	                                 pop r15	      1324	ops.c	FUNCTION_23
0x40077ee	              0xc3	                                     ret	      1324	ops.c	FUNCTION_23
swapchars	CALL,3:ELSE,0:WHILE,0:FOR,1:functions,0:IF,3:SWITCH,0:DO,0	42
0x400346c	            0x4156	                                push r14	      2509	ops.c	FUNCTION_37
0x400346e	            0x4155	                                push r13	      2509	ops.c	FUNCTION_37
0x4003470	            0x4154	                                push r12	      2509	ops.c	FUNCTION_37
0x4003472	              0x55	                                push rbp	      2509	ops.c	FUNCTION_37
0x4003473	              0x53	                                push rbx	      2509	ops.c	FUNCTION_37
0x4003474	            0x85d2	                           test edx, edx	      2513	ops.c	FUNCTION_37	FOR_1
0x4003476	            0x7e59	                           jle 0x40034d1	      2513	ops.c	FUNCTION_37	FOR_1
0x4003478	          0x4189fd	                           mov r13d, edi	      2513	ops.c	FUNCTION_37	FOR_1
0x400347b	          0x4889f5	                            mov rbp, rsi	      2513	ops.c	FUNCTION_37	FOR_1
0x400347e	            0x89d3	                            mov ebx, edx	      2513	ops.c	FUNCTION_37	FOR_1
0x4003480	    0x41bc00000000	                             mov r12d, 0	      2513	ops.c	FUNCTION_37	FOR_1
0x4003486	    0x833d00000000	               cmp dword [0x0400348d], 0	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x400348d	            0x741e	                            je 0x40034ad	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x400348f	    0x4c8b35000000	            mov r14, qword [0x04003496] 	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4003496	          0x4889ef	                            mov rdi, rbp	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4003499	      0xe800000000	                          call 0x400349e	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x400349e	          0x4889c7	                            mov rdi, rax	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x40034a1	          0x41ffd6	                                call r14	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x40034a4	            0x85c0	                           test eax, eax	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x40034a6	            0x7e05	                           jle 0x40034ad	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x40034a8	          0x83e801	                              sub eax, 1	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x40034ab	            0x29c3	                            sub ebx, eax	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x40034ad	          0x4889ee	                            mov rsi, rbp	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x40034b0	          0x4489ef	                           mov edi, r13d	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x40034b3	      0xe800000000	                          call 0x40034b8	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x40034b8	          0x4109c4	                            or r12d, eax	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x40034bb	          0x4889ef	                            mov rdi, rbp	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x40034be	      0xe800000000	                          call 0x40034c3	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x40034c3	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x40034c6	            0x740f	                            je 0x40034d7	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x40034c8	          0x83eb01	                              sub ebx, 1	      2513	ops.c	FUNCTION_37	FOR_1
0x40034cb	            0x85db	                           test ebx, ebx	      2513	ops.c	FUNCTION_37	FOR_1
0x40034cd	            0x7fb7	                            jg 0x4003486	      2513	ops.c	FUNCTION_37	FOR_1
0x40034cf	            0xeb06	                           jmp 0x40034d7	      2513	ops.c	FUNCTION_37	FOR_1
0x40034d1	    0x41bc00000000	                             mov r12d, 0	      2511	ops.c	FUNCTION_37
0x40034d7	          0x4489e0	                           mov eax, r12d	      2530	ops.c	FUNCTION_37
0x40034da	              0x5b	                                 pop rbx	      2530	ops.c	FUNCTION_37
0x40034db	              0x5d	                                 pop rbp	      2530	ops.c	FUNCTION_37
0x40034dc	            0x415c	                                 pop r12	      2530	ops.c	FUNCTION_37
0x40034de	            0x415d	                                 pop r13	      2530	ops.c	FUNCTION_37
0x40034e0	            0x415e	                                 pop r14	      2530	ops.c	FUNCTION_37
0x40034e2	              0xc3	                                     ret	      2530	ops.c	FUNCTION_37
put_in_typebuf	CALL,6:ELSE,2:WHILE,0:FOR,0:functions,0:IF,6:SWITCH,0:DO,0	69
0x40007ab	            0x4156	                                push r14	      1365	ops.c	FUNCTION_25
0x40007ad	            0x4155	                                push r13	      1365	ops.c	FUNCTION_25
0x40007af	            0x4154	                                push r12	      1365	ops.c	FUNCTION_25
0x40007b1	              0x55	                                push rbp	      1365	ops.c	FUNCTION_25
0x40007b2	              0x53	                                push rbx	      1365	ops.c	FUNCTION_25
0x40007b3	          0x4989fd	                            mov r13, rdi	      1365	ops.c	FUNCTION_25
0x40007b6	          0x4189f6	                           mov r14d, esi	      1365	ops.c	FUNCTION_25
0x40007b9	          0x4189d4	                           mov r12d, edx	      1365	ops.c	FUNCTION_25
0x40007bc	            0x89cb	                            mov ebx, ecx	      1365	ops.c	FUNCTION_25
0x40007be	            0x89cf	                            mov edi, ecx	      1368	ops.c	FUNCTION_25	CALL_1
0x40007c0	      0xe85dffffff	          call sym.put_reedit_in_typebuf	      1368	ops.c	FUNCTION_25	CALL_1
0x40007c5	          0x4585e4	                         test r12d, r12d	      1369	ops.c	FUNCTION_25	IF_1
0x40007c8	            0x7427	                            je 0x40007f1	      1369	ops.c	FUNCTION_25	IF_1
0x40007ca	          0x4189d8	                            mov r8d, ebx	      1370	ops.c	FUNCTION_25	CALL_2
0x40007cd	      0xb901000000	                              mov ecx, 1	      1370	ops.c	FUNCTION_25	CALL_2
0x40007d2	      0xba00000000	                              mov edx, 0	      1370	ops.c	FUNCTION_25	CALL_2
0x40007d7	      0xbeffffffff	                     mov esi, 0xffffffff	      1370	ops.c	FUNCTION_25	CALL_2
0x40007dc	      0xbf00000000	                              mov edi, 0	      1370	ops.c	FUNCTION_25	CALL_2
0x40007e1	      0xe800000000	                          call 0x40007e6	      1370	ops.c	FUNCTION_25	CALL_2
0x40007e6	            0x89c5	                            mov ebp, eax	      1370	ops.c	FUNCTION_25	CALL_2
0x40007e8	          0x83f801	                              cmp eax, 1	      1371	ops.c	FUNCTION_25	IF_2
0x40007eb	     0xf8585000000	                           jne 0x4000876	      1371	ops.c	FUNCTION_25	IF_2
0x40007f1	          0x4585f6	                         test r14d, r14d	      1375	ops.c	FUNCTION_25	IF_2	IF_3
0x40007f4	            0x7479	                            je 0x400086f	      1375	ops.c	FUNCTION_25	IF_2	IF_3
0x40007f6	          0x4c89ef	                            mov rdi, r13	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x40007f9	      0xe800000000	                          call 0x40007fe	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x40007fe	          0x4989c5	                            mov r13, rax	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x4000801	          0x4885c0	                           test rax, rax	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x4000804	            0x742b	                            je 0x4000831	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x4000806	          0x4585f6	                         test r14d, r14d	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000809	        0x400f95c6	                               setne sil	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x400080d	        0x400fb6f6	                          movzx esi, sil	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000811	            0xf7de	                                 neg esi	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000813	          0x4189d8	                            mov r8d, ebx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000816	      0xb901000000	                              mov ecx, 1	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x400081b	      0xba00000000	                              mov edx, 0	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000820	          0x4c89ef	                            mov rdi, r13	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000823	      0xe800000000	                          call 0x4000828	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4000828	            0x89c5	                            mov ebp, eax	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x400082a	          0x4585f6	                         test r14d, r14d	      1384	ops.c	FUNCTION_25	IF_2	IF_5
0x400082d	            0x740f	                            je 0x400083e	      1384	ops.c	FUNCTION_25	IF_2	IF_5
0x400082f	            0xeb05	                           jmp 0x4000836	      1384	ops.c	FUNCTION_25	IF_2	IF_5
0x4000831	      0xbd00000000	                              mov ebp, 0	      1380	ops.c	FUNCTION_25	IF_2	IF_4
0x4000836	          0x4c89ef	                            mov rdi, r13	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4000839	      0xe800000000	                          call 0x400083e	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x400083e	          0x4585e4	                         test r12d, r12d	      1387	ops.c	FUNCTION_25	IF_6
0x4000841	            0x7433	                            je 0x4000876	      1387	ops.c	FUNCTION_25	IF_6
0x4000843	          0x83fd01	                              cmp ebp, 1	      1387	ops.c	FUNCTION_25	IF_6
0x4000846	            0x752e	                           jne 0x4000876	      1387	ops.c	FUNCTION_25	IF_6
0x4000848	          0x4189d8	                            mov r8d, ebx	      1388	ops.c	FUNCTION_25	CALL_6
0x400084b	      0xb901000000	                              mov ecx, 1	      1388	ops.c	FUNCTION_25	CALL_6
0x4000850	      0xba00000000	                              mov edx, 0	      1388	ops.c	FUNCTION_25	CALL_6
0x4000855	      0xbeffffffff	                     mov esi, 0xffffffff	      1388	ops.c	FUNCTION_25	CALL_6
0x400085a	      0xbf00000000	                              mov edi, 0	      1388	ops.c	FUNCTION_25	CALL_6
0x400085f	      0xe800000000	                          call 0x4000864	      1388	ops.c	FUNCTION_25	CALL_6
0x4000864	            0x89c5	                            mov ebp, eax	      1388	ops.c	FUNCTION_25	CALL_6
0x4000866	            0xeb0e	                           jmp 0x4000876	      1388	ops.c	FUNCTION_25	CALL_6
0x4000868	      0xbd00000000	                              mov ebp, 0	      1380	ops.c	FUNCTION_25	IF_2	IF_4
0x400086d	            0xeb07	                           jmp 0x4000876	      1389	ops.c	FUNCTION_25
0x400086f	          0x4d85ed	                           test r13, r13	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x4000872	            0x7592	                           jne 0x4000806	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x4000874	            0xebf2	                           jmp 0x4000868	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x4000876	            0x89e8	                            mov eax, ebp	      1390	ops.c	FUNCTION_25
0x4000878	              0x5b	                                 pop rbx	      1390	ops.c	FUNCTION_25
0x4000879	              0x5d	                                 pop rbp	      1390	ops.c	FUNCTION_25
0x400087a	            0x415c	                                 pop r12	      1390	ops.c	FUNCTION_25
0x400087c	            0x415d	                                 pop r13	      1390	ops.c	FUNCTION_25
0x400087e	            0x415e	                                 pop r14	      1390	ops.c	FUNCTION_25
0x4000880	              0xc3	                                     ret	      1390	ops.c	FUNCTION_25
get_expr_line_src	CALL,1:ELSE,0:WHILE,0:FOR,0:functions,0:IF,1:SWITCH,0:DO,0	8
0x40021ce	    0x488b05000000	            mov rax, qword [0x040021d5] 	       856	ops.c	FUNCTION_13	IF_1
0x40021d5	          0x4885c0	                           test rax, rax	       856	ops.c	FUNCTION_13	IF_1
0x40021d8	            0x7410	                            je 0x40021ea	       856	ops.c	FUNCTION_13	IF_1
0x40021da	        0x4883ec08	                              sub rsp, 8	       855	ops.c	FUNCTION_13
0x40021de	          0x4889c7	                            mov rdi, rax	       858	ops.c	FUNCTION_13	CALL_1
0x40021e1	      0xe800000000	                          call 0x40021e6	       858	ops.c	FUNCTION_13	CALL_1
0x40021e6	        0x4883c408	                              add rsp, 8	       859	ops.c	FUNCTION_13
0x40021ea	            0xf3c3	                                     ret	       859	ops.c	FUNCTION_13
clip_get_selection	CALL,7:ELSE,1:WHILE,0:FOR,0:functions,0:IF,3:SWITCH,0:DO,0	127
0x40070c3	            0x4157	                                push r15	      6570	ops.c	FUNCTION_75
0x40070c5	            0x4156	                                push r14	      6570	ops.c	FUNCTION_75
0x40070c7	            0x4155	                                push r13	      6570	ops.c	FUNCTION_75
0x40070c9	            0x4154	                                push r12	      6570	ops.c	FUNCTION_75
0x40070cb	              0x55	                                push rbp	      6570	ops.c	FUNCTION_75
0x40070cc	              0x53	                                push rbx	      6570	ops.c	FUNCTION_75
0x40070cd	    0x4881ec280100	                          sub rsp, 0x128	      6570	ops.c	FUNCTION_75
0x40070d4	          0x4889fb	                            mov rbx, rdi	      6570	ops.c	FUNCTION_75
0x40070d7	    0x64488b042528	                mov rax, qword fs:[0x28]	      6570	ops.c	FUNCTION_75
0x40070e0	    0x488984241801	            mov qword [rsp + 0x118], rax	      6570	ops.c	FUNCTION_75
0x40070e8	            0x31c0	                            xor eax, eax	      6570	ops.c	FUNCTION_75
0x40070ea	        0x837f0400	                  cmp dword [rdi + 4], 0	      6581	ops.c	FUNCTION_75	IF_1
0x40070ee	     0xf8402020000	                            je 0x40072f6	      6581	ops.c	FUNCTION_75	IF_1
0x40070f4	    0x4881ff000000	                              cmp rdi, 0	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x40070fb	            0x750e	                           jne 0x400710b	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x40070fd	    0x48833d000000	               cmp qword [0x04007105], 0	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x4007105	     0xf8504020000	                           jne 0x400730f	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x400710b	    0x4881fb000000	                              cmp rbx, 0	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4007112	            0x750e	                           jne 0x4007122	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4007114	    0x48833d000000	               cmp qword [0x0400711c], 0	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x400711c	     0xf85ed010000	                           jne 0x400730f	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4007122	    0x4c8b3d000000	            mov r15, qword [0x04007129] 	      6588	ops.c	FUNCTION_75	IF_1
0x4007129	    0x4c8b35000000	            mov r14, qword [0x04007130] 	      6589	ops.c	FUNCTION_75	IF_1
0x4007130	    0x488b05000000	            mov rax, qword [0x04007137] 	      6590	ops.c	FUNCTION_75	IF_1
0x4007137	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	      6590	ops.c	FUNCTION_75	IF_1
0x400713b	          0x8b5040	            mov edx, dword [rax + 0x40] 	      6590	ops.c	FUNCTION_75	IF_1
0x400713e	        0x89542428	             mov dword [rsp + 0x28], edx	      6590	ops.c	FUNCTION_75	IF_1
0x4007142	          0x8b7044	            mov esi, dword [rax + 0x44] 	      6590	ops.c	FUNCTION_75	IF_1
0x4007145	        0x89742424	             mov dword [rsp + 0x24], esi	      6590	ops.c	FUNCTION_75	IF_1
0x4007149	          0x8b4848	            mov ecx, dword [rax + 0x48] 	      6591	ops.c	FUNCTION_75	IF_1
0x400714c	        0x894c2404	                mov dword [rsp + 4], ecx	      6591	ops.c	FUNCTION_75	IF_1
0x4007150	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      6592	ops.c	FUNCTION_75	IF_1
0x4007153	        0x89442408	                mov dword [rsp + 8], eax	      6592	ops.c	FUNCTION_75	IF_1
0x4007157	    0x488b05000000	            mov rax, qword [0x0400715e] 	      6593	ops.c	FUNCTION_75	IF_1
0x400715e	    0x488bb8e01100	          mov rdi, qword [rax + 0x11e0] 	      6593	ops.c	FUNCTION_75	IF_1
0x4007165	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      6593	ops.c	FUNCTION_75	IF_1
0x400716a	    0x448b88e81100	          mov r9d, dword [rax + 0x11e8] 	      6593	ops.c	FUNCTION_75	IF_1
0x4007171	      0x44894c243c	             mov dword [rsp + 0x3c], r9d	      6593	ops.c	FUNCTION_75	IF_1
0x4007176	    0x448b90ec1100	         mov r10d, dword [rax + 0x11ec] 	      6593	ops.c	FUNCTION_75	IF_1
0x400717d	      0x4489542438	            mov dword [rsp + 0x38], r10d	      6593	ops.c	FUNCTION_75	IF_1
0x4007182	    0x4c8b98001200	          mov r11, qword [rax + 0x1200] 	      6594	ops.c	FUNCTION_75	IF_1
0x4007189	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      6594	ops.c	FUNCTION_75	IF_1
0x400718e	    0x448b80081200	          mov r8d, dword [rax + 0x1208] 	      6594	ops.c	FUNCTION_75	IF_1
0x4007195	      0x448944242c	             mov dword [rsp + 0x2c], r8d	      6594	ops.c	FUNCTION_75	IF_1
0x400719a	    0x8ba80c120000	          mov ebp, dword [rax + 0x120c] 	      6594	ops.c	FUNCTION_75	IF_1
0x40071a0	        0x896c2420	             mov dword [rsp + 0x20], ebp	      6594	ops.c	FUNCTION_75	IF_1
0x40071a4	    0x4c8b25000000	            mov r12, qword [0x040071ab] 	      6595	ops.c	FUNCTION_75	IF_1
0x40071ab	      0x4c89642410	             mov qword [rsp + 0x10], r12	      6595	ops.c	FUNCTION_75	IF_1
0x40071b0	    0x8b2d00000000	            mov ebp, dword [0x040071b6] 	      6595	ops.c	FUNCTION_75	IF_1
0x40071b6	        0x896c240c	              mov dword [rsp + 0xc], ebp	      6595	ops.c	FUNCTION_75	IF_1
0x40071ba	    0x448b25000000	           mov r12d, dword [0x040071c1] 	      6595	ops.c	FUNCTION_75	IF_1
0x40071c1	    0x8b2d00000000	            mov ebp, dword [0x040071c7] 	      6596	ops.c	FUNCTION_75	IF_1
0x40071c7	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      6597	ops.c	FUNCTION_75	IF_1	CALL_1
0x40071cf	      0xe800000000	                          call 0x40071d4	      6597	ops.c	FUNCTION_75	IF_1	CALL_1
0x40071d4	    0x4881fb000000	                              cmp rbx, 0	      6598	ops.c	FUNCTION_75	IF_1
0x40071db	           0xf94c0	                                 sete al	      6598	ops.c	FUNCTION_75	IF_1
0x40071de	           0xfb6c0	                           movzx eax, al	      6598	ops.c	FUNCTION_75	IF_1
0x40071e1	          0x83c02a	                           add eax, 0x2a	      6598	ops.c	FUNCTION_75	IF_1
0x40071e4	    0x898424940000	             mov dword [rsp + 0x94], eax	      6598	ops.c	FUNCTION_75	IF_1
0x40071eb	    0xc78424900000	               mov dword [rsp + 0x90], 2	      6599	ops.c	FUNCTION_75	IF_1
0x40071f6	      0x4c8d442440	                    lea r8, [rsp + 0x40]	        90	string3.h	FUNCTION_95	CALL_6
0x40071fb	      0xb909000000	                              mov ecx, 9	        90	string3.h	FUNCTION_95	CALL_6
0x4007200	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_95	CALL_6
0x4007205	          0x4c89c7	                             mov rdi, r8	        90	string3.h	FUNCTION_95	CALL_6
0x4007208	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_95	CALL_6
0x400720b	    0x488d84249000	                   lea rax, [rsp + 0x90]	      6601	ops.c	FUNCTION_75	IF_1
0x4007213	      0x4889442440	             mov qword [rsp + 0x40], rax	      6601	ops.c	FUNCTION_75	IF_1
0x4007218	    0xc744244c7900	           mov dword [rsp + 0x4c], 0x79 	      6602	ops.c	FUNCTION_75	IF_1
0x4007220	    0x48c744247001	               mov qword [rsp + 0x70], 1	      6603	ops.c	FUNCTION_75	IF_1
0x4007229	    0xc744247c0200	               mov dword [rsp + 0x7c], 2	      6604	ops.c	FUNCTION_75	IF_1
0x4007231	      0xba01000000	                              mov edx, 1	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x4007236	      0xbe00000000	                              mov esi, 0	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x400723b	          0x4c89c7	                             mov rdi, r8	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x400723e	      0xe800000000	                          call 0x4007243	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x4007243	    0x4c893d000000	            mov qword [0x0400724a], r15 	      6606	ops.c	FUNCTION_75	IF_1
0x400724a	    0x4c8935000000	            mov qword [0x04007251], r14 	      6607	ops.c	FUNCTION_75	IF_1
0x4007251	    0x488b05000000	            mov rax, qword [0x04007258] 	      6608	ops.c	FUNCTION_75	IF_1
0x4007258	        0x4c896838	             mov qword [rax + 0x38], r13	      6608	ops.c	FUNCTION_75	IF_1
0x400725c	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      6608	ops.c	FUNCTION_75	IF_1
0x4007260	          0x895040	             mov dword [rax + 0x40], edx	      6608	ops.c	FUNCTION_75	IF_1
0x4007263	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      6608	ops.c	FUNCTION_75	IF_1
0x4007267	          0x897044	             mov dword [rax + 0x44], esi	      6608	ops.c	FUNCTION_75	IF_1
0x400726a	      0xe800000000	                          call 0x400726f	      6609	ops.c	FUNCTION_75	IF_1	CALL_4
0x400726f	    0x488b05000000	            mov rax, qword [0x04007276] 	      6610	ops.c	FUNCTION_75	IF_1
0x4007276	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      6610	ops.c	FUNCTION_75	IF_1
0x400727a	          0x894848	             mov dword [rax + 0x48], ecx	      6610	ops.c	FUNCTION_75	IF_1
0x400727d	        0x8b542408	                mov edx, dword [rsp + 8]	      6611	ops.c	FUNCTION_75	IF_1
0x4007281	          0x89504c	             mov dword [rax + 0x4c], edx	      6611	ops.c	FUNCTION_75	IF_1
0x4007284	    0x488b05000000	            mov rax, qword [0x0400728b] 	      6612	ops.c	FUNCTION_75	IF_1
0x400728b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6612	ops.c	FUNCTION_75	IF_1
0x4007290	    0x4889b8e01100	          mov qword [rax + 0x11e0], rdi 	      6612	ops.c	FUNCTION_75	IF_1
0x4007297	      0x448b4c243c	            mov r9d, dword [rsp + 0x3c] 	      6612	ops.c	FUNCTION_75	IF_1
0x400729c	    0x448988e81100	          mov dword [rax + 0x11e8], r9d 	      6612	ops.c	FUNCTION_75	IF_1
0x40072a3	      0x448b542438	           mov r10d, dword [rsp + 0x38] 	      6612	ops.c	FUNCTION_75	IF_1
0x40072a8	    0x448990ec1100	         mov dword [rax + 0x11ec], r10d 	      6612	ops.c	FUNCTION_75	IF_1
0x40072af	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      6613	ops.c	FUNCTION_75	IF_1
0x40072b4	    0x4c8998001200	          mov qword [rax + 0x1200], r11 	      6613	ops.c	FUNCTION_75	IF_1
0x40072bb	      0x448b44242c	            mov r8d, dword [rsp + 0x2c] 	      6613	ops.c	FUNCTION_75	IF_1
0x40072c0	    0x448980081200	          mov dword [rax + 0x1208], r8d 	      6613	ops.c	FUNCTION_75	IF_1
0x40072c7	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      6613	ops.c	FUNCTION_75	IF_1
0x40072cb	    0x89b00c120000	          mov dword [rax + 0x120c], esi 	      6613	ops.c	FUNCTION_75	IF_1
0x40072d1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6614	ops.c	FUNCTION_75	IF_1
0x40072d6	    0x488905000000	            mov qword [0x040072dd], rax 	      6614	ops.c	FUNCTION_75	IF_1
0x40072dd	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      6614	ops.c	FUNCTION_75	IF_1
0x40072e1	    0x890500000000	            mov dword [0x040072e7], eax 	      6614	ops.c	FUNCTION_75	IF_1
0x40072e7	    0x448925000000	           mov dword [0x040072ee], r12d 	      6614	ops.c	FUNCTION_75	IF_1
0x40072ee	    0x892d00000000	            mov dword [0x040072f4], ebp 	      6615	ops.c	FUNCTION_75	IF_1
0x40072f4	            0xeb19	                           jmp 0x400730f	      6615	ops.c	FUNCTION_75	IF_1
0x40072f6	      0xe800000000	                          call 0x40072fb	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x40072fb	            0x85c0	                           test eax, eax	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x40072fd	            0x7510	                           jne 0x400730f	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x40072ff	          0x4889df	                            mov rdi, rbx	      6619	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_6
0x4007302	      0xe800000000	                          call 0x4007307	      6619	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_6
0x4007307	          0x4889df	                            mov rdi, rbx	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x400730a	      0xe800000000	                          call 0x400730f	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x400730f	    0x488b84241801	           mov rax, qword [rsp + 0x118] 	      6624	ops.c	FUNCTION_75
0x4007317	    0x644833042528	                xor rax, qword fs:[0x28]	      6624	ops.c	FUNCTION_75
0x4007320	            0x7405	                            je 0x4007327	      6624	ops.c	FUNCTION_75
0x4007322	      0xe800000000	                          call 0x4007327	      6624	ops.c	FUNCTION_75
0x4007327	    0x4881c4280100	                          add rsp, 0x128	      6624	ops.c	FUNCTION_75
0x400732e	              0x5b	                                 pop rbx	      6624	ops.c	FUNCTION_75
0x400732f	              0x5d	                                 pop rbp	      6624	ops.c	FUNCTION_75
0x4007330	            0x415c	                                 pop r12	      6624	ops.c	FUNCTION_75
0x4007332	            0x415d	                                 pop r13	      6624	ops.c	FUNCTION_75
0x4007334	            0x415e	                                 pop r14	      6624	ops.c	FUNCTION_75
0x4007336	            0x415f	                                 pop r15	      6624	ops.c	FUNCTION_75
0x4007338	              0xc3	                                     ret	      6624	ops.c	FUNCTION_75
op_reindent	CALL,15:ELSE,3:WHILE,0:FOR,1:functions,0:IF,10:SWITCH,0:DO,0	166
0x4001e71	            0x4157	                                push r15	       702	ops.c	FUNCTION_9
0x4001e73	            0x4156	                                push r14	       702	ops.c	FUNCTION_9
0x4001e75	            0x4155	                                push r13	       702	ops.c	FUNCTION_9
0x4001e77	            0x4154	                                push r12	       702	ops.c	FUNCTION_9
0x4001e79	              0x55	                                push rbp	       702	ops.c	FUNCTION_9
0x4001e7a	              0x53	                                push rbx	       702	ops.c	FUNCTION_9
0x4001e7b	        0x4883ec18	                           sub rsp, 0x18	       702	ops.c	FUNCTION_9
0x4001e7f	    0x488b05000000	            mov rax, qword [0x04001e86] 	       711	ops.c	FUNCTION_9	IF_1
0x4001e86	    0x83b840150000	             cmp dword [rax + 0x1540], 0	       711	ops.c	FUNCTION_9	IF_1
0x4001e8d	            0x7521	                           jne 0x4001eb0	       711	ops.c	FUNCTION_9	IF_1
0x4001e8f	      0xba05000000	                              mov edx, 5	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4001e94	      0xbe00000000	                              mov esi, 0	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4001e99	      0xbf00000000	                              mov edi, 0	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4001e9e	      0xe800000000	                          call 0x4001ea3	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4001ea3	          0x4889c7	                            mov rdi, rax	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4001ea6	      0xe800000000	                          call 0x4001eab	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4001eab	      0xe940020000	                           jmp 0x40020f0	       714	ops.c	FUNCTION_9	IF_1
0x4001eb0	          0x4889fd	                            mov rbp, rdi	       714	ops.c	FUNCTION_9	IF_1
0x4001eb3	          0x4989f5	                            mov r13, rsi	       714	ops.c	FUNCTION_9	IF_1
0x4001eb6	    0x488b05000000	            mov rax, qword [0x04001ebd] 	       708	ops.c	FUNCTION_9
0x4001ebd	        0x488b4038	            mov rax, qword [rax + 0x38] 	       708	ops.c	FUNCTION_9
0x4001ec1	      0x4889442408	                mov qword [rsp + 8], rax	       708	ops.c	FUNCTION_9
0x4001ec6	        0x4c8b6750	            mov r12, qword [rdi + 0x50] 	       717	ops.c	FUNCTION_9	FOR_1
0x4001eca	          0x4c89e3	                            mov rbx, r12	       717	ops.c	FUNCTION_9	FOR_1
0x4001ecd	        0x4883eb01	                              sub rbx, 1	       717	ops.c	FUNCTION_9	FOR_1
0x4001ed1	     0xf8807020000	                            js 0x40020de	       717	ops.c	FUNCTION_9	FOR_1
0x4001ed7	    0x8b0500000000	            mov eax, dword [0x04001edd] 	       717	ops.c	FUNCTION_9	FOR_1
0x4001edd	            0x85c0	                           test eax, eax	       717	ops.c	FUNCTION_9	FOR_1
0x4001edf	     0xf85f9010000	                           jne 0x40020de	       717	ops.c	FUNCTION_9	FOR_1
0x4001ee5	    0x41be00000000	                             mov r14d, 0	       717	ops.c	FUNCTION_9	FOR_1
0x4001eeb	    0x41bf00000000	                             mov r15d, 0	       717	ops.c	FUNCTION_9	FOR_1
0x4001ef1	    0x49bc0bd7a370	          movabs r12, 0xa3d70a3d70a3d70b	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001efb	            0xeb03	                           jmp 0x4001f00	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001efd	          0x4889d3	                            mov rbx, rdx	       717	ops.c	FUNCTION_9	FOR_1
0x4001f00	        0x4883fb01	                              cmp rbx, 1	       722	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f04	            0x7e65	                           jle 0x4001f6b	       722	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f06	          0x4889d8	                            mov rax, rbx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f09	          0x49f7ec	                                imul r12	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f0c	          0x4801da	                            add rdx, rbx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f0f	        0x48c1fa05	                              sar rdx, 5	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f13	          0x4889d8	                            mov rax, rbx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f16	        0x48c1f83f	                           sar rax, 0x3f	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f1a	          0x4829c2	                            sub rdx, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f1d	        0x488d0492	                  lea rax, [rdx + rdx*4]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f21	        0x488d0480	                  lea rax, [rax + rax*4]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f25	          0x4801c0	                            add rax, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f28	          0x4839c3	                            cmp rbx, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f2b	            0x740d	                            je 0x4001f3a	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f2d	        0x488b4550	            mov rax, qword [rbp + 0x50] 	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f31	        0x4883e801	                              sub rax, 1	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f35	          0x4839d8	                            cmp rax, rbx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f38	            0x7553	                           jne 0x4001f8d	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f3a	    0x488b05000000	            mov rax, qword [0x04001f41] 	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f41	        0x48394550	            cmp qword [rbp + 0x50], rax 	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f45	            0x7e24	                           jle 0x4001f6b	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001f47	      0xba05000000	                              mov edx, 5	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001f4c	      0xbe00000000	                              mov esi, 0	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001f51	      0xbf00000000	                              mov edi, 0	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001f56	      0xe800000000	                          call 0x4001f5b	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001f5b	          0x4889de	                            mov rsi, rbx	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001f5e	          0x4889c7	                            mov rdi, rax	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001f61	      0xb800000000	                              mov eax, 0	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001f66	      0xe800000000	                          call 0x4001f6b	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001f6b	        0x488b4550	            mov rax, qword [rbp + 0x50] 	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001f6f	        0x4883f801	                              cmp rax, 1	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001f73	           0xf94c1	                                 sete cl	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001f76	    0x4981fd000000	                              cmp r13, 0	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001f7d	           0xf95c2	                                setne dl	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001f80	             0x8d1	                               or cl, dl	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001f82	            0x7509	                           jne 0x4001f8d	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001f84	        0x4883e801	                              sub rax, 1	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001f88	          0x4839d8	                            cmp rax, rbx	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001f8b	            0x7449	                            je 0x4001fd6	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001f8d	      0xe800000000	                          call 0x4001f92	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x4001f92	          0x4889c7	                            mov rdi, rax	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x4001f95	      0xe800000000	                          call 0x4001f9a	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x4001f9a	      0xbf00000000	                              mov edi, 0	       738	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4001f9f	          0x803800	                       cmp byte [rax], 0	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4001fa2	            0x7409	                            je 0x4001fad	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4001fa4	          0x41ffd5	                                call r13	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x4001fa7	            0x89c7	                            mov edi, eax	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x4001fa9	            0x85c0	                           test eax, eax	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4001fab	            0x7829	                            js 0x4001fd6	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4001fad	      0xbe04000000	                              mov esi, 4	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4001fb2	      0xe800000000	                          call 0x4001fb7	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4001fb7	            0x85c0	                           test eax, eax	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4001fb9	            0x741b	                            je 0x4001fd6	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4001fbb	          0x4d85ff	                           test r15, r15	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4001fbe	            0x750b	                           jne 0x4001fcb	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4001fc0	    0x488b05000000	            mov rax, qword [0x04001fc7] 	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4001fc7	        0x4c8b7838	            mov r15, qword [rax + 0x38] 	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4001fcb	    0x488b05000000	            mov rax, qword [0x04001fd2] 	       747	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5
0x4001fd2	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	       747	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5
0x4001fd6	    0x488b05000000	            mov rax, qword [0x04001fdd] 	       750	ops.c	FUNCTION_9	FOR_1
0x4001fdd	      0x4883403801	               add qword [rax + 0x38], 1	       750	ops.c	FUNCTION_9	FOR_1
0x4001fe2	    0xc74040000000	               mov dword [rax + 0x40], 0	       751	ops.c	FUNCTION_9	FOR_1
0x4001fe9	        0x488d53ff	                      lea rdx, [rbx - 1]	       717	ops.c	FUNCTION_9	FOR_1
0x4001fed	        0x4883faff	             cmp rdx, 0xffffffffffffffff	       717	ops.c	FUNCTION_9	FOR_1
0x4001ff1	            0x740e	                            je 0x4002001	       717	ops.c	FUNCTION_9	FOR_1
0x4001ff3	    0x8b0d00000000	            mov ecx, dword [0x04001ff9] 	       717	ops.c	FUNCTION_9	FOR_1
0x4001ff9	            0x85c9	                           test ecx, ecx	       717	ops.c	FUNCTION_9	FOR_1
0x4001ffb	     0xf84fcfeffff	                            je 0x4001efd	       717	ops.c	FUNCTION_9	FOR_1
0x4002001	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	       755	ops.c	FUNCTION_9
0x4002006	        0x4c896838	             mov qword [rax + 0x38], r13	       755	ops.c	FUNCTION_9
0x400200a	      0xbf06000000	                              mov edi, 6	       756	ops.c	FUNCTION_9	CALL_9
0x400200f	      0xe800000000	                          call 0x4002014	       756	ops.c	FUNCTION_9	CALL_9
0x4002014	          0x4d85f6	                           test r14, r14	       761	ops.c	FUNCTION_9	IF_7
0x4002017	            0x7425	                            je 0x400203e	       761	ops.c	FUNCTION_9	IF_7
0x4002019	        0x498d5601	                      lea rdx, [r14 + 1]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400201d	        0x837d5c00	               cmp dword [rbp + 0x5c], 0	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002021	            0x7407	                            je 0x400202a	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002023	          0x4c89ea	                            mov rdx, r13	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002026	        0x48035550	             add rdx, qword [rbp + 0x50]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400202a	      0xb900000000	                              mov ecx, 0	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400202f	      0xbe00000000	                              mov esi, 0	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002034	          0x4c89ff	                            mov rdi, r15	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002037	      0xe800000000	                          call 0x400203c	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400203c	            0xeb10	                           jmp 0x400204e	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400203e	        0x837d5c00	               cmp dword [rbp + 0x5c], 0	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002042	            0x740a	                            je 0x400204e	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002044	      0xbf14000000	                           mov edi, 0x14	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002049	      0xe800000000	                          call 0x400204e	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x400204e	        0x488b7550	            mov rsi, qword [rbp + 0x50] 	       768	ops.c	FUNCTION_9	IF_9
0x4002052	    0x483b35000000	            cmp rsi, qword [0x04002059] 	       768	ops.c	FUNCTION_9	IF_9
0x4002059	            0x7e4e	                           jle 0x40020a9	       768	ops.c	FUNCTION_9	IF_9
0x400205b	          0x4829de	                            sub rsi, rbx	       770	ops.c	FUNCTION_9	IF_9
0x400205e	          0x4889f3	                            mov rbx, rsi	       770	ops.c	FUNCTION_9	IF_9
0x4002061	        0x4883fe01	                              cmp rsi, 1	       771	ops.c	FUNCTION_9	IF_9	IF_10
0x4002065	            0x751e	                           jne 0x4002085	       771	ops.c	FUNCTION_9	IF_9	IF_10
0x4002067	      0xba05000000	                              mov edx, 5	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x400206c	      0xbe00000000	                              mov esi, 0	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002071	      0xbf00000000	                              mov edi, 0	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002076	      0xe800000000	                          call 0x400207b	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x400207b	          0x4889c7	                            mov rdi, rax	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x400207e	      0xe800000000	                          call 0x4002083	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002083	            0xeb24	                           jmp 0x40020a9	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002085	      0xba05000000	                              mov edx, 5	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x400208a	      0xbe00000000	                              mov esi, 0	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x400208f	      0xbf00000000	                              mov edi, 0	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002094	      0xe800000000	                          call 0x4002099	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002099	          0x4889de	                            mov rsi, rbx	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x400209c	          0x4889c7	                            mov rdi, rax	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x400209f	      0xb800000000	                              mov eax, 0	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x40020a4	      0xe800000000	                          call 0x40020a9	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x40020a9	    0x488b05000000	            mov rax, qword [0x040020b0] 	       777	ops.c	FUNCTION_9
0x40020b0	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	       777	ops.c	FUNCTION_9
0x40020b4	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	       777	ops.c	FUNCTION_9
0x40020b8	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	       777	ops.c	FUNCTION_9
0x40020bf	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	       777	ops.c	FUNCTION_9
0x40020c6	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	       778	ops.c	FUNCTION_9
0x40020ca	        0x488b5d38	            mov rbx, qword [rbp + 0x38] 	       778	ops.c	FUNCTION_9
0x40020ce	    0x488988001200	          mov qword [rax + 0x1200], rcx 	       778	ops.c	FUNCTION_9
0x40020d5	    0x488998081200	          mov qword [rax + 0x1208], rbx 	       778	ops.c	FUNCTION_9
0x40020dc	            0xeb12	                           jmp 0x40020f0	       778	ops.c	FUNCTION_9
0x40020de	      0xbf06000000	                              mov edi, 6	       756	ops.c	FUNCTION_9	CALL_9
0x40020e3	      0xe800000000	                          call 0x40020e8	       756	ops.c	FUNCTION_9	CALL_9
0x40020e8	          0x4c89e3	                            mov rbx, r12	       756	ops.c	FUNCTION_9	CALL_9
0x40020eb	      0xe94effffff	                           jmp 0x400203e	       756	ops.c	FUNCTION_9	CALL_9
0x40020f0	        0x4883c418	                           add rsp, 0x18	       779	ops.c	FUNCTION_9
0x40020f4	              0x5b	                                 pop rbx	       779	ops.c	FUNCTION_9
0x40020f5	              0x5d	                                 pop rbp	       779	ops.c	FUNCTION_9
0x40020f6	            0x415c	                                 pop r12	       779	ops.c	FUNCTION_9
0x40020f8	            0x415d	                                 pop r13	       779	ops.c	FUNCTION_9
0x40020fa	            0x415e	                                 pop r14	       779	ops.c	FUNCTION_9
0x40020fc	            0x415f	                                 pop r15	       779	ops.c	FUNCTION_9
0x40020fe	              0xc3	                                     ret	       779	ops.c	FUNCTION_9
line_count_info	CALL,2:ELSE,1:WHILE,0:FOR,1:functions,0:IF,5:SWITCH,0:DO,0	91
0x4000ee4	            0x4157	                                push r15	      7295	ops.c	FUNCTION_90
0x4000ee6	            0x4156	                                push r14	      7295	ops.c	FUNCTION_90
0x4000ee8	            0x4155	                                push r13	      7295	ops.c	FUNCTION_90
0x4000eea	            0x4154	                                push r12	      7295	ops.c	FUNCTION_90
0x4000eec	              0x55	                                push rbp	      7295	ops.c	FUNCTION_90
0x4000eed	              0x53	                                push rbx	      7295	ops.c	FUNCTION_90
0x4000eee	        0x4883ec28	                           sub rsp, 0x28	      7295	ops.c	FUNCTION_90
0x4000ef2	      0x4889742410	             mov qword [rsp + 0x10], rsi	      7295	ops.c	FUNCTION_90
0x4000ef7	      0x4889542408	                mov qword [rsp + 8], rdx	      7295	ops.c	FUNCTION_90
0x4000efc	      0x448944241c	             mov dword [rsp + 0x1c], r8d	      7295	ops.c	FUNCTION_90
0x4000f01	          0x4885c9	                           test rcx, rcx	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f04	     0xf8ed9000000	                           jle 0x4000fe3	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f0a	          0x4989fe	                            mov r14, rdi	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f0d	          0x4989cf	                            mov r15, rcx	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f10	           0xfb63f	                   movzx edi, byte [rdi]	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f13	          0x4084ff	                           test dil, dil	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f16	     0xf84d4000000	                            je 0x4000ff0	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f1c	          0x4c89f5	                            mov rbp, r14	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f1f	    0x41bd00000000	                             mov r13d, 0	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f25	    0x41bc00000000	                             mov r12d, 0	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f2b	    0x48c704240000	                      mov qword [rsp], 0	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f33	      0xbb00000000	                              mov ebx, 0	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f38	          0x4585ed	                         test r13d, r13d	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x4000f3b	            0x741a	                            je 0x4000f57	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x4000f3d	        0x400fb6ff	                          movzx edi, dil	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x4000f41	      0xe800000000	                          call 0x4000f46	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x4000f46	            0x85c0	                           test eax, eax	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x4000f48	            0x7420	                            je 0x4000f6a	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x4000f4a	      0x4883042401	                      add qword [rsp], 1	      7307	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000f4f	    0x41bd00000000	                             mov r13d, 0	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000f55	            0xeb13	                           jmp 0x4000f6a	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000f57	        0x400fb6ff	                          movzx edi, dil	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x4000f5b	      0xe800000000	                          call 0x4000f60	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x4000f60	            0x85c0	                           test eax, eax	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000f62	        0x410f94c5	                               sete r13b	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000f66	        0x450fb6ed	                        movzx r13d, r13b	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x4000f6a	        0x4983c401	                              add r12, 1	      7313	ops.c	FUNCTION_90	FOR_1
0x4000f6e	          0x4889ef	                            mov rdi, rbp	      7315	ops.c	FUNCTION_90	FOR_1
0x4000f71	    0xff1500000000	                 call qword [0x04000f77]	      7315	ops.c	FUNCTION_90	FOR_1
0x4000f77	            0x4898	                                    cdqe	      7315	ops.c	FUNCTION_90	FOR_1
0x4000f79	          0x4801c3	                            add rbx, rax	      7315	ops.c	FUNCTION_90	FOR_1
0x4000f7c	          0x4939df	                            cmp r15, rbx	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f7f	            0x7e5b	                           jle 0x4000fdc	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f81	        0x498d2c1e	                    lea rbp, [r14 + rbx]	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f85	         0xfb67d00	                   movzx edi, byte [rbp]	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f89	          0x4084ff	                           test dil, dil	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f8c	            0x75aa	                           jne 0x4000f38	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f8e	            0xeb37	                           jmp 0x4000fc7	      7301	ops.c	FUNCTION_90	FOR_1
0x4000f90	        0x488b0424	                    mov rax, qword [rsp]	      7323	ops.c	FUNCTION_90
0x4000f94	        0x4883c001	                              add rax, 1	      7323	ops.c	FUNCTION_90
0x4000f98	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7323	ops.c	FUNCTION_90
0x4000f9d	          0x480102	                    add qword [rdx], rax	      7323	ops.c	FUNCTION_90
0x4000fa0	          0x4939df	                            cmp r15, rbx	      7326	ops.c	FUNCTION_90	IF_5
0x4000fa3	            0x7e58	                           jle 0x4000ffd	      7326	ops.c	FUNCTION_90	IF_5
0x4000fa5	      0x41803c1e00	                 cmp byte [r14 + rbx], 0	      7326	ops.c	FUNCTION_90	IF_5
0x4000faa	            0x7551	                           jne 0x4000ffd	      7326	ops.c	FUNCTION_90	IF_5
0x4000fac	      0x486344241c	         movsxd rax, dword [rsp + 0x1c] 	      7328	ops.c	FUNCTION_90	IF_5
0x4000fb1	          0x4801c3	                            add rbx, rax	      7328	ops.c	FUNCTION_90	IF_5
0x4000fb4	          0x4901c4	                            add r12, rax	      7329	ops.c	FUNCTION_90	IF_5
0x4000fb7	            0xeb44	                           jmp 0x4000ffd	      7329	ops.c	FUNCTION_90	IF_5
0x4000fb9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7323	ops.c	FUNCTION_90
0x4000fbe	        0x488b3424	                    mov rsi, qword [rsp]	      7323	ops.c	FUNCTION_90
0x4000fc2	          0x480130	                    add qword [rax], rsi	      7323	ops.c	FUNCTION_90
0x4000fc5	            0xebde	                           jmp 0x4000fa5	      7323	ops.c	FUNCTION_90
0x4000fc7	          0x4585ed	                         test r13d, r13d	      7321	ops.c	FUNCTION_90	IF_4
0x4000fca	            0x75c4	                           jne 0x4000f90	      7321	ops.c	FUNCTION_90	IF_4
0x4000fcc	            0xebeb	                           jmp 0x4000fb9	      7321	ops.c	FUNCTION_90	IF_4
0x4000fce	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7323	ops.c	FUNCTION_90
0x4000fd3	        0x488b0c24	                    mov rcx, qword [rsp]	      7323	ops.c	FUNCTION_90
0x4000fd7	          0x480108	                    add qword [rax], rcx	      7323	ops.c	FUNCTION_90
0x4000fda	            0xeb21	                           jmp 0x4000ffd	      7323	ops.c	FUNCTION_90
0x4000fdc	          0x4585ed	                         test r13d, r13d	      7321	ops.c	FUNCTION_90	IF_4
0x4000fdf	            0x74ed	                            je 0x4000fce	      7321	ops.c	FUNCTION_90	IF_4
0x4000fe1	            0xebad	                           jmp 0x4000f90	      7321	ops.c	FUNCTION_90	IF_4
0x4000fe3	    0x41bc00000000	                             mov r12d, 0	      7323	ops.c	FUNCTION_90
0x4000fe9	      0xbb00000000	                              mov ebx, 0	      7323	ops.c	FUNCTION_90
0x4000fee	            0xeb0d	                           jmp 0x4000ffd	      7323	ops.c	FUNCTION_90
0x4000ff0	    0x41bc00000000	                             mov r12d, 0	      7323	ops.c	FUNCTION_90
0x4000ff6	      0xbb00000000	                              mov ebx, 0	      7323	ops.c	FUNCTION_90
0x4000ffb	            0xeba8	                           jmp 0x4000fa5	      7323	ops.c	FUNCTION_90
0x4000ffd	      0x488b442408	                mov rax, qword [rsp + 8]	      7331	ops.c	FUNCTION_90
0x4001002	          0x4c0120	                    add qword [rax], r12	      7331	ops.c	FUNCTION_90
0x4001005	          0x4889d8	                            mov rax, rbx	      7333	ops.c	FUNCTION_90
0x4001008	        0x4883c428	                           add rsp, 0x28	      7333	ops.c	FUNCTION_90
0x400100c	              0x5b	                                 pop rbx	      7333	ops.c	FUNCTION_90
0x400100d	              0x5d	                                 pop rbp	      7333	ops.c	FUNCTION_90
0x400100e	            0x415c	                                 pop r12	      7333	ops.c	FUNCTION_90
0x4001010	            0x415d	                                 pop r13	      7333	ops.c	FUNCTION_90
0x4001012	            0x415e	                                 pop r14	      7333	ops.c	FUNCTION_90
0x4001014	            0x415f	                                 pop r15	      7333	ops.c	FUNCTION_90
0x4001016	              0xc3	                                     ret	      7333	ops.c	FUNCTION_90
init_yank	CALL,0:ELSE,0:WHILE,0:FOR,1:functions,0:IF,0:SWITCH,0:DO,0	7
0x400415b	      0xb800000000	                              mov eax, 0	      2983	ops.c	FUNCTION_41
0x4004160	      0xba00000000	                              mov edx, 0	      2983	ops.c	FUNCTION_41
0x4004165	    0x48c700000000	                      mov qword [rax], 0	      2987	ops.c	FUNCTION_41	FOR_1
0x400416c	        0x4883c020	                           add rax, 0x20	      2987	ops.c	FUNCTION_41	FOR_1
0x4004170	          0x4839d0	                            cmp rax, rdx	      2986	ops.c	FUNCTION_41	FOR_1
0x4004173	            0x75f0	                           jne 0x4004165	      2986	ops.c	FUNCTION_41	FOR_1
0x4004175	            0xf3c3	                                     ret	      2988	ops.c	FUNCTION_41
put_register	CALL,4:ELSE,0:WHILE,0:FOR,0:functions,0:IF,0:SWITCH,0:DO,0	19
0x40023d1	              0x53	                                push rbx	      1041	ops.c	FUNCTION_18
0x40023d2	          0x4889f3	                            mov rbx, rsi	      1041	ops.c	FUNCTION_18
0x40023d5	      0xbe00000000	                              mov esi, 0	      1042	ops.c	FUNCTION_18	CALL_1
0x40023da	      0xe800000000	                          call 0x40023df	      1042	ops.c	FUNCTION_18	CALL_1
0x40023df	      0xe839e0ffff	                  call sym.free_yank_all	      1043	ops.c	FUNCTION_18	CALL_2
0x40023e4	    0x488b05000000	            mov rax, qword [0x040023eb] 	      1044	ops.c	FUNCTION_18
0x40023eb	          0x488b13	                    mov rdx, qword [rbx]	      1044	ops.c	FUNCTION_18
0x40023ee	          0x488910	                    mov qword [rax], rdx	      1044	ops.c	FUNCTION_18
0x40023f1	        0x488b5308	                mov rdx, qword [rbx + 8]	      1044	ops.c	FUNCTION_18
0x40023f5	        0x48895008	                mov qword [rax + 8], rdx	      1044	ops.c	FUNCTION_18
0x40023f9	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1044	ops.c	FUNCTION_18
0x40023fd	        0x48895010	             mov qword [rax + 0x10], rdx	      1044	ops.c	FUNCTION_18
0x4002401	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1044	ops.c	FUNCTION_18
0x4002405	        0x48895018	             mov qword [rax + 0x18], rdx	      1044	ops.c	FUNCTION_18
0x4002409	          0x4889df	                            mov rdi, rbx	      1045	ops.c	FUNCTION_18	CALL_3
0x400240c	      0xe800000000	                          call 0x4002411	      1045	ops.c	FUNCTION_18	CALL_3
0x4002411	      0xe8b0e2ffff	              call sym.may_set_selection	      1049	ops.c	FUNCTION_18	CALL_4
0x4002416	              0x5b	                                 pop rbx	      1051	ops.c	FUNCTION_18
0x4002417	              0xc3	                                     ret	      1051	ops.c	FUNCTION_18
op_yank	CALL,53:ELSE,9:WHILE,1:FOR,2:functions,0:IF,42:SWITCH,1:DO,0	590
0x400981b	            0x4157	                                push r15	      3058	ops.c	FUNCTION_45
0x400981d	            0x4156	                                push r14	      3058	ops.c	FUNCTION_45
0x400981f	            0x4155	                                push r13	      3058	ops.c	FUNCTION_45
0x4009821	            0x4154	                                push r12	      3058	ops.c	FUNCTION_45
0x4009823	              0x55	                                push rbp	      3058	ops.c	FUNCTION_45
0x4009824	              0x53	                                push rbx	      3058	ops.c	FUNCTION_45
0x4009825	    0x4881ec180100	                          sub rsp, 0x118	      3058	ops.c	FUNCTION_45
0x400982c	          0x4989fe	                            mov r14, rdi	      3058	ops.c	FUNCTION_45
0x400982f	        0x89742418	             mov dword [rsp + 0x18], esi	      3058	ops.c	FUNCTION_45
0x4009833	        0x8954241c	             mov dword [rsp + 0x1c], edx	      3058	ops.c	FUNCTION_45
0x4009837	    0x64488b042528	                mov rax, qword fs:[0x28]	      3058	ops.c	FUNCTION_45
0x4009840	    0x488984240801	            mov qword [rsp + 0x108], rax	      3058	ops.c	FUNCTION_45
0x4009848	            0x31c0	                            xor eax, eax	      3058	ops.c	FUNCTION_45
0x400984a	          0x8b4708	                mov eax, dword [rdi + 8]	      3065	ops.c	FUNCTION_45
0x400984d	        0x8944240c	              mov dword [rsp + 0xc], eax	      3065	ops.c	FUNCTION_45
0x4009851	        0x488b4750	            mov rax, qword [rdi + 0x50] 	      3066	ops.c	FUNCTION_45
0x4009855	      0x4889442410	             mov qword [rsp + 0x10], rax	      3066	ops.c	FUNCTION_45
0x400985a	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      3067	ops.c	FUNCTION_45
0x400985e	          0x4989c7	                            mov r15, rax	      3067	ops.c	FUNCTION_45
0x4009861	          0x8b7f04	                mov edi, dword [rdi + 4]	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4009864	            0x85ff	                           test edi, edi	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4009866	            0x7444	                            je 0x40098ac	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4009868	      0xbe01000000	                              mov esi, 1	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400986d	      0xe800000000	                          call 0x4009872	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4009872	            0x89c3	                            mov ebx, eax	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4009874	            0x85c0	                           test eax, eax	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4009876	            0x750a	                           jne 0x4009882	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4009878	      0xe800000000	                          call 0x400987d	      3078	ops.c	FUNCTION_45	IF_1	CALL_2
0x400987d	      0xe9b3080000	                           jmp 0x400a135	      3079	ops.c	FUNCTION_45	IF_1
0x4009882	        0x418b7e04	                mov edi, dword [r14 + 4]	      3081	ops.c	FUNCTION_45	IF_2
0x4009886	      0xbb01000000	                              mov ebx, 1	      3082	ops.c	FUNCTION_45	IF_2
0x400988b	          0x83ff5f	                           cmp edi, 0x5f	      3081	ops.c	FUNCTION_45	IF_2
0x400988e	     0xf84a1080000	                            je 0x400a135	      3081	ops.c	FUNCTION_45	IF_2
0x4009894	    0x833d00000000	               cmp dword [0x0400989b], 0	      3085	ops.c	FUNCTION_45	IF_3
0x400989b	            0x750f	                           jne 0x40098ac	      3085	ops.c	FUNCTION_45	IF_3
0x400989d	          0x83ff2a	                           cmp edi, 0x2a	      3085	ops.c	FUNCTION_45	IF_3
0x40098a0	            0x750a	                           jne 0x40098ac	      3085	ops.c	FUNCTION_45	IF_3
0x40098a2	    0x41c746040000	                  mov dword [r14 + 4], 0	      3086	ops.c	FUNCTION_45	IF_3
0x40098aa	            0xeb16	                           jmp 0x40098c2	      3086	ops.c	FUNCTION_45	IF_3
0x40098ac	    0x833d00000000	               cmp dword [0x040098b3], 0	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x40098b3	            0x750d	                           jne 0x40098c2	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x40098b5	          0x83ff2b	                           cmp edi, 0x2b	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x40098b8	            0x7508	                           jne 0x40098c2	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x40098ba	    0x41c746040000	                  mov dword [r14 + 4], 0	      3088	ops.c	FUNCTION_45	ELSE_1	IF_4
0x40098c2	      0x837c241800	               cmp dword [rsp + 0x18], 0	      3091	ops.c	FUNCTION_45	IF_5
0x40098c7	            0x750e	                           jne 0x40098d7	      3091	ops.c	FUNCTION_45	IF_5
0x40098c9	        0x418b7e04	                mov edi, dword [r14 + 4]	      3092	ops.c	FUNCTION_45	CALL_3
0x40098cd	      0xbe01000000	                              mov esi, 1	      3092	ops.c	FUNCTION_45	CALL_3
0x40098d2	      0xe800000000	                          call 0x40098d7	      3092	ops.c	FUNCTION_45	CALL_3
0x40098d7	    0x4c8b2d000000	            mov r13, qword [0x040098de] 	      3094	ops.c	FUNCTION_45
0x40098de	    0x833d00000000	               cmp dword [0x040098e5], 0	      3096	ops.c	FUNCTION_45	IF_6
0x40098e5	            0x7415	                            je 0x40098fc	      3096	ops.c	FUNCTION_45	IF_6
0x40098e7	      0x49837d0000	                      cmp qword [r13], 0	      3096	ops.c	FUNCTION_45	IF_6
0x40098ec	            0x740e	                            je 0x40098fc	      3096	ops.c	FUNCTION_45	IF_6
0x40098ee	      0x488d442440	                   lea rax, [rsp + 0x40]	      3097	ops.c	FUNCTION_45	IF_6
0x40098f3	    0x488905000000	            mov qword [0x040098fa], rax 	      3097	ops.c	FUNCTION_45	IF_6
0x40098fa	            0xeb05	                           jmp 0x4009901	      3097	ops.c	FUNCTION_45	IF_6
0x40098fc	      0xe81c6bffff	                  call sym.free_yank_all	      3099	ops.c	FUNCTION_45	CALL_4
0x4009901	      0x41837e0800	                  cmp dword [r14 + 8], 0	      3105	ops.c	FUNCTION_45	IF_7
0x4009906	            0x7555	                           jne 0x400995d	      3105	ops.c	FUNCTION_45	IF_7
0x4009908	      0x41837e2800	               cmp dword [r14 + 0x28], 0	      3106	ops.c	FUNCTION_45	IF_7
0x400990d	            0x754e	                           jne 0x400995d	      3106	ops.c	FUNCTION_45	IF_7
0x400990f	      0x41837e1400	               cmp dword [r14 + 0x14], 0	      3107	ops.c	FUNCTION_45	IF_7
0x4009914	            0x7547	                           jne 0x400995d	      3107	ops.c	FUNCTION_45	IF_7
0x4009916	      0x41837e5c00	               cmp dword [r14 + 0x5c], 0	      3108	ops.c	FUNCTION_45	IF_7
0x400991b	            0x740c	                            je 0x4009929	      3108	ops.c	FUNCTION_45	IF_7
0x400991d	    0x488b05000000	            mov rax, qword [0x04009924] 	      3108	ops.c	FUNCTION_45	IF_7
0x4009924	          0x80386f	                    cmp byte [rax], 0x6f	      3108	ops.c	FUNCTION_45	IF_7
0x4009927	            0x7534	                           jne 0x400995d	      3108	ops.c	FUNCTION_45	IF_7
0x4009929	      0x41837e6000	               cmp dword [r14 + 0x60], 0	      3109	ops.c	FUNCTION_45	IF_7
0x400992e	            0x752d	                           jne 0x400995d	      3109	ops.c	FUNCTION_45	IF_7
0x4009930	      0x41837e3800	               cmp dword [r14 + 0x38], 0	      3111	ops.c	FUNCTION_45	IF_7
0x4009935	            0x7526	                           jne 0x400995d	      3111	ops.c	FUNCTION_45	IF_7
0x4009937	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3111	ops.c	FUNCTION_45	IF_7
0x400993c	        0x4883f801	                              cmp rax, 1	      3111	ops.c	FUNCTION_45	IF_7
0x4009940	            0x7e1b	                           jle 0x400995d	      3111	ops.c	FUNCTION_45	IF_7
0x4009942	          0x4c89f9	                            mov rcx, r15	      3114	ops.c	FUNCTION_45	IF_7
0x4009945	        0x4883e901	                              sub rcx, 1	      3114	ops.c	FUNCTION_45	IF_7
0x4009949	          0x4989cf	                            mov r15, rcx	      3114	ops.c	FUNCTION_45	IF_7
0x400994c	        0x4883e801	                              sub rax, 1	      3115	ops.c	FUNCTION_45	IF_7
0x4009950	      0x4889442410	             mov qword [rsp + 0x10], rax	      3115	ops.c	FUNCTION_45	IF_7
0x4009955	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3113	ops.c	FUNCTION_45	IF_7
0x400995d	    0x488b1d000000	            mov rbx, qword [0x04009964] 	      3118	ops.c	FUNCTION_45
0x4009964	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3118	ops.c	FUNCTION_45
0x4009969	        0x48894308	                mov qword [rbx + 8], rax	      3118	ops.c	FUNCTION_45
0x400996d	       0xfb64c240c	            movzx ecx, byte [rsp + 0xc] 	      3119	ops.c	FUNCTION_45
0x4009972	          0x884b10	               mov byte [rbx + 0x10], cl	      3119	ops.c	FUNCTION_45
0x4009975	    0xc74314000000	               mov dword [rbx + 0x14], 0	      3120	ops.c	FUNCTION_45
0x400997c	    0x488d3cc50000	                        lea rdi, [rax*8]	      3121	ops.c	FUNCTION_45	CALL_5
0x4009984	      0xbe01000000	                              mov esi, 1	      3121	ops.c	FUNCTION_45	CALL_5
0x4009989	      0xe800000000	                          call 0x400998e	      3121	ops.c	FUNCTION_45	CALL_5
0x400998e	          0x488903	                    mov qword [rbx], rax	      3121	ops.c	FUNCTION_45	CALL_5
0x4009991	    0x488b1d000000	            mov rbx, qword [0x04009998] 	      3123	ops.c	FUNCTION_45	IF_8
0x4009998	        0x48833b00	                      cmp qword [rbx], 0	      3123	ops.c	FUNCTION_45	IF_8
0x400999c	            0x7511	                           jne 0x40099af	      3123	ops.c	FUNCTION_45	IF_8
0x400999e	    0x4c892d000000	            mov qword [0x040099a5], r13 	      3125	ops.c	FUNCTION_45	IF_8
0x40099a5	      0xbb00000000	                              mov ebx, 0	      3126	ops.c	FUNCTION_45	IF_8
0x40099aa	      0xe986070000	                           jmp 0x400a135	      3126	ops.c	FUNCTION_45	IF_8
0x40099af	      0xe800000000	                          call 0x40099b4	      3129	ops.c	FUNCTION_45	CALL_6
0x40099b4	        0x48894318	             mov qword [rbx + 0x18], rax	      3129	ops.c	FUNCTION_45	CALL_6
0x40099b8	        0x498b5e20	            mov rbx, qword [r14 + 0x20] 	      3133	ops.c	FUNCTION_45
0x40099bc	      0x41837e6000	               cmp dword [r14 + 0x60], 0	      3135	ops.c	FUNCTION_45	IF_9
0x40099c1	            0x7430	                            je 0x40099f3	      3135	ops.c	FUNCTION_45	IF_9
0x40099c3	    0x488b15000000	            mov rdx, qword [0x040099ca] 	      3138	ops.c	FUNCTION_45	IF_9
0x40099ca	        0xc6421002	                mov byte [rdx + 0x10], 2	      3138	ops.c	FUNCTION_45	IF_9
0x40099ce	        0x418b4668	            mov eax, dword [r14 + 0x68] 	      3139	ops.c	FUNCTION_45	IF_9
0x40099d2	        0x412b4664	             sub eax, dword [r14 + 0x64]	      3139	ops.c	FUNCTION_45	IF_9
0x40099d6	          0x894214	             mov dword [rdx + 0x14], eax	      3139	ops.c	FUNCTION_45	IF_9
0x40099d9	    0x488b0d000000	            mov rcx, qword [0x040099e0] 	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x40099e0	    0x817948ffffff	     cmp dword [rcx + 0x48], 0x7fffffff 	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x40099e7	            0x750a	                           jne 0x40099f3	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x40099e9	            0x85c0	                           test eax, eax	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x40099eb	            0x7e06	                           jle 0x40099f3	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x40099ed	          0x83e801	                              sub eax, 1	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x40099f0	          0x894214	             mov dword [rdx + 0x14], eax	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x40099f3	          0x4939df	                            cmp r15, rbx	      3145	ops.c	FUNCTION_45	FOR_1
0x40099f6	     0xf8c40020000	                            jl 0x4009c3c	      3145	ops.c	FUNCTION_45	FOR_1
0x40099fc	      0xbd00000000	                              mov ebp, 0	      3145	ops.c	FUNCTION_45	FOR_1
0x4009a01	        0x498d4e30	                   lea rcx, [r14 + 0x30]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x4009a05	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x4009a0a	      0x4c896c2420	             mov qword [rsp + 0x20], r13	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x4009a0f	    0x488b15000000	            mov rdx, qword [0x04009a16] 	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009a16	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009a1a	            0x3c01	                               cmp al, 1	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009a1c	            0x7440	                            je 0x4009a5e	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009a1e	            0x3c01	                               cmp al, 1	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009a20	            0x726a	                            jb 0x4009a8c	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009a22	            0x3c02	                               cmp al, 2	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009a24	     0xf85fa010000	                           jne 0x4009c24	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009a2a	      0xb900000000	                              mov ecx, 0	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x4009a2f	          0x4889da	                            mov rdx, rbx	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x4009a32	      0x488d742460	                   lea rsi, [rsp + 0x60]	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x4009a37	          0x4c89f7	                            mov rdi, r14	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x4009a3a	      0xe84166ffff	                     call sym.block_prep	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x4009a3f	          0x4889ee	                            mov rsi, rbp	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4009a42	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4009a47	      0xe8f46bffff	                 call sym.yank_copy_line	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4009a4c	            0x85c0	                           test eax, eax	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4009a4e	     0xf85d0010000	                           jne 0x4009c24	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4009a54	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4009a59	      0xe9c2060000	                           jmp 0x400a120	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4009a5e	          0x488b02	                    mov rax, qword [rdx]	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4009a61	        0x4c8d24e8	                  lea r12, [rax + rbp*8]	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4009a65	          0x4889df	                            mov rdi, rbx	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x4009a68	      0xe800000000	                          call 0x4009a6d	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x4009a6d	          0x4889c7	                            mov rdi, rax	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x4009a70	      0xe800000000	                          call 0x4009a75	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x4009a75	        0x49890424	                    mov qword [r12], rax	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4009a79	          0x4885c0	                           test rax, rax	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4009a7c	     0xf85a2010000	                           jne 0x4009c24	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4009a82	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4009a87	      0xe994060000	                           jmp 0x400a120	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4009a8c	          0x4889df	                            mov rdi, rbx	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x4009a8f	      0xe800000000	                          call 0x4009a94	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x4009a94	        0x48890424	                    mov qword [rsp], rax	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x4009a98	    0xc74424600000	               mov dword [rsp + 0x60], 0	      3169	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009aa0	    0xc74424640000	               mov dword [rsp + 0x64], 0	      3170	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009aa8	    0x41bc00000000	                             mov r12d, 0	      3163	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009aae	        0x49395e20	            cmp qword [r14 + 0x20], rbx 	      3172	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x4009ab2	            0x7553	                           jne 0x4009b07	      3172	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x4009ab4	        0x458b6628	           mov r12d, dword [r14 + 0x28] 	      3174	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x4009ab8	    0x833d00000000	               cmp dword [0x04009abf], 0	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x4009abf	     0xf8401070000	                            je 0x400a1c6	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x4009ac5	        0x498d7620	                   lea rsi, [r14 + 0x20]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4009ac9	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4009ace	      0xb900000000	                              mov ecx, 0	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4009ad3	      0x488d542438	                   lea rdx, [rsp + 0x38]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4009ad8	    0x488b3d000000	            mov rdi, qword [0x04009adf] 	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4009adf	      0xe800000000	                          call 0x4009ae4	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4009ae4	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009ae8	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009aec	            0x39d0	                            cmp eax, edx	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009aee	            0x7417	                            je 0x4009b07	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009af0	        0x418b4e2c	            mov ecx, dword [r14 + 0x2c] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009af4	            0x85c9	                           test ecx, ecx	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009af6	            0x7e0f	                           jle 0x4009b07	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009af8	            0x29d0	                            sub eax, edx	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009afa	          0x83c001	                              add eax, 1	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009afd	            0x29c8	                            sub eax, ecx	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009aff	        0x89442460	             mov dword [rsp + 0x60], eax	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009b03	        0x4183c401	                             add r12d, 1	      3185	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4009b07	      0xba00000000	                              mov edx, 0	      3165	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009b0c	        0x49395e30	            cmp qword [r14 + 0x30], rbx 	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x4009b10	     0xf85ae000000	                           jne 0x4009bc4	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x4009b16	        0x458b6e38	           mov r13d, dword [r14 + 0x38] 	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x4009b1a	    0x833d00000000	               cmp dword [0x04009b21], 0	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x4009b21	     0xf8488000000	                            je 0x4009baf	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x4009b27	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x4009b2c	      0xb900000000	                              mov ecx, 0	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x4009b31	      0x488d542438	                   lea rdx, [rsp + 0x38]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x4009b36	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x4009b3b	    0x488b3d000000	            mov rdi, qword [0x04009b42] 	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x4009b42	      0xe800000000	                          call 0x4009b47	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x4009b47	          0x4963f5	                        movsxd rsi, r13d	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b4a	        0x48033424	                    add rsi, qword [rsp]	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b4e	          0x803e00	                       cmp byte [rsi], 0	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b51	            0x741c	                            je 0x4009b6f	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b53	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b57	        0x4103463c	             add eax, dword [r14 + 0x3c]	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b5b	        0x3b44243c	            cmp eax, dword [rsp + 0x3c] 	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b5f	            0x7d4e	                           jge 0x4009baf	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b61	        0x488b3c24	                    mov rdi, qword [rsp]	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b65	    0xff1500000000	                 call qword [0x04009b6b]	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b6b	            0x85c0	                           test eax, eax	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b6d	            0x7540	                           jne 0x4009baf	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4009b6f	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4009b73	        0x49394620	            cmp qword [r14 + 0x20], rax 	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4009b77	            0x7525	                           jne 0x4009b9e	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4009b79	        0x418b4638	            mov eax, dword [r14 + 0x38] 	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4009b7d	        0x41394628	            cmp dword [r14 + 0x28], eax 	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4009b81	            0x751b	                           jne 0x4009b9e	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4009b83	        0x418b463c	            mov eax, dword [r14 + 0x3c] 	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4009b87	        0x412b462c	             sub eax, dword [r14 + 0x2c]	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4009b8b	        0x41034614	             add eax, dword [r14 + 0x14]	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4009b8f	        0x89442460	             mov dword [rsp + 0x60], eax	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4009b93	    0x4181fcffffff	                    cmp r12d, 0x7fffffff	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x4009b9a	            0x7551	                           jne 0x4009bed	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x4009b9c	            0xeb21	                           jmp 0x4009bbf	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x4009b9e	        0x418b4614	            mov eax, dword [r14 + 0x14] 	      3219	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x4009ba2	            0x89c2	                            mov edx, eax	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x4009ba4	        0x4103563c	             add edx, dword [r14 + 0x3c]	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x4009ba8	        0x89542464	             mov dword [rsp + 0x64], edx	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x4009bac	          0x4129c5	                           sub r13d, eax	      3220	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x4009baf	    0x4181fdffffff	                    cmp r13d, 0x7fffffff	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x4009bb6	            0x7527	                           jne 0x4009bdf	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x4009bb8	      0xba00000000	                              mov edx, 0	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x4009bbd	            0xeb05	                           jmp 0x4009bc4	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x4009bbf	      0xba01000000	                              mov edx, 1	      3211	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4009bc4	      0xb800000000	                              mov eax, 0	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x4009bc9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x4009bd0	        0x488b3c24	                    mov rdi, qword [rsp]	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x4009bd4	            0xf2ae	              repne scasb al, byte [rdi]	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x4009bd6	          0x48f7d1	                                 not rcx	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x4009bd9	        0x448d69ff	                     lea r13d, [rcx - 1]	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x4009bdd	            0xeb05	                           jmp 0x4009be4	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x4009bdf	      0xba00000000	                              mov edx, 0	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x4009be4	          0x4539e5	                          cmp r13d, r12d	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x4009be7	            0x7c04	                            jl 0x4009bed	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x4009be9	            0x85d2	                           test edx, edx	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x4009beb	            0x740a	                            je 0x4009bf7	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x4009bed	    0xc74424680000	               mov dword [rsp + 0x68], 0	      3233	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x4009bf5	            0xeb0c	                           jmp 0x4009c03	      3233	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x4009bf7	          0x4529e5	                          sub r13d, r12d	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x4009bfa	        0x45036e14	            add r13d, dword [r14 + 0x14]	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x4009bfe	      0x44896c2468	            mov dword [rsp + 0x68], r13d	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x4009c03	          0x4d63e4	                        movsxd r12, r12d	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009c06	        0x4c032424	                    add r12, qword [rsp]	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009c0a	      0x4c89642470	             mov qword [rsp + 0x70], r12	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4009c0f	          0x4889ee	                            mov rsi, rbp	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x4009c12	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x4009c17	      0xe8246affff	                 call sym.yank_copy_line	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x4009c1c	            0x85c0	                           test eax, eax	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x4009c1e	     0xf84f7040000	                            je 0x400a11b	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x4009c24	        0x4883c301	                              add rbx, 1	      3145	ops.c	FUNCTION_45	FOR_1
0x4009c28	        0x4883c501	                              add rbp, 1	      3145	ops.c	FUNCTION_45	FOR_1
0x4009c2c	          0x4939df	                            cmp r15, rbx	      3145	ops.c	FUNCTION_45	FOR_1
0x4009c2f	     0xf8ddafdffff	                           jge 0x4009a0f	      3145	ops.c	FUNCTION_45	FOR_1
0x4009c35	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      3145	ops.c	FUNCTION_45	FOR_1
0x4009c3a	            0xeb05	                           jmp 0x4009c41	      3145	ops.c	FUNCTION_45	FOR_1
0x4009c3c	      0xbd00000000	                              mov ebp, 0	      3145	ops.c	FUNCTION_45	FOR_1
0x4009c41	    0x488b05000000	            mov rax, qword [0x04009c48] 	      3247	ops.c	FUNCTION_45	IF_23
0x4009c48	          0x4939c5	                            cmp r13, rax	      3247	ops.c	FUNCTION_45	IF_23
0x4009c4b	     0xf84c0010000	                            je 0x4009e11	      3247	ops.c	FUNCTION_45	IF_23
0x4009c51	        0x488b7808	                mov rdi, qword [rax + 8]	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x4009c55	        0x49037d08	                add rdi, qword [r13 + 8]	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x4009c59	        0x48c1e703	                              shl rdi, 3	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x4009c5d	      0xbe01000000	                              mov esi, 1	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x4009c62	      0xe800000000	                          call 0x4009c67	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x4009c67	          0x4889c3	                            mov rbx, rax	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x4009c6a	          0x4885c0	                           test rax, rax	      3251	ops.c	FUNCTION_45	IF_23	IF_24
0x4009c6d	     0xf84ad040000	                            je 0x400a120	      3251	ops.c	FUNCTION_45	IF_23	IF_24
0x4009c73	      0x49837d0800	                  cmp qword [r13 + 8], 0	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4009c78	            0x7e1d	                           jle 0x4009c97	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4009c7a	      0xbd00000000	                              mov ebp, 0	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4009c7f	        0x498b4500	                    mov rax, qword [r13]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x4009c83	        0x488b04e8	            mov rax, qword [rax + rbp*8]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x4009c87	        0x488904eb	            mov qword [rbx + rbp*8], rax	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x4009c8b	        0x4883c501	                              add rbp, 1	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4009c8f	        0x49396d08	                cmp qword [r13 + 8], rbp	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4009c93	            0x7fea	                            jg 0x4009c7f	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4009c95	            0xeb05	                           jmp 0x4009c9c	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4009c97	      0xbd00000000	                              mov ebp, 0	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4009c9c	        0x498b7d00	                    mov rdi, qword [r13]	      3255	ops.c	FUNCTION_45	IF_23	CALL_17
0x4009ca0	      0xe800000000	                          call 0x4009ca5	      3255	ops.c	FUNCTION_45	IF_23	CALL_17
0x4009ca5	        0x49895d00	                    mov qword [r13], rbx	      3256	ops.c	FUNCTION_45	IF_23
0x4009ca9	      0xe800000000	                          call 0x4009cae	      3258	ops.c	FUNCTION_45	IF_23	CALL_18
0x4009cae	        0x49894518	             mov qword [r13 + 0x18], rax	      3258	ops.c	FUNCTION_45	IF_23	CALL_18
0x4009cb2	      0x837c240c01	                cmp dword [rsp + 0xc], 1	      3261	ops.c	FUNCTION_45	IF_23	IF_25
0x4009cb7	            0x750f	                           jne 0x4009cc8	      3261	ops.c	FUNCTION_45	IF_23	IF_25
0x4009cb9	      0x41c6451001	                mov byte [r13 + 0x10], 1	      3262	ops.c	FUNCTION_45	IF_23	IF_25
0x4009cbe	      0xbf00000000	                              mov edi, 0	      3283	ops.c	FUNCTION_45	IF_23	ELSE_5
0x4009cc3	      0xe9eb000000	                           jmp 0x4009db3	      3283	ops.c	FUNCTION_45	IF_23	ELSE_5
0x4009cc8	      0xbf00000000	                              mov edi, 0	      3283	ops.c	FUNCTION_45	IF_23	ELSE_5
0x4009ccd	      0x41807d1000	                cmp byte [r13 + 0x10], 0	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x4009cd2	     0xf85db000000	                           jne 0x4009db3	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x4009cd8	      0xbe3e000000	                           mov esi, 0x3e	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x4009cdd	    0x488b3d000000	            mov rdi, qword [0x04009ce4] 	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x4009ce4	      0xe800000000	                          call 0x4009ce9	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x4009ce9	      0xbf00000000	                              mov edi, 0	      3283	ops.c	FUNCTION_45	IF_23	ELSE_5
0x4009cee	          0x4885c0	                           test rax, rax	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x4009cf1	     0xf85bc000000	                           jne 0x4009db3	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x4009cf7	        0x498b5508	                mov rdx, qword [r13 + 8]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009cfb	        0x498b4500	                    mov rax, qword [r13]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009cff	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009d06	      0x488b7cd0f8	        mov rdi, qword [rax + rdx*8 - 8]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009d0b	      0xb800000000	                              mov eax, 0	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009d10	          0x4889f1	                            mov rcx, rsi	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009d13	            0xf2ae	              repne scasb al, byte [rdi]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009d15	          0x48f7d1	                                 not rcx	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009d18	          0x4889ca	                            mov rdx, rcx	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009d1b	    0x488b0d000000	            mov rcx, qword [0x04009d22] 	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x4009d22	          0x488b09	                    mov rcx, qword [rcx]	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x4009d25	          0x488b39	                    mov rdi, qword [rcx]	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x4009d28	          0x4889f1	                            mov rcx, rsi	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x4009d2b	            0xf2ae	              repne scasb al, byte [rdi]	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x4009d2d	          0x4889c8	                            mov rax, rcx	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x4009d30	          0x48f7d0	                                 not rax	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x4009d33	      0x488d7c02ff	                lea rdi, [rdx + rax - 1]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009d38	      0xbe01000000	                              mov esi, 1	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009d3d	      0xe800000000	                          call 0x4009d42	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009d42	          0x4989c4	                            mov r12, rax	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4009d45	          0x4885c0	                           test rax, rax	      3270	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x4009d48	            0x7514	                           jne 0x4009d5e	      3270	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x4009d4a	    0x488b05000000	            mov rax, qword [0x04009d51] 	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x4009d51	        0x488b6808	                mov rbp, qword [rax + 8]	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x4009d55	        0x4883ed01	                              sub rbp, 1	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x4009d59	      0xe9c2030000	                           jmp 0x400a120	      3273	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x4009d5e	        0x488d5dff	                      lea rbx, [rbp - 1]	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x4009d62	        0x498b4500	                    mov rax, qword [r13]	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x4009d66	        0x488b34d8	            mov rsi, qword [rax + rbx*8]	       110	string3.h	FUNCTION_98	CALL_3
0x4009d6a	          0x4c89e7	                            mov rdi, r12	       110	string3.h	FUNCTION_98	CALL_3
0x4009d6d	      0xe800000000	                          call 0x4009d72	       110	string3.h	FUNCTION_98	CALL_3
0x4009d72	    0x488b05000000	            mov rax, qword [0x04009d79] 	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x4009d79	          0x488b00	                    mov rax, qword [rax]	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x4009d7c	          0x488b30	                    mov rsi, qword [rax]	       148	string3.h	FUNCTION_102	CALL_3
0x4009d7f	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_102	CALL_3
0x4009d82	      0xe800000000	                          call 0x4009d87	       148	string3.h	FUNCTION_102	CALL_3
0x4009d87	        0x498b4500	                    mov rax, qword [r13]	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x4009d8b	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x4009d8f	      0xe800000000	                          call 0x4009d94	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x4009d94	    0x488b05000000	            mov rax, qword [0x04009d9b] 	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x4009d9b	          0x488b00	                    mov rax, qword [rax]	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x4009d9e	          0x488b38	                    mov rdi, qword [rax]	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x4009da1	      0xe800000000	                          call 0x4009da6	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x4009da6	        0x498b4500	                    mov rax, qword [r13]	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x4009daa	        0x4c8924d8	            mov qword [rax + rbx*8], r12	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x4009dae	      0xbf01000000	                              mov edi, 1	      3280	ops.c	FUNCTION_45	IF_23	IF_26
0x4009db3	    0x488b0d000000	            mov rcx, qword [0x04009dba] 	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009dba	        0x483b7908	                cmp rdi, qword [rcx + 8]	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009dbe	            0x7d3e	                           jge 0x4009dfe	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009dc0	          0x4989e9	                             mov r9, rbp	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009dc3	    0x488d04ed0000	                        lea rax, [rbp*8]	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009dcb	          0x4989f8	                             mov r8, rdi	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009dce	          0x4829ef	                            sub rdi, rbp	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009dd1	        0x48c1e703	                              shl rdi, 3	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009dd5	        0x4883c501	                              add rbp, 1	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009dd9	          0x4889fa	                            mov rdx, rdi	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009ddc	          0x480311	                    add rdx, qword [rcx]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009ddf	        0x488b3402	              mov rsi, qword [rdx + rax]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009de3	        0x498b5500	                    mov rdx, qword [r13]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009de7	        0x48893402	              mov qword [rdx + rax], rsi	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009deb	        0x4883c008	                              add rax, 8	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009def	          0x4889ea	                            mov rdx, rbp	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009df2	          0x4c29ca	                             sub rdx, r9	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009df5	          0x4c01c2	                             add rdx, r8	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009df8	        0x483b5108	                cmp rdx, qword [rcx + 8]	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009dfc	            0x7cd7	                            jl 0x4009dd5	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4009dfe	        0x49896d08	                mov qword [r13 + 8], rbp	      3286	ops.c	FUNCTION_45	IF_23
0x4009e02	          0x488b39	                    mov rdi, qword [rcx]	      3287	ops.c	FUNCTION_45	IF_23	CALL_27
0x4009e05	      0xe800000000	                          call 0x4009e0a	      3287	ops.c	FUNCTION_45	IF_23	CALL_27
0x4009e0a	    0x4c892d000000	            mov qword [0x04009e11], r13 	      3288	ops.c	FUNCTION_45	IF_23
0x4009e11	    0x488b05000000	            mov rax, qword [0x04009e18] 	      3290	ops.c	FUNCTION_45	IF_28
0x4009e18	    0x83b83c020000	              cmp dword [rax + 0x23c], 0	      3290	ops.c	FUNCTION_45	IF_28
0x4009e1f	            0x740a	                            je 0x4009e2b	      3290	ops.c	FUNCTION_45	IF_28
0x4009e21	      0xbf23000000	                           mov edi, 0x23	      3291	ops.c	FUNCTION_45	CALL_28
0x4009e26	      0xe800000000	                          call 0x4009e2b	      3291	ops.c	FUNCTION_45	CALL_28
0x4009e2b	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      3292	ops.c	FUNCTION_45	IF_29
0x4009e30	     0xf8459010000	                            je 0x4009f8f	      3292	ops.c	FUNCTION_45	IF_29
0x4009e36	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3294	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e3b	            0x752c	                           jne 0x4009e69	      3294	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e3d	      0x41837e6000	               cmp dword [r14 + 0x60], 0	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e42	     0xf8543030000	                           jne 0x400a18b	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e48	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e4d	        0x4883f901	                              cmp rcx, 1	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e51	           0xf94c0	                                 sete al	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e54	            0x84c0	                             test al, al	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e56	      0xb800000000	                              mov eax, 0	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e5b	        0x480f44c1	                          cmove rax, rcx	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e5f	      0x4889442410	             mov qword [rsp + 0x10], rax	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e64	      0xe922030000	                           jmp 0x400a18b	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x4009e69	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x4009e6e	    0x483b05000000	            cmp rax, qword [0x04009e75] 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x4009e75	     0xf8e14010000	                           jle 0x4009f8f	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x4009e7b	        0x418b5e04	                mov ebx, dword [r14 + 4]	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x4009e7f	            0x85db	                           test ebx, ebx	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x4009e81	            0x750a	                           jne 0x4009e8d	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x4009e83	    0xc68424a00000	                mov byte [rsp + 0xa0], 0	      3304	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x4009e8b	            0xeb30	                           jmp 0x4009ebd	      3304	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x4009e8d	      0xba05000000	                              mov edx, 5	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4009e92	      0xbe00000000	                              mov esi, 0	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4009e97	      0xbf00000000	                              mov edi, 0	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4009e9c	      0xe800000000	                          call 0x4009ea1	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4009ea1	            0x89d9	                            mov ecx, ebx	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4009ea3	          0x4889c2	                            mov rdx, rax	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4009ea6	      0xbe64000000	                           mov esi, 0x64	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4009eab	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4009eb3	      0xb800000000	                              mov eax, 0	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4009eb8	      0xe800000000	                          call 0x4009ebd	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4009ebd	      0xe800000000	                          call 0x4009ec2	      3310	ops.c	FUNCTION_45	IF_29	IF_31	CALL_31
0x4009ec2	    0x48837c241001	               cmp qword [rsp + 0x10], 1	      3311	ops.c	FUNCTION_45	IF_29	IF_31	IF_33
0x4009ec8	            0x7560	                           jne 0x4009f2a	      3311	ops.c	FUNCTION_45	IF_29	IF_31	IF_33
0x4009eca	      0x41837e6000	               cmp dword [r14 + 0x60], 0	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x4009ecf	            0x742e	                            je 0x4009eff	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x4009ed1	      0xba05000000	                              mov edx, 5	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x4009ed6	      0xbe00000000	                              mov esi, 0	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x4009edb	      0xbf00000000	                              mov edi, 0	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x4009ee0	      0xe800000000	                          call 0x4009ee5	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x4009ee5	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x4009eed	          0x4889c7	                            mov rdi, rax	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x4009ef0	      0xb800000000	                              mov eax, 0	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x4009ef5	      0xe800000000	                          call 0x4009efa	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x4009efa	      0xe990000000	                           jmp 0x4009f8f	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x4009eff	      0xba05000000	                              mov edx, 5	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x4009f04	      0xbe00000000	                              mov esi, 0	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x4009f09	      0xbf00000000	                              mov edi, 0	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x4009f0e	      0xe800000000	                          call 0x4009f13	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x4009f13	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x4009f1b	          0x4889c7	                            mov rdi, rax	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x4009f1e	      0xb800000000	                              mov eax, 0	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x4009f23	      0xe800000000	                          call 0x4009f28	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x4009f28	            0xeb65	                           jmp 0x4009f8f	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x4009f2a	      0x41837e6000	               cmp dword [r14 + 0x60], 0	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x4009f2f	            0x7430	                            je 0x4009f61	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x4009f31	      0xba05000000	                              mov edx, 5	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4009f36	      0xbe00000000	                              mov esi, 0	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4009f3b	      0xbf00000000	                              mov edi, 0	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4009f40	      0xe800000000	                          call 0x4009f45	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4009f45	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4009f4d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4009f52	          0x4889c7	                            mov rdi, rax	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4009f55	      0xb800000000	                              mov eax, 0	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4009f5a	      0xe800000000	                          call 0x4009f5f	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4009f5f	            0xeb2e	                           jmp 0x4009f8f	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4009f61	      0xba05000000	                              mov edx, 5	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4009f66	      0xbe00000000	                              mov esi, 0	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4009f6b	      0xbf00000000	                              mov edi, 0	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4009f70	      0xe800000000	                          call 0x4009f75	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4009f75	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4009f7d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4009f82	          0x4889c7	                            mov rdi, rax	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4009f85	      0xb800000000	                              mov eax, 0	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4009f8a	      0xe800000000	                          call 0x4009f8f	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4009f8f	    0x488b05000000	            mov rax, qword [0x04009f96] 	      3330	ops.c	FUNCTION_45
0x4009f96	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	      3330	ops.c	FUNCTION_45
0x4009f9a	        0x498b5e28	            mov rbx, qword [r14 + 0x28] 	      3330	ops.c	FUNCTION_45
0x4009f9e	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3330	ops.c	FUNCTION_45
0x4009fa5	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3330	ops.c	FUNCTION_45
0x4009fac	        0x498b4e30	            mov rcx, qword [r14 + 0x30] 	      3331	ops.c	FUNCTION_45
0x4009fb0	        0x498b5e38	            mov rbx, qword [r14 + 0x38] 	      3331	ops.c	FUNCTION_45
0x4009fb4	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3331	ops.c	FUNCTION_45
0x4009fbb	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3331	ops.c	FUNCTION_45
0x4009fc2	      0x837c240c01	                cmp dword [rsp + 0xc], 1	      3332	ops.c	FUNCTION_45	IF_36
0x4009fc7	            0x751b	                           jne 0x4009fe4	      3332	ops.c	FUNCTION_45	IF_36
0x4009fc9	      0x41837e6000	               cmp dword [r14 + 0x60], 0	      3332	ops.c	FUNCTION_45	IF_36
0x4009fce	            0x7514	                           jne 0x4009fe4	      3332	ops.c	FUNCTION_45	IF_36
0x4009fd0	    0xc780e8110000	            mov dword [rax + 0x11e8], 0 	      3334	ops.c	FUNCTION_45	IF_36
0x4009fda	    0xc78008120000	   mov dword [rax + 0x1208], 0x7fffffff 	      3335	ops.c	FUNCTION_45	IF_36
0x4009fe4	    0x833d00000000	               cmp dword [0x04009feb], 0	      3344	ops.c	FUNCTION_45	IF_37
0x4009feb	            0x7458	                            je 0x400a045	      3344	ops.c	FUNCTION_45	IF_37
0x4009fed	    0x4981fd000000	                              cmp r13, 0	      3345	ops.c	FUNCTION_45	IF_37
0x4009ff4	            0x7434	                            je 0x400a02a	      3345	ops.c	FUNCTION_45	IF_37
0x4009ff6	      0x837c241800	               cmp dword [rsp + 0x18], 0	      3346	ops.c	FUNCTION_45	IF_37
0x4009ffb	     0xf859e010000	                           jne 0x400a19f	      3346	ops.c	FUNCTION_45	IF_37
0x400a001	      0x41837e0400	                  cmp dword [r14 + 4], 0	      3346	ops.c	FUNCTION_45	IF_37
0x400a006	     0xf85a3010000	                           jne 0x400a1af	      3346	ops.c	FUNCTION_45	IF_37
0x400a00c	    0x8b0500000000	            mov eax, dword [0x0400a012] 	      3347	ops.c	FUNCTION_45	IF_37
0x400a012	     0xb0500000000	              or eax, dword [0x0400a018]	      3347	ops.c	FUNCTION_45	IF_37
0x400a018	            0xa801	                              test al, 1	      3347	ops.c	FUNCTION_45	IF_37
0x400a01a	     0xf848f010000	                            je 0x400a1af	      3347	ops.c	FUNCTION_45	IF_37
0x400a020	      0xbf00000000	                              mov edi, 0	      3351	ops.c	FUNCTION_45	IF_37	CALL_40
0x400a025	      0xe82b69ffff	                  call sym.copy_yank_reg	      3351	ops.c	FUNCTION_45	IF_37	CALL_40
0x400a02a	      0xbf00000000	                              mov edi, 0	      3353	ops.c	FUNCTION_45	IF_37	CALL_41
0x400a02f	      0xe800000000	                          call 0x400a034	      3353	ops.c	FUNCTION_45	IF_37	CALL_41
0x400a034	      0xbf00000000	                              mov edi, 0	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x400a039	      0xe800000000	                          call 0x400a03e	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x400a03e	      0xbd01000000	                              mov ebp, 1	      3356	ops.c	FUNCTION_45	IF_37
0x400a043	            0xeb05	                           jmp 0x400a04a	      3356	ops.c	FUNCTION_45	IF_37
0x400a045	      0xbd00000000	                              mov ebp, 0	      3072	ops.c	FUNCTION_45
0x400a04a	    0x833d00000000	               cmp dword [0x0400a051], 0	      3365	ops.c	FUNCTION_45	IF_39
0x400a051	     0xf8499000000	                            je 0x400a0f0	      3365	ops.c	FUNCTION_45	IF_39
0x400a057	    0x4981fd000000	                              cmp r13, 0	      3366	ops.c	FUNCTION_45	IF_39
0x400a05e	            0x7443	                            je 0x400a0a3	      3366	ops.c	FUNCTION_45	IF_39
0x400a060	      0xbb01000000	                              mov ebx, 1	      3393	ops.c	FUNCTION_45
0x400a065	      0x837c241800	               cmp dword [rsp + 0x18], 0	      3367	ops.c	FUNCTION_45	IF_39
0x400a06a	     0xf85c5000000	                           jne 0x400a135	      3367	ops.c	FUNCTION_45	IF_39
0x400a070	      0x41837e0400	                  cmp dword [r14 + 4], 0	      3367	ops.c	FUNCTION_45	IF_39
0x400a075	     0xf8581000000	                           jne 0x400a0fc	      3367	ops.c	FUNCTION_45	IF_39
0x400a07b	    0x8b0500000000	            mov eax, dword [0x0400a081] 	      3368	ops.c	FUNCTION_45	IF_39
0x400a081	     0xb0500000000	              or eax, dword [0x0400a087]	      3368	ops.c	FUNCTION_45	IF_39
0x400a087	            0xa802	                              test al, 2	      3368	ops.c	FUNCTION_45	IF_39
0x400a089	            0x7471	                            je 0x400a0fc	      3368	ops.c	FUNCTION_45	IF_39
0x400a08b	      0xbf00000000	                              mov edi, 0	      3373	ops.c	FUNCTION_45	IF_39	CALL_43
0x400a090	      0xe8c068ffff	                  call sym.copy_yank_reg	      3373	ops.c	FUNCTION_45	IF_39	CALL_43
0x400a095	            0xeb0c	                           jmp 0x400a0a3	      3373	ops.c	FUNCTION_45	IF_39	CALL_43
0x400a097	      0xbd00000000	                              mov ebp, 0	      3366	ops.c	FUNCTION_45	IF_39
0x400a09c	            0xeb05	                           jmp 0x400a0a3	      3366	ops.c	FUNCTION_45	IF_39
0x400a09e	      0xbd00000000	                              mov ebp, 0	      3072	ops.c	FUNCTION_45
0x400a0a3	      0xbf00000000	                              mov edi, 0	      3375	ops.c	FUNCTION_45	IF_39	CALL_44
0x400a0a8	      0xe800000000	                          call 0x400a0ad	      3375	ops.c	FUNCTION_45	IF_39	CALL_44
0x400a0ad	      0xbf00000000	                              mov edi, 0	      3376	ops.c	FUNCTION_45	IF_39	CALL_45
0x400a0b2	      0xe800000000	                          call 0x400a0b7	      3376	ops.c	FUNCTION_45	IF_39	CALL_45
0x400a0b7	      0xe800000000	                          call 0x400a0bc	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400a0bc	            0x85c0	                           test eax, eax	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400a0be	            0x7530	                           jne 0x400a0f0	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400a0c0	      0xe800000000	                          call 0x400a0c5	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400a0c5	             0x9e8	                             or eax, ebp	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400a0c7	            0x7527	                           jne 0x400a0f0	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400a0c9	    0x4981fd000000	                              cmp r13, 0	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400a0d0	            0x751e	                           jne 0x400a0f0	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400a0d2	      0xbf00000000	                              mov edi, 0	      3380	ops.c	FUNCTION_45	IF_39	IF_41	CALL_48
0x400a0d7	      0xe87968ffff	                  call sym.copy_yank_reg	      3380	ops.c	FUNCTION_45	IF_39	IF_41	CALL_48
0x400a0dc	      0xbf00000000	                              mov edi, 0	      3381	ops.c	FUNCTION_45	IF_39	IF_41	CALL_49
0x400a0e1	      0xe800000000	                          call 0x400a0e6	      3381	ops.c	FUNCTION_45	IF_39	IF_41	CALL_49
0x400a0e6	      0xbf00000000	                              mov edi, 0	      3382	ops.c	FUNCTION_45	IF_39	IF_41	CALL_50
0x400a0eb	      0xe800000000	                          call 0x400a0f0	      3382	ops.c	FUNCTION_45	IF_39	IF_41	CALL_50
0x400a0f0	      0xbb01000000	                              mov ebx, 1	      3393	ops.c	FUNCTION_45
0x400a0f5	      0x837c241800	               cmp dword [rsp + 0x18], 0	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400a0fa	            0x7539	                           jne 0x400a135	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400a0fc	      0xe800000000	                          call 0x400a101	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400a101	      0xbb01000000	                              mov ebx, 1	      3393	ops.c	FUNCTION_45
0x400a106	            0x85c0	                           test eax, eax	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400a108	            0x742b	                            je 0x400a135	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400a10a	    0x488b35000000	            mov rsi, qword [0x0400a111] 	      3390	ops.c	FUNCTION_45	CALL_52
0x400a111	          0x4c89f7	                            mov rdi, r14	      3390	ops.c	FUNCTION_45	CALL_52
0x400a114	      0xe812f5ffff	                call sym.yank_do_autocmd	      3390	ops.c	FUNCTION_45	CALL_52
0x400a119	            0xeb1a	                           jmp 0x400a135	      3390	ops.c	FUNCTION_45	CALL_52
0x400a11b	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      3390	ops.c	FUNCTION_45	CALL_52
0x400a120	        0x488d7d01	                      lea rdi, [rbp + 1]	      3396	ops.c	FUNCTION_45	CALL_53
0x400a124	      0xe88462ffff	                      call sym.free_yank	      3396	ops.c	FUNCTION_45	CALL_53
0x400a129	    0x4c892d000000	            mov qword [0x0400a130], r13 	      3397	ops.c	FUNCTION_45
0x400a130	      0xbb00000000	                              mov ebx, 0	      3398	ops.c	FUNCTION_45
0x400a135	            0x89d8	                            mov eax, ebx	      3399	ops.c	FUNCTION_45
0x400a137	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	      3399	ops.c	FUNCTION_45
0x400a13f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3399	ops.c	FUNCTION_45
0x400a148	     0xf84bc000000	                            je 0x400a20a	      3399	ops.c	FUNCTION_45
0x400a14e	      0xe9b2000000	                           jmp 0x400a205	      3399	ops.c	FUNCTION_45
0x400a153	    0x488b05000000	            mov rax, qword [0x0400a15a] 	      3330	ops.c	FUNCTION_45
0x400a15a	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	      3330	ops.c	FUNCTION_45
0x400a15e	        0x498b5e28	            mov rbx, qword [r14 + 0x28] 	      3330	ops.c	FUNCTION_45
0x400a162	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3330	ops.c	FUNCTION_45
0x400a169	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3330	ops.c	FUNCTION_45
0x400a170	        0x498b4e30	            mov rcx, qword [r14 + 0x30] 	      3331	ops.c	FUNCTION_45
0x400a174	        0x498b5e38	            mov rbx, qword [r14 + 0x38] 	      3331	ops.c	FUNCTION_45
0x400a178	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3331	ops.c	FUNCTION_45
0x400a17f	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3331	ops.c	FUNCTION_45
0x400a186	      0xe959feffff	                           jmp 0x4009fe4	      3331	ops.c	FUNCTION_45
0x400a18b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400a190	    0x483b05000000	            cmp rax, qword [0x0400a197] 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400a197	     0xf8fdefcffff	                            jg 0x4009e7b	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400a19d	            0xebb4	                           jmp 0x400a153	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400a19f	      0xbb01000000	                              mov ebx, 1	      3393	ops.c	FUNCTION_45
0x400a1a4	    0x833d00000000	               cmp dword [0x0400a1ab], 0	      3365	ops.c	FUNCTION_45	IF_39
0x400a1ab	            0x7488	                            je 0x400a135	      3365	ops.c	FUNCTION_45	IF_39
0x400a1ad	            0xeb3f	                           jmp 0x400a1ee	      3365	ops.c	FUNCTION_45	IF_39
0x400a1af	    0x833d00000000	               cmp dword [0x0400a1b6], 0	      3365	ops.c	FUNCTION_45	IF_39
0x400a1b6	            0x751f	                           jne 0x400a1d7	      3365	ops.c	FUNCTION_45	IF_39
0x400a1b8	      0xe93fffffff	                           jmp 0x400a0fc	      3365	ops.c	FUNCTION_45	IF_39
0x400a1bd	        0x458b6e38	           mov r13d, dword [r14 + 0x38] 	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a1c1	      0xe9e9f9ffff	                           jmp 0x4009baf	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a1c6	      0xba00000000	                              mov edx, 0	      3165	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400a1cb	        0x493b5e30	            cmp rbx, qword [r14 + 0x30] 	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a1cf	     0xf85eff9ffff	                           jne 0x4009bc4	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a1d5	            0xebe6	                           jmp 0x400a1bd	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400a1d7	    0x4981fd000000	                              cmp r13, 0	      3366	ops.c	FUNCTION_45	IF_39
0x400a1de	     0xf84b3feffff	                            je 0x400a097	      3366	ops.c	FUNCTION_45	IF_39
0x400a1e4	      0xbd00000000	                              mov ebp, 0	      3366	ops.c	FUNCTION_45	IF_39
0x400a1e9	      0xe982feffff	                           jmp 0x400a070	      3366	ops.c	FUNCTION_45	IF_39
0x400a1ee	    0x4981fd000000	                              cmp r13, 0	      3366	ops.c	FUNCTION_45	IF_39
0x400a1f5	     0xf84a3feffff	                            je 0x400a09e	      3366	ops.c	FUNCTION_45	IF_39
0x400a1fb	      0xbb01000000	                              mov ebx, 1	      3393	ops.c	FUNCTION_45
0x400a200	      0xe930ffffff	                           jmp 0x400a135	      3393	ops.c	FUNCTION_45
0x400a205	      0xe800000000	                          call 0x400a20a	      3399	ops.c	FUNCTION_45
0x400a20a	    0x4881c4180100	                          add rsp, 0x118	      3399	ops.c	FUNCTION_45
0x400a211	              0x5b	                                 pop rbx	      3399	ops.c	FUNCTION_45
0x400a212	              0x5d	                                 pop rbp	      3399	ops.c	FUNCTION_45
0x400a213	            0x415c	                                 pop r12	      3399	ops.c	FUNCTION_45
0x400a215	            0x415d	                                 pop r13	      3399	ops.c	FUNCTION_45
0x400a217	            0x415e	                                 pop r14	      3399	ops.c	FUNCTION_45
0x400a219	            0x415f	                                 pop r15	      3399	ops.c	FUNCTION_45
0x400a21b	              0xc3	                                     ret	      3399	ops.c	FUNCTION_45
ends_in_white	CALL,3:ELSE,0:WHILE,0:FOR,0:functions,0:IF,1:SWITCH,0:DO,0	19
0x4000040	        0x4883ec08	                              sub rsp, 8	      5231	ops.c	FUNCTION_61
0x4000044	      0xe800000000	                          call 0x4000049	      5232	ops.c	FUNCTION_61	CALL_1
0x4000049	          0x4889c2	                            mov rdx, rax	      5232	ops.c	FUNCTION_61	CALL_1
0x400004c	      0xb800000000	                              mov eax, 0	      5236	ops.c	FUNCTION_61	IF_1
0x4000051	          0x803a00	                       cmp byte [rdx], 0	      5235	ops.c	FUNCTION_61	IF_1
0x4000054	            0x7425	                            je 0x400007b	      5235	ops.c	FUNCTION_61	IF_1
0x4000056	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5239	ops.c	FUNCTION_61	CALL_2
0x400005d	          0x4889d7	                            mov rdi, rdx	      5239	ops.c	FUNCTION_61	CALL_2
0x4000060	            0xf2ae	              repne scasb al, byte [rdi]	      5239	ops.c	FUNCTION_61	CALL_2
0x4000062	          0x48f7d1	                                 not rcx	      5239	ops.c	FUNCTION_61	CALL_2
0x4000065	       0xfb6540afe	         movzx edx, byte [rdx + rcx - 2]	      5240	ops.c	FUNCTION_61	CALL_3
0x400006a	          0x80fa20	                            cmp dl, 0x20	      5240	ops.c	FUNCTION_61	CALL_3
0x400006d	           0xf94c1	                                 sete cl	      5240	ops.c	FUNCTION_61	CALL_3
0x4000070	          0x80fa09	                               cmp dl, 9	      5240	ops.c	FUNCTION_61	CALL_3
0x4000073	           0xf94c0	                                 sete al	      5240	ops.c	FUNCTION_61	CALL_3
0x4000076	             0x9c8	                             or eax, ecx	      5240	ops.c	FUNCTION_61	CALL_3
0x4000078	           0xfb6c0	                           movzx eax, al	      5240	ops.c	FUNCTION_61	CALL_3
0x400007b	        0x4883c408	                              add rsp, 8	      5241	ops.c	FUNCTION_61
0x400007f	              0xc3	                                     ret	      5241	ops.c	FUNCTION_61
copy_yank_reg	CALL,4:ELSE,1:WHILE,0:FOR,1:functions,0:IF,2:SWITCH,0:DO,0	50
0x4000955	            0x4154	                                push r12	      3426	ops.c	FUNCTION_47
0x4000957	              0x55	                                push rbp	      3426	ops.c	FUNCTION_47
0x4000958	              0x53	                                push rbx	      3426	ops.c	FUNCTION_47
0x4000959	    0x4c8b25000000	            mov r12, qword [0x04000960] 	      3427	ops.c	FUNCTION_47
0x4000960	    0x48893d000000	            mov qword [0x04000967], rdi 	      3430	ops.c	FUNCTION_47
0x4000967	      0xe8b1faffff	                  call sym.free_yank_all	      3431	ops.c	FUNCTION_47	CALL_1
0x400096c	    0x488b1d000000	            mov rbx, qword [0x04000973] 	      3432	ops.c	FUNCTION_47
0x4000973	        0x498b0424	                    mov rax, qword [r12]	      3432	ops.c	FUNCTION_47
0x4000977	          0x488903	                    mov qword [rbx], rax	      3432	ops.c	FUNCTION_47
0x400097a	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      3432	ops.c	FUNCTION_47
0x400097f	        0x48897b08	                mov qword [rbx + 8], rdi	      3432	ops.c	FUNCTION_47
0x4000983	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      3432	ops.c	FUNCTION_47
0x4000988	        0x48894310	             mov qword [rbx + 0x10], rax	      3432	ops.c	FUNCTION_47
0x400098c	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      3432	ops.c	FUNCTION_47
0x4000991	        0x48894318	             mov qword [rbx + 0x18], rax	      3432	ops.c	FUNCTION_47
0x4000995	        0x48c1e703	                              shl rdi, 3	      3433	ops.c	FUNCTION_47	CALL_2
0x4000999	      0xbe01000000	                              mov esi, 1	      3433	ops.c	FUNCTION_47	CALL_2
0x400099e	      0xe800000000	                          call 0x40009a3	      3433	ops.c	FUNCTION_47	CALL_2
0x40009a3	          0x488903	                    mov qword [rbx], rax	      3433	ops.c	FUNCTION_47	CALL_2
0x40009a6	    0x488b05000000	            mov rax, qword [0x040009ad] 	      3435	ops.c	FUNCTION_47	IF_1
0x40009ad	        0x48833800	                      cmp qword [rax], 0	      3435	ops.c	FUNCTION_47	IF_1
0x40009b1	            0x740e	                            je 0x40009c1	      3435	ops.c	FUNCTION_47	IF_1
0x40009b3	      0xbb00000000	                              mov ebx, 0	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40009b8	      0x4883780800	                  cmp qword [rax + 8], 0	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40009bd	            0x7f0c	                            jg 0x40009cb	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40009bf	            0xeb51	                           jmp 0x4000a12	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x40009c1	    0x48c740080000	                  mov qword [rax + 8], 0	      3436	ops.c	FUNCTION_47	IF_1
0x40009c9	            0xeb47	                           jmp 0x4000a12	      3436	ops.c	FUNCTION_47	IF_1
0x40009cb	          0x488b00	                    mov rax, qword [rax]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40009ce	        0x488d2cd8	                  lea rbp, [rax + rbx*8]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40009d2	        0x498b0424	                    mov rax, qword [r12]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40009d6	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40009da	      0xe800000000	                          call 0x40009df	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40009df	        0x48894500	                    mov qword [rbp], rax	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40009e3	          0x4885c0	                           test rax, rax	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40009e6	            0x7519	                           jne 0x4000a01	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x40009e8	          0x4889df	                            mov rdi, rbx	      3441	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_4
0x40009eb	      0xe8bdf9ffff	                      call sym.free_yank	      3441	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_4
0x40009f0	    0x488b05000000	            mov rax, qword [0x040009f7] 	      3442	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x40009f7	    0x48c740080000	                  mov qword [rax + 8], 0	      3442	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x40009ff	            0xeb11	                           jmp 0x4000a12	      3443	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x4000a01	        0x4883c301	                              add rbx, 1	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4000a05	    0x488b05000000	            mov rax, qword [0x04000a0c] 	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4000a0c	        0x48395808	                cmp qword [rax + 8], rbx	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4000a10	            0x7fb9	                            jg 0x40009cb	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4000a12	    0x4c8925000000	            mov qword [0x04000a19], r12 	      3445	ops.c	FUNCTION_47
0x4000a19	              0x5b	                                 pop rbx	      3446	ops.c	FUNCTION_47
0x4000a1a	              0x5d	                                 pop rbp	      3446	ops.c	FUNCTION_47
0x4000a1b	            0x415c	                                 pop r12	      3446	ops.c	FUNCTION_47
0x4000a1d	              0xc3	                                     ret	      3446	ops.c	FUNCTION_47
get_expr_register	CALL,3:ELSE,1:WHILE,0:FOR,0:functions,0:IF,2:SWITCH,0:DO,0	20
0x4002118	        0x4883ec08	                              sub rsp, 8	       794	ops.c	FUNCTION_10
0x400211c	      0xba00000000	                              mov edx, 0	       797	ops.c	FUNCTION_10	CALL_1
0x4002121	      0xbe00000000	                              mov esi, 0	       797	ops.c	FUNCTION_10	CALL_1
0x4002126	      0xbf3d000000	                           mov edi, 0x3d	       797	ops.c	FUNCTION_10	CALL_1
0x400212b	      0xe800000000	                          call 0x4002130	       797	ops.c	FUNCTION_10	CALL_1
0x4002130	          0x4885c0	                           test rax, rax	       798	ops.c	FUNCTION_10	IF_1
0x4002133	            0x7423	                            je 0x4002158	       798	ops.c	FUNCTION_10	IF_1
0x4002135	          0x803800	                       cmp byte [rax], 0	       800	ops.c	FUNCTION_10	IF_2
0x4002138	            0x750f	                           jne 0x4002149	       800	ops.c	FUNCTION_10	IF_2
0x400213a	          0x4889c7	                            mov rdi, rax	       801	ops.c	FUNCTION_10	CALL_2
0x400213d	      0xe800000000	                          call 0x4002142	       801	ops.c	FUNCTION_10	CALL_2
0x4002142	      0xb83d000000	                           mov eax, 0x3d	       804	ops.c	FUNCTION_10
0x4002147	            0xeb14	                           jmp 0x400215d	       804	ops.c	FUNCTION_10
0x4002149	          0x4889c7	                            mov rdi, rax	       803	ops.c	FUNCTION_10	CALL_3
0x400214c	      0xe800000000	                          call 0x4002151	       803	ops.c	FUNCTION_10	CALL_3
0x4002151	      0xb83d000000	                           mov eax, 0x3d	       804	ops.c	FUNCTION_10
0x4002156	            0xeb05	                           jmp 0x400215d	       804	ops.c	FUNCTION_10
0x4002158	      0xb800000000	                              mov eax, 0	       799	ops.c	FUNCTION_10	IF_1
0x400215d	        0x4883c408	                              add rsp, 8	       805	ops.c	FUNCTION_10
0x4002161	              0xc3	                                     ret	       805	ops.c	FUNCTION_10
op_on_lines	CALL,0:ELSE,0:WHILE,0:FOR,0:functions,0:IF,0:SWITCH,0:DO,0	3
0x4001d91	          0x4863ff	                         movsxd rdi, edi	       204	ops.c	FUNCTION_2
0x4001d94	     0xfbe847f0000	           movsx eax, byte [rdi + rdi*2]	       204	ops.c	FUNCTION_2
0x4001d9c	              0xc3	                                     ret	       205	ops.c	FUNCTION_2
format_lines	CALL,34:ELSE,8:WHILE,1:FOR,1:functions,0:IF,25:SWITCH,0:DO,0	372
0x40051de	            0x4157	                                push r15	      4960	ops.c	FUNCTION_60
0x40051e0	            0x4156	                                push r14	      4960	ops.c	FUNCTION_60
0x40051e2	            0x4155	                                push r13	      4960	ops.c	FUNCTION_60
0x40051e4	            0x4154	                                push r12	      4960	ops.c	FUNCTION_60
0x40051e6	              0x55	                                push rbp	      4960	ops.c	FUNCTION_60
0x40051e7	              0x53	                                push rbx	      4960	ops.c	FUNCTION_60
0x40051e8	        0x4883ec78	                           sub rsp, 0x78	      4960	ops.c	FUNCTION_60
0x40051ec	          0x4989ff	                            mov r15, rdi	      4960	ops.c	FUNCTION_60
0x40051ef	            0x89f3	                            mov ebx, esi	      4960	ops.c	FUNCTION_60
0x40051f1	    0x64488b042528	                mov rax, qword fs:[0x28]	      4960	ops.c	FUNCTION_60
0x40051fa	      0x4889442468	             mov qword [rsp + 0x68], rax	      4960	ops.c	FUNCTION_60
0x40051ff	            0x31c0	                            xor eax, eax	      4960	ops.c	FUNCTION_60
0x4005201	    0xc74424500000	               mov dword [rsp + 0x50], 0	      4968	ops.c	FUNCTION_60
0x4005209	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4970	ops.c	FUNCTION_60
0x4005212	    0x8b0500000000	            mov eax, dword [0x04005218] 	      4986	ops.c	FUNCTION_60
0x4005218	        0x89442434	             mov dword [rsp + 0x34], eax	      4986	ops.c	FUNCTION_60
0x400521c	      0xbf01000000	                              mov edi, 1	      4989	ops.c	FUNCTION_60	CALL_1
0x4005221	      0xe800000000	                          call 0x4005226	      4989	ops.c	FUNCTION_60	CALL_1
0x4005226	          0x8d0440	                  lea eax, [rax + rax*2]	      4989	ops.c	FUNCTION_60	CALL_1
0x4005229	        0x8944243c	             mov dword [rsp + 0x3c], eax	      4989	ops.c	FUNCTION_60	CALL_1
0x400522d	      0xbf71000000	                           mov edi, 0x71	      4993	ops.c	FUNCTION_60	CALL_2
0x4005232	      0xe800000000	                          call 0x4005237	      4993	ops.c	FUNCTION_60	CALL_2
0x4005237	          0x4189c6	                           mov r14d, eax	      4993	ops.c	FUNCTION_60	CALL_2
0x400523a	        0x89442414	             mov dword [rsp + 0x14], eax	      4993	ops.c	FUNCTION_60	CALL_2
0x400523e	      0xbf32000000	                           mov edi, 0x32	      4995	ops.c	FUNCTION_60	CALL_3
0x4005243	      0xe800000000	                          call 0x4005248	      4995	ops.c	FUNCTION_60	CALL_3
0x4005248	        0x8944244c	             mov dword [rsp + 0x4c], eax	      4995	ops.c	FUNCTION_60	CALL_3
0x400524c	      0xbf6e000000	                           mov edi, 0x6e	      4996	ops.c	FUNCTION_60	CALL_4
0x4005251	      0xe800000000	                          call 0x4005256	      4996	ops.c	FUNCTION_60	CALL_4
0x4005256	        0x89442428	             mov dword [rsp + 0x28], eax	      4996	ops.c	FUNCTION_60	CALL_4
0x400525a	      0xbf77000000	                           mov edi, 0x77	      4997	ops.c	FUNCTION_60	CALL_5
0x400525f	      0xe800000000	                          call 0x4005264	      4997	ops.c	FUNCTION_60	CALL_5
0x4005264	          0x4189c4	                           mov r12d, eax	      4997	ops.c	FUNCTION_60	CALL_5
0x4005267	    0x488b05000000	            mov rax, qword [0x0400526e] 	      5002	ops.c	FUNCTION_60	IF_1
0x400526e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5002	ops.c	FUNCTION_60	IF_1
0x4005272	      0xbd01000000	                              mov ebp, 1	      5009	ops.c	FUNCTION_60	ELSE_1
0x4005277	        0x4883f801	                              cmp rax, 1	      5002	ops.c	FUNCTION_60	IF_1
0x400527b	            0x7e18	                           jle 0x4005295	      5002	ops.c	FUNCTION_60	IF_1
0x400527d	        0x488d78ff	                      lea rdi, [rax - 1]	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005281	          0x4489f1	                           mov ecx, r14d	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005284	      0x488d542458	                   lea rdx, [rsp + 0x58]	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005289	      0x488d742450	                   lea rsi, [rsp + 0x50]	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x400528e	      0xe884bdffff	                  call sym.fmt_check_par	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005293	            0x89c5	                            mov ebp, eax	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4005295	    0x488b05000000	            mov rax, qword [0x0400529c] 	      5010	ops.c	FUNCTION_60	CALL_7
0x400529c	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5010	ops.c	FUNCTION_60	CALL_7
0x40052a0	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      5010	ops.c	FUNCTION_60	CALL_7
0x40052a4	      0x488d542460	                   lea rdx, [rsp + 0x60]	      5010	ops.c	FUNCTION_60	CALL_7
0x40052a9	      0x488d742454	                   lea rsi, [rsp + 0x54]	      5010	ops.c	FUNCTION_60	CALL_7
0x40052ae	      0xe864bdffff	                  call sym.fmt_check_par	      5010	ops.c	FUNCTION_60	CALL_7
0x40052b3	          0x4189c5	                           mov r13d, eax	      5010	ops.c	FUNCTION_60	CALL_7
0x40052b6	          0x4585e4	                         test r12d, r12d	      5016	ops.c	FUNCTION_60	IF_2
0x40052b9	       0xf9544241b	                 setne byte [rsp + 0x1b]	      5016	ops.c	FUNCTION_60	IF_2
0x40052be	       0xfb64c241b	           movzx ecx, byte [rsp + 0x1b] 	      5016	ops.c	FUNCTION_60	IF_2
0x40052c3	            0x89e8	                            mov eax, ebp	      5016	ops.c	FUNCTION_60	IF_2
0x40052c5	          0x4409e8	                            or eax, r13d	      5016	ops.c	FUNCTION_60	IF_2
0x40052c8	            0x7504	                           jne 0x40052ce	      5016	ops.c	FUNCTION_60	IF_2
0x40052ca	            0x84c9	                             test cl, cl	      5016	ops.c	FUNCTION_60	IF_2
0x40052cc	            0x750c	                           jne 0x40052da	      5016	ops.c	FUNCTION_60	IF_2
0x40052ce	            0x85c0	                           test eax, eax	      5015	ops.c	FUNCTION_60
0x40052d0	        0x410f95c4	                              setne r12b	      5015	ops.c	FUNCTION_60
0x40052d4	        0x450fb6e4	                        movzx r12d, r12b	      5015	ops.c	FUNCTION_60
0x40052d8	            0xeb1e	                           jmp 0x40052f8	      5015	ops.c	FUNCTION_60
0x40052da	    0x488b05000000	            mov rax, qword [0x040052e1] 	      5017	ops.c	FUNCTION_60	CALL_8
0x40052e1	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5017	ops.c	FUNCTION_60	CALL_8
0x40052e5	        0x4883ef01	                              sub rdi, 1	      5017	ops.c	FUNCTION_60	CALL_8
0x40052e9	      0xe852adffff	                  call sym.ends_in_white	      5017	ops.c	FUNCTION_60	CALL_8
0x40052ee	            0x85c0	                           test eax, eax	      5017	ops.c	FUNCTION_60	CALL_8
0x40052f0	        0x410f94c4	                               sete r12b	      5017	ops.c	FUNCTION_60	CALL_8
0x40052f4	        0x450fb6e4	                        movzx r12d, r12b	      5017	ops.c	FUNCTION_60	CALL_8
0x40052f8	    0x488b05000000	            mov rax, qword [0x040052ff] 	      5019	ops.c	FUNCTION_60
0x40052ff	      0x4883683801	               sub qword [rax + 0x38], 1	      5019	ops.c	FUNCTION_60
0x4005304	          0x4d85ff	                           test r15, r15	      5020	ops.c	FUNCTION_60	FOR_1
0x4005307	     0xf8407050000	                            je 0x4005814	      5020	ops.c	FUNCTION_60	FOR_1
0x400530d	    0x8b0500000000	            mov eax, dword [0x04005313] 	      5020	ops.c	FUNCTION_60	FOR_1
0x4005313	        0x89442438	             mov dword [rsp + 0x38], eax	      5020	ops.c	FUNCTION_60	FOR_1
0x4005317	            0x85c0	                           test eax, eax	      5020	ops.c	FUNCTION_60	FOR_1
0x4005319	     0xf85f5040000	                           jne 0x4005814	      5020	ops.c	FUNCTION_60	FOR_1
0x400531f	          0x83fb01	                              cmp ebx, 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4005322	            0x19c0	                            sbb eax, eax	      5020	ops.c	FUNCTION_60	FOR_1
0x4005324	            0xf7d0	                                 not eax	      5020	ops.c	FUNCTION_60	FOR_1
0x4005326	          0x83e008	                              and eax, 8	      5020	ops.c	FUNCTION_60	FOR_1
0x4005329	        0x89442430	             mov dword [rsp + 0x30], eax	      5020	ops.c	FUNCTION_60	FOR_1
0x400532d	          0x4c89fb	                            mov rbx, r15	      5020	ops.c	FUNCTION_60	FOR_1
0x4005330	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x4005338	    0xc74424200100	               mov dword [rsp + 0x20], 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4005340	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4005348	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	      5020	ops.c	FUNCTION_60	FOR_1
0x4005350	    0x41be01000000	                             mov r14d, 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4005356	    0xc74424480000	               mov dword [rsp + 0x48], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x400535e	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x4005366	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x400536e	      0x486344243c	         movsxd rax, dword [rsp + 0x3c] 	      5020	ops.c	FUNCTION_60	FOR_1
0x4005373	      0x4889442440	             mov qword [rsp + 0x40], rax	      5020	ops.c	FUNCTION_60	FOR_1
0x4005378	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400537c	         0xb442428	              or eax, dword [rsp + 0x28]	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005380	        0x8944243c	             mov dword [rsp + 0x3c], eax	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005384	          0x4585f6	                         test r14d, r14d	      5025	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005387	            0x7426	                            je 0x40053af	      5025	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005389	    0x488b05000000	            mov rax, qword [0x04005390] 	      5027	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005390	      0x4883403801	               add qword [rax + 0x38], 1	      5027	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005395	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5031	ops.c	FUNCTION_60	FOR_1	IF_3
0x4005399	        0x89442450	             mov dword [rsp + 0x50], eax	      5031	ops.c	FUNCTION_60	FOR_1	IF_3
0x400539d	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x40053a2	      0x4889442458	             mov qword [rsp + 0x58], rax	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x40053a7	      0x448964241c	            mov dword [rsp + 0x1c], r12d	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x40053ac	          0x4489ed	                           mov ebp, r13d	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x40053af	        0x4883fb01	                              cmp rbx, 1	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x40053b3	            0x7417	                            je 0x40053cc	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x40053b5	    0x488b05000000	            mov rax, qword [0x040053bc] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x40053bc	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x40053c0	    0x488b05000000	            mov rax, qword [0x040053c7] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x40053c7	          0x483b38	                    cmp rdi, qword [rax]	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x40053ca	            0x7519	                           jne 0x40053e5	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x40053cc	    0xc74424540000	               mov dword [rsp + 0x54], 0	      5043	ops.c	FUNCTION_60	FOR_1	IF_4
0x40053d4	    0x48c744246000	               mov qword [rsp + 0x60], 0	      5044	ops.c	FUNCTION_60	FOR_1	IF_4
0x40053dd	    0x41bd01000000	                             mov r13d, 1	      5041	ops.c	FUNCTION_60	FOR_1	IF_4
0x40053e3	            0xeb41	                           jmp 0x4005426	      5044	ops.c	FUNCTION_60	FOR_1	IF_4
0x40053e5	        0x4883c701	                              add rdi, 1	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x40053e9	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x40053ed	      0x488d542460	                   lea rdx, [rsp + 0x60]	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x40053f2	      0x488d742454	                   lea rsi, [rsp + 0x54]	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x40053f7	      0xe81bbcffff	                  call sym.fmt_check_par	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x40053fc	          0x4189c5	                           mov r13d, eax	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x40053ff	      0x837c242800	               cmp dword [rsp + 0x28], 0	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005404	            0x7420	                            je 0x4005426	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005406	    0x488b05000000	            mov rax, qword [0x0400540d] 	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x400540d	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x4005411	        0x4883c701	                              add rdi, 1	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x4005415	      0xe800000000	                          call 0x400541a	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x400541a	            0x85c0	                           test eax, eax	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x400541c	           0xf9fc0	                                 setg al	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x400541f	           0xfb6c0	                           movzx eax, al	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005422	        0x8944240c	              mov dword [rsp + 0xc], eax	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4005426	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      5059	ops.c	FUNCTION_60	FOR_1
0x400542a	          0x4409e8	                            or eax, r13d	      5059	ops.c	FUNCTION_60	FOR_1
0x400542d	             0x9e8	                             or eax, ebp	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x400542f	            0x7507	                           jne 0x4005438	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x4005431	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x4005436	            0x750c	                           jne 0x4005444	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x4005438	            0x85c0	                           test eax, eax	      5059	ops.c	FUNCTION_60	FOR_1
0x400543a	        0x410f95c4	                              setne r12b	      5059	ops.c	FUNCTION_60	FOR_1
0x400543e	        0x450fb6e4	                        movzx r12d, r12b	      5059	ops.c	FUNCTION_60	FOR_1
0x4005442	            0xeb1a	                           jmp 0x400545e	      5059	ops.c	FUNCTION_60	FOR_1
0x4005444	    0x488b05000000	            mov rax, qword [0x0400544b] 	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400544b	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400544f	      0xe8ecabffff	                  call sym.ends_in_white	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x4005454	            0x85c0	                           test eax, eax	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x4005456	        0x410f94c4	                               sete r12b	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400545a	        0x450fb6e4	                        movzx r12d, r12b	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400545e	            0x85ed	                           test ebp, ebp	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x4005460	            0x7414	                            je 0x4005476	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x4005462	          0x4d85ff	                           test r15, r15	      5068	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0x4005465	     0xf88a9030000	                            js 0x4005814	      5068	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0x400546b	    0x41be01000000	                             mov r14d, 1	      5058	ops.c	FUNCTION_60	FOR_1
0x4005471	      0xe968030000	                           jmp 0x40057de	      5058	ops.c	FUNCTION_60	FOR_1
0x4005476	      0x837c241000	               cmp dword [rsp + 0x10], 0	      5077	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400547b	     0xf84cb000000	                            je 0x400554c	      5077	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005481	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005486	     0xf84c0000000	                            je 0x400554c	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400548c	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005491	     0xf84b5000000	                            je 0x400554c	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4005497	    0x488b05000000	            mov rax, qword [0x0400549e] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400549e	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x40054a2	    0x488b05000000	            mov rax, qword [0x040054a9] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x40054a9	          0x483b38	                    cmp rdi, qword [rax]	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x40054ac	     0xf8de3000000	                           jge 0x4005595	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x40054b2	      0x837c244c00	               cmp dword [rsp + 0x4c], 0	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x40054b7	     0xf843c030000	                            je 0x40057f9	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x40054bd	        0x4883c701	                              add rdi, 1	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x40054c1	      0xe800000000	                          call 0x40054c6	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x40054c6	          0x803800	                       cmp byte [rax], 0	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x40054c9	            0x743a	                            je 0x4005505	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x40054cb	      0x837c245000	               cmp dword [rsp + 0x50], 0	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x40054d0	            0x7521	                           jne 0x40054f3	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x40054d2	      0x837c245400	               cmp dword [rsp + 0x54], 0	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x40054d7	            0x751a	                           jne 0x40054f3	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x40054d9	    0x488b05000000	            mov rax, qword [0x040054e0] 	      5090	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11	CALL_13
0x40054e0	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x40054e4	        0x4883c701	                              add rdi, 1	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x40054e8	      0xe800000000	                          call 0x40054ed	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x40054ed	        0x89442424	             mov dword [rsp + 0x24], eax	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x40054f1	            0xeb59	                           jmp 0x400554c	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x40054f3	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5095	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x40054f7	        0x89442424	             mov dword [rsp + 0x24], eax	      5095	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x40054fb	    0xc74424480100	               mov dword [rsp + 0x48], 1	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x4005503	            0xeb47	                           jmp 0x400554c	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x4005505	      0x837c242800	               cmp dword [rsp + 0x28], 0	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x400550a	            0x7440	                            je 0x400554c	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x400550c	      0x837c245000	               cmp dword [rsp + 0x50], 0	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4005511	            0x751d	                           jne 0x4005530	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4005513	      0x837c245400	               cmp dword [rsp + 0x54], 0	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4005518	            0x7516	                           jne 0x4005530	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400551a	    0x488b05000000	            mov rax, qword [0x04005521] 	      5108	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13	CALL_14
0x4005521	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4005525	      0xe800000000	                          call 0x400552a	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400552a	        0x89442424	             mov dword [rsp + 0x24], eax	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400552e	            0xeb1c	                           jmp 0x400554c	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4005530	    0x488b05000000	            mov rax, qword [0x04005537] 	      5115	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6	CALL_15
0x4005537	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5114	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x400553b	      0xe800000000	                          call 0x4005540	      5114	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x4005540	        0x89442424	             mov dword [rsp + 0x24], eax	      5114	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x4005544	    0xc74424480100	               mov dword [rsp + 0x48], 1	      5116	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x400554c	    0x488b05000000	            mov rax, qword [0x04005553] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005553	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005557	    0x488b05000000	            mov rax, qword [0x0400555e] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x400555e	          0x483b38	                    cmp rdi, qword [rax]	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005561	     0xf8da2020000	                           jge 0x4005809	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4005567	      0x4c8b442460	              mov r8, qword [rsp + 0x60]	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400556c	        0x8b4c2454	            mov ecx, dword [rsp + 0x54] 	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x4005570	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x4005575	        0x8b742450	            mov esi, dword [rsp + 0x50] 	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x4005579	      0xe8b8aeffff	                    call sym.same_leader	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400557e	            0x85c0	                           test eax, eax	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x4005580	     0xf8483020000	                            je 0x4005809	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x4005586	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400558a	          0x4409e0	                            or eax, r12d	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400558d	     0xf8401010000	                            je 0x4005694	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005593	            0xeb06	                           jmp 0x400559b	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005595	    0x41bc01000000	                             mov r12d, 1	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x400559b	      0x837c242000	               cmp dword [rsp + 0x20], 0	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0x40055a0	            0x7411	                            je 0x40055b3	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0x40055a2	      0xe800000000	                          call 0x40055a7	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x40055a7	      0xbe01000000	                              mov esi, 1	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x40055ac	            0x89c7	                            mov edi, eax	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x40055ae	      0xe800000000	                          call 0x40055b3	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x40055b3	    0xc70500000000	               mov dword [0x040055bd], 1	      5146	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40055bd	      0xbfffffff7f	                     mov edi, 0x7fffffff	      5147	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_19
0x40055c2	      0xe800000000	                          call 0x40055c7	      5147	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_19
0x40055c7	    0x488b05000000	            mov rax, qword [0x040055ce] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055ce	        0x83784000	               cmp dword [rax + 0x40], 0	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055d2	            0x7514	                           jne 0x40055e8	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055d4	            0xeb22	                           jmp 0x40055f8	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055d6	      0xe800000000	                          call 0x40055db	      5149	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_22
0x40055db	    0x488b05000000	            mov rax, qword [0x040055e2] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055e2	        0x83784000	               cmp dword [rax + 0x40], 0	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055e6	            0x7410	                            je 0x40055f8	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055e8	      0xe800000000	                          call 0x40055ed	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055ed	            0x89c7	                            mov edi, eax	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055ef	      0xe800000000	                          call 0x40055f4	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055f4	            0x85c0	                           test eax, eax	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055f6	            0x75de	                           jne 0x40055d6	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x40055f8	    0xc70500000000	           mov dword [0x04005602], 0x10 	      5152	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005602	    0x448b35000000	           mov r14d, dword [0x04005609] 	      5153	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005609	    0xc70500000000	               mov dword [0x04005613], 0	      5154	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005613	      0x837c241400	               cmp dword [rsp + 0x14], 0	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005618	            0x7416	                            je 0x4005630	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400561a	      0x837c244800	               cmp dword [rsp + 0x48], 0	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400561f	      0xbe10000000	                           mov esi, 0x10	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005624	       0xf44742438	           cmove esi, dword [rsp + 0x38]	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005629	      0xb803000000	                              mov eax, 3	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400562e	            0xeb09	                           jmp 0x4005639	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005630	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005634	      0xb801000000	                              mov eax, 1	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005639	             0x1c6	                            add esi, eax	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x400563b	         0x3742430	             add esi, dword [rsp + 0x30]	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x400563f	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x4005643	      0xbf00000000	                              mov edi, 0	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x4005648	      0xe800000000	                          call 0x400564d	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x400564d	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005651	    0x890500000000	            mov dword [0x04005657], eax 	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005657	    0x448935000000	           mov dword [0x0400565e], r14d 	      5163	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400565e	          0x4585e4	                         test r12d, r12d	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x4005661	            0x7441	                            je 0x40056a4	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x4005663	          0x4d85ff	                           test r15, r15	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x4005666	     0xf88a8010000	                            js 0x4005814	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x400566c	      0x4489642420	            mov dword [rsp + 0x20], r12d	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x4005671	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      5175	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005679	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5173	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x4005681	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	      5164	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4005689	    0x41be01000000	                             mov r14d, 1	      5058	ops.c	FUNCTION_60	FOR_1
0x400568f	      0xe94a010000	                           jmp 0x40057de	      5058	ops.c	FUNCTION_60	FOR_1
0x4005694	          0x4585e4	                         test r12d, r12d	      5182	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005697	     0xf853b010000	                           jne 0x40057d8	      5182	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400569d	      0x448b642420	           mov r12d, dword [rsp + 0x20] 	      5182	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40056a2	            0xeb08	                           jmp 0x40056ac	      5182	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40056a4	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	      5164	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40056ac	    0x488b05000000	            mov rax, qword [0x040056b3] 	      5185	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40056b3	      0x4883403801	               add qword [rax + 0x38], 1	      5185	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40056b8	    0xc74040000000	               mov dword [rax + 0x40], 0	      5186	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40056bf	          0x4d85ff	                           test r15, r15	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x40056c2	            0x790d	                           jns 0x40056d1	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x40056c4	      0xe800000000	                          call 0x40056c9	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x40056c9	            0x85c0	                           test eax, eax	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x40056cb	     0xf8443010000	                            je 0x4005814	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x40056d1	        0x8b7c2454	            mov edi, dword [rsp + 0x54] 	      5190	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x40056d5	            0x85ff	                           test edi, edi	      5190	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x40056d7	            0x7e37	                           jle 0x4005710	      5190	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x40056d9	          0x4863ff	                         movsxd rdi, edi	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x40056dc	      0xba00000000	                              mov edx, 0	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x40056e1	      0xbe00000000	                              mov esi, 0	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x40056e6	      0xe800000000	                          call 0x40056eb	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x40056eb	        0x8b4c2454	            mov ecx, dword [rsp + 0x54] 	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x40056ef	            0xf7d9	                                 neg ecx	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x40056f1	          0x4863c9	                         movsxd rcx, ecx	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x40056f4	    0x488b05000000	            mov rax, qword [0x040056fb] 	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x40056fb	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x40056ff	      0xba00000000	                              mov edx, 0	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x4005704	      0xbe00000000	                              mov esi, 0	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x4005709	      0xe800000000	                          call 0x400570e	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x400570e	            0xeb45	                           jmp 0x4005755	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x4005710	      0x837c242400	               cmp dword [rsp + 0x24], 0	      5197	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0x4005715	            0x7e3e	                           jle 0x4005755	      5197	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0x4005717	      0xe800000000	                          call 0x400571c	      5199	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	CALL_27
0x400571c	          0x4189c6	                           mov r14d, eax	      5199	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	CALL_27
0x400571f	            0x85c0	                           test eax, eax	      5201	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0x4005721	            0x7e32	                           jle 0x4005755	      5201	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0x4005723	          0x4863f8	                         movsxd rdi, eax	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x4005726	      0xba00000000	                              mov edx, 0	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x400572b	      0xbe00000000	                              mov esi, 0	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x4005730	      0xe800000000	                          call 0x4005735	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x4005735	          0x41f7de	                                neg r14d	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005738	          0x4963ce	                        movsxd rcx, r14d	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400573b	    0x488b05000000	            mov rax, qword [0x04005742] 	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005742	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005746	      0xba00000000	                              mov edx, 0	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400574b	      0xbe00000000	                              mov esi, 0	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005750	      0xe800000000	                          call 0x4005755	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4005755	    0x488b05000000	            mov rax, qword [0x0400575c] 	      5208	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400575c	      0x4883683801	               sub qword [rax + 0x38], 1	      5208	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4005761	    0x41b800000000	                              mov r8d, 0	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005767	      0xb900000000	                              mov ecx, 0	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x400576c	      0xba00000000	                              mov edx, 0	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005771	      0xbe01000000	                              mov esi, 1	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005776	      0xbf02000000	                              mov edi, 2	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x400577b	      0xe800000000	                          call 0x4005780	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005780	            0x85c0	                           test eax, eax	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005782	            0x750a	                           jne 0x400578e	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x4005784	      0xe800000000	                          call 0x4005789	      5211	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_31
0x4005789	      0xe986000000	                           jmp 0x4005814	      5212	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24
0x400578e	      0xe800000000	                          call 0x4005793	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x4005793	          0x4889c7	                            mov rdi, rax	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x4005796	      0xb800000000	                              mov eax, 0	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x400579b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40057a2	            0xf2ae	              repne scasb al, byte [rdi]	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40057a4	          0x4889c8	                            mov rax, rcx	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40057a7	          0x48f7d0	                                 not rax	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40057aa	        0x4883e801	                              sub rax, 1	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40057ae	      0x483b442440	            cmp rax, qword [rsp + 0x40] 	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40057b3	           0xf97c0	                                 seta al	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40057b6	           0xfb6c0	                           movzx eax, al	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40057b9	        0x8944242c	             mov dword [rsp + 0x2c], eax	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40057bd	      0x4489642420	            mov dword [rsp + 0x20], r12d	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40057c2	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5214	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40057ca	    0x41be00000000	                             mov r14d, 0	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40057d0	    0x41bc00000000	                             mov r12d, 0	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40057d6	            0xeb06	                           jmp 0x40057de	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40057d8	    0x41be01000000	                             mov r14d, 1	      5058	ops.c	FUNCTION_60	FOR_1
0x40057de	      0xe800000000	                          call 0x40057e3	      5222	ops.c	FUNCTION_60	FOR_1	CALL_34
0x40057e3	        0x4883eb01	                              sub rbx, 1	      5020	ops.c	FUNCTION_60	FOR_1
0x40057e7	            0x742b	                            je 0x4005814	      5020	ops.c	FUNCTION_60	FOR_1
0x40057e9	    0x8b0500000000	            mov eax, dword [0x040057ef] 	      5020	ops.c	FUNCTION_60	FOR_1
0x40057ef	            0x85c0	                           test eax, eax	      5020	ops.c	FUNCTION_60	FOR_1
0x40057f1	     0xf848dfbffff	                            je 0x4005384	      5020	ops.c	FUNCTION_60	FOR_1
0x40057f7	            0xeb1b	                           jmp 0x4005814	      5020	ops.c	FUNCTION_60	FOR_1
0x40057f9	      0x837c242800	               cmp dword [rsp + 0x28], 0	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x40057fe	     0xf8508fdffff	                           jne 0x400550c	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x4005804	      0xe95efdffff	                           jmp 0x4005567	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x4005809	    0x41bc01000000	                             mov r12d, 1	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x400580f	      0xe987fdffff	                           jmp 0x400559b	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x4005814	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      5224	ops.c	FUNCTION_60
0x4005819	    0x644833042528	                xor rax, qword fs:[0x28]	      5224	ops.c	FUNCTION_60
0x4005822	            0x7405	                            je 0x4005829	      5224	ops.c	FUNCTION_60
0x4005824	      0xe800000000	                          call 0x4005829	      5224	ops.c	FUNCTION_60
0x4005829	        0x4883c478	                           add rsp, 0x78	      5224	ops.c	FUNCTION_60
0x400582d	              0x5b	                                 pop rbx	      5224	ops.c	FUNCTION_60
0x400582e	              0x5d	                                 pop rbp	      5224	ops.c	FUNCTION_60
0x400582f	            0x415c	                                 pop r12	      5224	ops.c	FUNCTION_60
0x4005831	            0x415d	                                 pop r13	      5224	ops.c	FUNCTION_60
0x4005833	            0x415e	                                 pop r14	      5224	ops.c	FUNCTION_60
0x4005835	            0x415f	                                 pop r15	      5224	ops.c	FUNCTION_60
0x4005837	              0xc3	                                     ret	      5224	ops.c	FUNCTION_60
op_addsub	CALL,23:ELSE,4:WHILE,0:FOR,1:functions,0:IF,19:SWITCH,0:DO,0	221
0x4005b19	            0x4157	                                push r15	      5512	ops.c	FUNCTION_66
0x4005b1b	            0x4156	                                push r14	      5512	ops.c	FUNCTION_66
0x4005b1d	            0x4155	                                push r13	      5512	ops.c	FUNCTION_66
0x4005b1f	            0x4154	                                push r12	      5512	ops.c	FUNCTION_66
0x4005b21	              0x55	                                push rbp	      5512	ops.c	FUNCTION_66
0x4005b22	              0x53	                                push rbx	      5512	ops.c	FUNCTION_66
0x4005b23	    0x4881ec880000	                           sub rsp, 0x88	      5512	ops.c	FUNCTION_66
0x4005b2a	          0x4889fb	                            mov rbx, rdi	      5512	ops.c	FUNCTION_66
0x4005b2d	          0x4989f6	                            mov r14, rsi	      5512	ops.c	FUNCTION_66
0x4005b30	    0x64488b042528	                mov rax, qword fs:[0x28]	      5512	ops.c	FUNCTION_66
0x4005b39	      0x4889442478	             mov qword [rsp + 0x78], rax	      5512	ops.c	FUNCTION_66
0x4005b3e	            0x31c0	                            xor eax, eax	      5512	ops.c	FUNCTION_66
0x4005b40	    0x833d00000000	               cmp dword [0x04005b47], 0	      5518	ops.c	FUNCTION_66	IF_1
0x4005b47	            0x755f	                           jne 0x4005ba8	      5518	ops.c	FUNCTION_66	IF_1
0x4005b49	    0x488b05000000	            mov rax, qword [0x04005b50] 	      5520	ops.c	FUNCTION_66	IF_1
0x4005b50	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5520	ops.c	FUNCTION_66	IF_1
0x4005b54	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5520	ops.c	FUNCTION_66	IF_1
0x4005b58	      0x4889442420	             mov qword [rsp + 0x20], rax	      5520	ops.c	FUNCTION_66	IF_1
0x4005b5d	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5520	ops.c	FUNCTION_66	IF_1
0x4005b62	      0xe800000000	                          call 0x4005b67	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4005b67	            0x85c0	                           test eax, eax	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4005b69	     0xf840c030000	                            je 0x4005e7b	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4005b6f	          0x4c89f1	                            mov rcx, r14	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x4005b72	      0xba00000000	                              mov edx, 0	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x4005b77	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x4005b7c	            0x8b3b	                    mov edi, dword [rbx]	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x4005b7e	      0xe871b5ffff	                      call sym.do_addsub	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x4005b83	            0x85c0	                           test eax, eax	      5524	ops.c	FUNCTION_66	IF_1	IF_3
0x4005b85	     0xf84f0020000	                            je 0x4005e7b	      5524	ops.c	FUNCTION_66	IF_1	IF_3
0x4005b8b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4005b90	        0x488d5701	                      lea rdx, [rdi + 1]	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4005b94	      0xb900000000	                              mov ecx, 0	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4005b99	      0xbe00000000	                              mov esi, 0	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4005b9e	      0xe800000000	                          call 0x4005ba3	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4005ba3	      0xe9d3020000	                           jmp 0x4005e7b	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4005ba8	          0x4189d7	                           mov r15d, edx	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4005bab	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4005baf	        0x488d7001	                      lea rsi, [rax + 1]	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4005bb3	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4005bb7	        0x488d78ff	                      lea rdi, [rax - 1]	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4005bbb	      0xe800000000	                          call 0x4005bc0	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4005bc0	            0x85c0	                           test eax, eax	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4005bc2	     0xf84b3020000	                            je 0x4005e7b	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4005bc8	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      5537	ops.c	FUNCTION_66	ELSE_1
0x4005bcc	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      5537	ops.c	FUNCTION_66	ELSE_1
0x4005bd0	          0x4889c2	                            mov rdx, rax	      5537	ops.c	FUNCTION_66	ELSE_1
0x4005bd3	      0x4889442420	             mov qword [rsp + 0x20], rax	      5537	ops.c	FUNCTION_66	ELSE_1
0x4005bd8	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      5537	ops.c	FUNCTION_66	ELSE_1
0x4005bdd	        0x483b4330	            cmp rax, qword [rbx + 0x30] 	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4005be1	     0xf8ff6010000	                            jg 0x4005ddd	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4005be7	          0x4d89f4	                            mov r12, r14	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4005bea	    0x41bd00000000	                             mov r13d, 0	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4005bf0	        0x488d4330	                   lea rax, [rbx + 0x30]	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4005bf4	      0x4889442418	             mov qword [rsp + 0x18], rax	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4005bf9	        0x837b6000	               cmp dword [rbx + 0x60], 0	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4005bfd	            0x7423	                            je 0x4005c22	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4005bff	      0xb900000000	                              mov ecx, 0	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x4005c04	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x4005c09	          0x4889df	                            mov rdi, rbx	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x4005c0c	      0xe86fa4ffff	                     call sym.block_prep	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x4005c11	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4005c15	        0x89442428	             mov dword [rsp + 0x28], eax	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4005c19	        0x8b6c2438	            mov ebp, dword [rsp + 0x38] 	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4005c1d	      0xe9d1000000	                           jmp 0x4005cf3	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4005c22	        0x837b0801	                  cmp dword [rbx + 8], 1	      5546	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4005c26	            0x753d	                           jne 0x4005c65	      5546	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4005c28	    0x488b05000000	            mov rax, qword [0x04005c2f] 	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4005c2f	    0xc74040000000	               mov dword [rax + 0x40], 0	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4005c36	    0xc74424280000	               mov dword [rsp + 0x28], 0	      5549	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4005c3e	          0x4889d7	                            mov rdi, rdx	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4005c41	      0xe800000000	                          call 0x4005c46	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4005c46	          0x4889c7	                            mov rdi, rax	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4005c49	      0xb800000000	                              mov eax, 0	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4005c4e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4005c55	            0xf2ae	              repne scasb al, byte [rdi]	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4005c57	          0x4889c8	                            mov rax, rcx	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4005c5a	          0x48f7d0	                                 not rax	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4005c5d	          0x8d68ff	                      lea ebp, [rax - 1]	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4005c60	      0xe98e000000	                           jmp 0x4005cf3	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4005c65	        0x48395320	            cmp qword [rbx + 0x20], rdx 	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x4005c69	            0x7510	                           jne 0x4005c7b	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x4005c6b	        0x837b1400	               cmp dword [rbx + 0x14], 0	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x4005c6f	            0x750a	                           jne 0x4005c7b	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x4005c71	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4005c76	      0xe800000000	                          call 0x4005c7b	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4005c7b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4005c80	      0xe800000000	                          call 0x4005c85	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4005c85	          0x4889c7	                            mov rdi, rax	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4005c88	      0xb800000000	                              mov eax, 0	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4005c8d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4005c94	            0xf2ae	              repne scasb al, byte [rdi]	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4005c96	          0x48f7d1	                                 not rcx	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4005c99	        0x4883e901	                              sub rcx, 1	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4005c9d	            0x89cd	                            mov ebp, ecx	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4005c9f	    0xc74424280000	               mov dword [rsp + 0x28], 0	      5557	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3
0x4005ca7	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4005cac	        0x483b7b20	            cmp rdi, qword [rbx + 0x20] 	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4005cb0	            0x7509	                           jne 0x4005cbb	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4005cb2	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      5560	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4005cb5	        0x89442428	             mov dword [rsp + 0x28], eax	      5560	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4005cb9	            0x29c5	                            sub ebp, eax	      5561	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4005cbb	        0x483b7b30	            cmp rdi, qword [rbx + 0x30] 	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4005cbf	            0x7532	                           jne 0x4005cf3	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4005cc1	      0xe800000000	                          call 0x4005cc6	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4005cc6	          0x4889c7	                            mov rdi, rax	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4005cc9	      0xb800000000	                              mov eax, 0	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4005cce	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4005cd5	            0xf2ae	              repne scasb al, byte [rdi]	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4005cd7	          0x48f7d1	                                 not rcx	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4005cda	        0x4883e901	                              sub rcx, 1	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4005cde	          0x3b4b38	            cmp ecx, dword [rbx + 0x38] 	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4005ce1	            0x7f06	                            jg 0x4005ce9	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4005ce3	          0x83e901	                              sub ecx, 1	      5567	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4005ce6	          0x894b38	             mov dword [rbx + 0x38], ecx	      5567	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4005ce9	          0x8b6b38	            mov ebp, dword [rbx + 0x38] 	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4005cec	        0x2b6c2428	             sub ebp, dword [rsp + 0x28]	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4005cf0	          0x83c501	                              add ebp, 1	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4005cf3	          0x4c89e1	                            mov rcx, r12	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x4005cf6	            0x89ea	                            mov edx, ebp	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x4005cf8	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x4005cfd	            0x8b3b	                    mov edi, dword [rbx]	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x4005cff	      0xe8f0b3ffff	                      call sym.do_addsub	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x4005d04	            0x85c0	                           test eax, eax	      5572	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x4005d06	     0xf8465010000	                            je 0x4005e71	      5572	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x4005d0c	          0x4585ed	                         test r13d, r13d	      5575	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4005d0f	            0x7526	                           jne 0x4005d37	      5575	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4005d11	    0x488b05000000	            mov rax, qword [0x04005d18] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4005d18	    0x488bb0e01100	          mov rsi, qword [rax + 0x11e0] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4005d1f	        0x48893424	                    mov qword [rsp], rsi	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4005d23	    0x8bb0e8110000	          mov esi, dword [rax + 0x11e8] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4005d29	        0x89742408	                mov dword [rsp + 8], esi	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4005d2d	    0x8b80ec110000	          mov eax, dword [rax + 0x11ec] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4005d33	        0x8944240c	              mov dword [rsp + 0xc], eax	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4005d37	        0x4183c501	                             add r13d, 1	      5577	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x4005d3b	      0xe800000000	                          call 0x4005d40	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x4005d40	            0x85c0	                           test eax, eax	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x4005d42	            0x7453	                            je 0x4005d97	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x4005d44	      0xba00000000	                              mov edx, 0	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x4005d49	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x4005d4e	    0x488b3d000000	            mov rdi, qword [0x04005d55] 	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x4005d55	      0xe800000000	                          call 0x4005d5a	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x4005d5a	      0x4889442410	             mov qword [rsp + 0x10], rax	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x4005d5f	          0x4863cd	                         movsxd rcx, ebp	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4005d62	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4005d66	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4005d6b	    0x488b3d000000	            mov rdi, qword [0x04005d72] 	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4005d72	      0xe800000000	                          call 0x4005d77	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4005d77	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      5587	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13
0x4005d7b	          0x4863ca	                         movsxd rcx, edx	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4005d7e	      0x48034c2410	             add rcx, qword [rsp + 0x10]	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4005d83	          0x4189e8	                            mov r8d, ebp	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4005d86	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4005d8b	    0x488b3d000000	            mov rdi, qword [0x04005d92] 	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4005d92	      0xe800000000	                          call 0x4005d97	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4005d97	          0x4585ff	                         test r15d, r15d	      5590	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x4005d9a	            0x7403	                            je 0x4005d9f	      5590	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x4005d9c	          0x4d01f4	                            add r12, r14	      5591	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x4005d9f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4005da4	        0x488d5001	                      lea rdx, [rax + 1]	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4005da8	      0x4889542420	             mov qword [rsp + 0x20], rdx	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4005dad	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4005db1	          0x4839d0	                            cmp rax, rdx	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4005db4	     0xf8d3ffeffff	                           jge 0x4005bf9	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4005dba	          0x4585ed	                         test r13d, r13d	      5593	ops.c	FUNCTION_66	ELSE_1	IF_15
0x4005dbd	            0x7424	                            je 0x4005de3	      5593	ops.c	FUNCTION_66	ELSE_1	IF_15
0x4005dbf	        0x488d5001	                      lea rdx, [rax + 1]	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4005dc3	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4005dc7	      0xb900000000	                              mov ecx, 0	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4005dcc	      0xbe00000000	                              mov esi, 0	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4005dd1	      0xe800000000	                          call 0x4005dd6	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4005dd6	          0x4585ed	                         test r13d, r13d	      5602	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4005dd9	            0x7f1a	                            jg 0x4005df5	      5602	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4005ddb	            0xeb3e	                           jmp 0x4005e1b	      5602	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4005ddd	    0x41bd00000000	                             mov r13d, 0	      5515	ops.c	FUNCTION_66
0x4005de3	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x4005de7	            0x7432	                            je 0x4005e1b	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x4005de9	      0xbf14000000	                           mov edi, 0x14	      5598	ops.c	FUNCTION_66	ELSE_1	CALL_19
0x4005dee	      0xe800000000	                          call 0x4005df3	      5598	ops.c	FUNCTION_66	ELSE_1	CALL_19
0x4005df3	            0xeb26	                           jmp 0x4005e1b	      5598	ops.c	FUNCTION_66	ELSE_1	CALL_19
0x4005df5	    0x488b05000000	            mov rax, qword [0x04005dfc] 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4005dfc	        0x488b3424	                    mov rsi, qword [rsp]	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4005e00	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4005e07	        0x8b742408	                mov esi, dword [rsp + 8]	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4005e0b	    0x89b0e8110000	          mov dword [rax + 0x11e8], esi 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4005e11	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4005e15	    0x89b0ec110000	          mov dword [rax + 0x11ec], esi 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4005e1b	          0x4963c5	                        movsxd rax, r13d	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4005e1e	    0x483b05000000	            cmp rax, qword [0x04005e25] 	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4005e25	            0x7e54	                           jle 0x4005e7b	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4005e27	        0x4183fd01	                             cmp r13d, 1	      5607	ops.c	FUNCTION_66	ELSE_1	IF_18	IF_19
0x4005e2b	            0x751e	                           jne 0x4005e4b	      5607	ops.c	FUNCTION_66	ELSE_1	IF_18	IF_19
0x4005e2d	      0xba05000000	                              mov edx, 5	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4005e32	      0xbe00000000	                              mov esi, 0	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4005e37	      0xbf00000000	                              mov edi, 0	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4005e3c	      0xe800000000	                          call 0x4005e41	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4005e41	          0x4889c7	                            mov rdi, rax	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4005e44	      0xe800000000	                          call 0x4005e49	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4005e49	            0xeb30	                           jmp 0x4005e7b	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4005e4b	      0xba05000000	                              mov edx, 5	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4005e50	      0xbe00000000	                              mov esi, 0	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4005e55	      0xbf00000000	                              mov edi, 0	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4005e5a	      0xe800000000	                          call 0x4005e5f	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4005e5f	          0x4489ee	                           mov esi, r13d	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4005e62	          0x4889c7	                            mov rdi, rax	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4005e65	      0xb800000000	                              mov eax, 0	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4005e6a	      0xe800000000	                          call 0x4005e6f	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4005e6f	            0xeb0a	                           jmp 0x4005e7b	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4005e71	      0xe800000000	                          call 0x4005e76	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x4005e76	      0xe924ffffff	                           jmp 0x4005d9f	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x4005e7b	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5613	ops.c	FUNCTION_66
0x4005e80	    0x644833042528	                xor rax, qword fs:[0x28]	      5613	ops.c	FUNCTION_66
0x4005e89	            0x7405	                            je 0x4005e90	      5613	ops.c	FUNCTION_66
0x4005e8b	      0xe800000000	                          call 0x4005e90	      5613	ops.c	FUNCTION_66
0x4005e90	    0x4881c4880000	                           add rsp, 0x88	      5613	ops.c	FUNCTION_66
0x4005e97	              0x5b	                                 pop rbx	      5613	ops.c	FUNCTION_66
0x4005e98	              0x5d	                                 pop rbp	      5613	ops.c	FUNCTION_66
0x4005e99	            0x415c	                                 pop r12	      5613	ops.c	FUNCTION_66
0x4005e9b	            0x415d	                                 pop r13	      5613	ops.c	FUNCTION_66
0x4005e9d	            0x415e	                                 pop r14	      5613	ops.c	FUNCTION_66
0x4005e9f	            0x415f	                                 pop r15	      5613	ops.c	FUNCTION_66
0x4005ea1	              0xc3	                                     ret	      5613	ops.c	FUNCTION_66
dnd_yank_drag_data	CALL,2:ELSE,0:WHILE,0:FOR,0:functions,0:IF,0:SWITCH,0:DO,0	20
0x4006d46	            0x4154	                                push r12	      6742	ops.c	FUNCTION_79
0x4006d48	              0x55	                                push rbp	      6742	ops.c	FUNCTION_79
0x4006d49	              0x53	                                push rbx	      6742	ops.c	FUNCTION_79
0x4006d4a	          0x4889fd	                            mov rbp, rdi	      6742	ops.c	FUNCTION_79
0x4006d4d	          0x4989f4	                            mov r12, rsi	      6742	ops.c	FUNCTION_79
0x4006d50	    0x488b1d000000	            mov rbx, qword [0x04006d57] 	      6745	ops.c	FUNCTION_79
0x4006d57	    0x48c705000000	               mov qword [0x04006d62], 0	      6746	ops.c	FUNCTION_79
0x4006d62	      0xe8b696ffff	                  call sym.free_yank_all	      6747	ops.c	FUNCTION_79	CALL_1
0x4006d67	    0x41b900000000	                              mov r9d, 0	      6748	ops.c	FUNCTION_79	CALL_2
0x4006d6d	    0x41b800000000	                              mov r8d, 0	      6748	ops.c	FUNCTION_79	CALL_2
0x4006d73	          0x4c89e1	                            mov rcx, r12	      6748	ops.c	FUNCTION_79	CALL_2
0x4006d76	          0x4889ea	                            mov rdx, rbp	      6748	ops.c	FUNCTION_79	CALL_2
0x4006d79	      0xbe00000000	                              mov esi, 0	      6748	ops.c	FUNCTION_79	CALL_2
0x4006d7e	    0x488b3d000000	            mov rdi, qword [0x04006d85] 	      6748	ops.c	FUNCTION_79	CALL_2
0x4006d85	      0xe8949cffff	                     call sym.str_to_reg	      6748	ops.c	FUNCTION_79	CALL_2
0x4006d8a	    0x48891d000000	            mov qword [0x04006d91], rbx 	      6749	ops.c	FUNCTION_79
0x4006d91	              0x5b	                                 pop rbx	      6750	ops.c	FUNCTION_79
0x4006d92	              0x5d	                                 pop rbp	      6750	ops.c	FUNCTION_79
0x4006d93	            0x415c	                                 pop r12	      6750	ops.c	FUNCTION_79
0x4006d95	              0xc3	                                     ret	      6750	ops.c	FUNCTION_79
put_reedit_in_typebuf	CALL,1:ELSE,1:WHILE,0:FOR,0:functions,0:IF,3:SWITCH,0:DO,0	33
0x4000722	        0x4883ec18	                           sub rsp, 0x18	      1332	ops.c	FUNCTION_24
0x4000726	    0x64488b042528	                mov rax, qword fs:[0x28]	      1332	ops.c	FUNCTION_24
0x400072f	      0x4889442408	                mov qword [rsp + 8], rax	      1332	ops.c	FUNCTION_24
0x4000734	            0x31c0	                            xor eax, eax	      1332	ops.c	FUNCTION_24
0x4000736	    0x8b0500000000	            mov eax, dword [0x0400073c] 	      1335	ops.c	FUNCTION_24	IF_1
0x400073c	            0x85c0	                           test eax, eax	      1335	ops.c	FUNCTION_24	IF_1
0x400073e	            0x7451	                            je 0x4000791	      1335	ops.c	FUNCTION_24	IF_1
0x4000740	          0x83f856	                           cmp eax, 0x56	      1337	ops.c	FUNCTION_24	IF_1	IF_2
0x4000743	            0x7510	                           jne 0x4000755	      1337	ops.c	FUNCTION_24	IF_1	IF_2
0x4000745	        0xc6042467	                    mov byte [rsp], 0x67	      1339	ops.c	FUNCTION_24	IF_1	IF_2
0x4000749	      0xc644240152	                mov byte [rsp + 1], 0x52	      1340	ops.c	FUNCTION_24	IF_1	IF_2
0x400074e	      0xc644240200	                   mov byte [rsp + 2], 0	      1341	ops.c	FUNCTION_24	IF_1	IF_2
0x4000753	            0xeb13	                           jmp 0x4000768	      1341	ops.c	FUNCTION_24	IF_1	IF_2
0x4000755	          0x83f849	                           cmp eax, 0x49	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4000758	      0xba69000000	                           mov edx, 0x69	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x400075d	           0xf44c2	                          cmove eax, edx	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4000760	          0x880424	                      mov byte [rsp], al	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4000763	      0xc644240100	                   mov byte [rsp + 1], 0	      1346	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4000768	          0x4189f8	                            mov r8d, edi	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x400076b	      0xb901000000	                              mov ecx, 1	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4000770	      0xba00000000	                              mov edx, 0	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4000775	      0xbeffffffff	                     mov esi, 0xffffffff	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x400077a	          0x4889e7	                            mov rdi, rsp	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x400077d	      0xe800000000	                          call 0x4000782	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4000782	          0x83f801	                              cmp eax, 1	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4000785	            0x750a	                           jne 0x4000791	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4000787	    0xc70500000000	               mov dword [0x04000791], 0	      1349	ops.c	FUNCTION_24	IF_1	IF_3
0x4000791	      0x488b442408	                mov rax, qword [rsp + 8]	      1351	ops.c	FUNCTION_24
0x4000796	    0x644833042528	                xor rax, qword fs:[0x28]	      1351	ops.c	FUNCTION_24
0x400079f	            0x7405	                            je 0x40007a6	      1351	ops.c	FUNCTION_24
0x40007a1	      0xe800000000	                          call 0x40007a6	      1351	ops.c	FUNCTION_24
0x40007a6	        0x4883c418	                           add rsp, 0x18	      1351	ops.c	FUNCTION_24
0x40007aa	              0xc3	                                     ret	      1351	ops.c	FUNCTION_24
fmt_check_par	CALL,3:ELSE,0:WHILE,0:FOR,0:functions,0:IF,0:SWITCH,0:DO,0	73
0x4001017	            0x4156	                                push r14	      5258	ops.c	FUNCTION_62
0x4001019	            0x4155	                                push r13	      5258	ops.c	FUNCTION_62
0x400101b	            0x4154	                                push r12	      5258	ops.c	FUNCTION_62
0x400101d	              0x55	                                push rbp	      5258	ops.c	FUNCTION_62
0x400101e	              0x53	                                push rbx	      5258	ops.c	FUNCTION_62
0x400101f	          0x4989fc	                            mov r12, rdi	      5258	ops.c	FUNCTION_62
0x4001022	          0x4889f5	                            mov rbp, rsi	      5258	ops.c	FUNCTION_62
0x4001025	          0x4889d3	                            mov rbx, rdx	      5258	ops.c	FUNCTION_62
0x4001028	          0x4189ce	                           mov r14d, ecx	      5258	ops.c	FUNCTION_62
0x400102b	      0xe800000000	                          call 0x4001030	      5262	ops.c	FUNCTION_62	CALL_1
0x4001030	          0x4989c5	                            mov r13, rax	      5262	ops.c	FUNCTION_62	CALL_1
0x4001033	          0x4585f6	                         test r14d, r14d	      5263	ops.c	FUNCTION_62	IF_1
0x4001036	            0x7423	                            je 0x400105b	      5263	ops.c	FUNCTION_62	IF_1
0x4001038	      0xb901000000	                              mov ecx, 1	      5264	ops.c	FUNCTION_62	CALL_2
0x400103d	      0xba00000000	                              mov edx, 0	      5264	ops.c	FUNCTION_62	CALL_2
0x4001042	          0x4889de	                            mov rsi, rbx	      5264	ops.c	FUNCTION_62	CALL_2
0x4001045	          0x4889c7	                            mov rdi, rax	      5264	ops.c	FUNCTION_62	CALL_2
0x4001048	      0xe800000000	                          call 0x400104d	      5264	ops.c	FUNCTION_62	CALL_2
0x400104d	          0x894500	                    mov dword [rbp], eax	      5264	ops.c	FUNCTION_62	CALL_2
0x4001050	            0x85c0	                           test eax, eax	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4001052	            0x7f1a	                            jg 0x400106e	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4001054	      0xbb00000000	                              mov ebx, 0	      5259	ops.c	FUNCTION_62
0x4001059	            0xeb4c	                           jmp 0x40010a7	      5259	ops.c	FUNCTION_62
0x400105b	    0xc74500000000	                      mov dword [rbp], 0	      5266	ops.c	FUNCTION_62	ELSE_1
0x4001062	      0xb800000000	                              mov eax, 0	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4001067	      0xbb00000000	                              mov ebx, 0	      5259	ops.c	FUNCTION_62
0x400106c	            0xeb39	                           jmp 0x40010a7	      5259	ops.c	FUNCTION_62
0x400106e	          0x488b1b	                    mov rbx, qword [rbx]	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4001071	           0xfb613	                   movzx edx, byte [rbx]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4001074	            0x84d2	                             test dl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4001076	        0x400f95c6	                               setne sil	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400107a	          0x80fa3a	                            cmp dl, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400107d	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4001080	          0x4084ce	                            test sil, cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4001083	            0x7422	                            je 0x40010a7	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4001085	          0x80fa65	                            cmp dl, 0x65	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4001088	            0x741d	                            je 0x40010a7	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400108a	        0x4883c301	                              add rbx, 1	      5275	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400108e	           0xfb613	                   movzx edx, byte [rbx]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4001091	            0x84d2	                             test dl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4001093	        0x400f95c6	                               setne sil	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4001097	          0x80fa3a	                            cmp dl, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400109a	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400109d	          0x4084ce	                            test sil, cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40010a0	            0x7405	                            je 0x40010a7	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40010a2	          0x80fa65	                            cmp dl, 0x65	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40010a5	            0x75e3	                           jne 0x400108a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40010a7	            0x4898	                                    cdqe	      5278	ops.c	FUNCTION_62	CALL_3
0x40010a9	      0x498d7c0500	                    lea rdi, [r13 + rax]	      5278	ops.c	FUNCTION_62	CALL_3
0x40010ae	      0xe800000000	                          call 0x40010b3	      5278	ops.c	FUNCTION_62	CALL_3
0x40010b3	      0xba01000000	                              mov edx, 1	      5280	ops.c	FUNCTION_62	CALL_4
0x40010b8	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x40010bb	            0x742c	                            je 0x40010e9	      5280	ops.c	FUNCTION_62	CALL_4
0x40010bd	        0x837d0000	                      cmp dword [rbp], 0	      5279	ops.c	FUNCTION_62
0x40010c1	            0x7e05	                           jle 0x40010c8	      5279	ops.c	FUNCTION_62
0x40010c3	          0x803b65	                    cmp byte [rbx], 0x65	      5279	ops.c	FUNCTION_62
0x40010c6	            0x741c	                            je 0x40010e4	      5279	ops.c	FUNCTION_62
0x40010c8	      0xba00000000	                              mov edx, 0	      5280	ops.c	FUNCTION_62	CALL_4
0x40010cd	      0xbe00000000	                              mov esi, 0	      5280	ops.c	FUNCTION_62	CALL_4
0x40010d2	          0x4c89e7	                            mov rdi, r12	      5280	ops.c	FUNCTION_62	CALL_4
0x40010d5	      0xe800000000	                          call 0x40010da	      5280	ops.c	FUNCTION_62	CALL_4
0x40010da	            0x85c0	                           test eax, eax	      5280	ops.c	FUNCTION_62	CALL_4
0x40010dc	           0xf95c2	                                setne dl	      5280	ops.c	FUNCTION_62	CALL_4
0x40010df	           0xfb6d2	                           movzx edx, dl	      5280	ops.c	FUNCTION_62	CALL_4
0x40010e2	            0xeb05	                           jmp 0x40010e9	      5280	ops.c	FUNCTION_62	CALL_4
0x40010e4	      0xba01000000	                              mov edx, 1	      5280	ops.c	FUNCTION_62	CALL_4
0x40010e9	            0x89d0	                            mov eax, edx	      5281	ops.c	FUNCTION_62
0x40010eb	              0x5b	                                 pop rbx	      5281	ops.c	FUNCTION_62
0x40010ec	              0x5d	                                 pop rbp	      5281	ops.c	FUNCTION_62
0x40010ed	            0x415c	                                 pop r12	      5281	ops.c	FUNCTION_62
0x40010ef	            0x415d	                                 pop r13	      5281	ops.c	FUNCTION_62
0x40010f1	            0x415e	                                 pop r14	      5281	ops.c	FUNCTION_62
0x40010f3	              0xc3	                                     ret	      5281	ops.c	FUNCTION_62
yank_copy_line	CALL,4:ELSE,0:WHILE,0:FOR,0:functions,0:IF,1:SWITCH,0:DO,0	40
0x4000640	            0x4154	                                push r12	      3403	ops.c	FUNCTION_46
0x4000642	              0x55	                                push rbp	      3403	ops.c	FUNCTION_46
0x4000643	              0x53	                                push rbx	      3403	ops.c	FUNCTION_46
0x4000644	          0x4889fb	                            mov rbx, rdi	      3403	ops.c	FUNCTION_46
0x4000647	          0x4889f5	                            mov rbp, rsi	      3403	ops.c	FUNCTION_46
0x400064a	          0x8b7f04	                mov edi, dword [rdi + 4]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400064d	             0x33b	                    add edi, dword [rbx]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400064f	           0x37b08	                add edi, dword [rbx + 8]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4000652	          0x83c701	                              add edi, 1	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4000655	      0xe800000000	                          call 0x400065a	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400065a	          0x4989c4	                            mov r12, rax	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400065d	      0xb800000000	                              mov eax, 0	      3408	ops.c	FUNCTION_46	IF_1
0x4000662	          0x4d85e4	                           test r12, r12	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4000665	            0x745a	                            je 0x40006c1	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4000667	    0x488b05000000	            mov rax, qword [0x0400066e] 	      3409	ops.c	FUNCTION_46
0x400066e	          0x488b00	                    mov rax, qword [rax]	      3409	ops.c	FUNCTION_46
0x4000671	        0x4c8924e8	            mov qword [rax + rbp*8], r12	      3409	ops.c	FUNCTION_46
0x4000675	          0x486313	                 movsxd rdx, dword [rbx]	        90	string3.h	FUNCTION_95	CALL_6
0x4000678	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400067d	          0x4c89e7	                            mov rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x4000680	      0xe800000000	                          call 0x4000685	        90	string3.h	FUNCTION_95	CALL_6
0x4000685	          0x486303	                 movsxd rax, dword [rbx]	      3411	ops.c	FUNCTION_46
0x4000688	          0x4901c4	                            add r12, rax	      3411	ops.c	FUNCTION_46
0x400068b	        0x48635308	            movsxd rdx, dword [rbx + 8] 	        59	string3.h	FUNCTION_93	CALL_3
0x400068f	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	        59	string3.h	FUNCTION_93	CALL_3
0x4000693	          0x4c89e7	                            mov rdi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x4000696	      0xe800000000	                          call 0x400069b	        59	string3.h	FUNCTION_93	CALL_3
0x400069b	        0x48634308	            movsxd rax, dword [rbx + 8] 	      3413	ops.c	FUNCTION_46
0x400069f	          0x4901c4	                            add r12, rax	      3413	ops.c	FUNCTION_46
0x40006a2	        0x48635304	            movsxd rdx, dword [rbx + 4] 	        90	string3.h	FUNCTION_95	CALL_6
0x40006a6	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x40006ab	          0x4c89e7	                            mov rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x40006ae	      0xe800000000	                          call 0x40006b3	        90	string3.h	FUNCTION_95	CALL_6
0x40006b3	        0x48634304	            movsxd rax, dword [rbx + 4] 	      3416	ops.c	FUNCTION_46
0x40006b7	      0x41c6040400	                 mov byte [r12 + rax], 0	      3416	ops.c	FUNCTION_46
0x40006bc	      0xb801000000	                              mov eax, 1	      3417	ops.c	FUNCTION_46
0x40006c1	              0x5b	                                 pop rbx	      3418	ops.c	FUNCTION_46
0x40006c2	              0x5d	                                 pop rbp	      3418	ops.c	FUNCTION_46
0x40006c3	            0x415c	                                 pop r12	      3418	ops.c	FUNCTION_46
0x40006c5	              0xc3	                                     ret	      3418	ops.c	FUNCTION_46
clear_oparg	CALL,1:ELSE,0:WHILE,0:FOR,0:functions,0:IF,0:SWITCH,0:DO,0	12
0x4007095	          0x4889f9	                            mov rcx, rdi	      7268	ops.c	FUNCTION_89
0x4007098	    0x48c707000000	                      mov qword [rdi], 0	        90	string3.h	FUNCTION_95	CALL_6
0x400709f	    0x48c747780000	               mov qword [rdi + 0x78], 0	        90	string3.h	FUNCTION_95	CALL_6
0x40070a7	        0x488d7f08	                      lea rdi, [rdi + 8]	        90	string3.h	FUNCTION_95	CALL_6
0x40070ab	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_95	CALL_6
0x40070af	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_95	CALL_6
0x40070b2	          0x83e980	             sub ecx, 0xffffffffffffff80	        90	string3.h	FUNCTION_95	CALL_6
0x40070b5	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_95	CALL_6
0x40070b8	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_95	CALL_6
0x40070ba	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_95	CALL_6
0x40070bf	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_95	CALL_6
0x40070c2	              0xc3	                                     ret	        90	string3.h	FUNCTION_95	CALL_6
free_yank_all	CALL,1:ELSE,0:WHILE,0:FOR,0:functions,0:IF,0:SWITCH,0:DO,0	6
0x400041d	        0x4883ec08	                              sub rsp, 8	      3044	ops.c	FUNCTION_44
0x4000421	    0x488b05000000	            mov rax, qword [0x04000428] 	      3045	ops.c	FUNCTION_44	CALL_1
0x4000428	        0x488b7808	                mov rdi, qword [rax + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x400042c	      0xe87cffffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x4000431	        0x4883c408	                              add rsp, 8	      3046	ops.c	FUNCTION_44
0x4000435	              0xc3	                                     ret	      3046	ops.c	FUNCTION_44
yank_do_autocmd	CALL,15:ELSE,0:WHILE,0:FOR,1:functions,0:IF,2:SWITCH,1:DO,0	118
0x400962b	            0x4157	                                push r15	      1680	ops.c	FUNCTION_32
0x400962d	            0x4156	                                push r14	      1680	ops.c	FUNCTION_32
0x400962f	            0x4155	                                push r13	      1680	ops.c	FUNCTION_32
0x4009631	            0x4154	                                push r12	      1680	ops.c	FUNCTION_32
0x4009633	              0x55	                                push rbp	      1680	ops.c	FUNCTION_32
0x4009634	              0x53	                                push rbx	      1680	ops.c	FUNCTION_32
0x4009635	        0x4883ec68	                           sub rsp, 0x68	      1680	ops.c	FUNCTION_32
0x4009639	    0x64488b042528	                mov rax, qword fs:[0x28]	      1680	ops.c	FUNCTION_32
0x4009642	      0x4889442458	             mov qword [rsp + 0x58], rax	      1680	ops.c	FUNCTION_32
0x4009647	            0x31c0	                            xor eax, eax	      1680	ops.c	FUNCTION_32
0x4009649	    0x48c744240800	                  mov qword [rsp + 8], 0	      1686	ops.c	FUNCTION_32
0x4009652	    0x833d00000000	               cmp dword [0x04009659], 0	      1688	ops.c	FUNCTION_32	IF_1
0x4009659	     0xf8598010000	                           jne 0x40097f7	      1688	ops.c	FUNCTION_32	IF_1
0x400965f	          0x4989ff	                            mov r15, rdi	      1688	ops.c	FUNCTION_32	IF_1
0x4009662	          0x4889f5	                            mov rbp, rsi	      1688	ops.c	FUNCTION_32	IF_1
0x4009665	      0xbf56000000	                           mov edi, 0x56	      1691	ops.c	FUNCTION_32	CALL_1
0x400966a	      0xe800000000	                          call 0x400966f	      1691	ops.c	FUNCTION_32	CALL_1
0x400966f	          0x4989c6	                            mov r14, rax	      1691	ops.c	FUNCTION_32	CALL_1
0x4009672	      0xe800000000	                          call 0x4009677	      1693	ops.c	FUNCTION_32	CALL_2
0x4009677	          0x4989c4	                            mov r12, rax	      1693	ops.c	FUNCTION_32	CALL_2
0x400967a	          0x4885c0	                           test rax, rax	      1694	ops.c	FUNCTION_32	IF_2
0x400967d	     0xf8474010000	                            je 0x40097f7	      1694	ops.c	FUNCTION_32	IF_2
0x4009683	      0x48837d0800	                  cmp qword [rbp + 8], 0	      1696	ops.c	FUNCTION_32	FOR_1
0x4009688	            0x7e2d	                           jle 0x40096b7	      1696	ops.c	FUNCTION_32	FOR_1
0x400968a	      0xbb00000000	                              mov ebx, 0	      1696	ops.c	FUNCTION_32	FOR_1
0x400968f	    0x41bdffffffff	                    mov r13d, 0xffffffff	      1697	ops.c	FUNCTION_32	CALL_3
0x4009695	          0x4863d3	                         movsxd rdx, ebx	      1697	ops.c	FUNCTION_32	CALL_3
0x4009698	        0x488b4500	                    mov rax, qword [rbp]	      1697	ops.c	FUNCTION_32	CALL_3
0x400969c	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	      1697	ops.c	FUNCTION_32	CALL_3
0x40096a0	          0x4489ea	                           mov edx, r13d	      1697	ops.c	FUNCTION_32	CALL_3
0x40096a3	          0x4c89e7	                            mov rdi, r12	      1697	ops.c	FUNCTION_32	CALL_3
0x40096a6	      0xe800000000	                          call 0x40096ab	      1697	ops.c	FUNCTION_32	CALL_3
0x40096ab	          0x83c301	                              add ebx, 1	      1696	ops.c	FUNCTION_32	FOR_1
0x40096ae	          0x4863c3	                         movsxd rax, ebx	      1696	ops.c	FUNCTION_32	FOR_1
0x40096b1	        0x483b4508	                cmp rax, qword [rbp + 8]	      1696	ops.c	FUNCTION_32	FOR_1
0x40096b5	            0x7cde	                            jl 0x4009695	      1696	ops.c	FUNCTION_32	FOR_1
0x40096b7	    0x41c644244802	                mov byte [r12 + 0x48], 2	      1698	ops.c	FUNCTION_32
0x40096bd	          0x4c89e2	                            mov rdx, r12	      1699	ops.c	FUNCTION_32	CALL_4
0x40096c0	      0xbe00000000	                              mov esi, 0	      1699	ops.c	FUNCTION_32	CALL_4
0x40096c5	          0x4c89f7	                            mov rdi, r14	      1699	ops.c	FUNCTION_32	CALL_4
0x40096c8	      0xe800000000	                          call 0x40096cd	      1699	ops.c	FUNCTION_32	CALL_4
0x40096cd	        0x418b4704	                mov eax, dword [r15 + 4]	      1701	ops.c	FUNCTION_32
0x40096d1	        0x88442410	               mov byte [rsp + 0x10], al	      1701	ops.c	FUNCTION_32
0x40096d5	      0xc644241100	                mov byte [rsp + 0x11], 0	      1702	ops.c	FUNCTION_32
0x40096da	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1703	ops.c	FUNCTION_32	CALL_5
0x40096df	      0xba00000000	                              mov edx, 0	      1703	ops.c	FUNCTION_32	CALL_5
0x40096e4	      0xbe00000000	                              mov esi, 0	      1703	ops.c	FUNCTION_32	CALL_5
0x40096e9	          0x4c89f7	                            mov rdi, r14	      1703	ops.c	FUNCTION_32	CALL_5
0x40096ec	      0xe800000000	                          call 0x40096f1	      1703	ops.c	FUNCTION_32	CALL_5
0x40096f1	          0x496307	                 movsxd rax, dword [r15]	       214	ops.c	FUNCTION_3
0x40096f4	        0x488d0440	                  lea rax, [rax + rax*2]	       214	ops.c	FUNCTION_3
0x40096f8	     0xfb690000000	                   movzx edx, byte [rax]	      1705	ops.c	FUNCTION_32	CALL_6
0x40096ff	        0x88542410	               mov byte [rsp + 0x10], dl	      1705	ops.c	FUNCTION_32	CALL_6
0x4009703	     0xfb680000000	                   movzx eax, byte [rax]	      1706	ops.c	FUNCTION_32	CALL_7
0x400970a	        0x88442411	               mov byte [rsp + 0x11], al	      1706	ops.c	FUNCTION_32	CALL_7
0x400970e	      0xc644241200	                mov byte [rsp + 0x12], 0	      1707	ops.c	FUNCTION_32
0x4009713	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1708	ops.c	FUNCTION_32	CALL_8
0x4009718	      0xba00000000	                              mov edx, 0	      1708	ops.c	FUNCTION_32	CALL_8
0x400971d	      0xbe00000000	                              mov esi, 0	      1708	ops.c	FUNCTION_32	CALL_8
0x4009722	          0x4c89f7	                            mov rdi, r14	      1708	ops.c	FUNCTION_32	CALL_8
0x4009725	      0xe800000000	                          call 0x400972a	      1708	ops.c	FUNCTION_32	CALL_8
0x400972a	      0xc644241000	                mov byte [rsp + 0x10], 0	      1710	ops.c	FUNCTION_32
0x400972f	      0xc644241100	                mov byte [rsp + 0x11], 0	      1711	ops.c	FUNCTION_32
0x4009734	        0x418b7f04	                mov edi, dword [r15 + 4]	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4009738	      0x488d742408	                      lea rsi, [rsp + 8]	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x400973d	      0xe800000000	                          call 0x4009742	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4009742	            0x3c01	                               cmp al, 1	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4009744	            0x740a	                            je 0x4009750	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4009746	            0x3c01	                               cmp al, 1	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4009748	            0x720d	                            jb 0x4009757	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x400974a	            0x3c02	                               cmp al, 2	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x400974c	            0x7410	                            je 0x400975e	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x400974e	            0xeb35	                           jmp 0x4009785	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4009750	      0xc644241056	            mov byte [rsp + 0x10], 0x56 	      1714	ops.c	FUNCTION_32	SWITCH_1
0x4009755	            0xeb2e	                           jmp 0x4009785	      1714	ops.c	FUNCTION_32	SWITCH_1
0x4009757	      0xc644241076	            mov byte [rsp + 0x10], 0x76 	      1715	ops.c	FUNCTION_32	SWITCH_1
0x400975c	            0xeb27	                           jmp 0x4009785	      1715	ops.c	FUNCTION_32	SWITCH_1
0x400975e	      0x488b442408	                mov rax, qword [rsp + 8]	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4009763	        0x4c8d4001	                       lea r8, [rax + 1]	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4009767	      0xb916000000	                           mov ecx, 0x16	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x400976c	      0xba00000000	                              mov edx, 0	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4009771	      0xbe43000000	                           mov esi, 0x43	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4009776	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x400977b	      0xb800000000	                              mov eax, 0	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4009780	      0xe800000000	                          call 0x4009785	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4009785	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1721	ops.c	FUNCTION_32	CALL_11
0x400978a	      0xba00000000	                              mov edx, 0	      1721	ops.c	FUNCTION_32	CALL_11
0x400978f	      0xbe00000000	                              mov esi, 0	      1721	ops.c	FUNCTION_32	CALL_11
0x4009794	          0x4c89f7	                            mov rdi, r14	      1721	ops.c	FUNCTION_32	CALL_11
0x4009797	      0xe800000000	                          call 0x400979c	      1721	ops.c	FUNCTION_32	CALL_11
0x400979c	          0x4c89f7	                            mov rdi, r14	      1724	ops.c	FUNCTION_32	CALL_12
0x400979f	      0xe800000000	                          call 0x40097a4	      1724	ops.c	FUNCTION_32	CALL_12
0x40097a4	    0xc70500000000	               mov dword [0x040097ae], 1	      1726	ops.c	FUNCTION_32
0x40097ae	    0x830500000000	               add dword [0x040097b5], 1	      1727	ops.c	FUNCTION_32
0x40097b5	    0x4c8b05000000	              mov r8, qword [0x040097bc]	      1728	ops.c	FUNCTION_32	CALL_13
0x40097bc	      0xb900000000	                              mov ecx, 0	      1728	ops.c	FUNCTION_32	CALL_13
0x40097c1	      0xba00000000	                              mov edx, 0	      1728	ops.c	FUNCTION_32	CALL_13
0x40097c6	      0xbe00000000	                              mov esi, 0	      1728	ops.c	FUNCTION_32	CALL_13
0x40097cb	      0xbf57000000	                           mov edi, 0x57	      1728	ops.c	FUNCTION_32	CALL_13
0x40097d0	      0xe800000000	                          call 0x40097d5	      1728	ops.c	FUNCTION_32	CALL_13
0x40097d5	    0x832d00000000	               sub dword [0x040097dc], 1	      1729	ops.c	FUNCTION_32
0x40097dc	    0xc70500000000	               mov dword [0x040097e6], 0	      1730	ops.c	FUNCTION_32
0x40097e6	          0x4c89f7	                            mov rdi, r14	      1733	ops.c	FUNCTION_32	CALL_14
0x40097e9	      0xe800000000	                          call 0x40097ee	      1733	ops.c	FUNCTION_32	CALL_14
0x40097ee	        0x498d7e10	                   lea rdi, [r14 + 0x10]	      1734	ops.c	FUNCTION_32	CALL_15
0x40097f2	      0xe800000000	                          call 0x40097f7	      1734	ops.c	FUNCTION_32	CALL_15
0x40097f7	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1735	ops.c	FUNCTION_32
0x40097fc	    0x644833042528	                xor rax, qword fs:[0x28]	      1735	ops.c	FUNCTION_32
0x4009805	            0x7405	                            je 0x400980c	      1735	ops.c	FUNCTION_32
0x4009807	      0xe800000000	                          call 0x400980c	      1735	ops.c	FUNCTION_32
0x400980c	        0x4883c468	                           add rsp, 0x68	      1735	ops.c	FUNCTION_32
0x4009810	              0x5b	                                 pop rbx	      1735	ops.c	FUNCTION_32
0x4009811	              0x5d	                                 pop rbp	      1735	ops.c	FUNCTION_32
0x4009812	            0x415c	                                 pop r12	      1735	ops.c	FUNCTION_32
0x4009814	            0x415d	                                 pop r13	      1735	ops.c	FUNCTION_32
0x4009816	            0x415e	                                 pop r14	      1735	ops.c	FUNCTION_32
0x4009818	            0x415f	                                 pop r15	      1735	ops.c	FUNCTION_32
0x400981a	              0xc3	                                     ret	      1735	ops.c	FUNCTION_32
adjust_cursor_eol	CALL,3:ELSE,0:WHILE,0:FOR,0:functions,0:IF,2:SWITCH,0:DO,0	36
0x4004177	        0x4883ec18	                           sub rsp, 0x18	      4157	ops.c	FUNCTION_49
0x400417b	    0x64488b042528	                mov rax, qword fs:[0x28]	      4157	ops.c	FUNCTION_49
0x4004184	      0x4889442408	                mov qword [rsp + 8], rax	      4157	ops.c	FUNCTION_49
0x4004189	            0x31c0	                            xor eax, eax	      4157	ops.c	FUNCTION_49
0x400418b	    0x488b05000000	            mov rax, qword [0x04004192] 	      4158	ops.c	FUNCTION_49	IF_1
0x4004192	        0x83784000	               cmp dword [rax + 0x40], 0	      4158	ops.c	FUNCTION_49	IF_1
0x4004196	            0x7e63	                           jle 0x40041fb	      4158	ops.c	FUNCTION_49	IF_1
0x4004198	      0xe800000000	                          call 0x400419d	      4159	ops.c	FUNCTION_49	IF_1	CALL_1
0x400419d	            0x85c0	                           test eax, eax	      4159	ops.c	FUNCTION_49	IF_1	CALL_1
0x400419f	            0x755a	                           jne 0x40041fb	      4159	ops.c	FUNCTION_49	IF_1	CALL_1
0x40041a1	    0xf60500000000	               test byte [0x040041a8], 8	      4161	ops.c	FUNCTION_49	IF_1
0x40041a8	            0x7551	                           jne 0x40041fb	      4161	ops.c	FUNCTION_49	IF_1
0x40041aa	    0x833d00000000	               cmp dword [0x040041b1], 0	      4163	ops.c	FUNCTION_49	IF_1
0x40041b1	            0x7548	                           jne 0x40041fb	      4163	ops.c	FUNCTION_49	IF_1
0x40041b3	    0xf60500000000	           test byte [0x040041ba], 0x10 	      4163	ops.c	FUNCTION_49	IF_1
0x40041ba	            0x753f	                           jne 0x40041fb	      4163	ops.c	FUNCTION_49	IF_1
0x40041bc	      0xe800000000	                          call 0x40041c1	      4166	ops.c	FUNCTION_49	IF_1	CALL_2
0x40041c1	    0x833d00000000	               cmp dword [0x040041c8], 4	      4169	ops.c	FUNCTION_49	IF_1	IF_2
0x40041c8	            0x7531	                           jne 0x40041fb	      4169	ops.c	FUNCTION_49	IF_1	IF_2
0x40041ca	    0x488b3d000000	            mov rdi, qword [0x040041d1] 	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40041d1	        0x488d7738	                   lea rsi, [rdi + 0x38]	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40041d5	      0x4c8d442404	                       lea r8, [rsp + 4]	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40041da	      0xb900000000	                              mov ecx, 0	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40041df	          0x4889e2	                            mov rdx, rsp	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40041e2	      0xe800000000	                          call 0x40041e7	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40041e7	        0x8b442404	                mov eax, dword [rsp + 4]	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x40041eb	          0x2b0424	                    sub eax, dword [rsp]	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x40041ee	          0x83c001	                              add eax, 1	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x40041f1	    0x488b15000000	            mov rdx, qword [0x040041f8] 	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x40041f8	          0x894244	             mov dword [rdx + 0x44], eax	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x40041fb	      0x488b442408	                mov rax, qword [rsp + 8]	      4179	ops.c	FUNCTION_49
0x4004200	    0x644833042528	                xor rax, qword fs:[0x28]	      4179	ops.c	FUNCTION_49
0x4004209	            0x7405	                            je 0x4004210	      4179	ops.c	FUNCTION_49
0x400420b	      0xe800000000	                          call 0x4004210	      4179	ops.c	FUNCTION_49
0x4004210	        0x4883c418	                           add rsp, 0x18	      4179	ops.c	FUNCTION_49
0x4004214	              0xc3	                                     ret	      4179	ops.c	FUNCTION_49
handle_viminfo_register	CALL,5:ELSE,3:WHILE,0:FOR,2:functions,0:IF,13:SWITCH,0:DO,0	135
0x400635c	            0x8b07	                    mov eax, dword [rdi]	      6240	ops.c	FUNCTION_71	IF_1
0x400635e	          0x83f805	                              cmp eax, 5	      6240	ops.c	FUNCTION_71	IF_1
0x4006361	     0xf8e0d020000	                           jle 0x4006574	      6240	ops.c	FUNCTION_71	IF_1
0x4006367	            0x4157	                                push r15	      6225	ops.c	FUNCTION_71
0x4006369	            0x4156	                                push r14	      6225	ops.c	FUNCTION_71
0x400636b	            0x4155	                                push r13	      6225	ops.c	FUNCTION_71
0x400636d	            0x4154	                                push r12	      6225	ops.c	FUNCTION_71
0x400636f	              0x55	                                push rbp	      6225	ops.c	FUNCTION_71
0x4006370	              0x53	                                push rbx	      6225	ops.c	FUNCTION_71
0x4006371	        0x4883ec28	                           sub rsp, 0x28	      6225	ops.c	FUNCTION_71
0x4006375	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      6226	ops.c	FUNCTION_71
0x4006379	          0x833b00	                      cmp dword [rbx], 0	      6241	ops.c	FUNCTION_71	IF_1
0x400637c	     0xf85e4010000	                           jne 0x4006566	      6241	ops.c	FUNCTION_71	IF_1
0x4006382	        0x837b2000	               cmp dword [rbx + 0x20], 0	      6242	ops.c	FUNCTION_71	IF_1
0x4006386	     0xf85da010000	                           jne 0x4006566	      6242	ops.c	FUNCTION_71	IF_1
0x400638c	        0x837b4000	               cmp dword [rbx + 0x40], 0	      6243	ops.c	FUNCTION_71	IF_1
0x4006390	     0xf85d0010000	                           jne 0x4006566	      6243	ops.c	FUNCTION_71	IF_1
0x4006396	        0x837b6000	               cmp dword [rbx + 0x60], 0	      6244	ops.c	FUNCTION_71	IF_1
0x400639a	     0xf85c6010000	                           jne 0x4006566	      6244	ops.c	FUNCTION_71	IF_1
0x40063a0	    0x83bb80000000	               cmp dword [rbx + 0x80], 0	      6245	ops.c	FUNCTION_71	IF_1
0x40063a7	     0xf85b9010000	                           jne 0x4006566	      6245	ops.c	FUNCTION_71	IF_1
0x40063ad	    0x83bba0000000	               cmp dword [rbx + 0xa0], 0	      6246	ops.c	FUNCTION_71	IF_1
0x40063b4	     0xf85ac010000	                           jne 0x4006566	      6246	ops.c	FUNCTION_71	IF_1
0x40063ba	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      6249	ops.c	FUNCTION_71
0x40063be	        0x4183fd27	                          cmp r13d, 0x27	      6250	ops.c	FUNCTION_71	IF_2
0x40063c2	     0xf879e010000	                            ja 0x4006566	      6250	ops.c	FUNCTION_71	IF_2
0x40063c8	        0x4c8b7348	            mov r14, qword [rbx + 0x48] 	      6252	ops.c	FUNCTION_71
0x40063cc	        0x4183fe02	                             cmp r14d, 2	      6253	ops.c	FUNCTION_71	IF_3
0x40063d0	     0xf8790010000	                            ja 0x4006566	      6253	ops.c	FUNCTION_71	IF_3
0x40063d6	        0x4c8b7b68	            mov r15, qword [rbx + 0x68] 	      6255	ops.c	FUNCTION_71
0x40063da	        0x418d5706	                      lea edx, [r15 + 6]	      6256	ops.c	FUNCTION_71	IF_4
0x40063de	            0x39d0	                            cmp eax, edx	      6256	ops.c	FUNCTION_71	IF_4
0x40063e0	     0xf8c80010000	                            jl 0x4006566	      6256	ops.c	FUNCTION_71	IF_4
0x40063e6	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	      6258	ops.c	FUNCTION_71
0x40063ed	        0x48890424	                    mov qword [rsp], rax	      6258	ops.c	FUNCTION_71
0x40063f1	            0x85c0	                           test eax, eax	      6259	ops.c	FUNCTION_71	IF_5
0x40063f3	     0xf886d010000	                            js 0x4006566	      6259	ops.c	FUNCTION_71	IF_5
0x40063f9	    0x4c8b25000000	            mov r12, qword [0x04006400] 	      6262	ops.c	FUNCTION_71	IF_6
0x4006400	          0x4d85e4	                           test r12, r12	      6262	ops.c	FUNCTION_71	IF_6
0x4006403	            0x740c	                            je 0x4006411	      6262	ops.c	FUNCTION_71	IF_6
0x4006405	          0x4963c5	                        movsxd rax, r13d	      6265	ops.c	FUNCTION_71	IF_6
0x4006408	        0x48c1e005	                              shl rax, 5	      6265	ops.c	FUNCTION_71	IF_6
0x400640c	          0x4901c4	                            add r12, rax	      6265	ops.c	FUNCTION_71	IF_6
0x400640f	            0xeb0e	                           jmp 0x400641f	      6265	ops.c	FUNCTION_71	IF_6
0x4006411	          0x4d63e5	                        movsxd r12, r13d	      6267	ops.c	FUNCTION_71	ELSE_1
0x4006414	        0x49c1e405	                              shl r12, 5	      6267	ops.c	FUNCTION_71	ELSE_1
0x4006418	    0x4981c4000000	                              add r12, 0	      6267	ops.c	FUNCTION_71	ELSE_1
0x400641f	    0x488b83a80000	            mov rax, qword [rbx + 0xa8] 	      6270	ops.c	FUNCTION_71
0x4006426	          0x4889c1	                            mov rcx, rax	      6270	ops.c	FUNCTION_71
0x4006429	      0x4889442408	                mov qword [rsp + 8], rax	      6270	ops.c	FUNCTION_71
0x400642e	        0x498b0424	                    mov rax, qword [r12]	      6271	ops.c	FUNCTION_71	IF_7
0x4006432	            0x85f6	                           test esi, esi	      6271	ops.c	FUNCTION_71	IF_7
0x4006434	            0x7519	                           jne 0x400644f	      6271	ops.c	FUNCTION_71	IF_7
0x4006436	          0x4885c0	                           test rax, rax	      6271	ops.c	FUNCTION_71	IF_7
0x4006439	            0x7414	                            je 0x400644f	      6271	ops.c	FUNCTION_71	IF_7
0x400643b	          0x4885c9	                           test rcx, rcx	      6272	ops.c	FUNCTION_71	IF_7
0x400643e	     0xf8422010000	                            je 0x4006566	      6272	ops.c	FUNCTION_71	IF_7
0x4006444	      0x493b4c2418	            cmp rcx, qword [r12 + 0x18] 	      6272	ops.c	FUNCTION_71	IF_7
0x4006449	     0xf8c17010000	                            jl 0x4006566	      6272	ops.c	FUNCTION_71	IF_7
0x400644f	        0x8974241c	             mov dword [rsp + 0x1c], esi	      6272	ops.c	FUNCTION_71	IF_7
0x4006453	        0x488b4b08	                mov rcx, qword [rbx + 8]	      6248	ops.c	FUNCTION_71
0x4006457	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      6248	ops.c	FUNCTION_71
0x400645c	          0x4885c0	                           test rax, rax	      6275	ops.c	FUNCTION_71	IF_8
0x400645f	            0x742a	                            je 0x400648b	      6275	ops.c	FUNCTION_71	IF_8
0x4006461	    0x49837c240800	                  cmp qword [r12 + 8], 0	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006467	            0x7e22	                           jle 0x400648b	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006469	      0xbd00000000	                              mov ebp, 0	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400646e	          0x4863d5	                         movsxd rdx, ebp	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006471	        0x498b0424	                    mov rax, qword [r12]	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006475	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006479	      0xe800000000	                          call 0x400647e	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x400647e	          0x83c501	                              add ebp, 1	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006481	          0x4863c5	                         movsxd rax, ebp	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006484	      0x493b442408	                cmp rax, qword [r12 + 8]	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4006489	            0x7ce3	                            jl 0x400646e	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400648b	        0x498b3c24	                    mov rdi, qword [r12]	      6278	ops.c	FUNCTION_71	CALL_2
0x400648f	      0xe800000000	                          call 0x4006494	      6278	ops.c	FUNCTION_71	CALL_2
0x4006494	    0x48833d000000	               cmp qword [0x0400649c], 0	      6280	ops.c	FUNCTION_71	IF_9
0x400649c	            0x7533	                           jne 0x40064d1	      6280	ops.c	FUNCTION_71	IF_9
0x400649e	      0xf644241001	               test byte [rsp + 0x10], 1	      6282	ops.c	FUNCTION_71	IF_9	IF_10
0x40064a3	            0x7407	                            je 0x40064ac	      6282	ops.c	FUNCTION_71	IF_9	IF_10
0x40064a5	    0x4c8925000000	            mov qword [0x040064ac], r12 	      6283	ops.c	FUNCTION_71	IF_9	IF_10
0x40064ac	      0xf644241002	               test byte [rsp + 0x10], 2	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x40064b1	            0x741e	                            je 0x40064d1	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x40064b3	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x40064b8	            0x7509	                           jne 0x40064c3	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x40064ba	    0x833d00000000	               cmp dword [0x040064c1], 0	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x40064c1	            0x750e	                           jne 0x40064d1	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x40064c3	          0x4489ef	                           mov edi, r13d	      6285	ops.c	FUNCTION_71	IF_9	CALL_3
0x40064c6	      0xe800000000	                          call 0x40064cb	      6285	ops.c	FUNCTION_71	IF_9	CALL_3
0x40064cb	    0x890500000000	            mov dword [0x040064d1], eax 	      6285	ops.c	FUNCTION_71	IF_9	CALL_3
0x40064d1	      0x4588742410	             mov byte [r12 + 0x10], r14b	      6287	ops.c	FUNCTION_71
0x40064d6	          0x8b0424	                    mov eax, dword [rsp]	      6288	ops.c	FUNCTION_71
0x40064d9	      0x4189442414	             mov dword [r12 + 0x14], eax	      6288	ops.c	FUNCTION_71
0x40064de	          0x4963c7	                        movsxd rax, r15d	      6289	ops.c	FUNCTION_71
0x40064e1	      0x4989442408	                mov qword [r12 + 8], rax	      6289	ops.c	FUNCTION_71
0x40064e6	      0x488b442408	                mov rax, qword [rsp + 8]	      6290	ops.c	FUNCTION_71
0x40064eb	      0x4989442418	             mov qword [r12 + 0x18], rax	      6290	ops.c	FUNCTION_71
0x40064f0	          0x4585ff	                         test r15d, r15d	      6291	ops.c	FUNCTION_71	IF_12
0x40064f3	            0x750a	                           jne 0x40064ff	      6291	ops.c	FUNCTION_71	IF_12
0x40064f5	    0x49c704240000	                      mov qword [r12], 0	      6292	ops.c	FUNCTION_71	IF_12
0x40064fd	            0xeb67	                           jmp 0x4006566	      6292	ops.c	FUNCTION_71	IF_12
0x40064ff	    0x428d3cfd0000	                        lea edi, [r15*8]	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x4006507	      0xe800000000	                          call 0x400650c	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x400650c	        0x49890424	                    mov qword [r12], rax	      6295	ops.c	FUNCTION_71	ELSE_2
0x4006510	          0x4585ff	                         test r15d, r15d	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006513	            0x7e51	                           jle 0x4006566	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006515	    0x4881c3d00000	                           add rbx, 0xd0	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x400651c	        0x418d47ff	                      lea eax, [r15 - 1]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006520	    0x4c8d2cc50800	                    lea r13, [rax*8 + 8]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006528	      0xbd00000000	                              mov ebp, 0	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x400652d	        0x837b0c00	                cmp dword [rbx + 0xc], 0	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006531	            0x7414	                            je 0x4006547	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006533	          0x488b13	                    mov rdx, qword [rbx]	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006536	        0x498b0424	                    mov rax, qword [r12]	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400653a	        0x48891428	              mov qword [rax + rbp], rdx	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400653e	    0x48c703000000	                      mov qword [rbx], 0	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006545	            0xeb12	                           jmp 0x4006559	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x4006547	          0x4989ee	                            mov r14, rbp	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400654a	        0x4d033424	                    add r14, qword [r12]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400654e	          0x488b3b	                    mov rdi, qword [rbx]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x4006551	      0xe800000000	                          call 0x4006556	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x4006556	          0x498906	                    mov qword [r14], rax	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x4006559	        0x4883c508	                              add rbp, 8	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400655d	        0x4883c320	                           add rbx, 0x20	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x4006561	          0x4c39ed	                            cmp rbp, r13	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006564	            0x75c7	                           jne 0x400652d	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x4006566	        0x4883c428	                           add rsp, 0x28	      6308	ops.c	FUNCTION_71
0x400656a	              0x5b	                                 pop rbx	      6308	ops.c	FUNCTION_71
0x400656b	              0x5d	                                 pop rbp	      6308	ops.c	FUNCTION_71
0x400656c	            0x415c	                                 pop r12	      6308	ops.c	FUNCTION_71
0x400656e	            0x415d	                                 pop r13	      6308	ops.c	FUNCTION_71
0x4006570	            0x415e	                                 pop r14	      6308	ops.c	FUNCTION_71
0x4006572	            0x415f	                                 pop r15	      6308	ops.c	FUNCTION_71
0x4006574	            0xf3c3	                                     ret	      6308	ops.c	FUNCTION_71
clip_convert_selection	CALL,2:ELSE,3:WHILE,0:FOR,2:functions,0:IF,6:SWITCH,0:DO,0	81
0x4006a9b	            0x4154	                                push r12	      6655	ops.c	FUNCTION_77
0x4006a9d	              0x55	                                push rbp	      6655	ops.c	FUNCTION_77
0x4006a9e	              0x53	                                push rbx	      6655	ops.c	FUNCTION_77
0x4006a9f	    0x4881fa000000	                              cmp rdx, 0	      6665	ops.c	FUNCTION_77	ELSE_1
0x4006aa6	      0xb800000000	                              mov eax, 0	      6665	ops.c	FUNCTION_77	ELSE_1
0x4006aab	      0xbb00000000	                              mov ebx, 0	      6665	ops.c	FUNCTION_77	ELSE_1
0x4006ab0	        0x480f45d8	                         cmovne rbx, rax	      6665	ops.c	FUNCTION_77	ELSE_1
0x4006ab4	    0x48c707000000	                      mov qword [rdi], 0	      6673	ops.c	FUNCTION_77
0x4006abb	    0x48c706000000	                      mov qword [rsi], 0	      6674	ops.c	FUNCTION_77
0x4006ac2	        0x48833b00	                      cmp qword [rbx], 0	      6675	ops.c	FUNCTION_77	IF_2
0x4006ac6	     0xf84d3000000	                            je 0x4006b9f	      6675	ops.c	FUNCTION_77	IF_2
0x4006acc	          0x4989f8	                             mov r8, rdi	      6675	ops.c	FUNCTION_77	IF_2
0x4006acf	      0x48837b0800	                  cmp qword [rbx + 8], 0	      6678	ops.c	FUNCTION_77	FOR_1
0x4006ad4	            0x7e47	                           jle 0x4006b1d	      6678	ops.c	FUNCTION_77	FOR_1
0x4006ad6	      0xba00000000	                              mov edx, 0	      6678	ops.c	FUNCTION_77	FOR_1
0x4006adb	    0x49c7c1ffffff	              mov r9, 0xffffffffffffffff	      6679	ops.c	FUNCTION_77	CALL_1
0x4006ae2	      0xb800000000	                              mov eax, 0	      6679	ops.c	FUNCTION_77	CALL_1
0x4006ae7	          0x4863fa	                         movsxd rdi, edx	      6679	ops.c	FUNCTION_77	CALL_1
0x4006aea	          0x488b0b	                    mov rcx, qword [rbx]	      6679	ops.c	FUNCTION_77	CALL_1
0x4006aed	        0x488b3cf9	            mov rdi, qword [rcx + rdi*8]	      6679	ops.c	FUNCTION_77	CALL_1
0x4006af1	          0x4c89c9	                             mov rcx, r9	      6679	ops.c	FUNCTION_77	CALL_1
0x4006af4	            0xf2ae	              repne scasb al, byte [rdi]	      6679	ops.c	FUNCTION_77	CALL_1
0x4006af6	          0x48f7d1	                                 not rcx	      6679	ops.c	FUNCTION_77	CALL_1
0x4006af9	          0x48030e	                    add rcx, qword [rsi]	      6679	ops.c	FUNCTION_77	CALL_1
0x4006afc	          0x48890e	                    mov qword [rsi], rcx	      6679	ops.c	FUNCTION_77	CALL_1
0x4006aff	          0x83c201	                              add edx, 1	      6678	ops.c	FUNCTION_77	FOR_1
0x4006b02	          0x4863fa	                         movsxd rdi, edx	      6678	ops.c	FUNCTION_77	FOR_1
0x4006b05	        0x483b7b08	                cmp rdi, qword [rbx + 8]	      6678	ops.c	FUNCTION_77	FOR_1
0x4006b09	            0x7cdc	                            jl 0x4006ae7	      6678	ops.c	FUNCTION_77	FOR_1
0x4006b0b	        0x807b1000	                cmp byte [rbx + 0x10], 0	      6684	ops.c	FUNCTION_77	IF_3
0x4006b0f	            0x750c	                           jne 0x4006b1d	      6684	ops.c	FUNCTION_77	IF_3
0x4006b11	          0x4885c9	                           test rcx, rcx	      6684	ops.c	FUNCTION_77	IF_3
0x4006b14	            0x7407	                            je 0x4006b1d	      6684	ops.c	FUNCTION_77	IF_3
0x4006b16	        0x4883e901	                              sub rcx, 1	      6685	ops.c	FUNCTION_77	IF_3
0x4006b1a	          0x48890e	                    mov qword [rsi], rcx	      6685	ops.c	FUNCTION_77	IF_3
0x4006b1d	          0x4889f5	                            mov rbp, rsi	      6685	ops.c	FUNCTION_77	IF_3
0x4006b20	          0x4d89c4	                             mov r12, r8	      6685	ops.c	FUNCTION_77	IF_3
0x4006b23	          0x488b06	                    mov rax, qword [rsi]	      6687	ops.c	FUNCTION_77	CALL_2
0x4006b26	        0x488d7801	                      lea rdi, [rax + 1]	      6687	ops.c	FUNCTION_77	CALL_2
0x4006b2a	      0xbe01000000	                              mov esi, 1	      6687	ops.c	FUNCTION_77	CALL_2
0x4006b2f	      0xe800000000	                          call 0x4006b34	      6687	ops.c	FUNCTION_77	CALL_2
0x4006b34	        0x49890424	                    mov qword [r12], rax	      6687	ops.c	FUNCTION_77	CALL_2
0x4006b38	          0x4885c0	                           test rax, rax	      6688	ops.c	FUNCTION_77	IF_4
0x4006b3b	            0x7469	                            je 0x4006ba6	      6688	ops.c	FUNCTION_77	IF_4
0x4006b3d	        0x837d0000	                      cmp dword [rbp], 0	      6691	ops.c	FUNCTION_77	FOR_2
0x4006b41	            0x7e56	                           jle 0x4006b99	      6691	ops.c	FUNCTION_77	FOR_2
0x4006b43	      0xbe00000000	                              mov esi, 0	      6691	ops.c	FUNCTION_77	FOR_2
0x4006b48	      0xba00000000	                              mov edx, 0	      6691	ops.c	FUNCTION_77	FOR_2
0x4006b4d	    0x41b900000000	                              mov r9d, 0	      6691	ops.c	FUNCTION_77	FOR_2
0x4006b53	          0x4963f9	                         movsxd rdi, r9d	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4006b56	          0x4c8b03	                     mov r8, qword [rbx]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4006b59	          0x4863ce	                         movsxd rcx, esi	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4006b5c	        0x498b3cf8	             mov rdi, qword [r8 + rdi*8]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4006b60	         0xfb60c0f	             movzx ecx, byte [rdi + rcx]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4006b64	          0x80f90a	                             cmp cl, 0xa	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4006b67	            0x7509	                           jne 0x4006b72	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x4006b69	          0x4863ca	                         movsxd rcx, edx	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x4006b6c	        0xc6040800	                 mov byte [rax + rcx], 0	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x4006b70	            0xeb1c	                           jmp 0x4006b8e	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x4006b72	            0x84c9	                             test cl, cl	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4006b74	            0x7512	                           jne 0x4006b88	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4006b76	          0x4863ca	                         movsxd rcx, edx	      6703	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4006b79	        0xc604080a	               mov byte [rax + rcx], 0xa	      6703	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4006b7d	        0x4183c101	                              add r9d, 1	      6705	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4006b81	      0xbeffffffff	                     mov esi, 0xffffffff	      6706	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4006b86	            0xeb06	                           jmp 0x4006b8e	      6706	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x4006b88	          0x4863fa	                         movsxd rdi, edx	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x4006b8b	          0x880c38	                mov byte [rax + rdi], cl	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x4006b8e	          0x83c201	                              add edx, 1	      6691	ops.c	FUNCTION_77	FOR_2
0x4006b91	          0x83c601	                              add esi, 1	      6691	ops.c	FUNCTION_77	FOR_2
0x4006b94	          0x3b5500	                    cmp edx, dword [rbp]	      6691	ops.c	FUNCTION_77	FOR_2
0x4006b97	            0x7cba	                            jl 0x4006b53	      6691	ops.c	FUNCTION_77	FOR_2
0x4006b99	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      6711	ops.c	FUNCTION_77	ELSE_3
0x4006b9d	            0xeb0c	                           jmp 0x4006bab	      6711	ops.c	FUNCTION_77	ELSE_3
0x4006b9f	      0xb8ffffffff	                     mov eax, 0xffffffff	      6676	ops.c	FUNCTION_77	IF_2
0x4006ba4	            0xeb05	                           jmp 0x4006bab	      6676	ops.c	FUNCTION_77	IF_2
0x4006ba6	      0xb8ffffffff	                     mov eax, 0xffffffff	      6689	ops.c	FUNCTION_77	IF_4
0x4006bab	              0x5b	                                 pop rbx	      6712	ops.c	FUNCTION_77	ELSE_3
0x4006bac	              0x5d	                                 pop rbp	      6712	ops.c	FUNCTION_77	ELSE_3
0x4006bad	            0x415c	                                 pop r12	      6712	ops.c	FUNCTION_77	ELSE_3
0x4006baf	              0xc3	                                     ret	      6712	ops.c	FUNCTION_77	ELSE_3
may_set_selection	CALL,4:ELSE,1:WHILE,0:FOR,0:functions,0:IF,2:SWITCH,0:DO,0	21
0x40006c6	        0x4883ec08	                              sub rsp, 8	      6720	ops.c	ELSE_3	FUNCTION_78
0x40006ca	    0x488b05000000	            mov rax, qword [0x040006d1] 	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x40006d1	    0x483d00000000	                              cmp rax, 0	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x40006d7	            0x751f	                           jne 0x40006f8	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x40006d9	    0x833d00000000	               cmp dword [0x040006e0], 0	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x40006e0	            0x743b	                            je 0x400071d	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x40006e2	      0xbf00000000	                              mov edi, 0	      6723	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_1
0x40006e7	      0xe800000000	                          call 0x40006ec	      6723	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_1
0x40006ec	      0xbf00000000	                              mov edi, 0	      6724	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0x40006f1	      0xe800000000	                          call 0x40006f6	      6724	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0x40006f6	            0xeb25	                           jmp 0x400071d	      6724	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0x40006f8	    0x483d00000000	                              cmp rax, 0	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x40006fe	            0x751d	                           jne 0x400071d	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x4000700	    0x833d00000000	               cmp dword [0x04000707], 0	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x4000707	            0x7414	                            je 0x400071d	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x4000709	      0xbf00000000	                              mov edi, 0	      6728	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_3
0x400070e	      0xe800000000	                          call 0x4000713	      6728	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_3
0x4000713	      0xbf00000000	                              mov edi, 0	      6729	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0x4000718	      0xe800000000	                          call 0x400071d	      6729	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0x400071d	        0x4883c408	                              add rsp, 8	      6731	ops.c	ELSE_3	FUNCTION_78
0x4000721	              0xc3	                                     ret	      6731	ops.c	ELSE_3	FUNCTION_78
shift_line	CALL,4:ELSE,4:WHILE,0:FOR,0:functions,0:IF,7:SWITCH,0:DO,0	64
0x4001db5	            0x4157	                                push r15	       330	ops.c	FUNCTION_6
0x4001db7	            0x4156	                                push r14	       330	ops.c	FUNCTION_6
0x4001db9	            0x4155	                                push r13	       330	ops.c	FUNCTION_6
0x4001dbb	            0x4154	                                push r12	       330	ops.c	FUNCTION_6
0x4001dbd	              0x55	                                push rbp	       330	ops.c	FUNCTION_6
0x4001dbe	              0x53	                                push rbx	       330	ops.c	FUNCTION_6
0x4001dbf	        0x4883ec08	                              sub rsp, 8	       330	ops.c	FUNCTION_6
0x4001dc3	          0x4189fd	                           mov r13d, edi	       330	ops.c	FUNCTION_6
0x4001dc6	          0x4189f7	                           mov r15d, esi	       330	ops.c	FUNCTION_6
0x4001dc9	            0x89d5	                            mov ebp, edx	       330	ops.c	FUNCTION_6
0x4001dcb	          0x4189cc	                           mov r12d, ecx	       330	ops.c	FUNCTION_6
0x4001dce	    0x488b3d000000	            mov rdi, qword [0x04001dd5] 	       333	ops.c	FUNCTION_6	CALL_1
0x4001dd5	      0xe800000000	                          call 0x4001dda	       333	ops.c	FUNCTION_6	CALL_1
0x4001dda	          0x4889c3	                            mov rbx, rax	       333	ops.c	FUNCTION_6	CALL_1
0x4001ddd	      0xe800000000	                          call 0x4001de2	       335	ops.c	FUNCTION_6	CALL_2
0x4001de2	          0x4585ff	                         test r15d, r15d	       337	ops.c	FUNCTION_6	IF_1
0x4001de5	            0x742b	                            je 0x4001e12	       337	ops.c	FUNCTION_6	IF_1
0x4001de7	              0x99	                                     cdq	       339	ops.c	FUNCTION_6	IF_1
0x4001de8	            0xf7fb	                                idiv ebx	       339	ops.c	FUNCTION_6	IF_1
0x4001dea	            0x85d2	                           test edx, edx	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4001dec	            0x740c	                            je 0x4001dfa	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4001dee	          0x4585ed	                         test r13d, r13d	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4001df1	           0xf95c2	                                setne dl	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4001df4	          0x80fa01	                               cmp dl, 1	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x4001df7	          0x83d5ff	             adc ebp, 0xffffffffffffffff	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x4001dfa	        0x8d7c0500	                    lea edi, [rbp + rax]	       350	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4001dfe	          0x4585ed	                         test r13d, r13d	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4001e01	            0x740a	                            je 0x4001e0d	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4001e03	            0x29e8	                            sub eax, ebp	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4001e05	      0xbf00000000	                              mov edi, 0	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4001e0a	           0xf49f8	                         cmovns edi, eax	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4001e0d	           0xfaffb	                           imul edi, ebx	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4001e10	            0xeb1c	                           jmp 0x4001e2e	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4001e12	          0x4585ed	                         test r13d, r13d	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4001e15	            0x7411	                            je 0x4001e28	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4001e17	           0xfafdd	                           imul ebx, ebp	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4001e1a	            0x29d8	                            sub eax, ebx	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4001e1c	            0x89c7	                            mov edi, eax	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4001e1e	      0xb900000000	                              mov ecx, 0	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4001e23	           0xf48f9	                          cmovs edi, ecx	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4001e26	            0xeb06	                           jmp 0x4001e2e	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4001e28	           0xfafdd	                           imul ebx, ebp	       362	ops.c	FUNCTION_6	ELSE_2	ELSE_3
0x4001e2b	          0x8d3c03	                    lea edi, [rbx + rax]	       362	ops.c	FUNCTION_6	ELSE_2	ELSE_3
0x4001e2e	    0xf60500000000	           test byte [0x04001e35], 0x80 	       367	ops.c	FUNCTION_6	IF_7
0x4001e35	            0x741b	                            je 0x4001e52	       367	ops.c	FUNCTION_6	IF_7
0x4001e37	          0x4589e0	                           mov r8d, r12d	       368	ops.c	FUNCTION_6	CALL_3
0x4001e3a	      0xb900000000	                              mov ecx, 0	       368	ops.c	FUNCTION_6	CALL_3
0x4001e3f	      0xba00000000	                              mov edx, 0	       368	ops.c	FUNCTION_6	CALL_3
0x4001e44	            0x89fe	                            mov esi, edi	       368	ops.c	FUNCTION_6	CALL_3
0x4001e46	      0xbf01000000	                              mov edi, 1	       368	ops.c	FUNCTION_6	CALL_3
0x4001e4b	      0xe800000000	                          call 0x4001e50	       368	ops.c	FUNCTION_6	CALL_3
0x4001e50	            0xeb10	                           jmp 0x4001e62	       368	ops.c	FUNCTION_6	CALL_3
0x4001e52	          0x4585e4	                         test r12d, r12d	       371	ops.c	FUNCTION_6	CALL_4
0x4001e55	        0x400f95c6	                               setne sil	       371	ops.c	FUNCTION_6	CALL_4
0x4001e59	        0x400fb6f6	                          movzx esi, sil	       371	ops.c	FUNCTION_6	CALL_4
0x4001e5d	      0xe800000000	                          call 0x4001e62	       371	ops.c	FUNCTION_6	CALL_4
0x4001e62	        0x4883c408	                              add rsp, 8	       372	ops.c	FUNCTION_6
0x4001e66	              0x5b	                                 pop rbx	       372	ops.c	FUNCTION_6
0x4001e67	              0x5d	                                 pop rbp	       372	ops.c	FUNCTION_6
0x4001e68	            0x415c	                                 pop r12	       372	ops.c	FUNCTION_6
0x4001e6a	            0x415d	                                 pop r13	       372	ops.c	FUNCTION_6
0x4001e6c	            0x415e	                                 pop r14	       372	ops.c	FUNCTION_6
0x4001e6e	            0x415f	                                 pop r15	       372	ops.c	FUNCTION_6
0x4001e70	              0xc3	                                     ret	       372	ops.c	FUNCTION_6
shift_delete_registers	CALL,1:ELSE,0:WHILE,0:FOR,1:functions,0:IF,1:SWITCH,0:DO,0	23
0x4002a21	        0x4883ec08	                              sub rsp, 8	      1664	ops.c	FUNCTION_31
0x4002a25	    0x48c705000000	               mov qword [0x04002a30], 0	      1667	ops.c	FUNCTION_31
0x4002a30	      0xe8e8d9ffff	                  call sym.free_yank_all	      1668	ops.c	FUNCTION_31	CALL_1
0x4002a35	      0xb800000000	                              mov eax, 0	      1668	ops.c	FUNCTION_31	CALL_1
0x4002a3a	      0xb900000000	                              mov ecx, 0	      1668	ops.c	FUNCTION_31	CALL_1
0x4002a3f	          0x488b10	                    mov rdx, qword [rax]	      1670	ops.c	FUNCTION_31	FOR_1
0x4002a42	        0x48895020	             mov qword [rax + 0x20], rdx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002a46	        0x488b5008	                mov rdx, qword [rax + 8]	      1670	ops.c	FUNCTION_31	FOR_1
0x4002a4a	        0x48895028	             mov qword [rax + 0x28], rdx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002a4e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1670	ops.c	FUNCTION_31	FOR_1
0x4002a52	        0x48895030	             mov qword [rax + 0x30], rdx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002a56	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1670	ops.c	FUNCTION_31	FOR_1
0x4002a5a	        0x48895038	             mov qword [rax + 0x38], rdx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002a5e	        0x4883e820	                           sub rax, 0x20	      1670	ops.c	FUNCTION_31	FOR_1
0x4002a62	          0x4839c8	                            cmp rax, rcx	      1669	ops.c	FUNCTION_31	FOR_1
0x4002a65	            0x75d8	                           jne 0x4002a3f	      1669	ops.c	FUNCTION_31	FOR_1
0x4002a67	    0x48c705000000	               mov qword [0x04002a72], 0	      1671	ops.c	FUNCTION_31
0x4002a72	    0x833d00000000	               cmp dword [0x04002a79], 0	      1672	ops.c	FUNCTION_31	IF_1
0x4002a79	            0x750b	                           jne 0x4002a86	      1672	ops.c	FUNCTION_31	IF_1
0x4002a7b	    0x48c705000000	               mov qword [0x04002a86], 0	      1673	ops.c	FUNCTION_31	IF_1
0x4002a86	    0x48c705000000	               mov qword [0x04002a91], 0	      1674	ops.c	FUNCTION_31
0x4002a91	        0x4883c408	                              add rsp, 8	      1675	ops.c	FUNCTION_31
0x4002a95	              0xc3	                                     ret	      1675	ops.c	FUNCTION_31
do_put	CALL,105:ELSE,27:WHILE,1:FOR,8:functions,0:IF,100:SWITCH,0:DO,1	1279
0x4007960	            0x4157	                                push r15	      3462	ops.c	FUNCTION_48
0x4007962	            0x4156	                                push r14	      3462	ops.c	FUNCTION_48
0x4007964	            0x4155	                                push r13	      3462	ops.c	FUNCTION_48
0x4007966	            0x4154	                                push r12	      3462	ops.c	FUNCTION_48
0x4007968	              0x55	                                push rbp	      3462	ops.c	FUNCTION_48
0x4007969	              0x53	                                push rbx	      3462	ops.c	FUNCTION_48
0x400796a	    0x4881ecd80000	                           sub rsp, 0xd8	      3462	ops.c	FUNCTION_48
0x4007971	    0x89bc249c0000	             mov dword [rsp + 0x9c], edi	      3462	ops.c	FUNCTION_48
0x4007978	          0x4189f5	                           mov r13d, esi	      3462	ops.c	FUNCTION_48
0x400797b	        0x48891424	                    mov qword [rsp], rdx	      3462	ops.c	FUNCTION_48
0x400797f	            0x89cb	                            mov ebx, ecx	      3462	ops.c	FUNCTION_48
0x4007981	        0x894c2458	             mov dword [rsp + 0x58], ecx	      3462	ops.c	FUNCTION_48
0x4007985	    0x64488b042528	                mov rax, qword fs:[0x28]	      3462	ops.c	FUNCTION_48
0x400798e	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      3462	ops.c	FUNCTION_48
0x4007996	            0x31c0	                            xor eax, eax	      3462	ops.c	FUNCTION_48
0x4007998	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      3488	ops.c	FUNCTION_48
0x40079a4	    0xc78424a80000	               mov dword [rsp + 0xa8], 0	      3489	ops.c	FUNCTION_48
0x40079af	    0x488dbc249c00	                   lea rdi, [rsp + 0x9c]	      3494	ops.c	FUNCTION_48	CALL_1
0x40079b7	      0xe800000000	                          call 0x40079bc	      3494	ops.c	FUNCTION_48	CALL_1
0x40079bc	    0x8bbc249c0000	            mov edi, dword [rsp + 0x9c] 	      3495	ops.c	FUNCTION_48	CALL_2
0x40079c3	      0xe800000000	                          call 0x40079c8	      3495	ops.c	FUNCTION_48	CALL_2
0x40079c8	    0xc74424080000	                  mov dword [rsp + 8], 0	      3483	ops.c	FUNCTION_48
0x40079d0	            0x89d8	                            mov eax, ebx	      3498	ops.c	FUNCTION_48	IF_1
0x40079d2	          0x83e001	                              and eax, 1	      3498	ops.c	FUNCTION_48	IF_1
0x40079d5	        0x89442410	             mov dword [rsp + 0x10], eax	      3498	ops.c	FUNCTION_48	IF_1
0x40079d9	            0x7409	                            je 0x40079e4	      3498	ops.c	FUNCTION_48	IF_1
0x40079db	      0xe800000000	                          call 0x40079e0	      3499	ops.c	FUNCTION_48	CALL_3
0x40079e0	        0x89442408	                mov dword [rsp + 8], eax	      3499	ops.c	FUNCTION_48	CALL_3
0x40079e4	    0x488b05000000	            mov rax, qword [0x040079eb] 	      3501	ops.c	FUNCTION_48
0x40079eb	    0x488b15000000	            mov rdx, qword [0x040079f2] 	      3501	ops.c	FUNCTION_48
0x40079f2	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3501	ops.c	FUNCTION_48
0x40079f6	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3501	ops.c	FUNCTION_48
0x40079fa	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3501	ops.c	FUNCTION_48
0x4007a01	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3501	ops.c	FUNCTION_48
0x4007a08	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3502	ops.c	FUNCTION_48
0x4007a0c	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3502	ops.c	FUNCTION_48
0x4007a10	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3502	ops.c	FUNCTION_48
0x4007a17	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3502	ops.c	FUNCTION_48
0x4007a1e	    0x8bbc249c0000	            mov edi, dword [rsp + 0x9c] 	      3508	ops.c	FUNCTION_48	IF_2
0x4007a25	          0x83ff2e	                           cmp edi, 0x2e	      3508	ops.c	FUNCTION_48	IF_2
0x4007a28	            0x7575	                           jne 0x4007a9f	      3508	ops.c	FUNCTION_48	IF_2
0x4007a2a	    0x833d00000000	               cmp dword [0x04007a31], 0	      3510	ops.c	FUNCTION_48	IF_2	IF_3
0x4007a31	            0x740b	                            je 0x4007a3e	      3510	ops.c	FUNCTION_48	IF_2	IF_3
0x4007a33	    0x8b3d00000000	            mov edi, dword [0x04007a39] 	      3511	ops.c	FUNCTION_48	IF_2	CALL_4
0x4007a39	      0xe800000000	                          call 0x4007a3e	      3511	ops.c	FUNCTION_48	IF_2	CALL_4
0x4007a3e	        0x4183fd01	                             cmp r13d, 1	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4007a42	            0x7514	                           jne 0x4007a58	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4007a44	      0x48833c24ff	     cmp qword [rsp], 0xffffffffffffffff	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4007a49	      0xbf61000000	                           mov edi, 0x61	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4007a4e	      0xb86f000000	                           mov eax, 0x6f	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4007a53	           0xf44f8	                          cmove edi, eax	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4007a56	            0xeb12	                           jmp 0x4007a6a	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4007a58	      0x48833c24ff	     cmp qword [rsp], 0xffffffffffffffff	      3513	ops.c	FUNCTION_48	IF_2
0x4007a5d	      0xbf69000000	                           mov edi, 0x69	      3513	ops.c	FUNCTION_48	IF_2
0x4007a62	      0xb84f000000	                           mov eax, 0x4f	      3513	ops.c	FUNCTION_48	IF_2
0x4007a67	           0xf44f8	                          cmove edi, eax	      3513	ops.c	FUNCTION_48	IF_2
0x4007a6a	      0xba00000000	                              mov edx, 0	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4007a6f	        0x488b3424	                    mov rsi, qword [rsp]	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4007a73	      0xe800000000	                          call 0x4007a78	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4007a78	      0xf644245802	               test byte [rsp + 0x58], 2	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4007a7d	     0xf8452160000	                            je 0x40090d5	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4007a83	      0xe800000000	                          call 0x4007a88	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4007a88	            0x85c0	                           test eax, eax	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4007a8a	     0xf8445160000	                            je 0x40090d5	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4007a90	      0xbf6c000000	                           mov edi, 0x6c	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x4007a95	      0xe800000000	                          call 0x4007a9a	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x4007a9a	      0xe936160000	                           jmp 0x40090d5	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x4007a9f	      0xb901000000	                              mov ecx, 1	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007aa4	    0x488d9424a800	                   lea rdx, [rsp + 0xa8]	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007aac	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007ab4	      0xe800000000	                          call 0x4007ab9	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007ab9	            0x85c0	                           test eax, eax	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007abb	            0x740f	                            je 0x4007acc	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4007abd	    0x4883bc24c000	               cmp qword [rsp + 0xc0], 0	      3527	ops.c	FUNCTION_48	IF_5	IF_6
0x4007ac6	     0xf8409160000	                            je 0x40090d5	      3527	ops.c	FUNCTION_48	IF_5	IF_6
0x4007acc	    0x488b05000000	            mov rax, qword [0x04007ad3] 	      3533	ops.c	FUNCTION_48	CALL_9
0x4007ad3	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3533	ops.c	FUNCTION_48	CALL_9
0x4007ad7	        0x488d7701	                      lea rsi, [rdi + 1]	      3533	ops.c	FUNCTION_48	CALL_9
0x4007adb	      0xe800000000	                          call 0x4007ae0	      3533	ops.c	FUNCTION_48	CALL_9
0x4007ae0	    0x4883bc24c000	               cmp qword [rsp + 0xc0], 0	      3535	ops.c	FUNCTION_48	IF_7
0x4007ae9	     0xf84be000000	                            je 0x4007bad	      3535	ops.c	FUNCTION_48	IF_7
0x4007aef	    0x83bc249c0000	           cmp dword [rsp + 0x9c], 0x3d 	      3539	ops.c	FUNCTION_48	IF_7	IF_8
0x4007af7	     0xf853a150000	                           jne 0x4009037	      3539	ops.c	FUNCTION_48	IF_7	IF_8
0x4007afd	    0x41bc00000000	                             mov r12d, 0	      3539	ops.c	FUNCTION_48	IF_7	IF_8
0x4007b03	    0x41be00000000	                             mov r14d, 0	      3539	ops.c	FUNCTION_48	IF_7	IF_8
0x4007b09	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x4007b11	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x4007b19	      0xbb01000000	                              mov ebx, 1	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4007b1e	            0xeb51	                           jmp 0x4007b71	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4007b20	          0x4d85e4	                           test r12, r12	      3550	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x4007b23	     0xf8415140000	                            je 0x4008f3e	      3550	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x4007b29	      0x49897cdcf8	        mov qword [r12 + rbx*8 - 8], rdi	      3551	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x4007b2e	          0x4989df	                            mov r15, rbx	      3552	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4007b31	      0xbe0a000000	                            mov esi, 0xa	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4007b36	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4007b3e	      0xe800000000	                          call 0x4007b43	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4007b43	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4007b4b	          0x4885c0	                           test rax, rax	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4007b4e	            0x741d	                            je 0x4007b6d	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4007b50	          0xc60000	                       mov byte [rax], 0	      3557	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x4007b53	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4007b5b	        0x488d5001	                      lea rdx, [rax + 1]	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4007b5f	    0x48899424b000	             mov qword [rsp + 0xb0], rdx	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4007b67	        0x80780100	                   cmp byte [rax + 1], 0	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4007b6b	            0x7417	                            je 0x4007b84	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4007b6d	        0x4883c301	                              add rbx, 1	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4007b71	        0x4c8d7bff	                      lea r15, [rbx - 1]	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4007b75	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4007b7d	          0x4885ff	                           test rdi, rdi	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4007b80	            0x759e	                           jne 0x4007b20	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4007b82	            0xeb06	                           jmp 0x4007b8a	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4007b84	    0x41be01000000	                             mov r14d, 1	      3562	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4007b8a	          0x4d85e4	                           test r12, r12	      3567	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_13
0x4007b8d	            0x754d	                           jne 0x4007bdc	      3567	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_13
0x4007b8f	    0x428d3cfd0000	                        lea edi, [r15*8]	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x4007b97	      0xe800000000	                          call 0x4007b9c	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x4007b9c	          0x4989c4	                            mov r12, rax	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x4007b9f	          0x4885c0	                           test rax, rax	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x4007ba2	     0xf8561ffffff	                           jne 0x4007b09	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x4007ba8	      0xe954130000	                           jmp 0x4008f01	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x4007bad	      0xbe00000000	                              mov esi, 0	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x4007bb2	    0x8bbc249c0000	            mov edi, dword [rsp + 0x9c] 	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x4007bb9	      0xe800000000	                          call 0x4007bbe	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x4007bbe	    0x488b05000000	            mov rax, qword [0x04007bc5] 	      3586	ops.c	FUNCTION_48	ELSE_2
0x4007bc5	      0x440fb67010	          movzx r14d, byte [rax + 0x10] 	      3586	ops.c	FUNCTION_48	ELSE_2
0x4007bca	        0x48634814	         movsxd rcx, dword [rax + 0x14] 	      3587	ops.c	FUNCTION_48	ELSE_2
0x4007bce	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      3587	ops.c	FUNCTION_48	ELSE_2
0x4007bd3	        0x4c8b7808	                mov r15, qword [rax + 8]	      3588	ops.c	FUNCTION_48	ELSE_2
0x4007bd7	          0x4c8b20	                    mov r12, qword [rax]	      3589	ops.c	FUNCTION_48	ELSE_2
0x4007bda	            0xeb09	                           jmp 0x4007be5	      3589	ops.c	FUNCTION_48	ELSE_2
0x4007bdc	    0x48c744244800	               mov qword [rsp + 0x48], 0	      3473	ops.c	FUNCTION_48
0x4007be5	        0x4183fe01	                             cmp r14d, 1	      3592	ops.c	FUNCTION_48	IF_15
0x4007be9	     0xf8583010000	                           jne 0x4007d72	      3592	ops.c	FUNCTION_48	IF_15
0x4007bef	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3480	ops.c	FUNCTION_48
0x4007bf8	      0xf644245810	           test byte [rsp + 0x58], 0x10 	      3594	ops.c	FUNCTION_48	IF_15	IF_16
0x4007bfd	     0xf8402010000	                            je 0x4007d05	      3594	ops.c	FUNCTION_48	IF_15	IF_16
0x4007c03	      0xe800000000	                          call 0x4007c08	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x4007c08	            0x85c0	                           test eax, eax	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x4007c0a	     0xf84f1120000	                            je 0x4008f01	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x4007c10	      0xe800000000	                          call 0x4007c15	      3602	ops.c	FUNCTION_48	IF_15	IF_16	CALL_14
0x4007c15	          0x4889c3	                            mov rbx, rax	      3602	ops.c	FUNCTION_48	IF_15	IF_16	CALL_14
0x4007c18	        0x4183fd01	                             cmp r13d, 1	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x4007c1c	            0x7521	                           jne 0x4007c3f	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x4007c1e	          0x803800	                       cmp byte [rax], 0	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x4007c21	            0x741c	                            je 0x4007c3f	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x4007c23	      0xb801000000	                              mov eax, 1	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4007c28	    0x833d00000000	               cmp dword [0x04007c2f], 0	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4007c2f	            0x7409	                            je 0x4007c3a	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4007c31	          0x4889df	                            mov rdi, rbx	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4007c34	    0xff1500000000	                 call qword [0x04007c3a]	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4007c3a	            0x4898	                                    cdqe	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4007c3c	          0x4801c3	                            add rbx, rax	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4007c3f	          0x4889df	                            mov rdi, rbx	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x4007c42	      0xe800000000	                          call 0x4007c47	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x4007c47	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x4007c4f	          0x4885c0	                           test rax, rax	      3606	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x4007c52	     0xf84a9120000	                            je 0x4008f01	      3606	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x4007c58	    0x488b15000000	            mov rdx, qword [0x04007c5f] 	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4007c5f	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4007c63	      0xb900000000	                              mov ecx, 0	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4007c68	      0xba00000000	                              mov edx, 0	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4007c6d	          0x4889c6	                            mov rsi, rax	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4007c70	      0xe800000000	                          call 0x4007c75	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4007c75	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      3609	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x4007c7d	      0xe800000000	                          call 0x4007c82	      3609	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x4007c82	      0xe800000000	                          call 0x4007c87	      3611	ops.c	FUNCTION_48	IF_15	IF_16	CALL_19
0x4007c87	          0x4889c5	                            mov rbp, rax	      3611	ops.c	FUNCTION_48	IF_15	IF_16	CALL_19
0x4007c8a	    0x488b05000000	            mov rax, qword [0x04007c91] 	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x4007c91	        0x48635840	         movsxd rbx, dword [rax + 0x40] 	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x4007c95	          0x4801eb	                            add rbx, rbp	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x4007c98	        0x4183fd01	                             cmp r13d, 1	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x4007c9c	            0x7521	                           jne 0x4007cbf	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x4007c9e	          0x803b00	                       cmp byte [rbx], 0	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x4007ca1	            0x741c	                            je 0x4007cbf	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x4007ca3	      0xb801000000	                              mov eax, 1	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007ca8	    0x833d00000000	               cmp dword [0x04007caf], 0	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007caf	            0x7409	                            je 0x4007cba	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007cb1	          0x4889df	                            mov rdi, rbx	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007cb4	    0xff1500000000	                 call qword [0x04007cba]	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007cba	            0x4898	                                    cdqe	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007cbc	          0x4801c3	                            add rbx, rax	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007cbf	          0x4889de	                            mov rsi, rbx	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x4007cc2	          0x4829ee	                            sub rsi, rbp	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x4007cc5	          0x4889ef	                            mov rdi, rbp	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x4007cc8	      0xe800000000	                          call 0x4007ccd	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x4007ccd	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x4007cd5	          0x4885c0	                           test rax, rax	      3616	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x4007cd8	     0xf8423120000	                            je 0x4008f01	      3616	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x4007cde	    0x488b15000000	            mov rdx, qword [0x04007ce5] 	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x4007ce5	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x4007ce9	      0xba00000000	                              mov edx, 0	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x4007cee	          0x4889c6	                            mov rsi, rax	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x4007cf1	      0xe800000000	                          call 0x4007cf6	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x4007cf6	    0x48c744242001	               mov qword [rsp + 0x20], 1	      3619	ops.c	FUNCTION_48	IF_15	IF_16
0x4007cff	    0x41bd01000000	                             mov r13d, 1	      3620	ops.c	FUNCTION_48	IF_15	IF_16
0x4007d05	      0xf644245820	           test byte [rsp + 0x58], 0x20 	      3622	ops.c	FUNCTION_48	IF_15	IF_22
0x4007d0a	            0x742a	                            je 0x4007d36	      3622	ops.c	FUNCTION_48	IF_15	IF_22
0x4007d0c	    0x488b05000000	            mov rax, qword [0x04007d13] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4007d13	    0x488b88080300	           mov rcx, qword [rax + 0x308] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4007d1a	    0x488b98100300	           mov rbx, qword [rax + 0x310] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4007d21	    0x488b05000000	            mov rax, qword [0x04007d28] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4007d28	        0x48894838	             mov qword [rax + 0x38], rcx	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4007d2c	        0x48895840	             mov qword [rax + 0x40], rbx	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4007d30	    0x41bd01000000	                             mov r13d, 1	      3626	ops.c	FUNCTION_48	IF_15	IF_22
0x4007d36	    0x488b05000000	            mov rax, qword [0x04007d3d] 	      3628	ops.c	FUNCTION_48	IF_15
0x4007d3d	    0x488b15000000	            mov rdx, qword [0x04007d44] 	      3628	ops.c	FUNCTION_48	IF_15
0x4007d44	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3628	ops.c	FUNCTION_48	IF_15
0x4007d48	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3628	ops.c	FUNCTION_48	IF_15
0x4007d4c	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3628	ops.c	FUNCTION_48	IF_15
0x4007d53	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3628	ops.c	FUNCTION_48	IF_15
0x4007d5a	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3629	ops.c	FUNCTION_48	IF_15
0x4007d5e	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3629	ops.c	FUNCTION_48	IF_15
0x4007d62	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3629	ops.c	FUNCTION_48	IF_15
0x4007d69	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3629	ops.c	FUNCTION_48	IF_15
0x4007d70	            0xeb09	                           jmp 0x4007d7b	      3629	ops.c	FUNCTION_48	IF_15
0x4007d72	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3480	ops.c	FUNCTION_48
0x4007d7b	      0xf644245808	               test byte [rsp + 0x58], 8	      3632	ops.c	FUNCTION_48	IF_23
0x4007d80	     0xf85db110000	                           jne 0x4008f61	      3632	ops.c	FUNCTION_48	IF_23
0x4007d86	          0x4d85ff	                           test r15, r15	      3635	ops.c	FUNCTION_48	IF_24
0x4007d89	            0x7405	                            je 0x4007d90	      3635	ops.c	FUNCTION_48	IF_24
0x4007d8b	          0x4d85e4	                           test r12, r12	      3635	ops.c	FUNCTION_48	IF_24
0x4007d8e	            0x753c	                           jne 0x4007dcc	      3635	ops.c	FUNCTION_48	IF_24
0x4007d90	    0x8bbc249c0000	            mov edi, dword [rsp + 0x9c] 	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007d97	      0xbb00000000	                              mov ebx, 0	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007d9c	            0x85ff	                           test edi, edi	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007d9e	            0x7408	                            je 0x4007da8	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007da0	      0xe800000000	                          call 0x4007da5	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007da5	          0x4889c3	                            mov rbx, rax	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007da8	      0xba05000000	                              mov edx, 5	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007dad	      0xbe00000000	                              mov esi, 0	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007db2	      0xbf00000000	                              mov edi, 0	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007db7	      0xe800000000	                          call 0x4007dbc	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007dbc	          0x4889de	                            mov rsi, rbx	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007dbf	          0x4889c7	                            mov rdi, rax	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007dc2	      0xe800000000	                          call 0x4007dc7	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x4007dc7	      0xe935110000	                           jmp 0x4008f01	      3639	ops.c	FUNCTION_48	IF_24
0x4007dcc	        0x4183fe02	                             cmp r14d, 2	      3642	ops.c	FUNCTION_48	IF_25
0x4007dd0	            0x7551	                           jne 0x4007e23	      3642	ops.c	FUNCTION_48	IF_25
0x4007dd2	    0x488b05000000	            mov rax, qword [0x04007dd9] 	      3644	ops.c	FUNCTION_48	IF_25
0x4007dd9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3644	ops.c	FUNCTION_48	IF_25
0x4007ddd	      0x4a8d4c3801	                lea rcx, [rax + r15 + 1]	      3644	ops.c	FUNCTION_48	IF_25
0x4007de2	    0x48898c24b800	             mov qword [rsp + 0xb8], rcx	      3644	ops.c	FUNCTION_48	IF_25
0x4007dea	    0x488b15000000	            mov rdx, qword [0x04007df1] 	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x4007df1	          0x488b12	                    mov rdx, qword [rdx]	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x4007df4	          0x4839d1	                            cmp rcx, rdx	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x4007df7	            0x7e0c	                           jle 0x4007e05	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x4007df9	        0x4883c201	                              add rdx, 1	      3646	ops.c	FUNCTION_48	IF_25	IF_26
0x4007dfd	    0x48899424b800	             mov qword [rsp + 0xb8], rdx	      3646	ops.c	FUNCTION_48	IF_25	IF_26
0x4007e05	        0x488d78ff	                      lea rdi, [rax - 1]	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4007e09	    0x488bb424b800	            mov rsi, qword [rsp + 0xb8] 	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4007e11	      0xe800000000	                          call 0x4007e16	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4007e16	            0x85c0	                           test eax, eax	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4007e18	     0xf84e3100000	                            je 0x4008f01	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4007e1e	      0xe955110000	                           jmp 0x4008f78	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4007e23	        0x4183fe01	                             cmp r14d, 1	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007e27	     0xf8521010000	                           jne 0x4007f4e	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007e2d	            0xeb20	                           jmp 0x4007e4f	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007e2f	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	      3579	ops.c	FUNCTION_48	IF_7	ELSE_1
0x4007e37	    0x48c744244800	               mov qword [rsp + 0x48], 0	      3473	ops.c	FUNCTION_48
0x4007e40	    0x41bf01000000	                             mov r15d, 1	      3578	ops.c	FUNCTION_48	IF_7	ELSE_1
0x4007e46	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3480	ops.c	FUNCTION_48
0x4007e4f	    0x488b05000000	            mov rax, qword [0x04007e56] 	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007e56	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007e5a	    0x4889bc24b800	             mov qword [rsp + 0xb8], rdi	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007e62	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      3656	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_29
0x4007e66	            0x7514	                           jne 0x4007e7c	      3656	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_29
0x4007e68	      0xba00000000	                              mov edx, 0	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x4007e6d	    0x488db424b800	                   lea rsi, [rsp + 0xb8]	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x4007e75	      0xe800000000	                          call 0x4007e7a	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x4007e7a	            0xeb21	                           jmp 0x4007e9d	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x4007e7c	    0x488d9424b800	                   lea rdx, [rsp + 0xb8]	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x4007e84	      0xbe00000000	                              mov esi, 0	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x4007e89	      0xe800000000	                          call 0x4007e8e	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x4007e8e	        0x4183fd01	                             cmp r13d, 1	      3661	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x4007e92	            0x7509	                           jne 0x4007e9d	      3661	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x4007e94	    0x48838424b800	               add qword [rsp + 0xb8], 1	      3662	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x4007e9d	    0x488b05000000	            mov rax, qword [0x04007ea4] 	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ea4	        0x48833801	                      cmp qword [rax], 1	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ea8	            0x7525	                           jne 0x4007ecf	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007eaa	      0xbf01000000	                              mov edi, 1	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007eaf	      0xe800000000	                          call 0x4007eb4	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007eb4	          0x803800	                       cmp byte [rax], 0	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007eb7	            0x7516	                           jne 0x4007ecf	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007eb9	      0xbe02000000	                              mov esi, 2	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ebe	      0xbf00000000	                              mov edi, 0	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ec3	      0xe800000000	                          call 0x4007ec8	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ec8	            0x85c0	                           test eax, eax	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007eca	           0xf94c0	                                 sete al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ecd	            0xeb16	                           jmp 0x4007ee5	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ecf	    0x488bb424b800	            mov rsi, qword [rsp + 0xb8] 	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ed7	        0x488d7eff	                      lea rdi, [rsi - 1]	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007edb	      0xe800000000	                          call 0x4007ee0	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ee0	            0x85c0	                           test eax, eax	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ee2	           0xf94c0	                                 sete al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ee5	            0x84c0	                             test al, al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007ee7	     0xf8514100000	                           jne 0x4008f01	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007eed	        0x4183fd01	                             cmp r13d, 1	      3668	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007ef1	            0x7519	                           jne 0x4007f0c	      3668	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007ef3	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007efb	        0x4883e801	                              sub rax, 1	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007eff	    0x488b15000000	            mov rdx, qword [0x04007f06] 	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007f06	        0x48894238	             mov qword [rdx + 0x38], rax	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007f0a	            0xeb13	                           jmp 0x4007f1f	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007f0c	    0x488b9424b800	            mov rdx, qword [rsp + 0xb8] 	      3671	ops.c	FUNCTION_48	ELSE_3	IF_28	ELSE_5
0x4007f14	    0x488b05000000	            mov rax, qword [0x04007f1b] 	      3671	ops.c	FUNCTION_48	ELSE_3	IF_28	ELSE_5
0x4007f1b	        0x48895038	             mov qword [rax + 0x38], rdx	      3671	ops.c	FUNCTION_48	ELSE_3	IF_28	ELSE_5
0x4007f1f	    0x488b05000000	            mov rax, qword [0x04007f26] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007f26	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007f2a	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007f2e	    0x488b05000000	            mov rax, qword [0x04007f35] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007f35	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007f3c	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007f43	    0x41be01000000	                             mov r14d, 1	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007f49	      0xe92a100000	                           jmp 0x4008f78	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007f4e	      0xe800000000	                          call 0x4007f53	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x4007f53	            0x85c0	                           test eax, eax	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x4007f55	     0xf84a60f0000	                            je 0x4008f01	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x4007f5b	        0x498b3c24	                    mov rdi, qword [r12]	      3678	ops.c	FUNCTION_48	CALL_33
0x4007f5f	      0xb800000000	                              mov eax, 0	      3678	ops.c	FUNCTION_48	CALL_33
0x4007f64	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3678	ops.c	FUNCTION_48	CALL_33
0x4007f6b	            0xf2ae	              repne scasb al, byte [rdi]	      3678	ops.c	FUNCTION_48	CALL_33
0x4007f6d	          0x4889c8	                            mov rax, rcx	      3678	ops.c	FUNCTION_48	CALL_33
0x4007f70	          0x48f7d0	                                 not rax	      3678	ops.c	FUNCTION_48	CALL_33
0x4007f73	        0x488d58ff	                      lea rbx, [rax - 1]	      3678	ops.c	FUNCTION_48	CALL_33
0x4007f77	        0x895c2450	             mov dword [rsp + 0x50], ebx	      3678	ops.c	FUNCTION_48	CALL_33
0x4007f7b	          0x4585f6	                         test r14d, r14d	      3681	ops.c	FUNCTION_48	IF_34
0x4007f7e	       0xf94442430	                  sete byte [rsp + 0x30]	      3681	ops.c	FUNCTION_48	IF_34
0x4007f83	       0xfb6442430	           movzx eax, byte [rsp + 0x30] 	      3681	ops.c	FUNCTION_48	IF_34
0x4007f88	    0x833d00000000	               cmp dword [0x04007f8f], 4	      3681	ops.c	FUNCTION_48	IF_34
0x4007f8f	     0xf85d8100000	                           jne 0x400906d	      3681	ops.c	FUNCTION_48	IF_34
0x4007f95	            0x84c0	                             test al, al	      3681	ops.c	FUNCTION_48	IF_34
0x4007f97	     0xf84d0100000	                            je 0x400906d	      3681	ops.c	FUNCTION_48	IF_34
0x4007f9d	      0xe800000000	                          call 0x4007fa2	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x4007fa2	          0x83f809	                              cmp eax, 9	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x4007fa5	            0x7561	                           jne 0x4008008	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x4007fa7	        0x4183fd01	                             cmp r13d, 1	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fab	            0x7525	                           jne 0x4007fd2	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fad	    0x488b05000000	            mov rax, qword [0x04007fb4] 	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fb4	        0x48635044	         movsxd rdx, dword [rax + 0x44] 	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fb8	    0x488b05000000	            mov rax, qword [0x04007fbf] 	      3688	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fbf	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fc6	        0x4883e801	                              sub rax, 1	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fca	          0x4839c2	                            cmp rdx, rax	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fcd	           0xf9cc0	                                 setl al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fd0	            0xeb0e	                           jmp 0x4007fe0	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fd2	    0x488b05000000	            mov rax, qword [0x04007fd9] 	      3689	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fd9	        0x83784400	               cmp dword [rax + 0x44], 0	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fdd	           0xf9fc0	                                 setg al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fe0	            0x84c0	                             test al, al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fe2	            0x7411	                            je 0x4007ff5	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007fe4	      0xe800000000	                          call 0x4007fe9	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x4007fe9	            0x89c7	                            mov edi, eax	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x4007feb	      0xe800000000	                          call 0x4007ff0	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x4007ff0	      0xe978100000	                           jmp 0x400906d	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x4007ff5	    0x488b05000000	            mov rax, qword [0x04007ffc] 	      3692	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x4007ffc	    0xc74044000000	               mov dword [rax + 0x44], 0	      3692	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x4008003	      0xe965100000	                           jmp 0x400906d	      3692	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x4008008	    0x488b05000000	            mov rax, qword [0x0400800f] 	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400800f	        0x83784400	               cmp dword [rax + 0x44], 0	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4008013	            0x7f0d	                            jg 0x4008022	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4008015	      0xe800000000	                          call 0x400801a	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400801a	            0x85c0	                           test eax, eax	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400801c	     0xf854b100000	                           jne 0x400906d	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4008022	      0xe800000000	                          call 0x4008027	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4008027	        0x4183fd01	                             cmp r13d, 1	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400802b	        0x400f94c7	                                sete dil	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400802f	        0x400fb6ff	                          movzx edi, dil	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4008033	             0x1c7	                            add edi, eax	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4008035	      0xe800000000	                          call 0x400803a	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400803a	      0xe92e100000	                           jmp 0x400906d	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400803f	      0xe800000000	                          call 0x4008044	      3707	ops.c	FUNCTION_48	IF_38	CALL_40
0x4008044	            0x89c3	                            mov ebx, eax	      3707	ops.c	FUNCTION_48	IF_38	CALL_40
0x4008046	    0xc78424ac0000	               mov dword [rsp + 0xac], 0	      3708	ops.c	FUNCTION_48	IF_38
0x4008051	        0x4183fd01	                             cmp r13d, 1	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008055	        0x410f94c6	                               sete r14b	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008059	            0x85c0	                           test eax, eax	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400805b	        0x400f95c5	                               setne bpl	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400805f	          0x4584f6	                         test r14b, r14b	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008062	     0xf84ae000000	                            je 0x4008116	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008068	          0x4084ed	                           test bpl, bpl	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400806b	     0xf84a5000000	                            je 0x4008116	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x4008071	    0x833d00000000	               cmp dword [0x04008078], 4	      3713	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x4008078	            0x7527	                           jne 0x40080a1	      3713	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x400807a	    0x488b3d000000	            mov rdi, qword [0x04008081] 	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4008081	        0x488d7738	                   lea rsi, [rdi + 0x38]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4008085	    0x4c8d8424ac00	                    lea r8, [rsp + 0xac]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400808d	      0xb900000000	                              mov ecx, 0	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4008092	    0x488d9424a400	                   lea rdx, [rsp + 0xa4]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400809a	      0xe800000000	                          call 0x400809f	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400809f	            0xeb22	                           jmp 0x40080c3	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x40080a1	    0x488b3d000000	            mov rdi, qword [0x040080a8] 	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x40080a8	        0x488d7738	                   lea rsi, [rdi + 0x38]	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x40080ac	    0x4c8d8424a400	                    lea r8, [rsp + 0xa4]	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x40080b4	      0xb900000000	                              mov ecx, 0	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x40080b9	      0xba00000000	                              mov edx, 0	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x40080be	      0xe800000000	                          call 0x40080c3	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x40080c3	    0x833d00000000	               cmp dword [0x040080ca], 0	      3720	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x40080ca	            0x7427	                            je 0x40080f3	      3720	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x40080cc	    0x488b05000000	            mov rax, qword [0x040080d3] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40080d3	      0x4889442408	                mov qword [rsp + 8], rax	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40080d8	      0xe800000000	                          call 0x40080dd	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40080dd	          0x4889c7	                            mov rdi, rax	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40080e0	      0x488b442408	                mov rax, qword [rsp + 8]	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40080e5	            0xffd0	                                call rax	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40080e7	    0x488b15000000	            mov rdx, qword [0x040080ee] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40080ee	           0x14240	             add dword [rdx + 0x40], eax	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40080f1	            0xeb19	                           jmp 0x400810c	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x40080f3	          0x83fb09	                              cmp ebx, 9	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x40080f6	            0x7509	                           jne 0x4008101	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x40080f8	    0x833d00000000	               cmp dword [0x040080ff], 4	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x40080ff	            0x740b	                            je 0x400810c	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4008101	    0x488b05000000	            mov rax, qword [0x04008108] 	      3728	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4008108	        0x83404001	               add dword [rax + 0x40], 1	      3728	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400810c	    0x838424a40000	               add dword [rsp + 0xa4], 1	      3729	ops.c	FUNCTION_48	IF_38	IF_39
0x4008114	            0xeb25	                           jmp 0x400813b	      3729	ops.c	FUNCTION_48	IF_38	IF_39
0x4008116	    0x488b3d000000	            mov rdi, qword [0x0400811d] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400811d	        0x488d7738	                   lea rsi, [rdi + 0x38]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x4008121	    0x4c8d8424ac00	                    lea r8, [rsp + 0xac]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x4008129	      0xb900000000	                              mov ecx, 0	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400812e	    0x488d9424a400	                   lea rdx, [rsp + 0xa4]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x4008136	      0xe800000000	                          call 0x400813b	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400813b	    0x488b05000000	            mov rax, qword [0x04008142] 	      3735	ops.c	FUNCTION_48	IF_38
0x4008142	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      3735	ops.c	FUNCTION_48	IF_38
0x4008145	            0x89ca	                            mov edx, ecx	      3735	ops.c	FUNCTION_48	IF_38
0x4008147	     0x39424a40000	             add edx, dword [rsp + 0xa4]	      3735	ops.c	FUNCTION_48	IF_38
0x400814e	    0x899424a40000	             mov dword [rsp + 0xa4], edx	      3735	ops.c	FUNCTION_48	IF_38
0x4008155	    0x833d00000000	               cmp dword [0x0400815c], 4	      3736	ops.c	FUNCTION_48	IF_38	IF_43
0x400815c	            0x7569	                           jne 0x40081c7	      3736	ops.c	FUNCTION_48	IF_38	IF_43
0x400815e	            0x85c9	                           test ecx, ecx	      3737	ops.c	FUNCTION_48	IF_38	IF_43
0x4008160	            0x7f0c	                            jg 0x400816e	      3737	ops.c	FUNCTION_48	IF_38	IF_43
0x4008162	    0x8b8c24ac0000	            mov ecx, dword [rsp + 0xac] 	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x4008169	          0x394840	            cmp dword [rax + 0x40], ecx 	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x400816c	            0x7559	                           jne 0x40081c7	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x400816e	            0x85db	                           test ebx, ebx	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4008170	            0x750f	                           jne 0x4008181	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4008172	          0x4584f6	                         test r14b, r14b	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4008175	            0x740a	                            je 0x4008181	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4008177	          0x83c201	                              add edx, 1	      3741	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x400817a	    0x899424a40000	             mov dword [rsp + 0xa4], edx	      3741	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4008181	        0x4183fd01	                             cmp r13d, 1	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x4008185	            0x7409	                            je 0x4008190	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x4008187	          0x4084ed	                           test bpl, bpl	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400818a	            0x7404	                            je 0x4008190	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400818c	        0x83404001	               add dword [rax + 0x40], 1	      3743	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x4008190	          0x83fb09	                              cmp ebx, 9	      3744	ops.c	FUNCTION_48	IF_38	IF_43	IF_46
0x4008193	            0x7532	                           jne 0x40081c7	      3744	ops.c	FUNCTION_48	IF_38	IF_43	IF_46
0x4008195	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x4008199	            0x750f	                           jne 0x40081aa	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400819b	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400819e	            0x85d2	                           test edx, edx	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x40081a0	            0x7425	                            je 0x40081c7	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x40081a2	          0x83ea01	                              sub edx, 1	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x40081a5	          0x895040	             mov dword [rax + 0x40], edx	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x40081a8	            0xeb1d	                           jmp 0x40081c7	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x40081aa	        0x4183fd01	                             cmp r13d, 1	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40081ae	            0x7517	                           jne 0x40081c7	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40081b0	    0x8b8c24a40000	            mov ecx, dword [rsp + 0xa4] 	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40081b7	          0x8d51ff	                      lea edx, [rcx - 1]	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40081ba	    0x3b9424ac0000	            cmp edx, dword [rsp + 0xac] 	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40081c1	            0x7504	                           jne 0x40081c7	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40081c3	        0x83404001	               add dword [rax + 0x40], 1	      3749	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40081c7	    0xc74044000000	               mov dword [rax + 0x44], 0	      3752	ops.c	FUNCTION_48	IF_38
0x40081ce	          0x4d85ff	                           test r15, r15	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40081d1	     0xf8ec9030000	                           jle 0x40085a0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40081d7	    0xc74424400000	               mov dword [rsp + 0x40], 0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40081df	    0xc78424980000	               mov dword [rsp + 0x98], 0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40081ea	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40081f3	    0xc78424800000	               mov dword [rsp + 0x80], 0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40081fe	        0x488b0424	                    mov rax, qword [rsp]	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008202	        0x4883e801	                              sub rax, 1	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008206	      0x4889442408	                mov qword [rsp + 8], rax	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x400820b	    0x4c89bc248800	             mov qword [rsp + 0x88], r15	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4008213	    0x488b05000000	            mov rax, qword [0x0400821a] 	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400821a	          0x488b38	                    mov rdi, qword [rax]	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400821d	    0x488b05000000	            mov rax, qword [0x04008224] 	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x4008224	        0x48397838	            cmp qword [rax + 0x38], rdi 	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x4008228	            0x7e22	                           jle 0x400824c	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400822a	      0xb900000000	                              mov ecx, 0	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400822f	      0xba01000000	                              mov edx, 1	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4008234	      0xbe00000000	                              mov esi, 0	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4008239	      0xe800000000	                          call 0x400823e	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400823e	            0x85c0	                           test eax, eax	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4008240	     0xf846d030000	                            je 0x40085b3	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4008246	    0x488344242001	               add qword [rsp + 0x20], 1	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400824c	      0xe800000000	                          call 0x4008251	      3774	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_46
0x4008251	          0x4889c6	                            mov rsi, rax	      3774	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_46
0x4008254	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x400825b	      0x4889442428	             mov qword [rsp + 0x28], rax	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x4008260	          0x4889c7	                            mov rdi, rax	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x4008263	      0xb800000000	                              mov eax, 0	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x4008268	            0xf2ae	              repne scasb al, byte [rdi]	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x400826a	          0x48f7d1	                                 not rcx	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x400826d	        0x488d41ff	                      lea rax, [rcx - 1]	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x4008271	      0x4889442450	             mov qword [rsp + 0x50], rax	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x4008276	    0x4889b424b000	             mov qword [rsp + 0xb0], rsi	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400827e	    0x8b8424a40000	            mov eax, dword [rsp + 0xa4] 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008285	            0x85c0	                           test eax, eax	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008287	     0xf8e3f0d0000	                           jle 0x4008fcc	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400828d	          0x803e00	                       cmp byte [rsi], 0	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008290	     0xf840b0e0000	                            je 0x40090a1	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4008296	      0xbb00000000	                              mov ebx, 0	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400829b	          0x4889f5	                            mov rbp, rsi	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400829e	            0x89da	                            mov edx, ebx	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x40082a0	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x40082a8	          0x4889ef	                            mov rdi, rbp	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x40082ab	      0xe800000000	                          call 0x40082b0	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x40082b0	             0x1c3	                            add ebx, eax	      3780	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40082b2	    0x8b9424a40000	            mov edx, dword [rsp + 0xa4] 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40082b9	            0x39da	                            cmp edx, ebx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40082bb	     0xf8e120d0000	                           jle 0x4008fd3	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40082c1	    0x488b8c24b000	            mov rcx, qword [rsp + 0xb0] 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40082c9	          0x803900	                       cmp byte [rcx], 0	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40082cc	            0x75d0	                           jne 0x400829e	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40082ce	    0x898424980000	             mov dword [rsp + 0x98], eax	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40082d5	            0x89d0	                            mov eax, edx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40082d7	      0xe9ca0d0000	                           jmp 0x40090a6	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40082dc	          0x803900	                       cmp byte [rcx], 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x40082df	       0xf94442478	                  sete byte [rsp + 0x78]	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x40082e4	    0xc74424300000	               mov dword [rsp + 0x30], 0	      3761	ops.c	FUNCTION_48	IF_38	FOR_2
0x40082ec	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      3760	ops.c	FUNCTION_48	IF_38	FOR_2
0x40082f4	    0xc74424680000	               mov dword [rsp + 0x68], 0	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x40082fc	      0xe98f000000	                           jmp 0x4008390	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008301	            0x39c3	                            cmp ebx, eax	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008303	            0x7e6e	                           jle 0x4008373	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008305	            0x29c3	                            sub ebx, eax	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008307	        0x895c2430	             mov dword [rsp + 0x30], ebx	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400830b	    0x8b8424980000	            mov eax, dword [rsp + 0x98] 	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008312	            0x29d8	                            sub eax, ebx	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008314	        0x8944245c	             mov dword [rsp + 0x5c], eax	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4008318	          0x8d42ff	                      lea eax, [rdx - 1]	      3792	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400831b	        0x89442440	             mov dword [rsp + 0x40], eax	      3792	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400831f	    0x833d00000000	               cmp dword [0x04008326], 0	      3795	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x4008326	            0x741e	                            je 0x4008346	      3795	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x4008328	            0x89c3	                            mov ebx, eax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400832a	          0x4863f0	                         movsxd rsi, eax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400832d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x4008332	          0x4801c6	                            add rsi, rax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x4008335	          0x4889c7	                            mov rdi, rax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x4008338	    0xff1500000000	                 call qword [0x0400833e]	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400833e	            0x89d9	                            mov ecx, ebx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x4008340	            0x29c1	                            sub ecx, eax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x4008342	        0x894c2440	             mov dword [rsp + 0x40], ecx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x4008346	      0x4863442440	         movsxd rax, dword [rsp + 0x40] 	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400834b	      0xc644247800	                mov byte [rsp + 0x78], 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008350	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008355	        0x803c0109	                 cmp byte [rcx + rax], 9	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008359	      0xba00000000	                              mov edx, 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400835e	       0xf44542430	           cmove edx, dword [rsp + 0x30]	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008363	        0x89542430	             mov dword [rsp + 0x30], edx	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008367	           0xf94c0	                                 sete al	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400836a	           0xfb6c0	                           movzx eax, al	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400836d	        0x89442468	             mov dword [rsp + 0x68], eax	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008371	            0xeb1d	                           jmp 0x4008390	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008373	      0xc644247800	                mov byte [rsp + 0x78], 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008378	    0xc74424300000	               mov dword [rsp + 0x30], 0	      3761	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008380	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      3760	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008388	    0xc74424680000	               mov dword [rsp + 0x68], 0	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008390	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008395	          0x4989c5	                            mov r13, rax	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008398	        0x498b3cc4	            mov rdi, qword [r12 + rax*8]	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x400839c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x40083a3	      0xb800000000	                              mov eax, 0	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x40083a8	            0xf2ae	              repne scasb al, byte [rdi]	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x40083aa	          0x48f7d1	                                 not rcx	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x40083ad	        0x4c8d71ff	                      lea r14, [rcx - 1]	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x40083b1	      0x4489742410	            mov dword [rsp + 0x10], r14d	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x40083b6	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      3811	ops.c	FUNCTION_48	IF_38	FOR_2
0x40083ba	          0x8d6801	                      lea ebp, [rax + 1]	      3811	ops.c	FUNCTION_48	IF_38	FOR_2
0x40083bd	          0x4d63fe	                        movsxd r15, r14d	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x40083c0	          0x4d85ff	                           test r15, r15	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x40083c3	            0x7e26	                           jle 0x40083eb	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x40083c5	      0xbb00000000	                              mov ebx, 0	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x40083ca	          0x4889de	                            mov rsi, rbx	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x40083cd	        0x4b0334ec	            add rsi, qword [r12 + r13*8]	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x40083d1	      0xba00000000	                              mov edx, 0	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x40083d6	      0xbf00000000	                              mov edi, 0	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x40083db	      0xe800000000	                          call 0x40083e0	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x40083e0	            0x29c5	                            sub ebp, eax	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x40083e2	        0x4883c301	                              add rbx, 1	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x40083e6	          0x4c39fb	                            cmp rbx, r15	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x40083e9	            0x7cdf	                            jl 0x40083ca	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x40083eb	            0x85ed	                           test ebp, ebp	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x40083ed	      0xb800000000	                              mov eax, 0	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x40083f2	           0xf48e8	                          cmovs ebp, eax	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x40083f5	          0x4101ee	                           add r14d, ebp	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40083f8	      0x440faf3424	                  imul r14d, dword [rsp]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40083fd	      0x448b7c245c	           mov r15d, dword [rsp + 0x5c] 	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008402	          0x4489f8	                           mov eax, r15d	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008405	         0x3442430	             add eax, dword [rsp + 0x30]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008409	          0x4101c6	                           add r14d, eax	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x400840c	    0x4489b4248000	            mov dword [rsp + 0x80], r14d	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008414	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x4008419	      0x418d7c0e01	                lea edi, [r14 + rcx + 1]	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x400841e	      0xe800000000	                          call 0x4008423	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x4008423	      0x4889442460	             mov qword [rsp + 0x60], rax	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x4008428	          0x4885c0	                           test rax, rax	      3820	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x400842b	     0xf8482010000	                            je 0x40085b3	      3820	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x4008431	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3823	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008439	      0x48634c2440	         movsxd rcx, dword [rsp + 0x40] 	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x400843e	          0x4889cb	                            mov rbx, rcx	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4008441	      0x48894c2470	             mov qword [rsp + 0x70], rcx	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4008446	          0x4889ca	                            mov rdx, rcx	        59	string3.h	FUNCTION_93	CALL_3
0x4008449	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        59	string3.h	FUNCTION_93	CALL_3
0x400844e	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x4008451	      0xe800000000	                          call 0x4008456	        59	string3.h	FUNCTION_93	CALL_3
0x4008456	          0x4889df	                            mov rdi, rbx	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008459	    0x4803bc24b000	             add rdi, qword [rsp + 0xb0]	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008461	    0x4889bc24b000	             mov qword [rsp + 0xb0], rdi	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008469	          0x4963df	                        movsxd rbx, r15d	      3827	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x400846c	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_95	CALL_6
0x400846f	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4008474	      0xe800000000	                          call 0x4008479	        90	string3.h	FUNCTION_95	CALL_6
0x4008479	    0x48019c24b000	            add qword [rsp + 0xb0], rbx 	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008481	      0x48833c2400	                      cmp qword [rsp], 0	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008486	            0x7e75	                           jle 0x40084fd	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4008488	      0xbb00000000	                              mov ebx, 0	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400848d	      0x4c63742410	         movsxd r14, dword [rsp + 0x10] 	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4008492	          0x4c63fd	                         movsxd r15, ebp	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4008495	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x400849a	    0x440fb67c2478	          movzx r15d, byte [rsp + 0x78] 	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x40084a0	        0x4b8b34ec	            mov rsi, qword [r12 + r13*8]	        59	string3.h	FUNCTION_93	CALL_3
0x40084a4	          0x4c89f2	                            mov rdx, r14	        59	string3.h	FUNCTION_93	CALL_3
0x40084a7	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	        59	string3.h	FUNCTION_93	CALL_3
0x40084af	      0xe800000000	                          call 0x40084b4	        59	string3.h	FUNCTION_93	CALL_3
0x40084b4	          0x4c89f7	                            mov rdi, r14	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x40084b7	    0x4803bc24b000	             add rdi, qword [rsp + 0xb0]	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x40084bf	    0x4889bc24b000	             mov qword [rsp + 0xb0], rdi	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x40084c7	      0x48395c2408	                cmp qword [rsp + 8], rbx	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x40084cc	            0x7f05	                            jg 0x40084d3	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x40084ce	          0x4584ff	                         test r15b, r15b	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x40084d1	            0x7520	                           jne 0x40084f3	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x40084d3	            0x85ed	                           test ebp, ebp	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x40084d5	            0x741c	                            je 0x40084f3	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x40084d7	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        90	string3.h	FUNCTION_95	CALL_6
0x40084dc	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x40084e1	      0xe800000000	                          call 0x40084e6	        90	string3.h	FUNCTION_95	CALL_6
0x40084e6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x40084eb	    0x48018424b000	            add qword [rsp + 0xb0], rax 	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x40084f3	        0x4883c301	                              add rbx, 1	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x40084f7	        0x48391c24	                    cmp qword [rsp], rbx	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x40084fb	            0x75a3	                           jne 0x40084a0	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x40084fd	      0x48635c2430	         movsxd rbx, dword [rsp + 0x30] 	      3843	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x4008502	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_95	CALL_6
0x4008505	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400850a	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	        90	string3.h	FUNCTION_95	CALL_6
0x4008512	      0xe800000000	                          call 0x4008517	        90	string3.h	FUNCTION_95	CALL_6
0x4008517	    0x48039c24b000	             add rbx, qword [rsp + 0xb0]	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x400851f	          0x4889df	                            mov rdi, rbx	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008522	    0x48899c24b000	             mov qword [rsp + 0xb0], rbx	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x400852a	        0x8b542450	            mov edx, dword [rsp + 0x50] 	        59	string3.h	FUNCTION_93	CALL_3
0x400852e	        0x2b542440	             sub edx, dword [rsp + 0x40]	        59	string3.h	FUNCTION_93	CALL_3
0x4008532	        0x8b442468	            mov eax, dword [rsp + 0x68] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008536	            0x29c2	                            sub edx, eax	        59	string3.h	FUNCTION_93	CALL_3
0x4008538	          0x83c201	                              add edx, 1	        59	string3.h	FUNCTION_93	CALL_3
0x400853b	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_93	CALL_3
0x400853e	          0x4863f0	                         movsxd rsi, eax	        59	string3.h	FUNCTION_93	CALL_3
0x4008541	      0x4803742470	             add rsi, qword [rsp + 0x70]	        59	string3.h	FUNCTION_93	CALL_3
0x4008546	      0x4803742428	             add rsi, qword [rsp + 0x28]	        59	string3.h	FUNCTION_93	CALL_3
0x400854b	      0xe800000000	                          call 0x4008550	        59	string3.h	FUNCTION_93	CALL_3
0x4008550	    0x488b05000000	            mov rax, qword [0x04008557] 	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4008557	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x400855b	      0xba00000000	                              mov edx, 0	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4008560	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4008565	      0xe800000000	                          call 0x400856a	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x400856a	    0x488b05000000	            mov rax, qword [0x04008571] 	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008571	      0x4883403801	               add qword [rax + 0x38], 1	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008576	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      3851	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x400857c	            0x7507	                           jne 0x4008585	      3851	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x400857e	        0x8b4c245c	            mov ecx, dword [rsp + 0x5c] 	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4008582	           0x14840	             add dword [rax + 0x40], ecx	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4008585	    0x488344241801	               add qword [rsp + 0x18], 1	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400858b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008590	    0x483b84248800	            cmp rax, qword [rsp + 0x88] 	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008598	     0xf8575fcffff	                           jne 0x4008213	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400859e	            0xeb13	                           jmp 0x40085b3	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40085a0	    0xc74424400000	               mov dword [rsp + 0x40], 0	      3754	ops.c	FUNCTION_48	IF_38
0x40085a8	    0xc78424800000	               mov dword [rsp + 0x80], 0	      3466	ops.c	FUNCTION_48
0x40085b3	    0x488b05000000	            mov rax, qword [0x040085ba] 	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x40085ba	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x40085be	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x40085c3	      0xbe00000000	                              mov esi, 0	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x40085c8	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x40085d0	      0xe800000000	                          call 0x40085d5	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x40085d5	    0x488b15000000	            mov rdx, qword [0x040085dc] 	      3858	ops.c	FUNCTION_48	IF_38
0x40085dc	    0x488b0d000000	            mov rcx, qword [0x040085e3] 	      3858	ops.c	FUNCTION_48	IF_38
0x40085e3	        0x488b7940	            mov rdi, qword [rcx + 0x40] 	      3858	ops.c	FUNCTION_48	IF_38
0x40085e7	    0x4889bae81100	          mov qword [rdx + 0x11e8], rdi 	      3858	ops.c	FUNCTION_48	IF_38
0x40085ee	    0x488bb424b800	            mov rsi, qword [rsp + 0xb8] 	      3859	ops.c	FUNCTION_48	IF_38
0x40085f6	    0x4889b2e01100	          mov qword [rdx + 0x11e0], rsi 	      3859	ops.c	FUNCTION_48	IF_38
0x40085fd	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      3862	ops.c	FUNCTION_48	IF_38
0x4008601	        0x4883e801	                              sub rax, 1	      3862	ops.c	FUNCTION_48	IF_38
0x4008605	    0x488982001200	          mov qword [rdx + 0x1200], rax 	      3862	ops.c	FUNCTION_48	IF_38
0x400860c	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      3863	ops.c	FUNCTION_48	IF_38
0x4008613	         0x3442440	             add eax, dword [rsp + 0x40]	      3863	ops.c	FUNCTION_48	IF_38
0x4008617	          0x8d78ff	                      lea edi, [rax - 1]	      3863	ops.c	FUNCTION_48	IF_38
0x400861a	    0x89ba08120000	          mov dword [rdx + 0x1208], edi 	      3863	ops.c	FUNCTION_48	IF_38
0x4008620	    0xc7820c120000	            mov dword [rdx + 0x120c], 0 	      3865	ops.c	FUNCTION_48	IF_38
0x400862a	      0xf644245802	               test byte [rsp + 0x58], 2	      3867	ops.c	FUNCTION_48	IF_38	IF_59
0x400862f	            0x7451	                            je 0x4008682	      3867	ops.c	FUNCTION_48	IF_38	IF_59
0x4008631	    0x488bb2001200	          mov rsi, qword [rdx + 0x1200] 	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x4008638	    0x488bba081200	          mov rdi, qword [rdx + 0x1208] 	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x400863f	        0x48897138	             mov qword [rcx + 0x38], rsi	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x4008643	        0x48897940	             mov qword [rcx + 0x40], rdi	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x4008647	          0x894140	             mov dword [rcx + 0x40], eax	      3872	ops.c	FUNCTION_48	IF_38	IF_59
0x400864a	      0xe800000000	                          call 0x400864f	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x400864f	          0x4889c7	                            mov rdi, rax	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x4008652	      0xb800000000	                              mov eax, 0	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x4008657	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x400865e	            0xf2ae	              repne scasb al, byte [rdi]	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x4008660	          0x4889c8	                            mov rax, rcx	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x4008663	          0x48f7d0	                                 not rax	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x4008666	        0x4883e801	                              sub rax, 1	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x400866a	    0x488b15000000	            mov rdx, qword [0x04008671] 	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4008671	          0x3b4240	            cmp eax, dword [rdx + 0x40] 	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4008674	     0xf8d6f080000	                           jge 0x4008ee9	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x400867a	          0x894240	             mov dword [rdx + 0x40], eax	      3877	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x400867d	      0xe967080000	                           jmp 0x4008ee9	      3877	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4008682	        0x48897138	             mov qword [rcx + 0x38], rsi	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x4008686	      0xe95e080000	                           jmp 0x4008ee9	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x400868b	      0x807c243000	                cmp byte [rsp + 0x30], 0	      3887	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4008690	     0xf84a4000000	                            je 0x400873a	      3887	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4008696	        0x4183fd01	                             cmp r13d, 1	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x400869a	            0x7572	                           jne 0x400870e	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x400869c	      0xe800000000	                          call 0x40086a1	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x40086a1	            0x85c0	                           test eax, eax	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x40086a3	            0x7469	                            je 0x400870e	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x40086a5	    0x833d00000000	               cmp dword [0x040086ac], 0	      3894	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x40086ac	            0x7438	                            je 0x40086e6	      3894	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x40086ae	    0x488b2d000000	            mov rbp, qword [0x040086b5] 	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x40086b5	      0xe800000000	                          call 0x40086ba	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x40086ba	          0x4889c7	                            mov rdi, rax	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x40086bd	            0xffd5	                                call rbp	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x40086bf	     0x18424a40000	             add dword [rsp + 0xa4], eax	      3899	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x40086c6	      0x837c245000	               cmp dword [rsp + 0x50], 0	      3900	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40086cb	            0x7441	                            je 0x400870e	      3900	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40086cd	    0x488b15000000	            mov rdx, qword [0x040086d4] 	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40086d4	           0x14240	             add dword [rdx + 0x40], eax	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40086d7	    0x488b15000000	            mov rdx, qword [0x040086de] 	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40086de	     0x18208120000	           add dword [rdx + 0x1208], eax	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40086e4	            0xeb28	                           jmp 0x400870e	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x40086e6	    0x838424a40000	               add dword [rsp + 0xa4], 1	      3909	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15
0x40086ee	      0x837c245000	               cmp dword [rsp + 0x50], 0	      3910	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40086f3	            0x7419	                            je 0x400870e	      3910	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40086f5	    0x488b05000000	            mov rax, qword [0x040086fc] 	      3912	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x40086fc	        0x83404001	               add dword [rax + 0x40], 1	      3912	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4008700	    0x488b05000000	            mov rax, qword [0x04008707] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4008707	    0x838008120000	             add dword [rax + 0x1208], 1	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400870e	    0x488b15000000	            mov rdx, qword [0x04008715] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4008715	    0x488b05000000	            mov rax, qword [0x0400871c] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x400871c	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4008720	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4008724	    0x4889b2e01100	          mov qword [rdx + 0x11e0], rsi 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x400872b	    0x4889bae81100	          mov qword [rdx + 0x11e8], rdi 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4008732	        0x4983ff01	                              cmp r15, 1	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008736	            0x7452	                            je 0x400878a	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008738	            0xeb1b	                           jmp 0x4008755	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400873a	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      3922	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x400873e	     0xf85b9080000	                           jne 0x4008ffd	      3922	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4008744	        0x4883ea01	                              sub rdx, 1	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4008748	    0x48899424b800	             mov qword [rsp + 0xb8], rdx	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4008750	      0xe9a8080000	                           jmp 0x4008ffd	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4008755	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x4008759	      0x48894c2478	             mov qword [rsp + 0x78], rcx	      3924	ops.c	FUNCTION_48	ELSE_14
0x400875e	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x4008761	    0x898c24980000	             mov dword [rsp + 0x98], ecx	      3924	ops.c	FUNCTION_48	ELSE_14
0x4008768	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x400876b	    0x898424880000	             mov dword [rsp + 0x88], eax	      3924	ops.c	FUNCTION_48	ELSE_14
0x4008772	      0x48833c2400	                      cmp qword [rsp], 0	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008777	     0xf8f1b020000	                            jg 0x4008998	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400877d	    0xc74424600000	               mov dword [rsp + 0x60], 0	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008785	      0xe992050000	                           jmp 0x4008d1c	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400878a	    0x48c744240800	                  mov qword [rsp + 8], 0	      3931	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008793	    0x833d00000000	               cmp dword [0x0400879a], 0	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x400879a	            0x741a	                            je 0x40087b6	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x400879c	    0x4c8bba080300	           mov r15, qword [rdx + 0x308] 	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x40087a3	    0x488b82f80200	           mov rax, qword [rdx + 0x2f8] 	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x40087aa	          0x4939c7	                            cmp r15, rax	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x40087ad	        0x490f4dc7	                         cmovge rax, r15	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x40087b1	      0x4889442408	                mov qword [rsp + 8], rax	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x40087b6	            0x89d8	                            mov eax, ebx	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x40087b8	        0x4c8b2c24	                    mov r13, qword [rsp]	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x40087bc	        0x410fafc5	                          imul eax, r13d	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x40087c0	        0x89442418	             mov dword [rsp + 0x18], eax	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x40087c4	          0x4189c6	                           mov r14d, eax	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x40087c7	          0x8d4801	                      lea ecx, [rax + 1]	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x40087ca	        0x894c2410	             mov dword [rsp + 0x10], ecx	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x40087ce	          0x83e801	                              sub eax, 1	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x40087d1	        0x89442428	             mov dword [rsp + 0x28], eax	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x40087d5	      0x48636c2450	         movsxd rbp, dword [rsp + 0x50] 	      3957	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x40087da	          0x4585f6	                         test r14d, r14d	      3942	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x40087dd	     0xf8eac080000	                           jle 0x400908f	      3942	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x40087e3	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      3944	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x40087eb	      0xe800000000	                          call 0x40087f0	      3944	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x40087f0	        0x48890424	                    mov qword [rsp], rax	      3944	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x40087f4	    0x833d00000000	               cmp dword [0x040087fb], 0	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x40087fb	            0x742f	                            je 0x400882c	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x40087fd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4008804	          0x4889c7	                            mov rdi, rax	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4008807	      0xb800000000	                              mov eax, 0	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x400880c	            0xf2ae	              repne scasb al, byte [rdi]	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x400880e	          0x48f7d1	                                 not rcx	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4008811	        0x488d41ff	                      lea rax, [rcx - 1]	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4008815	    0x398424a40000	            cmp dword [rsp + 0xa4], eax 	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x400881c	            0x7e0e	                           jle 0x400882c	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x400881e	    0x48838424b800	               add qword [rsp + 0xb8], 1	      3947	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x4008827	      0xe9f3070000	                           jmp 0x400901f	      3948	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x400882c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4008833	        0x488b3c24	                    mov rdi, qword [rsp]	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4008837	      0xb800000000	                              mov eax, 0	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400883c	            0xf2ae	              repne scasb al, byte [rdi]	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400883e	          0x48f7d1	                                 not rcx	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4008841	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4008845	        0x8d7c08ff	                lea edi, [rax + rcx - 1]	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4008849	      0xe800000000	                          call 0x400884e	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400884e	          0x4989c7	                            mov r15, rax	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4008851	          0x4885c0	                           test rax, rax	      3951	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x4008854	     0xf84a7060000	                            je 0x4008f01	      3951	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x400885a	    0x48639424a400	         movsxd rdx, dword [rsp + 0xa4] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008862	        0x488b3424	                    mov rsi, qword [rsp]	        59	string3.h	FUNCTION_93	CALL_3
0x4008866	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x4008869	      0xe800000000	                          call 0x400886e	        59	string3.h	FUNCTION_93	CALL_3
0x400886e	    0x48638424a400	         movsxd rax, dword [rsp + 0xa4] 	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x4008876	          0x4c01f8	                            add rax, r15	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x4008879	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x4008881	          0x4d85ed	                           test r13, r13	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x4008884	            0x7e2a	                           jle 0x40088b0	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x4008886	      0xbb00000000	                              mov ebx, 0	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400888b	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x400888e	        0x498b3424	                    mov rsi, qword [r12]	        59	string3.h	FUNCTION_93	CALL_3
0x4008892	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	        59	string3.h	FUNCTION_93	CALL_3
0x400889a	      0xe800000000	                          call 0x400889f	        59	string3.h	FUNCTION_93	CALL_3
0x400889f	    0x4801ac24b000	            add qword [rsp + 0xb0], rbp 	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40088a7	        0x4883c301	                              add rbx, 1	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40088ab	          0x4939dd	                            cmp r13, rbx	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40088ae	            0x75db	                           jne 0x400888b	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x40088b0	    0x4863b424a400	         movsxd rsi, dword [rsp + 0xa4] 	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40088b8	        0x48033424	                    add rsi, qword [rsp]	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40088bc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40088c3	          0x4889f7	                            mov rdi, rsi	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40088c6	      0xb800000000	                              mov eax, 0	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40088cb	            0xf2ae	              repne scasb al, byte [rdi]	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40088cd	          0x48f7d1	                                 not rcx	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40088d0	          0x4889ca	                            mov rdx, rcx	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40088d3	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	        59	string3.h	FUNCTION_93	CALL_3
0x40088db	      0xe800000000	                          call 0x40088e0	        59	string3.h	FUNCTION_93	CALL_3
0x40088e0	      0xba00000000	                              mov edx, 0	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x40088e5	          0x4c89fe	                            mov rsi, r15	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x40088e8	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x40088f0	      0xe800000000	                          call 0x40088f5	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x40088f5	    0x488b05000000	            mov rax, qword [0x040088fc] 	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x40088fc	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008904	        0x48394838	            cmp qword [rax + 0x38], rcx 	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008908	     0xf8581070000	                           jne 0x400908f	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400890e	      0xe800000000	                          call 0x4008913	      3966	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73	CALL_72
0x4008913	    0x488b05000000	            mov rax, qword [0x0400891a] 	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400891a	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400891e	           0x14840	             add dword [rax + 0x40], ecx	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008921	      0xe969070000	                           jmp 0x400908f	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008926	    0x48838424b800	               add qword [rsp + 0xb8], 1	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400892f	      0xe9eb060000	                           jmp 0x400901f	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x4008934	        0x4883e801	                              sub rax, 1	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x4008938	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x4008940	    0x488b05000000	            mov rax, qword [0x04008947] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008947	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400894b	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400894f	    0x488b15000000	            mov rdx, qword [0x04008956] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008956	    0x48898a001200	          mov qword [rdx + 0x1200], rcx 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400895d	    0x48899a081200	          mov qword [rdx + 0x1208], rbx 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008964	      0x837c241800	               cmp dword [rsp + 0x18], 0	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x4008969	            0x7414	                            je 0x400897f	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400896b	    0x833d00000000	               cmp dword [0x04008972], 0	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x4008972	            0x7507	                           jne 0x400897b	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x4008974	      0xf644245802	               test byte [rsp + 0x58], 2	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x4008979	            0x7404	                            je 0x400897f	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400897b	        0x83404001	               add dword [rax + 0x40], 1	      3980	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400897f	    0x8bb424a40000	            mov esi, dword [rsp + 0xa4] 	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x4008986	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x400898e	      0xe800000000	                          call 0x4008993	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x4008993	      0xe951050000	                           jmp 0x4008ee9	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x4008998	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x400899d	          0x83e001	                              and eax, 1	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x40089a0	      0x4889442468	             mov qword [rsp + 0x68], rax	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x40089a5	      0x4b8d44fcf8	              lea rax, [r12 + r15*8 - 8]	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x40089aa	    0x488984248000	             mov qword [rsp + 0x80], rax	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x40089b2	    0x48c744241801	               mov qword [rsp + 0x18], 1	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x40089bb	    0xc74424600000	               mov dword [rsp + 0x60], 0	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x40089c3	    0xc74424480100	               mov dword [rsp + 0x48], 1	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x40089cb	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x40089d3	        0x8b442450	            mov eax, dword [rsp + 0x50] 	        59	string3.h	FUNCTION_93	CALL_3
0x40089d7	          0x83c001	                              add eax, 1	        59	string3.h	FUNCTION_93	CALL_3
0x40089da	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_93	CALL_3
0x40089dc	    0x488984249000	             mov qword [rsp + 0x90], rax	        59	string3.h	FUNCTION_93	CALL_3
0x40089e4	        0x498d6fff	                      lea rbp, [r15 - 1]	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40089e8	      0x44896c2470	            mov dword [rsp + 0x70], r13d	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40089ed	          0x4d89fd	                            mov r13, r15	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40089f0	      0x448b7c2410	           mov r15d, dword [rsp + 0x10] 	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40089f5	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40089fa	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40089ff	      0x807c243000	                cmp byte [rsp + 0x30], 0	      3992	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008a04	     0xf843a010000	                            je 0x4008b44	      3992	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008a0a	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008a0f	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008a17	          0x4889c7	                            mov rdi, rax	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x4008a1a	      0xe800000000	                          call 0x4008a1f	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x4008a1f	    0x48639424a400	         movsxd rdx, dword [rsp + 0xa4] 	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x4008a27	          0x4801c2	                            add rdx, rax	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x4008a2a	    0x48899424b000	             mov qword [rsp + 0xb0], rdx	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x4008a32	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008a3a	          0x488b38	                    mov rdi, qword [rax]	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008a3d	      0xb800000000	                              mov eax, 0	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008a42	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008a49	            0xf2ae	              repne scasb al, byte [rdi]	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008a4b	          0x48f7d1	                                 not rcx	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008a4e	          0x4889ce	                            mov rsi, rcx	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008a51	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008a58	          0x4889d7	                            mov rdi, rdx	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008a5b	            0xf2ae	              repne scasb al, byte [rdi]	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008a5d	          0x48f7d1	                                 not rcx	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008a60	        0x8d7c31ff	                lea edi, [rcx + rsi - 1]	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008a64	      0xe800000000	                          call 0x4008a69	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008a69	          0x4889c3	                            mov rbx, rax	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008a6c	          0x4885c0	                           test rax, rax	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x4008a6f	     0xf847c020000	                            je 0x4008cf1	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x4008a75	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       110	string3.h	FUNCTION_98	CALL_3
0x4008a7d	          0x488b30	                    mov rsi, qword [rax]	       110	string3.h	FUNCTION_98	CALL_3
0x4008a80	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_98	CALL_3
0x4008a83	      0xe800000000	                          call 0x4008a88	       110	string3.h	FUNCTION_98	CALL_3
0x4008a88	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	       148	string3.h	FUNCTION_102	CALL_3
0x4008a90	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_102	CALL_3
0x4008a93	      0xe800000000	                          call 0x4008a98	       148	string3.h	FUNCTION_102	CALL_3
0x4008a98	      0xb900000000	                              mov ecx, 0	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x4008a9d	      0xba00000000	                              mov edx, 0	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x4008aa2	          0x4889de	                            mov rsi, rbx	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x4008aa5	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x4008aad	      0xe800000000	                          call 0x4008ab2	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x4008ab2	          0x4889df	                            mov rdi, rbx	      4009	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x4008ab5	      0xe800000000	                          call 0x4008aba	      4009	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x4008aba	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x4008ac2	      0xe800000000	                          call 0x4008ac7	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x4008ac7	      0x4889442420	             mov qword [rsp + 0x20], rax	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x4008acc	        0x8b7c2450	            mov edi, dword [rsp + 0x50] 	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008ad0	     0x3bc24a40000	             add edi, dword [rsp + 0xa4]	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008ad7	          0x83c701	                              add edi, 1	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008ada	      0xe800000000	                          call 0x4008adf	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008adf	          0x4889c3	                            mov rbx, rax	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008ae2	          0x4885c0	                           test rax, rax	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x4008ae5	     0xf8415020000	                            je 0x4008d00	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x4008aeb	    0x48639424a400	         movsxd rdx, dword [rsp + 0xa4] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008af3	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008af8	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x4008afb	      0xe800000000	                          call 0x4008b00	        59	string3.h	FUNCTION_93	CALL_3
0x4008b00	    0x4863bc24a400	         movsxd rdi, dword [rsp + 0xa4] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008b08	          0x4801df	                            add rdi, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4008b0b	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	        59	string3.h	FUNCTION_93	CALL_3
0x4008b13	        0x498b3424	                    mov rsi, qword [r12]	        59	string3.h	FUNCTION_93	CALL_3
0x4008b17	      0xe800000000	                          call 0x4008b1c	        59	string3.h	FUNCTION_93	CALL_3
0x4008b1c	      0xba00000000	                              mov edx, 0	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x4008b21	          0x4889de	                            mov rsi, rbx	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x4008b24	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x4008b2c	      0xe800000000	                          call 0x4008b31	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x4008b31	    0x488b9424b800	            mov rdx, qword [rsp + 0xb8] 	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008b39	    0x488b05000000	            mov rax, qword [0x04008b40] 	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008b40	        0x48895038	             mov qword [rax + 0x38], rdx	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008b44	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008b49	          0x4c39e8	                            cmp rax, r13	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008b4c	     0xf8d7b010000	                           jge 0x4008ccd	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008b52	          0x4889c3	                            mov rbx, rax	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008b55	          0x4585f6	                         test r14d, r14d	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x4008b58	            0x7507	                           jne 0x4008b61	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x4008b5a	      0x48395c2410	            cmp qword [rsp + 0x10], rbx 	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x4008b5f	            0x7e23	                           jle 0x4008b84	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x4008b61	        0x498b34dc	            mov rsi, qword [r12 + rbx*8]	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008b65	      0xb900000000	                              mov ecx, 0	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008b6a	      0xba00000000	                              mov edx, 0	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008b6f	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008b77	      0xe800000000	                          call 0x4008b7c	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008b7c	            0x85c0	                           test eax, eax	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008b7e	     0xf848b010000	                            je 0x4008d0f	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008b84	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008b8c	        0x488d7801	                      lea rdi, [rax + 1]	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008b90	    0x4889bc24b800	             mov qword [rsp + 0xb8], rdi	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008b98	        0x4883c501	                              add rbp, 1	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008b9c	          0x4585ff	                         test r15d, r15d	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008b9f	     0xf841b010000	                            je 0x4008cc0	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008ba5	    0x488b05000000	            mov rax, qword [0x04008bac] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008bac	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008bb0	      0x48894c2440	             mov qword [rsp + 0x40], rcx	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008bb5	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008bb8	        0x894c2428	             mov dword [rsp + 0x28], ecx	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008bbc	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008bbf	        0x894c2420	             mov dword [rsp + 0x20], ecx	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008bc3	        0x48897838	             mov qword [rax + 0x38], rdi	      4036	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008bc7	      0xe800000000	                          call 0x4008bcc	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x4008bcc	          0x4889c2	                            mov rdx, rax	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x4008bcf	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x4008bd7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x4008bdc	        0x48390c24	                    cmp qword [rsp], rcx	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x4008be0	            0x7522	                           jne 0x4008c04	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x4008be2	      0x48395c2410	            cmp qword [rsp + 0x10], rbx 	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x4008be7	            0x751b	                           jne 0x4008c04	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x4008be9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x4008bf0	          0x4889c7	                            mov rdi, rax	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x4008bf3	      0xb800000000	                              mov eax, 0	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x4008bf8	            0xf2ae	              repne scasb al, byte [rdi]	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x4008bfa	          0x48f7d1	                                 not rcx	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x4008bfd	          0x8d41ff	                      lea eax, [rcx - 1]	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x4008c00	        0x89442460	             mov dword [rsp + 0x60], eax	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x4008c04	          0x803a23	                    cmp byte [rdx], 0x23	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x4008c07	            0x750e	                           jne 0x4008c17	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x4008c09	      0xe800000000	                          call 0x4008c0e	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x4008c0e	      0xbf00000000	                              mov edi, 0	      4042	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83
0x4008c13	            0x85c0	                           test eax, eax	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x4008c15	            0x7545	                           jne 0x4008c5c	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x4008c17	      0xbf00000000	                              mov edi, 0	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x4008c1c	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      4045	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x4008c24	          0x803800	                       cmp byte [rax], 0	      4045	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x4008c27	            0x7433	                            je 0x4008c5c	      4045	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x4008c29	      0x837c244800	               cmp dword [rsp + 0x48], 0	      4047	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x4008c2e	            0x741b	                            je 0x4008c4b	      4047	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x4008c30	      0xe800000000	                          call 0x4008c35	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x4008c35	        0x8b7c2408	                mov edi, dword [rsp + 8]	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x4008c39	            0x89f9	                            mov ecx, edi	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x4008c3b	            0x29c1	                            sub ecx, eax	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x4008c3d	        0x894c245c	             mov dword [rsp + 0x5c], ecx	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x4008c41	    0xc74424480000	               mov dword [rsp + 0x48], 0	      4051	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x4008c49	            0xeb11	                           jmp 0x4008c5c	      4051	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x4008c4b	      0xe800000000	                          call 0x4008c50	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008c50	         0x344245c	             add eax, dword [rsp + 0x5c]	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008c54	      0xbf00000000	                              mov edi, 0	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008c59	           0xf49f8	                         cmovns edi, eax	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008c5c	      0xbe00000000	                              mov esi, 0	      4055	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x4008c61	      0xe800000000	                          call 0x4008c66	      4055	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x4008c66	    0x488b05000000	            mov rax, qword [0x04008c6d] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008c6d	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008c72	        0x48894838	             mov qword [rax + 0x38], rcx	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008c76	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008c7a	          0x894840	             mov dword [rax + 0x40], ecx	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008c7d	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008c81	          0x894844	             mov dword [rax + 0x44], ecx	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008c84	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x4008c89	        0x48390c24	                    cmp qword [rsp], rcx	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x4008c8d	            0x7531	                           jne 0x4008cc0	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x4008c8f	      0x48395c2410	            cmp qword [rsp + 0x10], rbx 	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x4008c94	            0x752a	                           jne 0x4008cc0	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x4008c96	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008c9e	      0xe800000000	                          call 0x4008ca3	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008ca3	          0x4889c7	                            mov rdi, rax	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008ca6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008cad	      0xb800000000	                              mov eax, 0	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008cb2	            0xf2ae	              repne scasb al, byte [rdi]	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008cb4	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008cb8	        0x8d440802	                lea eax, [rax + rcx + 2]	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008cbc	        0x89442460	             mov dword [rsp + 0x60], eax	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x4008cc0	        0x4883c301	                              add rbx, 1	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008cc4	          0x4c39eb	                            cmp rbx, r13	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008cc7	     0xf8c88feffff	                            jl 0x4008b55	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008ccd	    0x488344241801	               add qword [rsp + 0x18], 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008cd3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008cd8	        0x48390424	                    cmp qword [rsp], rax	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008cdc	     0xf8d1dfdffff	                           jge 0x40089ff	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008ce2	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008ce7	          0x4d89ef	                            mov r15, r13	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008cea	      0x448b6c2470	           mov r13d, dword [rsp + 0x70] 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008cef	            0xeb2b	                           jmp 0x4008d1c	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008cf1	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008cf6	          0x4d89ef	                            mov r15, r13	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008cf9	      0x448b6c2470	           mov r13d, dword [rsp + 0x70] 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008cfe	            0xeb1c	                           jmp 0x4008d1c	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008d00	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008d05	          0x4d89ef	                            mov r15, r13	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008d08	      0x448b6c2470	           mov r13d, dword [rsp + 0x70] 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008d0d	            0xeb0d	                           jmp 0x4008d1c	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008d0f	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008d14	          0x4d89ef	                            mov r15, r13	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008d17	      0x448b6c2470	           mov r13d, dword [rsp + 0x70] 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008d1c	        0x4183fe01	                             cmp r14d, 1	      4066	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x4008d20	            0x751f	                           jne 0x4008d41	      4066	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x4008d22	    0x488b05000000	            mov rax, qword [0x04008d29] 	      4068	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x4008d29	    0xc780e8110000	            mov dword [rax + 0x11e8], 0 	      4068	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x4008d33	        0x4183fd01	                             cmp r13d, 1	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x4008d37	            0x7508	                           jne 0x4008d41	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x4008d39	    0x488380e01100	             add qword [rax + 0x11e0], 1	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x4008d41	    0x488b05000000	            mov rax, qword [0x04008d48] 	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008d48	       0xfb67c2430	           movzx edi, byte [rsp + 0x30] 	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008d4d	    0x4803b8e01100	           add rdi, qword [rax + 0x11e0]	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008d54	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008d59	      0x488d5439ff	                lea rdx, [rcx + rdi - 1]	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008d5e	          0x483b10	                    cmp rdx, qword [rax]	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008d61	            0x7c10	                            jl 0x4008d73	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008d63	    0x488b05000000	            mov rax, qword [0x04008d6a] 	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008d6a	    0x83b8c0010000	              cmp dword [rax + 0x1c0], 0	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008d71	            0x7414	                            je 0x4008d87	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008d73	      0xb900000000	                              mov ecx, 0	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x4008d78	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x4008d7d	      0xbeffffff7f	                     mov esi, 0x7fffffff	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x4008d82	      0xe800000000	                          call 0x4008d87	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x4008d87	      0x807c243000	                cmp byte [rsp + 0x30], 0	      4084	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x4008d8c	            0x7422	                            je 0x4008db0	      4084	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x4008d8e	    0x488b05000000	            mov rax, qword [0x04008d95] 	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x4008d95	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x4008d99	        0x488d5701	                      lea rdx, [rdi + 1]	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x4008d9d	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x4008da2	    0x8bb424a40000	            mov esi, dword [rsp + 0xa4] 	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x4008da9	      0xe800000000	                          call 0x4008dae	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x4008dae	            0xeb20	                           jmp 0x4008dd0	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x4008db0	    0x488b05000000	            mov rax, qword [0x04008db7] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008db7	    0x488bb8e01100	          mov rdi, qword [rax + 0x11e0] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008dbe	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008dc3	          0x4889fa	                            mov rdx, rdi	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008dc6	      0xbe00000000	                              mov esi, 0	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008dcb	      0xe800000000	                          call 0x4008dd0	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008dd0	    0x488b35000000	            mov rsi, qword [0x04008dd7] 	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x4008dd7	    0x488b9424b800	            mov rdx, qword [rsp + 0xb8] 	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x4008ddf	    0x488996001200	          mov qword [rsi + 0x1200], rdx 	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x4008de6	      0x4b8b7cfcf8	        mov rdi, qword [r12 + r15*8 - 8]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008deb	      0xb800000000	                              mov eax, 0	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008df0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008df7	            0xf2ae	              repne scasb al, byte [rdi]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008df9	          0x4889c8	                            mov rax, rcx	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008dfc	          0x48f7d0	                                 not rax	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008dff	        0x4883e801	                              sub rax, 1	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008e03	        0x2b442460	             sub eax, dword [rsp + 0x60]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008e07	    0x898424a40000	             mov dword [rsp + 0xa4], eax	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008e0e	          0x83f801	                              cmp eax, 1	      4095	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x4008e11	            0x7e0b	                           jle 0x4008e1e	      4095	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x4008e13	          0x8d48ff	                      lea ecx, [rax - 1]	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x4008e16	    0x898e08120000	          mov dword [rsi + 0x1208], ecx 	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x4008e1c	            0xeb0a	                           jmp 0x4008e28	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x4008e1e	    0xc78608120000	            mov dword [rsi + 0x1208], 0 	      4098	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22
0x4008e28	      0xf644245804	               test byte [rsp + 0x58], 4	      4100	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x4008e2d	            0x741a	                            je 0x4008e49	      4100	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x4008e2f	    0x488b05000000	            mov rax, qword [0x04008e36] 	      4103	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x4008e36	        0x48895038	             mov qword [rax + 0x38], rdx	      4103	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x4008e3a	      0xbf05000000	                              mov edi, 5	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x4008e3f	      0xe800000000	                          call 0x4008e44	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x4008e44	      0xe9a0000000	                           jmp 0x4008ee9	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x4008e49	      0xf644245802	               test byte [rsp + 0x58], 2	      4106	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x4008e4e	            0x744a	                            je 0x4008e9a	      4106	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x4008e50	        0x4183fe01	                             cmp r14d, 1	      4109	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95
0x4008e54	            0x7534	                           jne 0x4008e8a	      4109	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95
0x4008e56	          0x488b06	                    mov rax, qword [rsi]	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4008e59	          0x4839c2	                            cmp rdx, rax	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4008e5c	            0x7c0d	                            jl 0x4008e6b	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4008e5e	    0x488b15000000	            mov rdx, qword [0x04008e65] 	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4008e65	        0x48894238	             mov qword [rdx + 0x38], rax	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4008e69	            0xeb0f	                           jmp 0x4008e7a	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4008e6b	        0x4883c201	                              add rdx, 1	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008e6f	    0x488b05000000	            mov rax, qword [0x04008e76] 	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008e76	        0x48895038	             mov qword [rax + 0x38], rdx	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008e7a	    0x488b05000000	            mov rax, qword [0x04008e81] 	      4115	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008e81	    0xc74040000000	               mov dword [rax + 0x40], 0	      4115	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008e88	            0xeb5f	                           jmp 0x4008ee9	      4115	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008e8a	    0x488b0d000000	            mov rcx, qword [0x04008e91] 	      4119	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x4008e91	        0x48895138	             mov qword [rcx + 0x38], rdx	      4119	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x4008e95	          0x894140	             mov dword [rcx + 0x40], eax	      4120	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x4008e98	            0xeb4f	                           jmp 0x4008ee9	      4120	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x4008e9a	        0x4183fe01	                             cmp r14d, 1	      4123	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x4008e9e	            0x7525	                           jne 0x4008ec5	      4123	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x4008ea0	    0x488b05000000	            mov rax, qword [0x04008ea7] 	      4126	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x4008ea7	    0xc74040000000	               mov dword [rax + 0x40], 0	      4126	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x4008eae	        0x4183fd01	                             cmp r13d, 1	      4127	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x4008eb2	            0x7505	                           jne 0x4008eb9	      4127	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x4008eb4	      0x4883403801	               add qword [rax + 0x38], 1	      4128	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x4008eb9	      0xbf05000000	                              mov edi, 5	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x4008ebe	      0xe800000000	                          call 0x4008ec3	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x4008ec3	            0xeb24	                           jmp 0x4008ee9	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x4008ec5	    0x488b05000000	            mov rax, qword [0x04008ecc] 	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008ecc	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008ed1	        0x48894838	             mov qword [rax + 0x38], rcx	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008ed5	    0x8b8c24980000	            mov ecx, dword [rsp + 0x98] 	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008edc	          0x894840	             mov dword [rax + 0x40], ecx	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008edf	    0x8b8c24880000	            mov ecx, dword [rsp + 0x88] 	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008ee6	          0x894844	             mov dword [rax + 0x44], ecx	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x4008ee9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4136	ops.c	FUNCTION_48	CALL_102
0x4008eee	      0xe800000000	                          call 0x4008ef3	      4136	ops.c	FUNCTION_48	CALL_102
0x4008ef3	    0x488b05000000	            mov rax, qword [0x04008efa] 	      4137	ops.c	FUNCTION_48
0x4008efa	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      4137	ops.c	FUNCTION_48
0x4008f01	    0x83bc24a80000	               cmp dword [rsp + 0xa8], 0	      4140	ops.c	FUNCTION_48	IF_99
0x4008f09	            0x740d	                            je 0x4008f18	      4140	ops.c	FUNCTION_48	IF_99
0x4008f0b	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	      4141	ops.c	FUNCTION_48	CALL_103
0x4008f13	      0xe800000000	                          call 0x4008f18	      4141	ops.c	FUNCTION_48	CALL_103
0x4008f18	    0x83bc249c0000	           cmp dword [rsp + 0x9c], 0x3d 	      4142	ops.c	FUNCTION_48	IF_100
0x4008f20	            0x7508	                           jne 0x4008f2a	      4142	ops.c	FUNCTION_48	IF_100
0x4008f22	          0x4c89e7	                            mov rdi, r12	      4143	ops.c	FUNCTION_48	CALL_104
0x4008f25	      0xe800000000	                          call 0x4008f2a	      4143	ops.c	FUNCTION_48	CALL_104
0x4008f2a	    0xc70500000000	               mov dword [0x04008f34], 0	      4145	ops.c	FUNCTION_48
0x4008f34	      0xe800000000	                          call 0x4008f39	      4148	ops.c	FUNCTION_48	CALL_105
0x4008f39	      0xe997010000	                           jmp 0x40090d5	      4148	ops.c	FUNCTION_48	CALL_105
0x4008f3e	          0x4989df	                            mov r15, rbx	      3552	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4008f41	      0xbe0a000000	                            mov esi, 0xa	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4008f46	      0xe800000000	                          call 0x4008f4b	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4008f4b	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4008f53	          0x4885c0	                           test rax, rax	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4008f56	     0xf85f7ebffff	                           jne 0x4007b53	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4008f5c	      0xe90cecffff	                           jmp 0x4007b6d	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4008f61	          0x4d85e4	                           test r12, r12	      3635	ops.c	FUNCTION_48	IF_24
0x4008f64	     0xf8426eeffff	                            je 0x4007d90	      3635	ops.c	FUNCTION_48	IF_24
0x4008f6a	          0x4d85ff	                           test r15, r15	      3635	ops.c	FUNCTION_48	IF_24
0x4008f6d	     0xf841deeffff	                            je 0x4007d90	      3635	ops.c	FUNCTION_48	IF_24
0x4008f73	      0xe9d7eeffff	                           jmp 0x4007e4f	      3635	ops.c	FUNCTION_48	IF_24
0x4008f78	        0x498b3c24	                    mov rdi, qword [r12]	      3678	ops.c	FUNCTION_48	CALL_33
0x4008f7c	      0xb800000000	                              mov eax, 0	      3678	ops.c	FUNCTION_48	CALL_33
0x4008f81	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3678	ops.c	FUNCTION_48	CALL_33
0x4008f88	            0xf2ae	              repne scasb al, byte [rdi]	      3678	ops.c	FUNCTION_48	CALL_33
0x4008f8a	          0x4889c8	                            mov rax, rcx	      3678	ops.c	FUNCTION_48	CALL_33
0x4008f8d	          0x48f7d0	                                 not rax	      3678	ops.c	FUNCTION_48	CALL_33
0x4008f90	        0x488d58ff	                      lea rbx, [rax - 1]	      3678	ops.c	FUNCTION_48	CALL_33
0x4008f94	        0x895c2450	             mov dword [rsp + 0x50], ebx	      3678	ops.c	FUNCTION_48	CALL_33
0x4008f98	          0x4585f6	                         test r14d, r14d	      3681	ops.c	FUNCTION_48	IF_34
0x4008f9b	       0xf94442430	                  sete byte [rsp + 0x30]	      3681	ops.c	FUNCTION_48	IF_34
0x4008fa0	    0x488b05000000	            mov rax, qword [0x04008fa7] 	      3699	ops.c	FUNCTION_48
0x4008fa7	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3699	ops.c	FUNCTION_48
0x4008fab	    0x48899424b800	             mov qword [rsp + 0xb8], rdx	      3699	ops.c	FUNCTION_48
0x4008fb3	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      3700	ops.c	FUNCTION_48
0x4008fb6	    0x898c24a40000	             mov dword [rsp + 0xa4], ecx	      3700	ops.c	FUNCTION_48
0x4008fbd	        0x4183fe02	                             cmp r14d, 2	      3705	ops.c	FUNCTION_48	IF_38
0x4008fc1	     0xf85c4f6ffff	                           jne 0x400868b	      3705	ops.c	FUNCTION_48	IF_38
0x4008fc7	      0xe973f0ffff	                           jmp 0x400803f	      3705	ops.c	FUNCTION_48	IF_38
0x4008fcc	      0xbb00000000	                              mov ebx, 0	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008fd1	            0xeb09	                           jmp 0x4008fdc	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008fd3	    0x898424980000	             mov dword [rsp + 0x98], eax	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008fda	            0x89d0	                            mov eax, edx	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008fdc	    0x488b8c24b000	            mov rcx, qword [rsp + 0xb0] 	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008fe4	          0x4889ca	                            mov rdx, rcx	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008fe7	      0x482b542428	             sub rdx, qword [rsp + 0x28]	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008fec	        0x89542440	             mov dword [rsp + 0x40], edx	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008ff0	            0x39c3	                            cmp ebx, eax	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008ff2	     0xf8509f3ffff	                           jne 0x4008301	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008ff8	      0xe9dff2ffff	                           jmp 0x40082dc	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4008ffd	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x4009001	      0x48894c2478	             mov qword [rsp + 0x78], rcx	      3924	ops.c	FUNCTION_48	ELSE_14
0x4009006	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x4009009	    0x898c24980000	             mov dword [rsp + 0x98], ecx	      3924	ops.c	FUNCTION_48	ELSE_14
0x4009010	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x4009013	    0x898424880000	             mov dword [rsp + 0x88], eax	      3924	ops.c	FUNCTION_48	ELSE_14
0x400901a	      0xe953f7ffff	                           jmp 0x4008772	      3924	ops.c	FUNCTION_48	ELSE_14
0x400901f	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4009027	      0x483b442408	                cmp rax, qword [rsp + 8]	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x400902c	     0xf8ea8f7ffff	                           jle 0x40087da	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4009032	      0xe9fdf8ffff	                           jmp 0x4008934	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4009037	      0xf644245808	               test byte [rsp + 0x58], 8	      3632	ops.c	FUNCTION_48	IF_23
0x400903c	     0xf85ededffff	                           jne 0x4007e2f	      3632	ops.c	FUNCTION_48	IF_23
0x4009042	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	      3579	ops.c	FUNCTION_48	IF_7	ELSE_1
0x400904a	    0x48c744244800	               mov qword [rsp + 0x48], 0	      3473	ops.c	FUNCTION_48
0x4009053	    0x41bf01000000	                             mov r15d, 1	      3578	ops.c	FUNCTION_48	IF_7	ELSE_1
0x4009059	    0x41be00000000	                             mov r14d, 0	      3537	ops.c	FUNCTION_48	IF_7
0x400905f	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3480	ops.c	FUNCTION_48
0x4009068	      0xe919edffff	                           jmp 0x4007d86	      3480	ops.c	FUNCTION_48
0x400906d	    0x488b05000000	            mov rax, qword [0x04009074] 	      3699	ops.c	FUNCTION_48
0x4009074	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3699	ops.c	FUNCTION_48
0x4009078	    0x48899424b800	             mov qword [rsp + 0xb8], rdx	      3699	ops.c	FUNCTION_48
0x4009080	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      3700	ops.c	FUNCTION_48
0x4009083	    0x898c24a40000	             mov dword [rsp + 0xa4], ecx	      3700	ops.c	FUNCTION_48
0x400908a	      0xe9fcf5ffff	                           jmp 0x400868b	      3700	ops.c	FUNCTION_48
0x400908f	    0x833d00000000	               cmp dword [0x04009096], 0	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x4009096	     0xf858af8ffff	                           jne 0x4008926	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400909c	      0xe99ff8ffff	                           jmp 0x4008940	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x40090a1	      0xbb00000000	                              mov ebx, 0	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x40090a6	    0x8b8c24b00000	            mov ecx, dword [rsp + 0xb0] 	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x40090ad	        0x2b4c2428	             sub ecx, dword [rsp + 0x28]	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x40090b1	        0x894c2440	             mov dword [rsp + 0x40], ecx	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x40090b5	            0x29d8	                            sub eax, ebx	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x40090b7	        0x8944245c	             mov dword [rsp + 0x5c], eax	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x40090bb	      0xc644247801	                mov byte [rsp + 0x78], 1	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x40090c0	    0xc74424300000	               mov dword [rsp + 0x30], 0	      3761	ops.c	FUNCTION_48	IF_38	FOR_2
0x40090c8	    0xc74424680000	               mov dword [rsp + 0x68], 0	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x40090d0	      0xe9bbf2ffff	                           jmp 0x4008390	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x40090d5	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      4149	ops.c	FUNCTION_48
0x40090dd	    0x644833042528	                xor rax, qword fs:[0x28]	      4149	ops.c	FUNCTION_48
0x40090e6	            0x7405	                            je 0x40090ed	      4149	ops.c	FUNCTION_48
0x40090e8	      0xe800000000	                          call 0x40090ed	      4149	ops.c	FUNCTION_48
0x40090ed	    0x4881c4d80000	                           add rsp, 0xd8	      4149	ops.c	FUNCTION_48
0x40090f4	              0x5b	                                 pop rbx	      4149	ops.c	FUNCTION_48
0x40090f5	              0x5d	                                 pop rbp	      4149	ops.c	FUNCTION_48
0x40090f6	            0x415c	                                 pop r12	      4149	ops.c	FUNCTION_48
0x40090f8	            0x415d	                                 pop r13	      4149	ops.c	FUNCTION_48
0x40090fa	            0x415e	                                 pop r14	      4149	ops.c	FUNCTION_48
0x40090fc	            0x415f	                                 pop r15	      4149	ops.c	FUNCTION_48
0x40090fe	              0xc3	                                     ret	      4149	ops.c	FUNCTION_48
get_register_name	CALL,0:ELSE,5:WHILE,0:FOR,0:functions,0:IF,7:SWITCH,0:DO,0	18
0x400499e	      0xb822000000	                           mov eax, 0x22	      4211	ops.c	FUNCTION_51	IF_1
0x40049a3	          0x83ffff	             cmp edi, 0xffffffffffffffff	      4210	ops.c	FUNCTION_51	IF_1
0x40049a6	            0x742b	                            je 0x40049d3	      4210	ops.c	FUNCTION_51	IF_1
0x40049a8	          0x83ff09	                              cmp edi, 9	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x40049ab	            0x7f04	                            jg 0x40049b1	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x40049ad	          0x8d4730	                   lea eax, [rdi + 0x30]	      4213	ops.c	FUNCTION_51	ELSE_1	IF_2
0x40049b0	              0xc3	                                     ret	      4213	ops.c	FUNCTION_51	ELSE_1	IF_2
0x40049b1	      0xb82d000000	                           mov eax, 0x2d	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
0x40049b6	          0x83ff24	                           cmp edi, 0x24	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x40049b9	            0x7418	                            je 0x40049d3	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x40049bb	      0xb82a000000	                           mov eax, 0x2a	      4218	ops.c	FUNCTION_51	ELSE_3	IF_4
0x40049c0	          0x83ff25	                           cmp edi, 0x25	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x40049c3	            0x740e	                            je 0x40049d3	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x40049c5	          0x8d4757	                   lea eax, [rdi + 0x57]	      4235	ops.c	FUNCTION_51	ELSE_5
0x40049c8	          0x83ff26	                           cmp edi, 0x26	      4235	ops.c	FUNCTION_51	ELSE_5
0x40049cb	      0xba2b000000	                           mov edx, 0x2b	      4235	ops.c	FUNCTION_51	ELSE_5
0x40049d0	           0xf44c2	                          cmove eax, edx	      4235	ops.c	FUNCTION_51	ELSE_5
0x40049d3	            0xf3c3	                                     ret	      4238	ops.c	FUNCTION_51
write_viminfo_registers	CALL,20:ELSE,2:WHILE,0:FOR,4:functions,0:IF,15:SWITCH,1:DO,0	292
0x4006576	            0x4157	                                push r15	      6312	ops.c	FUNCTION_72
0x4006578	            0x4156	                                push r14	      6312	ops.c	FUNCTION_72
0x400657a	            0x4155	                                push r13	      6312	ops.c	FUNCTION_72
0x400657c	            0x4154	                                push r12	      6312	ops.c	FUNCTION_72
0x400657e	              0x55	                                push rbp	      6312	ops.c	FUNCTION_72
0x400657f	              0x53	                                push rbx	      6312	ops.c	FUNCTION_72
0x4006580	        0x4883ec38	                           sub rsp, 0x38	      6312	ops.c	FUNCTION_72
0x4006584	          0x4989fc	                            mov r12, rdi	      6312	ops.c	FUNCTION_72
0x4006587	      0xba05000000	                              mov edx, 5	      6322	ops.c	FUNCTION_72	CALL_2
0x400658c	      0xbe00000000	                              mov esi, 0	      6322	ops.c	FUNCTION_72	CALL_2
0x4006591	      0xbf00000000	                              mov edi, 0	      6322	ops.c	FUNCTION_72	CALL_2
0x4006596	      0xe800000000	                          call 0x400659b	      6322	ops.c	FUNCTION_72	CALL_2
0x400659b	          0x4c89e6	                            mov rsi, r12	      6322	ops.c	FUNCTION_72	CALL_2
0x400659e	          0x4889c7	                            mov rdi, rax	      6322	ops.c	FUNCTION_72	CALL_2
0x40065a1	      0xe800000000	                          call 0x40065a6	      6322	ops.c	FUNCTION_72	CALL_2
0x40065a6	      0xbf3c000000	                           mov edi, 0x3c	      6325	ops.c	FUNCTION_72	CALL_3
0x40065ab	      0xe800000000	                          call 0x40065b0	      6325	ops.c	FUNCTION_72	CALL_3
0x40065b0	        0x89442414	             mov dword [rsp + 0x14], eax	      6325	ops.c	FUNCTION_72	CALL_3
0x40065b4	            0x85c0	                           test eax, eax	      6326	ops.c	FUNCTION_72	IF_1
0x40065b6	            0x790e	                           jns 0x40065c6	      6326	ops.c	FUNCTION_72	IF_1
0x40065b8	      0xbf22000000	                           mov edi, 0x22	      6327	ops.c	FUNCTION_72	CALL_4
0x40065bd	      0xe800000000	                          call 0x40065c2	      6327	ops.c	FUNCTION_72	CALL_4
0x40065c2	        0x89442414	             mov dword [rsp + 0x14], eax	      6327	ops.c	FUNCTION_72	CALL_4
0x40065c6	      0x837c241400	               cmp dword [rsp + 0x14], 0	      6328	ops.c	FUNCTION_72	IF_2
0x40065cb	     0xf8424040000	                            je 0x40069f5	      6328	ops.c	FUNCTION_72	IF_2
0x40065d1	      0xbf73000000	                           mov edi, 0x73	      6330	ops.c	FUNCTION_72	CALL_5
0x40065d6	      0xe800000000	                          call 0x40065db	      6330	ops.c	FUNCTION_72	CALL_5
0x40065db	        0x89442424	             mov dword [rsp + 0x24], eax	      6330	ops.c	FUNCTION_72	CALL_5
0x40065df	            0x85c0	                           test eax, eax	      6331	ops.c	FUNCTION_72	IF_3
0x40065e1	     0xf840e040000	                            je 0x40069f5	      6331	ops.c	FUNCTION_72	IF_3
0x40065e7	            0x4898	                                    cdqe	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40065e9	        0x48c1e00a	                            shl rax, 0xa	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40065ed	      0x4889442428	             mov qword [rsp + 0x28], rax	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40065f2	    0x41bf00000000	                             mov r15d, 0	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40065f8	    0x41be00000000	                             mov r14d, 0	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40065fe	        0x44893424	                   mov dword [rsp], r14d	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4006602	        0x418d46db	                   lea eax, [r14 - 0x25]	      6343	ops.c	FUNCTION_72	FOR_1	IF_5
0x4006606	          0x83f802	                              cmp eax, 2	      6343	ops.c	FUNCTION_72	FOR_1	IF_5
0x4006609	     0xf866a020000	                           jbe 0x4006879	      6343	ops.c	FUNCTION_72	FOR_1	IF_5
0x400660f	    0x488b05000000	            mov rax, qword [0x04006616] 	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006616	          0x4885c0	                           test rax, rax	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006619	            0x7422	                            je 0x400663d	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x400661b	          0x4c89f3	                            mov rbx, r14	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400661e	        0x48c1e305	                              shl rbx, 5	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006622	          0x4801c3	                            add rbx, rax	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006625	        0x48833b00	                      cmp qword [rbx], 0	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006629	            0x7412	                            je 0x400663d	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400662b	        0x49833f00	                      cmp qword [r15], 0	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400662f	            0x7419	                            je 0x400664a	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006631	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006635	        0x48394318	            cmp qword [rbx + 0x18], rax 	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x4006639	            0x7f0f	                            jg 0x400664a	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400663b	            0xeb0a	                           jmp 0x4006647	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400663d	        0x49833f00	                      cmp qword [r15], 0	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x4006641	     0xf8432020000	                            je 0x4006879	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x4006647	          0x4c89fb	                            mov rbx, r15	      6356	ops.c	FUNCTION_72	FOR_1	ELSE_2
0x400664a	        0x4c8b6b08	                mov r13, qword [rbx + 8]	      6359	ops.c	FUNCTION_72	FOR_1
0x400664e	      0x44896c2410	            mov dword [rsp + 0x10], r13d	      6359	ops.c	FUNCTION_72	FOR_1
0x4006653	          0x4585ed	                         test r13d, r13d	      6360	ops.c	FUNCTION_72	FOR_1	IF_8
0x4006656	     0xf841d020000	                            je 0x4006879	      6360	ops.c	FUNCTION_72	FOR_1	IF_8
0x400665c	        0x4183fd01	                             cmp r13d, 1	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x4006660	            0x751e	                           jne 0x4006680	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x4006662	        0x807b1000	                cmp byte [rbx + 0x10], 0	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x4006666	     0xf8528020000	                           jne 0x4006894	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x400666c	          0x488b03	                    mov rax, qword [rbx]	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x400666f	          0x488b00	                    mov rax, qword [rax]	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x4006672	          0x803800	                       cmp byte [rax], 0	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x4006675	     0xf84fe010000	                            je 0x4006879	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x400667b	      0xe95c030000	                           jmp 0x40069dc	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x4006680	      0x837c242400	               cmp dword [rsp + 0x24], 0	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4006685	            0x7e4a	                           jle 0x40066d1	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4006687	          0x4585ed	                         test r13d, r13d	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x400668a	            0x7e35	                           jle 0x40066c1	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x400668c	          0x4c8b03	                     mov r8, qword [rbx]	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400668f	      0xba00000000	                              mov edx, 0	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x4006694	      0xbe00000000	                              mov esi, 0	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x4006699	      0xb800000000	                              mov eax, 0	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400669e	      0x448b4c2410	            mov r9d, dword [rsp + 0x10] 	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x40066a3	        0x498b3cd0	             mov rdi, qword [r8 + rdx*8]	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x40066a7	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x40066ae	            0xf2ae	              repne scasb al, byte [rdi]	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x40066b0	          0x48f7d1	                                 not rcx	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x40066b3	          0x4801ce	                            add rsi, rcx	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x40066b6	        0x4883c201	                              add rdx, 1	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x40066ba	          0x4139d1	                            cmp r9d, edx	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x40066bd	            0x7fe4	                            jg 0x40066a3	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x40066bf	            0xeb05	                           jmp 0x40066c6	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x40066c1	      0xbe00000000	                              mov esi, 0	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x40066c6	      0x4839742428	            cmp qword [rsp + 0x28], rsi 	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40066cb	     0xf8ca8010000	                            jl 0x4006879	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40066d1	         0xfb66b10	           movzx ebp, byte [rbx + 0x10] 	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40066d5	    0x48c744240800	                  mov qword [rsp + 8], 0	      6378	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40066de	        0x4080fd01	                              cmp bpl, 1	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40066e2	            0x746b	                            je 0x400674f	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40066e4	    0x48c744240800	                  mov qword [rsp + 8], 0	      6381	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40066ed	        0x4080fd01	                              cmp bpl, 1	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40066f1	            0x725c	                            jb 0x400674f	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40066f3	    0x48c744240800	                  mov qword [rsp + 8], 0	      6384	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40066fc	        0x4080fd02	                              cmp bpl, 2	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x4006700	            0x744d	                            je 0x400674f	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x4006702	      0xba05000000	                              mov edx, 5	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x4006707	      0xbe00000000	                              mov esi, 0	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400670c	      0xbf00000000	                              mov edi, 0	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x4006711	      0xe800000000	                          call 0x4006716	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x4006716	        0x440fb6c5	                          movzx r8d, bpl	        33	stdio2.h	FUNCTION_107	CALL_2
0x400671a	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_107	CALL_2
0x400671d	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_107	CALL_2
0x4006724	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_107	CALL_2
0x4006729	    0x488b3d000000	            mov rdi, qword [0x04006730] 	        33	stdio2.h	FUNCTION_107	CALL_2
0x4006730	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_107	CALL_2
0x4006735	      0xe800000000	                          call 0x400673a	        33	stdio2.h	FUNCTION_107	CALL_2
0x400673a	    0x488b3d000000	            mov rdi, qword [0x04006741] 	      6389	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_9
0x4006741	      0xe800000000	                          call 0x4006746	      6389	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_9
0x4006746	    0x48c744240800	                  mov qword [rsp + 8], 0	      6390	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400674f	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x4006754	    0x4c3b3d000000	            cmp r15, qword [0x0400675b] 	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x400675b	            0x750d	                           jne 0x400676a	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x400675d	          0x4c89e6	                            mov rsi, r12	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006760	      0xbf22000000	                           mov edi, 0x22	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006765	      0xe800000000	                          call 0x400676a	        97	stdio2.h	FUNCTION_111	CALL_1
0x400676a	          0x8b3c24	                    mov edi, dword [rsp]	      6395	ops.c	FUNCTION_72	FOR_1	CALL_11
0x400676d	      0xe800000000	                          call 0x4006772	      6395	ops.c	FUNCTION_72	FOR_1	CALL_11
0x4006772	           0xfb6c0	                           movzx eax, al	      6395	ops.c	FUNCTION_72	FOR_1	CALL_11
0x4006775	            0x89c5	                            mov ebp, eax	      6395	ops.c	FUNCTION_72	FOR_1	CALL_11
0x4006777	        0x89442420	             mov dword [rsp + 0x20], eax	      6395	ops.c	FUNCTION_72	FOR_1	CALL_11
0x400677b	            0x89c1	                            mov ecx, eax	        97	stdio2.h	FUNCTION_111	CALL_1
0x400677d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006782	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006787	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_111	CALL_1
0x400678a	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x400678f	      0xe800000000	                          call 0x4006794	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006794	    0x3b2d00000000	            cmp ebp, dword [0x0400679a] 	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x400679a	            0x750d	                           jne 0x40067a9	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x400679c	          0x4c89e6	                            mov rsi, r12	        97	stdio2.h	FUNCTION_111	CALL_1
0x400679f	      0xbf40000000	                           mov edi, 0x40	        97	stdio2.h	FUNCTION_111	CALL_1
0x40067a4	      0xe800000000	                          call 0x40067a9	        97	stdio2.h	FUNCTION_111	CALL_1
0x40067a9	        0x448b4314	            mov r8d, dword [rbx + 0x14] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x40067ad	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        97	stdio2.h	FUNCTION_111	CALL_1
0x40067b2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x40067b7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_111	CALL_1
0x40067bc	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_111	CALL_1
0x40067bf	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x40067c4	      0xe800000000	                          call 0x40067c9	        97	stdio2.h	FUNCTION_111	CALL_1
0x40067c9	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40067cd	            0x85d2	                           test edx, edx	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40067cf	            0x7e13	                           jle 0x40067e4	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40067d1	          0x4439ea	                           cmp edx, r13d	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40067d4	           0xf9cc0	                                 setl al	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40067d7	            0x84c0	                             test al, al	      6403	ops.c	FUNCTION_72	FOR_1	IF_13
0x40067d9	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	      6403	ops.c	FUNCTION_72	FOR_1	IF_13
0x40067dd	           0xf45fa	                         cmovne edi, edx	      6403	ops.c	FUNCTION_72	FOR_1	IF_13
0x40067e0	        0x897c2410	             mov dword [rsp + 0x10], edi	      6403	ops.c	FUNCTION_72	FOR_1	IF_13
0x40067e4	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x40067e8	            0x85c0	                           test eax, eax	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x40067ea	     0xf8e4c010000	                           jle 0x400693c	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x40067f0	          0x8d40ff	                      lea eax, [rax - 1]	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x40067f3	    0x4c8d2cc50800	                    lea r13, [rax*8 + 8]	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x40067fb	      0xbd00000000	                              mov ebp, 0	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4006800	          0x4c89e6	                            mov rsi, r12	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_15
0x4006803	      0xbf09000000	                              mov edi, 9	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_15
0x4006808	      0xe800000000	                          call 0x400680d	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_15
0x400680d	          0x488b03	                    mov rax, qword [rbx]	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x4006810	        0x488b3428	              mov rsi, qword [rax + rbp]	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x4006814	          0x4c89e7	                            mov rdi, r12	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x4006817	      0xe800000000	                          call 0x400681c	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400681c	        0x4883c508	                              add rbp, 8	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x4006820	          0x4939ed	                            cmp r13, rbp	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4006823	            0x75db	                           jne 0x4006800	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4006825	      0xe9b5000000	                           jmp 0x40068df	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x400682a	    0x41bd00000000	                             mov r13d, 0	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4006830	      0xbdb9010000	                          mov ebp, 0x1b9	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4006835	        0x4c893424	                    mov qword [rsp], r14	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4006839	      0x448b742410	           mov r14d, dword [rsp + 0x10] 	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x400683e	          0x4c89e6	                            mov rsi, r12	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_18
0x4006841	      0xbf2c000000	                           mov edi, 0x2c	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_18
0x4006846	      0xe800000000	                          call 0x400684b	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_18
0x400684b	          0x8d55ff	                      lea edx, [rbp - 1]	      6432	ops.c	FUNCTION_72	FOR_1	FOR_4
0x400684e	          0x488b03	                    mov rax, qword [rbx]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x4006851	        0x4a8b34e8	            mov rsi, qword [rax + r13*8]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x4006855	          0x4c89e7	                            mov rdi, r12	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x4006858	      0xe800000000	                          call 0x400685d	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400685d	            0x89c5	                            mov ebp, eax	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400685f	        0x4983c501	                              add r13, 1	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x4006863	          0x4539ee	                          cmp r14d, r13d	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x4006866	            0x7fd6	                            jg 0x400683e	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x4006868	        0x4c8b3424	                    mov r14, qword [rsp]	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x400686c	          0x4c89e6	                            mov rsi, r12	      6436	ops.c	FUNCTION_72	FOR_1	CALL_20
0x400686f	      0xbf0a000000	                            mov edi, 0xa	      6436	ops.c	FUNCTION_72	FOR_1	CALL_20
0x4006874	      0xe800000000	                          call 0x4006879	      6436	ops.c	FUNCTION_72	FOR_1	CALL_20
0x4006879	        0x4983c601	                              add r14, 1	      6436	ops.c	FUNCTION_72	FOR_1	CALL_20
0x400687d	        0x4983c720	                           add r15, 0x20	      6436	ops.c	FUNCTION_72	FOR_1	CALL_20
0x4006881	      0xb800000000	                              mov eax, 0	      6334	ops.c	FUNCTION_72	FOR_1
0x4006886	          0x4c39f8	                            cmp rax, r15	      6334	ops.c	FUNCTION_72	FOR_1
0x4006889	     0xf856ffdffff	                           jne 0x40065fe	      6334	ops.c	FUNCTION_72	FOR_1
0x400688f	      0xe961010000	                           jmp 0x40069f5	      6334	ops.c	FUNCTION_72	FOR_1
0x4006894	      0x837c242400	               cmp dword [rsp + 0x24], 0	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4006899	     0xf8fedfdffff	                            jg 0x400668c	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x400689f	      0xe92dfeffff	                           jmp 0x40066d1	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x40068a4	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068a7	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068aa	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068ab	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068af	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068b0	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068b4	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068b5	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068ba	      0xb903000000	                              mov ecx, 3	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068bf	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068c4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068c9	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068cc	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068d1	      0xe800000000	                          call 0x40068d6	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068d6	        0x4883c420	                           add rsp, 0x20	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068da	      0xe94bffffff	                           jmp 0x400682a	        97	stdio2.h	FUNCTION_111	CALL_1
0x40068df	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6411	ops.c	FUNCTION_72	FOR_1
0x40068e4	    0x483905000000	            cmp qword [0x040068eb], rax 	      6411	ops.c	FUNCTION_72	FOR_1
0x40068eb	        0x410f94c0	                                sete r8b	      6411	ops.c	FUNCTION_72	FOR_1
0x40068ef	        0x450fb6c0	                          movzx r8d, r8b	      6411	ops.c	FUNCTION_72	FOR_1
0x40068f3	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x40068f7	    0x3b0500000000	            cmp eax, dword [0x040068fd] 	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x40068fd	            0x75a5	                           jne 0x40068a4	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x40068ff	            0xeb5d	                           jmp 0x400695e	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x4006901	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006904	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006907	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006908	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x400690c	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x400690d	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006911	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006912	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006917	      0xb903000000	                              mov ecx, 3	        97	stdio2.h	FUNCTION_111	CALL_1
0x400691c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006921	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006926	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006929	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x400692e	      0xe800000000	                          call 0x4006933	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006933	        0x4883c420	                           add rsp, 0x20	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006937	      0xe930ffffff	                           jmp 0x400686c	        97	stdio2.h	FUNCTION_111	CALL_1
0x400693c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6411	ops.c	FUNCTION_72	FOR_1
0x4006941	    0x483905000000	            cmp qword [0x04006948], rax 	      6411	ops.c	FUNCTION_72	FOR_1
0x4006948	        0x410f94c0	                                sete r8b	      6411	ops.c	FUNCTION_72	FOR_1
0x400694c	        0x450fb6c0	                          movzx r8d, r8b	      6411	ops.c	FUNCTION_72	FOR_1
0x4006950	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x4006954	    0x3b0500000000	            cmp eax, dword [0x0400695a] 	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x400695a	            0x75a5	                           jne 0x4006901	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x400695c	            0xeb3f	                           jmp 0x400699d	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x400695e	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006961	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006964	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006965	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006969	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x400696a	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x400696e	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x400696f	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006974	        0x4183c802	                               or r8d, 2	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006978	      0xb903000000	                              mov ecx, 3	        97	stdio2.h	FUNCTION_111	CALL_1
0x400697d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006982	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006987	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_111	CALL_1
0x400698a	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x400698f	      0xe800000000	                          call 0x4006994	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006994	        0x4883c420	                           add rsp, 0x20	        97	stdio2.h	FUNCTION_111	CALL_1
0x4006998	      0xe98dfeffff	                           jmp 0x400682a	        97	stdio2.h	FUNCTION_111	CALL_1
0x400699d	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069a0	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069a3	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069a4	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069a8	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069a9	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069ad	              0x50	                                push rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069ae	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069b3	        0x4183c802	                               or r8d, 2	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069b7	      0xb903000000	                              mov ecx, 3	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069bc	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069c1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069c6	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069c9	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069ce	      0xe800000000	                          call 0x40069d3	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069d3	        0x4883c420	                           add rsp, 0x20	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069d7	      0xe990feffff	                           jmp 0x400686c	        97	stdio2.h	FUNCTION_111	CALL_1
0x40069dc	      0x837c242400	               cmp dword [rsp + 0x24], 0	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x40069e1	     0xf8fa5fcffff	                            jg 0x400668c	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x40069e7	    0x48c744240800	                  mov qword [rsp + 8], 0	      6381	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40069f0	      0xe95afdffff	                           jmp 0x400674f	      6381	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40069f5	        0x4883c438	                           add rsp, 0x38	      6439	ops.c	FUNCTION_72
0x40069f9	              0x5b	                                 pop rbx	      6439	ops.c	FUNCTION_72
0x40069fa	              0x5d	                                 pop rbp	      6439	ops.c	FUNCTION_72
0x40069fb	            0x415c	                                 pop r12	      6439	ops.c	FUNCTION_72
0x40069fd	            0x415d	                                 pop r13	      6439	ops.c	FUNCTION_72
0x40069ff	            0x415e	                                 pop r14	      6439	ops.c	FUNCTION_72
0x4006a01	            0x415f	                                 pop r15	      6439	ops.c	FUNCTION_72
0x4006a03	              0xc3	                                     ret	      6439	ops.c	FUNCTION_72
valid_yank_reg	CALL,2:ELSE,0:WHILE,0:FOR,0:functions,0:IF,1:SWITCH,0:DO,0	42
0x40021ec	              0x55	                                push rbp	       870	ops.c	FUNCTION_14
0x40021ed	              0x53	                                push rbx	       870	ops.c	FUNCTION_14
0x40021ee	        0x4883ec08	                              sub rsp, 8	       870	ops.c	FUNCTION_14
0x40021f2	            0x85ff	                           test edi, edi	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40021f4	            0x7e1a	                           jle 0x4002210	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40021f6	            0x89fa	                            mov edx, edi	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40021f8	          0x83e2df	                     and edx, 0xffffffdf	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40021fb	          0x83ea41	                           sub edx, 0x41	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40021fe	      0xb801000000	                              mov eax, 1	       891	ops.c	FUNCTION_14	IF_1
0x4002203	          0x83fa19	                           cmp edx, 0x19	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4002206	            0x7656	                           jbe 0x400225e	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4002208	          0x8d57d0	                   lea edx, [rdi - 0x30]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400220b	          0x83fa09	                              cmp edx, 9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400220e	            0x764e	                           jbe 0x400225e	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4002210	            0x89f5	                            mov ebp, esi	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4002212	            0x89fb	                            mov ebx, edi	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4002214	            0x85f6	                           test esi, esi	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4002216	            0x7519	                           jne 0x4002231	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4002218	            0x89fe	                            mov esi, edi	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400221a	      0xbf00000000	                              mov edi, 0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400221f	      0xe800000000	                          call 0x4002224	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4002224	          0x4889c2	                            mov rdx, rax	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4002227	      0xb801000000	                              mov eax, 1	       891	ops.c	FUNCTION_14	IF_1
0x400222c	          0x4885d2	                           test rdx, rdx	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400222f	            0x752d	                           jne 0x400225e	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4002231	          0x8d53de	                   lea edx, [rbx - 0x22]	       880	ops.c	FUNCTION_14	IF_1
0x4002234	          0x83fa3d	                           cmp edx, 0x3d	       880	ops.c	FUNCTION_14	IF_1
0x4002237	            0x7715	                            ja 0x400224e	       880	ops.c	FUNCTION_14	IF_1
0x4002239	      0xb801000000	                              mov eax, 1	       891	ops.c	FUNCTION_14	IF_1
0x400223e	    0x48b9030b0000	         movabs rcx, 0x2000000000000b03 	       880	ops.c	FUNCTION_14	IF_1
0x4002248	        0x480fa3d1	                             bt rcx, rdx	       880	ops.c	FUNCTION_14	IF_1
0x400224c	            0x7210	                            jb 0x400225e	       880	ops.c	FUNCTION_14	IF_1
0x400224e	            0x85ed	                           test ebp, ebp	       891	ops.c	FUNCTION_14	IF_1
0x4002250	           0xf94c0	                                 sete al	       891	ops.c	FUNCTION_14	IF_1
0x4002253	          0x83fb7e	                           cmp ebx, 0x7e	       891	ops.c	FUNCTION_14	IF_1
0x4002256	           0xf94c2	                                 sete dl	       891	ops.c	FUNCTION_14	IF_1
0x4002259	           0xfb6d2	                           movzx edx, dl	       891	ops.c	FUNCTION_14	IF_1
0x400225c	            0x21d0	                            and eax, edx	       891	ops.c	FUNCTION_14	IF_1
0x400225e	        0x4883c408	                              add rsp, 8	       893	ops.c	FUNCTION_14
0x4002262	              0x5b	                                 pop rbx	       893	ops.c	FUNCTION_14
0x4002263	              0x5d	                                 pop rbp	       893	ops.c	FUNCTION_14
0x4002264	              0xc3	                                     ret	       893	ops.c	FUNCTION_14
get_spec_reg	CALL,16:ELSE,0:WHILE,0:FOR,0:functions,0:IF,7:SWITCH,1:DO,0	131
0x40026e2	    0x48c706000000	                      mov qword [rsi], 0	      1515	ops.c	FUNCTION_28
0x40026e9	    0xc70200000000	                      mov dword [rdx], 0	      1516	ops.c	FUNCTION_28
0x40026ef	          0x83ff5f	                           cmp edi, 0x5f	      1517	ops.c	FUNCTION_28	SWITCH_1
0x40026f2	     0xf87ff010000	                            ja 0x40028f7	      1517	ops.c	FUNCTION_28	SWITCH_1
0x40026f8	            0x4154	                                push r12	      1512	ops.c	FUNCTION_28
0x40026fa	              0x55	                                push rbp	      1512	ops.c	FUNCTION_28
0x40026fb	              0x53	                                push rbx	      1512	ops.c	FUNCTION_28
0x40026fc	            0x89cd	                            mov ebp, ecx	      1512	ops.c	FUNCTION_28
0x40026fe	          0x4989d4	                            mov r12, rdx	      1512	ops.c	FUNCTION_28
0x4002701	          0x4889f3	                            mov rbx, rsi	      1512	ops.c	FUNCTION_28
0x4002704	            0x89f8	                            mov eax, edi	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4002706	    0xff24c5000000	                       jmp qword [rax*8]	      1517	ops.c	FUNCTION_28	SWITCH_1
0x400270d	            0x85c9	                           test ecx, ecx	      1520	ops.c	FUNCTION_28	SWITCH_1	IF_1
0x400270f	            0x7405	                            je 0x4002716	      1520	ops.c	FUNCTION_28	SWITCH_1	IF_1
0x4002711	      0xe800000000	                          call 0x4002716	      1521	ops.c	FUNCTION_28	SWITCH_1	CALL_1
0x4002716	    0x488b05000000	            mov rax, qword [0x0400271d] 	      1522	ops.c	FUNCTION_28	SWITCH_1
0x400271d	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1522	ops.c	FUNCTION_28	SWITCH_1
0x4002724	          0x488903	                    mov qword [rbx], rax	      1522	ops.c	FUNCTION_28	SWITCH_1
0x4002727	      0xb801000000	                              mov eax, 1	      1523	ops.c	FUNCTION_28	SWITCH_1
0x400272c	      0xe9c1010000	                           jmp 0x40028f2	      1523	ops.c	FUNCTION_28	SWITCH_1
0x4002731	            0x89cf	                            mov edi, ecx	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x4002733	      0xe800000000	                          call 0x4002738	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x4002738	          0x488903	                    mov qword [rbx], rax	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x400273b	      0xb801000000	                              mov eax, 1	      1527	ops.c	FUNCTION_28	SWITCH_1
0x4002740	      0xe9ad010000	                           jmp 0x40028f2	      1527	ops.c	FUNCTION_28	SWITCH_1
0x4002745	      0xe800000000	                          call 0x400274a	      1531	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x400274a	          0x488903	                    mov qword [rbx], rax	      1531	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x400274d	    0x41c704240100	                      mov dword [r12], 1	      1532	ops.c	FUNCTION_28	SWITCH_1
0x4002755	      0xb801000000	                              mov eax, 1	      1533	ops.c	FUNCTION_28	SWITCH_1
0x400275a	      0xe993010000	                           jmp 0x40028f2	      1533	ops.c	FUNCTION_28	SWITCH_1
0x400275f	    0x48833d000000	               cmp qword [0x04002767], 0	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x4002767	            0x7520	                           jne 0x4002789	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x4002769	            0x85c9	                           test ecx, ecx	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x400276b	            0x741c	                            je 0x4002789	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x400276d	      0xba05000000	                              mov edx, 5	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002772	      0xbe00000000	                              mov esi, 0	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002777	      0xbf00000000	                              mov edi, 0	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x400277c	      0xe800000000	                          call 0x4002781	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002781	          0x4889c7	                            mov rdi, rax	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002784	      0xe800000000	                          call 0x4002789	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x4002789	    0x488b05000000	            mov rax, qword [0x04002790] 	      1539	ops.c	FUNCTION_28	SWITCH_1
0x4002790	          0x488903	                    mov qword [rbx], rax	      1539	ops.c	FUNCTION_28	SWITCH_1
0x4002793	      0xb801000000	                              mov eax, 1	      1540	ops.c	FUNCTION_28	SWITCH_1
0x4002798	      0xe955010000	                           jmp 0x40028f2	      1540	ops.c	FUNCTION_28	SWITCH_1
0x400279d	      0xe800000000	                          call 0x40027a2	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x40027a2	            0x85ed	                           test ebp, ebp	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x40027a4	            0x7421	                            je 0x40027c7	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x40027a6	          0x4885c0	                           test rax, rax	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x40027a9	            0x751c	                           jne 0x40027c7	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x40027ab	      0xba05000000	                              mov edx, 5	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x40027b0	      0xbe00000000	                              mov esi, 0	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x40027b5	      0xbf00000000	                              mov edi, 0	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x40027ba	      0xe800000000	                          call 0x40027bf	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x40027bf	          0x4889c7	                            mov rdi, rax	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x40027c2	      0xe800000000	                          call 0x40027c7	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x40027c7	      0xe800000000	                          call 0x40027cc	      1545	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x40027cc	          0x488903	                    mov qword [rbx], rax	      1545	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x40027cf	      0xb801000000	                              mov eax, 1	      1546	ops.c	FUNCTION_28	SWITCH_1
0x40027d4	      0xe919010000	                           jmp 0x40028f2	      1546	ops.c	FUNCTION_28	SWITCH_1
0x40027d9	      0xe800000000	                          call 0x40027de	      1549	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x40027de	          0x488903	                    mov qword [rbx], rax	      1549	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x40027e1	    0x41c704240100	                      mov dword [r12], 1	      1550	ops.c	FUNCTION_28	SWITCH_1
0x40027e9	        0x48833b00	                      cmp qword [rbx], 0	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x40027ed	     0xf85fa000000	                           jne 0x40028ed	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x40027f3	            0x85ed	                           test ebp, ebp	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x40027f5	     0xf84f2000000	                            je 0x40028ed	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x40027fb	      0xba05000000	                              mov edx, 5	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002800	      0xbe00000000	                              mov esi, 0	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002805	      0xbf00000000	                              mov edi, 0	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x400280a	      0xe800000000	                          call 0x400280f	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x400280f	          0x4889c7	                            mov rdi, rax	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002812	      0xe800000000	                          call 0x4002817	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002817	      0xb801000000	                              mov eax, 1	      1553	ops.c	FUNCTION_28	SWITCH_1
0x400281c	      0xe9d1000000	                           jmp 0x40028f2	      1553	ops.c	FUNCTION_28	SWITCH_1
0x4002821	      0xb800000000	                              mov eax, 0	      1559	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x4002826	            0x85c9	                           test ecx, ecx	      1558	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x4002828	     0xf84c4000000	                            je 0x40028f2	      1558	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x400282e	          0x83ff10	                           cmp edi, 0x10	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002831	        0x400f94c7	                                sete dil	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002835	        0x400fb6ff	                          movzx edi, dil	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002839	        0x8d7c3f05	                lea edi, [rdi + rdi + 5]	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x400283d	      0xba00000000	                              mov edx, 0	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002842	      0xbe01000000	                              mov esi, 1	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002847	      0xe800000000	                          call 0x400284c	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x400284c	          0x488903	                    mov qword [rbx], rax	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x400284f	    0x41c704240100	                      mov dword [r12], 1	      1562	ops.c	FUNCTION_28	SWITCH_1
0x4002857	      0xb801000000	                              mov eax, 1	      1563	ops.c	FUNCTION_28	SWITCH_1
0x400285c	      0xe991000000	                           jmp 0x40028f2	      1563	ops.c	FUNCTION_28	SWITCH_1
0x4002861	      0xb800000000	                              mov eax, 0	      1569	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x4002866	            0x85c9	                           test ecx, ecx	      1568	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x4002868	     0xf8484000000	                            je 0x40028f2	      1568	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x400286e	          0x83ff17	                           cmp edi, 0x17	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x4002871	        0x400f94c6	                                sete sil	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x4002875	        0x400fb6f6	                          movzx esi, sil	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x4002879	          0x83c602	                              add esi, 2	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x400287c	          0x4889df	                            mov rdi, rbx	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x400287f	      0xe800000000	                          call 0x4002884	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x4002884	      0xba00000000	                              mov edx, 0	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002889	            0x85c0	                           test eax, eax	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x400288b	            0x740d	                            je 0x400289a	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x400288d	            0x89c6	                            mov esi, eax	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x400288f	          0x488b3b	                    mov rdi, qword [rbx]	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002892	      0xe800000000	                          call 0x4002897	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002897	          0x4889c2	                            mov rdx, rax	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x400289a	          0x488913	                    mov qword [rbx], rdx	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x400289d	    0x41c704240100	                      mov dword [r12], 1	      1573	ops.c	FUNCTION_28	SWITCH_1
0x40028a5	      0xb801000000	                              mov eax, 1	      1574	ops.c	FUNCTION_28	SWITCH_1
0x40028aa	            0xeb46	                           jmp 0x40028f2	      1574	ops.c	FUNCTION_28	SWITCH_1
0x40028ac	      0xb800000000	                              mov eax, 0	      1578	ops.c	FUNCTION_28	SWITCH_1	IF_7
0x40028b1	            0x85c9	                           test ecx, ecx	      1577	ops.c	FUNCTION_28	SWITCH_1	IF_7
0x40028b3	            0x743d	                            je 0x40028f2	      1577	ops.c	FUNCTION_28	SWITCH_1	IF_7
0x40028b5	    0x488b05000000	            mov rax, qword [0x040028bc] 	      1581	ops.c	FUNCTION_28	SWITCH_1
0x40028bc	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x40028c0	        0x488b7808	                mov rdi, qword [rax + 8]	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x40028c4	      0xba00000000	                              mov edx, 0	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x40028c9	      0xe800000000	                          call 0x40028ce	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x40028ce	          0x488903	                    mov qword [rbx], rax	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x40028d1	      0xb801000000	                              mov eax, 1	      1582	ops.c	FUNCTION_28	SWITCH_1
0x40028d6	            0xeb1a	                           jmp 0x40028f2	      1582	ops.c	FUNCTION_28	SWITCH_1
0x40028d8	    0x48c706000000	                      mov qword [rsi], 0	      1585	ops.c	FUNCTION_28	SWITCH_1
0x40028df	      0xb801000000	                              mov eax, 1	      1586	ops.c	FUNCTION_28	SWITCH_1
0x40028e4	            0xeb0c	                           jmp 0x40028f2	      1586	ops.c	FUNCTION_28	SWITCH_1
0x40028e6	      0xb800000000	                              mov eax, 0	      1589	ops.c	FUNCTION_28
0x40028eb	            0xeb05	                           jmp 0x40028f2	      1589	ops.c	FUNCTION_28
0x40028ed	      0xb801000000	                              mov eax, 1	      1553	ops.c	FUNCTION_28	SWITCH_1
0x40028f2	              0x5b	                                 pop rbx	      1590	ops.c	FUNCTION_28
0x40028f3	              0x5d	                                 pop rbp	      1590	ops.c	FUNCTION_28
0x40028f4	            0x415c	                                 pop r12	      1590	ops.c	FUNCTION_28
0x40028f6	              0xc3	                                     ret	      1590	ops.c	FUNCTION_28
0x40028f7	      0xb800000000	                              mov eax, 0	      1589	ops.c	FUNCTION_28
0x40028fc	              0xc3	                                     ret	      1590	ops.c	FUNCTION_28
getreg_wrap_one_line	CALL,3:ELSE,0:WHILE,0:FOR,0:functions,0:IF,3:SWITCH,0:DO,0	29
0x4001cbd	          0x4889f8	                            mov rax, rdi	      6823	ops.c	FUNCTION_81
0x4001cc0	        0x40f6c604	                             test sil, 4	      6808	ops.c	FUNCTION_81	IF_1
0x4001cc4	            0x7451	                            je 0x4001d17	      6808	ops.c	FUNCTION_81	IF_1
0x4001cc6	              0x55	                                push rbp	      6807	ops.c	FUNCTION_81
0x4001cc7	              0x53	                                push rbx	      6807	ops.c	FUNCTION_81
0x4001cc8	        0x4883ec08	                              sub rsp, 8	      6807	ops.c	FUNCTION_81
0x4001ccc	          0x4889fb	                            mov rbx, rdi	      6807	ops.c	FUNCTION_81
0x4001ccf	      0xe800000000	                          call 0x4001cd4	      6810	ops.c	FUNCTION_81	IF_1	CALL_1
0x4001cd4	          0x4889c5	                            mov rbp, rax	      6810	ops.c	FUNCTION_81	IF_1	CALL_1
0x4001cd7	      0xb800000000	                              mov eax, 0	      6821	ops.c	FUNCTION_81	IF_1
0x4001cdc	          0x4885ed	                           test rbp, rbp	      6812	ops.c	FUNCTION_81	IF_1	IF_2
0x4001cdf	            0x7430	                            je 0x4001d11	      6812	ops.c	FUNCTION_81	IF_1	IF_2
0x4001ce1	      0xbaffffffff	                     mov edx, 0xffffffff	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x4001ce6	      0xbe00000000	                              mov esi, 0	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x4001ceb	          0x4889ef	                            mov rdi, rbp	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x4001cee	      0xe800000000	                          call 0x4001cf3	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x4001cf3	            0x85c0	                           test eax, eax	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x4001cf5	            0x750f	                           jne 0x4001d06	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x4001cf7	          0x4889ef	                            mov rdi, rbp	      6816	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_3
0x4001cfa	      0xe800000000	                          call 0x4001cff	      6816	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_3
0x4001cff	      0xb800000000	                              mov eax, 0	      6817	ops.c	FUNCTION_81	IF_1	IF_2	IF_3
0x4001d04	            0xeb0b	                           jmp 0x4001d11	      6817	ops.c	FUNCTION_81	IF_1	IF_2	IF_3
0x4001d06	        0x488b4500	                    mov rax, qword [rbp]	      6819	ops.c	FUNCTION_81	IF_1	IF_2
0x4001d0a	        0x48895818	             mov qword [rax + 0x18], rbx	      6819	ops.c	FUNCTION_81	IF_1	IF_2
0x4001d0e	          0x4889e8	                            mov rax, rbp	      6821	ops.c	FUNCTION_81	IF_1
0x4001d11	        0x4883c408	                              add rsp, 8	      6824	ops.c	FUNCTION_81
0x4001d15	              0x5b	                                 pop rbx	      6824	ops.c	FUNCTION_81
0x4001d16	              0x5d	                                 pop rbp	      6824	ops.c	FUNCTION_81
0x4001d17	            0xf3c3	                                     ret	      6824	ops.c	FUNCTION_81
may_get_selection	CALL,2:ELSE,3:WHILE,0:FOR,0:functions,0:IF,4:SWITCH,0:DO,0	22
0x4007339	              0x53	                                push rbx	       963	ops.c	FUNCTION_16
0x400733a	            0x89fb	                            mov ebx, edi	       963	ops.c	FUNCTION_16
0x400733c	          0x83ff2a	                           cmp edi, 0x2a	       964	ops.c	FUNCTION_16	IF_1
0x400733f	            0x7515	                           jne 0x4007356	       964	ops.c	FUNCTION_16	IF_1
0x4007341	    0x833d00000000	               cmp dword [0x04007348], 0	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x4007348	            0x7426	                            je 0x4007370	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400734a	      0xbf00000000	                              mov edi, 0	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400734f	      0xe800000000	                          call 0x4007354	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4007354	            0xeb26	                           jmp 0x400737c	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4007356	          0x83ff2b	                           cmp edi, 0x2b	       971	ops.c	FUNCTION_16	ELSE_2	IF_3
0x4007359	            0x7521	                           jne 0x400737c	       971	ops.c	FUNCTION_16	ELSE_2	IF_3
0x400735b	    0x833d00000000	               cmp dword [0x04007362], 0	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4007362	            0x7413	                            je 0x4007377	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4007364	      0xbf00000000	                              mov edi, 0	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4007369	      0xe800000000	                          call 0x400736e	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400736e	            0xeb0c	                           jmp 0x400737c	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4007370	      0xbb00000000	                              mov ebx, 0	       967	ops.c	FUNCTION_16	IF_1	IF_2
0x4007375	            0xeb05	                           jmp 0x400737c	       967	ops.c	FUNCTION_16	IF_1	IF_2
0x4007377	      0xbb00000000	                              mov ebx, 0	       974	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400737c	            0x89d8	                            mov eax, ebx	       979	ops.c	FUNCTION_16
0x400737e	              0x5b	                                 pop rbx	       979	ops.c	FUNCTION_16
0x400737f	              0xc3	                                     ret	       979	ops.c	FUNCTION_16
op_delete	CALL,68:ELSE,6:WHILE,0:FOR,1:functions,0:IF,48:SWITCH,0:DO,0	550
0x400a21c	            0x4157	                                push r15	      1745	ops.c	FUNCTION_33
0x400a21e	            0x4156	                                push r14	      1745	ops.c	FUNCTION_33
0x400a220	            0x4155	                                push r13	      1745	ops.c	FUNCTION_33
0x400a222	            0x4154	                                push r12	      1745	ops.c	FUNCTION_33
0x400a224	              0x55	                                push rbp	      1745	ops.c	FUNCTION_33
0x400a225	              0x53	                                push rbx	      1745	ops.c	FUNCTION_33
0x400a226	        0x4883ec58	                           sub rsp, 0x58	      1745	ops.c	FUNCTION_33
0x400a22a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1745	ops.c	FUNCTION_33
0x400a233	      0x4889442448	             mov qword [rsp + 0x48], rax	      1745	ops.c	FUNCTION_33
0x400a238	            0x31c0	                            xor eax, eax	      1745	ops.c	FUNCTION_33
0x400a23a	    0x488b05000000	            mov rax, qword [0x0400a241] 	      1751	ops.c	FUNCTION_33
0x400a241	      0xbd01000000	                              mov ebp, 1	      1756	ops.c	FUNCTION_33	IF_1
0x400a246	        0xf6401001	               test byte [rax + 0x10], 1	      1755	ops.c	FUNCTION_33	IF_1
0x400a24a	     0xf855b080000	                           jne 0x400aaab	      1755	ops.c	FUNCTION_33	IF_1
0x400a250	          0x4889fb	                            mov rbx, rdi	      1755	ops.c	FUNCTION_33	IF_1
0x400a253	        0x448b6758	           mov r12d, dword [rdi + 0x58] 	      1759	ops.c	FUNCTION_33	IF_2
0x400a257	          0x4585e4	                         test r12d, r12d	      1759	ops.c	FUNCTION_33	IF_2
0x400a25a	            0x740c	                            je 0x400a268	      1759	ops.c	FUNCTION_33	IF_2
0x400a25c	      0xe800000000	                          call 0x400a261	      1760	ops.c	FUNCTION_33	CALL_1
0x400a261	            0x89c5	                            mov ebp, eax	      1760	ops.c	FUNCTION_33	CALL_1
0x400a263	      0xe943080000	                           jmp 0x400aaab	      1760	ops.c	FUNCTION_33	CALL_1
0x400a268	    0x8ba840150000	          mov ebp, dword [rax + 0x1540] 	      1762	ops.c	FUNCTION_33	IF_3
0x400a26e	            0x85ed	                           test ebp, ebp	      1762	ops.c	FUNCTION_33	IF_3
0x400a270	            0x7521	                           jne 0x400a293	      1762	ops.c	FUNCTION_33	IF_3
0x400a272	      0xba05000000	                              mov edx, 5	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400a277	      0xbe00000000	                              mov esi, 0	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400a27c	      0xbf00000000	                              mov edi, 0	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400a281	      0xe800000000	                          call 0x400a286	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400a286	          0x4889c7	                            mov rdi, rax	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400a289	      0xe800000000	                          call 0x400a28e	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400a28e	      0xe918080000	                           jmp 0x400aaab	      1765	ops.c	FUNCTION_33	IF_3
0x400a293	          0x4c8b30	                    mov r14, qword [rax]	      1751	ops.c	FUNCTION_33
0x400a296	        0x448b6f04	               mov r13d, dword [rdi + 4]	      1753	ops.c	FUNCTION_33
0x400a29a	        0x488d7f04	                      lea rdi, [rdi + 4]	      1769	ops.c	FUNCTION_33	CALL_4
0x400a29e	      0xe800000000	                          call 0x400a2a3	      1769	ops.c	FUNCTION_33	CALL_4
0x400a2a3	    0x833d00000000	               cmp dword [0x0400a2aa], 0	      1773	ops.c	FUNCTION_33	IF_4
0x400a2aa	            0x7408	                            je 0x400a2b4	      1773	ops.c	FUNCTION_33	IF_4
0x400a2ac	          0x4889df	                            mov rdi, rbx	      1774	ops.c	FUNCTION_33	CALL_5
0x400a2af	      0xe87966ffff	                call sym.mb_adjust_opend	      1774	ops.c	FUNCTION_33	CALL_5
0x400a2b4	        0x837b0800	                  cmp dword [rbx + 8], 0	      1782	ops.c	FUNCTION_33	IF_5
0x400a2b8	     0xf85b3000000	                           jne 0x400a371	      1782	ops.c	FUNCTION_33	IF_5
0x400a2be	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      1783	ops.c	FUNCTION_33	IF_5
0x400a2c2	            0x7560	                           jne 0x400a324	      1783	ops.c	FUNCTION_33	IF_5
0x400a2c4	        0x837b6000	               cmp dword [rbx + 0x60], 0	      1784	ops.c	FUNCTION_33	IF_5
0x400a2c8	            0x755a	                           jne 0x400a324	      1784	ops.c	FUNCTION_33	IF_5
0x400a2ca	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1785	ops.c	FUNCTION_33	IF_5
0x400a2cf	            0x7e53	                           jle 0x400a324	      1785	ops.c	FUNCTION_33	IF_5
0x400a2d1	        0x837b0c00	                cmp dword [rbx + 0xc], 0	      1786	ops.c	FUNCTION_33	IF_5
0x400a2d5	            0x754d	                           jne 0x400a324	      1786	ops.c	FUNCTION_33	IF_5
0x400a2d7	          0x833b01	                      cmp dword [rbx], 1	      1787	ops.c	FUNCTION_33	IF_5
0x400a2da	     0xf8591000000	                           jne 0x400a371	      1787	ops.c	FUNCTION_33	IF_5
0x400a2e0	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400a2e4	      0xe800000000	                          call 0x400a2e9	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400a2e9	        0x48635338	         movsxd rdx, dword [rbx + 0x38] 	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400a2ed	        0x488d3c10	                    lea rdi, [rax + rdx]	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400a2f1	          0x803f00	                       cmp byte [rdi], 0	      1790	ops.c	FUNCTION_33	IF_5	IF_6
0x400a2f4	            0x7407	                            je 0x400a2fd	      1790	ops.c	FUNCTION_33	IF_5	IF_6
0x400a2f6	        0x48634314	         movsxd rax, dword [rbx + 0x14] 	      1791	ops.c	FUNCTION_33	IF_5	IF_6
0x400a2fa	          0x4801c7	                            add rdi, rax	      1791	ops.c	FUNCTION_33	IF_5	IF_6
0x400a2fd	      0xe800000000	                          call 0x400a302	      1792	ops.c	FUNCTION_33	IF_5	CALL_7
0x400a302	          0x803800	                       cmp byte [rax], 0	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400a305	            0x7517	                           jne 0x400a31e	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400a307	      0xbf00000000	                              mov edi, 0	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400a30c	      0xe800000000	                          call 0x400a311	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400a311	            0x85c0	                           test eax, eax	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400a313	            0x7409	                            je 0x400a31e	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400a315	    0xc74308010000	                  mov dword [rbx + 8], 1	      1794	ops.c	FUNCTION_33	IF_5	IF_7
0x400a31c	            0xeb53	                           jmp 0x400a371	      1794	ops.c	FUNCTION_33	IF_5	IF_7
0x400a31e	        0x837b0800	                  cmp dword [rbx + 8], 0	      1801	ops.c	FUNCTION_33	IF_8
0x400a322	            0x754d	                           jne 0x400a371	      1801	ops.c	FUNCTION_33	IF_8
0x400a324	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1802	ops.c	FUNCTION_33	IF_8
0x400a329	            0x7546	                           jne 0x400a371	      1802	ops.c	FUNCTION_33	IF_8
0x400a32b	            0x8b2b	                    mov ebp, dword [rbx]	      1803	ops.c	FUNCTION_33	IF_8
0x400a32d	          0x83fd01	                              cmp ebp, 1	      1803	ops.c	FUNCTION_33	IF_8
0x400a330	            0x753f	                           jne 0x400a371	      1803	ops.c	FUNCTION_33	IF_8
0x400a332	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400a336	      0xe800000000	                          call 0x400a33b	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400a33b	          0x803800	                       cmp byte [rax], 0	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400a33e	            0x7531	                           jne 0x400a371	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400a340	    0x833d00000000	               cmp dword [0x0400a347], 0	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x400a347	     0xf85fc060000	                           jne 0x400aa49	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x400a34d	      0xbe45000000	                           mov esi, 0x45	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400a352	    0x488b3d000000	            mov rdi, qword [0x0400a359] 	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400a359	      0xe800000000	                          call 0x400a35e	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400a35e	          0x4885c0	                           test rax, rax	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400a361	     0xf8444070000	                            je 0x400aaab	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400a367	      0xe800000000	                          call 0x400a36c	      1817	ops.c	FUNCTION_33	IF_8	CALL_11
0x400a36c	      0xe93a070000	                           jmp 0x400aaab	      1817	ops.c	FUNCTION_33	IF_8	CALL_11
0x400a371	          0x8b7b04	                mov edi, dword [rbx + 4]	      1826	ops.c	FUNCTION_33	IF_11
0x400a374	          0x83ff5f	                           cmp edi, 0x5f	      1826	ops.c	FUNCTION_33	IF_11
0x400a377	     0xf8468010000	                            je 0x400a4e5	      1826	ops.c	FUNCTION_33	IF_11
0x400a37d	      0xbd00000000	                              mov ebp, 0	      1752	ops.c	FUNCTION_33
0x400a382	            0x85ff	                           test edi, edi	      1828	ops.c	FUNCTION_33	IF_11	IF_12
0x400a384	            0x7447	                            je 0x400a3cd	      1828	ops.c	FUNCTION_33	IF_11	IF_12
0x400a386	      0xbe01000000	                              mov esi, 1	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400a38b	      0xe800000000	                          call 0x400a390	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400a390	            0x85c0	                           test eax, eax	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400a392	            0x750f	                           jne 0x400a3a3	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400a394	      0xe800000000	                          call 0x400a399	      1833	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_13
0x400a399	      0xbd01000000	                              mov ebp, 1	      1834	ops.c	FUNCTION_33	IF_11	IF_12	IF_13
0x400a39e	      0xe908070000	                           jmp 0x400aaab	      1834	ops.c	FUNCTION_33	IF_11	IF_12	IF_13
0x400a3a3	          0x8b7b04	                mov edi, dword [rbx + 4]	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x400a3a6	      0xbe01000000	                              mov esi, 1	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x400a3ab	      0xe800000000	                          call 0x400a3b0	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x400a3b0	      0xba00000000	                              mov edx, 0	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400a3b5	      0xbe01000000	                              mov esi, 1	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400a3ba	          0x4889df	                            mov rdi, rbx	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400a3bd	      0xe800000000	                          call 0x400a3c2	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400a3c2	          0x83f801	                              cmp eax, 1	      1752	ops.c	FUNCTION_33
0x400a3c5	        0x400f94c5	                                sete bpl	      1752	ops.c	FUNCTION_33
0x400a3c9	        0x400fb6ed	                          movzx ebp, bpl	      1752	ops.c	FUNCTION_33
0x400a3cd	          0x4585ed	                         test r13d, r13d	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400a3d0	            0x7513	                           jne 0x400a3e5	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400a3d2	        0x837b0801	                  cmp dword [rbx + 8], 1	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400a3d6	            0x740d	                            je 0x400a3e5	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400a3d8	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400a3dd	            0x7f06	                            jg 0x400a3e5	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400a3df	        0x837b1000	               cmp dword [rbx + 0x10], 0	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400a3e3	            0x7422	                            je 0x400a407	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400a3e5	      0xe800000000	                          call 0x400a3ea	      1850	ops.c	FUNCTION_33	IF_11	IF_15	CALL_16
0x400a3ea	      0xba00000000	                              mov edx, 0	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400a3ef	      0xbe01000000	                              mov esi, 1	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400a3f4	          0x4889df	                            mov rdi, rbx	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400a3f7	      0xe800000000	                          call 0x400a3fc	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400a3fc	          0x83f801	                              cmp eax, 1	      1852	ops.c	FUNCTION_33	IF_11	IF_15	IF_16
0x400a3ff	      0xb801000000	                              mov eax, 1	      1852	ops.c	FUNCTION_33	IF_11	IF_15	IF_16
0x400a404	           0xf44e8	                          cmove ebp, eax	      1852	ops.c	FUNCTION_33	IF_11	IF_15	IF_16
0x400a407	    0x8b0500000000	            mov eax, dword [0x0400a40d] 	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400a40d	            0xa801	                              test al, 1	      1857	ops.c	FUNCTION_33	IF_11	IF_17
0x400a40f	            0x7406	                            je 0x400a417	      1857	ops.c	FUNCTION_33	IF_11	IF_17
0x400a411	        0x837b042a	               cmp dword [rbx + 4], 0x2a	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400a415	            0x7410	                            je 0x400a427	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400a417	            0xa802	                              test al, 2	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400a419	            0x7406	                            je 0x400a421	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400a41b	        0x837b042b	               cmp dword [rbx + 4], 0x2b	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400a41f	            0x7406	                            je 0x400a427	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400a421	        0x837b0400	                  cmp dword [rbx + 4], 0	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400a425	            0x7547	                           jne 0x400a46e	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400a427	        0x837b0801	                  cmp dword [rbx + 8], 1	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x400a42b	            0x7441	                            je 0x400a46e	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x400a42d	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1863	ops.c	FUNCTION_33	IF_11	IF_17
0x400a432	            0x753a	                           jne 0x400a46e	      1863	ops.c	FUNCTION_33	IF_11	IF_17
0x400a434	    0xc743042d0000	               mov dword [rbx + 4], 0x2d	      1865	ops.c	FUNCTION_33	IF_11	IF_17
0x400a43b	      0xbe01000000	                              mov esi, 1	      1866	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x400a440	      0xbf2d000000	                           mov edi, 0x2d	      1866	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x400a445	      0xe800000000	                          call 0x400a44a	      1866	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x400a44a	      0xba00000000	                              mov edx, 0	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400a44f	      0xbe01000000	                              mov esi, 1	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400a454	          0x4889df	                            mov rdi, rbx	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400a457	      0xe800000000	                          call 0x400a45c	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400a45c	          0x83f801	                              cmp eax, 1	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400a45f	      0xb801000000	                              mov eax, 1	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400a464	           0xf44e8	                          cmove ebp, eax	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400a467	    0xc74304000000	                  mov dword [rbx + 4], 0	      1869	ops.c	FUNCTION_33	IF_11	IF_17
0x400a46e	            0x85ed	                           test ebp, ebp	      1878	ops.c	FUNCTION_33	IF_11	IF_19
0x400a470	     0xf8549060000	                           jne 0x400aabf	      1878	ops.c	FUNCTION_33	IF_11	IF_19
0x400a476	    0x8b2d00000000	            mov ebp, dword [0x0400a47c] 	      1880	ops.c	FUNCTION_33	IF_11	IF_19
0x400a47c	    0xc70500000000	               mov dword [0x0400a486], 0	      1882	ops.c	FUNCTION_33	IF_11	IF_19
0x400a486	      0xba05000000	                              mov edx, 5	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400a48b	      0xbe00000000	                              mov esi, 0	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400a490	      0xbf00000000	                              mov edi, 0	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400a495	      0xe800000000	                          call 0x400a49a	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400a49a	      0xbe01000000	                              mov esi, 1	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400a49f	          0x4889c7	                            mov rdi, rax	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400a4a2	      0xe800000000	                          call 0x400a4a7	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400a4a7	    0x892d00000000	            mov dword [0x0400a4ad], ebp 	      1884	ops.c	FUNCTION_33	IF_11	IF_19
0x400a4ad	          0x83f879	                           cmp eax, 0x79	      1885	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400a4b0	            0x7433	                            je 0x400a4e5	      1885	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400a4b2	      0xba05000000	                              mov edx, 5	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400a4b7	      0xbe00000000	                              mov esi, 0	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400a4bc	      0xbf00000000	                              mov edi, 0	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400a4c1	      0xe800000000	                          call 0x400a4c6	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400a4c6	          0x4889c7	                            mov rdi, rax	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400a4c9	      0xe800000000	                          call 0x400a4ce	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400a4ce	          0x4489e5	                           mov ebp, r12d	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400a4d1	      0xe9d5050000	                           jmp 0x400aaab	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400a4d6	    0x488b35000000	            mov rsi, qword [0x0400a4dd] 	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400a4dd	          0x4889df	                            mov rdi, rbx	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400a4e0	      0xe846f1ffff	                call sym.yank_do_autocmd	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400a4e5	        0x448b6360	           mov r12d, dword [rbx + 0x60] 	      1901	ops.c	FUNCTION_33	IF_22
0x400a4e9	          0x4585e4	                         test r12d, r12d	      1901	ops.c	FUNCTION_33	IF_22
0x400a4ec	     0xf846c010000	                            je 0x400a65e	      1901	ops.c	FUNCTION_33	IF_22
0x400a4f2	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400a4f6	        0x488d7001	                      lea rsi, [rax + 1]	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400a4fa	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400a4fe	        0x488d78ff	                      lea rdi, [rax - 1]	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400a502	      0xe800000000	                          call 0x400a507	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400a507	            0x89c5	                            mov ebp, eax	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400a509	            0x85c0	                           test eax, eax	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400a50b	     0xf849a050000	                            je 0x400aaab	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400a511	    0x488b05000000	            mov rax, qword [0x0400a518] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a518	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a51c	        0x483b6b30	            cmp rbp, qword [rbx + 0x30] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a520	     0xf8f06010000	                            jg 0x400a62c	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a526	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400a52d	      0xb901000000	                              mov ecx, 1	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400a532	          0x4889ea	                            mov rdx, rbp	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400a535	          0x4889e6	                            mov rsi, rsp	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400a538	          0x4889df	                            mov rdi, rbx	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400a53b	      0xe8405bffff	                     call sym.block_prep	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400a540	      0x448b642408	               mov r12d, dword [rsp + 8]	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x400a545	          0x4585e4	                         test r12d, r12d	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x400a548	     0xf84d0000000	                            je 0x400a61e	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x400a54e	    0x488b05000000	            mov rax, qword [0x0400a555] 	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400a555	        0x48396838	            cmp qword [rax + 0x38], rbp 	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400a559	            0x7511	                           jne 0x400a56c	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400a55b	          0x8b1424	                    mov edx, dword [rsp]	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400a55e	         0x3542418	             add edx, dword [rsp + 0x18]	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400a562	          0x895040	             mov dword [rax + 0x40], edx	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400a565	    0xc74044000000	               mov dword [rax + 0x44], 0	      1918	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400a56c	        0x442b2424	                   sub r12d, dword [rsp]	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a570	      0x442b642404	               sub r12d, dword [rsp + 4]	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a575	          0x4889ef	                            mov rdi, rbp	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x400a578	      0xe800000000	                          call 0x400a57d	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x400a57d	          0x4989c5	                            mov r13, rax	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x400a580	          0x4c89f9	                            mov rcx, r15	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400a583	          0x4889c7	                            mov rdi, rax	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400a586	      0xb800000000	                              mov eax, 0	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400a58b	            0xf2ae	              repne scasb al, byte [rdi]	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400a58d	          0x48f7d1	                                 not rcx	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400a590	            0x89cf	                            mov edi, ecx	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400a592	          0x4429e7	                           sub edi, r12d	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400a595	      0xe800000000	                          call 0x400a59a	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400a59a	          0x4989c4	                            mov r12, rax	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400a59d	          0x4885c0	                           test rax, rax	      1929	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x400a5a0	            0x747c	                            je 0x400a61e	      1929	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x400a5a2	      0x4863542418	         movsxd rdx, dword [rsp + 0x18] 	        59	string3.h	FUNCTION_93	CALL_3
0x400a5a7	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_93	CALL_3
0x400a5aa	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x400a5ad	      0xe800000000	                          call 0x400a5b2	        59	string3.h	FUNCTION_93	CALL_3
0x400a5b2	        0x8b542404	                mov edx, dword [rsp + 4]	        90	string3.h	FUNCTION_95	CALL_6
0x400a5b6	           0x31424	                    add edx, dword [rsp]	        90	string3.h	FUNCTION_95	CALL_6
0x400a5b9	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x400a5bc	      0x48637c2418	         movsxd rdi, dword [rsp + 0x18] 	        90	string3.h	FUNCTION_95	CALL_6
0x400a5c1	          0x4c01e7	                            add rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x400a5c4	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400a5c9	      0xe800000000	                          call 0x400a5ce	        90	string3.h	FUNCTION_95	CALL_6
0x400a5ce	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a5d3	          0x4489c6	                            mov esi, r8d	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a5d6	         0x3742408	                add esi, dword [rsp + 8]	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a5da	          0x4863f6	                         movsxd rsi, esi	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a5dd	          0x4c01ee	                            add rsi, r13	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a5e0	          0x4c89f9	                            mov rcx, r15	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400a5e3	          0x4889f7	                            mov rdi, rsi	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400a5e6	      0xb800000000	                              mov eax, 0	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400a5eb	            0xf2ae	              repne scasb al, byte [rdi]	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400a5ed	          0x4889ca	                            mov rdx, rcx	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400a5f0	          0x48f7d2	                                 not rdx	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400a5f3	        0x48633c24	                 movsxd rdi, dword [rsp]	        59	string3.h	FUNCTION_93	CALL_3
0x400a5f7	          0x4d63c0	                          movsxd r8, r8d	        59	string3.h	FUNCTION_93	CALL_3
0x400a5fa	          0x4901f8	                             add r8, rdi	        59	string3.h	FUNCTION_93	CALL_3
0x400a5fd	      0x48637c2404	            movsxd rdi, dword [rsp + 4] 	        59	string3.h	FUNCTION_93	CALL_3
0x400a602	          0x4901f8	                             add r8, rdi	        59	string3.h	FUNCTION_93	CALL_3
0x400a605	        0x4b8d3c04	                     lea rdi, [r12 + r8]	        59	string3.h	FUNCTION_93	CALL_3
0x400a609	      0xe800000000	                          call 0x400a60e	        59	string3.h	FUNCTION_93	CALL_3
0x400a60e	      0xba00000000	                              mov edx, 0	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400a613	          0x4c89e6	                            mov rsi, r12	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400a616	          0x4889ef	                            mov rdi, rbp	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400a619	      0xe800000000	                          call 0x400a61e	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400a61e	        0x4883c501	                              add rbp, 1	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a622	        0x48396b30	            cmp qword [rbx + 0x30], rbp 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a626	     0xf8d01ffffff	                           jge 0x400a52d	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400a62c	      0xe800000000	                          call 0x400a631	      1943	ops.c	FUNCTION_33	IF_22	CALL_35
0x400a631	    0x488b05000000	            mov rax, qword [0x0400a638] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400a638	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400a63c	        0x488d5101	                      lea rdx, [rcx + 1]	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400a640	          0x8b7040	            mov esi, dword [rax + 0x40] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400a643	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400a647	      0xb900000000	                              mov ecx, 0	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400a64c	      0xe800000000	                          call 0x400a651	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400a651	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1946	ops.c	FUNCTION_33	IF_22
0x400a659	      0xe9d9030000	                           jmp 0x400aa37	      1946	ops.c	FUNCTION_33	IF_22
0x400a65e	        0x837b0801	                  cmp dword [rbx + 8], 1	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27
0x400a662	     0xf85d0000000	                           jne 0x400a738	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27
0x400a668	          0x833b03	                      cmp dword [rbx], 3	      1950	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x400a66b	     0xf85a5000000	                           jne 0x400a716	      1950	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x400a671	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400a676	            0x7e30	                           jle 0x400a6a8	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400a678	    0x488b05000000	            mov rax, qword [0x0400a67f] 	      1958	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400a67f	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      1958	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400a683	        0x488d5501	                      lea rdx, [rbp + 1]	      1959	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400a687	        0x48895038	             mov qword [rax + 0x38], rdx	      1959	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400a68b	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400a68f	        0x488d78ff	                      lea rdi, [rax - 1]	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400a693	      0xbe01000000	                              mov esi, 1	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400a698	      0xe800000000	                          call 0x400a69d	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400a69d	    0x488b05000000	            mov rax, qword [0x0400a6a4] 	      1961	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400a6a4	        0x48896838	             mov qword [rax + 0x38], rbp	      1961	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400a6a8	      0xe800000000	                          call 0x400a6ad	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x400a6ad	            0x89c5	                            mov ebp, eax	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x400a6af	            0x85c0	                           test eax, eax	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x400a6b1	     0xf84f4030000	                            je 0x400aaab	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x400a6b7	    0x488b05000000	            mov rax, qword [0x0400a6be] 	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400a6be	    0x83b8ec130000	             cmp dword [rax + 0x13ec], 0	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400a6c5	            0x7426	                            je 0x400a6ed	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400a6c7	      0xbf01000000	                              mov edi, 1	      1967	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31	CALL_39
0x400a6cc	      0xe800000000	                          call 0x400a6d1	      1967	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31	CALL_39
0x400a6d1	    0xc70500000000	               mov dword [0x0400a6db], 1	      1968	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400a6db	    0x488b05000000	            mov rax, qword [0x0400a6e2] 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400a6e2	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400a6e5	    0x890500000000	            mov dword [0x0400a6eb], eax 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400a6eb	            0xeb0a	                           jmp 0x400a6f7	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400a6ed	      0xbf00000000	                              mov edi, 0	      1972	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x400a6f2	      0xe800000000	                          call 0x400a6f7	      1972	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x400a6f7	      0xbf00000000	                              mov edi, 0	      1973	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_41
0x400a6fc	      0xe800000000	                          call 0x400a701	      1973	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_41
0x400a701	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1975	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x400a706	     0xf8e2b030000	                           jle 0x400aa37	      1975	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x400a70c	      0xe800000000	                          call 0x400a711	      1976	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_42
0x400a711	      0xe921030000	                           jmp 0x400aa37	      1976	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_42
0x400a716	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x400a71a	      0xbe01000000	                              mov esi, 1	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x400a71f	      0xe800000000	                          call 0x400a724	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x400a724	      0xbf05000000	                              mov edi, 5	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x400a729	      0xe800000000	                          call 0x400a72e	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x400a72e	      0xe800000000	                          call 0x400a733	      1982	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x400a733	      0xe9ff020000	                           jmp 0x400aa37	      1982	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x400a738	    0x833d00000000	               cmp dword [0x0400a73f], 0	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33
0x400a73f	     0xf8415010000	                            je 0x400a85a	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33
0x400a745	        0x488d7b20	                   lea rdi, [rbx + 0x20]	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400a749	      0xe800000000	                          call 0x400a74e	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400a74e	          0x83f809	                              cmp eax, 9	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400a751	     0xf8582000000	                           jne 0x400a7d9	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400a757	      0xe800000000	                          call 0x400a75c	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400a75c	            0x89c5	                            mov ebp, eax	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400a75e	            0x85c0	                           test eax, eax	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400a760	     0xf8445030000	                            je 0x400aaab	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400a766	      0xbd00000000	                              mov ebp, 0	      1990	ops.c	FUNCTION_33	ELSE_4	IF_33
0x400a76b	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x400a770	            0x750d	                           jne 0x400a77f	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x400a772	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400a775	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400a778	      0xe800000000	                          call 0x400a77d	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400a77d	            0x89c5	                            mov ebp, eax	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400a77f	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400a782	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400a785	      0xe800000000	                          call 0x400a78a	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400a78a	            0x89c7	                            mov edi, eax	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400a78c	      0xe800000000	                          call 0x400a791	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400a791	    0x488b05000000	            mov rax, qword [0x0400a798] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400a798	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400a79c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400a7a0	        0x48894320	             mov qword [rbx + 0x20], rax	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400a7a4	        0x48895328	             mov qword [rbx + 0x28], rdx	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400a7a8	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      2001	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400a7ad	            0x752a	                           jne 0x400a7d9	      2001	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400a7af	            0x89ef	                            mov edi, ebp	      2003	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x400a7b1	      0xe800000000	                          call 0x400a7b6	      2003	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x400a7b6	    0x488b05000000	            mov rax, qword [0x0400a7bd] 	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400a7bd	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400a7c0	          0x895338	             mov dword [rbx + 0x38], edx	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400a7c3	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2005	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400a7c6	          0x89533c	             mov dword [rbx + 0x3c], edx	      2005	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400a7c9	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400a7cd	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400a7d1	        0x48897038	             mov qword [rax + 0x38], rsi	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400a7d5	        0x48897840	             mov qword [rax + 0x40], rdi	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400a7d9	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400a7dd	      0xe800000000	                          call 0x400a7e2	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400a7e2	          0x83f809	                              cmp eax, 9	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400a7e5	            0x7573	                           jne 0x400a85a	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400a7e7	          0x8b4314	            mov eax, dword [rbx + 0x14] 	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a7ea	          0x39433c	            cmp dword [rbx + 0x3c], eax 	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a7ed	            0x7d6b	                           jge 0x400a85a	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a7ef	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2016	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x400a7f3	        0x488d7001	                      lea rsi, [rax + 1]	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400a7f7	        0x488d78ff	                      lea rdi, [rax - 1]	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400a7fb	      0xe800000000	                          call 0x400a800	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400a800	            0x89c5	                            mov ebp, eax	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400a802	            0x85c0	                           test eax, eax	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400a804	     0xf84a1020000	                            je 0x400aaab	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400a80a	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a80e	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a812	    0x488b05000000	            mov rax, qword [0x0400a819] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a819	        0x48897038	             mov qword [rax + 0x38], rsi	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a81d	        0x48897840	             mov qword [rax + 0x40], rdi	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a821	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400a824	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400a827	      0xe800000000	                          call 0x400a82c	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400a82c	            0x89c7	                            mov edi, eax	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400a82e	      0xe800000000	                          call 0x400a833	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400a833	    0x488b05000000	            mov rax, qword [0x0400a83a] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a83a	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a83e	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a842	        0x48897330	             mov qword [rbx + 0x30], rsi	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a846	        0x48897b38	             mov qword [rbx + 0x38], rdi	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a84a	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a84e	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a852	        0x48897038	             mov qword [rax + 0x38], rsi	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a856	        0x48897840	             mov qword [rax + 0x40], rdi	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400a85a	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400a85e	        0x4883fe01	                              cmp rsi, 1	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400a862	     0xf85fd000000	                           jne 0x400a965	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400a868	      0xe800000000	                          call 0x400a86d	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400a86d	            0x89c5	                            mov ebp, eax	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400a86f	            0x85c0	                           test eax, eax	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400a871	     0xf8434020000	                            je 0x400aaab	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400a877	      0xbe24000000	                           mov esi, 0x24	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400a87c	    0x488b3d000000	            mov rdi, qword [0x0400a883] 	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400a883	      0xe800000000	                          call 0x400a888	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400a888	          0x4885c0	                           test rax, rax	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400a88b	            0x7430	                            je 0x400a8bd	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400a88d	          0x833b03	                      cmp dword [rbx], 3	      2033	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400a890	            0x752b	                           jne 0x400a8bd	      2033	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400a892	    0x488b05000000	            mov rax, qword [0x0400a899] 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400a899	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400a89d	        0x48394330	            cmp qword [rbx + 0x30], rax 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400a8a1	            0x751a	                           jne 0x400a8bd	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400a8a3	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400a8a7	            0x7514	                           jne 0x400a8bd	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400a8a9	        0x837b1400	               cmp dword [rbx + 0x14], 0	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400a8ad	           0xf94c0	                                 sete al	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400a8b0	           0xfb6c0	                           movzx eax, al	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400a8b3	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400a8b6	            0x29c7	                            sub edi, eax	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400a8b8	      0xe800000000	                          call 0x400a8bd	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400a8bd	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400a8c0	          0x2b4328	             sub eax, dword [rbx + 0x28]	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400a8c3	        0x837b1400	               cmp dword [rbx + 0x14], 0	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400a8c7	           0xf95c2	                                setne dl	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400a8ca	           0xfb6d2	                           movzx edx, dl	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400a8cd	          0x8d2c02	                    lea ebp, [rdx + rax]	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400a8d0	    0x833d00000000	               cmp dword [0x0400a8d7], 0	      2041	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x400a8d7	            0x745c	                            je 0x400a935	      2041	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x400a8d9	      0xe800000000	                          call 0x400a8de	      2046	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_59
0x400a8de	          0x4889c7	                            mov rdi, rax	      2046	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_59
0x400a8e1	      0xb800000000	                              mov eax, 0	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x400a8e6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x400a8ed	            0xf2ae	              repne scasb al, byte [rdi]	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x400a8ef	          0x4889c8	                            mov rax, rcx	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x400a8f2	          0x48f7d0	                                 not rax	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x400a8f5	        0x4883e801	                              sub rax, 1	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x400a8f9	          0x8b533c	            mov edx, dword [rbx + 0x3c] 	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400a8fc	            0x85d2	                           test edx, edx	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400a8fe	            0x740f	                            je 0x400a90f	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400a900	          0x83e801	                              sub eax, 1	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400a903	          0x394338	            cmp dword [rbx + 0x38], eax 	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400a906	            0x7c07	                            jl 0x400a90f	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400a908	        0x837b2c01	               cmp dword [rbx + 0x2c], 1	      2052	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400a90c	          0x83d500	                              adc ebp, 0	      2052	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400a90f	            0x85ed	                           test ebp, ebp	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400a911	            0x750b	                           jne 0x400a91e	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400a913	          0x39532c	            cmp dword [rbx + 0x2c], edx 	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400a916	        0x400f95c5	                               setne bpl	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400a91a	        0x400fb6ed	                          movzx ebp, bpl	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400a91e	      0xe800000000	                          call 0x400a923	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x400a923	            0x85c0	                           test eax, eax	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x400a925	            0x740e	                            je 0x400a935	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x400a927	    0x488b05000000	            mov rax, qword [0x0400a92e] 	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x400a92e	    0xc74044000000	               mov dword [rax + 0x44], 0	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x400a935	          0x833b01	                      cmp dword [rbx], 1	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a938	            0x750c	                           jne 0x400a946	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a93a	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a93e	        0x410f94c4	                               sete r12b	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a942	        0x450fb6e4	                        movzx r12d, r12b	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a946	    0x833d00000000	               cmp dword [0x0400a94d], 0	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a94d	        0x400f94c6	                                sete sil	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a951	        0x400fb6f6	                          movzx esi, sil	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a955	          0x4863fd	                         movsxd rdi, ebp	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a958	          0x4489e2	                           mov edx, r12d	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a95b	      0xe800000000	                          call 0x400a960	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a960	      0xe9d2000000	                           jmp 0x400aa37	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400a965	    0x488b05000000	            mov rax, qword [0x0400a96c] 	      2071	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x400a96c	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2071	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x400a970	          0x4801fe	                            add rsi, rdi	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400a973	        0x4883ef01	                              sub rdi, 1	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400a977	      0xe800000000	                          call 0x400a97c	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400a97c	            0x89c5	                            mov ebp, eax	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400a97e	            0x85c0	                           test eax, eax	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400a980	     0xf8425010000	                            je 0x400aaab	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400a986	      0xbf01000000	                              mov edi, 1	      2074	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_64
0x400a98b	      0xe800000000	                          call 0x400a990	      2074	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_64
0x400a990	    0x488b05000000	            mov rax, qword [0x0400a997] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a997	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a99b	        0x448b7840	           mov r15d, dword [rax + 0x40] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a99f	        0x448b6844	           mov r13d, dword [rax + 0x44] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a9a3	        0x488d5501	                      lea rdx, [rbp + 1]	      2077	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a9a7	        0x48895038	             mov qword [rax + 0x38], rdx	      2077	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a9ab	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400a9af	        0x488d78fe	                      lea rdi, [rax - 2]	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400a9b3	      0xbe00000000	                              mov esi, 0	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400a9b8	      0xe800000000	                          call 0x400a9bd	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400a9bd	        0x837b1400	               cmp dword [rbx + 0x14], 0	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a9c1	        0x400f95c7	                               setne dil	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a9c5	        0x400fb6ff	                          movzx edi, dil	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a9c9	           0x37b38	             add edi, dword [rbx + 0x38]	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a9cc	    0x488b05000000	            mov rax, qword [0x0400a9d3] 	      2082	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a9d3	    0xc74040000000	               mov dword [rax + 0x40], 0	      2082	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400a9da	          0x833b01	                      cmp dword [rbx], 1	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400a9dd	            0x750c	                           jne 0x400a9eb	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400a9df	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400a9e3	        0x410f94c4	                               sete r12b	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400a9e7	        0x450fb6e4	                        movzx r12d, r12b	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400a9eb	    0x833d00000000	               cmp dword [0x0400a9f2], 0	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400a9f2	        0x400f94c6	                                sete sil	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400a9f6	        0x400fb6f6	                          movzx esi, sil	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400a9fa	          0x4863ff	                         movsxd rdi, edi	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400a9fd	          0x4489e2	                           mov edx, r12d	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400aa00	      0xe800000000	                          call 0x400aa05	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400aa05	    0x488b05000000	            mov rax, qword [0x0400aa0c] 	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400aa0c	        0x48896838	             mov qword [rax + 0x38], rbp	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400aa10	        0x44897840	            mov dword [rax + 0x40], r15d	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400aa14	        0x44896844	            mov dword [rax + 0x44], r13d	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400aa18	    0x41b800000000	                              mov r8d, 0	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400aa1e	      0xb900000000	                              mov ecx, 0	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400aa23	      0xba00000000	                              mov edx, 0	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400aa28	      0xbe00000000	                              mov esi, 0	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400aa2d	      0xbf02000000	                              mov edi, 2	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400aa32	      0xe800000000	                          call 0x400aa37	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400aa37	    0x488b05000000	            mov rax, qword [0x0400aa3e] 	      2090	ops.c	FUNCTION_33	CALL_68
0x400aa3e	          0x488b38	                    mov rdi, qword [rax]	      2090	ops.c	FUNCTION_33	CALL_68
0x400aa41	          0x4c29f7	                            sub rdi, r14	      2090	ops.c	FUNCTION_33	CALL_68
0x400aa44	      0xe800000000	                          call 0x400aa49	      2090	ops.c	FUNCTION_33	CALL_68
0x400aa49	        0x837b6000	               cmp dword [rbx + 0x60], 0	      2095	ops.c	FUNCTION_33	IF_48
0x400aa4d	            0x741d	                            je 0x400aa6c	      2095	ops.c	FUNCTION_33	IF_48
0x400aa4f	    0x488b05000000	            mov rax, qword [0x0400aa56] 	      2097	ops.c	FUNCTION_33	IF_48
0x400aa56	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2097	ops.c	FUNCTION_33	IF_48
0x400aa5a	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2097	ops.c	FUNCTION_33	IF_48
0x400aa61	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      2098	ops.c	FUNCTION_33	IF_48
0x400aa64	    0x899008120000	          mov dword [rax + 0x1208], edx 	      2098	ops.c	FUNCTION_33	IF_48
0x400aa6a	            0xeb1d	                           jmp 0x400aa89	      2098	ops.c	FUNCTION_33	IF_48
0x400aa6c	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400aa70	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400aa74	    0x488b05000000	            mov rax, qword [0x0400aa7b] 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400aa7b	    0x4889b0001200	          mov qword [rax + 0x1200], rsi 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400aa82	    0x4889b8081200	          mov qword [rax + 0x1208], rdi 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400aa89	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      2102	ops.c	FUNCTION_33	ELSE_6
0x400aa8d	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      2102	ops.c	FUNCTION_33	ELSE_6
0x400aa91	    0x488b05000000	            mov rax, qword [0x0400aa98] 	      2102	ops.c	FUNCTION_33	ELSE_6
0x400aa98	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      2102	ops.c	FUNCTION_33	ELSE_6
0x400aa9f	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      2102	ops.c	FUNCTION_33	ELSE_6
0x400aaa6	      0xbd01000000	                              mov ebp, 1	      2104	ops.c	FUNCTION_33	ELSE_6
0x400aaab	            0x89e8	                            mov eax, ebp	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aaad	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aab2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aabb	            0x7419	                            je 0x400aad6	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aabd	            0xeb12	                           jmp 0x400aad1	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aabf	      0xe800000000	                          call 0x400aac4	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x400aac4	            0x85c0	                           test eax, eax	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x400aac6	     0xf8419faffff	                            je 0x400a4e5	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x400aacc	      0xe905faffff	                           jmp 0x400a4d6	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x400aad1	      0xe800000000	                          call 0x400aad6	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aad6	        0x4883c458	                           add rsp, 0x58	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aada	              0x5b	                                 pop rbx	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aadb	              0x5d	                                 pop rbp	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aadc	            0x415c	                                 pop r12	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aade	            0x415d	                                 pop r13	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aae0	            0x415e	                                 pop r14	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aae2	            0x415f	                                 pop r15	      2105	ops.c	FUNCTION_33	ELSE_6
0x400aae4	              0xc3	                                     ret	      2105	ops.c	FUNCTION_33	ELSE_6
same_leader	CALL,8:ELSE,1:WHILE,1:FOR,4:functions,0:IF,11:SWITCH,0:DO,0	164
0x4000436	            0x4156	                                push r14	      4756	ops.c	FUNCTION_56
0x4000438	            0x4155	                                push r13	      4756	ops.c	FUNCTION_56
0x400043a	            0x4154	                                push r12	      4756	ops.c	FUNCTION_56
0x400043c	              0x55	                                push rbp	      4756	ops.c	FUNCTION_56
0x400043d	              0x53	                                push rbx	      4756	ops.c	FUNCTION_56
0x400043e	          0x4189cc	                           mov r12d, ecx	      4756	ops.c	FUNCTION_56
0x4000441	            0x85f6	                           test esi, esi	      4762	ops.c	FUNCTION_56	IF_1
0x4000443	            0x750d	                           jne 0x4000452	      4762	ops.c	FUNCTION_56	IF_1
0x4000445	            0x85c9	                           test ecx, ecx	      4763	ops.c	FUNCTION_56	IF_1
0x4000447	           0xf94c0	                                 sete al	      4763	ops.c	FUNCTION_56	IF_1
0x400044a	           0xfb6c0	                           movzx eax, al	      4763	ops.c	FUNCTION_56	IF_1
0x400044d	      0xe9e5010000	                           jmp 0x4000637	      4763	ops.c	FUNCTION_56	IF_1
0x4000452	          0x4989fe	                            mov r14, rdi	      4763	ops.c	FUNCTION_56	IF_1
0x4000455	          0x4189f5	                           mov r13d, esi	      4763	ops.c	FUNCTION_56	IF_1
0x4000458	          0x4c89c3	                             mov rbx, r8	      4763	ops.c	FUNCTION_56	IF_1
0x400045b	          0x4885d2	                           test rdx, rdx	      4772	ops.c	FUNCTION_56	IF_2
0x400045e	     0xf84c7000000	                            je 0x400052b	      4772	ops.c	FUNCTION_56	IF_2
0x4000464	           0xfb602	                   movzx eax, byte [rdx]	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4000467	            0x84c0	                             test al, al	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4000469	     0xf84bc000000	                            je 0x400052b	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x400046f	            0x3c3a	                            cmp al, 0x3a	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4000471	     0xf84b4000000	                            je 0x400052b	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4000477	            0x3c66	                            cmp al, 0x66	      4776	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x4000479	            0x7416	                            je 0x4000491	      4776	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x400047b	            0x3c65	                            cmp al, 0x65	      4778	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x400047d	     0xf848c010000	                            je 0x400060f	      4778	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x4000483	            0x3c73	                            cmp al, 0x73	      4780	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x4000485	     0xf858d000000	                           jne 0x4000518	      4780	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x400048b	            0xeb1e	                           jmp 0x40004ab	      4780	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x400048d	            0x3c66	                            cmp al, 0x66	      4776	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x400048f	            0x750e	                           jne 0x400049f	      4776	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x4000491	          0x4585e4	                         test r12d, r12d	      4777	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x4000494	           0xf94c0	                                 sete al	      4777	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x4000497	           0xfb6c0	                           movzx eax, al	      4777	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x400049a	      0xe998010000	                           jmp 0x4000637	      4777	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x400049f	            0x3c65	                            cmp al, 0x65	      4778	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x40004a1	     0xf846f010000	                            je 0x4000616	      4778	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x40004a7	            0x3c73	                            cmp al, 0x73	      4780	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x40004a9	            0x756d	                           jne 0x4000518	      4780	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x40004ab	          0x4c89f7	                            mov rdi, r14	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40004ae	      0xe800000000	                          call 0x40004b3	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40004b3	          0x4889c2	                            mov rdx, rax	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40004b6	          0x4d63ed	                        movsxd r13, r13d	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40004b9	      0xb800000000	                              mov eax, 0	      4783	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6
0x40004be	      0x42803c2a00	                 cmp byte [rdx + r13], 0	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40004c3	     0xf846e010000	                            je 0x4000637	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40004c9	          0x4885db	                           test rbx, rbx	      4784	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x40004cc	     0xf844b010000	                            je 0x400061d	      4784	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x40004d2	          0x4585e4	                         test r12d, r12d	      4784	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x40004d5	     0xf8442010000	                            je 0x400061d	      4784	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x40004db	           0xfb603	                   movzx eax, byte [rbx]	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x40004de	            0x84c0	                             test al, al	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x40004e0	     0xf843e010000	                            je 0x4000624	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x40004e6	            0x3c3a	                            cmp al, 0x3a	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x40004e8	     0xf8436010000	                            je 0x4000624	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x40004ee	            0x3c6d	                            cmp al, 0x6d	      4787	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x40004f0	            0x750d	                           jne 0x40004ff	      4787	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x40004f2	      0xe934010000	                           jmp 0x400062b	      4787	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x40004f7	            0x3c6d	                            cmp al, 0x6d	      4787	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x40004f9	     0xf8433010000	                            je 0x4000632	      4787	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x40004ff	        0x4883c301	                              add rbx, 1	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4000503	           0xfb603	                   movzx eax, byte [rbx]	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4000506	            0x84c0	                             test al, al	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4000508	            0x7404	                            je 0x400050e	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x400050a	            0x3c3a	                            cmp al, 0x3a	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x400050c	            0x75e9	                           jne 0x40004f7	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x400050e	      0xb800000000	                              mov eax, 0	      4789	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x4000513	      0xe91f010000	                           jmp 0x4000637	      4789	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x4000518	        0x4883c201	                              add rdx, 1	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x400051c	           0xfb602	                   movzx eax, byte [rdx]	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x400051f	            0x84c0	                             test al, al	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4000521	            0x7408	                            je 0x400052b	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4000523	            0x3c3a	                            cmp al, 0x3a	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4000525	     0xf8562ffffff	                           jne 0x400048d	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x400052b	          0x4c89f7	                            mov rdi, r14	      4798	ops.c	FUNCTION_56	CALL_3
0x400052e	      0xe800000000	                          call 0x4000533	      4798	ops.c	FUNCTION_56	CALL_3
0x4000533	          0x4889c7	                            mov rdi, rax	      4798	ops.c	FUNCTION_56	CALL_3
0x4000536	      0xe800000000	                          call 0x400053b	      4798	ops.c	FUNCTION_56	CALL_3
0x400053b	          0x4889c5	                            mov rbp, rax	      4798	ops.c	FUNCTION_56	CALL_3
0x400053e	          0x4885c0	                           test rax, rax	      4799	ops.c	FUNCTION_56	IF_9
0x4000541	     0xf84aa000000	                            je 0x40005f1	      4799	ops.c	FUNCTION_56	IF_9
0x4000547	           0xfb600	                   movzx eax, byte [rax]	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x400054a	            0x3c20	                            cmp al, 0x20	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x400054c	            0x7404	                            je 0x4000552	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x400054e	            0x3c09	                               cmp al, 9	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4000550	            0x751a	                           jne 0x400056c	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4000552	      0xbb00000000	                              mov ebx, 0	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4000557	          0x83c301	                              add ebx, 1	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x400055a	          0x4863c3	                         movsxd rax, ebx	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x400055d	       0xfb6440500	             movzx eax, byte [rbp + rax]	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4000562	            0x3c20	                            cmp al, 0x20	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4000564	            0x74f1	                            je 0x4000557	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4000566	            0x3c09	                               cmp al, 9	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4000568	            0x74ed	                            je 0x4000557	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x400056a	            0xeb05	                           jmp 0x4000571	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x400056c	      0xbb00000000	                              mov ebx, 0	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4000571	        0x498d7e01	                      lea rdi, [r14 + 1]	      4803	ops.c	FUNCTION_56	IF_9	CALL_5
0x4000575	      0xe800000000	                          call 0x400057a	      4803	ops.c	FUNCTION_56	IF_9	CALL_5
0x400057a	          0x4585e4	                         test r12d, r12d	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x400057d	            0x7e5e	                           jle 0x40005dd	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x400057f	    0x41be00000000	                             mov r14d, 0	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x4000585	           0xfb610	                   movzx edx, byte [rax]	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4000588	          0x80fa20	                            cmp dl, 0x20	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x400058b	            0x7405	                            je 0x4000592	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x400058d	          0x80fa09	                               cmp dl, 9	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4000590	            0x7514	                           jne 0x40005a6	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4000592	          0x4863d3	                         movsxd rdx, ebx	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4000595	       0xfb6541500	             movzx edx, byte [rbp + rdx]	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x400059a	          0x80fa20	                            cmp dl, 0x20	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x400059d	            0x7417	                            je 0x40005b6	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x400059f	          0x80fa09	                               cmp dl, 9	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x40005a2	            0x7412	                            je 0x40005b6	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x40005a4	            0xeb25	                           jmp 0x40005cb	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x40005a6	          0x8d4b01	                      lea ecx, [rbx + 1]	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x40005a9	          0x4863db	                         movsxd rbx, ebx	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x40005ac	        0x3a541d00	                cmp dl, byte [rbp + rbx]	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x40005b0	            0x7533	                           jne 0x40005e5	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x40005b2	            0x89cb	                            mov ebx, ecx	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x40005b4	            0xeb15	                           jmp 0x40005cb	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x40005b6	          0x83c301	                              add ebx, 1	      4813	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1
0x40005b9	          0x4863d3	                         movsxd rdx, ebx	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x40005bc	       0xfb6541500	             movzx edx, byte [rbp + rdx]	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x40005c1	          0x80fa20	                            cmp dl, 0x20	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x40005c4	            0x74f0	                            je 0x40005b6	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x40005c6	          0x80fa09	                               cmp dl, 9	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x40005c9	            0x74eb	                            je 0x40005b6	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x40005cb	        0x4183c601	                             add r14d, 1	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x40005cf	        0x4883c001	                              add rax, 1	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x40005d3	          0x4539f4	                          cmp r12d, r14d	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x40005d6	            0x75ad	                           jne 0x4000585	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x40005d8	          0x4589e6	                          mov r14d, r12d	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x40005db	            0xeb0a	                           jmp 0x40005e7	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x40005dd	    0x41be00000000	                             mov r14d, 0	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x40005e3	            0xeb02	                           jmp 0x40005e7	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x40005e5	            0x89cb	                            mov ebx, ecx	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x40005e7	          0x4889ef	                            mov rdi, rbp	      4815	ops.c	FUNCTION_56	IF_9	CALL_8
0x40005ea	      0xe800000000	                          call 0x40005ef	      4815	ops.c	FUNCTION_56	IF_9	CALL_8
0x40005ef	            0xeb0b	                           jmp 0x40005fc	      4815	ops.c	FUNCTION_56	IF_9	CALL_8
0x40005f1	    0x41be00000000	                             mov r14d, 0	      4757	ops.c	FUNCTION_56
0x40005f7	      0xbb00000000	                              mov ebx, 0	      4757	ops.c	FUNCTION_56
0x40005fc	          0x4539e6	                          cmp r14d, r12d	      4817	ops.c	FUNCTION_56
0x40005ff	           0xf94c0	                                 sete al	      4817	ops.c	FUNCTION_56
0x4000602	          0x4439eb	                           cmp ebx, r13d	      4817	ops.c	FUNCTION_56
0x4000605	           0xf94c2	                                 sete dl	      4817	ops.c	FUNCTION_56
0x4000608	           0xfb6d2	                           movzx edx, dl	      4817	ops.c	FUNCTION_56
0x400060b	            0x21d0	                            and eax, edx	      4817	ops.c	FUNCTION_56
0x400060d	            0xeb28	                           jmp 0x4000637	      4817	ops.c	FUNCTION_56
0x400060f	      0xb800000000	                              mov eax, 0	      4779	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x4000614	            0xeb21	                           jmp 0x4000637	      4779	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x4000616	      0xb800000000	                              mov eax, 0	      4779	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x400061b	            0xeb1a	                           jmp 0x4000637	      4779	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x400061d	      0xb800000000	                              mov eax, 0	      4785	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x4000622	            0xeb13	                           jmp 0x4000637	      4785	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x4000624	      0xb800000000	                              mov eax, 0	      4789	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x4000629	            0xeb0c	                           jmp 0x4000637	      4789	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x400062b	      0xb801000000	                              mov eax, 1	      4788	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x4000630	            0xeb05	                           jmp 0x4000637	      4788	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x4000632	      0xb801000000	                              mov eax, 1	      4788	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x4000637	              0x5b	                                 pop rbx	      4818	ops.c	FUNCTION_56
0x4000638	              0x5d	                                 pop rbp	      4818	ops.c	FUNCTION_56
0x4000639	            0x415c	                                 pop r12	      4818	ops.c	FUNCTION_56
0x400063b	            0x415d	                                 pop r13	      4818	ops.c	FUNCTION_56
0x400063d	            0x415e	                                 pop r14	      4818	ops.c	FUNCTION_56
0x400063f	              0xc3	                                     ret	      4818	ops.c	FUNCTION_56
get_op_type	CALL,1:ELSE,0:WHILE,0:FOR,1:functions,0:IF,6:SWITCH,0:DO,0	38
0x4001d19	      0xb810000000	                           mov eax, 0x10	       178	ops.c	FUNCTION_1	IF_1
0x4001d1e	          0x83ff72	                           cmp edi, 0x72	       177	ops.c	FUNCTION_1	IF_1
0x4001d21	            0x746c	                            je 0x4001d8f	       177	ops.c	FUNCTION_1	IF_1
0x4001d23	      0xb807000000	                              mov eax, 7	       180	ops.c	FUNCTION_1	IF_2
0x4001d28	          0x83ff7e	                           cmp edi, 0x7e	       179	ops.c	FUNCTION_1	IF_2
0x4001d2b	            0x7462	                            je 0x4001d8f	       179	ops.c	FUNCTION_1	IF_2
0x4001d2d	          0x83ff67	                           cmp edi, 0x67	       181	ops.c	FUNCTION_1	IF_3
0x4001d30	           0xf94c2	                                 sete dl	       181	ops.c	FUNCTION_1	IF_3
0x4001d33	          0x83fe01	                              cmp esi, 1	       181	ops.c	FUNCTION_1	IF_3
0x4001d36	            0x7509	                           jne 0x4001d41	       181	ops.c	FUNCTION_1	IF_3
0x4001d38	      0xb81c000000	                           mov eax, 0x1c	       182	ops.c	FUNCTION_1	IF_3
0x4001d3d	            0x84d2	                             test dl, dl	       181	ops.c	FUNCTION_1	IF_3
0x4001d3f	            0x754e	                           jne 0x4001d8f	       181	ops.c	FUNCTION_1	IF_3
0x4001d41	          0x83fe18	                           cmp esi, 0x18	       183	ops.c	FUNCTION_1	IF_4
0x4001d44	            0x7509	                           jne 0x4001d4f	       183	ops.c	FUNCTION_1	IF_4
0x4001d46	      0xb81d000000	                           mov eax, 0x1d	       184	ops.c	FUNCTION_1	IF_4
0x4001d4b	            0x84d2	                             test dl, dl	       183	ops.c	FUNCTION_1	IF_4
0x4001d4d	            0x7540	                           jne 0x4001d8f	       183	ops.c	FUNCTION_1	IF_4
0x4001d4f	      0xba00000000	                              mov edx, 0	       183	ops.c	FUNCTION_1	IF_4
0x4001d54	      0xb800000000	                              mov eax, 0	       183	ops.c	FUNCTION_1	IF_4
0x4001d59	           0xfbe0a	                   movsx ecx, byte [rdx]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x4001d5c	            0x39cf	                            cmp edi, ecx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x4001d5e	            0x7508	                           jne 0x4001d68	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x4001d60	         0xfbe4a01	               movsx ecx, byte [rdx + 1]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x4001d64	            0x39ce	                            cmp esi, ecx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x4001d66	            0x7427	                            je 0x4001d8f	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x4001d68	        0x4883c203	                              add rdx, 3	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x4001d6c	          0x83f81d	                           cmp eax, 0x1d	       189	ops.c	FUNCTION_1	FOR_1	IF_6
0x4001d6f	            0x7515	                           jne 0x4001d86	       189	ops.c	FUNCTION_1	FOR_1	IF_6
0x4001d71	        0x4883ec08	                              sub rsp, 8	       174	ops.c	FUNCTION_1
0x4001d75	      0xbf00000000	                              mov edi, 0	       191	ops.c	FUNCTION_1	FOR_1	IF_6	CALL_1
0x4001d7a	      0xe800000000	                          call 0x4001d7f	       191	ops.c	FUNCTION_1	FOR_1	IF_6	CALL_1
0x4001d7f	      0xb81d000000	                           mov eax, 0x1d	       195	ops.c	FUNCTION_1
0x4001d84	            0xeb05	                           jmp 0x4001d8b	       192	ops.c	FUNCTION_1	FOR_1	IF_6
0x4001d86	          0x83c001	                              add eax, 1	       185	ops.c	FUNCTION_1	FOR_1
0x4001d89	            0xebce	                           jmp 0x4001d59	       194	ops.c	FUNCTION_1	FOR_1
0x4001d8b	        0x4883c408	                              add rsp, 8	       196	ops.c	FUNCTION_1
0x4001d8f	            0xf3c3	                                     ret	       196	ops.c	FUNCTION_1
write_reg_contents_ex	CALL,18:ELSE,2:WHILE,0:FOR,0:functions,0:IF,11:SWITCH,0:DO,0	129
0x4006d96	            0x4156	                                push r14	      7050	ops.c	FUNCTION_87
0x4006d98	            0x4155	                                push r13	      7050	ops.c	FUNCTION_87
0x4006d9a	            0x4154	                                push r12	      7050	ops.c	FUNCTION_87
0x4006d9c	              0x55	                                push rbp	      7050	ops.c	FUNCTION_87
0x4006d9d	              0x53	                                push rbx	      7050	ops.c	FUNCTION_87
0x4006d9e	        0x4883ec30	                           sub rsp, 0x30	      7050	ops.c	FUNCTION_87
0x4006da2	            0x89fd	                            mov ebp, edi	      7050	ops.c	FUNCTION_87
0x4006da4	          0x4989f4	                            mov r12, rsi	      7050	ops.c	FUNCTION_87
0x4006da7	          0x4189cd	                           mov r13d, ecx	      7050	ops.c	FUNCTION_87
0x4006daa	      0x448944240c	              mov dword [rsp + 0xc], r8d	      7050	ops.c	FUNCTION_87
0x4006daf	          0x4d89ce	                             mov r14, r9	      7050	ops.c	FUNCTION_87
0x4006db2	    0x64488b042528	                mov rax, qword fs:[0x28]	      7050	ops.c	FUNCTION_87
0x4006dbb	      0x4889442428	             mov qword [rsp + 0x28], rax	      7050	ops.c	FUNCTION_87
0x4006dc0	            0x31c0	                            xor eax, eax	      7050	ops.c	FUNCTION_87
0x4006dc2	          0x4863da	                         movsxd rbx, edx	      7055	ops.c	FUNCTION_87	IF_1
0x4006dc5	            0x85d2	                           test edx, edx	      7054	ops.c	FUNCTION_87	IF_1
0x4006dc7	            0x7918	                           jns 0x4006de1	      7054	ops.c	FUNCTION_87	IF_1
0x4006dc9	      0xb800000000	                              mov eax, 0	      7057	ops.c	FUNCTION_87	CALL_1
0x4006dce	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7057	ops.c	FUNCTION_87	CALL_1
0x4006dd5	          0x4889f7	                            mov rdi, rsi	      7057	ops.c	FUNCTION_87	CALL_1
0x4006dd8	            0xf2ae	              repne scasb al, byte [rdi]	      7057	ops.c	FUNCTION_87	CALL_1
0x4006dda	          0x48f7d1	                                 not rcx	      7057	ops.c	FUNCTION_87	CALL_1
0x4006ddd	        0x488d59ff	                      lea rbx, [rcx - 1]	      7057	ops.c	FUNCTION_87	CALL_1
0x4006de1	          0x83fd2f	                           cmp ebp, 0x2f	      7060	ops.c	FUNCTION_87	IF_2
0x4006de4	            0x751c	                           jne 0x4006e02	      7060	ops.c	FUNCTION_87	IF_2
0x4006de6	      0xb901000000	                              mov ecx, 1	      7062	ops.c	FUNCTION_87	IF_2	CALL_2
0x4006deb	      0xba01000000	                              mov edx, 1	      7062	ops.c	FUNCTION_87	IF_2	CALL_2
0x4006df0	      0xbe00000000	                              mov esi, 0	      7062	ops.c	FUNCTION_87	IF_2	CALL_2
0x4006df5	          0x4c89e7	                            mov rdi, r12	      7062	ops.c	FUNCTION_87	IF_2	CALL_2
0x4006df8	      0xe800000000	                          call 0x4006dfd	      7062	ops.c	FUNCTION_87	IF_2	CALL_2
0x4006dfd	      0xe95f010000	                           jmp 0x4006f61	      7063	ops.c	FUNCTION_87	IF_2
0x4006e02	          0x83fd23	                           cmp ebp, 0x23	      7066	ops.c	FUNCTION_87	IF_3
0x4006e05	     0xf85ab000000	                           jne 0x4006eb6	      7066	ops.c	FUNCTION_87	IF_3
0x4006e0b	      0x410fb60424	                   movzx eax, byte [r12]	      7070	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0x4006e10	          0x83e830	                           sub eax, 0x30	      7070	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0x4006e13	          0x83f809	                              cmp eax, 9	      7070	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0x4006e16	            0x7745	                            ja 0x4006e5d	      7070	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0x4006e18	      0xba0a000000	                            mov edx, 0xa	       280	stdlib.h	FUNCTION_104	CALL_2
0x4006e1d	      0xbe00000000	                              mov esi, 0	       280	stdlib.h	FUNCTION_104	CALL_2
0x4006e22	          0x4c89e7	                            mov rdi, r12	       280	stdlib.h	FUNCTION_104	CALL_2
0x4006e25	      0xe800000000	                          call 0x4006e2a	       280	stdlib.h	FUNCTION_104	CALL_2
0x4006e2a	          0x4889c3	                            mov rbx, rax	       280	stdlib.h	FUNCTION_104	CALL_2
0x4006e2d	            0x89c7	                            mov edi, eax	      7074	ops.c	FUNCTION_87	IF_3	IF_4	CALL_5
0x4006e2f	      0xe800000000	                          call 0x4006e34	      7074	ops.c	FUNCTION_87	IF_3	IF_4	CALL_5
0x4006e34	          0x4885c0	                           test rax, rax	      7075	ops.c	FUNCTION_87	IF_3	IF_4	IF_5
0x4006e37	            0x7565	                           jne 0x4006e9e	      7075	ops.c	FUNCTION_87	IF_3	IF_4	IF_5
0x4006e39	      0xba05000000	                              mov edx, 5	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x4006e3e	      0xbe00000000	                              mov esi, 0	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x4006e43	      0xbf00000000	                              mov edi, 0	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x4006e48	      0xe800000000	                          call 0x4006e4d	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x4006e4d	          0x4863f3	                         movsxd rsi, ebx	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x4006e50	          0x4889c7	                            mov rdi, rax	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x4006e53	      0xe800000000	                          call 0x4006e58	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x4006e58	      0xe904010000	                           jmp 0x4006f61	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x4006e5d	      0xb800000000	                              mov eax, 0	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e62	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e69	          0x4c89e7	                            mov rdi, r12	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e6c	            0xf2ae	              repne scasb al, byte [rdi]	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e6e	          0x48f7d1	                                 not rcx	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e71	      0x498d740cff	                lea rsi, [r12 + rcx - 1]	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e76	    0x41b800000000	                              mov r8d, 0	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e7c	      0xb900000000	                              mov ecx, 0	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e81	      0xba01000000	                              mov edx, 1	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e86	          0x4c89e7	                            mov rdi, r12	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e89	      0xe800000000	                          call 0x4006e8e	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e8e	            0x89c7	                            mov edi, eax	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e90	      0xe800000000	                          call 0x4006e95	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x4006e95	          0x4885c0	                           test rax, rax	      7081	ops.c	FUNCTION_87	IF_3	IF_6
0x4006e98	     0xf84c3000000	                            je 0x4006f61	      7081	ops.c	FUNCTION_87	IF_3	IF_6
0x4006e9e	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	      7083	ops.c	FUNCTION_87	IF_3
0x4006ea4	    0x488b05000000	            mov rax, qword [0x04006eab] 	      7083	ops.c	FUNCTION_87	IF_3
0x4006eab	    0x899078010000	            mov dword [rax + 0x178], edx	      7083	ops.c	FUNCTION_87	IF_3
0x4006eb1	      0xe9ab000000	                           jmp 0x4006f61	      7084	ops.c	FUNCTION_87	IF_3
0x4006eb6	          0x83fd3d	                           cmp ebp, 0x3d	      7088	ops.c	FUNCTION_87	IF_7
0x4006eb9	            0x7543	                           jne 0x4006efe	      7088	ops.c	FUNCTION_87	IF_7
0x4006ebb	            0x89de	                            mov esi, ebx	      7092	ops.c	FUNCTION_87	IF_7	CALL_11
0x4006ebd	          0x4c89e7	                            mov rdi, r12	      7092	ops.c	FUNCTION_87	IF_7	CALL_11
0x4006ec0	      0xe800000000	                          call 0x4006ec5	      7092	ops.c	FUNCTION_87	IF_7	CALL_11
0x4006ec5	          0x4889c3	                            mov rbx, rax	      7092	ops.c	FUNCTION_87	IF_7	CALL_11
0x4006ec8	          0x4885c0	                           test rax, rax	      7093	ops.c	FUNCTION_87	IF_7	IF_8
0x4006ecb	     0xf8490000000	                            je 0x4006f61	      7093	ops.c	FUNCTION_87	IF_7	IF_8
0x4006ed1	          0x4585ed	                         test r13d, r13d	      7095	ops.c	FUNCTION_87	IF_7	IF_9
0x4006ed4	            0x741e	                            je 0x4006ef4	      7095	ops.c	FUNCTION_87	IF_7	IF_9
0x4006ed6	      0xe800000000	                          call 0x4006edb	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x4006edb	          0x4889de	                            mov rsi, rbx	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x4006ede	          0x4889c7	                            mov rdi, rax	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x4006ee1	      0xe800000000	                          call 0x4006ee6	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x4006ee6	          0x4889c5	                            mov rbp, rax	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x4006ee9	          0x4889df	                            mov rdi, rbx	      7098	ops.c	FUNCTION_87	IF_7	IF_9	CALL_14
0x4006eec	      0xe800000000	                          call 0x4006ef1	      7098	ops.c	FUNCTION_87	IF_7	IF_9	CALL_14
0x4006ef1	          0x4889eb	                            mov rbx, rbp	      7099	ops.c	FUNCTION_87	IF_7	IF_9
0x4006ef4	          0x4889df	                            mov rdi, rbx	      7101	ops.c	FUNCTION_87	IF_7	CALL_15
0x4006ef7	      0xe800000000	                          call 0x4006efc	      7101	ops.c	FUNCTION_87	IF_7	CALL_15
0x4006efc	            0xeb63	                           jmp 0x4006f61	      7102	ops.c	FUNCTION_87	IF_7
0x4006efe	          0x83fd5f	                           cmp ebp, 0x5f	      7106	ops.c	FUNCTION_87	IF_10
0x4006f01	            0x745e	                            je 0x4006f61	      7106	ops.c	FUNCTION_87	IF_10
0x4006f03	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x4006f08	          0x4489e9	                           mov ecx, r13d	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x4006f0b	      0x488d542420	                   lea rdx, [rsp + 0x20]	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x4006f10	      0x488d742418	                   lea rsi, [rsp + 0x18]	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x4006f15	            0x89ef	                            mov edi, ebp	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x4006f17	      0xe84ab4ffff	                 call sym.init_write_reg	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x4006f1c	            0x85c0	                           test eax, eax	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x4006f1e	            0x7441	                            je 0x4006f61	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x4006f20	    0x41b900000000	                              mov r9d, 0	      7113	ops.c	FUNCTION_87	CALL_17
0x4006f26	          0x4d89f0	                             mov r8, r14	      7113	ops.c	FUNCTION_87	CALL_17
0x4006f29	          0x4889d9	                            mov rcx, rbx	      7113	ops.c	FUNCTION_87	CALL_17
0x4006f2c	          0x4c89e2	                            mov rdx, r12	      7113	ops.c	FUNCTION_87	CALL_17
0x4006f2f	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      7113	ops.c	FUNCTION_87	CALL_17
0x4006f33	    0x488b3d000000	            mov rdi, qword [0x04006f3a] 	      7113	ops.c	FUNCTION_87	CALL_17
0x4006f3a	      0xe8df9affff	                     call sym.str_to_reg	      7113	ops.c	FUNCTION_87	CALL_17
0x4006f3f	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      7115	ops.c	FUNCTION_87	CALL_18
0x4006f44	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      7115	ops.c	FUNCTION_87	CALL_18
0x4006f49	      0xe87897ffff	              call sym.may_set_selection	      6969	ops.c	FUNCTION_84	CALL_1
0x4006f4e	          0x83fd22	                           cmp ebp, 0x22	      6973	ops.c	FUNCTION_84	IF_1
0x4006f51	            0x7407	                            je 0x4006f5a	      6973	ops.c	FUNCTION_84	IF_1
0x4006f53	    0x4c8925000000	            mov qword [0x04006f5a], r12 	      6974	ops.c	FUNCTION_84	IF_1
0x4006f5a	    0x48891d000000	            mov qword [0x04006f61], rbx 	      6975	ops.c	FUNCTION_84
0x4006f61	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7116	ops.c	FUNCTION_87
0x4006f66	    0x644833042528	                xor rax, qword fs:[0x28]	      7116	ops.c	FUNCTION_87
0x4006f6f	            0x7405	                            je 0x4006f76	      7116	ops.c	FUNCTION_87
0x4006f71	      0xe800000000	                          call 0x4006f76	      7116	ops.c	FUNCTION_87
0x4006f76	        0x4883c430	                           add rsp, 0x30	      7116	ops.c	FUNCTION_87
0x4006f7a	              0x5b	                                 pop rbx	      7116	ops.c	FUNCTION_87
0x4006f7b	              0x5d	                                 pop rbp	      7116	ops.c	FUNCTION_87
0x4006f7c	            0x415c	                                 pop r12	      7116	ops.c	FUNCTION_87
0x4006f7e	            0x415d	                                 pop r13	      7116	ops.c	FUNCTION_87
0x4006f80	            0x415e	                                 pop r14	      7116	ops.c	FUNCTION_87
0x4006f82	              0xc3	                                     ret	      7116	ops.c	FUNCTION_87
cursor_pos_info	CALL,44:ELSE,8:WHILE,0:FOR,1:functions,0:IF,24:SWITCH,1:DO,0	516
0x400b158	            0x4157	                                push r15	      7343	ops.c	FUNCTION_91
0x400b15a	            0x4156	                                push r14	      7343	ops.c	FUNCTION_91
0x400b15c	            0x4155	                                push r13	      7343	ops.c	FUNCTION_91
0x400b15e	            0x4154	                                push r12	      7343	ops.c	FUNCTION_91
0x400b160	              0x55	                                push rbp	      7343	ops.c	FUNCTION_91
0x400b161	              0x53	                                push rbx	      7343	ops.c	FUNCTION_91
0x400b162	    0x4881ec980100	                          sub rsp, 0x198	      7343	ops.c	FUNCTION_91
0x400b169	          0x4989fc	                            mov r12, rdi	      7343	ops.c	FUNCTION_91
0x400b16c	    0x64488b042528	                mov rax, qword fs:[0x28]	      7343	ops.c	FUNCTION_91
0x400b175	    0x488984248801	            mov qword [rsp + 0x188], rax	      7343	ops.c	FUNCTION_91
0x400b17d	            0x31c0	                            xor eax, eax	      7343	ops.c	FUNCTION_91
0x400b17f	    0x48c744242000	               mov qword [rsp + 0x20], 0	      7353	ops.c	FUNCTION_91
0x400b188	    0x48c744242800	               mov qword [rsp + 0x28], 0	      7354	ops.c	FUNCTION_91
0x400b191	    0x48c744243000	               mov qword [rsp + 0x30], 0	      7355	ops.c	FUNCTION_91
0x400b19a	    0x48c744243800	               mov qword [rsp + 0x38], 0	      7356	ops.c	FUNCTION_91
0x400b1a3	    0x488b3d000000	            mov rdi, qword [0x0400b1aa] 	      7367	ops.c	FUNCTION_91	IF_1
0x400b1aa	        0xf6471001	               test byte [rdi + 0x10], 1	      7367	ops.c	FUNCTION_91	IF_1
0x400b1ae	            0x743a	                            je 0x400b1ea	      7367	ops.c	FUNCTION_91	IF_1
0x400b1b0	    0x41bf00000000	                             mov r15d, 0	      7352	ops.c	FUNCTION_91
0x400b1b6	      0xbb00000000	                              mov ebx, 0	      7350	ops.c	FUNCTION_91
0x400b1bb	      0xbd00000000	                              mov ebp, 0	      7348	ops.c	FUNCTION_91
0x400b1c0	          0x4d85e4	                           test r12, r12	      7369	ops.c	FUNCTION_91	IF_1	IF_2
0x400b1c3	     0xf85fc070000	                           jne 0x400b9c5	      7369	ops.c	FUNCTION_91	IF_1	IF_2
0x400b1c9	      0xba05000000	                              mov edx, 5	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400b1ce	      0xbe00000000	                              mov esi, 0	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400b1d3	      0xbf00000000	                              mov edi, 0	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400b1d8	      0xe800000000	                          call 0x400b1dd	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400b1dd	          0x4889c7	                            mov rdi, rax	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400b1e0	      0xe800000000	                          call 0x400b1e5	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400b1e5	      0xe993080000	                           jmp 0x400ba7d	      7372	ops.c	FUNCTION_91	IF_1	IF_2
0x400b1ea	      0xe800000000	                          call 0x400b1ef	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400b1ef	          0x83f801	                              cmp eax, 1	      7380	ops.c	FUNCTION_91	ELSE_1	ELSE_2
0x400b1f2	        0x410f94c5	                               sete r13b	      7380	ops.c	FUNCTION_91	ELSE_1	ELSE_2
0x400b1f6	        0x450fb6ed	                        movzx r13d, r13b	      7380	ops.c	FUNCTION_91	ELSE_1	ELSE_2
0x400b1fa	        0x4183c501	                             add r13d, 1	      7380	ops.c	FUNCTION_91	ELSE_1	ELSE_2
0x400b1fe	    0x48c744241800	               mov qword [rsp + 0x18], 0	      7359	ops.c	FUNCTION_91
0x400b207	    0x833d00000000	               cmp dword [0x0400b20e], 0	      7382	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400b20e	     0xf8474010000	                            je 0x400b388	      7382	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400b214	    0x488b0d000000	            mov rcx, qword [0x0400b21b] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b21b	    0x488b05000000	            mov rax, qword [0x0400b222] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b222	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b226	          0x4839d1	                            cmp rcx, rdx	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b229	            0x7408	                            je 0x400b233	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b22b	          0x4839d1	                            cmp rcx, rdx	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b22e	           0xf9cc2	                                 setl dl	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b231	            0xeb20	                           jmp 0x400b253	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b233	    0x8b0d00000000	            mov ecx, dword [0x0400b239] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b239	          0x8b5040	            mov edx, dword [rax + 0x40] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b23c	            0x39d1	                            cmp ecx, edx	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b23e	            0x7407	                            je 0x400b247	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b240	            0x39d1	                            cmp ecx, edx	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b242	           0xf9cc2	                                 setl dl	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b245	            0xeb0c	                           jmp 0x400b253	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b247	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b24a	    0x390d00000000	            cmp dword [0x0400b250], ecx 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b250	           0xf9cc2	                                 setl dl	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b253	            0x84d2	                             test dl, dl	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b255	            0x742c	                            je 0x400b283	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400b257	    0x488b0d000000	            mov rcx, qword [0x0400b25e] 	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400b25e	    0x488b1d000000	            mov rbx, qword [0x0400b265] 	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400b265	      0x48894c2440	             mov qword [rsp + 0x40], rcx	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400b26a	      0x48895c2448	             mov qword [rsp + 0x48], rbx	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400b26f	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400b273	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400b277	      0x4889442450	             mov qword [rsp + 0x50], rax	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400b27c	      0x4889542458	             mov qword [rsp + 0x58], rdx	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400b281	            0xeb2a	                           jmp 0x400b2ad	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400b283	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400b287	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400b28b	      0x4889442440	             mov qword [rsp + 0x40], rax	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400b290	      0x4889542448	             mov qword [rsp + 0x48], rdx	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400b295	    0x488b05000000	            mov rax, qword [0x0400b29c] 	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400b29c	    0x488b15000000	            mov rdx, qword [0x0400b2a3] 	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400b2a3	      0x4889442450	             mov qword [rsp + 0x50], rax	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400b2a8	      0x4889542458	             mov qword [rsp + 0x58], rdx	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400b2ad	    0x488b05000000	            mov rax, qword [0x0400b2b4] 	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400b2b4	          0x803865	                    cmp byte [rax], 0x65	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400b2b7	            0x750f	                           jne 0x400b2c8	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400b2b9	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400b2bd	            0x85c0	                           test eax, eax	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400b2bf	            0x7e07	                           jle 0x400b2c8	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400b2c1	          0x83e801	                              sub eax, 1	      7395	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400b2c4	        0x89442458	             mov dword [rsp + 0x58], eax	      7395	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400b2c8	    0x833d00000000	           cmp dword [0x0400b2cf], 0x16 	      7397	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400b2cf	     0xf85a0000000	                           jne 0x400b375	      7397	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400b2d5	    0x488b1d000000	            mov rbx, qword [0x0400b2dc] 	      7400	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400b2dc	    0x488b05000000	            mov rax, qword [0x0400b2e3] 	      7403	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400b2e3	    0x488905000000	            mov qword [0x0400b2ea], rax 	      7403	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400b2ea	    0xc78424fc0000	               mov dword [rsp + 0xfc], 1	      7405	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400b2f5	    0xc78424000100	              mov dword [rsp + 0x100], 1	      7406	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400b300	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	      7407	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400b30b	    0x488d8c240401	                  lea rcx, [rsp + 0x104]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400b313	    0x4c8d84240801	                   lea r8, [rsp + 0x108]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400b31b	      0x488d542450	                   lea rdx, [rsp + 0x50]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400b320	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400b325	    0x488b3d000000	            mov rdi, qword [0x0400b32c] 	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400b32c	      0xe800000000	                          call 0x400b331	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400b331	    0x48891d000000	            mov qword [0x0400b338], rbx 	      7411	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400b338	    0x488b05000000	            mov rax, qword [0x0400b33f] 	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400b33f	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400b346	            0x750d	                           jne 0x400b355	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400b348	    0xc78424080100	    mov dword [rsp + 0x108], 0x7fffffff 	      7414	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400b353	            0xeb20	                           jmp 0x400b375	      7414	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400b355	    0x8b9424080100	           mov edx, dword [rsp + 0x108] 	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400b35c	    0x8b8424040100	           mov eax, dword [rsp + 0x104] 	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400b363	            0x39c2	                            cmp edx, eax	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400b365	            0x7d0e	                           jge 0x400b375	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400b367	    0x899424040100	            mov dword [rsp + 0x104], edx	      7419	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400b36e	    0x898424080100	            mov dword [rsp + 0x108], eax	      7420	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400b375	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400b37a	      0x482b442440	             sub rax, qword [rsp + 0x40]	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400b37f	        0x4883c001	                              add rax, 1	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400b383	      0x4889442418	             mov qword [rsp + 0x18], rax	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400b388	    0x488b05000000	            mov rax, qword [0x0400b38f] 	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b38f	    0x41bf00000000	                             mov r15d, 0	      7352	ops.c	FUNCTION_91
0x400b395	      0xbd00000000	                              mov ebp, 0	      7348	ops.c	FUNCTION_91
0x400b39a	        0x48833800	                      cmp qword [rax], 0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b39e	     0xf8e49020000	                           jle 0x400b5ed	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b3a4	            0xeb21	                           jmp 0x400b3c7	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b3a6	          0x4939ee	                            cmp r14, rbp	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400b3a9	            0x7d32	                           jge 0x400b3dd	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400b3ab	      0xe800000000	                          call 0x400b3b0	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	CALL_6
0x400b3b0	    0x8b0500000000	            mov eax, dword [0x0400b3b6] 	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400b3b6	            0x85c0	                           test eax, eax	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400b3b8	     0xf85bf060000	                           jne 0x400ba7d	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400b3be	    0x4c8db5a08601	                lea r14, [rbp + 0x186a0]	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400b3c5	            0xeb16	                           jmp 0x400b3dd	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400b3c7	    0x41bf00000000	                             mov r15d, 0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b3cd	      0xbd00000000	                              mov ebp, 0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b3d2	      0xbb01000000	                              mov ebx, 1	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b3d7	    0x41bea0860100	                       mov r14d, 0x186a0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b3dd	    0x833d00000000	               cmp dword [0x0400b3e4], 0	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400b3e4	     0xf847a010000	                            je 0x400b564	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400b3ea	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400b3ef	          0x4839d8	                            cmp rax, rbx	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400b3f2	     0xf8f6c010000	                            jg 0x400b564	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400b3f8	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400b3fd	          0x4839da	                            cmp rdx, rbx	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400b400	     0xf8c5e010000	                            jl 0x400b564	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400b406	    0x8b0d00000000	            mov ecx, dword [0x0400b40c] 	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b40c	          0x83f956	                           cmp ecx, 0x56	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b40f	            0x7453	                            je 0x400b464	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b411	          0x83f976	                           cmp ecx, 0x76	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b414	            0x7466	                            je 0x400b47c	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b416	          0x83f916	                           cmp ecx, 0x16	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b419	     0xf85ad000000	                           jne 0x400b4cc	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b41f	      0xe800000000	                          call 0x400b424	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_7
0x400b424	    0x890500000000	            mov dword [0x0400b42a], eax 	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_7
0x400b42a	      0xb900000000	                              mov ecx, 0	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400b42f	          0x4889da	                            mov rdx, rbx	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400b432	      0x488d742460	                   lea rsi, [rsp + 0x60]	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400b437	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400b43f	      0xe83c4cffff	                     call sym.block_prep	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400b444	    0xc70500000000	               mov dword [0x0400b44e], 2	      7452	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b44e	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      7454	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b453	      0x4889442408	                mov qword [rsp + 8], rax	      7454	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b458	      0x4863442468	         movsxd rax, dword [rsp + 0x68] 	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b45d	      0x4889442410	             mov qword [rsp + 0x10], rax	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b462	            0xeb7a	                           jmp 0x400b4de	      7456	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b464	          0x4889df	                            mov rdi, rbx	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400b467	      0xe800000000	                          call 0x400b46c	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400b46c	      0x4889442408	                mov qword [rsp + 8], rax	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400b471	    0x48c7442410ff	     mov qword [rsp + 0x10], 0x7fffffff 	      7459	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b47a	            0xeb62	                           jmp 0x400b4de	      7460	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b47c	      0xb900000000	                              mov ecx, 0	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b481	          0x4839d8	                            cmp rax, rbx	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b484	            0x89c8	                            mov eax, ecx	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b486	       0xf44442448	           cmove eax, dword [rsp + 0x48]	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b48b	        0x89442408	                mov dword [rsp + 8], eax	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b48f	    0xc7442410ffff	     mov dword [rsp + 0x10], 0x7fffffff 	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b497	          0x4839da	                            cmp rdx, rbx	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b49a	            0x750f	                           jne 0x400b4ab	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b49c	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b4a0	        0x2b442408	                sub eax, dword [rsp + 8]	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b4a4	          0x83c001	                              add eax, 1	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b4a7	        0x89442410	             mov dword [rsp + 0x10], eax	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b4ab	          0x4889df	                            mov rdi, rbx	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400b4ae	      0xe800000000	                          call 0x400b4b3	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400b4b3	      0x4863542408	            movsxd rdx, dword [rsp + 8] 	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400b4b8	          0x4801d0	                            add rax, rdx	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400b4bb	      0x4889442408	                mov qword [rsp + 8], rax	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400b4c0	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	      7469	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b4c5	      0x4889442410	             mov qword [rsp + 0x10], rax	      7469	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b4ca	            0xeb12	                           jmp 0x400b4de	      7471	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400b4cc	    0x48c744241000	               mov qword [rsp + 0x10], 0	      7442	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400b4d5	    0x48c744240800	                  mov qword [rsp + 8], 0	      7441	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400b4de	      0x488b442408	                mov rax, qword [rsp + 8]	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400b4e3	          0x4885c0	                           test rax, rax	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400b4e6	     0xf84c8000000	                            je 0x400b5b4	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400b4ec	          0x4589e8	                           mov r8d, r13d	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400b4ef	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400b4f4	      0x488d542428	                   lea rdx, [rsp + 0x28]	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400b4f9	      0x488d742438	                   lea rsi, [rsp + 0x38]	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400b4fe	          0x4889c7	                            mov rdi, rax	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400b501	      0xe8de59ffff	                call sym.line_count_info	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400b506	          0x4901c7	                            add r15, rax	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400b509	    0x488b05000000	            mov rax, qword [0x0400b510] 	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b510	          0x483918	                    cmp qword [rax], rbx	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b513	     0xf859b000000	                           jne 0x400b5b4	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b519	    0x83b870140000	             cmp dword [rax + 0x1470], 0	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b520	     0xf858e000000	                           jne 0x400b5b4	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b526	    0x83b808140000	             cmp dword [rax + 0x1408], 0	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b52d	            0x7509	                           jne 0x400b538	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b52f	    0x83b874140000	             cmp dword [rax + 0x1474], 0	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b536	            0x757c	                           jne 0x400b5b4	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b538	      0xb800000000	                              mov eax, 0	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400b53d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400b544	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400b549	            0xf2ae	              repne scasb al, byte [rdi]	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400b54b	          0x4889c8	                            mov rax, rcx	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400b54e	          0x48f7d0	                                 not rax	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400b551	        0x4883e801	                              sub rax, 1	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400b555	      0x4839442410	            cmp qword [rsp + 0x10], rax 	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400b55a	            0x7e58	                           jle 0x400b5b4	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400b55c	          0x4963c5	                        movsxd rax, r13d	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b55f	          0x4929c7	                            sub r15, rax	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b562	            0xeb50	                           jmp 0x400b5b4	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400b564	    0x488b05000000	            mov rax, qword [0x0400b56b] 	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400b56b	        0x48395838	            cmp qword [rax + 0x38], rbx 	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400b56f	            0x7543	                           jne 0x400b5b4	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400b571	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      7489	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400b576	      0x4801542438	            add qword [rsp + 0x38], rdx 	      7489	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400b57b	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      7490	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400b580	      0x4801542428	            add qword [rsp + 0x28], rdx 	      7490	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400b585	        0x448b7840	           mov r15d, dword [rax + 0x40] 	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400b589	        0x4183c701	                             add r15d, 1	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400b58d	          0x4d63ff	                        movsxd r15, r15d	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400b590	          0x4889df	                            mov rdi, rbx	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400b593	      0xe800000000	                          call 0x400b598	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400b598	          0x4589e8	                           mov r8d, r13d	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400b59b	          0x4c89f9	                            mov rcx, r15	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400b59e	      0x488d542428	                   lea rdx, [rsp + 0x28]	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400b5a3	      0x488d742438	                   lea rsi, [rsp + 0x38]	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400b5a8	          0x4889c7	                            mov rdi, rax	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400b5ab	      0xe83459ffff	                call sym.line_count_info	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400b5b0	        0x4c8d3c28	                    lea r15, [rax + rbp]	      7491	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400b5b4	          0x4889df	                            mov rdi, rbx	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400b5b7	      0xe800000000	                          call 0x400b5bc	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400b5bc	          0x4589e8	                           mov r8d, r13d	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400b5bf	      0xb9ffffff7f	                     mov ecx, 0x7fffffff	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400b5c4	      0x488d542420	                   lea rdx, [rsp + 0x20]	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400b5c9	      0x488d742430	                   lea rsi, [rsp + 0x30]	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400b5ce	          0x4889c7	                            mov rdi, rax	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400b5d1	      0xe80e59ffff	                call sym.line_count_info	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400b5d6	          0x4801c5	                            add rbp, rax	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400b5d9	        0x4883c301	                              add rbx, 1	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b5dd	    0x488b05000000	            mov rax, qword [0x0400b5e4] 	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b5e4	          0x483918	                    cmp qword [rax], rbx	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b5e7	     0xf8db9fdffff	                           jge 0x400b3a6	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400b5ed	    0x83b870140000	             cmp dword [rax + 0x1470], 0	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400b5f4	            0x7518	                           jne 0x400b60e	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400b5f6	    0x83b808140000	             cmp dword [rax + 0x1408], 0	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400b5fd	            0x7509	                           jne 0x400b608	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400b5ff	    0x83b874140000	             cmp dword [rax + 0x1474], 0	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400b606	            0x7506	                           jne 0x400b60e	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400b608	          0x4d63ed	                        movsxd r13, r13d	      7506	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400b60b	          0x4c29ed	                            sub rbp, r13	      7506	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400b60e	          0x4d85e4	                           test r12, r12	      7508	ops.c	FUNCTION_91	ELSE_1	IF_17
0x400b611	     0xf851b030000	                           jne 0x400b932	      7508	ops.c	FUNCTION_91	ELSE_1	IF_17
0x400b617	    0x833d00000000	               cmp dword [0x0400b61e], 0	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0x400b61e	     0xf8473010000	                            je 0x400b797	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0x400b624	    0x833d00000000	           cmp dword [0x0400b62b], 0x16 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400b62b	            0x7573	                           jne 0x400b6a0	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400b62d	    0x488b3d000000	            mov rdi, qword [0x0400b634] 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400b634	    0x817f48ffffff	     cmp dword [rdi + 0x48], 0x7fffffff 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400b63b	            0x7463	                            je 0x400b6a0	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400b63d	      0x488d442440	                   lea rax, [rsp + 0x40]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400b642	      0x488d4c2448	                   lea rcx, [rsp + 0x48]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400b647	      0x4c8d442458	                    lea r8, [rsp + 0x58]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400b64c	      0x488d542450	                   lea rdx, [rsp + 0x50]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400b651	          0x4889c6	                            mov rsi, rax	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400b654	      0xe800000000	                          call 0x400b659	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400b659	    0x8b9c24080100	           mov ebx, dword [rsp + 0x108] 	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b660	    0x2b9c24040100	            sub ebx, dword [rsp + 0x104]	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b667	          0x83c301	                              add ebx, 1	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b66a	          0x4863db	                         movsxd rbx, ebx	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b66d	      0xba05000000	                              mov edx, 5	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b672	      0xbe00000000	                              mov esi, 0	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b677	      0xbf00000000	                              mov edi, 0	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b67c	      0xe800000000	                          call 0x400b681	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b681	          0x4889d9	                            mov rcx, rbx	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b684	          0x4889c2	                            mov rdx, rax	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b687	      0xbe32000000	                           mov esi, 0x32	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b68c	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b694	      0xb800000000	                              mov eax, 0	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b699	      0xe800000000	                          call 0x400b69e	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b69e	            0xeb08	                           jmp 0x400b6a8	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400b6a0	    0xc68424500100	               mov byte [rsp + 0x150], 0	      7520	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_5
0x400b6a8	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      7522	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400b6ad	          0x4c39fb	                            cmp rbx, r15	      7522	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400b6b0	            0x756e	                           jne 0x400b720	      7522	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400b6b2	      0x483b6c2420	            cmp rbp, qword [rsp + 0x20] 	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400b6b7	            0x7567	                           jne 0x400b720	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400b6b9	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6be	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6c3	    0x488b05000000	            mov rax, qword [0x0400b6ca] 	      7527	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400b6ca	          0x488b00	                    mov rax, qword [rax]	      7527	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400b6cd	      0x4889442408	                mov qword [rsp + 8], rax	      7527	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400b6d2	      0xba05000000	                              mov edx, 5	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6d7	      0xbe00000000	                              mov esi, 0	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6dc	      0xbf00000000	                              mov edi, 0	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6e1	      0xe800000000	                          call 0x400b6e6	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6e6	              0x55	                                push rbp	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6e7	              0x53	                                push rbx	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6e8	            0x4155	                                push r13	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6ea	            0x4156	                                push r14	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6ec	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6f1	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6f6	    0x488d8c247001	                  lea rcx, [rsp + 0x170]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b6fe	          0x4889c2	                            mov rdx, rax	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b701	      0xbe01040000	                          mov esi, 0x401	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b706	    0x488b3d000000	            mov rdi, qword [0x0400b70d] 	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b70d	      0xb800000000	                              mov eax, 0	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b712	      0xe800000000	                          call 0x400b717	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b717	        0x4883c420	                           add rsp, 0x20	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b71b	      0xe996020000	                           jmp 0x400b9b6	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400b720	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b725	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b72a	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b72f	      0x4889442408	                mov qword [rsp + 8], rax	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b734	    0x488b05000000	            mov rax, qword [0x0400b73b] 	      7536	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6
0x400b73b	          0x488b08	                    mov rcx, qword [rax]	      7536	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6
0x400b73e	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      7536	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6
0x400b743	      0xba05000000	                              mov edx, 5	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b748	      0xbe00000000	                              mov esi, 0	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b74d	      0xbf00000000	                              mov edi, 0	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b752	      0xe800000000	                          call 0x400b757	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b757	              0x55	                                push rbp	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b758	            0x4157	                                push r15	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b75a	            0x4155	                                push r13	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b75c	              0x53	                                push rbx	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b75d	            0x4156	                                push r14	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b75f	        0xff742430	                 push qword [rsp + 0x30]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b763	      0x4c8b4c2440	              mov r9, qword [rsp + 0x40]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b768	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b76d	    0x488d8c248001	                  lea rcx, [rsp + 0x180]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b775	          0x4889c2	                            mov rdx, rax	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b778	      0xbe01040000	                          mov esi, 0x401	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b77d	    0x488b3d000000	            mov rdi, qword [0x0400b784] 	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b784	      0xb800000000	                              mov eax, 0	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b789	      0xe800000000	                          call 0x400b78e	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b78e	        0x4883c430	                           add rsp, 0x30	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b792	      0xe91f020000	                           jmp 0x400b9b6	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400b797	      0xe800000000	                          call 0x400b79c	      7546	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_24
0x400b79c	          0x4889c3	                            mov rbx, rax	      7546	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_24
0x400b79f	      0xe800000000	                          call 0x400b7a4	      7547	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_25
0x400b7a4	    0x488b05000000	            mov rax, qword [0x0400b7ab] 	      7549	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7
0x400b7ab	    0x8b88d8000000	            mov ecx, dword [rax + 0xd8] 	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400b7b1	          0x83c101	                              add ecx, 1	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400b7b4	          0x8b5040	            mov edx, dword [rax + 0x40] 	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400b7b7	          0x83c201	                              add edx, 1	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400b7ba	      0xbe32000000	                           mov esi, 0x32	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400b7bf	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400b7c7	      0xe800000000	                          call 0x400b7cc	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400b7cc	          0x4889df	                            mov rdi, rbx	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7cf	      0xe800000000	                          call 0x400b7d4	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7d4	            0x89c6	                            mov esi, eax	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7d6	      0xb800000000	                              mov eax, 0	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7db	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7e2	          0x4889df	                            mov rdi, rbx	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7e5	            0xf2ae	              repne scasb al, byte [rdi]	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7e7	          0x4889c8	                            mov rax, rcx	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7ea	          0x48f7d0	                                 not rax	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7ed	        0x488d50ff	                      lea rdx, [rax - 1]	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7f1	            0x89f1	                            mov ecx, esi	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7f3	      0xbe28000000	                           mov esi, 0x28	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b7f8	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b800	      0xe800000000	                          call 0x400b805	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400b805	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      7553	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400b80a	          0x4c39fb	                            cmp rbx, r15	      7553	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400b80d	     0xf858d000000	                           jne 0x400b8a0	      7553	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400b813	      0x483b6c2420	            cmp rbp, qword [rsp + 0x20] 	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400b818	     0xf8582000000	                           jne 0x400b8a0	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400b81e	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b823	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b828	    0x488b05000000	            mov rax, qword [0x0400b82f] 	      7559	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400b82f	          0x488b00	                    mov rax, qword [rax]	      7559	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400b832	      0x4889442408	                mov qword [rsp + 8], rax	      7559	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400b837	    0x488b05000000	            mov rax, qword [0x0400b83e] 	      7558	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400b83e	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      7558	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400b842	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      7558	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400b847	      0xba05000000	                              mov edx, 5	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b84c	      0xbe00000000	                              mov esi, 0	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b851	      0xbf00000000	                              mov edi, 0	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b856	      0xe800000000	                          call 0x400b85b	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b85b	        0x4883ec08	                              sub rsp, 8	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b85f	              0x55	                                push rbp	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b860	              0x53	                                push rbx	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b861	            0x4156	                                push r14	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b863	            0x4155	                                push r13	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b865	        0xff742430	                 push qword [rsp + 0x30]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b869	      0x4c8b4c2440	              mov r9, qword [rsp + 0x40]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b86e	    0x4c8d84245001	                   lea r8, [rsp + 0x150]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b876	    0x488d8c248001	                  lea rcx, [rsp + 0x180]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b87e	          0x4889c2	                            mov rdx, rax	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b881	      0xbe01040000	                          mov esi, 0x401	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b886	    0x488b3d000000	            mov rdi, qword [0x0400b88d] 	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b88d	      0xb800000000	                              mov eax, 0	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b892	      0xe800000000	                          call 0x400b897	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b897	        0x4883c430	                           add rsp, 0x30	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b89b	      0xe916010000	                           jmp 0x400b9b6	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400b8a0	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8a5	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8aa	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8af	      0x4889442408	                mov qword [rsp + 8], rax	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8b4	    0x488b05000000	            mov rax, qword [0x0400b8bb] 	      7567	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400b8bb	          0x488b08	                    mov rcx, qword [rax]	      7567	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400b8be	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      7567	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400b8c3	    0x488b05000000	            mov rax, qword [0x0400b8ca] 	      7566	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400b8ca	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7566	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400b8ce	      0x4889542418	             mov qword [rsp + 0x18], rdx	      7566	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400b8d3	      0xba05000000	                              mov edx, 5	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8d8	      0xbe00000000	                              mov esi, 0	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8dd	      0xbf00000000	                              mov edi, 0	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8e2	      0xe800000000	                          call 0x400b8e7	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8e7	        0x4883ec08	                              sub rsp, 8	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8eb	              0x55	                                push rbp	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8ec	            0x4157	                                push r15	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8ee	            0x4156	                                push r14	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8f0	              0x53	                                push rbx	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8f1	            0x4155	                                push r13	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8f3	        0xff742438	                 push qword [rsp + 0x38]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8f7	        0xff742448	                 push qword [rsp + 0x48]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b8fb	      0x4c8b4c2458	              mov r9, qword [rsp + 0x58]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b900	    0x4c8d84246001	                   lea r8, [rsp + 0x160]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b908	    0x488d8c249001	                  lea rcx, [rsp + 0x190]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b910	          0x4889c2	                            mov rdx, rax	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b913	      0xbe01040000	                          mov esi, 0x401	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b918	    0x488b3d000000	            mov rdi, qword [0x0400b91f] 	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b91f	      0xb800000000	                              mov eax, 0	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b924	      0xe800000000	                          call 0x400b929	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b929	        0x4883c440	                           add rsp, 0x40	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b92d	      0xe984000000	                           jmp 0x400b9b6	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400b932	      0xe800000000	                          call 0x400b937	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400b937	          0x4863d8	                         movsxd rbx, eax	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400b93a	          0x4885db	                           test rbx, rbx	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400b93d	     0xf8e82000000	                           jle 0x400b9c5	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400b943	      0xba05000000	                              mov edx, 5	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b948	      0xbe00000000	                              mov esi, 0	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b94d	      0xbf00000000	                              mov edi, 0	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b952	      0xe800000000	                          call 0x400b957	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b957	          0x4889c2	                            mov rdx, rax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b95a	    0x488b35000000	            mov rsi, qword [0x0400b961] 	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b961	      0xb800000000	                              mov eax, 0	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b966	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b96d	          0x4889f7	                            mov rdi, rsi	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b970	            0xf2ae	              repne scasb al, byte [rdi]	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b972	          0x48f7d1	                                 not rcx	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b975	      0x488d7c0eff	                lea rdi, [rsi + rcx - 1]	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b97a	          0x4889d9	                            mov rcx, rbx	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b97d	      0xbe01040000	                          mov esi, 0x401	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b982	      0xe800000000	                          call 0x400b987	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400b987	          0x4d85e4	                           test r12, r12	      7580	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400b98a	            0x7539	                           jne 0x400b9c5	      7580	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400b98c	    0x488b1d000000	            mov rbx, qword [0x0400b993] 	      7583	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400b993	    0x48c705000000	               mov qword [0x0400b99e], 0	      7584	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400b99e	    0x488b3d000000	            mov rdi, qword [0x0400b9a5] 	      7585	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0x400b9a5	      0xe800000000	                          call 0x400b9aa	      7585	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0x400b9aa	    0x48891d000000	            mov qword [0x0400b9b1], rbx 	      7586	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400b9b1	      0xe9c7000000	                           jmp 0x400ba7d	      7586	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400b9b6	      0xe800000000	                          call 0x400b9bb	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400b9bb	          0x4863d8	                         movsxd rbx, eax	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400b9be	          0x4885db	                           test rbx, rbx	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400b9c1	            0x7f80	                            jg 0x400b943	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400b9c3	            0xebc7	                           jmp 0x400b98c	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400b9c5	      0xb900000000	                              mov ecx, 0	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400b9ca	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400b9cf	      0xbe00000000	                              mov esi, 0	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400b9d4	          0x4c89e7	                            mov rdi, r12	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400b9d7	      0xe800000000	                          call 0x400b9dc	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400b9dc	      0xb900000000	                              mov ecx, 0	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400b9e1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400b9e6	      0xbe00000000	                              mov esi, 0	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400b9eb	          0x4c89e7	                            mov rdi, r12	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400b9ee	      0xe800000000	                          call 0x400b9f3	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400b9f3	      0x488d541d00	                    lea rdx, [rbp + rbx]	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400b9f8	      0xb900000000	                              mov ecx, 0	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400b9fd	      0xbe00000000	                              mov esi, 0	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400ba02	          0x4c89e7	                            mov rdi, r12	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400ba05	      0xe800000000	                          call 0x400ba0a	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400ba0a	    0x833d00000000	               cmp dword [0x0400ba11], 0	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400ba11	      0xbe00000000	                              mov esi, 0	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400ba16	      0xb800000000	                              mov eax, 0	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400ba1b	        0x480f45f0	                         cmovne rsi, rax	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400ba1f	      0xb900000000	                              mov ecx, 0	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400ba24	          0x4c89fa	                            mov rdx, r15	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400ba27	          0x4c89e7	                            mov rdi, r12	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400ba2a	      0xe800000000	                          call 0x400ba2f	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400ba2f	    0x833d00000000	               cmp dword [0x0400ba36], 0	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400ba36	      0xbe00000000	                              mov esi, 0	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400ba3b	      0xb800000000	                              mov eax, 0	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400ba40	        0x480f45f0	                         cmovne rsi, rax	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400ba44	      0xb900000000	                              mov ecx, 0	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400ba49	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400ba4e	          0x4c89e7	                            mov rdi, r12	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400ba51	      0xe800000000	                          call 0x400ba56	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400ba56	    0x833d00000000	               cmp dword [0x0400ba5d], 0	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400ba5d	      0xbe00000000	                              mov esi, 0	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400ba62	      0xb800000000	                              mov eax, 0	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400ba67	        0x480f45f0	                         cmovne rsi, rax	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400ba6b	      0xb900000000	                              mov ecx, 0	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400ba70	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400ba75	          0x4c89e7	                            mov rdi, r12	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400ba78	      0xe800000000	                          call 0x400ba7d	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400ba7d	    0x488b84248801	           mov rax, qword [rsp + 0x188] 	      7607	ops.c	FUNCTION_91
0x400ba85	    0x644833042528	                xor rax, qword fs:[0x28]	      7607	ops.c	FUNCTION_91
0x400ba8e	            0x7405	                            je 0x400ba95	      7607	ops.c	FUNCTION_91
0x400ba90	      0xe800000000	                          call 0x400ba95	      7607	ops.c	FUNCTION_91
0x400ba95	    0x4881c4980100	                          add rsp, 0x198	      7607	ops.c	FUNCTION_91
0x400ba9c	              0x5b	                                 pop rbx	      7607	ops.c	FUNCTION_91
0x400ba9d	              0x5d	                                 pop rbp	      7607	ops.c	FUNCTION_91
0x400ba9e	            0x415c	                                 pop r12	      7607	ops.c	FUNCTION_91
0x400baa0	            0x415d	                                 pop r13	      7607	ops.c	FUNCTION_91
0x400baa2	            0x415e	                                 pop r14	      7607	ops.c	FUNCTION_91
0x400baa4	            0x415f	                                 pop r15	      7607	ops.c	FUNCTION_91
0x400baa6	              0xc3	                                     ret	      7607	ops.c	FUNCTION_91
x11_export_final_selection	CALL,9:ELSE,4:WHILE,0:FOR,0:functions,0:IF,8:SWITCH,0:DO,0	87
0x4006bb0	            0x4154	                                push r12	      6473	ops.c	FUNCTION_73
0x4006bb2	              0x55	                                push rbp	      6473	ops.c	FUNCTION_73
0x4006bb3	              0x53	                                push rbx	      6473	ops.c	FUNCTION_73
0x4006bb4	        0x4883ec40	                           sub rsp, 0x40	      6473	ops.c	FUNCTION_73
0x4006bb8	    0x64488b042528	                mov rax, qword fs:[0x28]	      6473	ops.c	FUNCTION_73
0x4006bc1	      0x4889442438	             mov qword [rsp + 0x38], rax	      6473	ops.c	FUNCTION_73
0x4006bc6	            0x31c0	                            xor eax, eax	      6473	ops.c	FUNCTION_73
0x4006bc8	    0x48c744241000	               mov qword [rsp + 0x10], 0	      6475	ops.c	FUNCTION_73
0x4006bd1	    0x48c744241800	               mov qword [rsp + 0x18], 0	      6476	ops.c	FUNCTION_73
0x4006bda	    0x488b1d000000	            mov rbx, qword [0x04006be1] 	      6485	ops.c	FUNCTION_73	ELSE_1
0x4006be1	    0x833d00000000	               cmp dword [0x04006be8], 0	      6480	ops.c	FUNCTION_73	IF_1
0x4006be8	            0x7408	                            je 0x4006bf2	      6480	ops.c	FUNCTION_73	IF_1
0x4006bea	      0xe800000000	                          call 0x4006bef	      6481	ops.c	FUNCTION_73	IF_1
0x4006bef	          0x4889c3	                            mov rbx, rax	      6481	ops.c	FUNCTION_73	IF_1
0x4006bf2	    0x833d00000000	               cmp dword [0x04006bf9], 0	      6491	ops.c	FUNCTION_73	IF_2
0x4006bf9	            0x7416	                            je 0x4006c11	      6491	ops.c	FUNCTION_73	IF_2
0x4006bfb	      0xba00000000	                              mov edx, 0	      6492	ops.c	FUNCTION_73	CALL_1
0x4006c00	      0x488d742418	                   lea rsi, [rsp + 0x18]	      6492	ops.c	FUNCTION_73	CALL_1
0x4006c05	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6492	ops.c	FUNCTION_73	CALL_1
0x4006c0a	      0xe800000000	                          call 0x4006c0f	      6492	ops.c	FUNCTION_73	CALL_1
0x4006c0f	            0xeb21	                           jmp 0x4006c32	      6492	ops.c	FUNCTION_73	CALL_1
0x4006c11	    0x833d00000000	               cmp dword [0x04006c18], 0	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4006c18	     0xf8400010000	                            je 0x4006d1e	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4006c1e	      0xba00000000	                              mov edx, 0	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4006c23	      0x488d742418	                   lea rsi, [rsp + 0x18]	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4006c28	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4006c2d	      0xe800000000	                          call 0x4006c32	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x4006c32	          0x4885db	                           test rbx, rbx	      6497	ops.c	FUNCTION_73	IF_4
0x4006c35	     0xf84e3000000	                            je 0x4006d1e	      6497	ops.c	FUNCTION_73	IF_4
0x4006c3b	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      6497	ops.c	FUNCTION_73	IF_4
0x4006c41	     0xf84d7000000	                            je 0x4006d1e	      6497	ops.c	FUNCTION_73	IF_4
0x4006c47	            0x85c0	                           test eax, eax	      6497	ops.c	FUNCTION_73	IF_4
0x4006c49	     0xf88cf000000	                            js 0x4006d1e	      6497	ops.c	FUNCTION_73	IF_4
0x4006c4f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6498	ops.c	FUNCTION_73	IF_4
0x4006c54	        0x4883e801	                              sub rax, 1	      6498	ops.c	FUNCTION_73	IF_4
0x4006c58	    0x483dfeff0f00	                        cmp rax, 0xffffe	      6498	ops.c	FUNCTION_73	IF_4
0x4006c5e	     0xf87ba000000	                            ja 0x4006d1e	      6498	ops.c	FUNCTION_73	IF_4
0x4006c64	    0x833d00000000	               cmp dword [0x04006c6b], 0	      6507	ops.c	FUNCTION_73	IF_4	IF_5
0x4006c6b	     0xf848f000000	                            je 0x4006d00	      6507	ops.c	FUNCTION_73	IF_4	IF_5
0x4006c71	    0xc74424200000	               mov dword [rsp + 0x20], 0	      6511	ops.c	FUNCTION_73	IF_4	IF_5
0x4006c79	      0xba00000000	                              mov edx, 0	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4006c7e	    0x488b35000000	            mov rsi, qword [0x04006c85] 	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4006c85	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4006c8a	      0xe800000000	                          call 0x4006c8f	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4006c8f	          0x83f801	                              cmp eax, 1	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4006c92	     0xf8586000000	                           jne 0x4006d1e	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x4006c98	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6514	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x4006c9d	        0x8944240c	              mov dword [rsp + 0xc], eax	      6514	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x4006ca1	    0xc74424300100	               mov dword [rsp + 0x30], 1	      6517	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x4006ca9	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x4006cae	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x4006cb3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x4006cb8	      0xe800000000	                          call 0x4006cbd	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x4006cbd	          0x4989c4	                            mov r12, rax	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x4006cc0	      0x486344240c	          movsxd rax, dword [rsp + 0xc] 	      6519	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x4006cc5	      0x4889442418	             mov qword [rsp + 0x18], rax	      6519	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x4006cca	      0xbd00000000	                              mov ebp, 0	      6527	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	ELSE_3
0x4006ccf	          0x4d85e4	                           test r12, r12	      6520	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x4006cd2	            0x7414	                            je 0x4006ce8	      6520	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x4006cd4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6522	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0x4006cd9	      0xe800000000	                          call 0x4006cde	      6522	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0x4006cde	      0x4c89642410	             mov qword [rsp + 0x10], r12	      6523	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x4006ce3	      0xbd01000000	                              mov ebp, 1	      6501	ops.c	FUNCTION_73	IF_4
0x4006ce8	      0xba00000000	                              mov edx, 0	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4006ced	      0xbe00000000	                              mov esi, 0	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4006cf2	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4006cf7	      0xe800000000	                          call 0x4006cfc	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x4006cfc	            0x85ed	                           test ebp, ebp	      6539	ops.c	FUNCTION_73	IF_4	IF_8
0x4006cfe	            0x741e	                            je 0x4006d1e	      6539	ops.c	FUNCTION_73	IF_4	IF_8
0x4006d00	      0xb900000000	                              mov ecx, 0	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x4006d05	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x4006d09	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x4006d0e	          0x4889df	                            mov rdi, rbx	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x4006d11	      0xe800000000	                          call 0x4006d16	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x4006d16	          0x4889df	                            mov rdi, rbx	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x4006d19	      0xe800000000	                          call 0x4006d1e	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x4006d1e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6547	ops.c	FUNCTION_73	CALL_9
0x4006d23	      0xe800000000	                          call 0x4006d28	      6547	ops.c	FUNCTION_73	CALL_9
0x4006d28	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      6548	ops.c	FUNCTION_73
0x4006d2d	    0x644833042528	                xor rax, qword fs:[0x28]	      6548	ops.c	FUNCTION_73
0x4006d36	            0x7405	                            je 0x4006d3d	      6548	ops.c	FUNCTION_73
0x4006d38	      0xe800000000	                          call 0x4006d3d	      6548	ops.c	FUNCTION_73
0x4006d3d	        0x4883c440	                           add rsp, 0x40	      6548	ops.c	FUNCTION_73
0x4006d41	              0x5b	                                 pop rbx	      6548	ops.c	FUNCTION_73
0x4006d42	              0x5d	                                 pop rbp	      6548	ops.c	FUNCTION_73
0x4006d43	            0x415c	                                 pop r12	      6548	ops.c	FUNCTION_73
0x4006d45	              0xc3	                                     ret	      6548	ops.c	FUNCTION_73
dis_msg	CALL,4:ELSE,1:WHILE,1:FOR,0:functions,0:IF,1:SWITCH,0:DO,0	48
0x4000e57	            0x4155	                                push r13	      4410	ops.c	FUNCTION_53
0x4000e59	            0x4154	                                push r12	      4410	ops.c	FUNCTION_53
0x4000e5b	              0x55	                                push rbp	      4410	ops.c	FUNCTION_53
0x4000e5c	              0x53	                                push rbx	      4410	ops.c	FUNCTION_53
0x4000e5d	        0x4883ec08	                              sub rsp, 8	      4410	ops.c	FUNCTION_53
0x4000e61	          0x4889fb	                            mov rbx, rdi	      4410	ops.c	FUNCTION_53
0x4000e64	          0x4189f5	                           mov r13d, esi	      4410	ops.c	FUNCTION_53
0x4000e67	    0x8b0500000000	            mov eax, dword [0x04000e6d] 	      4416	ops.c	FUNCTION_53
0x4000e6d	          0x8d68fa	                      lea ebp, [rax - 6]	      4416	ops.c	FUNCTION_53
0x4000e70	            0xeb40	                           jmp 0x4000eb2	      4417	ops.c	FUNCTION_53	WHILE_1
0x4000e72	    0x833d00000000	               cmp dword [0x04000e79], 0	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000e79	            0x7423	                            je 0x4000e9e	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000e7b	          0x4889df	                            mov rdi, rbx	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000e7e	    0xff1500000000	                 call qword [0x04000e84]	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000e84	          0x4189c4	                           mov r12d, eax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000e87	          0x83f801	                              cmp eax, 1	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000e8a	            0x7e12	                           jle 0x4000e9e	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000e8c	            0x89c6	                            mov esi, eax	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4000e8e	          0x4889df	                            mov rdi, rbx	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4000e91	      0xe800000000	                          call 0x4000e96	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4000e96	          0x4d63e4	                        movsxd r12, r12d	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000e99	          0x4c01e3	                            add rbx, r12	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000e9c	            0xeb14	                           jmp 0x4000eb2	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4000e9e	        0x4c8d6301	                      lea r12, [rbx + 1]	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4000ea2	      0xbe01000000	                              mov esi, 1	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4000ea7	          0x4889df	                            mov rdi, rbx	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4000eaa	      0xe800000000	                          call 0x4000eaf	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4000eaf	          0x4c89e3	                            mov rbx, r12	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4000eb2	           0xfb603	                   movzx eax, byte [rbx]	      4417	ops.c	FUNCTION_53	WHILE_1
0x4000eb5	            0x84c0	                             test al, al	      4417	ops.c	FUNCTION_53	WHILE_1
0x4000eb7	            0x741b	                            je 0x4000ed4	      4417	ops.c	FUNCTION_53	WHILE_1
0x4000eb9	          0x4585ed	                         test r13d, r13d	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000ebc	            0x740a	                            je 0x4000ec8	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000ebe	            0x3c1b	                            cmp al, 0x1b	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000ec0	            0x7506	                           jne 0x4000ec8	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000ec2	        0x807b0100	                   cmp byte [rbx + 1], 0	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000ec6	            0x740c	                            je 0x4000ed4	      4418	ops.c	FUNCTION_53	WHILE_1
0x4000ec8	          0x4889df	                            mov rdi, rbx	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4000ecb	      0xe800000000	                          call 0x4000ed0	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4000ed0	            0x29c5	                            sub ebp, eax	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4000ed2	            0x799e	                           jns 0x4000e72	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4000ed4	      0xe800000000	                          call 0x4000ed9	      4431	ops.c	FUNCTION_53	CALL_4
0x4000ed9	        0x4883c408	                              add rsp, 8	      4432	ops.c	FUNCTION_53
0x4000edd	              0x5b	                                 pop rbx	      4432	ops.c	FUNCTION_53
0x4000ede	              0x5d	                                 pop rbp	      4432	ops.c	FUNCTION_53
0x4000edf	            0x415c	                                 pop r12	      4432	ops.c	FUNCTION_53
0x4000ee1	            0x415d	                                 pop r13	      4432	ops.c	FUNCTION_53
0x4000ee3	              0xc3	                                     ret	      4432	ops.c	FUNCTION_53
write_reg_contents	CALL,1:ELSE,0:WHILE,0:FOR,0:functions,0:IF,0:SWITCH,0:DO,0	6
0x4006f83	        0x4883ec08	                              sub rsp, 8	      6993	ops.c	FUNCTION_85
0x4006f87	    0x41b900000000	                              mov r9d, 0	      6994	ops.c	FUNCTION_85	CALL_1
0x4006f8d	    0x41b8ff000000	                           mov r8d, 0xff	      6994	ops.c	FUNCTION_85	CALL_1
0x4006f93	      0xe800000000	                          call 0x4006f98	      6994	ops.c	FUNCTION_85	CALL_1
0x4006f98	        0x4883c408	                              add rsp, 8	      6995	ops.c	FUNCTION_85
0x4006f9c	              0xc3	                                     ret	      6995	ops.c	FUNCTION_85
get_yank_register	CALL,5:ELSE,7:WHILE,0:FOR,0:functions,0:IF,9:SWITCH,0:DO,0	71
0x4002265	    0xc70500000000	               mov dword [0x0400226f], 0	       912	ops.c	FUNCTION_15
0x400226f	            0x85f6	                           test esi, esi	       913	ops.c	FUNCTION_15	IF_1
0x4002271	           0xf94c1	                                 sete cl	       913	ops.c	FUNCTION_15	IF_1
0x4002274	            0x85ff	                           test edi, edi	       913	ops.c	FUNCTION_15	IF_1
0x4002276	           0xf94c2	                                 sete dl	       913	ops.c	FUNCTION_15	IF_1
0x4002279	          0x83ff22	                           cmp edi, 0x22	       913	ops.c	FUNCTION_15	IF_1
0x400227c	           0xf94c0	                                 sete al	       913	ops.c	FUNCTION_15	IF_1
0x400227f	             0x8c2	                               or dl, al	       913	ops.c	FUNCTION_15	IF_1
0x4002281	            0x741d	                            je 0x40022a0	       913	ops.c	FUNCTION_15	IF_1
0x4002283	            0x84c9	                             test cl, cl	       913	ops.c	FUNCTION_15	IF_1
0x4002285	            0x7419	                            je 0x40022a0	       913	ops.c	FUNCTION_15	IF_1
0x4002287	    0x488b05000000	            mov rax, qword [0x0400228e] 	       913	ops.c	FUNCTION_15	IF_1
0x400228e	          0x4885c0	                           test rax, rax	       913	ops.c	FUNCTION_15	IF_1
0x4002291	            0x740d	                            je 0x40022a0	       913	ops.c	FUNCTION_15	IF_1
0x4002293	    0x488905000000	            mov qword [0x0400229a], rax 	       915	ops.c	FUNCTION_15	IF_1
0x400229a	      0xb800000000	                              mov eax, 0	       916	ops.c	FUNCTION_15	IF_1
0x400229f	              0xc3	                                     ret	       916	ops.c	FUNCTION_15	IF_1
0x40022a0	          0x8d47d0	                   lea eax, [rdi - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40022a3	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40022a6	            0x770c	                            ja 0x40022b4	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40022a8	            0x89c7	                            mov edi, eax	       920	ops.c	FUNCTION_15	IF_2
0x40022aa	      0xb800000000	                              mov eax, 0	       910	ops.c	FUNCTION_15
0x40022af	      0xe990000000	                           jmp 0x4002344	       910	ops.c	FUNCTION_15
0x40022b4	          0x8d479f	                   lea eax, [rdi - 0x61]	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40022b7	          0x83f819	                           cmp eax, 0x19	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40022ba	            0x770a	                            ja 0x40022c6	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40022bc	          0x83ef57	                           sub edi, 0x57	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x40022bf	      0xb800000000	                              mov eax, 0	       910	ops.c	FUNCTION_15
0x40022c4	            0xeb7e	                           jmp 0x4002344	       910	ops.c	FUNCTION_15
0x40022c6	          0x8d47bf	                   lea eax, [rdi - 0x41]	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x40022c9	          0x83f819	                           cmp eax, 0x19	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x40022cc	            0x7714	                            ja 0x40022e2	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x40022ce	          0x83ef37	                           sub edi, 0x37	       925	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x40022d1	    0xc70500000000	               mov dword [0x040022db], 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x40022db	      0xb800000000	                              mov eax, 0	       910	ops.c	FUNCTION_15
0x40022e0	            0xeb62	                           jmp 0x4002344	       910	ops.c	FUNCTION_15
0x40022e2	          0x83ff2d	                           cmp edi, 0x2d	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x40022e5	            0x743b	                            je 0x4002322	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x40022e7	    0x833d00000000	               cmp dword [0x040022ee], 0	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40022ee	            0x7405	                            je 0x40022f5	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40022f0	          0x83ff2a	                           cmp edi, 0x2a	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40022f3	            0x7439	                            je 0x400232e	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40022f5	    0x833d00000000	               cmp dword [0x040022fc], 0	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40022fc	            0x7405	                            je 0x4002303	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40022fe	          0x83ff2b	                           cmp edi, 0x2b	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4002301	            0x7437	                            je 0x400233a	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4002303	          0x83ff7e	                           cmp edi, 0x7e	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4002306	            0x750e	                           jne 0x4002316	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4002308	      0xb800000000	                              mov eax, 0	       910	ops.c	FUNCTION_15
0x400230d	      0xbf27000000	                           mov edi, 0x27	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4002312	            0x84c9	                             test cl, cl	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4002314	            0x752e	                           jne 0x4002344	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4002316	      0xb800000000	                              mov eax, 0	       910	ops.c	FUNCTION_15
0x400231b	      0xbf00000000	                              mov edi, 0	       949	ops.c	FUNCTION_15	ELSE_7
0x4002320	            0xeb22	                           jmp 0x4002344	       949	ops.c	FUNCTION_15	ELSE_7
0x4002322	      0xb800000000	                              mov eax, 0	       910	ops.c	FUNCTION_15
0x4002327	      0xbf24000000	                           mov edi, 0x24	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400232c	            0xeb16	                           jmp 0x4002344	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400232e	      0xb801000000	                              mov eax, 1	       935	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4002333	      0xbf25000000	                           mov edi, 0x25	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4002338	            0xeb0a	                           jmp 0x4002344	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400233a	      0xb801000000	                              mov eax, 1	       941	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400233f	      0xbf26000000	                           mov edi, 0x26	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4002344	          0x4863ff	                         movsxd rdi, edi	       950	ops.c	FUNCTION_15
0x4002347	        0x48c1e705	                              shl rdi, 5	       950	ops.c	FUNCTION_15
0x400234b	    0x4881c7000000	                              add rdi, 0	       950	ops.c	FUNCTION_15
0x4002352	    0x48893d000000	            mov qword [0x04002359], rdi 	       950	ops.c	FUNCTION_15
0x4002359	            0x85f6	                           test esi, esi	       951	ops.c	FUNCTION_15	IF_9
0x400235b	            0x7407	                            je 0x4002364	       951	ops.c	FUNCTION_15	IF_9
0x400235d	    0x48893d000000	            mov qword [0x04002364], rdi 	       952	ops.c	FUNCTION_15	IF_9
0x4002364	            0xf3c3	                                     ret	       954	ops.c	FUNCTION_15
op_formatexpr	CALL,3:ELSE,0:WHILE,0:FOR,0:functions,0:IF,2:SWITCH,0:DO,0	17
0x40059c7	              0x53	                                push rbx	      4899	ops.c	ELSE_1	FUNCTION_58
0x40059c8	          0x4889fb	                            mov rbx, rdi	      4899	ops.c	ELSE_1	FUNCTION_58
0x40059cb	        0x837f5c00	               cmp dword [rdi + 0x5c], 0	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x40059cf	            0x740a	                            je 0x40059db	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x40059d1	      0xbf14000000	                           mov edi, 0x14	      4902	ops.c	ELSE_1	FUNCTION_58	CALL_1
0x40059d6	      0xe800000000	                          call 0x40059db	      4902	ops.c	ELSE_1	FUNCTION_58	CALL_1
0x40059db	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x40059df	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x40059e3	      0xba00000000	                              mov edx, 0	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x40059e8	      0xe800000000	                          call 0x40059ed	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x40059ed	            0x85c0	                           test eax, eax	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x40059ef	            0x740d	                            je 0x40059fe	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x40059f1	      0xbe00000000	                              mov esi, 0	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x40059f6	          0x4889df	                            mov rdi, rbx	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x40059f9	      0xe800000000	                          call 0x40059fe	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x40059fe	              0x5b	                                 pop rbx	      4908	ops.c	ELSE_1	FUNCTION_58
0x40059ff	              0xc3	                                     ret	      4908	ops.c	ELSE_1	FUNCTION_58
insert_reg	CALL,10:ELSE,3:WHILE,0:FOR,1:functions,0:IF,9:SWITCH,0:DO,0	97
0x40077ef	            0x4155	                                push r13	      1402	ops.c	FUNCTION_26
0x40077f1	            0x4154	                                push r12	      1402	ops.c	FUNCTION_26
0x40077f3	              0x55	                                push rbp	      1402	ops.c	FUNCTION_26
0x40077f4	              0x53	                                push rbx	      1402	ops.c	FUNCTION_26
0x40077f5	        0x4883ec28	                           sub rsp, 0x28	      1402	ops.c	FUNCTION_26
0x40077f9	          0x4189fc	                           mov r12d, edi	      1402	ops.c	FUNCTION_26
0x40077fc	            0x89f5	                            mov ebp, esi	      1402	ops.c	FUNCTION_26
0x40077fe	    0x64488b042528	                mov rax, qword fs:[0x28]	      1402	ops.c	FUNCTION_26
0x4007807	      0x4889442418	             mov qword [rsp + 0x18], rax	      1402	ops.c	FUNCTION_26
0x400780c	            0x31c0	                            xor eax, eax	      1402	ops.c	FUNCTION_26
0x400780e	      0xe800000000	                          call 0x4007813	      1414	ops.c	FUNCTION_26	CALL_1
0x4007813	    0x448b2d000000	           mov r13d, dword [0x0400781a] 	      1415	ops.c	FUNCTION_26	IF_1
0x400781a	      0xbb00000000	                              mov ebx, 0	      1416	ops.c	FUNCTION_26	IF_1
0x400781f	          0x4585ed	                         test r13d, r13d	      1415	ops.c	FUNCTION_26	IF_1
0x4007822	     0xf8516010000	                           jne 0x400793e	      1415	ops.c	FUNCTION_26	IF_1
0x4007828	          0x4585e4	                         test r12d, r12d	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x400782b	            0x7417	                            je 0x4007844	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x400782d	      0xbe00000000	                              mov esi, 0	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4007832	          0x4489e7	                           mov edi, r12d	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4007835	      0xe800000000	                          call 0x400783a	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x400783a	            0x89c3	                            mov ebx, eax	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x400783c	            0x85c0	                           test eax, eax	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x400783e	     0xf84fa000000	                            je 0x400793e	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4007844	          0x4489e7	                           mov edi, r12d	      1423	ops.c	FUNCTION_26	CALL_3
0x4007847	      0xe800000000	                          call 0x400784c	      1423	ops.c	FUNCTION_26	CALL_3
0x400784c	          0x4189c4	                           mov r12d, eax	      1423	ops.c	FUNCTION_26	CALL_3
0x400784f	          0x83f82e	                           cmp eax, 0x2e	      1426	ops.c	FUNCTION_26	IF_3
0x4007852	            0x751b	                           jne 0x400786f	      1426	ops.c	FUNCTION_26	IF_3
0x4007854	      0xba01000000	                              mov edx, 1	      1427	ops.c	FUNCTION_26	CALL_4
0x4007859	      0xbe01000000	                              mov esi, 1	      1427	ops.c	FUNCTION_26	CALL_4
0x400785e	      0xbf00000000	                              mov edi, 0	      1427	ops.c	FUNCTION_26	CALL_4
0x4007863	      0xe800000000	                          call 0x4007868	      1427	ops.c	FUNCTION_26	CALL_4
0x4007868	            0x89c3	                            mov ebx, eax	      1427	ops.c	FUNCTION_26	CALL_4
0x400786a	      0xe9cf000000	                           jmp 0x400793e	      1427	ops.c	FUNCTION_26	CALL_4
0x400786f	      0xb901000000	                              mov ecx, 1	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007874	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007879	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x400787e	            0x89c7	                            mov edi, eax	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007880	      0xe800000000	                          call 0x4007885	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007885	            0x89c3	                            mov ebx, eax	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007887	            0x85c0	                           test eax, eax	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4007889	            0x7434	                            je 0x40078bf	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x400788b	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x4007890	          0x4489eb	                           mov ebx, r13d	      1431	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x4007893	          0x4885ff	                           test rdi, rdi	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x4007896	     0xf84a2000000	                            je 0x400793e	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x400789c	            0x89ee	                            mov esi, ebp	      1432	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x400789e	      0xe8de8fffff	                   call sym.stuffescaped	      1432	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x40078a3	      0xbb01000000	                              mov ebx, 1	      1404	ops.c	FUNCTION_26
0x40078a8	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      1433	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x40078ad	     0xf848b000000	                            je 0x400793e	      1433	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x40078b3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x40078b8	      0xe800000000	                          call 0x40078bd	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x40078bd	            0xeb7f	                           jmp 0x400793e	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x40078bf	      0xbe00000000	                              mov esi, 0	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x40078c4	          0x4489e7	                           mov edi, r12d	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x40078c7	      0xe800000000	                          call 0x40078cc	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x40078cc	            0x85c0	                           test eax, eax	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x40078ce	      0xb801000000	                              mov eax, 1	      1439	ops.c	FUNCTION_26	ELSE_2	IF_7
0x40078d3	           0xf45e8	                         cmovne ebp, eax	      1439	ops.c	FUNCTION_26	ELSE_2	IF_7
0x40078d6	    0x488b05000000	            mov rax, qword [0x040078dd] 	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x40078dd	        0x48833800	                      cmp qword [rax], 0	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x40078e1	            0x745b	                            je 0x400793e	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x40078e3	      0x4883780800	                  cmp qword [rax + 8], 0	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x40078e8	            0x7e4f	                           jle 0x4007939	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x40078ea	      0xbb00000000	                              mov ebx, 0	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x40078ef	          0x488b00	                    mov rax, qword [rax]	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40078f2	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40078f6	            0x89ee	                            mov esi, ebp	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40078f8	      0xe8848fffff	                   call sym.stuffescaped	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40078fd	    0x488b05000000	            mov rax, qword [0x04007904] 	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007904	        0x80781001	                cmp byte [rax + 0x10], 1	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007908	            0x740d	                            je 0x4007917	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x400790a	        0x488b4008	                mov rax, qword [rax + 8]	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x400790e	        0x4883e801	                              sub rax, 1	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007912	          0x4839d8	                            cmp rax, rbx	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007915	            0x7e0a	                           jle 0x4007921	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4007917	      0xbf0a000000	                            mov edi, 0xa	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x400791c	      0xe800000000	                          call 0x4007921	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x4007921	        0x4883c301	                              add rbx, 1	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007925	    0x488b05000000	            mov rax, qword [0x0400792c] 	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x400792c	        0x48395808	                cmp qword [rax + 8], rbx	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007930	            0x7fbd	                            jg 0x40078ef	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4007932	      0xbb01000000	                              mov ebx, 1	      1404	ops.c	FUNCTION_26
0x4007937	            0xeb05	                           jmp 0x400793e	      1404	ops.c	FUNCTION_26
0x4007939	      0xbb01000000	                              mov ebx, 1	      1404	ops.c	FUNCTION_26
0x400793e	            0x89d8	                            mov eax, ebx	      1458	ops.c	FUNCTION_26
0x4007940	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1458	ops.c	FUNCTION_26
0x4007945	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1458	ops.c	FUNCTION_26
0x400794e	            0x7405	                            je 0x4007955	      1458	ops.c	FUNCTION_26
0x4007950	      0xe800000000	                          call 0x4007955	      1458	ops.c	FUNCTION_26
0x4007955	        0x4883c428	                           add rsp, 0x28	      1458	ops.c	FUNCTION_26
0x4007959	              0x5b	                                 pop rbx	      1458	ops.c	FUNCTION_26
0x400795a	              0x5d	                                 pop rbp	      1458	ops.c	FUNCTION_26
0x400795b	            0x415c	                                 pop r12	      1458	ops.c	FUNCTION_26
0x400795d	            0x415d	                                 pop r13	      1458	ops.c	FUNCTION_26
0x400795f	              0xc3	                                     ret	      1458	ops.c	FUNCTION_26
op_tilde	CALL,31:ELSE,4:WHILE,1:FOR,2:functions,0:IF,14:SWITCH,0:DO,0	266
0x40034e3	            0x4155	                                push r13	      2389	ops.c	FUNCTION_36
0x40034e5	            0x4154	                                push r12	      2389	ops.c	FUNCTION_36
0x40034e7	              0x55	                                push rbp	      2389	ops.c	FUNCTION_36
0x40034e8	              0x53	                                push rbx	      2389	ops.c	FUNCTION_36
0x40034e9	        0x4883ec68	                           sub rsp, 0x68	      2389	ops.c	FUNCTION_36
0x40034ed	          0x4889fb	                            mov rbx, rdi	      2389	ops.c	FUNCTION_36
0x40034f0	    0x64488b042528	                mov rax, qword fs:[0x28]	      2389	ops.c	FUNCTION_36
0x40034f9	      0x4889442458	             mov qword [rsp + 0x58], rax	      2389	ops.c	FUNCTION_36
0x40034fe	            0x31c0	                            xor eax, eax	      2389	ops.c	FUNCTION_36
0x4003500	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003504	        0x488d7001	                      lea rsi, [rax + 1]	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003508	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x400350c	        0x488d78ff	                      lea rdi, [rax - 1]	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003510	      0xe800000000	                          call 0x4003515	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003515	            0x85c0	                           test eax, eax	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x4003517	     0xf84bd030000	                            je 0x40038da	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x400351d	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2398	ops.c	FUNCTION_36
0x4003521	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      2398	ops.c	FUNCTION_36
0x4003525	        0x48890424	                    mov qword [rsp], rax	      2398	ops.c	FUNCTION_36
0x4003529	      0x4889542408	                mov qword [rsp + 8], rdx	      2398	ops.c	FUNCTION_36
0x400352e	        0x837b6000	               cmp dword [rbx + 0x60], 0	      2399	ops.c	FUNCTION_36	IF_2
0x4003532	     0xf84dc000000	                            je 0x4003614	      2399	ops.c	FUNCTION_36	IF_2
0x4003538	        0x488b1424	                    mov rdx, qword [rsp]	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x400353c	        0x483b5330	            cmp rdx, qword [rbx + 0x30] 	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003540	     0xf8ffc020000	                            jg 0x4003842	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003546	    0x41bc00000000	                             mov r12d, 0	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x400354c	      0xb900000000	                              mov ecx, 0	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4003551	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4003556	          0x4889df	                            mov rdi, rbx	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4003559	      0xe822cbffff	                     call sym.block_prep	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x400355e	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      2406	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003562	        0x89442408	                mov dword [rsp + 8], eax	      2406	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003566	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x400356a	          0x4889e6	                            mov rsi, rsp	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x400356d	            0x8b3b	                    mov edi, dword [rbx]	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x400356f	      0xe8f8feffff	                      call sym.swapchars	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4003574	            0x89c5	                            mov ebp, eax	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4003576	          0x4109c4	                            or r12d, eax	      2408	ops.c	FUNCTION_36	IF_2	FOR_1
0x4003579	      0xe800000000	                          call 0x400357e	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x400357e	            0x85c0	                           test eax, eax	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4003580	            0x7454	                            je 0x40035d6	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4003582	            0x85ed	                           test ebp, ebp	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4003584	            0x7450	                            je 0x40035d6	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4003586	      0xba00000000	                              mov edx, 0	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x400358b	        0x488b3424	                    mov rsi, qword [rsp]	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x400358f	    0x488b3d000000	            mov rdi, qword [0x04003596] 	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4003596	      0xe800000000	                          call 0x400359b	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x400359b	          0x4889c5	                            mov rbp, rax	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x400359e	      0x48634c2418	         movsxd rcx, dword [rsp + 0x18] 	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x40035a3	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x40035a7	        0x488b3424	                    mov rsi, qword [rsp]	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x40035ab	    0x488b3d000000	            mov rdi, qword [0x040035b2] 	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x40035b2	      0xe800000000	                          call 0x40035b7	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x40035b7	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2418	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3
0x40035bb	          0x4863ca	                         movsxd rcx, edx	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40035be	          0x4801e9	                            add rcx, rbp	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40035c1	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40035c6	        0x488b3424	                    mov rsi, qword [rsp]	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40035ca	    0x488b3d000000	            mov rdi, qword [0x040035d1] 	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40035d1	      0xe800000000	                          call 0x40035d6	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40035d6	        0x488b0424	                    mov rax, qword [rsp]	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40035da	        0x488d5001	                      lea rdx, [rax + 1]	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40035de	        0x48891424	                    mov qword [rsp], rdx	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40035e2	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40035e6	          0x4839d0	                            cmp rax, rdx	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40035e9	     0xf8d5dffffff	                           jge 0x400354c	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40035ef	          0x4585e4	                         test r12d, r12d	      2422	ops.c	FUNCTION_36	IF_2	IF_4
0x40035f2	     0xf844a020000	                            je 0x4003842	      2422	ops.c	FUNCTION_36	IF_2	IF_4
0x40035f8	        0x488d5001	                      lea rdx, [rax + 1]	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x40035fc	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4003600	      0xb900000000	                              mov ecx, 0	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4003605	      0xbe00000000	                              mov esi, 0	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x400360a	      0xe800000000	                          call 0x400360f	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x400360f	      0xe93e020000	                           jmp 0x4003852	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4003614	        0x837b0801	                  cmp dword [rbx + 8], 1	      2427	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4003618	            0x7548	                           jne 0x4003662	      2427	ops.c	FUNCTION_36	ELSE_1	IF_5
0x400361a	    0xc74328000000	               mov dword [rbx + 0x28], 0	      2429	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4003621	    0xc74424080000	                  mov dword [rsp + 8], 0	      2430	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4003629	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x400362d	      0xe800000000	                          call 0x4003632	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003632	          0x4889c7	                            mov rdi, rax	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003635	      0xb800000000	                              mov eax, 0	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x400363a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003641	            0xf2ae	              repne scasb al, byte [rdi]	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003643	          0x4889c8	                            mov rax, rcx	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003646	          0x48f7d0	                                 not rax	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003649	        0x4883e801	                              sub rax, 1	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x400364d	            0x85c0	                           test eax, eax	      2432	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x400364f	            0x7509	                           jne 0x400365a	      2432	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4003651	    0xc74338000000	               mov dword [rbx + 0x38], 0	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003658	            0xeb17	                           jmp 0x4003671	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x400365a	          0x83e801	                              sub eax, 1	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x400365d	          0x894338	             mov dword [rbx + 0x38], eax	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4003660	            0xeb0f	                           jmp 0x4003671	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4003662	        0x837b1400	               cmp dword [rbx + 0x14], 0	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4003666	            0x7509	                           jne 0x4003671	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4003668	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x400366c	      0xe800000000	                          call 0x4003671	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4003671	      0xbd00000000	                              mov ebp, 0	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4003676	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x400367a	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4003681	    0x41bc00000000	                             mov r12d, 0	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4003687	        0x48390424	                    cmp qword [rsp], rax	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x400368b	            0x7518	                           jne 0x40036a5	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x400368d	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4003690	        0x2b542408	                sub edx, dword [rsp + 8]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4003694	          0x83c201	                              add edx, 1	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4003697	          0x4889e6	                            mov rsi, rsp	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x400369a	            0x8b3b	                    mov edi, dword [rbx]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x400369c	      0xe8cbfdffff	                      call sym.swapchars	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x40036a1	            0x89c5	                            mov ebp, eax	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x40036a3	            0xeb7d	                           jmp 0x4003722	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x40036a5	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x40036a9	        0x48390424	                    cmp qword [rsp], rax	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x40036ad	            0x7508	                           jne 0x40036b7	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x40036af	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x40036b2	          0x8d5001	                      lea edx, [rax + 1]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x40036b5	            0xeb19	                           jmp 0x40036d0	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x40036b7	          0x4889e7	                            mov rdi, rsp	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x40036ba	      0xe800000000	                          call 0x40036bf	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x40036bf	          0x4889c7	                            mov rdi, rax	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x40036c2	          0x4c89e9	                            mov rcx, r13	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x40036c5	          0x4489e0	                           mov eax, r12d	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x40036c8	            0xf2ae	              repne scasb al, byte [rdi]	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x40036ca	          0x48f7d1	                                 not rcx	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x40036cd	          0x8d51ff	                      lea edx, [rcx - 1]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x40036d0	          0x4889e6	                            mov rsi, rsp	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x40036d3	            0x8b3b	                    mov edi, dword [rbx]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x40036d5	      0xe892fdffff	                      call sym.swapchars	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x40036da	             0x9c5	                             or ebp, eax	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x40036dc	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036e0	        0x488b0424	                    mov rax, qword [rsp]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036e4	          0x4839c2	                            cmp rdx, rax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036e7	            0x7407	                            je 0x40036f0	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036e9	          0x4839c2	                            cmp rdx, rax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036ec	            0x7d27	                           jge 0x4003715	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036ee	            0xeb32	                           jmp 0x4003722	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036f0	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036f3	        0x8b442408	                mov eax, dword [rsp + 8]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036f7	            0x39c2	                            cmp edx, eax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036f9	            0x7406	                            je 0x4003701	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036fb	            0x39c2	                            cmp edx, eax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036fd	            0x7d0b	                           jge 0x400370a	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40036ff	            0xeb21	                           jmp 0x4003722	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003701	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003705	          0x39433c	            cmp dword [rbx + 0x3c], eax 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003708	            0x7c18	                            jl 0x4003722	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x400370a	      0x488b442408	                mov rax, qword [rsp + 8]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x400370f	        0x48394338	            cmp qword [rbx + 0x38], rax 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003713	            0x740d	                            je 0x4003722	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003715	          0x4889e7	                            mov rdi, rsp	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003718	      0xe800000000	                          call 0x400371d	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x400371d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003720	            0x7583	                           jne 0x40036a5	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4003722	            0x85ed	                           test ebp, ebp	      2450	ops.c	FUNCTION_36	ELSE_1	IF_10
0x4003724	     0xf8418010000	                            je 0x4003842	      2450	ops.c	FUNCTION_36	ELSE_1	IF_10
0x400372a	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x400372e	        0x488d5001	                      lea rdx, [rax + 1]	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4003732	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4003735	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4003739	      0xb900000000	                              mov ecx, 0	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x400373e	      0xe800000000	                          call 0x4003743	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4003743	      0xe800000000	                          call 0x4003748	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4003748	            0x85c0	                           test eax, eax	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x400374a	     0xf8402010000	                            je 0x4003852	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4003750	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003754	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003758	          0x4889c6	                            mov rsi, rax	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x400375b	        0x48890424	                    mov qword [rsp], rax	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x400375f	      0x4889542408	                mov qword [rsp + 8], rdx	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003764	        0x483b4330	            cmp rax, qword [rbx + 0x30] 	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4003768	     0xf8d82000000	                           jge 0x40037f0	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x400376e	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4003775	      0xba00000000	                              mov edx, 0	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x400377a	    0x488b3d000000	            mov rdi, qword [0x04003781] 	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4003781	      0xe800000000	                          call 0x4003786	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4003786	          0x4989c4	                            mov r12, rax	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4003789	      0xb800000000	                              mov eax, 0	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x400378e	          0x4c89e9	                            mov rcx, r13	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4003791	          0x4c89e7	                            mov rdi, r12	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4003794	            0xf2ae	              repne scasb al, byte [rdi]	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4003796	          0x4889c8	                            mov rax, rcx	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4003799	          0x48f7d0	                                 not rax	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x400379c	        0x488d68ff	                      lea rbp, [rax - 1]	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x40037a0	        0x8b542408	                mov edx, dword [rsp + 8]	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x40037a4	            0x29d5	                            sub ebp, edx	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x40037a6	          0x4863cd	                         movsxd rcx, ebp	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x40037a9	        0x488b3424	                    mov rsi, qword [rsp]	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x40037ad	    0x488b3d000000	            mov rdi, qword [0x040037b4] 	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x40037b4	      0xe800000000	                          call 0x40037b9	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x40037b9	        0x8b542408	                mov edx, dword [rsp + 8]	      2467	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x40037bd	          0x4863ca	                         movsxd rcx, edx	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x40037c0	          0x4c01e1	                            add rcx, r12	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x40037c3	          0x4189e8	                            mov r8d, ebp	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x40037c6	        0x488b3424	                    mov rsi, qword [rsp]	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x40037ca	    0x488b3d000000	            mov rdi, qword [0x040037d1] 	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x40037d1	      0xe800000000	                          call 0x40037d6	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x40037d6	    0xc74424080000	                  mov dword [rsp + 8], 0	      2468	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x40037de	        0x488b0424	                    mov rax, qword [rsp]	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x40037e2	        0x488d7001	                      lea rsi, [rax + 1]	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x40037e6	        0x48893424	                    mov qword [rsp], rsi	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x40037ea	        0x48397330	            cmp qword [rbx + 0x30], rsi 	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x40037ee	            0x7f85	                            jg 0x4003775	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x40037f0	      0xba00000000	                              mov edx, 0	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x40037f5	    0x488b3d000000	            mov rdi, qword [0x040037fc] 	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x40037fc	      0xe800000000	                          call 0x4003801	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4003801	          0x4989c4	                            mov r12, rax	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4003804	        0x8b542408	                mov edx, dword [rsp + 8]	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003808	          0x8b6b38	            mov ebp, dword [rbx + 0x38] 	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x400380b	            0x29d5	                            sub ebp, edx	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x400380d	          0x83c501	                              add ebp, 1	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003810	          0x4863cd	                         movsxd rcx, ebp	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4003813	        0x488b3424	                    mov rsi, qword [rsp]	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4003817	    0x488b3d000000	            mov rdi, qword [0x0400381e] 	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x400381e	      0xe800000000	                          call 0x4003823	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4003823	        0x8b542408	                mov edx, dword [rsp + 8]	      2475	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4003827	          0x4863ca	                         movsxd rcx, edx	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x400382a	          0x4c01e1	                            add rcx, r12	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x400382d	          0x4189e8	                            mov r8d, ebp	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4003830	        0x488b3424	                    mov rsi, qword [rsp]	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4003834	    0x488b3d000000	            mov rdi, qword [0x0400383b] 	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x400383b	      0xe800000000	                          call 0x4003840	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4003840	            0xeb10	                           jmp 0x4003852	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4003842	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      2481	ops.c	FUNCTION_36	IF_12
0x4003846	            0x740a	                            je 0x4003852	      2481	ops.c	FUNCTION_36	IF_12
0x4003848	      0xbf14000000	                           mov edi, 0x14	      2483	ops.c	FUNCTION_36	CALL_27
0x400384d	      0xe800000000	                          call 0x4003852	      2483	ops.c	FUNCTION_36	CALL_27
0x4003852	    0x488b05000000	            mov rax, qword [0x04003859] 	      2488	ops.c	FUNCTION_36
0x4003859	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2488	ops.c	FUNCTION_36
0x400385d	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2488	ops.c	FUNCTION_36
0x4003861	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      2488	ops.c	FUNCTION_36
0x4003868	    0x4889b8e81100	          mov qword [rax + 0x11e8], rdi 	      2488	ops.c	FUNCTION_36
0x400386f	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2489	ops.c	FUNCTION_36
0x4003873	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2489	ops.c	FUNCTION_36
0x4003877	    0x4889b0001200	          mov qword [rax + 0x1200], rsi 	      2489	ops.c	FUNCTION_36
0x400387e	    0x4889b8081200	          mov qword [rax + 0x1208], rdi 	      2489	ops.c	FUNCTION_36
0x4003885	        0x488b5b50	            mov rbx, qword [rbx + 0x50] 	      2491	ops.c	FUNCTION_36	IF_13
0x4003889	    0x483b1d000000	            cmp rbx, qword [0x04003890] 	      2491	ops.c	FUNCTION_36	IF_13
0x4003890	            0x7e48	                           jle 0x40038da	      2491	ops.c	FUNCTION_36	IF_13
0x4003892	        0x4883fb01	                              cmp rbx, 1	      2493	ops.c	FUNCTION_36	IF_13	IF_14
0x4003896	            0x751e	                           jne 0x40038b6	      2493	ops.c	FUNCTION_36	IF_13	IF_14
0x4003898	      0xba05000000	                              mov edx, 5	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x400389d	      0xbe00000000	                              mov esi, 0	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x40038a2	      0xbf00000000	                              mov edi, 0	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x40038a7	      0xe800000000	                          call 0x40038ac	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x40038ac	          0x4889c7	                            mov rdi, rax	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x40038af	      0xe800000000	                          call 0x40038b4	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x40038b4	            0xeb24	                           jmp 0x40038da	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x40038b6	      0xba05000000	                              mov edx, 5	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x40038bb	      0xbe00000000	                              mov esi, 0	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x40038c0	      0xbf00000000	                              mov edi, 0	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x40038c5	      0xe800000000	                          call 0x40038ca	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x40038ca	          0x4889de	                            mov rsi, rbx	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x40038cd	          0x4889c7	                            mov rdi, rax	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x40038d0	      0xb800000000	                              mov eax, 0	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x40038d5	      0xe800000000	                          call 0x40038da	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x40038da	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      2498	ops.c	FUNCTION_36
0x40038df	    0x644833042528	                xor rax, qword fs:[0x28]	      2498	ops.c	FUNCTION_36
0x40038e8	            0x7405	                            je 0x40038ef	      2498	ops.c	FUNCTION_36
0x40038ea	      0xe800000000	                          call 0x40038ef	      2498	ops.c	FUNCTION_36
0x40038ef	        0x4883c468	                           add rsp, 0x68	      2498	ops.c	FUNCTION_36
0x40038f3	              0x5b	                                 pop rbx	      2498	ops.c	FUNCTION_36
0x40038f4	              0x5d	                                 pop rbp	      2498	ops.c	FUNCTION_36
0x40038f5	            0x415c	                                 pop r12	      2498	ops.c	FUNCTION_36
0x40038f7	            0x415d	                                 pop r13	      2498	ops.c	FUNCTION_36
0x40038f9	              0xc3	                                     ret	      2498	ops.c	FUNCTION_36
read_viminfo_register	CALL,22:ELSE,6:WHILE,1:FOR,4:functions,0:IF,17:SWITCH,0:DO,0	259
0x4005f4f	            0x4157	                                push r15	      6086	ops.c	FUNCTION_70
0x4005f51	            0x4156	                                push r14	      6086	ops.c	FUNCTION_70
0x4005f53	            0x4155	                                push r13	      6086	ops.c	FUNCTION_70
0x4005f55	            0x4154	                                push r12	      6086	ops.c	FUNCTION_70
0x4005f57	              0x55	                                push rbp	      6086	ops.c	FUNCTION_70
0x4005f58	              0x53	                                push rbx	      6086	ops.c	FUNCTION_70
0x4005f59	        0x4883ec28	                           sub rsp, 0x28	      6086	ops.c	FUNCTION_70
0x4005f5d	          0x4889fd	                            mov rbp, rdi	      6086	ops.c	FUNCTION_70
0x4005f60	            0x89f3	                            mov ebx, esi	      6086	ops.c	FUNCTION_70
0x4005f62	    0x64488b042528	                mov rax, qword fs:[0x28]	      6086	ops.c	FUNCTION_70
0x4005f6b	      0x4889442418	             mov qword [rsp + 0x18], rax	      6086	ops.c	FUNCTION_70
0x4005f70	            0x31c0	                            xor eax, eax	      6086	ops.c	FUNCTION_70
0x4005f72	          0x4c8b2f	                    mov r13, qword [rdi]	      6099	ops.c	FUNCTION_70
0x4005f75	        0x498d4501	                      lea rax, [r13 + 1]	      6099	ops.c	FUNCTION_70
0x4005f79	      0x4889442410	             mov qword [rsp + 0x10], rax	      6099	ops.c	FUNCTION_70
0x4005f7e	    0x41bc00000000	                             mov r12d, 0	      6092	ops.c	FUNCTION_70
0x4005f84	      0x41807d0122	                cmp byte [r13 + 1], 0x22	      6102	ops.c	FUNCTION_70	IF_1
0x4005f89	            0x750f	                           jne 0x4005f9a	      6102	ops.c	FUNCTION_70	IF_1
0x4005f8b	        0x498d4502	                      lea rax, [r13 + 2]	      6105	ops.c	FUNCTION_70	IF_1
0x4005f8f	      0x4889442410	             mov qword [rsp + 0x10], rax	      6105	ops.c	FUNCTION_70	IF_1
0x4005f94	    0x41bc01000000	                             mov r12d, 1	      6104	ops.c	FUNCTION_70	IF_1
0x4005f9a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005f9f	           0xfb610	                   movzx edx, byte [rax]	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005fa2	            0x89d0	                            mov eax, edx	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005fa4	          0x83e0df	                     and eax, 0xffffffdf	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005fa7	          0x83e841	                           sub eax, 0x41	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005faa	            0x3c19	                            cmp al, 0x19	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005fac	            0x764a	                           jbe 0x4005ff8	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005fae	           0xfb6c2	                           movzx eax, dl	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005fb1	          0x83e830	                           sub eax, 0x30	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005fb4	          0x83f809	                              cmp eax, 9	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005fb7	            0x7647	                           jbe 0x4006000	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005fb9	          0x80fa2d	                            cmp dl, 0x2d	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005fbc	            0x7442	                            je 0x4006000	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4005fbe	      0xba05000000	                              mov edx, 5	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005fc3	      0xbe00000000	                              mov esi, 0	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005fc8	      0xbf00000000	                              mov edi, 0	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005fcd	      0xe800000000	                          call 0x4005fd2	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005fd2	          0x4c89ea	                            mov rdx, r13	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005fd5	          0x4889c6	                            mov rsi, rax	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005fd8	      0xbf00000000	                              mov edi, 0	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005fdd	      0xe800000000	                          call 0x4005fe2	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005fe2	            0x89c2	                            mov edx, eax	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005fe4	      0xb801000000	                              mov eax, 1	      6111	ops.c	FUNCTION_70	IF_2	IF_3
0x4005fe9	    0x41bf00000000	                             mov r15d, 0	      6112	ops.c	FUNCTION_70	IF_2
0x4005fef	            0x85d2	                           test edx, edx	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005ff1	            0x7413	                            je 0x4006006	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005ff3	      0xe9e9020000	                           jmp 0x40062e1	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4005ff8	    0x41bf01000000	                             mov r15d, 1	      6088	ops.c	FUNCTION_70
0x4005ffe	            0xeb06	                           jmp 0x4006006	      6088	ops.c	FUNCTION_70
0x4006000	    0x41bf01000000	                             mov r15d, 1	      6088	ops.c	FUNCTION_70
0x4006006	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6114	ops.c	FUNCTION_70	CALL_4
0x400600b	        0x488d5001	                      lea rdx, [rax + 1]	      6114	ops.c	FUNCTION_70	CALL_4
0x400600f	      0x4889542410	             mov qword [rsp + 0x10], rdx	      6114	ops.c	FUNCTION_70	CALL_4
0x4006014	           0xfb638	                   movzx edi, byte [rax]	      6114	ops.c	FUNCTION_70	CALL_4
0x4006017	      0xbe00000000	                              mov esi, 0	      6114	ops.c	FUNCTION_70	CALL_4
0x400601c	      0xe800000000	                          call 0x4006021	      6114	ops.c	FUNCTION_70	CALL_4
0x4006021	            0x85db	                           test ebx, ebx	      6115	ops.c	FUNCTION_70	IF_4
0x4006023	     0xf85dd020000	                           jne 0x4006306	      6115	ops.c	FUNCTION_70	IF_4
0x4006029	    0x488b05000000	            mov rax, qword [0x04006030] 	      6115	ops.c	FUNCTION_70	IF_4
0x4006030	        0x48833800	                      cmp qword [rax], 0	      6115	ops.c	FUNCTION_70	IF_4
0x4006034	     0xf85df020000	                           jne 0x4006319	      6115	ops.c	FUNCTION_70	IF_4
0x400603a	      0xe9b4020000	                           jmp 0x40062f3	      6115	ops.c	FUNCTION_70	IF_4
0x400603f	    0x41bf00000000	                             mov r15d, 0	      6116	ops.c	FUNCTION_70	IF_4
0x4006045	    0x833d00000000	               cmp dword [0x0400604c], 0	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x400604c	            0x750a	                           jne 0x4006058	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x400604e	         0xfb640ff	               movzx eax, byte [rax - 1]	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x4006052	    0x890500000000	            mov dword [0x04006058], eax 	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x4006058	          0x4585ff	                         test r15d, r15d	      6127	ops.c	FUNCTION_70	IF_7
0x400605b	     0xf84a5000000	                            je 0x4006106	      6127	ops.c	FUNCTION_70	IF_7
0x4006061	          0x4585e4	                         test r12d, r12d	      6135	ops.c	FUNCTION_70	IF_7	IF_8
0x4006064	            0x740e	                            je 0x4006074	      6135	ops.c	FUNCTION_70	IF_7	IF_8
0x4006066	    0x488b05000000	            mov rax, qword [0x0400606d] 	      6136	ops.c	FUNCTION_70	IF_7	IF_8
0x400606d	    0x488905000000	            mov qword [0x04006074], rax 	      6136	ops.c	FUNCTION_70	IF_7	IF_8
0x4006074	      0xbf20030000	                          mov edi, 0x320	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x4006079	      0xe800000000	                          call 0x400607e	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x400607e	          0x4989c5	                            mov r13, rax	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x4006081	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x4006086	      0xe800000000	                          call 0x400608b	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x400608b	          0x4889c7	                            mov rdi, rax	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x400608e	      0xe800000000	                          call 0x4006093	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x4006093	      0x4889442410	             mov qword [rsp + 0x10], rax	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x4006098	      0xbf00000000	                              mov edi, 0	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400609d	      0xb904000000	                              mov ecx, 4	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40060a2	          0x4889c6	                            mov rsi, rax	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40060a5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40060a7	           0xf97c1	                                 seta cl	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40060aa	           0xf92c2	                                 setb dl	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40060ad	    0xc74424040000	                  mov dword [rsp + 4], 0	      6140	ops.c	FUNCTION_70	IF_7	IF_9
0x40060b5	            0x38d1	                              cmp cl, dl	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40060b7	            0x7428	                            je 0x40060e1	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40060b9	      0xbf00000000	                              mov edi, 0	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40060be	      0xb905000000	                              mov ecx, 5	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40060c3	          0x4889c6	                            mov rsi, rax	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40060c6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40060c8	           0xf97c2	                                 seta dl	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40060cb	           0xf92c1	                                 setb cl	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40060ce	            0x29ca	                            sub edx, ecx	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40060d0	           0xfbed2	                           movsx edx, dl	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40060d3	          0x83fa01	                              cmp edx, 1	      6144	ops.c	FUNCTION_70	IF_7	ELSE_2
0x40060d6	            0x19f6	                            sbb esi, esi	      6144	ops.c	FUNCTION_70	IF_7	ELSE_2
0x40060d8	            0xf7d6	                                 not esi	      6144	ops.c	FUNCTION_70	IF_7	ELSE_2
0x40060da	          0x83c602	                              add esi, 2	      6144	ops.c	FUNCTION_70	IF_7	ELSE_2
0x40060dd	        0x89742404	                mov dword [rsp + 4], esi	      6144	ops.c	FUNCTION_70	IF_7	ELSE_2
0x40060e1	          0x4889c7	                            mov rdi, rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x40060e4	      0xe800000000	                          call 0x40060e9	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x40060e9	          0x4889c7	                            mov rdi, rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x40060ec	      0xe800000000	                          call 0x40060f1	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x40060f1	      0x4889442410	             mov qword [rsp + 0x10], rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x40060f6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x40060fb	      0xe800000000	                          call 0x4006100	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x4006100	        0x89442408	                mov dword [rsp + 8], eax	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x4006104	            0xeb16	                           jmp 0x400611c	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x4006106	    0xc74424080000	                  mov dword [rsp + 8], 0	      6096	ops.c	FUNCTION_70
0x400610e	    0xc74424040000	                  mov dword [rsp + 4], 0	      6095	ops.c	FUNCTION_70
0x4006116	    0x41bd00000000	                             mov r13d, 0	      6094	ops.c	FUNCTION_70
0x400611c	    0xc70424640000	                   mov dword [rsp], 0x64	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x4006123	    0x41be00000000	                             mov r14d, 0	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x4006129	      0xe98f000000	                           jmp 0x40061bd	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400612e	          0x4585e4	                         test r12d, r12d	      6153	ops.c	FUNCTION_70	WHILE_1	IF_11
0x4006131	     0xf8489000000	                            je 0x40061c0	      6153	ops.c	FUNCTION_70	WHILE_1	IF_11
0x4006137	        0x443b3424	                   cmp r14d, dword [rsp]	      6155	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400613b	            0x7550	                           jne 0x400618d	      6155	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400613d	          0x8b0424	                    mov eax, dword [rsp]	      6158	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0x4006140	             0x1c0	                            add eax, eax	      6158	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0x4006142	        0x8944240c	              mov dword [rsp + 0xc], eax	      6158	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0x4006146	    0x8d3cc5000000	                        lea edi, [rax*8]	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400614d	      0xe800000000	                          call 0x4006152	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4006152	          0x4989c4	                            mov r12, rax	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4006155	          0x4885c0	                           test rax, rax	      6160	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0x4006158	     0xf848c000000	                            je 0x40061ea	      6160	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0x400615e	        0x833c2400	                      cmp dword [rsp], 0	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006162	            0x7e17	                           jle 0x400617b	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006164	      0xb800000000	                              mov eax, 0	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006169	      0x498b54c500	            mov rdx, qword [r13 + rax*8]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400616e	        0x498914c4	            mov qword [r12 + rax*8], rdx	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006172	        0x4883c001	                              add rax, 1	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006176	          0x390424	                    cmp dword [rsp], eax	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4006179	            0x7fee	                            jg 0x4006169	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400617b	          0x4c89ef	                            mov rdi, r13	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x400617e	      0xe800000000	                          call 0x4006183	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x4006183	          0x4d89e5	                            mov r13, r12	      6168	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4006186	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      6169	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400618a	          0x890424	                    mov dword [rsp], eax	      6169	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400618d	      0xba01000000	                              mov edx, 1	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x4006192	      0xbe01000000	                              mov esi, 1	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x4006197	          0x4889ef	                            mov rdi, rbp	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x400619a	      0xe800000000	                          call 0x400619f	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x400619f	      0x4889442410	             mov qword [rsp + 0x10], rax	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x40061a4	          0x4885c0	                           test rax, rax	      6172	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40061a7	            0x740e	                            je 0x40061b7	      6172	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40061a9	          0x4963d6	                        movsxd rdx, r14d	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40061ac	      0x498944d500	            mov qword [r13 + rdx*8], rax	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40061b1	        0x458d7601	                     lea r14d, [r14 + 1]	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40061b5	            0xeb06	                           jmp 0x40061bd	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40061b7	    0x41bf00000000	                             mov r15d, 0	      6176	ops.c	FUNCTION_70	WHILE_1	IF_11	ELSE_3
0x40061bd	          0x4589fc	                          mov r12d, r15d	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40061c0	          0x4889ef	                            mov rdi, rbp	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x40061c3	      0xe800000000	                          call 0x40061c8	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x40061c8	            0x89c3	                            mov ebx, eax	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x40061ca	            0x85c0	                           test eax, eax	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x40061cc	            0x7517	                           jne 0x40061e5	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x40061ce	        0x488b4500	                    mov rax, qword [rbp]	      6151	ops.c	FUNCTION_70	WHILE_1
0x40061d2	           0xfb600	                   movzx eax, byte [rax]	      6151	ops.c	FUNCTION_70	WHILE_1
0x40061d5	            0x3c09	                               cmp al, 9	      6151	ops.c	FUNCTION_70	WHILE_1
0x40061d7	     0xf8451ffffff	                            je 0x400612e	      6151	ops.c	FUNCTION_70	WHILE_1
0x40061dd	            0x3c3c	                            cmp al, 0x3c	      6151	ops.c	FUNCTION_70	WHILE_1
0x40061df	     0xf8449ffffff	                            je 0x400612e	      6151	ops.c	FUNCTION_70	WHILE_1
0x40061e5	          0x4585ff	                         test r15d, r15d	      6180	ops.c	FUNCTION_70	ELSE_3	IF_15
0x40061e8	            0x7513	                           jne 0x40061fd	      6180	ops.c	FUNCTION_70	ELSE_3	IF_15
0x40061ea	      0xbd00000000	                              mov ebp, 0	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x40061ef	          0x4585f6	                         test r14d, r14d	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x40061f2	     0xf8fcc000000	                            jg 0x40062c4	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x40061f8	      0xe9da000000	                           jmp 0x40062d7	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x40061fd	    0x488b05000000	            mov rax, qword [0x04006204] 	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006204	      0x4883780800	                  cmp qword [rax + 8], 0	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006209	            0x7e27	                           jle 0x4006232	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400620b	      0xbd00000000	                              mov ebp, 0	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006210	          0x4863d5	                         movsxd rdx, ebp	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x4006213	          0x488b00	                    mov rax, qword [rax]	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x4006216	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400621a	      0xe800000000	                          call 0x400621f	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400621f	          0x83c501	                              add ebp, 1	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006222	    0x488b05000000	            mov rax, qword [0x04006229] 	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006229	          0x4863d5	                         movsxd rdx, ebp	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400622c	        0x483b5008	                cmp rdx, qword [rax + 8]	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006230	            0x7cde	                            jl 0x4006210	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4006232	          0x488b38	                    mov rdi, qword [rax]	      6185	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0x4006235	      0xe800000000	                          call 0x400623a	      6185	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0x400623a	    0x488b2d000000	            mov rbp, qword [0x04006241] 	      6187	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006241	       0xfb6442404	               movzx eax, byte [rsp + 4]	      6187	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006246	          0x884510	               mov byte [rbp + 0x10], al	      6187	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006249	        0x8b442408	                mov eax, dword [rsp + 8]	      6188	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400624d	          0x894514	            mov dword [rbp + 0x14], eax 	      6188	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006250	          0x4963c6	                        movsxd rax, r14d	      6189	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006253	        0x48894508	                mov qword [rbp + 8], rax	      6189	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4006257	    0x48c745180000	               mov qword [rbp + 0x18], 0	      6190	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400625f	          0x4585f6	                         test r14d, r14d	      6191	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x4006262	            0x750a	                           jne 0x400626e	      6191	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x4006264	    0x48c745000000	                      mov qword [rbp], 0	      6193	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x400626c	            0xeb69	                           jmp 0x40062d7	      6193	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x400626e	    0x428d3cf50000	                        lea edi, [r14*8]	      6199	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0x4006276	      0xe800000000	                          call 0x400627b	      6199	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0x400627b	        0x48894500	                    mov qword [rbp], rax	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x400627f	          0x4585f6	                         test r14d, r14d	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x4006282	            0x7e53	                           jle 0x40062d7	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x4006284	        0x418d46ff	                      lea eax, [r14 - 1]	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x4006288	    0x4c8d24c50800	                    lea r12, [rax*8 + 8]	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x4006290	      0xbd00000000	                              mov ebp, 0	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x4006295	    0x488b05000000	            mov rax, qword [0x0400629c] 	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x400629c	          0x488b00	                    mov rax, qword [rax]	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x400629f	          0x4885c0	                           test rax, rax	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x40062a2	            0x750c	                           jne 0x40062b0	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x40062a4	      0x498b7c2d00	              mov rdi, qword [r13 + rbp]	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x40062a9	      0xe800000000	                          call 0x40062ae	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x40062ae	            0xeb09	                           jmp 0x40062b9	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x40062b0	      0x498b542d00	              mov rdx, qword [r13 + rbp]	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x40062b5	        0x48891428	              mov qword [rax + rbp], rdx	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x40062b9	        0x4883c508	                              add rbp, 8	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x40062bd	          0x4c39e5	                            cmp rbp, r12	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x40062c0	            0x75d3	                           jne 0x4006295	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x40062c2	            0xeb13	                           jmp 0x40062d7	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x40062c4	      0x498b7ced00	            mov rdi, qword [r13 + rbp*8]	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x40062c9	      0xe800000000	                          call 0x40062ce	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x40062ce	        0x4883c501	                              add rbp, 1	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x40062d2	          0x4139ee	                           cmp r14d, ebp	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x40062d5	            0x7fed	                            jg 0x40062c4	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x40062d7	          0x4c89ef	                            mov rdi, r13	      6215	ops.c	FUNCTION_70	CALL_22
0x40062da	      0xe800000000	                          call 0x40062df	      6215	ops.c	FUNCTION_70	CALL_22
0x40062df	            0x89d8	                            mov eax, ebx	      6217	ops.c	FUNCTION_70
0x40062e1	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      6218	ops.c	FUNCTION_70
0x40062e6	    0x644833342528	                xor rsi, qword fs:[0x28]	      6218	ops.c	FUNCTION_70
0x40062ef	            0x745c	                            je 0x400634d	      6218	ops.c	FUNCTION_70
0x40062f1	            0xeb55	                           jmp 0x4006348	      6218	ops.c	FUNCTION_70
0x40062f3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6118	ops.c	FUNCTION_70	IF_5
0x40062f8	          0x803840	                    cmp byte [rax], 0x40	      6118	ops.c	FUNCTION_70	IF_5
0x40062fb	     0xf8557fdffff	                           jne 0x4006058	      6118	ops.c	FUNCTION_70	IF_5
0x4006301	      0xe93ffdffff	                           jmp 0x4006045	      6118	ops.c	FUNCTION_70	IF_5
0x4006306	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6118	ops.c	FUNCTION_70	IF_5
0x400630b	          0x803840	                    cmp byte [rax], 0x40	      6118	ops.c	FUNCTION_70	IF_5
0x400630e	     0xf8544fdffff	                           jne 0x4006058	      6118	ops.c	FUNCTION_70	IF_5
0x4006314	      0xe935fdffff	                           jmp 0x400604e	      6118	ops.c	FUNCTION_70	IF_5
0x4006319	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6118	ops.c	FUNCTION_70	IF_5
0x400631e	          0x803840	                    cmp byte [rax], 0x40	      6118	ops.c	FUNCTION_70	IF_5
0x4006321	     0xf8418fdffff	                            je 0x400603f	      6118	ops.c	FUNCTION_70	IF_5
0x4006327	    0x41bf00000000	                             mov r15d, 0	      6116	ops.c	FUNCTION_70	IF_4
0x400632d	    0xc74424080000	                  mov dword [rsp + 8], 0	      6096	ops.c	FUNCTION_70
0x4006335	    0xc74424040000	                  mov dword [rsp + 4], 0	      6095	ops.c	FUNCTION_70
0x400633d	    0x41bd00000000	                             mov r13d, 0	      6094	ops.c	FUNCTION_70
0x4006343	      0xe9d4fdffff	                           jmp 0x400611c	      6094	ops.c	FUNCTION_70
0x4006348	      0xe800000000	                          call 0x400634d	      6218	ops.c	FUNCTION_70
0x400634d	        0x4883c428	                           add rsp, 0x28	      6218	ops.c	FUNCTION_70
0x4006351	              0x5b	                                 pop rbx	      6218	ops.c	FUNCTION_70
0x4006352	              0x5d	                                 pop rbp	      6218	ops.c	FUNCTION_70
0x4006353	            0x415c	                                 pop r12	      6218	ops.c	FUNCTION_70
0x4006355	            0x415d	                                 pop r13	      6218	ops.c	FUNCTION_70
0x4006357	            0x415e	                                 pop r14	      6218	ops.c	FUNCTION_70
0x4006359	            0x415f	                                 pop r15	      6218	ops.c	FUNCTION_70
0x400635b	              0xc3	                                     ret	      6218	ops.c	FUNCTION_70
fex_format	CALL,8:ELSE,0:WHILE,0:FOR,0:functions,0:IF,3:SWITCH,0:DO,0	53
0x4005123	            0x4155	                                push r13	      4915	ops.c	FUNCTION_59
0x4005125	            0x4154	                                push r12	      4915	ops.c	FUNCTION_59
0x4005127	              0x55	                                push rbp	      4915	ops.c	FUNCTION_59
0x4005128	              0x53	                                push rbx	      4915	ops.c	FUNCTION_59
0x4005129	        0x4883ec08	                              sub rsp, 8	      4915	ops.c	FUNCTION_59
0x400512d	          0x4989fd	                            mov r13, rdi	      4915	ops.c	FUNCTION_59
0x4005130	          0x4889f5	                            mov rbp, rsi	      4915	ops.c	FUNCTION_59
0x4005133	            0x89d3	                            mov ebx, edx	      4915	ops.c	FUNCTION_59
0x4005135	      0xbe04000000	                              mov esi, 4	      4916	ops.c	FUNCTION_59	CALL_1
0x400513a	      0xbf00000000	                              mov edi, 0	      4916	ops.c	FUNCTION_59	CALL_1
0x400513f	      0xe800000000	                          call 0x4005144	      4916	ops.c	FUNCTION_59	CALL_1
0x4005144	          0x4189c4	                           mov r12d, eax	      4916	ops.c	FUNCTION_59	CALL_1
0x4005147	          0x4c89ee	                            mov rsi, r13	      4925	ops.c	FUNCTION_59	CALL_2
0x400514a	      0xbf09000000	                              mov edi, 9	      4925	ops.c	FUNCTION_59	CALL_2
0x400514f	      0xe800000000	                          call 0x4005154	      4925	ops.c	FUNCTION_59	CALL_2
0x4005154	          0x4889ee	                            mov rsi, rbp	      4926	ops.c	FUNCTION_59	CALL_3
0x4005157	      0xbf00000000	                              mov edi, 0	      4926	ops.c	FUNCTION_59	CALL_3
0x400515c	      0xe800000000	                          call 0x4005161	      4926	ops.c	FUNCTION_59	CALL_3
0x4005161	            0x89df	                            mov edi, ebx	      4927	ops.c	FUNCTION_59	CALL_4
0x4005163	      0xe800000000	                          call 0x4005168	      4927	ops.c	FUNCTION_59	CALL_4
0x4005168	    0x488b05000000	            mov rax, qword [0x0400516f] 	      4930	ops.c	FUNCTION_59	CALL_5
0x400516f	    0x488bb8001500	          mov rdi, qword [rax + 0x1500] 	      4930	ops.c	FUNCTION_59	CALL_5
0x4005176	      0xe800000000	                          call 0x400517b	      4930	ops.c	FUNCTION_59	CALL_5
0x400517b	          0x4885c0	                           test rax, rax	      4931	ops.c	FUNCTION_59	IF_1
0x400517e	            0x7440	                            je 0x40051c0	      4931	ops.c	FUNCTION_59	IF_1
0x4005180	          0x4889c5	                            mov rbp, rax	      4931	ops.c	FUNCTION_59	IF_1
0x4005183	          0x4585e4	                         test r12d, r12d	      4937	ops.c	FUNCTION_59	IF_2
0x4005186	            0x743f	                            je 0x40051c7	      4937	ops.c	FUNCTION_59	IF_2
0x4005188	    0x830500000000	               add dword [0x0400518f], 1	      4938	ops.c	FUNCTION_59	IF_2
0x400518f	          0x4889c7	                            mov rdi, rax	      4939	ops.c	FUNCTION_59	CALL_6
0x4005192	      0xe800000000	                          call 0x4005197	      4939	ops.c	FUNCTION_59	CALL_6
0x4005197	            0x89c3	                            mov ebx, eax	      4939	ops.c	FUNCTION_59	CALL_6
0x4005199	    0x832d00000000	               sub dword [0x040051a0], 1	      4941	ops.c	FUNCTION_59	IF_3
0x40051a0	      0xbaffffffff	                     mov edx, 0xffffffff	      4943	ops.c	FUNCTION_59	CALL_7
0x40051a5	      0xbe00000000	                              mov esi, 0	      4943	ops.c	FUNCTION_59	CALL_7
0x40051aa	      0xbf31000000	                           mov edi, 0x31	      4943	ops.c	FUNCTION_59	CALL_7
0x40051af	      0xe800000000	                          call 0x40051b4	      4943	ops.c	FUNCTION_59	CALL_7
0x40051b4	          0x4889ef	                            mov rdi, rbp	      4944	ops.c	FUNCTION_59	CALL_8
0x40051b7	      0xe800000000	                          call 0x40051bc	      4944	ops.c	FUNCTION_59	CALL_8
0x40051bc	            0x89d8	                            mov eax, ebx	      4946	ops.c	FUNCTION_59
0x40051be	            0xeb13	                           jmp 0x40051d3	      4946	ops.c	FUNCTION_59
0x40051c0	      0xb800000000	                              mov eax, 0	      4932	ops.c	FUNCTION_59	IF_1
0x40051c5	            0xeb0c	                           jmp 0x40051d3	      4932	ops.c	FUNCTION_59	IF_1
0x40051c7	          0x4889c7	                            mov rdi, rax	      4939	ops.c	FUNCTION_59	CALL_6
0x40051ca	      0xe800000000	                          call 0x40051cf	      4939	ops.c	FUNCTION_59	CALL_6
0x40051cf	            0x89c3	                            mov ebx, eax	      4939	ops.c	FUNCTION_59	CALL_6
0x40051d1	            0xebcd	                           jmp 0x40051a0	      4939	ops.c	FUNCTION_59	CALL_6
0x40051d3	        0x4883c408	                              add rsp, 8	      4947	ops.c	FUNCTION_59
0x40051d7	              0x5b	                                 pop rbx	      4947	ops.c	FUNCTION_59
0x40051d8	              0x5d	                                 pop rbp	      4947	ops.c	FUNCTION_59
0x40051d9	            0x415c	                                 pop r12	      4947	ops.c	FUNCTION_59
0x40051db	            0x415d	                                 pop r13	      4947	ops.c	FUNCTION_59
0x40051dd	              0xc3	                                     ret	      4947	ops.c	FUNCTION_59
write_reg_contents_lst	CALL,6:ELSE,2:WHILE,0:FOR,0:functions,0:IF,5:SWITCH,0:DO,0	65
0x4006f9d	            0x4154	                                push r12	      7005	ops.c	FUNCTION_86
0x4006f9f	              0x55	                                push rbp	      7005	ops.c	FUNCTION_86
0x4006fa0	              0x53	                                push rbx	      7005	ops.c	FUNCTION_86
0x4006fa1	        0x4883ec30	                           sub rsp, 0x30	      7005	ops.c	FUNCTION_86
0x4006fa5	            0x89fb	                            mov ebx, edi	      7005	ops.c	FUNCTION_86
0x4006fa7	          0x4889f5	                            mov rbp, rsi	      7005	ops.c	FUNCTION_86
0x4006faa	      0x448944240c	              mov dword [rsp + 0xc], r8d	      7005	ops.c	FUNCTION_86
0x4006faf	          0x4d89cc	                             mov r12, r9	      7005	ops.c	FUNCTION_86
0x4006fb2	    0x64488b042528	                mov rax, qword fs:[0x28]	      7005	ops.c	FUNCTION_86
0x4006fbb	      0x4889442428	             mov qword [rsp + 0x28], rax	      7005	ops.c	FUNCTION_86
0x4006fc0	            0x31c0	                            xor eax, eax	      7005	ops.c	FUNCTION_86
0x4006fc2	          0x83ff2f	                           cmp edi, 0x2f	      7008	ops.c	FUNCTION_86	IF_1
0x4006fc5	            0x7405	                            je 0x4006fcc	      7008	ops.c	FUNCTION_86	IF_1
0x4006fc7	          0x83ff3d	                           cmp edi, 0x3d	      7008	ops.c	FUNCTION_86	IF_1
0x4006fca	            0x7549	                           jne 0x4007015	      7008	ops.c	FUNCTION_86	IF_1
0x4006fcc	        0x488b7500	                    mov rsi, qword [rbp]	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x4006fd0	          0x4885f6	                           test rsi, rsi	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x4006fd3	            0x7425	                            je 0x4006ffa	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x4006fd5	      0x48837d0800	                  cmp qword [rbp + 8], 0	      7018	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x4006fda	            0x7423	                            je 0x4006fff	      7018	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x4006fdc	      0xba05000000	                              mov edx, 5	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x4006fe1	      0xbe00000000	                              mov esi, 0	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x4006fe6	      0xbf00000000	                              mov edi, 0	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x4006feb	      0xe800000000	                          call 0x4006ff0	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x4006ff0	          0x4889c7	                            mov rdi, rax	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x4006ff3	      0xe800000000	                          call 0x4006ff8	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x4006ff8	            0xeb7d	                           jmp 0x4007077	      7022	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x4006ffa	      0xbe00000000	                              mov esi, 0	      7017	ops.c	FUNCTION_86	IF_1	IF_2
0x4006fff	          0x4d89e1	                             mov r9, r12	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x4007002	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x4007007	      0xbaffffffff	                     mov edx, 0xffffffff	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400700c	            0x89df	                            mov edi, ebx	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400700e	      0xe800000000	                          call 0x4007013	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x4007013	            0xeb62	                           jmp 0x4007077	      7027	ops.c	FUNCTION_86	IF_1
0x4007015	          0x83ff5f	                           cmp edi, 0x5f	      7030	ops.c	FUNCTION_86	IF_4
0x4007018	            0x745d	                            je 0x4007077	      7030	ops.c	FUNCTION_86	IF_4
0x400701a	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400701f	      0x488d542420	                   lea rdx, [rsp + 0x20]	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x4007024	      0x488d742418	                   lea rsi, [rsp + 0x18]	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x4007029	      0xe838b3ffff	                 call sym.init_write_reg	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400702e	            0x85c0	                           test eax, eax	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x4007030	            0x7445	                            je 0x4007077	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x4007032	    0x41b901000000	                              mov r9d, 1	      7037	ops.c	FUNCTION_86	CALL_5
0x4007038	          0x4d89e0	                             mov r8, r12	      7037	ops.c	FUNCTION_86	CALL_5
0x400703b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7037	ops.c	FUNCTION_86	CALL_5
0x4007042	          0x4889ea	                            mov rdx, rbp	      7037	ops.c	FUNCTION_86	CALL_5
0x4007045	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      7037	ops.c	FUNCTION_86	CALL_5
0x4007049	    0x488b3d000000	            mov rdi, qword [0x04007050] 	      7037	ops.c	FUNCTION_86	CALL_5
0x4007050	      0xe8c999ffff	                     call sym.str_to_reg	      7037	ops.c	FUNCTION_86	CALL_5
0x4007055	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      7039	ops.c	FUNCTION_86	CALL_6
0x400705a	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      7039	ops.c	FUNCTION_86	CALL_6
0x400705f	      0xe86296ffff	              call sym.may_set_selection	      6969	ops.c	FUNCTION_84	CALL_1
0x4007064	          0x83fb22	                           cmp ebx, 0x22	      6973	ops.c	FUNCTION_84	IF_1
0x4007067	            0x7407	                            je 0x4007070	      6973	ops.c	FUNCTION_84	IF_1
0x4007069	    0x4c8925000000	            mov qword [0x04007070], r12 	      6974	ops.c	FUNCTION_84	IF_1
0x4007070	    0x48892d000000	            mov qword [0x04007077], rbp 	      6975	ops.c	FUNCTION_84
0x4007077	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7040	ops.c	FUNCTION_86
0x400707c	    0x644833042528	                xor rax, qword fs:[0x28]	      7040	ops.c	FUNCTION_86
0x4007085	            0x7405	                            je 0x400708c	      7040	ops.c	FUNCTION_86
0x4007087	      0xe800000000	                          call 0x400708c	      7040	ops.c	FUNCTION_86
0x400708c	        0x4883c430	                           add rsp, 0x30	      7040	ops.c	FUNCTION_86
0x4007090	              0x5b	                                 pop rbx	      7040	ops.c	FUNCTION_86
0x4007091	              0x5d	                                 pop rbp	      7040	ops.c	FUNCTION_86
0x4007092	            0x415c	                                 pop r12	      7040	ops.c	FUNCTION_86
0x4007094	              0xc3	                                     ret	      7040	ops.c	FUNCTION_86
get_reg_contents	CALL,18:ELSE,0:WHILE,0:FOR,3:functions,0:IF,16:SWITCH,0:DO,0	184
0x400ae91	            0x4155	                                push r13	      6838	ops.c	FUNCTION_82
0x400ae93	            0x4154	                                push r12	      6838	ops.c	FUNCTION_82
0x400ae95	              0x55	                                push rbp	      6838	ops.c	FUNCTION_82
0x400ae96	              0x53	                                push rbx	      6838	ops.c	FUNCTION_82
0x400ae97	        0x4883ec28	                           sub rsp, 0x28	      6838	ops.c	FUNCTION_82
0x400ae9b	            0x89f5	                            mov ebp, esi	      6838	ops.c	FUNCTION_82
0x400ae9d	    0x64488b042528	                mov rax, qword fs:[0x28]	      6838	ops.c	FUNCTION_82
0x400aea6	      0x4889442418	             mov qword [rsp + 0x18], rax	      6838	ops.c	FUNCTION_82
0x400aeab	            0x31c0	                            xor eax, eax	      6838	ops.c	FUNCTION_82
0x400aead	          0x83ff3d	                           cmp edi, 0x3d	      6845	ops.c	FUNCTION_82	IF_1
0x400aeb0	            0x7538	                           jne 0x400aeea	      6845	ops.c	FUNCTION_82	IF_1
0x400aeb2	        0x40f6c601	                             test sil, 1	      6847	ops.c	FUNCTION_82	IF_1	IF_2
0x400aeb6	     0xf855d020000	                           jne 0x400b119	      6847	ops.c	FUNCTION_82	IF_1	IF_2
0x400aebc	        0x40f6c602	                             test sil, 2	      6849	ops.c	FUNCTION_82	IF_1	IF_3
0x400aec0	            0x7414	                            je 0x400aed6	      6849	ops.c	FUNCTION_82	IF_1	IF_3
0x400aec2	      0xe800000000	                          call 0x400aec7	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400aec7	            0x89ee	                            mov esi, ebp	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400aec9	          0x4889c7	                            mov rdi, rax	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400aecc	      0xe8ec6dffff	           call sym.getreg_wrap_one_line	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400aed1	      0xe962020000	                           jmp 0x400b138	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400aed6	      0xe800000000	                          call 0x400aedb	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400aedb	            0x89ee	                            mov esi, ebp	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400aedd	          0x4889c7	                            mov rdi, rax	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400aee0	      0xe8d86dffff	           call sym.getreg_wrap_one_line	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400aee5	      0xe94e020000	                           jmp 0x400b138	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400aeea	            0x89fb	                            mov ebx, edi	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400aeec	          0x83ff40	                           cmp edi, 0x40	      6854	ops.c	FUNCTION_82	IF_4
0x400aeef	            0x7406	                            je 0x400aef7	      6854	ops.c	FUNCTION_82	IF_4
0x400aef1	            0x85ff	                           test edi, edi	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400aef3	            0x741b	                            je 0x400af10	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400aef5	            0xeb05	                           jmp 0x400aefc	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400aef7	      0xbb22000000	                           mov ebx, 0x22	      6855	ops.c	FUNCTION_82	IF_4
0x400aefc	      0xbe00000000	                              mov esi, 0	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400af01	            0x89df	                            mov edi, ebx	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400af03	      0xe800000000	                          call 0x400af08	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400af08	            0x85c0	                           test eax, eax	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400af0a	     0xf8410020000	                            je 0x400b120	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400af10	            0x89df	                            mov edi, ebx	      6862	ops.c	FUNCTION_82	CALL_6
0x400af12	      0xe800000000	                          call 0x400af17	      6862	ops.c	FUNCTION_82	CALL_6
0x400af17	            0x89c3	                            mov ebx, eax	      6862	ops.c	FUNCTION_82	CALL_6
0x400af19	      0xb900000000	                              mov ecx, 0	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400af1e	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400af23	      0x488d742410	                   lea rsi, [rsp + 0x10]	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400af28	            0x89c7	                            mov edi, eax	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400af2a	      0xe800000000	                          call 0x400af2f	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400af2f	            0x85c0	                           test eax, eax	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400af31	            0x743b	                            je 0x400af6e	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400af33	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400af38	          0x4885c0	                           test rax, rax	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400af3b	     0xf84f7010000	                            je 0x400b138	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400af41	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      6869	ops.c	FUNCTION_82	IF_6	IF_8
0x400af46	            0x740f	                            je 0x400af57	      6869	ops.c	FUNCTION_82	IF_6	IF_8
0x400af48	            0x89ee	                            mov esi, ebp	      6870	ops.c	FUNCTION_82	IF_6	CALL_8
0x400af4a	          0x4889c7	                            mov rdi, rax	      6870	ops.c	FUNCTION_82	IF_6	CALL_8
0x400af4d	      0xe86b6dffff	           call sym.getreg_wrap_one_line	      6870	ops.c	FUNCTION_82	IF_6	CALL_8
0x400af52	      0xe9e1010000	                           jmp 0x400b138	      6870	ops.c	FUNCTION_82	IF_6	CALL_8
0x400af57	          0x4889c7	                            mov rdi, rax	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400af5a	      0xe800000000	                          call 0x400af5f	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400af5f	            0x89ee	                            mov esi, ebp	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400af61	          0x4889c7	                            mov rdi, rax	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400af64	      0xe8546dffff	           call sym.getreg_wrap_one_line	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400af69	      0xe9ca010000	                           jmp 0x400b138	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400af6e	      0xbe00000000	                              mov esi, 0	      6874	ops.c	FUNCTION_82	CALL_11
0x400af73	            0x89df	                            mov edi, ebx	      6874	ops.c	FUNCTION_82	CALL_11
0x400af75	      0xe800000000	                          call 0x400af7a	      6874	ops.c	FUNCTION_82	CALL_11
0x400af7a	    0x488b05000000	            mov rax, qword [0x0400af81] 	      6875	ops.c	FUNCTION_82	IF_9
0x400af81	          0x4c8b08	                     mov r9, qword [rax]	      6875	ops.c	FUNCTION_82	IF_9
0x400af84	          0x4d85c9	                             test r9, r9	      6875	ops.c	FUNCTION_82	IF_9
0x400af87	     0xf849a010000	                            je 0x400b127	      6875	ops.c	FUNCTION_82	IF_9
0x400af8d	        0x40f6c504	                             test bpl, 4	      6878	ops.c	FUNCTION_82	IF_10
0x400af91	            0x7514	                           jne 0x400afa7	      6878	ops.c	FUNCTION_82	IF_10
0x400af93	        0x4c8b4008	                 mov r8, qword [rax + 8]	      6900	ops.c	FUNCTION_82	FOR_2
0x400af97	      0xbe00000000	                              mov esi, 0	      6900	ops.c	FUNCTION_82	FOR_2
0x400af9c	          0x4d85c0	                             test r8, r8	      6900	ops.c	FUNCTION_82	FOR_2
0x400af9f	     0xf8ec5000000	                           jle 0x400b06a	      6900	ops.c	FUNCTION_82	FOR_2
0x400afa5	            0xeb7b	                           jmp 0x400b022	      6900	ops.c	FUNCTION_82	FOR_2
0x400afa7	      0xe800000000	                          call 0x400afac	      6880	ops.c	FUNCTION_82	IF_10	CALL_12
0x400afac	          0x4989c4	                            mov r12, rax	      6880	ops.c	FUNCTION_82	IF_10	CALL_12
0x400afaf	          0x4885c0	                           test rax, rax	      6883	ops.c	FUNCTION_82	IF_10	IF_11
0x400afb2	     0xf8476010000	                            je 0x400b12e	      6883	ops.c	FUNCTION_82	IF_10	IF_11
0x400afb8	    0x488b05000000	            mov rax, qword [0x0400afbf] 	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400afbf	      0x4883780800	                  cmp qword [rax + 8], 0	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400afc4	     0xf8e6b010000	                           jle 0x400b135	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400afca	      0xbd00000000	                              mov ebp, 0	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400afcf	      0xbb00000000	                              mov ebx, 0	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400afd4	    0x41bd01000000	                             mov r13d, 1	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400afda	          0x488b00	                    mov rax, qword [rax]	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400afdd	        0x488b34d8	            mov rsi, qword [rax + rbx*8]	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400afe1	      0xbaffffffff	                     mov edx, 0xffffffff	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400afe6	          0x4c89e7	                            mov rdi, r12	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400afe9	      0xe800000000	                          call 0x400afee	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400afee	            0x85c0	                           test eax, eax	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400aff0	        0x410f44ed	                         cmove ebp, r13d	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400aff4	        0x4883c301	                              add rbx, 1	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400aff8	    0x488b05000000	            mov rax, qword [0x0400afff] 	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400afff	        0x48395808	                cmp qword [rax + 8], rbx	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400b003	            0x7fd5	                            jg 0x400afda	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400b005	          0x4c89e0	                            mov rax, r12	      6893	ops.c	FUNCTION_82	IF_10
0x400b008	            0x85ed	                           test ebp, ebp	      6888	ops.c	FUNCTION_82	IF_10	IF_13
0x400b00a	     0xf8428010000	                            je 0x400b138	      6888	ops.c	FUNCTION_82	IF_10	IF_13
0x400b010	          0x4c89e7	                            mov rdi, r12	      6890	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400b013	      0xe800000000	                          call 0x400b018	      6890	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400b018	      0xb800000000	                              mov eax, 0	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400b01d	      0xe916010000	                           jmp 0x400b138	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400b022	      0x440fb65810	          movzx r11d, byte [rax + 0x10] 	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400b027	      0xbe00000000	                              mov esi, 0	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400b02c	      0xba00000000	                              mov edx, 0	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400b031	    0x49c7c2ffffff	             mov r10, 0xffffffffffffffff	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400b038	      0xb800000000	                              mov eax, 0	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400b03d	        0x4b8d1c10	                     lea rbx, [r8 + r10]	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400b041	        0x498b3cd1	             mov rdi, qword [r9 + rdx*8]	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400b045	          0x4c89d1	                            mov rcx, r10	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400b048	            0xf2ae	              repne scasb al, byte [rdi]	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400b04a	          0x48f7d1	                                 not rcx	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400b04d	      0x488d740eff	                lea rsi, [rsi + rcx - 1]	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400b052	        0x4180fb01	                             cmp r11b, 1	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400b056	            0x7405	                            je 0x400b05d	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400b058	          0x4839d3	                            cmp rbx, rdx	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400b05b	            0x7e04	                           jle 0x400b061	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400b05d	        0x4883c601	                              add rsi, 1	      6908	ops.c	FUNCTION_82	FOR_2	IF_14
0x400b061	        0x4883c201	                              add rdx, 1	      6900	ops.c	FUNCTION_82	FOR_2
0x400b065	          0x4c39c2	                             cmp rdx, r8	      6900	ops.c	FUNCTION_82	FOR_2
0x400b068	            0x75d7	                           jne 0x400b041	      6900	ops.c	FUNCTION_82	FOR_2
0x400b06a	        0x488d7e01	                      lea rdi, [rsi + 1]	      6911	ops.c	FUNCTION_82	CALL_16
0x400b06e	      0xbe01000000	                              mov esi, 1	      6911	ops.c	FUNCTION_82	CALL_16
0x400b073	      0xe800000000	                          call 0x400b078	      6911	ops.c	FUNCTION_82	CALL_16
0x400b078	      0x4889442410	             mov qword [rsp + 0x10], rax	      6911	ops.c	FUNCTION_82	CALL_16
0x400b07d	          0x4885c0	                           test rax, rax	      6916	ops.c	FUNCTION_82	IF_15
0x400b080	     0xf848c000000	                            je 0x400b112	      6916	ops.c	FUNCTION_82	IF_15
0x400b086	    0x4c8b25000000	            mov r12, qword [0x0400b08d] 	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400b08d	    0x49837c240800	                  cmp qword [r12 + 8], 0	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400b093	            0x7e6f	                           jle 0x400b104	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400b095	      0xbb00000000	                              mov ebx, 0	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400b09a	      0xbd00000000	                              mov ebp, 0	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400b09f	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400b0a6	        0x498b0424	                    mov rax, qword [r12]	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400b0aa	        0x488b34e8	            mov rsi, qword [rax + rbp*8]	       110	string3.h	FUNCTION_98	CALL_3
0x400b0ae	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_98	CALL_3
0x400b0b1	      0x48037c2410	             add rdi, qword [rsp + 0x10]	       110	string3.h	FUNCTION_98	CALL_3
0x400b0b6	      0xe800000000	                          call 0x400b0bb	       110	string3.h	FUNCTION_98	CALL_3
0x400b0bb	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400b0c0	        0x488d3c1a	                    lea rdi, [rdx + rbx]	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400b0c4	      0xb800000000	                              mov eax, 0	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400b0c9	          0x4c89e9	                            mov rcx, r13	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400b0cc	            0xf2ae	              repne scasb al, byte [rdi]	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400b0ce	          0x4889c8	                            mov rax, rcx	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400b0d1	          0x48f7d0	                                 not rax	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400b0d4	      0x488d5c03ff	                lea rbx, [rbx + rax - 1]	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400b0d9	    0x41807c241001	                cmp byte [r12 + 0x10], 1	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400b0df	            0x740e	                            je 0x400b0ef	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400b0e1	      0x498b442408	                mov rax, qword [r12 + 8]	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400b0e6	        0x4883e801	                              sub rax, 1	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400b0ea	          0x4839e8	                            cmp rax, rbp	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400b0ed	            0x7e08	                           jle 0x400b0f7	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400b0ef	        0xc6041a0a	               mov byte [rdx + rbx], 0xa	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400b0f3	        0x488d5b01	                      lea rbx, [rbx + 1]	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400b0f7	        0x4883c501	                              add rbp, 1	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400b0fb	      0x49396c2408	                cmp qword [r12 + 8], rbp	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400b100	            0x7fa4	                            jg 0x400b0a6	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400b102	            0xeb05	                           jmp 0x400b109	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400b104	      0xbb00000000	                              mov ebx, 0	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400b109	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6931	ops.c	FUNCTION_82	IF_15
0x400b10e	        0xc6041800	                 mov byte [rax + rbx], 0	      6931	ops.c	FUNCTION_82	IF_15
0x400b112	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6934	ops.c	FUNCTION_82
0x400b117	            0xeb1f	                           jmp 0x400b138	      6934	ops.c	FUNCTION_82
0x400b119	      0xb800000000	                              mov eax, 0	      6848	ops.c	FUNCTION_82	IF_1	IF_2
0x400b11e	            0xeb18	                           jmp 0x400b138	      6848	ops.c	FUNCTION_82	IF_1	IF_2
0x400b120	      0xb800000000	                              mov eax, 0	      6859	ops.c	FUNCTION_82	IF_5
0x400b125	            0xeb11	                           jmp 0x400b138	      6859	ops.c	FUNCTION_82	IF_5
0x400b127	      0xb800000000	                              mov eax, 0	      6876	ops.c	FUNCTION_82	IF_9
0x400b12c	            0xeb0a	                           jmp 0x400b138	      6876	ops.c	FUNCTION_82	IF_9
0x400b12e	      0xb800000000	                              mov eax, 0	      6884	ops.c	FUNCTION_82	IF_10	IF_11
0x400b133	            0xeb03	                           jmp 0x400b138	      6884	ops.c	FUNCTION_82	IF_10	IF_11
0x400b135	          0x4c89e0	                            mov rax, r12	      6893	ops.c	FUNCTION_82	IF_10
0x400b138	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      6935	ops.c	FUNCTION_82
0x400b13d	    0x644833142528	                xor rdx, qword fs:[0x28]	      6935	ops.c	FUNCTION_82
0x400b146	            0x7405	                            je 0x400b14d	      6935	ops.c	FUNCTION_82
0x400b148	      0xe800000000	                          call 0x400b14d	      6935	ops.c	FUNCTION_82
0x400b14d	        0x4883c428	                           add rsp, 0x28	      6935	ops.c	FUNCTION_82
0x400b151	              0x5b	                                 pop rbx	      6935	ops.c	FUNCTION_82
0x400b152	              0x5d	                                 pop rbp	      6935	ops.c	FUNCTION_82
0x400b153	            0x415c	                                 pop r12	      6935	ops.c	FUNCTION_82
0x400b155	            0x415d	                                 pop r13	      6935	ops.c	FUNCTION_82
0x400b157	              0xc3	                                     ret	      6935	ops.c	FUNCTION_82
finish_viminfo_registers	CALL,3:ELSE,0:WHILE,0:FOR,2:functions,0:IF,2:SWITCH,0:DO,0	37
0x4005ebc	    0x48833d000000	               cmp qword [0x04005ec4], 0	      6071	ops.c	FUNCTION_69	IF_1
0x4005ec4	     0xf8483000000	                            je 0x4005f4d	      6071	ops.c	FUNCTION_69	IF_1
0x4005eca	              0x55	                                push rbp	      6067	ops.c	FUNCTION_69
0x4005ecb	              0x53	                                push rbx	      6067	ops.c	FUNCTION_69
0x4005ecc	        0x4883ec08	                              sub rsp, 8	      6067	ops.c	FUNCTION_69
0x4005ed0	      0xbd00000000	                              mov ebp, 0	      6067	ops.c	FUNCTION_69
0x4005ed5	          0x4889e8	                            mov rax, rbp	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005ed8	    0x480305000000	             add rax, qword [0x04005edf]	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005edf	        0x48833800	                      cmp qword [rax], 0	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005ee3	            0x7439	                            je 0x4005f1e	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005ee5	      0x4883780800	                  cmp qword [rax + 8], 0	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4005eea	            0x7e2a	                           jle 0x4005f16	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4005eec	      0xbb00000000	                              mov ebx, 0	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4005ef1	          0x4863d3	                         movsxd rdx, ebx	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x4005ef4	          0x488b00	                    mov rax, qword [rax]	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x4005ef7	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x4005efb	      0xe800000000	                          call 0x4005f00	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x4005f00	          0x83c301	                              add ebx, 1	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4005f03	          0x4889e8	                            mov rax, rbp	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4005f06	    0x480305000000	             add rax, qword [0x04005f0d]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4005f0d	          0x4863d3	                         movsxd rdx, ebx	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4005f10	        0x483b5008	                cmp rdx, qword [rax + 8]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4005f14	            0x7cdb	                            jl 0x4005ef1	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4005f16	          0x488b38	                    mov rdi, qword [rax]	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x4005f19	      0xe800000000	                          call 0x4005f1e	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x4005f1e	        0x4883c520	                           add rbp, 0x20	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x4005f22	    0x4881fd000500	                          cmp rbp, 0x500	      6073	ops.c	FUNCTION_69	IF_1	FOR_1
0x4005f29	            0x75aa	                           jne 0x4005ed5	      6073	ops.c	FUNCTION_69	IF_1	FOR_1
0x4005f2b	    0x488b3d000000	            mov rdi, qword [0x04005f32] 	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4005f32	          0x4885ff	                           test rdi, rdi	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4005f35	            0x7410	                            je 0x4005f47	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4005f37	      0xe800000000	                          call 0x4005f3c	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4005f3c	    0x48c705000000	               mov qword [0x04005f47], 0	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4005f47	        0x4883c408	                              add rsp, 8	      6082	ops.c	FUNCTION_69
0x4005f4b	              0x5b	                                 pop rbx	      6082	ops.c	FUNCTION_69
0x4005f4c	              0x5d	                                 pop rbp	      6082	ops.c	FUNCTION_69
0x4005f4d	            0xf3c3	                                     ret	      6082	ops.c	FUNCTION_69
prepare_viminfo_registers	CALL,1:ELSE,0:WHILE,0:FOR,0:functions,0:IF,0:SWITCH,0:DO,0	6
0x4005ea2	        0x4883ec08	                              sub rsp, 8	      6060	ops.c	FUNCTION_68
0x4005ea6	      0xbf00050000	                          mov edi, 0x500	      6061	ops.c	FUNCTION_68	CALL_1
0x4005eab	      0xe800000000	                          call 0x4005eb0	      6061	ops.c	FUNCTION_68	CALL_1
0x4005eb0	    0x488905000000	            mov qword [0x04005eb7], rax 	      6061	ops.c	FUNCTION_68	CALL_1
0x4005eb7	        0x4883c408	                              add rsp, 8	      6063	ops.c	FUNCTION_68
0x4005ebb	              0xc3	                                     ret	      6063	ops.c	FUNCTION_68
do_addsub	CALL,47:ELSE,15:WHILE,8:FOR,2:functions,0:IF,53:SWITCH,0:DO,0	786
0x40010f4	            0x4157	                                push r15	      5627	ops.c	FUNCTION_67
0x40010f6	            0x4156	                                push r14	      5627	ops.c	FUNCTION_67
0x40010f8	            0x4155	                                push r13	      5627	ops.c	FUNCTION_67
0x40010fa	            0x4154	                                push r12	      5627	ops.c	FUNCTION_67
0x40010fc	              0x55	                                push rbp	      5627	ops.c	FUNCTION_67
0x40010fd	              0x53	                                push rbx	      5627	ops.c	FUNCTION_67
0x40010fe	    0x4881ecb80000	                           sub rsp, 0xb8	      5627	ops.c	FUNCTION_67
0x4001105	        0x897c2428	             mov dword [rsp + 0x28], edi	      5627	ops.c	FUNCTION_67
0x4001109	          0x4989f7	                            mov r15, rsi	      5627	ops.c	FUNCTION_67
0x400110c	        0x8954244c	             mov dword [rsp + 0x4c], edx	      5627	ops.c	FUNCTION_67
0x4001110	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      5627	ops.c	FUNCTION_67
0x4001115	    0x64488b042528	                mov rax, qword fs:[0x28]	      5627	ops.c	FUNCTION_67
0x400111e	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      5627	ops.c	FUNCTION_67
0x4001126	            0x31c0	                            xor eax, eax	      5627	ops.c	FUNCTION_67
0x4001128	    0x8b0500000000	            mov eax, dword [0x0400112e] 	      5646	ops.c	FUNCTION_67
0x400112e	        0x8944240c	              mov dword [rsp + 0xc], eax	      5646	ops.c	FUNCTION_67
0x4001132	    0x488b05000000	            mov rax, qword [0x04001139] 	      5648	ops.c	FUNCTION_67
0x4001139	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5648	ops.c	FUNCTION_67
0x400113d	      0x4889542418	             mov qword [rsp + 0x18], rdx	      5648	ops.c	FUNCTION_67
0x4001142	          0x8b5040	            mov edx, dword [rax + 0x40] 	      5648	ops.c	FUNCTION_67
0x4001145	        0x89542420	             mov dword [rsp + 0x20], edx	      5648	ops.c	FUNCTION_67
0x4001149	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5648	ops.c	FUNCTION_67
0x400114c	        0x89442424	             mov dword [rsp + 0x24], eax	      5648	ops.c	FUNCTION_67
0x4001150	    0x488b05000000	            mov rax, qword [0x04001157] 	      5653	ops.c	FUNCTION_67	CALL_1
0x4001157	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5653	ops.c	FUNCTION_67	CALL_1
0x400115e	      0xbe78000000	                           mov esi, 0x78	      5653	ops.c	FUNCTION_67	CALL_1
0x4001163	      0xe800000000	                          call 0x4001168	      5653	ops.c	FUNCTION_67	CALL_1
0x4001168	      0x4889442410	             mov qword [rsp + 0x10], rax	      5653	ops.c	FUNCTION_67	CALL_1
0x400116d	    0x488b05000000	            mov rax, qword [0x04001174] 	      5654	ops.c	FUNCTION_67	CALL_2
0x4001174	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5654	ops.c	FUNCTION_67	CALL_2
0x400117b	      0xbe6f000000	                           mov esi, 0x6f	      5654	ops.c	FUNCTION_67	CALL_2
0x4001180	      0xe800000000	                          call 0x4001185	      5654	ops.c	FUNCTION_67	CALL_2
0x4001185	      0x4889442440	             mov qword [rsp + 0x40], rax	      5654	ops.c	FUNCTION_67	CALL_2
0x400118a	    0x488b05000000	            mov rax, qword [0x04001191] 	      5655	ops.c	FUNCTION_67	CALL_3
0x4001191	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5655	ops.c	FUNCTION_67	CALL_3
0x4001198	      0xbe62000000	                           mov esi, 0x62	      5655	ops.c	FUNCTION_67	CALL_3
0x400119d	      0xe800000000	                          call 0x40011a2	      5655	ops.c	FUNCTION_67	CALL_3
0x40011a2	          0x4989c6	                            mov r14, rax	      5655	ops.c	FUNCTION_67	CALL_3
0x40011a5	      0x4889442438	             mov qword [rsp + 0x38], rax	      5655	ops.c	FUNCTION_67	CALL_3
0x40011aa	    0x488b05000000	            mov rax, qword [0x040011b1] 	      5656	ops.c	FUNCTION_67	CALL_4
0x40011b1	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5656	ops.c	FUNCTION_67	CALL_4
0x40011b8	      0xbe70000000	                           mov esi, 0x70	      5656	ops.c	FUNCTION_67	CALL_4
0x40011bd	      0xe800000000	                          call 0x40011c2	      5656	ops.c	FUNCTION_67	CALL_4
0x40011c2	          0x4989c4	                            mov r12, rax	      5656	ops.c	FUNCTION_67	CALL_4
0x40011c5	          0x498b0f	                    mov rcx, qword [r15]	      5658	ops.c	FUNCTION_67
0x40011c8	        0x498b5f08	                mov rbx, qword [r15 + 8]	      5658	ops.c	FUNCTION_67
0x40011cc	    0x488b05000000	            mov rax, qword [0x040011d3] 	      5658	ops.c	FUNCTION_67
0x40011d3	        0x48894838	             mov qword [rax + 0x38], rcx	      5658	ops.c	FUNCTION_67
0x40011d7	        0x48895840	             mov qword [rax + 0x40], rbx	      5658	ops.c	FUNCTION_67
0x40011db	          0x498b3f	                    mov rdi, qword [r15]	      5659	ops.c	FUNCTION_67	CALL_5
0x40011de	      0xe800000000	                          call 0x40011e3	      5659	ops.c	FUNCTION_67	CALL_5
0x40011e3	          0x803800	                       cmp byte [rax], 0	      5662	ops.c	FUNCTION_67	IF_1
0x40011e6	     0xf84700a0000	                            je 0x4001c5c	      5662	ops.c	FUNCTION_67	IF_1
0x40011ec	          0x4889c5	                            mov rbp, rax	      5662	ops.c	FUNCTION_67	IF_1
0x40011ef	          0x4d85f6	                           test r14, r14	      5655	ops.c	FUNCTION_67	CALL_3
0x40011f2	       0xf9544244a	                 setne byte [rsp + 0x4a]	      5655	ops.c	FUNCTION_67	CALL_3
0x40011f7	        0x418b5f08	                mov ebx, dword [r15 + 8]	      5660	ops.c	FUNCTION_67
0x40011fb	    0x833d00000000	               cmp dword [0x04001202], 0	      5668	ops.c	FUNCTION_67	IF_2
0x4001202	     0xf85a1020000	                           jne 0x40014a9	      5668	ops.c	FUNCTION_67	IF_2
0x4001208	          0x4d85f6	                           test r14, r14	      5670	ops.c	FUNCTION_67	IF_2	IF_3
0x400120b	            0x751f	                           jne 0x400122c	      5670	ops.c	FUNCTION_67	IF_2	IF_3
0x400120d	            0xeb38	                           jmp 0x4001247	      5670	ops.c	FUNCTION_67	IF_2	IF_3
0x400120f	          0x83eb01	                              sub ebx, 1	      5673	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1
0x4001212	    0x833d00000000	               cmp dword [0x04001219], 0	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4001219	            0x7417	                            je 0x4001232	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400121b	          0x4863f3	                         movsxd rsi, ebx	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400121e	          0x4801ee	                            add rsi, rbp	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4001221	          0x4889ef	                            mov rdi, rbp	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4001224	    0xff1500000000	                 call qword [0x0400122a]	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400122a	            0x29c3	                            sub ebx, eax	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400122c	            0x85db	                           test ebx, ebx	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400122e	            0x7f06	                            jg 0x4001236	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001230	            0xeb15	                           jmp 0x4001247	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001232	            0x85db	                           test ebx, ebx	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001234	            0x7411	                            je 0x4001247	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001236	          0x4863c3	                         movsxd rax, ebx	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001239	       0xfb67c0500	             movzx edi, byte [rbp + rax]	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400123e	      0xe800000000	                          call 0x4001243	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001243	            0x85c0	                           test eax, eax	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001245	            0x75c8	                           jne 0x400120f	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4001247	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5653	ops.c	FUNCTION_67	CALL_1
0x400124c	          0x4885c0	                           test rax, rax	      5653	ops.c	FUNCTION_67	CALL_1
0x400124f	       0xf9544244b	                 setne byte [rsp + 0x4b]	      5653	ops.c	FUNCTION_67	CALL_1
0x4001254	            0x7522	                           jne 0x4001278	      5680	ops.c	FUNCTION_67	IF_2	IF_5
0x4001256	      0xe9210a0000	                           jmp 0x4001c7c	      5680	ops.c	FUNCTION_67	IF_2	IF_5
0x400125b	          0x83eb01	                              sub ebx, 1	      5683	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2
0x400125e	    0x833d00000000	               cmp dword [0x04001265], 0	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4001265	            0x741a	                            je 0x4001281	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4001267	          0x4863f3	                         movsxd rsi, ebx	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400126a	          0x4801ee	                            add rsi, rbp	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400126d	          0x4889ef	                            mov rdi, rbp	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4001270	    0xff1500000000	                 call qword [0x04001276]	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4001276	            0x29c3	                            sub ebx, eax	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4001278	            0x85db	                           test ebx, ebx	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400127a	            0x7f0d	                            jg 0x4001289	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400127c	      0xe940090000	                           jmp 0x4001bc1	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4001281	            0x85db	                           test ebx, ebx	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4001283	     0xf8438090000	                            je 0x4001bc1	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4001289	          0x4c63f3	                         movsxd r14, ebx	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400128c	      0x4e8d6c3500	                    lea r13, [rbp + r14]	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4001291	      0x410fb67d00	                   movzx edi, byte [r13]	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4001296	      0xe800000000	                          call 0x400129b	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400129b	            0x85c0	                           test eax, eax	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400129d	            0x75bc	                           jne 0x400125b	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400129f	    0x48837c243800	               cmp qword [rsp + 0x38], 0	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x40012a5	     0xf84dc090000	                            je 0x4001c87	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x40012ab	            0x85db	                           test ebx, ebx	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x40012ad	            0x7e3f	                           jle 0x40012ee	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x40012af	      0x410fb64500	                   movzx eax, byte [r13]	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x40012b4	          0x83e0df	                     and eax, 0xffffffdf	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x40012b7	            0x3c58	                            cmp al, 0x58	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x40012b9	            0x7533	                           jne 0x40012ee	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x40012bb	      0x4a8d7435ff	                lea rsi, [rbp + r14 - 1]	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x40012c0	          0x803e30	                    cmp byte [rsi], 0x30	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x40012c3	            0x7529	                           jne 0x40012ee	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x40012c5	    0x833d00000000	               cmp dword [0x040012cc], 0	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x40012cc	            0x740d	                            je 0x40012db	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x40012ce	          0x4889ef	                            mov rdi, rbp	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x40012d1	    0xff1500000000	                 call qword [0x040012d7]	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x40012d7	            0x85c0	                           test eax, eax	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x40012d9	            0x7513	                           jne 0x40012ee	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x40012db	    0x420fb67c3501	        movzx edi, byte [rbp + r14 + 1] 	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x40012e1	      0xe800000000	                          call 0x40012e6	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x40012e6	            0x85c0	                           test eax, eax	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x40012e8	     0xf8583090000	                           jne 0x4001c71	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x40012ee	        0x418b5f08	                mov ebx, dword [r15 + 8]	      5705	ops.c	FUNCTION_67	IF_2	IF_7
0x40012f2	            0xeb1d	                           jmp 0x4001311	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x40012f4	          0x83eb01	                              sub ebx, 1	      5709	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3
0x40012f7	    0x833d00000000	               cmp dword [0x040012fe], 0	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x40012fe	            0x741a	                            je 0x400131a	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001300	          0x4863f3	                         movsxd rsi, ebx	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001303	          0x4801ee	                            add rsi, rbp	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001306	          0x4889ef	                            mov rdi, rbp	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001309	    0xff1500000000	                 call qword [0x0400130f]	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400130f	            0x29c3	                            sub ebx, eax	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001311	            0x85db	                           test ebx, ebx	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001313	            0x7f0d	                            jg 0x4001322	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001315	      0xe9b8080000	                           jmp 0x4001bd2	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400131a	            0x85db	                           test ebx, ebx	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400131c	     0xf84b0080000	                            je 0x4001bd2	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001322	          0x4863c3	                         movsxd rax, ebx	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001325	       0xfb67c0500	             movzx edi, byte [rbp + rax]	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400132a	      0xe800000000	                          call 0x400132f	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400132f	            0x85c0	                           test eax, eax	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001331	            0x75c1	                           jne 0x40012f4	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4001333	            0x85db	                           test ebx, ebx	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001335	        0x410f9fc5	                               setg r13b	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001339	      0x807c244b00	                cmp byte [rsp + 0x4b], 0	      5717	ops.c	FUNCTION_67	IF_2	IF_9
0x400133e	            0x7448	                            je 0x4001388	      5717	ops.c	FUNCTION_67	IF_2	IF_9
0x4001340	          0x4584ed	                         test r13b, r13b	      5717	ops.c	FUNCTION_67	IF_2	IF_9
0x4001343	            0x7443	                            je 0x4001388	      5717	ops.c	FUNCTION_67	IF_2	IF_9
0x4001345	          0x4c63f3	                         movsxd r14, ebx	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x4001348	    0x420fb6443500	             movzx eax, byte [rbp + r14]	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x400134e	          0x83e0df	                     and eax, 0xffffffdf	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x4001351	            0x3c58	                            cmp al, 0x58	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x4001353	            0x7533	                           jne 0x4001388	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x4001355	      0x4a8d7435ff	                lea rsi, [rbp + r14 - 1]	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x400135a	          0x803e30	                    cmp byte [rsi], 0x30	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x400135d	     0xf8596000000	                           jne 0x40013f9	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x4001363	    0x833d00000000	               cmp dword [0x0400136a], 0	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x400136a	            0x740d	                            je 0x4001379	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x400136c	          0x4889ef	                            mov rdi, rbp	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400136f	    0xff1500000000	                 call qword [0x04001375]	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x4001375	            0x85c0	                           test eax, eax	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x4001377	            0x750f	                           jne 0x4001388	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x4001379	    0x420fb67c3501	        movzx edi, byte [rbp + r14 + 1] 	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400137f	      0xe800000000	                          call 0x4001384	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001384	            0x85c0	                           test eax, eax	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001386	            0x754b	                           jne 0x40013d3	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001388	      0x807c244a00	                cmp byte [rsp + 0x4a], 0	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400138d	            0x746a	                            je 0x40013f9	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400138f	          0x4584ed	                         test r13b, r13b	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001392	            0x7465	                            je 0x40013f9	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001394	          0x4c63eb	                         movsxd r13, ebx	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x4001397	    0x420fb6442d00	             movzx eax, byte [rbp + r13]	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x400139d	          0x83e0df	                     and eax, 0xffffffdf	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x40013a0	            0x3c42	                            cmp al, 0x42	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x40013a2	            0x7555	                           jne 0x40013f9	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x40013a4	      0x4a8d742dff	                lea rsi, [rbp + r13 - 1]	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x40013a9	          0x803e30	                    cmp byte [rsi], 0x30	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x40013ac	            0x754b	                           jne 0x40013f9	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x40013ae	    0x833d00000000	               cmp dword [0x040013b5], 0	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x40013b5	            0x740d	                            je 0x40013c4	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x40013b7	          0x4889ef	                            mov rdi, rbp	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x40013ba	    0xff1500000000	                 call qword [0x040013c0]	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x40013c0	            0x85c0	                           test eax, eax	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x40013c2	            0x7535	                           jne 0x40013f9	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x40013c4	    0x420fb67c2d01	        movzx edi, byte [rbp + r13 + 1] 	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x40013ca	      0xe800000000	                          call 0x40013cf	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x40013cf	            0x85c0	                           test eax, eax	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x40013d1	            0x7426	                            je 0x40013f9	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x40013d3	          0x83eb01	                              sub ebx, 1	      5739	ops.c	FUNCTION_67	IF_2	IF_9
0x40013d6	    0x833d00000000	               cmp dword [0x040013dd], 0	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x40013dd	     0xf84c6000000	                            je 0x40014a9	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x40013e3	          0x4863f3	                         movsxd rsi, ebx	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x40013e6	          0x4801ee	                            add rsi, rbp	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x40013e9	          0x4889ef	                            mov rdi, rbp	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x40013ec	    0xff1500000000	                 call qword [0x040013f2]	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x40013f2	            0x29c3	                            sub ebx, eax	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x40013f4	      0xe9b0000000	                           jmp 0x40014a9	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x40013f9	        0x418b5f08	                mov ebx, dword [r15 + 8]	      5750	ops.c	FUNCTION_67	IF_2	ELSE_1
0x40013fd	          0x4c63eb	                         movsxd r13, ebx	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001400	          0x4901ed	                            add r13, rbp	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001403	      0x410fb67d00	                   movzx edi, byte [r13]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001408	          0x4084ff	                           test dil, dil	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400140b	            0x752b	                           jne 0x4001438	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400140d	            0xeb69	                           jmp 0x4001478	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400140f	      0xb801000000	                              mov eax, 1	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4001414	    0x833d00000000	               cmp dword [0x0400141b], 0	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400141b	            0x7409	                            je 0x4001426	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400141d	          0x4c89ef	                            mov rdi, r13	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4001420	    0xff1500000000	                 call qword [0x04001426]	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4001426	             0x1c3	                            add ebx, eax	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4001428	          0x4c63eb	                         movsxd r13, ebx	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400142b	          0x4901ed	                            add r13, rbp	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400142e	      0x410fb67d00	                   movzx edi, byte [r13]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001433	          0x4084ff	                           test dil, dil	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001436	            0x7440	                            je 0x4001478	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x4001438	        0x400fb6ff	                          movzx edi, dil	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400143c	      0xe800000000	                          call 0x4001441	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x4001441	            0x85c0	                           test eax, eax	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x4001443	            0x7533	                           jne 0x4001478	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x4001445	          0x4d85e4	                           test r12, r12	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4001448	            0x74c5	                            je 0x400140f	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400144a	      0x410fb64500	                   movzx eax, byte [r13]	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400144f	          0x83e0df	                     and eax, 0xffffffdf	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4001452	          0x83e841	                           sub eax, 0x41	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4001455	            0x3c19	                            cmp al, 0x19	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4001457	            0x77b6	                            ja 0x400140f	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4001459	            0xeb1d	                           jmp 0x4001478	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400145b	          0x83eb01	                              sub ebx, 1	      5761	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x400145e	    0x833d00000000	               cmp dword [0x04001465], 0	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4001465	            0x7417	                            je 0x400147e	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4001467	          0x4863f3	                         movsxd rsi, ebx	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400146a	          0x4801ee	                            add rsi, rbp	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400146d	          0x4889ef	                            mov rdi, rbp	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4001470	    0xff1500000000	                 call qword [0x04001476]	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4001476	            0x29c3	                            sub ebx, eax	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4001478	            0x85db	                           test ebx, ebx	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x400147a	            0x7f06	                            jg 0x4001482	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x400147c	            0xeb2b	                           jmp 0x40014a9	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x400147e	            0x85db	                           test ebx, ebx	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4001480	            0x7427	                            je 0x40014a9	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4001482	          0x4c63eb	                         movsxd r13, ebx	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4001485	    0x420fb67c2dff	         movzx edi, byte [rbp + r13 - 1]	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400148b	      0xe800000000	                          call 0x4001490	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4001490	            0x85c0	                           test eax, eax	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4001492	            0x7415	                            je 0x40014a9	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4001494	          0x4d85e4	                           test r12, r12	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4001497	            0x74c2	                            je 0x400145b	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4001499	    0x420fb6442d00	             movzx eax, byte [rbp + r13]	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400149f	          0x83e0df	                     and eax, 0xffffffdf	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x40014a2	          0x83e841	                           sub eax, 0x41	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x40014a5	            0x3c19	                            cmp al, 0x19	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x40014a7	            0x77b2	                            ja 0x400145b	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x40014a9	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5770	ops.c	FUNCTION_67	IF_12
0x40014ae	     0xf84d7000000	                            je 0x400158b	      5770	ops.c	FUNCTION_67	IF_12
0x40014b4	          0x4c63f3	                         movsxd r14, ebx	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014b7	      0x4e8d6c3500	                    lea r13, [rbp + r14]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014bc	      0x410fb67d00	                   movzx edi, byte [r13]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014c1	          0x4084ff	                           test dil, dil	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014c4	            0x7463	                            je 0x4001529	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014c6	      0x837c244c00	               cmp dword [rsp + 0x4c], 0	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014cb	            0x7f3b	                            jg 0x4001508	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014cd	            0xeb5a	                           jmp 0x4001529	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014cf	      0xb801000000	                              mov eax, 1	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x40014d4	    0x833d00000000	               cmp dword [0x040014db], 0	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x40014db	            0x7409	                            je 0x40014e6	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x40014dd	          0x4c89ef	                            mov rdi, r13	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x40014e0	    0xff1500000000	                 call qword [0x040014e6]	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x40014e6	             0x1c3	                            add ebx, eax	      5778	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014e8	        0x8b74244c	            mov esi, dword [rsp + 0x4c] 	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014ec	            0x29c6	                            sub esi, eax	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014ee	        0x8974244c	             mov dword [rsp + 0x4c], esi	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014f2	          0x4c63f3	                         movsxd r14, ebx	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014f5	      0x4e8d6c3500	                    lea r13, [rbp + r14]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014fa	      0x410fb67d00	                   movzx edi, byte [r13]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40014ff	          0x4084ff	                           test dil, dil	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001502	            0x7425	                            je 0x4001529	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001504	            0x85f6	                           test esi, esi	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001506	            0x7e21	                           jle 0x4001529	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4001508	        0x400fb6ff	                          movzx edi, dil	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x400150c	      0xe800000000	                          call 0x4001511	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x4001511	            0x85c0	                           test eax, eax	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x4001513	            0x7514	                           jne 0x4001529	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x4001515	          0x4d85e4	                           test r12, r12	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x4001518	            0x74b5	                            je 0x40014cf	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400151a	      0x410fb64500	                   movzx eax, byte [r13]	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400151f	          0x83e0df	                     and eax, 0xffffffdf	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x4001522	          0x83e841	                           sub eax, 0x41	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x4001525	            0x3c19	                            cmp al, 0x19	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x4001527	            0x77a6	                            ja 0x40014cf	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x4001529	      0x837c244c00	               cmp dword [rsp + 0x4c], 0	      5782	ops.c	FUNCTION_67	IF_12	IF_13
0x400152e	     0xf842b060000	                            je 0x4001b5f	      5782	ops.c	FUNCTION_67	IF_12	IF_13
0x4001534	        0x41395f08	                cmp dword [r15 + 8], ebx	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4001538	            0x7d61	                           jge 0x400159b	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400153a	      0x4a8d7435ff	                lea rsi, [rbp + r14 - 1]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400153f	    0xc74424380100	               mov dword [rsp + 0x38], 1	      5645	ops.c	FUNCTION_67
0x4001547	    0x41be00000000	                             mov r14d, 0	      5644	ops.c	FUNCTION_67
0x400154d	          0x803e2d	                    cmp byte [rsi], 0x2d	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4001550	            0x7557	                           jne 0x40015a9	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4001552	    0xc74424380000	               mov dword [rsp + 0x38], 0	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x400155a	    0x41be01000000	                             mov r14d, 1	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x4001560	    0x833d00000000	               cmp dword [0x04001567], 0	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x4001567	            0x7440	                            je 0x40015a9	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x4001569	          0x4889ef	                            mov rdi, rbp	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x400156c	    0xff1500000000	                 call qword [0x04001572]	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x4001572	          0x83f801	                              cmp eax, 1	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x4001575	            0x19d2	                            sbb edx, edx	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x4001577	          0x83c201	                              add edx, 1	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x400157a	        0x89542438	             mov dword [rsp + 0x38], edx	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x400157e	          0x83f801	                              cmp eax, 1	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x4001581	        0x410f92c6	                               setb r14b	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x4001585	        0x450fb6f6	                        movzx r14d, r14b	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x4001589	            0xeb1e	                           jmp 0x40015a9	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x400158b	    0xc74424380100	               mov dword [rsp + 0x38], 1	      5645	ops.c	FUNCTION_67
0x4001593	    0x41be00000000	                             mov r14d, 0	      5644	ops.c	FUNCTION_67
0x4001599	            0xeb0e	                           jmp 0x40015a9	      5644	ops.c	FUNCTION_67
0x400159b	    0xc74424380100	               mov dword [rsp + 0x38], 1	      5645	ops.c	FUNCTION_67
0x40015a3	    0x41be00000000	                             mov r14d, 0	      5644	ops.c	FUNCTION_67
0x40015a9	          0x4863c3	                         movsxd rax, ebx	      5800	ops.c	FUNCTION_67
0x40015ac	    0x440fb66c0500	            movzx r13d, byte [rbp + rax]	      5800	ops.c	FUNCTION_67
0x40015b2	        0x450fb6fd	                        movzx r15d, r13b	      5800	ops.c	FUNCTION_67
0x40015b6	        0x418d57d0	                   lea edx, [r15 - 0x30]	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40015ba	          0x83fa09	                              cmp edx, 9	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40015bd	            0x761c	                           jbe 0x40015db	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40015bf	          0x4d85e4	                           test r12, r12	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40015c2	            0x740d	                            je 0x40015d1	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40015c4	          0x4489e8	                           mov eax, r13d	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40015c7	          0x83e0df	                     and eax, 0xffffffdf	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40015ca	          0x83e841	                           sub eax, 0x41	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40015cd	            0x3c19	                            cmp al, 0x19	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40015cf	            0x7625	                           jbe 0x40015f6	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x40015d1	      0xe800000000	                          call 0x40015d6	      5803	ops.c	FUNCTION_67	IF_15	CALL_22
0x40015d6	      0xe981060000	                           jmp 0x4001c5c	      5804	ops.c	FUNCTION_67	IF_15
0x40015db	          0x4d85e4	                           test r12, r12	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40015de	     0xf84ec000000	                            je 0x40016d0	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40015e4	          0x4489ea	                           mov edx, r13d	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40015e7	          0x83e2df	                     and edx, 0xffffffdf	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40015ea	          0x83ea41	                           sub edx, 0x41	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40015ed	          0x80fa19	                            cmp dl, 0x19	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40015f0	     0xf87da000000	                            ja 0x40016d0	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40015f6	      0x837c24281d	           cmp dword [rsp + 0x28], 0x1d 	      5810	ops.c	FUNCTION_67	IF_16	IF_17
0x40015fb	            0x7547	                           jne 0x4001644	      5810	ops.c	FUNCTION_67	IF_16	IF_17
0x40015fd	        0x4183ff60	                          cmp r15d, 0x60	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001601	            0x7f08	                            jg 0x400160b	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001603	        0x418d47bf	                   lea eax, [r15 - 0x41]	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001607	            0x4898	                                    cdqe	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001609	            0xeb06	                           jmp 0x4001611	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400160b	        0x418d479f	                   lea eax, [r15 - 0x61]	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400160f	            0x4898	                                    cdqe	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001611	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x4001616	          0x4129d7	                           sub r15d, edx	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x4001619	          0x4489fd	                           mov ebp, r15d	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x400161c	          0x4839d0	                            cmp rax, rdx	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400161f	            0x7d6e	                           jge 0x400168f	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001621	      0xe800000000	                          call 0x4001626	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x4001626	        0x450fb6ed	                        movzx r13d, r13b	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400162a	          0x488b00	                    mov rax, qword [rax]	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400162d	      0x420fb70468	           movzx eax, word [rax + r13*2]	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x4001632	        0x66250001	                           and ax, 0x100	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x4001636	        0x6683f801	                               cmp ax, 1	      5817	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	ELSE_2
0x400163a	            0x19ed	                            sbb ebp, ebp	      5817	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	ELSE_2
0x400163c	          0x83e520	                           and ebp, 0x20	      5817	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	ELSE_2
0x400163f	          0x83c541	                           add ebp, 0x41	      5817	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	ELSE_2
0x4001642	            0xeb4b	                           jmp 0x400168f	      5817	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	ELSE_2
0x4001644	        0x4183ff60	                          cmp r15d, 0x60	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001648	            0x7f0c	                            jg 0x4001656	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400164a	      0xb85a000000	                           mov eax, 0x5a	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400164f	          0x4429f8	                           sub eax, r15d	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001652	            0x4898	                                    cdqe	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001654	            0xeb0a	                           jmp 0x4001660	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001656	      0xb87a000000	                           mov eax, 0x7a	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400165b	          0x4429f8	                           sub eax, r15d	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400165e	            0x4898	                                    cdqe	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001660	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x4001665	        0x418d2c0f	                    lea ebp, [r15 + rcx]	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x4001669	          0x4839c8	                            cmp rax, rcx	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400166c	            0x7d21	                           jge 0x400168f	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400166e	      0xe800000000	                          call 0x4001673	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x4001673	        0x450fb6ed	                        movzx r13d, r13b	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x4001677	          0x488b00	                    mov rax, qword [rax]	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400167a	      0x420fb70468	           movzx eax, word [rax + r13*2]	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400167f	        0x66250001	                           and ax, 0x100	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x4001683	        0x6683f801	                               cmp ax, 1	      5833	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	ELSE_5
0x4001687	            0x19ed	                            sbb ebp, ebp	      5833	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	ELSE_5
0x4001689	          0x83e520	                           and ebp, 0x20	      5833	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	ELSE_5
0x400168c	          0x83c55a	                           add ebp, 0x5a	      5833	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	ELSE_5
0x400168f	    0x488b05000000	            mov rax, qword [0x04001696] 	      5842	ops.c	FUNCTION_67	IF_16
0x4001696	          0x895840	             mov dword [rax + 0x40], ebx	      5842	ops.c	FUNCTION_67	IF_16
0x4001699	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x400169d	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x40016a2	        0x448b6844	           mov r13d, dword [rax + 0x44] 	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x40016a6	      0xbf00000000	                              mov edi, 0	      5846	ops.c	FUNCTION_67	IF_16	CALL_30
0x40016ab	      0xe800000000	                          call 0x40016b0	      5846	ops.c	FUNCTION_67	IF_16	CALL_30
0x40016b0	            0x89ef	                            mov edi, ebp	      5847	ops.c	FUNCTION_67	IF_16	CALL_31
0x40016b2	      0xe800000000	                          call 0x40016b7	      5847	ops.c	FUNCTION_67	IF_16	CALL_31
0x40016b7	    0x488b05000000	            mov rax, qword [0x040016be] 	      5848	ops.c	FUNCTION_67	IF_16
0x40016be	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      5848	ops.c	FUNCTION_67	IF_16
0x40016c2	          0x8b5040	            mov edx, dword [rax + 0x40] 	      5848	ops.c	FUNCTION_67	IF_16
0x40016c5	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      5848	ops.c	FUNCTION_67	IF_16
0x40016c8	          0x895840	             mov dword [rax + 0x40], ebx	      5849	ops.c	FUNCTION_67	IF_16
0x40016cb	      0xe946040000	                           jmp 0x4001b16	      5849	ops.c	FUNCTION_67	IF_16
0x40016d0	            0x85db	                           test ebx, ebx	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016d2	            0x7e37	                           jle 0x400170b	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016d4	      0x488d7405ff	                lea rsi, [rbp + rax - 1]	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016d9	          0x803e2d	                    cmp byte [rsi], 0x2d	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016dc	            0x752d	                           jne 0x400170b	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016de	    0x833d00000000	               cmp dword [0x040016e5], 0	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016e5	            0x740d	                            je 0x40016f4	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016e7	          0x4889ef	                            mov rdi, rbp	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016ea	    0xff1500000000	                 call qword [0x040016f0]	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016f0	            0x85c0	                           test eax, eax	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016f2	            0x7517	                           jne 0x400170b	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016f4	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5858	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016f9	            0x751c	                           jne 0x4001717	      5858	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016fb	          0x83eb01	                              sub ebx, 1	      5861	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40016fe	    0x41be01000000	                             mov r14d, 1	      5862	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001704	      0xba00000000	                              mov edx, 0	      5649	ops.c	FUNCTION_67
0x4001709	            0xeb4e	                           jmp 0x4001759	      5649	ops.c	FUNCTION_67
0x400170b	      0xba00000000	                              mov edx, 0	      5649	ops.c	FUNCTION_67
0x4001710	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001715	            0x7442	                            je 0x4001759	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001717	      0xba00000000	                              mov edx, 0	      5649	ops.c	FUNCTION_67
0x400171c	    0x833d00000000	           cmp dword [0x04001723], 0x56 	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001723	            0x7434	                            je 0x4001759	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001725	        0x8b54244c	            mov edx, dword [rsp + 0x4c] 	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001729	    0x488b05000000	            mov rax, qword [0x04001730] 	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001730	    0x81b81c030000	    cmp dword [rax + 0x31c], 0x7fffffff 	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400173a	            0x751d	                           jne 0x4001759	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400173c	      0xb800000000	                              mov eax, 0	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x4001741	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x4001748	          0x4889ef	                            mov rdi, rbp	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x400174b	            0xf2ae	              repne scasb al, byte [rdi]	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x400174d	          0x4889c8	                            mov rax, rcx	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x4001750	          0x48f7d0	                                 not rax	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x4001753	        0x488d50ff	                      lea rdx, [rax - 1]	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x4001757	            0x29da	                            sub edx, ebx	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001759	       0xfb644244a	           movzx eax, byte [rsp + 0x4a] 	      5871	ops.c	FUNCTION_67	ELSE_7
0x400175e	    0x48837c244001	               cmp qword [rsp + 0x40], 1	      5872	ops.c	FUNCTION_67	ELSE_7
0x4001764	            0x19c9	                            sbb ecx, ecx	      5872	ops.c	FUNCTION_67	ELSE_7
0x4001766	            0xf7d1	                                 not ecx	      5872	ops.c	FUNCTION_67	ELSE_7
0x4001768	          0x83e102	                              and ecx, 2	      5872	ops.c	FUNCTION_67	ELSE_7
0x400176b	             0x1c8	                            add eax, ecx	      5872	ops.c	FUNCTION_67	ELSE_7
0x400176d	    0x48837c241001	               cmp qword [rsp + 0x10], 1	      5873	ops.c	FUNCTION_67	ELSE_7
0x4001773	            0x19c9	                            sbb ecx, ecx	      5873	ops.c	FUNCTION_67	ELSE_7
0x4001775	            0xf7d1	                                 not ecx	      5873	ops.c	FUNCTION_67	ELSE_7
0x4001777	          0x83e104	                              and ecx, 4	      5873	ops.c	FUNCTION_67	ELSE_7
0x400177a	             0x1c1	                            add ecx, eax	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400177c	          0x4863fb	                         movsxd rdi, ebx	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400177f	          0x4801ef	                            add rdi, rbp	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4001782	        0x4883ec08	                              sub rsp, 8	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4001786	              0x52	                                push rdx	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4001787	      0x4c8d4c2468	                    lea r9, [rsp + 0x68]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400178c	    0x41b800000000	                              mov r8d, 0	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4001792	      0x488d54245c	                   lea rdx, [rsp + 0x5c]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4001797	      0x488d742464	                   lea rsi, [rsp + 0x64]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400179c	      0xe800000000	                          call 0x40017a1	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x40017a1	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40017a5	        0x4883c410	                           add rsp, 0x10	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40017a9	            0x85c0	                           test eax, eax	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40017ab	            0x7420	                            je 0x40017cd	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40017ad	          0x4585f6	                         test r14d, r14d	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40017b0	            0x741b	                            je 0x40017cd	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40017b2	          0x83c301	                              add ebx, 1	      5879	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40017b5	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5880	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40017ba	      0x837c24281d	           cmp dword [rsp + 0x28], 0x1d 	      5884	ops.c	FUNCTION_67	ELSE_7
0x40017bf	           0xf94c1	                                 sete cl	      5884	ops.c	FUNCTION_67	ELSE_7
0x40017c2	           0xfb6c9	                           movzx ecx, cl	      5884	ops.c	FUNCTION_67	ELSE_7
0x40017c5	    0x41be00000000	                             mov r14d, 0	      5881	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40017cb	            0xeb1b	                           jmp 0x40017e8	      5881	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40017cd	      0x837c24281d	           cmp dword [rsp + 0x28], 0x1d 	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x40017d2	           0xf95c1	                                setne cl	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x40017d5	           0xfb6c9	                           movzx ecx, cl	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x40017d8	          0x4585f6	                         test r14d, r14d	      5887	ops.c	FUNCTION_67	ELSE_7	IF_27
0x40017db	            0x750b	                           jne 0x40017e8	      5887	ops.c	FUNCTION_67	ELSE_7	IF_27
0x40017dd	      0x837c24281d	           cmp dword [rsp + 0x28], 0x1d 	      5884	ops.c	FUNCTION_67	ELSE_7
0x40017e2	           0xf94c1	                                 sete cl	      5884	ops.c	FUNCTION_67	ELSE_7
0x40017e5	           0xfb6c9	                           movzx ecx, cl	      5884	ops.c	FUNCTION_67	ELSE_7
0x40017e8	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      5890	ops.c	FUNCTION_67	ELSE_7
0x40017ed	            0x85c9	                           test ecx, ecx	      5891	ops.c	FUNCTION_67	ELSE_7	IF_28
0x40017ef	            0x7413	                            je 0x4001804	      5891	ops.c	FUNCTION_67	ELSE_7	IF_28
0x40017f1	          0x4889d1	                            mov rcx, rdx	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x40017f4	      0x482b4c2430	             sub rcx, qword [rsp + 0x30]	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x40017f9	      0x48894c2458	             mov qword [rsp + 0x58], rcx	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x40017fe	            0x85c0	                           test eax, eax	      5896	ops.c	FUNCTION_67	ELSE_7	IF_29
0x4001800	            0x7548	                           jne 0x400184a	      5896	ops.c	FUNCTION_67	ELSE_7	IF_29
0x4001802	            0xeb13	                           jmp 0x4001817	      5896	ops.c	FUNCTION_67	ELSE_7	IF_29
0x4001804	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x4001809	          0x4801d1	                            add rcx, rdx	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x400180c	      0x48894c2458	             mov qword [rsp + 0x58], rcx	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x4001811	            0x85c0	                           test eax, eax	      5896	ops.c	FUNCTION_67	ELSE_7	IF_29
0x4001813	            0x7415	                            je 0x400182a	      5896	ops.c	FUNCTION_67	ELSE_7	IF_29
0x4001815	            0xeb33	                           jmp 0x400184a	      5896	ops.c	FUNCTION_67	ELSE_7	IF_29
0x4001817	          0x4839ca	                            cmp rdx, rcx	      5900	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400181a	            0x731f	                           jae 0x400183b	      5900	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400181c	          0x48f7d9	                                 neg rcx	      5902	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400181f	      0x48894c2458	             mov qword [rsp + 0x58], rcx	      5902	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001824	        0x4183f601	                             xor r14d, 1	      5903	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001828	            0xeb11	                           jmp 0x400183b	      5903	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400182a	          0x4839ca	                            cmp rdx, rcx	      5909	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x400182d	            0x760c	                           jbe 0x400183b	      5909	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x400182f	          0x48f7d1	                                 not rcx	      5911	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x4001832	      0x48894c2458	             mov qword [rsp + 0x58], rcx	      5911	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x4001837	        0x4183f601	                             xor r14d, 1	      5912	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x400183b	    0x48837c245800	               cmp qword [rsp + 0x58], 0	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4001841	      0xb800000000	                              mov eax, 0	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4001846	        0x440f44f0	                         cmove r14d, eax	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x400184a	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400184f	            0x7418	                            je 0x4001869	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x4001851	      0x837c243800	               cmp dword [rsp + 0x38], 0	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x4001856	            0x7511	                           jne 0x4001869	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x4001858	          0x4585f6	                         test r14d, r14d	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400185b	            0x750c	                           jne 0x4001869	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400185d	            0x85db	                           test ebx, ebx	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400185f	            0x7e08	                           jle 0x4001869	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x4001861	          0x83eb01	                              sub ebx, 1	      5922	ops.c	FUNCTION_67	ELSE_7	IF_34
0x4001864	      0x8344244c01	               add dword [rsp + 0x4c], 1	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x4001869	    0x488b05000000	            mov rax, qword [0x04001870] 	      5929	ops.c	FUNCTION_67	ELSE_7
0x4001870	          0x895840	             mov dword [rax + 0x40], ebx	      5929	ops.c	FUNCTION_67	ELSE_7
0x4001873	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x4001877	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x400187c	        0x448b6844	           mov r13d, dword [rax + 0x44] 	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x4001880	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5933	ops.c	FUNCTION_67	ELSE_7
0x4001884	          0x4189c4	                           mov r12d, eax	      5933	ops.c	FUNCTION_67	ELSE_7
0x4001887	      0xe800000000	                          call 0x400188c	      5934	ops.c	FUNCTION_67	ELSE_7	CALL_34
0x400188c	            0x89c5	                            mov ebp, eax	      5934	ops.c	FUNCTION_67	ELSE_7	CALL_34
0x400188e	          0x83f82d	                           cmp eax, 0x2d	      5939	ops.c	FUNCTION_67	ELSE_7	IF_36
0x4001891	            0x7505	                           jne 0x4001898	      5939	ops.c	FUNCTION_67	ELSE_7	IF_36
0x4001893	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5940	ops.c	FUNCTION_67	ELSE_7	IF_36
0x4001898	          0x4489e0	                           mov eax, r12d	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x400189b	      0x458d6424ff	                     lea r12d, [r12 - 1]	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x40018a0	            0x85c0	                           test eax, eax	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x40018a2	            0x7e47	                           jle 0x40018eb	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x40018a4	    0x81fdff000000	                           cmp ebp, 0xff	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x40018aa	            0x7f24	                            jg 0x40018d0	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x40018ac	      0xe800000000	                          call 0x40018b1	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x40018b1	          0x4863ed	                         movsxd rbp, ebp	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x40018b4	          0x488b00	                    mov rax, qword [rax]	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x40018b7	         0xfb70468	           movzx eax, word [rax + rbp*2]	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x40018bb	          0xf6c404	                              test ah, 4	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x40018be	            0x7410	                            je 0x40018d0	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x40018c0	        0x66250001	                           and ax, 0x100	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x40018c4	           0xf95c0	                                setne al	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x40018c7	           0xfb6c0	                           movzx eax, al	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x40018ca	    0x890500000000	            mov dword [0x040018d0], eax 	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x40018d0	      0xbf00000000	                              mov edi, 0	      5951	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_37
0x40018d5	      0xe800000000	                          call 0x40018da	      5951	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_37
0x40018da	      0xe800000000	                          call 0x40018df	      5952	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_38
0x40018df	            0x89c5	                            mov ebp, eax	      5952	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_38
0x40018e1	        0x4183ec01	                             sub r12d, 1	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x40018e5	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x40018e9	            0x75b9	                           jne 0x40018a4	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x40018eb	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x40018ef	          0x8d7841	                   lea edi, [rax + 0x41]	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x40018f2	      0xe800000000	                          call 0x40018f7	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x40018f7	          0x4889c5	                            mov rbp, rax	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x40018fa	          0x4885c0	                           test rax, rax	      5961	ops.c	FUNCTION_67	ELSE_7	IF_39
0x40018fd	     0xf8449030000	                            je 0x4001c4c	      5961	ops.c	FUNCTION_67	ELSE_7	IF_39
0x4001903	      0x4889442428	             mov qword [rsp + 0x28], rax	      5963	ops.c	FUNCTION_67	ELSE_7
0x4001908	          0x4585f6	                         test r14d, r14d	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400190b	            0x741b	                            je 0x4001928	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400190d	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4001912	            0x7407	                            je 0x400191b	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4001914	      0x837c243800	               cmp dword [rsp + 0x38], 0	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4001919	            0x740d	                            je 0x4001928	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400191b	        0x488d4501	                      lea rax, [rbp + 1]	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400191f	      0x4889442428	             mov qword [rsp + 0x28], rax	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4001924	        0xc645002d	                    mov byte [rbp], 0x2d	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4001928	      0x837c245400	               cmp dword [rsp + 0x54], 0	      5968	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400192d	     0xf84b5000000	                            je 0x40019e8	      5968	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4001933	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      5970	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4001938	          0xc60630	                    mov byte [rsi], 0x30	      5970	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400193b	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5971	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4001940	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001944	            0x89c2	                            mov edx, eax	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001946	          0x83e2df	                     and edx, 0xffffffdf	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001949	          0x83fa58	                           cmp edx, 0x58	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400194c	            0x7412	                            je 0x4001960	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400194e	          0x83fa42	                           cmp edx, 0x42	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001951	           0xf94c2	                                 sete dl	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001954	        0x4c8d6601	                      lea r12, [rsi + 1]	      5970	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4001958	            0x84d2	                             test dl, dl	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400195a	     0xf847d020000	                            je 0x4001bdd	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001960	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001965	        0x4c8d6202	                      lea r12, [rdx + 2]	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001969	          0x884201	                  mov byte [rdx + 1], al	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400196c	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5977	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001971	      0xe967020000	                           jmp 0x4001bdd	      5977	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4001976	          0x8d47ff	                      lea eax, [rdi - 1]	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001979	        0x480fa3c6	                             bt rsi, rax	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400197d	     0xf8276020000	                            jb 0x4001bf9	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001983	            0x89c7	                            mov edi, eax	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001985	            0x85c0	                           test eax, eax	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x4001987	            0x75ed	                           jne 0x4001976	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x4001989	      0xbf00000000	                              mov edi, 0	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x400198e	            0xeb42	                           jmp 0x40019d2	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x4001990	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001995	          0x4885f6	                           test rsi, rsi	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001998	     0xf8856020000	                            js 0x4001bf4	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400199e	      0xbf3f000000	                           mov edi, 0x3f	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x40019a3	            0xebd1	                           jmp 0x4001976	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x40019a5	          0x83e901	                              sub ecx, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019a8	          0x4889f0	                            mov rax, rsi	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019ab	          0x48d3e8	                             shr rax, cl	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019ae	          0x83e001	                              and eax, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019b1	        0x4883f801	                              cmp rax, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019b5	            0x19c0	                            sbb eax, eax	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019b7	          0x83c031	                           add eax, 0x31	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019ba	            0x8802	                      mov byte [rdx], al	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019bc	        0x4883c201	                              add rdx, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019c0	            0x85c9	                           test ecx, ecx	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019c2	            0x7fe1	                            jg 0x40019a5	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019c4	          0x83ef01	                              sub edi, 1	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019c7	      0xb800000000	                              mov eax, 0	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019cc	           0xf48f8	                          cmovs edi, eax	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019cf	          0x83c701	                              add edi, 1	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x40019d2	          0x4863ff	                         movsxd rdi, edi	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x40019d5	      0xc6443c6000	          mov byte [rsp + rdi + 0x60], 0	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x40019da	      0xe99a000000	                           jmp 0x4001a79	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x40019df	            0x85c0	                           test eax, eax	      5998	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0x40019e1	            0x752a	                           jne 0x4001a0d	      5998	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0x40019e3	      0x4c89642428	             mov qword [rsp + 0x28], r12	      5998	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0x40019e8	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x40019ed	      0xba00000000	                              mov edx, 0	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x40019f2	      0xbe41000000	                           mov esi, 0x41	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x40019f7	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x40019fc	      0xb800000000	                              mov eax, 0	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4001a01	      0xe800000000	                          call 0x4001a06	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4001a06	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4001a0b	            0xeb6c	                           jmp 0x4001a79	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4001a0d	          0x83f830	                           cmp eax, 0x30	      6001	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0x4001a10	            0x7520	                           jne 0x4001a32	      6001	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0x4001a12	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001a17	      0xba00000000	                              mov edx, 0	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001a1c	      0xbe41000000	                           mov esi, 0x41	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001a21	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001a26	      0xb800000000	                              mov eax, 0	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001a2b	      0xe800000000	                          call 0x4001a30	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001a30	            0xeb47	                           jmp 0x4001a79	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4001a32	    0x833d00000000	               cmp dword [0x04001a39], 0	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x4001a39	            0x7420	                            je 0x4001a5b	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x4001a3b	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001a40	      0xba00000000	                              mov edx, 0	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001a45	      0xbe41000000	                           mov esi, 0x41	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001a4a	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001a4f	      0xb800000000	                              mov eax, 0	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001a54	      0xe800000000	                          call 0x4001a59	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001a59	            0xeb1e	                           jmp 0x4001a79	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4001a5b	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001a60	      0xba00000000	                              mov edx, 0	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001a65	      0xbe41000000	                           mov esi, 0x41	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001a6a	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001a6f	      0xb800000000	                              mov eax, 0	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001a74	      0xe800000000	                          call 0x4001a79	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4001a79	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001a7e	      0xb800000000	                              mov eax, 0	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001a83	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001a8a	            0xf2ae	              repne scasb al, byte [rdi]	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001a8c	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001a90	        0x8d440802	                lea eax, [rax + rcx + 2]	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001a94	        0x8944244c	             mov dword [rsp + 0x4c], eax	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4001a98	        0x4183ff30	                          cmp r15d, 0x30	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001a9c	            0x7537	                           jne 0x4001ad5	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001a9e	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001aa4	            0x750d	                           jne 0x4001ab3	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001aa6	          0x8d50ff	                      lea edx, [rax - 1]	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001aa9	        0x8954244c	             mov dword [rsp + 0x4c], edx	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001aad	            0x85c0	                           test eax, eax	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001aaf	            0x7f0b	                            jg 0x4001abc	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001ab1	            0xeb22	                           jmp 0x4001ad5	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001ab3	      0x837c245400	               cmp dword [rsp + 0x54], 0	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001ab8	            0x75ec	                           jne 0x4001aa6	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001aba	            0xeb19	                           jmp 0x4001ad5	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4001abc	        0x4983c401	                              add r12, 1	      6020	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001ac0	    0x41c64424ff30	                mov byte [r12 - 1], 0x30	      6020	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001ac6	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001aca	          0x8d50ff	                      lea edx, [rax - 1]	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001acd	        0x8954244c	             mov dword [rsp + 0x4c], edx	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001ad1	            0x85c0	                           test eax, eax	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001ad3	            0x7fe7	                            jg 0x4001abc	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x4001ad5	      0x41c6042400	                       mov byte [r12], 0	      6021	ops.c	FUNCTION_67	ELSE_7
0x4001ada	      0x488d742460	                   lea rsi, [rsp + 0x60]	       148	string3.h	FUNCTION_102	CALL_3
0x4001adf	          0x4889ef	                            mov rdi, rbp	       148	string3.h	FUNCTION_102	CALL_3
0x4001ae2	      0xe800000000	                          call 0x4001ae7	       148	string3.h	FUNCTION_102	CALL_3
0x4001ae7	          0x4889ef	                            mov rdi, rbp	      6023	ops.c	FUNCTION_67	ELSE_7	CALL_46
0x4001aea	      0xe800000000	                          call 0x4001aef	      6023	ops.c	FUNCTION_67	ELSE_7	CALL_46
0x4001aef	          0x4889ef	                            mov rdi, rbp	      6024	ops.c	FUNCTION_67	ELSE_7	CALL_47
0x4001af2	      0xe800000000	                          call 0x4001af7	      6024	ops.c	FUNCTION_67	ELSE_7	CALL_47
0x4001af7	    0x488b05000000	            mov rax, qword [0x04001afe] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x4001afe	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x4001b02	          0x8b5040	            mov edx, dword [rax + 0x40] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x4001b05	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x4001b08	            0x85d2	                           test edx, edx	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x4001b0a	     0xf84f5000000	                            je 0x4001c05	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x4001b10	          0x8d7aff	                      lea edi, [rdx - 1]	      6027	ops.c	FUNCTION_67	ELSE_7	IF_49
0x4001b13	          0x897840	             mov dword [rax + 0x40], edi	      6027	ops.c	FUNCTION_67	ELSE_7	IF_49
0x4001b16	    0x488b05000000	            mov rax, qword [0x04001b1d] 	      6033	ops.c	FUNCTION_67	IF_50
0x4001b1d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6033	ops.c	FUNCTION_67	IF_50
0x4001b22	    0x4889b8e01100	          mov qword [rax + 0x11e0], rdi 	      6033	ops.c	FUNCTION_67	IF_50
0x4001b29	    0x8998e8110000	          mov dword [rax + 0x11e8], ebx 	      6033	ops.c	FUNCTION_67	IF_50
0x4001b2f	    0x4489a8ec1100	         mov dword [rax + 0x11ec], r13d 	      6033	ops.c	FUNCTION_67	IF_50
0x4001b36	    0x4889b0001200	          mov qword [rax + 0x1200], rsi 	      6034	ops.c	FUNCTION_67	IF_50
0x4001b3d	    0x899008120000	          mov dword [rax + 0x1208], edx 	      6034	ops.c	FUNCTION_67	IF_50
0x4001b43	    0x89880c120000	          mov dword [rax + 0x120c], ecx 	      6034	ops.c	FUNCTION_67	IF_50
0x4001b49	            0x85d2	                           test edx, edx	      6035	ops.c	FUNCTION_67	IF_50	IF_51
0x4001b4b	     0xf8efb000000	                           jle 0x4001c4c	      6035	ops.c	FUNCTION_67	IF_50	IF_51
0x4001b51	          0x83ea01	                              sub edx, 1	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x4001b54	    0x899008120000	          mov dword [rax + 0x1208], edx 	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x4001b5a	      0xe9ed000000	                           jmp 0x4001c4c	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x4001b5f	      0xb800000000	                              mov eax, 0	      5647	ops.c	FUNCTION_67
0x4001b64	            0xeb0c	                           jmp 0x4001b72	      5647	ops.c	FUNCTION_67
0x4001b66	      0xb801000000	                              mov eax, 1	      5647	ops.c	FUNCTION_67
0x4001b6b	            0xeb05	                           jmp 0x4001b72	      5647	ops.c	FUNCTION_67
0x4001b6d	      0xb801000000	                              mov eax, 1	      6040	ops.c	FUNCTION_67	IF_52
0x4001b72	    0x488b15000000	            mov rdx, qword [0x04001b79] 	      6041	ops.c	FUNCTION_67	IF_52
0x4001b79	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      6041	ops.c	FUNCTION_67	IF_52
0x4001b7e	        0x48894a38	             mov qword [rdx + 0x38], rcx	      6041	ops.c	FUNCTION_67	IF_52
0x4001b82	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      6041	ops.c	FUNCTION_67	IF_52
0x4001b86	          0x897240	             mov dword [rdx + 0x40], esi	      6041	ops.c	FUNCTION_67	IF_52
0x4001b89	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	      6041	ops.c	FUNCTION_67	IF_52
0x4001b8d	          0x894a44	             mov dword [rdx + 0x44], ecx	      6041	ops.c	FUNCTION_67	IF_52
0x4001b90	            0xeb13	                           jmp 0x4001ba5	      6041	ops.c	FUNCTION_67	IF_52
0x4001b92	    0x488b05000000	            mov rax, qword [0x04001b99] 	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x4001b99	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x4001ba0	      0xb801000000	                              mov eax, 1	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x4001ba5	    0x488b9424a800	            mov rdx, qword [rsp + 0xa8] 	      6046	ops.c	FUNCTION_67
0x4001bad	    0x644833142528	                xor rdx, qword fs:[0x28]	      6046	ops.c	FUNCTION_67
0x4001bb6	     0xf84ef000000	                            je 0x4001cab	      6046	ops.c	FUNCTION_67
0x4001bbc	      0xe9e5000000	                           jmp 0x4001ca6	      6046	ops.c	FUNCTION_67
0x4001bc1	    0x48837c243800	               cmp qword [rsp + 0x38], 0	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x4001bc7	     0xf84ba000000	                            je 0x4001c87	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x4001bcd	      0xe91cf7ffff	                           jmp 0x40012ee	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x4001bd2	            0x85db	                           test ebx, ebx	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001bd4	        0x410f9fc5	                               setg r13b	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001bd8	      0xe9abf7ffff	                           jmp 0x4001388	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001bdd	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001be1	            0x89c2	                            mov edx, eax	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001be3	          0x83e2df	                     and edx, 0xffffffdf	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001be6	          0x83fa42	                           cmp edx, 0x42	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001be9	     0xf84a1fdffff	                            je 0x4001990	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001bef	      0xe9ebfdffff	                           jmp 0x40019df	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001bf4	      0xbf40000000	                           mov edi, 0x40	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001bf9	      0x488d542460	                   lea rdx, [rsp + 0x60]	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001bfe	            0x89f9	                            mov ecx, edi	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001c00	      0xe9a0fdffff	                           jmp 0x40019a5	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4001c05	    0x488b05000000	            mov rax, qword [0x04001c0c] 	      6033	ops.c	FUNCTION_67	IF_50
0x4001c0c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6033	ops.c	FUNCTION_67	IF_50
0x4001c11	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      6033	ops.c	FUNCTION_67	IF_50
0x4001c18	    0x8998e8110000	          mov dword [rax + 0x11e8], ebx 	      6033	ops.c	FUNCTION_67	IF_50
0x4001c1e	    0x4489a8ec1100	         mov dword [rax + 0x11ec], r13d 	      6033	ops.c	FUNCTION_67	IF_50
0x4001c25	    0x4889b0001200	          mov qword [rax + 0x1200], rsi 	      6034	ops.c	FUNCTION_67	IF_50
0x4001c2c	    0xc78008120000	            mov dword [rax + 0x1208], 0 	      6034	ops.c	FUNCTION_67	IF_50
0x4001c36	    0x89880c120000	          mov dword [rax + 0x120c], ecx 	      6034	ops.c	FUNCTION_67	IF_50
0x4001c3c	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      6040	ops.c	FUNCTION_67	IF_52
0x4001c41	     0xf844bffffff	                            je 0x4001b92	      6040	ops.c	FUNCTION_67	IF_52
0x4001c47	      0xe91affffff	                           jmp 0x4001b66	      6040	ops.c	FUNCTION_67	IF_52
0x4001c4c	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      6040	ops.c	FUNCTION_67	IF_52
0x4001c51	     0xf843bffffff	                            je 0x4001b92	      6040	ops.c	FUNCTION_67	IF_52
0x4001c57	      0xe911ffffff	                           jmp 0x4001b6d	      6040	ops.c	FUNCTION_67	IF_52
0x4001c5c	      0xb800000000	                              mov eax, 0	      6040	ops.c	FUNCTION_67	IF_52
0x4001c61	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      6040	ops.c	FUNCTION_67	IF_52
0x4001c66	     0xf8506ffffff	                           jne 0x4001b72	      6040	ops.c	FUNCTION_67	IF_52
0x4001c6c	      0xe934ffffff	                           jmp 0x4001ba5	      6040	ops.c	FUNCTION_67	IF_52
0x4001c71	            0x85db	                           test ebx, ebx	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c73	        0x410f9fc5	                               setg r13b	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c77	      0xe9c9f6ffff	                           jmp 0x4001345	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c7c	            0x85db	                           test ebx, ebx	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c7e	        0x410f9fc5	                               setg r13b	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c82	      0xe901f7ffff	                           jmp 0x4001388	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c87	            0x85db	                           test ebx, ebx	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c89	        0x410f9fc5	                               setg r13b	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c8d	      0x807c244b00	                cmp byte [rsp + 0x4b], 0	      5717	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c92	     0xf8461f7ffff	                            je 0x40013f9	      5717	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c98	          0x4584ed	                         test r13b, r13b	      5717	ops.c	FUNCTION_67	IF_2	IF_9
0x4001c9b	     0xf85a4f6ffff	                           jne 0x4001345	      5717	ops.c	FUNCTION_67	IF_2	IF_9
0x4001ca1	      0xe953f7ffff	                           jmp 0x40013f9	      5717	ops.c	FUNCTION_67	IF_2	IF_9
0x4001ca6	      0xe800000000	                          call 0x4001cab	      6046	ops.c	FUNCTION_67
0x4001cab	    0x4881c4b80000	                           add rsp, 0xb8	      6046	ops.c	FUNCTION_67
0x4001cb2	              0x5b	                                 pop rbx	      6046	ops.c	FUNCTION_67
0x4001cb3	              0x5d	                                 pop rbp	      6046	ops.c	FUNCTION_67
0x4001cb4	            0x415c	                                 pop r12	      6046	ops.c	FUNCTION_67
0x4001cb6	            0x415d	                                 pop r13	      6046	ops.c	FUNCTION_67
0x4001cb8	            0x415e	                                 pop r14	      6046	ops.c	FUNCTION_67
0x4001cba	            0x415f	                                 pop r15	      6046	ops.c	FUNCTION_67
0x4001cbc	              0xc3	                                     ret	      6046	ops.c	FUNCTION_67
stuffescaped	CALL,4:ELSE,1:WHILE,2:FOR,0:functions,0:IF,4:SWITCH,0:DO,0	54
0x4000881	              0x55	                                push rbp	      1466	ops.c	FUNCTION_27
0x4000882	              0x53	                                push rbx	      1466	ops.c	FUNCTION_27
0x4000883	        0x4883ec18	                           sub rsp, 0x18	      1466	ops.c	FUNCTION_27
0x4000887	      0x48897c2408	                mov qword [rsp + 8], rdi	      1466	ops.c	FUNCTION_27
0x400088c	            0x89f3	                            mov ebx, esi	      1466	ops.c	FUNCTION_27
0x400088e	      0xe985000000	                           jmp 0x4000918	      1470	ops.c	FUNCTION_27	WHILE_1
0x4000893	        0x4883c601	                              add rsi, 1	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4000897	      0x4889742408	                mov qword [rsp + 8], rsi	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x400089c	      0x488b742408	                mov rsi, qword [rsp + 8]	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40008a1	           0xfb606	                   movzx eax, byte [rsi]	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40008a4	          0x8d50e0	                   lea edx, [rax - 0x20]	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40008a7	          0x80fa5e	                            cmp dl, 0x5e	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40008aa	            0x76e7	                           jbe 0x4000893	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40008ac	            0x85db	                           test ebx, ebx	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40008ae	            0x7504	                           jne 0x40008b4	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40008b0	            0x3c80	                            cmp al, 0x80	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40008b2	            0x74df	                            je 0x4000893	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x40008b4	          0x4839f7	                            cmp rdi, rsi	      1483	ops.c	FUNCTION_27	WHILE_1	IF_1
0x40008b7	            0x7308	                           jae 0x40008c1	      1483	ops.c	FUNCTION_27	WHILE_1	IF_1
0x40008b9	          0x4829fe	                            sub rsi, rdi	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x40008bc	      0xe800000000	                          call 0x40008c1	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x40008c1	      0x488b442408	                mov rax, qword [rsp + 8]	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x40008c6	          0x803800	                       cmp byte [rax], 0	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x40008c9	            0x744d	                            je 0x4000918	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x40008cb	    0x833d00000000	               cmp dword [0x040008d2], 0	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40008d2	            0x740e	                            je 0x40008e2	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40008d4	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x40008d9	      0xe800000000	                          call 0x40008de	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x40008de	            0x89c5	                            mov ebp, eax	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x40008e0	            0xeb0c	                           jmp 0x40008ee	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x40008e2	        0x488d5001	                      lea rdx, [rax + 1]	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x40008e6	      0x4889542408	                mov qword [rsp + 8], rdx	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x40008eb	           0xfb628	                   movzx ebp, byte [rax]	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x40008ee	            0x85db	                           test ebx, ebx	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40008f0	            0x741f	                            je 0x4000911	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40008f2	          0x83fd1f	                           cmp ebp, 0x1f	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40008f5	           0xf9ec2	                                setle dl	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40008f8	          0x83fd09	                              cmp ebp, 9	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40008fb	           0xf95c0	                                setne al	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40008fe	            0x84c2	                             test dl, al	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4000900	            0x7505	                           jne 0x4000907	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4000902	          0x83fd7f	                           cmp ebp, 0x7f	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4000905	            0x750a	                           jne 0x4000911	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4000907	      0xbf16000000	                           mov edi, 0x16	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x400090c	      0xe800000000	                          call 0x4000911	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x4000911	            0x89ef	                            mov edi, ebp	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4000913	      0xe800000000	                          call 0x4000918	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4000918	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1470	ops.c	FUNCTION_27	WHILE_1
0x400091d	          0x803f00	                       cmp byte [rdi], 0	      1470	ops.c	FUNCTION_27	WHILE_1
0x4000920	     0xf8576ffffff	                           jne 0x400089c	      1470	ops.c	FUNCTION_27	WHILE_1
0x4000926	        0x4883c418	                           add rsp, 0x18	      1500	ops.c	FUNCTION_27
0x400092a	              0x5b	                                 pop rbx	      1500	ops.c	FUNCTION_27
0x400092b	              0x5d	                                 pop rbp	      1500	ops.c	FUNCTION_27
0x400092c	              0xc3	                                     ret	      1500	ops.c	FUNCTION_27
set_expr_line	CALL,1:ELSE,0:WHILE,0:FOR,0:functions,0:IF,0:SWITCH,0:DO,0	7
0x40020ff	              0x53	                                push rbx	       813	ops.c	FUNCTION_11
0x4002100	          0x4889fb	                            mov rbx, rdi	       813	ops.c	FUNCTION_11
0x4002103	    0x488b3d000000	            mov rdi, qword [0x0400210a] 	       814	ops.c	FUNCTION_11	CALL_1
0x400210a	      0xe800000000	                          call 0x400210f	       814	ops.c	FUNCTION_11	CALL_1
0x400210f	    0x48891d000000	            mov qword [0x04002116], rbx 	       815	ops.c	FUNCTION_11
0x4002116	              0x5b	                                 pop rbx	       816	ops.c	FUNCTION_11
0x4002117	              0xc3	                                     ret	       816	ops.c	FUNCTION_11
op_shift	CALL,19:ELSE,8:WHILE,0:FOR,1:functions,0:IF,13:SWITCH,0:DO,0	448
0x4004274	            0x4157	                                push r15	       231	ops.c	FUNCTION_5
0x4004276	            0x4156	                                push r14	       231	ops.c	FUNCTION_5
0x4004278	            0x4155	                                push r13	       231	ops.c	FUNCTION_5
0x400427a	            0x4154	                                push r12	       231	ops.c	FUNCTION_5
0x400427c	              0x55	                                push rbp	       231	ops.c	FUNCTION_5
0x400427d	              0x53	                                push rbx	       231	ops.c	FUNCTION_5
0x400427e	    0x4881eca80000	                           sub rsp, 0xa8	       231	ops.c	FUNCTION_5
0x4004285	          0x4989fd	                            mov r13, rdi	       231	ops.c	FUNCTION_5
0x4004288	        0x8974240c	              mov dword [rsp + 0xc], esi	       231	ops.c	FUNCTION_5
0x400428c	          0x4189d6	                           mov r14d, edx	       231	ops.c	FUNCTION_5
0x400428f	    0x64488b042528	                mov rax, qword fs:[0x28]	       231	ops.c	FUNCTION_5
0x4004298	    0x488984249800	             mov qword [rsp + 0x98], rax	       231	ops.c	FUNCTION_5
0x40042a0	            0x31c0	                            xor eax, eax	       231	ops.c	FUNCTION_5
0x40042a2	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40042a6	        0x488d7001	                      lea rsi, [rax + 1]	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40042aa	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40042ae	        0x488d78ff	                      lea rdi, [rax - 1]	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40042b2	      0xe800000000	                          call 0x40042b7	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40042b7	            0x85c0	                           test eax, eax	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40042b9	     0xf84b5060000	                            je 0x4004974	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40042bf	    0xc74424180000	               mov dword [rsp + 0x18], 0	       235	ops.c	FUNCTION_5
0x40042c7	      0x41837d6000	               cmp dword [r13 + 0x60], 0	       241	ops.c	FUNCTION_5	IF_2
0x40042cc	            0x740e	                            je 0x40042dc	       241	ops.c	FUNCTION_5	IF_2
0x40042ce	    0x488b05000000	            mov rax, qword [0x040042d5] 	       242	ops.c	FUNCTION_5	IF_2
0x40042d5	          0x8b4040	            mov eax, dword [rax + 0x40] 	       242	ops.c	FUNCTION_5	IF_2
0x40042d8	        0x89442418	             mov dword [rsp + 0x18], eax	       242	ops.c	FUNCTION_5	IF_2
0x40042dc	        0x4d8b7d50	            mov r15, qword [r13 + 0x50] 	       244	ops.c	FUNCTION_5	FOR_1
0x40042e0	        0x4983ef01	                              sub r15, 1	       244	ops.c	FUNCTION_5	FOR_1
0x40042e4	     0xf886c040000	                            js 0x4004756	       244	ops.c	FUNCTION_5	FOR_1
0x40042ea	      0x488d442460	                   lea rax, [rsp + 0x60]	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x40042ef	      0x4889442410	             mov qword [rsp + 0x10], rax	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x40042f4	      0xe800000000	                          call 0x40042f9	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x40042f9	           0xfb600	                   movzx eax, byte [rax]	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x40042fc	            0x85c0	                           test eax, eax	       247	ops.c	FUNCTION_5	FOR_1	IF_3
0x40042fe	            0x7513	                           jne 0x4004313	       247	ops.c	FUNCTION_5	FOR_1	IF_3
0x4004300	    0x488b05000000	            mov rax, qword [0x04004307] 	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x4004307	    0xc74040000000	               mov dword [rax + 0x40], 0	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x400430e	      0xe929040000	                           jmp 0x400473c	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x4004313	      0x41837d6000	               cmp dword [r13 + 0x60], 0	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4004318	     0xf84f0030000	                            je 0x400470e	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x400431e	        0x458b6500	                   mov r12d, dword [r13]	       382	ops.c	FUNCTION_7
0x4004322	    0x8b0500000000	            mov eax, dword [0x04004328] 	       383	ops.c	FUNCTION_7
0x4004328	        0x8944241c	             mov dword [rsp + 0x1c], eax	       383	ops.c	FUNCTION_7
0x400432c	    0x488b05000000	            mov rax, qword [0x04004333] 	       386	ops.c	FUNCTION_7
0x4004333	          0x8b4040	            mov eax, dword [rax + 0x40] 	       386	ops.c	FUNCTION_7
0x4004336	        0x89442420	             mov dword [rsp + 0x20], eax	       386	ops.c	FUNCTION_7
0x400433a	    0x488b3d000000	            mov rdi, qword [0x04004341] 	       387	ops.c	FUNCTION_7	CALL_1
0x4004341	      0xe800000000	                          call 0x4004346	       387	ops.c	FUNCTION_7	CALL_1
0x4004346	          0x4889c5	                            mov rbp, rax	       387	ops.c	FUNCTION_7	CALL_1
0x4004349	    0x488b05000000	            mov rax, qword [0x04004350] 	       388	ops.c	FUNCTION_7
0x4004350	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	       388	ops.c	FUNCTION_7
0x4004357	      0x4889442428	             mov qword [rsp + 0x28], rax	       388	ops.c	FUNCTION_7
0x400435c	    0x8b0500000000	            mov eax, dword [0x04004362] 	       395	ops.c	FUNCTION_7
0x4004362	        0x89442424	             mov dword [rsp + 0x24], eax	       395	ops.c	FUNCTION_7
0x4004366	    0xc70500000000	               mov dword [0x04004370], 0	       397	ops.c	FUNCTION_7
0x4004370	    0xc70500000000	           mov dword [0x0400437a], 0x10 	       400	ops.c	FUNCTION_7
0x400437a	    0x488b05000000	            mov rax, qword [0x04004381] 	       401	ops.c	FUNCTION_7	CALL_2
0x4004381	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       401	ops.c	FUNCTION_7	CALL_2
0x4004385	      0xb901000000	                              mov ecx, 1	       401	ops.c	FUNCTION_7	CALL_2
0x400438a	      0x488d742450	                   lea rsi, [rsp + 0x50]	       401	ops.c	FUNCTION_7	CALL_2
0x400438f	          0x4c89ef	                            mov rdi, r13	       401	ops.c	FUNCTION_7	CALL_2
0x4004392	      0xe8e9bcffff	                     call sym.block_prep	       401	ops.c	FUNCTION_7	CALL_2
0x4004397	      0x837c247400	               cmp dword [rsp + 0x74], 0	       402	ops.c	FUNCTION_7	IF_1
0x400439c	     0xf859a030000	                           jne 0x400473c	       402	ops.c	FUNCTION_7	IF_1
0x40043a2	          0x4489f3	                           mov ebx, r14d	       406	ops.c	FUNCTION_7
0x40043a5	           0xfafdd	                           imul ebx, ebp	       406	ops.c	FUNCTION_7
0x40043a8	            0x89d8	                            mov eax, ebx	       407	ops.c	FUNCTION_7	IF_2
0x40043aa	              0x99	                                     cdq	       407	ops.c	FUNCTION_7	IF_2
0x40043ab	            0xf7fd	                                idiv ebp	       407	ops.c	FUNCTION_7	IF_2
0x40043ad	          0x4139c6	                           cmp r14d, eax	       407	ops.c	FUNCTION_7	IF_2
0x40043b0	     0xf8586030000	                           jne 0x400473c	       407	ops.c	FUNCTION_7	IF_2
0x40043b6	      0xe800000000	                          call 0x40043bb	       410	ops.c	FUNCTION_7	CALL_3
0x40043bb	      0x4889442430	             mov qword [rsp + 0x30], rax	       410	ops.c	FUNCTION_7	CALL_3
0x40043c0	        0x4183fc04	                             cmp r12d, 4	       412	ops.c	FUNCTION_7	IF_3
0x40043c4	     0xf8482010000	                            je 0x400454c	       412	ops.c	FUNCTION_7	IF_3
0x40043ca	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	       420	ops.c	FUNCTION_7	IF_3
0x40043d1	             0x1c3	                            add ebx, eax	       420	ops.c	FUNCTION_7	IF_3
0x40043d3	      0x448b64246c	           mov r12d, dword [rsp + 0x6c] 	       421	ops.c	FUNCTION_7	IF_3
0x40043d8	          0x4129c4	                           sub r12d, eax	       421	ops.c	FUNCTION_7	IF_3
0x40043db	      0x837c245000	               cmp dword [rsp + 0x50], 0	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x40043e0	            0x7437	                            je 0x4004419	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x40043e2	    0x833d00000000	               cmp dword [0x040043e9], 0	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x40043e9	            0x7428	                            je 0x4004413	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x40043eb	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x40043f0	    0xff1500000000	                 call qword [0x040043f6]	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x40043f6	          0x83f801	                              cmp eax, 1	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x40043f9	            0x7508	                           jne 0x4004403	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x40043fb	    0x488344246001	               add qword [rsp + 0x60], 1	       428	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4004401	            0xeb16	                           jmp 0x4004419	       428	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4004403	    0xc74424500000	               mov dword [rsp + 0x50], 0	       432	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x400440b	    0x41bc00000000	                             mov r12d, 0	       431	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x4004411	            0xeb06	                           jmp 0x4004419	       431	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x4004413	    0x488344246001	               add qword [rsp + 0x60], 1	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4004419	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400441e	           0xfb607	                   movzx eax, byte [rdi]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004421	            0x3c20	                            cmp al, 0x20	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004423	            0x7404	                            je 0x4004429	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004425	            0x3c09	                               cmp al, 9	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004427	            0x7524	                           jne 0x400444d	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004429	        0x8b54246c	            mov edx, dword [rsp + 0x6c] 	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x400442d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4004432	      0xe800000000	                          call 0x4004437	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4004437	             0x1c3	                            add ebx, eax	       444	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4004439	         0x144246c	             add dword [rsp + 0x6c], eax	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x400443d	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004442	           0xfb607	                   movzx eax, byte [rdi]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004445	            0x3c20	                            cmp al, 0x20	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004447	            0x74e0	                            je 0x4004429	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4004449	            0x3c09	                               cmp al, 9	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400444b	            0x74dc	                            je 0x4004429	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400444d	      0xbd00000000	                              mov ebp, 0	       392	ops.c	FUNCTION_7
0x4004452	    0x488b05000000	            mov rax, qword [0x04004459] 	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4004459	    0x83b878140000	             cmp dword [rax + 0x1478], 0	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4004460	            0x751f	                           jne 0x4004481	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4004462	        0x8b742428	            mov esi, dword [rsp + 0x28] 	       388	ops.c	FUNCTION_7
0x4004466	          0x4489e0	                           mov eax, r12d	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004469	              0x99	                                     cdq	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x400446a	            0xf7fe	                                idiv esi	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x400446c	          0x8d0c1a	                    lea ecx, [rdx + rbx]	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x400446f	            0x89c8	                            mov eax, ecx	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004471	              0x99	                                     cdq	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004472	            0xf7fe	                                idiv esi	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004474	            0x89c5	                            mov ebp, eax	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4004476	            0x85c0	                           test eax, eax	       451	ops.c	FUNCTION_7	IF_3	IF_8
0x4004478	            0x7407	                            je 0x4004481	       451	ops.c	FUNCTION_7	IF_3	IF_8
0x400447a	            0x89c8	                            mov eax, ecx	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x400447c	              0x99	                                     cdq	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x400447d	            0xf7fe	                                idiv esi	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x400447f	            0x89d3	                            mov ebx, edx	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x4004481	      0x837c245000	               cmp dword [rsp + 0x50], 0	       456	ops.c	FUNCTION_7	IF_3
0x4004486	           0xf95c2	                                setne dl	       456	ops.c	FUNCTION_7	IF_3
0x4004489	           0xfb6d2	                           movzx edx, dl	       456	ops.c	FUNCTION_7	IF_3
0x400448c	    0x2b9424840000	             sub edx, dword [rsp + 0x84]	       456	ops.c	FUNCTION_7	IF_3
0x4004493	         0x3542468	             add edx, dword [rsp + 0x68]	       456	ops.c	FUNCTION_7	IF_3
0x4004497	        0x89542468	             mov dword [rsp + 0x68], edx	       456	ops.c	FUNCTION_7	IF_3
0x400449b	      0xb800000000	                              mov eax, 0	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x40044a0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x40044a7	            0xf2ae	              repne scasb al, byte [rdi]	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x40044a9	            0x89c8	                            mov eax, ecx	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x40044ab	            0xf7d0	                                 not eax	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x40044ad	          0x8d3c2a	                    lea edi, [rdx + rbp]	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40044b0	             0x1df	                            add edi, ebx	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40044b2	        0x89442428	             mov dword [rsp + 0x28], eax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40044b6	             0x1c7	                            add edi, eax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40044b8	      0xe800000000	                          call 0x40044bd	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40044bd	          0x4989c4	                            mov r12, rax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40044c0	          0x4885c0	                           test rax, rax	       459	ops.c	FUNCTION_7	IF_3	IF_9
0x40044c3	     0xf8473020000	                            je 0x400473c	       459	ops.c	FUNCTION_7	IF_3	IF_9
0x40044c9	            0x89ea	                            mov edx, ebp	        90	string3.h	FUNCTION_95	CALL_6
0x40044cb	         0x3542468	             add edx, dword [rsp + 0x68]	        90	string3.h	FUNCTION_95	CALL_6
0x40044cf	             0x1da	                            add edx, ebx	        90	string3.h	FUNCTION_95	CALL_6
0x40044d1	         0x3542428	             add edx, dword [rsp + 0x28]	        90	string3.h	FUNCTION_95	CALL_6
0x40044d5	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x40044d8	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_95	CALL_6
0x40044dd	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_95	CALL_6
0x40044e0	      0xe800000000	                          call 0x40044e5	        90	string3.h	FUNCTION_95	CALL_6
0x40044e5	      0x4863542468	         movsxd rdx, dword [rsp + 0x68] 	        59	string3.h	FUNCTION_93	CALL_3
0x40044ea	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        59	string3.h	FUNCTION_93	CALL_3
0x40044ef	          0x4c89e7	                            mov rdi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x40044f2	      0xe800000000	                          call 0x40044f7	        59	string3.h	FUNCTION_93	CALL_3
0x40044f7	          0x4863ed	                         movsxd rbp, ebp	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40044fa	      0x48637c2468	         movsxd rdi, dword [rsp + 0x68] 	        90	string3.h	FUNCTION_95	CALL_6
0x40044ff	          0x4c01e7	                            add rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x4004502	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4004505	      0xbe09000000	                              mov esi, 9	        90	string3.h	FUNCTION_95	CALL_6
0x400450a	      0xe800000000	                          call 0x400450f	        90	string3.h	FUNCTION_95	CALL_6
0x400450f	          0x4863db	                         movsxd rbx, ebx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x4004512	      0x48637c2468	         movsxd rdi, dword [rsp + 0x68] 	        90	string3.h	FUNCTION_95	CALL_6
0x4004517	          0x4801ef	                            add rdi, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x400451a	          0x4c01e7	                            add rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x400451d	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_95	CALL_6
0x4004520	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4004525	      0xe800000000	                          call 0x400452a	        90	string3.h	FUNCTION_95	CALL_6
0x400452a	      0x4863542428	         movsxd rdx, dword [rsp + 0x28] 	        59	string3.h	FUNCTION_93	CALL_3
0x400452f	      0x48637c2468	         movsxd rdi, dword [rsp + 0x68] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004534	          0x4801eb	                            add rbx, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x4004537	          0x4801df	                            add rdi, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x400453a	          0x4c01e7	                            add rdi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x400453d	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	        59	string3.h	FUNCTION_93	CALL_3
0x4004542	      0xe800000000	                          call 0x4004547	        59	string3.h	FUNCTION_93	CALL_3
0x4004547	      0xe972010000	                           jmp 0x40046be	        59	string3.h	FUNCTION_93	CALL_3
0x400454c	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       481	ops.c	FUNCTION_7	ELSE_4
0x4004551	      0x48897c2448	             mov qword [rsp + 0x48], rdi	       481	ops.c	FUNCTION_7	ELSE_4
0x4004556	      0x837c245000	               cmp dword [rsp + 0x50], 0	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x400455b	            0x741b	                            je 0x4004578	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x400455d	      0xb801000000	                              mov eax, 1	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4004562	    0x833d00000000	               cmp dword [0x04004569], 0	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4004569	            0x7406	                            je 0x4004571	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400456b	    0xff1500000000	                 call qword [0x04004571]	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4004571	            0x4898	                                    cdqe	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4004573	      0x4801442448	            add qword [rsp + 0x48], rax 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4004578	        0x8b6c246c	            mov ebp, dword [rsp + 0x6c] 	       499	ops.c	FUNCTION_7	ELSE_4
0x400457c	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004581	           0xfb600	                   movzx eax, byte [rax]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004584	            0x3c20	                            cmp al, 0x20	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004586	            0x7404	                            je 0x400458c	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4004588	            0x3c09	                               cmp al, 9	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x400458a	            0x7523	                           jne 0x40045af	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x400458c	            0x89ea	                            mov edx, ebp	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x400458e	      0x488d742448	                   lea rsi, [rsp + 0x48]	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x4004593	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x4004598	      0xe800000000	                          call 0x400459d	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x400459d	             0x1c5	                            add ebp, eax	       504	ops.c	FUNCTION_7	ELSE_4	WHILE_1
0x400459f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40045a4	           0xfb600	                   movzx eax, byte [rax]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40045a7	            0x3c20	                            cmp al, 0x20	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40045a9	            0x74e1	                            je 0x400458c	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40045ab	            0x3c09	                               cmp al, 9	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40045ad	            0x74dd	                            je 0x400458c	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40045af	            0x89e8	                            mov eax, ebp	       514	ops.c	FUNCTION_7	ELSE_4
0x40045b1	        0x412b4564	             sub eax, dword [r13 + 0x64]	       514	ops.c	FUNCTION_7	ELSE_4
0x40045b5	            0x4898	                                    cdqe	       514	ops.c	FUNCTION_7	ELSE_4
0x40045b7	          0x4863db	                         movsxd rbx, ebx	       514	ops.c	FUNCTION_7	ELSE_4
0x40045ba	          0x4839d8	                            cmp rax, rbx	       514	ops.c	FUNCTION_7	ELSE_4
0x40045bd	        0x480f46d8	                         cmovbe rbx, rax	       514	ops.c	FUNCTION_7	ELSE_4
0x40045c1	            0x29dd	                            sub ebp, ebx	       514	ops.c	FUNCTION_7	ELSE_4
0x40045c3	        0x896c2428	             mov dword [rsp + 0x28], ebp	       514	ops.c	FUNCTION_7	ELSE_4
0x40045c7	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	       518	ops.c	FUNCTION_7	ELSE_4
0x40045cc	        0x8b6c246c	            mov ebp, dword [rsp + 0x6c] 	       519	ops.c	FUNCTION_7	ELSE_4
0x40045d0	      0x837c245000	               cmp dword [rsp + 0x50], 0	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0x40045d5	            0x7407	                            je 0x40045de	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0x40045d7	    0x2bac248c0000	             sub ebp, dword [rsp + 0x8c]	       525	ops.c	FUNCTION_7	ELSE_4	IF_11
0x40045de	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x40045e2	            0x39c5	                            cmp ebp, eax	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x40045e4	            0x7d47	                           jge 0x400462d	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x40045e6	      0x4c897c2438	             mov qword [rsp + 0x38], r15	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x40045eb	          0x4189c7	                           mov r15d, eax	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x40045ee	            0x89ea	                            mov edx, ebp	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x40045f0	          0x4c89e6	                            mov rsi, r12	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x40045f3	          0x4c89e7	                            mov rdi, r12	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x40045f6	      0xe800000000	                          call 0x40045fb	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x40045fb	          0x8d1c28	                    lea ebx, [rax + rbp]	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x40045fe	          0x4139df	                           cmp r15d, ebx	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4004601	            0x7c2e	                            jl 0x4004631	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4004603	      0xb801000000	                              mov eax, 1	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004608	    0x833d00000000	               cmp dword [0x0400460f], 0	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x400460f	            0x7409	                            je 0x400461a	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004611	          0x4c89e7	                            mov rdi, r12	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4004614	    0xff1500000000	                 call qword [0x0400461a]	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x400461a	            0x4898	                                    cdqe	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x400461c	          0x4901c4	                            add r12, rax	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x400461f	            0x89dd	                            mov ebp, ebx	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4004621	          0x4139df	                           cmp r15d, ebx	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004624	            0x7fc8	                            jg 0x40045ee	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004626	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x400462b	            0xeb0b	                           jmp 0x4004638	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x400462d	            0x89eb	                            mov ebx, ebp	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x400462f	            0xeb07	                           jmp 0x4004638	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004631	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4004636	            0x89eb	                            mov ebx, ebp	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4004638	        0x8b6c2428	            mov ebp, dword [rsp + 0x28] 	       542	ops.c	FUNCTION_7	ELSE_4
0x400463c	            0x29dd	                            sub ebp, ebx	       542	ops.c	FUNCTION_7	ELSE_4
0x400463e	          0x4c89e3	                            mov rbx, r12	       548	ops.c	FUNCTION_7	ELSE_4
0x4004641	      0x482b5c2430	             sub rbx, qword [rsp + 0x30]	       548	ops.c	FUNCTION_7	ELSE_4
0x4004646	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x400464b	      0xb800000000	                              mov eax, 0	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x4004650	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x4004657	            0xf2ae	              repne scasb al, byte [rdi]	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x4004659	            0x89c8	                            mov eax, ecx	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x400465b	            0xf7d0	                                 not eax	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x400465d	          0x8d3c28	                    lea edi, [rax + rbp]	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4004660	             0x1df	                            add edi, ebx	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4004662	      0xe800000000	                          call 0x4004667	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4004667	          0x4989c4	                            mov r12, rax	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x400466a	          0x4885c0	                           test rax, rax	       553	ops.c	FUNCTION_7	ELSE_4	IF_13
0x400466d	     0xf84c9000000	                            je 0x400473c	       553	ops.c	FUNCTION_7	ELSE_4	IF_13
0x4004673	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4004676	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        59	string3.h	FUNCTION_93	CALL_3
0x400467b	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x400467e	      0xe800000000	                          call 0x4004683	        59	string3.h	FUNCTION_93	CALL_3
0x4004683	            0x89ed	                            mov ebp, ebp	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4004685	        0x498d3c1c	                    lea rdi, [r12 + rbx]	        90	string3.h	FUNCTION_95	CALL_6
0x4004689	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x400468c	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4004691	      0xe800000000	                          call 0x4004696	        90	string3.h	FUNCTION_95	CALL_6
0x4004696	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x400469b	      0xb800000000	                              mov eax, 0	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x40046a0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x40046a7	          0x4889f7	                            mov rdi, rsi	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x40046aa	            0xf2ae	              repne scasb al, byte [rdi]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x40046ac	          0x48f7d1	                                 not rcx	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x40046af	          0x4889ca	                            mov rdx, rcx	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x40046b2	          0x4801dd	                            add rbp, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x40046b5	        0x498d3c2c	                    lea rdi, [r12 + rbp]	        59	string3.h	FUNCTION_93	CALL_3
0x40046b9	      0xe800000000	                          call 0x40046be	        59	string3.h	FUNCTION_93	CALL_3
0x40046be	    0x488b05000000	            mov rax, qword [0x040046c5] 	       560	ops.c	FUNCTION_7	CALL_23
0x40046c5	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       560	ops.c	FUNCTION_7	CALL_23
0x40046c9	      0xba00000000	                              mov edx, 0	       560	ops.c	FUNCTION_7	CALL_23
0x40046ce	          0x4c89e6	                            mov rsi, r12	       560	ops.c	FUNCTION_7	CALL_23
0x40046d1	      0xe800000000	                          call 0x40046d6	       560	ops.c	FUNCTION_7	CALL_23
0x40046d6	    0x488b05000000	            mov rax, qword [0x040046dd] 	       561	ops.c	FUNCTION_7	CALL_24
0x40046dd	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       561	ops.c	FUNCTION_7	CALL_24
0x40046e1	        0x8b742468	            mov esi, dword [rsp + 0x68] 	       561	ops.c	FUNCTION_7	CALL_24
0x40046e5	      0xe800000000	                          call 0x40046ea	       561	ops.c	FUNCTION_7	CALL_24
0x40046ea	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       562	ops.c	FUNCTION_7
0x40046ee	    0x890500000000	            mov dword [0x040046f4], eax 	       562	ops.c	FUNCTION_7
0x40046f4	    0x488b05000000	            mov rax, qword [0x040046fb] 	       563	ops.c	FUNCTION_7
0x40046fb	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       563	ops.c	FUNCTION_7
0x40046ff	          0x894840	             mov dword [rax + 0x40], ecx	       563	ops.c	FUNCTION_7
0x4004702	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       565	ops.c	FUNCTION_7
0x4004706	    0x890500000000	            mov dword [0x0400470c], eax 	       565	ops.c	FUNCTION_7
0x400470c	            0xeb2e	                           jmp 0x400473c	       565	ops.c	FUNCTION_7
0x400470e	          0x83f823	                           cmp eax, 0x23	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4004711	            0x7509	                           jne 0x400471c	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4004713	      0xe800000000	                          call 0x4004718	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4004718	            0x85c0	                           test eax, eax	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x400471a	            0x7520	                           jne 0x400473c	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x400471c	      0x41837d0004	                      cmp dword [r13], 4	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4004721	        0x400f94c7	                                sete dil	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4004725	        0x400fb6ff	                          movzx edi, dil	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4004729	      0xb900000000	                              mov ecx, 0	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x400472e	          0x4489f2	                           mov edx, r14d	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4004731	    0x8b3500000000	            mov esi, dword [0x04004737] 	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4004737	      0xe800000000	                          call 0x400473c	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x400473c	    0x488b05000000	            mov rax, qword [0x04004743] 	       262	ops.c	FUNCTION_5	FOR_1
0x4004743	      0x4883403801	               add qword [rax + 0x38], 1	       262	ops.c	FUNCTION_5	FOR_1
0x4004748	        0x4983ef01	                              sub r15, 1	       244	ops.c	FUNCTION_5	FOR_1
0x400474c	        0x4983ffff	             cmp r15, 0xffffffffffffffff	       244	ops.c	FUNCTION_5	FOR_1
0x4004750	     0xf859efbffff	                           jne 0x40042f4	       244	ops.c	FUNCTION_5	FOR_1
0x4004756	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       265	ops.c	FUNCTION_5	CALL_6
0x400475a	        0x488d5001	                      lea rdx, [rax + 1]	       265	ops.c	FUNCTION_5	CALL_6
0x400475e	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	       265	ops.c	FUNCTION_5	CALL_6
0x4004762	      0xb900000000	                              mov ecx, 0	       265	ops.c	FUNCTION_5	CALL_6
0x4004767	      0xbe00000000	                              mov esi, 0	       265	ops.c	FUNCTION_5	CALL_6
0x400476c	      0xe800000000	                          call 0x4004771	       265	ops.c	FUNCTION_5	CALL_6
0x4004771	      0x41837d6000	               cmp dword [r13 + 0x60], 0	       266	ops.c	FUNCTION_5	IF_6
0x4004776	            0x7418	                            je 0x4004790	       266	ops.c	FUNCTION_5	IF_6
0x4004778	    0x488b05000000	            mov rax, qword [0x0400477f] 	       268	ops.c	FUNCTION_5	IF_6
0x400477f	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	       268	ops.c	FUNCTION_5	IF_6
0x4004783	        0x48895038	             mov qword [rax + 0x38], rdx	       268	ops.c	FUNCTION_5	IF_6
0x4004787	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       269	ops.c	FUNCTION_5	IF_6
0x400478b	          0x894840	             mov dword [rax + 0x40], ecx	       269	ops.c	FUNCTION_5	IF_6
0x400478e	            0xeb2e	                           jmp 0x40047be	       269	ops.c	FUNCTION_5	IF_6
0x4004790	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x4004795	            0x741b	                            je 0x40047b2	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x4004797	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x400479b	    0x488b05000000	            mov rax, qword [0x040047a2] 	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40047a2	        0x48895038	             mov qword [rax + 0x38], rdx	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40047a6	      0xbf06000000	                              mov edi, 6	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x40047ab	      0xe800000000	                          call 0x40047b0	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x40047b0	            0xeb0c	                           jmp 0x40047be	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x40047b2	    0x488b05000000	            mov rax, qword [0x040047b9] 	       277	ops.c	FUNCTION_5	ELSE_4
0x40047b9	      0x4883683801	               sub qword [rax + 0x38], 1	       277	ops.c	FUNCTION_5	ELSE_4
0x40047be	      0xe800000000	                          call 0x40047c3	       281	ops.c	FUNCTION_5	CALL_8
0x40047c3	        0x498b5d50	            mov rbx, qword [r13 + 0x50] 	       285	ops.c	FUNCTION_5	IF_8
0x40047c7	    0x483b1d000000	            cmp rbx, qword [0x040047ce] 	       285	ops.c	FUNCTION_5	IF_8
0x40047ce	     0xf8e34010000	                           jle 0x4004908	       285	ops.c	FUNCTION_5	IF_8
0x40047d4	      0x41837d0005	                      cmp dword [r13], 5	       290	ops.c	FUNCTION_5	IF_8	ELSE_5
0x40047d9	      0xb800000000	                              mov eax, 0	       290	ops.c	FUNCTION_5	IF_8	ELSE_5
0x40047de	    0x41b900000000	                              mov r9d, 0	       290	ops.c	FUNCTION_5	IF_8	ELSE_5
0x40047e4	        0x490f44c1	                           cmove rax, r9	       290	ops.c	FUNCTION_5	IF_8	ELSE_5
0x40047e8	          0x4889c5	                            mov rbp, rax	       290	ops.c	FUNCTION_5	IF_8	ELSE_5
0x40047eb	        0x4883fb01	                              cmp rbx, 1	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x40047ef	     0xf8581000000	                           jne 0x4004876	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x40047f5	        0x4183fe01	                             cmp r14d, 1	       293	ops.c	FUNCTION_5	IF_8	IF_10	IF_11
0x40047f9	            0x753c	                           jne 0x4004837	       293	ops.c	FUNCTION_5	IF_8	IF_10	IF_11
0x40047fb	      0xba05000000	                              mov edx, 5	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x4004800	      0xbe00000000	                              mov esi, 0	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x4004805	      0xbf00000000	                              mov edi, 0	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x400480a	      0xe800000000	                          call 0x400480f	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x400480f	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004812	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004815	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_107	CALL_2
0x400481c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004821	    0x488b3d000000	            mov rdi, qword [0x04004828] 	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004828	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_107	CALL_2
0x400482d	      0xe800000000	                          call 0x4004832	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004832	      0xe9c5000000	                           jmp 0x40048fc	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004837	      0xba05000000	                              mov edx, 5	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x400483c	      0xbe00000000	                              mov esi, 0	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x4004841	      0xbf00000000	                              mov edi, 0	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x4004846	      0xe800000000	                          call 0x400484b	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x400484b	          0x4589f1	                           mov r9d, r14d	        33	stdio2.h	FUNCTION_107	CALL_2
0x400484e	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004851	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004854	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_107	CALL_2
0x400485b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004860	    0x488b3d000000	            mov rdi, qword [0x04004867] 	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004867	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_107	CALL_2
0x400486c	      0xe800000000	                          call 0x4004871	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004871	      0xe986000000	                           jmp 0x40048fc	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004876	        0x4183fe01	                             cmp r14d, 1	       300	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12
0x400487a	            0x753c	                           jne 0x40048b8	       300	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12
0x400487c	      0xba05000000	                              mov edx, 5	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x4004881	      0xbe00000000	                              mov esi, 0	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x4004886	      0xbf00000000	                              mov edi, 0	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x400488b	      0xe800000000	                          call 0x4004890	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x4004890	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004893	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004896	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_107	CALL_2
0x4004899	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048a0	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048a5	    0x488b3d000000	            mov rdi, qword [0x040048ac] 	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048ac	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048b1	      0xe800000000	                          call 0x40048b6	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048b6	            0xeb44	                           jmp 0x40048fc	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048b8	      0xba05000000	                              mov edx, 5	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40048bd	      0xbe00000000	                              mov esi, 0	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40048c2	      0xbf00000000	                              mov edi, 0	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40048c7	      0xe800000000	                          call 0x40048cc	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40048cc	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048d0	            0x4156	                                push r14	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048d2	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048d5	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048d8	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048db	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048e2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048e7	    0x488b3d000000	            mov rdi, qword [0x040048ee] 	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048ee	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048f3	      0xe800000000	                          call 0x40048f8	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048f8	        0x4883c410	                           add rsp, 0x10	        33	stdio2.h	FUNCTION_107	CALL_2
0x40048fc	    0x488b3d000000	            mov rdi, qword [0x04004903] 	       307	ops.c	FUNCTION_5	IF_8	CALL_17
0x4004903	      0xe800000000	                          call 0x4004908	       307	ops.c	FUNCTION_5	IF_8	CALL_17
0x4004908	    0x488b1d000000	            mov rbx, qword [0x0400490f] 	       313	ops.c	FUNCTION_5
0x400490f	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       313	ops.c	FUNCTION_5
0x4004913	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	       313	ops.c	FUNCTION_5
0x4004917	    0x488983e01100	          mov qword [rbx + 0x11e0], rax 	       313	ops.c	FUNCTION_5
0x400491e	    0x488993e81100	          mov qword [rbx + 0x11e8], rdx 	       313	ops.c	FUNCTION_5
0x4004925	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       314	ops.c	FUNCTION_5
0x4004929	    0x488983001200	          mov qword [rbx + 0x1200], rax 	       314	ops.c	FUNCTION_5
0x4004930	        0x498b7d30	            mov rdi, qword [r13 + 0x30] 	       315	ops.c	FUNCTION_5	CALL_19
0x4004934	      0xe800000000	                          call 0x4004939	       315	ops.c	FUNCTION_5	CALL_19
0x4004939	          0x4889c7	                            mov rdi, rax	       315	ops.c	FUNCTION_5	CALL_19
0x400493c	      0xb800000000	                              mov eax, 0	       315	ops.c	FUNCTION_5	CALL_19
0x4004941	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       315	ops.c	FUNCTION_5	CALL_19
0x4004948	            0xf2ae	              repne scasb al, byte [rdi]	       315	ops.c	FUNCTION_5	CALL_19
0x400494a	          0x4889c8	                            mov rax, rcx	       315	ops.c	FUNCTION_5	CALL_19
0x400494d	          0x48f7d0	                                 not rax	       315	ops.c	FUNCTION_5	CALL_19
0x4004950	        0x4883e801	                              sub rax, 1	       315	ops.c	FUNCTION_5	CALL_19
0x4004954	    0x898308120000	          mov dword [rbx + 0x1208], eax 	       315	ops.c	FUNCTION_5	CALL_19
0x400495a	    0x488b15000000	            mov rdx, qword [0x04004961] 	       316	ops.c	FUNCTION_5	IF_13
0x4004961	    0x8b8208120000	          mov eax, dword [rdx + 0x1208] 	       316	ops.c	FUNCTION_5	IF_13
0x4004967	            0x85c0	                           test eax, eax	       316	ops.c	FUNCTION_5	IF_13
0x4004969	            0x7e09	                           jle 0x4004974	       316	ops.c	FUNCTION_5	IF_13
0x400496b	          0x83e801	                              sub eax, 1	       317	ops.c	FUNCTION_5	IF_13
0x400496e	    0x898208120000	          mov dword [rdx + 0x1208], eax 	       317	ops.c	FUNCTION_5	IF_13
0x4004974	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       318	ops.c	FUNCTION_5
0x400497c	    0x644833042528	                xor rax, qword fs:[0x28]	       318	ops.c	FUNCTION_5
0x4004985	            0x7405	                            je 0x400498c	       318	ops.c	FUNCTION_5
0x4004987	      0xe800000000	                          call 0x400498c	       318	ops.c	FUNCTION_5
0x400498c	    0x4881c4a80000	                           add rsp, 0xa8	       318	ops.c	FUNCTION_5
0x4004993	              0x5b	                                 pop rbx	       318	ops.c	FUNCTION_5
0x4004994	              0x5d	                                 pop rbp	       318	ops.c	FUNCTION_5
0x4004995	            0x415c	                                 pop r12	       318	ops.c	FUNCTION_5
0x4004997	            0x415d	                                 pop r13	       318	ops.c	FUNCTION_5
0x4004999	            0x415e	                                 pop r14	       318	ops.c	FUNCTION_5
0x400499b	            0x415f	                                 pop r15	       318	ops.c	FUNCTION_5
0x400499d	              0xc3	                                     ret	       318	ops.c	FUNCTION_5
get_reg_type	CALL,3:ELSE,0:WHILE,0:FOR,0:functions,0:IF,3:SWITCH,1:DO,0	39
0x40095b0	              0x55	                                push rbp	      6762	ops.c	FUNCTION_80
0x40095b1	              0x53	                                push rbx	      6762	ops.c	FUNCTION_80
0x40095b2	        0x4883ec08	                              sub rsp, 8	      6762	ops.c	FUNCTION_80
0x40095b6	          0x83ff5f	                           cmp edi, 0x5f	      6763	ops.c	FUNCTION_80	SWITCH_1
0x40095b9	            0x7709	                            ja 0x40095c4	      6763	ops.c	FUNCTION_80	SWITCH_1
0x40095bb	            0x89f8	                            mov eax, edi	      6763	ops.c	FUNCTION_80	SWITCH_1
0x40095bd	    0xff24c5000000	                       jmp qword [rax*8]	      6763	ops.c	FUNCTION_80	SWITCH_1
0x40095c4	          0x4889f3	                            mov rbx, rsi	      6763	ops.c	FUNCTION_80	SWITCH_1
0x40095c7	      0xe800000000	                          call 0x40095cc	      6782	ops.c	FUNCTION_80	CALL_1
0x40095cc	            0x89c5	                            mov ebp, eax	      6782	ops.c	FUNCTION_80	CALL_1
0x40095ce	            0x85c0	                           test eax, eax	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x40095d0	            0x7417	                            je 0x40095e9	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x40095d2	      0xbe00000000	                              mov esi, 0	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x40095d7	            0x89c7	                            mov edi, eax	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x40095d9	      0xe800000000	                          call 0x40095de	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x40095de	            0x89c2	                            mov edx, eax	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x40095e0	      0xb8ffffffff	                     mov eax, 0xffffffff	      6786	ops.c	FUNCTION_80	IF_1
0x40095e5	            0x85d2	                           test edx, edx	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x40095e7	            0x743b	                            je 0x4009624	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x40095e9	      0xbe00000000	                              mov esi, 0	      6788	ops.c	FUNCTION_80	CALL_3
0x40095ee	            0x89ef	                            mov edi, ebp	      6788	ops.c	FUNCTION_80	CALL_3
0x40095f0	      0xe800000000	                          call 0x40095f5	      6788	ops.c	FUNCTION_80	CALL_3
0x40095f5	    0x488b15000000	            mov rdx, qword [0x040095fc] 	      6790	ops.c	FUNCTION_80	IF_2
0x40095fc	      0xb8ffffffff	                     mov eax, 0xffffffff	      6796	ops.c	FUNCTION_80
0x4009601	        0x48833a00	                      cmp qword [rdx], 0	      6790	ops.c	FUNCTION_80	IF_2
0x4009605	            0x741d	                            je 0x4009624	      6790	ops.c	FUNCTION_80	IF_2
0x4009607	          0x4885db	                           test rbx, rbx	      6792	ops.c	FUNCTION_80	IF_2	IF_3
0x400960a	            0x740d	                            je 0x4009619	      6792	ops.c	FUNCTION_80	IF_2	IF_3
0x400960c	        0x807a1002	                cmp byte [rdx + 0x10], 2	      6792	ops.c	FUNCTION_80	IF_2	IF_3
0x4009610	            0x7507	                           jne 0x4009619	      6792	ops.c	FUNCTION_80	IF_2	IF_3
0x4009612	        0x48634214	         movsxd rax, dword [rdx + 0x14] 	      6793	ops.c	FUNCTION_80	IF_2	IF_3
0x4009616	          0x488903	                    mov qword [rbx], rax	      6793	ops.c	FUNCTION_80	IF_2	IF_3
0x4009619	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	      6794	ops.c	FUNCTION_80	IF_2
0x400961d	            0xeb05	                           jmp 0x4009624	      6794	ops.c	FUNCTION_80	IF_2
0x400961f	      0xb800000000	                              mov eax, 0	      6778	ops.c	FUNCTION_80	SWITCH_1
0x4009624	        0x4883c408	                              add rsp, 8	      6797	ops.c	FUNCTION_80
0x4009628	              0x5b	                                 pop rbx	      6797	ops.c	FUNCTION_80
0x4009629	              0x5d	                                 pop rbp	      6797	ops.c	FUNCTION_80
0x400962a	              0xc3	                                     ret	      6797	ops.c	FUNCTION_80
skip_comment	CALL,2:ELSE,0:WHILE,2:FOR,0:functions,0:IF,7:SWITCH,0:DO,0	87
0x40049d5	            0x4155	                                push r13	      4453	ops.c	FUNCTION_54
0x40049d7	            0x4154	                                push r12	      4453	ops.c	FUNCTION_54
0x40049d9	              0x55	                                push rbp	      4453	ops.c	FUNCTION_54
0x40049da	              0x53	                                push rbx	      4453	ops.c	FUNCTION_54
0x40049db	        0x4883ec18	                           sub rsp, 0x18	      4453	ops.c	FUNCTION_54
0x40049df	          0x4889fb	                            mov rbx, rdi	      4453	ops.c	FUNCTION_54
0x40049e2	          0x4189f4	                           mov r12d, esi	      4453	ops.c	FUNCTION_54
0x40049e5	          0x4189d5	                           mov r13d, edx	      4453	ops.c	FUNCTION_54
0x40049e8	          0x4889cd	                            mov rbp, rcx	      4453	ops.c	FUNCTION_54
0x40049eb	    0x64488b042528	                mov rax, qword fs:[0x28]	      4453	ops.c	FUNCTION_54
0x40049f4	      0x4889442408	                mov qword [rsp + 8], rax	      4453	ops.c	FUNCTION_54
0x40049f9	            0x31c0	                            xor eax, eax	      4453	ops.c	FUNCTION_54
0x40049fb	    0x48c704240000	                      mov qword [rsp], 0	      4454	ops.c	FUNCTION_54
0x4004a03	          0x4889e6	                            mov rsi, rsp	      4456	ops.c	FUNCTION_54	CALL_1
0x4004a06	      0xe800000000	                          call 0x4004a0b	      4456	ops.c	FUNCTION_54	CALL_1
0x4004a0b	    0xc74500000000	                      mov dword [rbp], 0	      4458	ops.c	FUNCTION_54
0x4004a12	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4459	ops.c	FUNCTION_54	IF_1
0x4004a15	            0x743d	                            je 0x4004a54	      4459	ops.c	FUNCTION_54	IF_1
0x4004a17	        0x488b1424	                    mov rdx, qword [rsp]	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4004a1b	           0xfb602	                   movzx eax, byte [rdx]	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4004a1e	            0x84c0	                             test al, al	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4004a20	            0x742b	                            je 0x4004a4d	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4004a22	            0x3c65	                            cmp al, 0x65	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4004a24	            0x7423	                            je 0x4004a49	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4004a26	            0x3c3a	                            cmp al, 0x3a	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4004a28	            0x741f	                            je 0x4004a49	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4004a2a	        0x4883c201	                              add rdx, 1	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4004a2e	            0xeb0c	                           jmp 0x4004a3c	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4004a30	        0x4883c201	                              add rdx, 1	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4004a34	            0x3c65	                            cmp al, 0x65	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4004a36	            0x7411	                            je 0x4004a49	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4004a38	            0x3c3a	                            cmp al, 0x3a	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4004a3a	            0x740d	                            je 0x4004a49	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4004a3c	        0x48891424	                    mov qword [rsp], rdx	      4469	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4004a40	           0xfb602	                   movzx eax, byte [rdx]	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4004a43	            0x84c0	                             test al, al	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4004a45	            0x75e9	                           jne 0x4004a30	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4004a47	            0xeb04	                           jmp 0x4004a4d	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4004a49	            0x3c65	                            cmp al, 0x65	      4471	ops.c	FUNCTION_54	IF_1	IF_3
0x4004a4b	            0x7407	                            je 0x4004a54	      4471	ops.c	FUNCTION_54	IF_1	IF_3
0x4004a4d	    0xc74500010000	                      mov dword [rbp], 1	      4472	ops.c	FUNCTION_54	IF_1	IF_3
0x4004a54	          0x4585e4	                         test r12d, r12d	      4475	ops.c	FUNCTION_54	IF_4
0x4004a57	            0x745b	                            je 0x4004ab4	      4475	ops.c	FUNCTION_54	IF_4
0x4004a59	          0x4489e9	                           mov ecx, r13d	      4478	ops.c	FUNCTION_54	CALL_2
0x4004a5c	      0xba00000000	                              mov edx, 0	      4478	ops.c	FUNCTION_54	CALL_2
0x4004a61	          0x4889e6	                            mov rsi, rsp	      4478	ops.c	FUNCTION_54	CALL_2
0x4004a64	          0x4889df	                            mov rdi, rbx	      4478	ops.c	FUNCTION_54	CALL_2
0x4004a67	      0xe800000000	                          call 0x4004a6c	      4478	ops.c	FUNCTION_54	CALL_2
0x4004a6c	            0x85c0	                           test eax, eax	      4480	ops.c	FUNCTION_54	IF_5
0x4004a6e	            0x7444	                            je 0x4004ab4	      4480	ops.c	FUNCTION_54	IF_5
0x4004a70	        0x488b0c24	                    mov rcx, qword [rsp]	      4488	ops.c	FUNCTION_54	WHILE_2
0x4004a74	           0xfb611	                   movzx edx, byte [rcx]	      4488	ops.c	FUNCTION_54	WHILE_2
0x4004a77	            0x84d2	                             test dl, dl	      4488	ops.c	FUNCTION_54	WHILE_2
0x4004a79	            0x7434	                            je 0x4004aaf	      4488	ops.c	FUNCTION_54	WHILE_2
0x4004a7b	          0x80fa65	                            cmp dl, 0x65	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4004a7e	            0x7426	                            je 0x4004aa6	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4004a80	          0x80fa3a	                            cmp dl, 0x3a	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4004a83	            0x7421	                            je 0x4004aa6	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4004a85	        0x4883c101	                              add rcx, 1	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4004a89	            0xeb0e	                           jmp 0x4004a99	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4004a8b	        0x4883c101	                              add rcx, 1	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4004a8f	          0x80fa65	                            cmp dl, 0x65	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4004a92	            0x7412	                            je 0x4004aa6	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4004a94	          0x80fa3a	                            cmp dl, 0x3a	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4004a97	            0x740d	                            je 0x4004aa6	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4004a99	        0x48890c24	                    mov qword [rsp], rcx	      4495	ops.c	FUNCTION_54	WHILE_2
0x4004a9d	           0xfb611	                   movzx edx, byte [rcx]	      4488	ops.c	FUNCTION_54	WHILE_2
0x4004aa0	            0x84d2	                             test dl, dl	      4488	ops.c	FUNCTION_54	WHILE_2
0x4004aa2	            0x75e7	                           jne 0x4004a8b	      4488	ops.c	FUNCTION_54	WHILE_2
0x4004aa4	            0xeb09	                           jmp 0x4004aaf	      4488	ops.c	FUNCTION_54	WHILE_2
0x4004aa6	          0x80fa3a	                            cmp dl, 0x3a	      4502	ops.c	FUNCTION_54	IF_7
0x4004aa9	            0x7404	                            je 0x4004aaf	      4502	ops.c	FUNCTION_54	IF_7
0x4004aab	            0x84d2	                             test dl, dl	      4502	ops.c	FUNCTION_54	IF_7
0x4004aad	            0x7505	                           jne 0x4004ab4	      4502	ops.c	FUNCTION_54	IF_7
0x4004aaf	            0x4898	                                    cdqe	      4503	ops.c	FUNCTION_54	IF_7
0x4004ab1	          0x4801c3	                            add rbx, rax	      4503	ops.c	FUNCTION_54	IF_7
0x4004ab4	          0x4889d8	                            mov rax, rbx	      4506	ops.c	FUNCTION_54
0x4004ab7	      0x488b742408	                mov rsi, qword [rsp + 8]	      4506	ops.c	FUNCTION_54
0x4004abc	    0x644833342528	                xor rsi, qword fs:[0x28]	      4506	ops.c	FUNCTION_54
0x4004ac5	            0x7405	                            je 0x4004acc	      4506	ops.c	FUNCTION_54
0x4004ac7	      0xe800000000	                          call 0x4004acc	      4506	ops.c	FUNCTION_54
0x4004acc	        0x4883c418	                           add rsp, 0x18	      4506	ops.c	FUNCTION_54
0x4004ad0	              0x5b	                                 pop rbx	      4506	ops.c	FUNCTION_54
0x4004ad1	              0x5d	                                 pop rbp	      4506	ops.c	FUNCTION_54
0x4004ad2	            0x415c	                                 pop r12	      4506	ops.c	FUNCTION_54
0x4004ad4	            0x415d	                                 pop r13	      4506	ops.c	FUNCTION_54
0x4004ad6	              0xc3	                                     ret	      4506	ops.c	FUNCTION_54
op_change	CALL,30:ELSE,2:WHILE,0:FOR,1:functions,0:IF,16:SWITCH,0:DO,0	229
0x400aae5	            0x4157	                                push r15	      2831	ops.c	FUNCTION_40
0x400aae7	            0x4156	                                push r14	      2831	ops.c	FUNCTION_40
0x400aae9	            0x4155	                                push r13	      2831	ops.c	FUNCTION_40
0x400aaeb	            0x4154	                                push r12	      2831	ops.c	FUNCTION_40
0x400aaed	              0x55	                                push rbp	      2831	ops.c	FUNCTION_40
0x400aaee	              0x53	                                push rbx	      2831	ops.c	FUNCTION_40
0x400aaef	    0x4881ec880000	                           sub rsp, 0x88	      2831	ops.c	FUNCTION_40
0x400aaf6	          0x4889fb	                            mov rbx, rdi	      2831	ops.c	FUNCTION_40
0x400aaf9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2831	ops.c	FUNCTION_40
0x400ab02	      0x4889442478	             mov qword [rsp + 0x78], rax	      2831	ops.c	FUNCTION_40
0x400ab07	            0x31c0	                            xor eax, eax	      2831	ops.c	FUNCTION_40
0x400ab09	        0x837f0801	                  cmp dword [rdi + 8], 1	      2846	ops.c	FUNCTION_40	IF_1
0x400ab0d	            0x7405	                            je 0x400ab14	      2846	ops.c	FUNCTION_40	IF_1
0x400ab0f	          0x8b6f28	            mov ebp, dword [rdi + 0x28] 	      2845	ops.c	FUNCTION_40
0x400ab12	            0xeb31	                           jmp 0x400ab45	      2845	ops.c	FUNCTION_40
0x400ab14	      0xbd00000000	                              mov ebp, 0	      2848	ops.c	FUNCTION_40	IF_1
0x400ab19	    0x833d00000000	               cmp dword [0x0400ab20], 0	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400ab20	            0x7523	                           jne 0x400ab45	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400ab22	    0x488b05000000	            mov rax, qword [0x0400ab29] 	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400ab29	    0x83b874150000	             cmp dword [rax + 0x1574], 0	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400ab30	            0x7413	                            je 0x400ab45	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400ab32	    0x83b828140000	             cmp dword [rax + 0x1428], 0	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x400ab39	            0x750a	                           jne 0x400ab45	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x400ab3b	    0xc70500000000	               mov dword [0x0400ab45], 1	      2855	ops.c	FUNCTION_40	IF_1	IF_2
0x400ab45	    0x488b05000000	            mov rax, qword [0x0400ab4c] 	      2861	ops.c	FUNCTION_40	IF_3
0x400ab4c	        0xf6401001	               test byte [rax + 0x10], 1	      2861	ops.c	FUNCTION_40	IF_3
0x400ab50	            0x740e	                            je 0x400ab60	      2861	ops.c	FUNCTION_40	IF_3
0x400ab52	      0xe800000000	                          call 0x400ab57	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x400ab57	            0x85c0	                           test eax, eax	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x400ab59	            0x7515	                           jne 0x400ab70	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x400ab5b	      0xe9ed020000	                           jmp 0x400ae4d	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x400ab60	          0x4889df	                            mov rdi, rbx	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400ab63	      0xe800000000	                          call 0x400ab68	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400ab68	            0x85c0	                           test eax, eax	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400ab6a	     0xf84dd020000	                            je 0x400ae4d	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400ab70	    0x488b05000000	            mov rax, qword [0x0400ab77] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400ab77	          0x3b6840	            cmp ebp, dword [rax + 0x40] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400ab7a	            0x7e20	                           jle 0x400ab9c	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400ab7c	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400ab80	      0xe800000000	                          call 0x400ab85	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400ab85	          0x803800	                       cmp byte [rax], 0	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400ab88	            0x7412	                            je 0x400ab9c	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400ab8a	    0x833d00000000	               cmp dword [0x0400ab91], 0	      2870	ops.c	FUNCTION_40	IF_6
0x400ab91	     0xf85c8020000	                           jne 0x400ae5f	      2870	ops.c	FUNCTION_40	IF_6
0x400ab97	      0xe800000000	                          call 0x400ab9c	      2871	ops.c	FUNCTION_40	CALL_4
0x400ab9c	        0x837b6000	               cmp dword [rbx + 0x60], 0	      2876	ops.c	FUNCTION_40	IF_7
0x400aba0	            0x746d	                            je 0x400ac0f	      2876	ops.c	FUNCTION_40	IF_7
0x400aba2	    0x833d00000000	               cmp dword [0x0400aba9], 0	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400aba9	            0x7422	                            je 0x400abcd	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400abab	    0x488b05000000	            mov rax, qword [0x0400abb2] 	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400abb2	        0x83784400	               cmp dword [rax + 0x44], 0	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400abb6	            0x7f09	                            jg 0x400abc1	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400abb8	      0xe800000000	                          call 0x400abbd	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400abbd	            0x85c0	                           test eax, eax	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400abbf	            0x750c	                           jne 0x400abcd	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400abc1	      0xe800000000	                          call 0x400abc6	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400abc6	            0x89c7	                            mov edi, eax	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400abc8	      0xe800000000	                          call 0x400abcd	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400abcd	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x400abd1	      0xe800000000	                          call 0x400abd6	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x400abd6	          0x4889c2	                            mov rdx, rax	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x400abd9	      0xb800000000	                              mov eax, 0	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400abde	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400abe5	          0x4889d7	                            mov rdi, rdx	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400abe8	            0xf2ae	              repne scasb al, byte [rdi]	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400abea	          0x4889ce	                            mov rsi, rcx	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400abed	          0x48f7d6	                                 not rsi	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400abf0	        0x4c8d66ff	                      lea r12, [rsi - 1]	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400abf4	          0x4889d7	                            mov rdi, rdx	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x400abf7	      0xe800000000	                          call 0x400abfc	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x400abfc	          0x4c63e8	                         movsxd r13, eax	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x400abff	    0x488b05000000	            mov rax, qword [0x0400ac06] 	      2887	ops.c	FUNCTION_40	IF_7
0x400ac06	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2887	ops.c	FUNCTION_40	IF_7
0x400ac09	        0x89442448	             mov dword [rsp + 0x48], eax	      2887	ops.c	FUNCTION_40	IF_7
0x400ac0d	            0xeb0c	                           jmp 0x400ac1b	      2887	ops.c	FUNCTION_40	IF_7
0x400ac0f	    0x41bd00000000	                             mov r13d, 0	      2839	ops.c	FUNCTION_40
0x400ac15	    0x41bc00000000	                             mov r12d, 0	      2838	ops.c	FUNCTION_40
0x400ac1b	        0x837b0801	                  cmp dword [rbx + 8], 1	      2892	ops.c	FUNCTION_40	IF_9
0x400ac1f	            0x7505	                           jne 0x400ac26	      2892	ops.c	FUNCTION_40	IF_9
0x400ac21	      0xe800000000	                          call 0x400ac26	      2893	ops.c	FUNCTION_40	CALL_11
0x400ac26	      0xba01000000	                              mov edx, 1	      2896	ops.c	FUNCTION_40	CALL_12
0x400ac2b	      0xbe00000000	                              mov esi, 0	      2896	ops.c	FUNCTION_40	CALL_12
0x400ac30	      0xbf00000000	                              mov edi, 0	      2896	ops.c	FUNCTION_40	CALL_12
0x400ac35	      0xe800000000	                          call 0x400ac3a	      2896	ops.c	FUNCTION_40	CALL_12
0x400ac3a	          0x4189c6	                           mov r14d, eax	      2896	ops.c	FUNCTION_40	CALL_12
0x400ac3d	        0x837b6000	               cmp dword [rbx + 0x60], 0	      2904	ops.c	FUNCTION_40	IF_10
0x400ac41	     0xf8406020000	                            je 0x400ae4d	      2904	ops.c	FUNCTION_40	IF_10
0x400ac47	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2904	ops.c	FUNCTION_40	IF_10
0x400ac4b	        0x483b7b30	            cmp rdi, qword [rbx + 0x30] 	      2904	ops.c	FUNCTION_40	IF_10
0x400ac4f	     0xf84f8010000	                            je 0x400ae4d	      2904	ops.c	FUNCTION_40	IF_10
0x400ac55	    0x8b1500000000	            mov edx, dword [0x0400ac5b] 	      2904	ops.c	FUNCTION_40	IF_10
0x400ac5b	            0x85d2	                           test edx, edx	      2904	ops.c	FUNCTION_40	IF_10
0x400ac5d	     0xf85ea010000	                           jne 0x400ae4d	      2904	ops.c	FUNCTION_40	IF_10
0x400ac63	      0xe800000000	                          call 0x400ac68	      2908	ops.c	FUNCTION_40	IF_10	CALL_13
0x400ac68	          0x4889c5	                            mov rbp, rax	      2908	ops.c	FUNCTION_40	IF_10	CALL_13
0x400ac6b	      0x44396c2448	           cmp dword [rsp + 0x48], r13d 	      2909	ops.c	FUNCTION_40	IF_10	IF_11
0x400ac70	            0x7e1c	                           jle 0x400ac8e	      2909	ops.c	FUNCTION_40	IF_10	IF_11
0x400ac72	          0x4889c7	                            mov rdi, rax	      2911	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x400ac75	      0xe800000000	                          call 0x400ac7a	      2911	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x400ac7a	          0x4863d0	                         movsxd rdx, eax	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x400ac7d	          0x4c29ea	                            sub rdx, r13	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x400ac80	          0x4901d4	                            add r12, rdx	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x400ac83	         0x3442448	             add eax, dword [rsp + 0x48]	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400ac87	          0x4429e8	                           sub eax, r13d	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400ac8a	        0x89442448	             mov dword [rsp + 0x48], eax	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400ac8e	      0xb800000000	                              mov eax, 0	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400ac93	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400ac9a	          0x4889ef	                            mov rdi, rbp	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400ac9d	            0xf2ae	              repne scasb al, byte [rdi]	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400ac9f	          0x4889ca	                            mov rdx, rcx	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400aca2	          0x48f7d2	                                 not rdx	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400aca5	          0x4889d1	                            mov rcx, rdx	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400aca8	        0x4883e901	                              sub rcx, 1	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400acac	          0x4c29e1	                            sub rcx, r12	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400acaf	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400acb4	          0x4489f0	                           mov eax, r14d	      2975	ops.c	FUNCTION_40
0x400acb7	          0x4885c9	                           test rcx, rcx	      2918	ops.c	FUNCTION_40	IF_10	IF_12
0x400acba	     0xf8e8d010000	                           jle 0x400ae4d	      2918	ops.c	FUNCTION_40	IF_10	IF_12
0x400acc0	          0x4989cf	                            mov r15, rcx	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400acc3	        0x894c2404	                mov dword [rsp + 4], ecx	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400acc7	          0x8d7901	                      lea edi, [rcx + 1]	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400acca	      0xe800000000	                          call 0x400accf	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400accf	      0x4889442408	                mov qword [rsp + 8], rax	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400acd4	          0x4885c0	                           test rax, rax	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400acd7	     0xf8461010000	                            je 0x400ae3e	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400acdd	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400ace2	      0x4863742448	         movsxd rsi, dword [rsp + 0x48] 	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400ace7	          0x4801ee	                            add rsi, rbp	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400acea	          0x4c89fa	                            mov rdx, r15	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400aced	          0x4889c7	                            mov rdi, rax	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400acf0	      0xe800000000	                          call 0x400acf5	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400acf5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400acf9	        0x488d6801	                      lea rbp, [rax + 1]	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400acfd	        0x483b6b30	            cmp rbp, qword [rbx + 0x30] 	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400ad01	     0xf8f13010000	                            jg 0x400ae1a	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400ad07	      0xb901000000	                              mov ecx, 1	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400ad0c	          0x4889ea	                            mov rdx, rbp	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400ad0f	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400ad14	          0x4889df	                            mov rdi, rbx	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400ad17	      0xe86453ffff	                     call sym.block_prep	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400ad1c	      0x837c245400	               cmp dword [rsp + 0x54], 0	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400ad21	            0x7421	                            je 0x400ad44	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400ad23	    0x833d00000000	               cmp dword [0x0400ad2a], 0	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400ad2a	     0xf84dc000000	                            je 0x400ae0c	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400ad30	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      2938	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x400ad35	          0x8b7364	            mov esi, dword [rbx + 0x64] 	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400ad38	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400ad3d	      0xe800000000	                          call 0x400ad42	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400ad42	            0xeb08	                           jmp 0x400ad4c	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400ad44	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      2942	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	ELSE_2
0x400ad4c	          0x4889ef	                            mov rdi, rbp	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x400ad4f	      0xe800000000	                          call 0x400ad54	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x400ad54	          0x4989c7	                            mov r15, rax	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x400ad57	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400ad5e	          0x4889c7	                            mov rdi, rax	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400ad61	      0xb800000000	                              mov eax, 0	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400ad66	            0xf2ae	              repne scasb al, byte [rdi]	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400ad68	          0x48f7d1	                                 not rcx	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400ad6b	        0x8b442404	                mov eax, dword [rsp + 4]	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400ad6f	         0x344242c	             add eax, dword [rsp + 0x2c]	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400ad73	          0x8d3c08	                    lea edi, [rax + rcx]	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400ad76	      0xe800000000	                          call 0x400ad7b	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400ad7b	          0x4989c5	                            mov r13, rax	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400ad7e	          0x4885c0	                           test rax, rax	      2950	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x400ad81	     0xf8485000000	                            je 0x400ae0c	      2950	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x400ad87	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	        59	string3.h	FUNCTION_93	CALL_3
0x400ad8c	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x400ad8f	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x400ad92	      0xe800000000	                          call 0x400ad97	        59	string3.h	FUNCTION_93	CALL_3
0x400ad97	      0x4c63642448	         movsxd r12, dword [rsp + 0x48] 	      2954	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400ad9c	      0x486354242c	         movsxd rdx, dword [rsp + 0x2c] 	        90	string3.h	FUNCTION_95	CALL_6
0x400ada1	      0x4b8d7c2500	                    lea rdi, [r13 + r12]	        90	string3.h	FUNCTION_95	CALL_6
0x400ada6	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400adab	      0xe800000000	                          call 0x400adb0	        90	string3.h	FUNCTION_95	CALL_6
0x400adb0	      0x48637c242c	         movsxd rdi, dword [rsp + 0x2c] 	      2957	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400adb5	          0x4901fc	                            add r12, rdi	      2957	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400adb8	      0x4b8d7c2500	                    lea rdi, [r13 + r12]	        59	string3.h	FUNCTION_93	CALL_3
0x400adbd	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_93	CALL_3
0x400adc2	      0x488b742408	                mov rsi, qword [rsp + 8]	        59	string3.h	FUNCTION_93	CALL_3
0x400adc7	      0xe800000000	                          call 0x400adcc	        59	string3.h	FUNCTION_93	CALL_3
0x400adcc	      0x4863742448	         movsxd rsi, dword [rsp + 0x48] 	      2961	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400add1	          0x4c01fe	                            add rsi, r15	      2961	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400add4	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x400addb	          0x4889f7	                            mov rdi, rsi	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x400adde	      0xb800000000	                              mov eax, 0	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x400ade3	            0xf2ae	              repne scasb al, byte [rdi]	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x400ade5	          0x4889ca	                            mov rdx, rcx	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x400ade8	          0x48f7d2	                                 not rdx	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x400adeb	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_93	CALL_3
0x400adf0	        0x4a8d3c20	                    lea rdi, [rax + r12]	        59	string3.h	FUNCTION_93	CALL_3
0x400adf4	          0x4c01ef	                            add rdi, r13	        59	string3.h	FUNCTION_93	CALL_3
0x400adf7	      0xe800000000	                          call 0x400adfc	        59	string3.h	FUNCTION_93	CALL_3
0x400adfc	      0xba00000000	                              mov edx, 0	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400ae01	          0x4c89ee	                            mov rsi, r13	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400ae04	          0x4889ef	                            mov rdi, rbp	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400ae07	      0xe800000000	                          call 0x400ae0c	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400ae0c	        0x4883c501	                              add rbp, 1	      2926	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400ae10	        0x48396b30	            cmp qword [rbx + 0x30], rbp 	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400ae14	     0xf8dedfeffff	                           jge 0x400ad07	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400ae1a	      0xe800000000	                          call 0x400ae1f	      2966	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_28
0x400ae1f	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400ae23	        0x488d5001	                      lea rdx, [rax + 1]	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400ae27	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400ae2b	        0x4883c701	                              add rdi, 1	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400ae2f	      0xb900000000	                              mov ecx, 0	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400ae34	      0xbe00000000	                              mov esi, 0	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400ae39	      0xe800000000	                          call 0x400ae3e	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400ae3e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2970	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x400ae43	      0xe800000000	                          call 0x400ae48	      2970	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x400ae48	          0x4489f0	                           mov eax, r14d	      2975	ops.c	FUNCTION_40
0x400ae4b	            0xeb00	                           jmp 0x400ae4d	      2975	ops.c	FUNCTION_40
0x400ae4d	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      2976	ops.c	FUNCTION_40
0x400ae52	    0x644833342528	                xor rsi, qword fs:[0x28]	      2976	ops.c	FUNCTION_40
0x400ae5b	            0x7422	                            je 0x400ae7f	      2976	ops.c	FUNCTION_40
0x400ae5d	            0xeb1b	                           jmp 0x400ae7a	      2976	ops.c	FUNCTION_40
0x400ae5f	        0x837b6000	               cmp dword [rbx + 0x60], 0	      2876	ops.c	FUNCTION_40	IF_7
0x400ae63	     0xf8542fdffff	                           jne 0x400abab	      2876	ops.c	FUNCTION_40	IF_7
0x400ae69	    0x41bd00000000	                             mov r13d, 0	      2839	ops.c	FUNCTION_40
0x400ae6f	    0x41bc00000000	                             mov r12d, 0	      2838	ops.c	FUNCTION_40
0x400ae75	      0xe9a1fdffff	                           jmp 0x400ac1b	      2838	ops.c	FUNCTION_40
0x400ae7a	      0xe800000000	                          call 0x400ae7f	      2976	ops.c	FUNCTION_40
0x400ae7f	    0x4881c4880000	                           add rsp, 0x88	      2976	ops.c	FUNCTION_40
0x400ae86	              0x5b	                                 pop rbx	      2976	ops.c	FUNCTION_40
0x400ae87	              0x5d	                                 pop rbp	      2976	ops.c	FUNCTION_40
0x400ae88	            0x415c	                                 pop r12	      2976	ops.c	FUNCTION_40
0x400ae8a	            0x415d	                                 pop r13	      2976	ops.c	FUNCTION_40
0x400ae8c	            0x415e	                                 pop r14	      2976	ops.c	FUNCTION_40
0x400ae8e	            0x415f	                                 pop r15	      2976	ops.c	FUNCTION_40
0x400ae90	              0xc3	                                     ret	      2976	ops.c	FUNCTION_40
get_expr_line	CALL,3:ELSE,0:WHILE,0:FOR,0:functions,0:IF,3:SWITCH,0:DO,0	31
0x4002162	    0x488b05000000	            mov rax, qword [0x04002169] 	       829	ops.c	FUNCTION_12	IF_1
0x4002169	          0x4885c0	                           test rax, rax	       829	ops.c	FUNCTION_12	IF_1
0x400216c	            0x745e	                            je 0x40021cc	       829	ops.c	FUNCTION_12	IF_1
0x400216e	              0x55	                                push rbp	       824	ops.c	FUNCTION_12
0x400216f	              0x53	                                push rbx	       824	ops.c	FUNCTION_12
0x4002170	        0x4883ec08	                              sub rsp, 8	       824	ops.c	FUNCTION_12
0x4002174	          0x4889c7	                            mov rdi, rax	       834	ops.c	FUNCTION_12	CALL_1
0x4002177	      0xe800000000	                          call 0x400217c	       834	ops.c	FUNCTION_12	CALL_1
0x400217c	          0x4889c5	                            mov rbp, rax	       834	ops.c	FUNCTION_12	CALL_1
0x400217f	          0x4885c0	                           test rax, rax	       835	ops.c	FUNCTION_12	IF_2
0x4002182	            0x743d	                            je 0x40021c1	       835	ops.c	FUNCTION_12	IF_2
0x4002184	    0x8b1500000000	            mov edx, dword [0x0400218a] 	       840	ops.c	FUNCTION_12	IF_3
0x400218a	          0x83fa09	                              cmp edx, 9	       840	ops.c	FUNCTION_12	IF_3
0x400218d	            0x7f37	                            jg 0x40021c6	       840	ops.c	FUNCTION_12	IF_3
0x400218f	          0x83c201	                              add edx, 1	       843	ops.c	FUNCTION_12
0x4002192	    0x891500000000	            mov dword [0x04002198], edx 	       843	ops.c	FUNCTION_12
0x4002198	      0xba01000000	                              mov edx, 1	       844	ops.c	FUNCTION_12	CALL_2
0x400219d	      0xbe00000000	                              mov esi, 0	       844	ops.c	FUNCTION_12	CALL_2
0x40021a2	          0x4889c7	                            mov rdi, rax	       844	ops.c	FUNCTION_12	CALL_2
0x40021a5	      0xe800000000	                          call 0x40021aa	       844	ops.c	FUNCTION_12	CALL_2
0x40021aa	          0x4889c3	                            mov rbx, rax	       844	ops.c	FUNCTION_12	CALL_2
0x40021ad	    0x832d00000000	               sub dword [0x040021b4], 1	       845	ops.c	FUNCTION_12
0x40021b4	          0x4889ef	                            mov rdi, rbp	       846	ops.c	FUNCTION_12	CALL_3
0x40021b7	      0xe800000000	                          call 0x40021bc	       846	ops.c	FUNCTION_12	CALL_3
0x40021bc	          0x4889d8	                            mov rax, rbx	       847	ops.c	FUNCTION_12
0x40021bf	            0xeb05	                           jmp 0x40021c6	       847	ops.c	FUNCTION_12
0x40021c1	      0xb800000000	                              mov eax, 0	       836	ops.c	FUNCTION_12	IF_2
0x40021c6	        0x4883c408	                              add rsp, 8	       848	ops.c	FUNCTION_12
0x40021ca	              0x5b	                                 pop rbx	       848	ops.c	FUNCTION_12
0x40021cb	              0x5d	                                 pop rbp	       848	ops.c	FUNCTION_12
0x40021cc	            0xf3c3	                                     ret	       848	ops.c	FUNCTION_12
op_replace	CALL,43:ELSE,8:WHILE,2:FOR,2:functions,0:IF,30:SWITCH,0:DO,0	475
0x4002a96	            0x4157	                                push r15	      2131	ops.c	FUNCTION_35
0x4002a98	            0x4156	                                push r14	      2131	ops.c	FUNCTION_35
0x4002a9a	            0x4155	                                push r13	      2131	ops.c	FUNCTION_35
0x4002a9c	            0x4154	                                push r12	      2131	ops.c	FUNCTION_35
0x4002a9e	              0x55	                                push rbp	      2131	ops.c	FUNCTION_35
0x4002a9f	              0x53	                                push rbx	      2131	ops.c	FUNCTION_35
0x4002aa0	    0x4881ec880000	                           sub rsp, 0x88	      2131	ops.c	FUNCTION_35
0x4002aa7	    0x64488b042528	                mov rax, qword fs:[0x28]	      2131	ops.c	FUNCTION_35
0x4002ab0	      0x4889442478	             mov qword [rsp + 0x78], rax	      2131	ops.c	FUNCTION_35
0x4002ab5	            0x31c0	                            xor eax, eax	      2131	ops.c	FUNCTION_35
0x4002ab7	      0xb801000000	                              mov eax, 1	      2143	ops.c	FUNCTION_35	IF_1
0x4002abc	    0x488b15000000	            mov rdx, qword [0x04002ac3] 	      2142	ops.c	FUNCTION_35	IF_1
0x4002ac3	        0xf6421001	               test byte [rdx + 0x10], 1	      2142	ops.c	FUNCTION_35	IF_1
0x4002ac7	     0xf8523070000	                           jne 0x40031f0	      2142	ops.c	FUNCTION_35	IF_1
0x4002acd	          0x4889fd	                            mov rbp, rdi	      2142	ops.c	FUNCTION_35	IF_1
0x4002ad0	          0x4189f4	                           mov r12d, esi	      2142	ops.c	FUNCTION_35	IF_1
0x4002ad3	          0x8b4758	            mov eax, dword [rdi + 0x58] 	      2142	ops.c	FUNCTION_35	IF_1
0x4002ad6	            0x89c3	                            mov ebx, eax	      2142	ops.c	FUNCTION_35	IF_1
0x4002ad8	        0x89442418	             mov dword [rsp + 0x18], eax	      2142	ops.c	FUNCTION_35	IF_1
0x4002adc	      0xb801000000	                              mov eax, 1	      2143	ops.c	FUNCTION_35	IF_1
0x4002ae1	            0x85db	                           test ebx, ebx	      2142	ops.c	FUNCTION_35	IF_1
0x4002ae3	     0xf8507070000	                           jne 0x40031f0	      2142	ops.c	FUNCTION_35	IF_1
0x4002ae9	          0x83feff	             cmp esi, 0xffffffffffffffff	      2145	ops.c	FUNCTION_35	IF_2
0x4002aec	            0x741d	                            je 0x4002b0b	      2145	ops.c	FUNCTION_35	IF_2
0x4002aee	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2140	ops.c	FUNCTION_35
0x4002af6	          0x83fefe	             cmp esi, 0xfffffffffffffffe	      2150	ops.c	FUNCTION_35	ELSE_1	IF_3
0x4002af9	            0x751e	                           jne 0x4002b19	      2150	ops.c	FUNCTION_35	ELSE_1	IF_3
0x4002afb	    0xc74424100100	               mov dword [rsp + 0x10], 1	      2152	ops.c	FUNCTION_35	ELSE_1	IF_3
0x4002b03	    0x41bc0a000000	                           mov r12d, 0xa	      2153	ops.c	FUNCTION_35	ELSE_1	IF_3
0x4002b09	            0xeb0e	                           jmp 0x4002b19	      2153	ops.c	FUNCTION_35	ELSE_1	IF_3
0x4002b0b	    0xc74424100100	               mov dword [rsp + 0x10], 1	      2147	ops.c	FUNCTION_35	IF_2
0x4002b13	    0x41bc0d000000	                           mov r12d, 0xd	      2148	ops.c	FUNCTION_35	IF_2
0x4002b19	    0x833d00000000	               cmp dword [0x04002b20], 0	      2157	ops.c	FUNCTION_35	IF_4
0x4002b20	            0x7408	                            je 0x4002b2a	      2157	ops.c	FUNCTION_35	IF_4
0x4002b22	          0x4889ef	                            mov rdi, rbp	      2158	ops.c	FUNCTION_35	CALL_1
0x4002b25	      0xe803deffff	                call sym.mb_adjust_opend	      2158	ops.c	FUNCTION_35	CALL_1
0x4002b2a	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4002b2e	        0x488d7001	                      lea rsi, [rax + 1]	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4002b32	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4002b36	        0x488d78ff	                      lea rdi, [rax - 1]	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4002b3a	      0xe800000000	                          call 0x4002b3f	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4002b3f	            0x85c0	                           test eax, eax	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4002b41	     0xf84a9060000	                            je 0x40031f0	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4002b47	        0x837d6000	               cmp dword [rbp + 0x60], 0	      2168	ops.c	FUNCTION_35	IF_6
0x4002b4b	     0xf84ca030000	                            je 0x4002f1b	      2168	ops.c	FUNCTION_35	IF_6
0x4002b51	    0x488b05000000	            mov rax, qword [0x04002b58] 	      2170	ops.c	FUNCTION_35	IF_6
0x4002b58	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      2170	ops.c	FUNCTION_35	IF_6
0x4002b5f	           0xf94c2	                                 sete dl	      2170	ops.c	FUNCTION_35	IF_6
0x4002b62	           0xfb6d2	                           movzx edx, dl	      2170	ops.c	FUNCTION_35	IF_6
0x4002b65	        0x89542458	             mov dword [rsp + 0x58], edx	      2170	ops.c	FUNCTION_35	IF_6
0x4002b69	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002b6d	        0x48395530	            cmp qword [rbp + 0x30], rdx 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002b71	     0xf8c0c060000	                            jl 0x4003183	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002b77	    0x48c744240800	                  mov qword [rsp + 8], 0	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002b80	    0xc74040000000	               mov dword [rax + 0x40], 0	      2173	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002b87	      0xb901000000	                              mov ecx, 1	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4002b8c	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4002b91	          0x4889ef	                            mov rdi, rbp	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4002b94	      0xe8e7d4ffff	                     call sym.block_prep	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4002b99	      0x837c243800	               cmp dword [rsp + 0x38], 0	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4002b9e	            0x751a	                           jne 0x4002bba	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4002ba0	    0x833d00000000	               cmp dword [0x04002ba7], 0	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4002ba7	     0xf844c030000	                            je 0x4002ef9	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4002bad	      0x837c245800	               cmp dword [rsp + 0x58], 0	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4002bb2	     0xf8541030000	                           jne 0x4002ef9	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4002bb8	            0xeb09	                           jmp 0x4002bc3	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4002bba	    0x833d00000000	               cmp dword [0x04002bc1], 0	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002bc1	            0x743f	                            je 0x4002c02	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002bc3	      0x837c245400	               cmp dword [rsp + 0x54], 0	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002bc8	            0x7438	                            je 0x4002c02	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002bca	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002bcf	          0x803800	                       cmp byte [rax], 0	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002bd2	            0x752e	                           jne 0x4002c02	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002bd4	    0x488b05000000	            mov rax, qword [0x04002bdb] 	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002bdb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002bdf	      0x4889442420	             mov qword [rsp + 0x20], rax	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002be4	          0x8b7564	            mov esi, dword [rbp + 0x64] 	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4002be7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4002bec	      0xe800000000	                          call 0x4002bf1	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4002bf1	      0x448b6c242c	           mov r13d, dword [rsp + 0x2c] 	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002bf6	      0x44036c2430	            add r13d, dword [rsp + 0x30]	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002bfb	      0x44896c2430	            mov dword [rsp + 0x30], r13d	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002c00	            0xeb15	                           jmp 0x4002c17	      2186	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4002c02	    0x41bd00000000	                             mov r13d, 0	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4002c08	      0x837c243000	               cmp dword [rsp + 0x30], 0	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4002c0d	            0x7408	                            je 0x4002c17	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4002c0f	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4002c13	        0x448d68ff	                     lea r13d, [rax - 1]	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4002c17	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2200	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c1b	            0x85c0	                           test eax, eax	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c1d	            0x741a	                            je 0x4002c39	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c1f	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c23	            0x85c0	                           test eax, eax	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c25	            0x750e	                           jne 0x4002c35	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c27	        0x8b542468	            mov edx, dword [rsp + 0x68] 	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c2b	          0x8d4aff	                      lea ecx, [rdx - 1]	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c2e	            0x85d2	                           test edx, edx	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c30	           0xf4fc1	                          cmovg eax, ecx	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c33	            0xeb04	                           jmp 0x4002c39	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c35	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c39	          0x4101c5	                           add r13d, eax	      2200	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c3c	          0x8b4568	            mov eax, dword [rbp + 0x68] 	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c3f	            0x89c3	                            mov ebx, eax	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c41	          0x2b5d64	             sub ebx, dword [rbp + 0x64]	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c44	          0x83c301	                              add ebx, 1	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c47	      0x837c245400	               cmp dword [rsp + 0x54], 0	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4002c4c	            0x7419	                            je 0x4002c67	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4002c4e	    0x833d00000000	               cmp dword [0x04002c55], 0	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4002c55	            0x7407	                            je 0x4002c5e	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4002c57	      0x837c245800	               cmp dword [rsp + 0x58], 0	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4002c5c	            0x7409	                            je 0x4002c67	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4002c5e	        0x2b442450	             sub eax, dword [rsp + 0x50]	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4002c62	          0x83c001	                              add eax, 1	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4002c65	            0x29c3	                            sub ebx, eax	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4002c67	          0x4489e7	                           mov edi, r12d	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4002c6a	    0xff1500000000	                 call qword [0x04002c70]	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4002c70	          0x83f801	                              cmp eax, 1	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4002c73	            0x7e1e	                           jle 0x4002c93	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4002c75	          0xf6c301	                              test bl, 1	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4002c78	            0x7410	                            je 0x4002c8a	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4002c7a	      0x837c245400	               cmp dword [rsp + 0x54], 0	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4002c7f	            0x7509	                           jne 0x4002c8a	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4002c81	      0x8344243401	               add dword [rsp + 0x34], 1	      2217	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4002c86	        0x4183c501	                             add r13d, 1	      2218	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4002c8a	            0x89d8	                            mov eax, ebx	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4002c8c	          0xc1e81f	                           shr eax, 0x1f	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4002c8f	             0x1c3	                            add ebx, eax	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4002c91	            0xd1fb	                              sar ebx, 1	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4002c93	          0x4489e7	                           mov edi, r12d	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c96	    0xff1500000000	                 call qword [0x04002c9c]	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c9c	           0xfafc3	                           imul eax, ebx	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002c9f	        0x89442414	             mov dword [rsp + 0x14], eax	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002ca3	        0x2b442438	             sub eax, dword [rsp + 0x38]	      2228	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002ca7	          0x4101c5	                           add r13d, eax	      2228	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002caa	      0xe800000000	                          call 0x4002caf	      2230	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_5
0x4002caf	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4002cb6	        0x48890424	                    mov qword [rsp], rax	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4002cba	          0x4889c7	                            mov rdi, rax	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4002cbd	      0xb800000000	                              mov eax, 0	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4002cc2	            0xf2ae	              repne scasb al, byte [rdi]	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4002cc4	          0x48f7d1	                                 not rcx	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4002cc7	        0x4c8d79ff	                      lea r15, [rcx - 1]	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4002ccb	      0x438d443d01	                lea eax, [r13 + r15 + 1]	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4002cd0	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4002cd4	            0x89c7	                            mov edi, eax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4002cd6	      0xe800000000	                          call 0x4002cdb	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4002cdb	          0x4989c6	                            mov r14, rax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4002cde	          0x4885c0	                           test rax, rax	      2233	ops.c	FUNCTION_35	IF_6	FOR_1	IF_12
0x4002ce1	     0xf8412020000	                            je 0x4002ef9	      2233	ops.c	FUNCTION_35	IF_6	FOR_1	IF_12
0x4002ce7	          0x4d63ed	                        movsxd r13, r13d	        90	string3.h	FUNCTION_95	CALL_6
0x4002cea	      0x4b8d542f01	                lea rdx, [r15 + r13 + 1]	        90	string3.h	FUNCTION_95	CALL_6
0x4002cef	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_95	CALL_6
0x4002cf4	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_95	CALL_6
0x4002cf7	      0xe800000000	                          call 0x4002cfc	        90	string3.h	FUNCTION_95	CALL_6
0x4002cfc	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	        59	string3.h	FUNCTION_93	CALL_3
0x4002d01	        0x4c8b2c24	                    mov r13, qword [rsp]	        59	string3.h	FUNCTION_93	CALL_3
0x4002d05	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_93	CALL_3
0x4002d08	          0x4c89f7	                            mov rdi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x4002d0b	      0xe800000000	                          call 0x4002d10	        59	string3.h	FUNCTION_93	CALL_3
0x4002d10	        0x8b7c2448	            mov edi, dword [rsp + 0x48] 	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002d14	          0x4189ff	                           mov r15d, edi	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002d17	      0x44037c2438	            add r15d, dword [rsp + 0x38]	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002d1c	          0x4d63ff	                        movsxd r15, r15d	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002d1f	          0x4d01ef	                            add r15, r13	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002d22	      0x4863542430	         movsxd rdx, dword [rsp + 0x30] 	        90	string3.h	FUNCTION_95	CALL_6
0x4002d27	          0x4863ff	                         movsxd rdi, edi	        90	string3.h	FUNCTION_95	CALL_6
0x4002d2a	          0x4c01f7	                            add rdi, r14	        90	string3.h	FUNCTION_95	CALL_6
0x4002d2d	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4002d32	      0xe800000000	                          call 0x4002d37	        90	string3.h	FUNCTION_95	CALL_6
0x4002d37	      0x837c241000	               cmp dword [rsp + 0x10], 0	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4002d3c	            0x7514	                           jne 0x4002d52	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4002d3e	        0x4183fc0d	                           cmp r12d, 0xd	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4002d42	     0xf84da000000	                            je 0x4002e22	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4002d48	        0x4183fc0a	                           cmp r12d, 0xa	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4002d4c	     0xf84d0000000	                            je 0x4002e22	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4002d52	    0x833d00000000	               cmp dword [0x04002d59], 0	      2247	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14
0x4002d59	            0x7439	                            je 0x4002d94	      2247	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14
0x4002d5b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4002d62	          0x4c89f7	                            mov rdi, r14	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4002d65	      0xb800000000	                              mov eax, 0	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4002d6a	            0xf2ae	              repne scasb al, byte [rdi]	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4002d6c	          0x48f7d1	                                 not rcx	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4002d6f	        0x448d69ff	                     lea r13d, [rcx - 1]	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4002d73	          0x83eb01	                              sub ebx, 1	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4002d76	            0x7842	                            js 0x4002dba	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4002d78	          0x4963f5	                        movsxd rsi, r13d	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4002d7b	          0x4c01f6	                            add rsi, r14	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4002d7e	          0x4489e7	                           mov edi, r12d	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4002d81	    0xff1500000000	                 call qword [0x04002d87]	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4002d87	          0x4101c5	                           add r13d, eax	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4002d8a	          0x83eb01	                              sub ebx, 1	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4002d8d	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4002d90	            0x75e6	                           jne 0x4002d78	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4002d92	            0xeb26	                           jmp 0x4002dba	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4002d94	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4002d9b	          0x4c89f7	                            mov rdi, r14	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4002d9e	      0xb800000000	                              mov eax, 0	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4002da3	            0xf2ae	              repne scasb al, byte [rdi]	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4002da5	          0x48f7d1	                                 not rcx	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4002da8	      0x4863542414	         movsxd rdx, dword [rsp + 0x14] 	        90	string3.h	FUNCTION_95	CALL_6
0x4002dad	      0x498d7c0eff	                lea rdi, [r14 + rcx - 1]	        90	string3.h	FUNCTION_95	CALL_6
0x4002db2	          0x4489e6	                           mov esi, r12d	        90	string3.h	FUNCTION_95	CALL_6
0x4002db5	      0xe800000000	                          call 0x4002dba	        90	string3.h	FUNCTION_95	CALL_6
0x4002dba	      0x837c245400	               cmp dword [rsp + 0x54], 0	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x4002dbf	     0xf85c8000000	                           jne 0x4002e8d	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x4002dc5	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4002dcc	          0x4c89f7	                            mov rdi, r14	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4002dcf	      0xb800000000	                              mov eax, 0	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4002dd4	            0xf2ae	              repne scasb al, byte [rdi]	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4002dd6	          0x48f7d1	                                 not rcx	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4002dd9	      0x4863542434	         movsxd rdx, dword [rsp + 0x34] 	        90	string3.h	FUNCTION_95	CALL_6
0x4002dde	      0x498d7c0eff	                lea rdi, [r14 + rcx - 1]	        90	string3.h	FUNCTION_95	CALL_6
0x4002de3	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4002de8	      0xe800000000	                          call 0x4002ded	        90	string3.h	FUNCTION_95	CALL_6
0x4002ded	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4002df4	          0x4c89ff	                            mov rdi, r15	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4002df7	      0xb800000000	                              mov eax, 0	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4002dfc	            0xf2ae	              repne scasb al, byte [rdi]	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4002dfe	          0x48f7d1	                                 not rcx	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4002e01	          0x4889ca	                            mov rdx, rcx	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4002e04	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4002e0b	          0x4c89f7	                            mov rdi, r14	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4002e0e	            0xf2ae	              repne scasb al, byte [rdi]	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4002e10	          0x48f7d1	                                 not rcx	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4002e13	      0x498d7c0eff	                lea rdi, [r14 + rcx - 1]	        59	string3.h	FUNCTION_93	CALL_3
0x4002e18	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x4002e1b	      0xe800000000	                          call 0x4002e20	        59	string3.h	FUNCTION_93	CALL_3
0x4002e20	            0xeb6b	                           jmp 0x4002e8d	        59	string3.h	FUNCTION_93	CALL_3
0x4002e22	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2268	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_19
0x4002e29	          0x4c89f7	                            mov rdi, r14	      2268	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_19
0x4002e2c	      0xb800000000	                              mov eax, 0	      2268	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_19
0x4002e31	            0xf2ae	              repne scasb al, byte [rdi]	      2268	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_19
0x4002e33	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4002e37	        0x8d7c0802	                lea edi, [rax + rcx + 2]	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4002e3b	      0xe800000000	                          call 0x4002e40	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4002e40	          0x4889c3	                            mov rbx, rax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4002e43	      0x4889442408	                mov qword [rsp + 8], rax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4002e48	          0x4885c0	                           test rax, rax	      2269	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	IF_16
0x4002e4b	     0xf84b1030000	                            je 0x4003202	      2269	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	IF_16
0x4002e51	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4002e58	          0x4c89ff	                            mov rdi, r15	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4002e5b	      0xb800000000	                              mov eax, 0	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4002e60	            0xf2ae	              repne scasb al, byte [rdi]	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4002e62	          0x48f7d1	                                 not rcx	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4002e65	          0x4889ca	                            mov rdx, rcx	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4002e68	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x4002e6b	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4002e6e	      0xe800000000	                          call 0x4002e73	        59	string3.h	FUNCTION_93	CALL_3
0x4002e73	    0x488b05000000	            mov rax, qword [0x04002e7a] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4002e7a	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4002e7e	      0xba00000000	                              mov edx, 0	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4002e83	          0x4c89f6	                            mov rsi, r14	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4002e86	      0xe800000000	                          call 0x4002e8b	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4002e8b	            0xeb20	                           jmp 0x4002ead	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4002e8d	    0x488b05000000	            mov rax, qword [0x04002e94] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4002e94	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4002e98	      0xba00000000	                              mov edx, 0	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4002e9d	          0x4c89f6	                            mov rsi, r14	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4002ea0	      0xe800000000	                          call 0x4002ea5	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4002ea5	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2274	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4002eab	            0x744c	                            je 0x4002ef9	      2274	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4002ead	    0x488b05000000	            mov rax, qword [0x04002eb4] 	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4002eb4	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4002eb8	        0x488d5701	                      lea rdx, [rdi + 1]	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4002ebc	        0x48895038	             mov qword [rax + 0x38], rdx	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4002ec0	      0xb900000000	                              mov ecx, 0	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4002ec5	      0xba00000000	                              mov edx, 0	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4002eca	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4002ecf	          0x4889de	                            mov rsi, rbx	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4002ed2	      0xe800000000	                          call 0x4002ed7	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4002ed7	    0x488b05000000	            mov rax, qword [0x04002ede] 	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x4002ede	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x4002ee2	      0xbe01000000	                              mov esi, 1	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x4002ee7	      0xe800000000	                          call 0x4002eec	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x4002eec	      0x4883453001	               add qword [rbp + 0x30], 1	      2278	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4002ef1	          0x4889df	                            mov rdi, rbx	      2279	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_24
0x4002ef4	      0xe800000000	                          call 0x4002ef9	      2279	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_24
0x4002ef9	    0x488b05000000	            mov rax, qword [0x04002f00] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002f00	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002f04	        0x488d5101	                      lea rdx, [rcx + 1]	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002f08	        0x48895038	             mov qword [rax + 0x38], rdx	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002f0c	        0x48395530	            cmp qword [rbp + 0x30], rdx 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002f10	     0xf8d6afcffff	                           jge 0x4002b80	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002f16	      0xe968020000	                           jmp 0x4003183	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4002f1b	        0x837d0801	                  cmp dword [rbp + 8], 1	      2288	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4002f1f	            0x754c	                           jne 0x4002f6d	      2288	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4002f21	    0xc74528000000	               mov dword [rbp + 0x28], 0	      2290	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4002f28	    0x488b05000000	            mov rax, qword [0x04002f2f] 	      2291	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4002f2f	    0xc74040000000	               mov dword [rax + 0x40], 0	      2291	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4002f36	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4002f3a	      0xe800000000	                          call 0x4002f3f	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4002f3f	          0x4889c7	                            mov rdi, rax	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4002f42	      0xb800000000	                              mov eax, 0	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4002f47	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4002f4e	            0xf2ae	              repne scasb al, byte [rdi]	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4002f50	          0x4889c8	                            mov rax, rcx	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4002f53	          0x48f7d0	                                 not rax	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4002f56	        0x4883e801	                              sub rax, 1	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4002f5a	            0x85c0	                           test eax, eax	      2293	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4002f5c	     0xf84c9010000	                            je 0x400312b	      2293	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4002f62	          0x83e801	                              sub eax, 1	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4002f65	          0x894538	            mov dword [rbp + 0x38], eax 	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4002f68	      0xe9c5010000	                           jmp 0x4003132	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4002f6d	        0x837d1400	               cmp dword [rbp + 0x14], 0	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4002f71	     0xf85bb010000	                           jne 0x4003132	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4002f77	        0x488d7d30	                   lea rdi, [rbp + 0x30]	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4002f7b	      0xe800000000	                          call 0x4002f80	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4002f80	      0xe9ad010000	                           jmp 0x4003132	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4002f85	      0xe800000000	                          call 0x4002f8a	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x4002f8a	            0x89c3	                            mov ebx, eax	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x4002f8c	            0x85c0	                           test eax, eax	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x4002f8e	     0xf84ee000000	                            je 0x4003082	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x4002f94	          0x4489e7	                           mov edi, r12d	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4002f97	    0xff1500000000	                 call qword [0x04002f9d]	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4002f9d	          0x83f801	                              cmp eax, 1	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4002fa0	            0x7f0d	                            jg 0x4002faf	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4002fa2	            0x89df	                            mov edi, ebx	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4002fa4	    0xff1500000000	                 call qword [0x04002faa]	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4002faa	          0x83f801	                              cmp eax, 1	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4002fad	            0x7e54	                           jle 0x4003003	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4002faf	    0x488b05000000	            mov rax, qword [0x04002fb6] 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4002fb6	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4002fba	        0x48394838	            cmp qword [rax + 0x38], rcx 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4002fbe	            0x751b	                           jne 0x4002fdb	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4002fc0	          0x4489e7	                           mov edi, r12d	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4002fc3	    0xff1500000000	                 call qword [0x04002fc9]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4002fc9	          0x4189c6	                           mov r14d, eax	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4002fcc	            0x89df	                            mov edi, ebx	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4002fce	    0xff1500000000	                 call qword [0x04002fd4]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4002fd4	          0x4129c6	                           sub r14d, eax	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4002fd7	        0x44017538	            add dword [rbp + 0x38], r14d	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4002fdb	    0x8b1d00000000	            mov ebx, dword [0x04002fe1] 	      2311	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4002fe1	    0xc70500000000	           mov dword [0x04002feb], 0x50 	      2312	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4002feb	          0x4489e7	                           mov edi, r12d	      2313	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_30
0x4002fee	      0xe800000000	                          call 0x4002ff3	      2313	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_30
0x4002ff3	    0x891d00000000	            mov dword [0x04002ff9], ebx 	      2314	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4002ff9	      0xe800000000	                          call 0x4002ffe	      2316	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_31
0x4002ffe	      0xe91c010000	                           jmp 0x400311f	      2316	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_31
0x4003003	          0x83fb09	                              cmp ebx, 9	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x4003006	            0x754a	                           jne 0x4003052	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x4003008	      0xbb00000000	                              mov ebx, 0	      2324	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x400300d	    0x488b05000000	            mov rax, qword [0x04003014] 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x4003014	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x4003018	        0x48394838	            cmp qword [rax + 0x38], rcx 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x400301c	            0x750d	                           jne 0x400302b	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x400301e	          0x8b753c	            mov esi, dword [rbp + 0x3c] 	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x4003021	          0x8b7d38	            mov edi, dword [rbp + 0x38] 	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x4003024	      0xe800000000	                          call 0x4003029	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x4003029	            0x89c3	                            mov ebx, eax	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x400302b	      0xe800000000	                          call 0x4003030	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x4003030	            0x89c7	                            mov edi, eax	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x4003032	      0xe800000000	                          call 0x4003037	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x4003037	    0x488b05000000	            mov rax, qword [0x0400303e] 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x400303e	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x4003042	        0x48394838	            cmp qword [rax + 0x38], rcx 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x4003046	            0x750a	                           jne 0x4003052	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x4003048	            0x89de	                            mov esi, ebx	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x400304a	          0x4c89ef	                            mov rdi, r13	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x400304d	      0xe800000000	                          call 0x4003052	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4003052	    0x488b05000000	            mov rax, qword [0x04003059] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4003059	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400305d	      0xba01000000	                              mov edx, 1	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4003062	    0x488b3d000000	            mov rdi, qword [0x04003069] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4003069	      0xe800000000	                          call 0x400306e	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400306e	    0x488b15000000	            mov rdx, qword [0x04003075] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4003075	        0x48635240	         movsxd rdx, dword [rdx + 0x40] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4003079	        0x44882410	              mov byte [rax + rdx], r12b	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400307d	      0xe99d000000	                           jmp 0x400311f	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4003082	    0x833d00000000	               cmp dword [0x04003089], 0	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4003089	     0xf8490000000	                            je 0x400311f	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400308f	    0x488b05000000	            mov rax, qword [0x04003096] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4003096	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400309a	        0x483b4530	            cmp rax, qword [rbp + 0x30] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400309e	            0x757f	                           jne 0x400311f	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40030a0	          0x8b753c	            mov esi, dword [rbp + 0x3c] 	      2344	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40030a3	            0x89f3	                            mov ebx, esi	      2344	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40030a5	        0x483b4520	            cmp rax, qword [rbp + 0x20] 	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40030a9	            0x750b	                           jne 0x40030b6	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40030ab	          0x8b4538	            mov eax, dword [rbp + 0x38] 	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40030ae	          0x394528	            cmp dword [rbp + 0x28], eax 	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40030b1	            0x7503	                           jne 0x40030b6	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40030b3	          0x2b5d2c	             sub ebx, dword [rbp + 0x2c]	      2348	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40030b6	          0x8b7d38	            mov edi, dword [rbp + 0x38] 	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x40030b9	      0xe800000000	                          call 0x40030be	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x40030be	          0x8d7801	                      lea edi, [rax + 1]	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x40030c1	      0xe800000000	                          call 0x40030c6	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x40030c6	    0x488b05000000	            mov rax, qword [0x040030cd] 	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40030cd	          0x8d5301	                      lea edx, [rbx + 1]	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40030d0	          0x295040	             sub dword [rax + 0x40], edx	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40030d3	            0x85db	                           test ebx, ebx	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40030d5	            0x7848	                            js 0x400311f	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40030d7	    0x488b05000000	            mov rax, qword [0x040030de] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40030de	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40030e2	      0xba01000000	                              mov edx, 1	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40030e7	    0x488b3d000000	            mov rdi, qword [0x040030ee] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40030ee	      0xe800000000	                          call 0x40030f3	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40030f3	    0x488b15000000	            mov rdx, qword [0x040030fa] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40030fa	        0x48635240	         movsxd rdx, dword [rdx + 0x40] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40030fe	        0x44882410	              mov byte [rax + rdx], r12b	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x4003102	    0x488b05000000	            mov rax, qword [0x04003109] 	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x4003109	        0x488d7838	                   lea rdi, [rax + 0x38]	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x400310d	      0xe800000000	                          call 0x4003112	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x4003112	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x4003115	            0x7408	                            je 0x400311f	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x4003117	          0x83eb01	                              sub ebx, 1	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x400311a	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x400311d	            0x75b8	                           jne 0x40030d7	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x400311f	      0xe800000000	                          call 0x4003124	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x4003124	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x4003127	            0x750d	                           jne 0x4003136	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x4003129	            0xeb58	                           jmp 0x4003183	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x400312b	    0xc74538000000	               mov dword [rbp + 0x38], 0	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003132	        0x4c8d6d30	                   lea r13, [rbp + 0x30]	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4003136	    0x488b05000000	            mov rax, qword [0x0400313d] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400313d	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003141	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003145	          0x4839d1	                            cmp rcx, rdx	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003148	            0x740b	                            je 0x4003155	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400314a	          0x4839d1	                            cmp rcx, rdx	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400314d	     0xf8c32feffff	                            jl 0x4002f85	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003153	            0xeb2e	                           jmp 0x4003183	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003155	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003158	          0x8b5538	            mov edx, dword [rbp + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400315b	            0x39d1	                            cmp ecx, edx	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400315d	            0x740a	                            je 0x4003169	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400315f	            0x39d1	                            cmp ecx, edx	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003161	     0xf8c1efeffff	                            jl 0x4002f85	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003167	            0xeb0c	                           jmp 0x4003175	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003169	          0x8b4d3c	            mov ecx, dword [rbp + 0x3c] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400316c	          0x394844	            cmp dword [rax + 0x44], ecx 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400316f	     0xf8c10feffff	                            jl 0x4002f85	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003175	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003179	        0x48394840	            cmp qword [rax + 0x40], rcx 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400317d	     0xf8402feffff	                            je 0x4002f85	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003183	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      2370	ops.c	FUNCTION_35
0x4003187	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	      2370	ops.c	FUNCTION_35
0x400318b	    0x488b05000000	            mov rax, qword [0x04003192] 	      2370	ops.c	FUNCTION_35
0x4003192	        0x48894838	             mov qword [rax + 0x38], rcx	      2370	ops.c	FUNCTION_35
0x4003196	        0x48895840	             mov qword [rax + 0x40], rbx	      2370	ops.c	FUNCTION_35
0x400319a	      0xe800000000	                          call 0x400319f	      2371	ops.c	FUNCTION_35	CALL_42
0x400319f	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      2372	ops.c	FUNCTION_35	CALL_43
0x40031a3	        0x488d5001	                      lea rdx, [rax + 1]	      2372	ops.c	FUNCTION_35	CALL_43
0x40031a7	          0x8b7528	            mov esi, dword [rbp + 0x28] 	      2372	ops.c	FUNCTION_35	CALL_43
0x40031aa	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      2372	ops.c	FUNCTION_35	CALL_43
0x40031ae	      0xb900000000	                              mov ecx, 0	      2372	ops.c	FUNCTION_35	CALL_43
0x40031b3	      0xe800000000	                          call 0x40031b8	      2372	ops.c	FUNCTION_35	CALL_43
0x40031b8	    0x488b05000000	            mov rax, qword [0x040031bf] 	      2375	ops.c	FUNCTION_35
0x40031bf	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      2375	ops.c	FUNCTION_35
0x40031c3	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	      2375	ops.c	FUNCTION_35
0x40031c7	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      2375	ops.c	FUNCTION_35
0x40031ce	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      2375	ops.c	FUNCTION_35
0x40031d5	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2376	ops.c	FUNCTION_35
0x40031d9	        0x488b5d38	            mov rbx, qword [rbp + 0x38] 	      2376	ops.c	FUNCTION_35
0x40031dd	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      2376	ops.c	FUNCTION_35
0x40031e4	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      2376	ops.c	FUNCTION_35
0x40031eb	      0xb801000000	                              mov eax, 1	      2378	ops.c	FUNCTION_35
0x40031f0	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      2379	ops.c	FUNCTION_35
0x40031f5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2379	ops.c	FUNCTION_35
0x40031fe	            0x7424	                            je 0x4003224	      2379	ops.c	FUNCTION_35
0x4003200	            0xeb1d	                           jmp 0x400321f	      2379	ops.c	FUNCTION_35
0x4003202	    0x488b05000000	            mov rax, qword [0x04003209] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003209	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x400320d	      0xba00000000	                              mov edx, 0	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003212	          0x4c89f6	                            mov rsi, r14	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003215	      0xe800000000	                          call 0x400321a	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x400321a	      0xe9dafcffff	                           jmp 0x4002ef9	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x400321f	      0xe800000000	                          call 0x4003224	      2379	ops.c	FUNCTION_35
0x4003224	    0x4881c4880000	                           add rsp, 0x88	      2379	ops.c	FUNCTION_35
0x400322b	              0x5b	                                 pop rbx	      2379	ops.c	FUNCTION_35
0x400322c	              0x5d	                                 pop rbp	      2379	ops.c	FUNCTION_35
0x400322d	            0x415c	                                 pop r12	      2379	ops.c	FUNCTION_35
0x400322f	            0x415d	                                 pop r13	      2379	ops.c	FUNCTION_35
0x4003231	            0x415e	                                 pop r14	      2379	ops.c	FUNCTION_35
0x4003233	            0x415f	                                 pop r15	      2379	ops.c	FUNCTION_35
0x4003235	              0xc3	                                     ret	      2379	ops.c	FUNCTION_35
init_write_reg	CALL,4:ELSE,0:WHILE,0:FOR,0:functions,0:IF,2:SWITCH,0:DO,0	35
0x4002366	            0x4156	                                push r14	      6944	ops.c	FUNCTION_83
0x4002368	            0x4155	                                push r13	      6944	ops.c	FUNCTION_83
0x400236a	            0x4154	                                push r12	      6944	ops.c	FUNCTION_83
0x400236c	              0x55	                                push rbp	      6944	ops.c	FUNCTION_83
0x400236d	              0x53	                                push rbx	      6944	ops.c	FUNCTION_83
0x400236e	            0x89fd	                            mov ebp, edi	      6944	ops.c	FUNCTION_83
0x4002370	          0x4989f6	                            mov r14, rsi	      6944	ops.c	FUNCTION_83
0x4002373	          0x4989d5	                            mov r13, rdx	      6944	ops.c	FUNCTION_83
0x4002376	          0x4189cc	                           mov r12d, ecx	      6944	ops.c	FUNCTION_83
0x4002379	      0xbe01000000	                              mov esi, 1	      6945	ops.c	FUNCTION_83	IF_1	CALL_1
0x400237e	      0xe800000000	                          call 0x4002383	      6945	ops.c	FUNCTION_83	IF_1	CALL_1
0x4002383	            0x85c0	                           test eax, eax	      6945	ops.c	FUNCTION_83	IF_1	CALL_1
0x4002385	            0x750b	                           jne 0x4002392	      6945	ops.c	FUNCTION_83	IF_1	CALL_1
0x4002387	            0x89c3	                            mov ebx, eax	      6945	ops.c	FUNCTION_83	IF_1	CALL_1
0x4002389	            0x89ef	                            mov edi, ebp	      6947	ops.c	FUNCTION_83	IF_1	CALL_2
0x400238b	      0xe800000000	                          call 0x4002390	      6947	ops.c	FUNCTION_83	IF_1	CALL_2
0x4002390	            0xeb34	                           jmp 0x40023c6	      6948	ops.c	FUNCTION_83	IF_1
0x4002392	    0x488b05000000	            mov rax, qword [0x04002399] 	      6952	ops.c	FUNCTION_83
0x4002399	          0x498906	                    mov qword [r14], rax	      6952	ops.c	FUNCTION_83
0x400239c	    0x488b05000000	            mov rax, qword [0x040023a3] 	      6953	ops.c	FUNCTION_83
0x40023a3	        0x49894500	                    mov qword [r13], rax	      6953	ops.c	FUNCTION_83
0x40023a7	      0xbe01000000	                              mov esi, 1	      6955	ops.c	FUNCTION_83	CALL_3
0x40023ac	            0x89ef	                            mov edi, ebp	      6955	ops.c	FUNCTION_83	CALL_3
0x40023ae	      0xe800000000	                          call 0x40023b3	      6955	ops.c	FUNCTION_83	CALL_3
0x40023b3	      0xbb01000000	                              mov ebx, 1	      6958	ops.c	FUNCTION_83
0x40023b8	    0x440b25000000	             or r12d, dword [0x040023bf]	      6956	ops.c	FUNCTION_83	IF_2
0x40023bf	            0x7505	                           jne 0x40023c6	      6956	ops.c	FUNCTION_83	IF_2
0x40023c1	      0xe857e0ffff	                  call sym.free_yank_all	      6957	ops.c	FUNCTION_83	CALL_4
0x40023c6	            0x89d8	                            mov eax, ebx	      6959	ops.c	FUNCTION_83
0x40023c8	              0x5b	                                 pop rbx	      6959	ops.c	FUNCTION_83
0x40023c9	              0x5d	                                 pop rbp	      6959	ops.c	FUNCTION_83
0x40023ca	            0x415c	                                 pop r12	      6959	ops.c	FUNCTION_83
0x40023cc	            0x415d	                                 pop r13	      6959	ops.c	FUNCTION_83
0x40023ce	            0x415e	                                 pop r14	      6959	ops.c	FUNCTION_83
0x40023d0	              0xc3	                                     ret	      6959	ops.c	FUNCTION_83
ex_display	CALL,41:ELSE,2:WHILE,0:FOR,3:functions,0:IF,15:SWITCH,0:DO,0	283
0x40090ff	            0x4157	                                push r15	      4245	ops.c	FUNCTION_52
0x4009101	            0x4156	                                push r14	      4245	ops.c	FUNCTION_52
0x4009103	            0x4155	                                push r13	      4245	ops.c	FUNCTION_52
0x4009105	            0x4154	                                push r12	      4245	ops.c	FUNCTION_52
0x4009107	              0x55	                                push rbp	      4245	ops.c	FUNCTION_52
0x4009108	              0x53	                                push rbx	      4245	ops.c	FUNCTION_52
0x4009109	        0x4883ec38	                           sub rsp, 0x38	      4245	ops.c	FUNCTION_52
0x400910d	    0x64488b042528	                mov rax, qword fs:[0x28]	      4245	ops.c	FUNCTION_52
0x4009116	      0x4889442428	             mov qword [rsp + 0x28], rax	      4245	ops.c	FUNCTION_52
0x400911b	            0x31c0	                            xor eax, eax	      4245	ops.c	FUNCTION_52
0x400911d	          0x488b07	                    mov rax, qword [rdi]	      4252	ops.c	FUNCTION_52
0x4009120	        0x48890424	                    mov qword [rsp], rax	      4252	ops.c	FUNCTION_52
0x4009124	          0x4885c0	                           test rax, rax	      4259	ops.c	FUNCTION_52	IF_1
0x4009127	            0x7416	                            je 0x400913f	      4259	ops.c	FUNCTION_52	IF_1
0x4009129	          0x4889c2	                            mov rdx, rax	      4259	ops.c	FUNCTION_52	IF_1
0x400912c	          0x803800	                       cmp byte [rax], 0	      4260	ops.c	FUNCTION_52	IF_1
0x400912f	      0xb800000000	                              mov eax, 0	      4260	ops.c	FUNCTION_52	IF_1
0x4009134	          0x4889c1	                            mov rcx, rax	      4260	ops.c	FUNCTION_52	IF_1
0x4009137	        0x480f45ca	                         cmovne rcx, rdx	      4260	ops.c	FUNCTION_52	IF_1
0x400913b	        0x48890c24	                    mov qword [rsp], rcx	      4260	ops.c	FUNCTION_52	IF_1
0x400913f	    0x8b0500000000	            mov eax, dword [0x04009145] 	      4261	ops.c	FUNCTION_52	CALL_1
0x4009145	        0x8944240c	              mov dword [rsp + 0xc], eax	      4261	ops.c	FUNCTION_52	CALL_1
0x4009149	      0xba05000000	                              mov edx, 5	      4264	ops.c	FUNCTION_52	CALL_3
0x400914e	      0xbe00000000	                              mov esi, 0	      4264	ops.c	FUNCTION_52	CALL_3
0x4009153	      0xbf00000000	                              mov edi, 0	      4264	ops.c	FUNCTION_52	CALL_3
0x4009158	      0xe800000000	                          call 0x400915d	      4264	ops.c	FUNCTION_52	CALL_3
0x400915d	          0x4889c7	                            mov rdi, rax	      4264	ops.c	FUNCTION_52	CALL_3
0x4009160	      0xe800000000	                          call 0x4009165	      4264	ops.c	FUNCTION_52	CALL_3
0x4009165	    0x8b0500000000	            mov eax, dword [0x0400916b] 	      4265	ops.c	FUNCTION_52	FOR_1
0x400916b	            0x85c0	                           test eax, eax	      4265	ops.c	FUNCTION_52	FOR_1
0x400916d	     0xf859a010000	                           jne 0x400930d	      4265	ops.c	FUNCTION_52	FOR_1
0x4009173	    0x41bf00000000	                             mov r15d, 0	      4265	ops.c	FUNCTION_52	FOR_1
0x4009179	        0x418d5fff	                      lea ebx, [r15 - 1]	      4265	ops.c	FUNCTION_52	FOR_1
0x400917d	            0x89df	                            mov edi, ebx	      4267	ops.c	FUNCTION_52	FOR_1	CALL_4
0x400917f	      0xe800000000	                          call 0x4009184	      4267	ops.c	FUNCTION_52	FOR_1	CALL_4
0x4009184	        0x89442414	             mov dword [rsp + 0x14], eax	      4267	ops.c	FUNCTION_52	FOR_1	CALL_4
0x4009188	        0x488b0c24	                    mov rcx, qword [rsp]	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x400918c	          0x4885c9	                           test rcx, rcx	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x400918f	            0x7413	                            je 0x40091a4	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009191	            0x89c6	                            mov esi, eax	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009193	          0x4889cf	                            mov rdi, rcx	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009196	      0xe800000000	                          call 0x400919b	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x400919b	          0x4885c0	                           test rax, rax	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x400919e	     0xf8451010000	                            je 0x40092f5	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x40091a4	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	      4280	ops.c	FUNCTION_52	FOR_1	CALL_7
0x40091a9	      0xe800000000	                          call 0x40091ae	      4280	ops.c	FUNCTION_52	FOR_1	CALL_7
0x40091ae	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	      4281	ops.c	FUNCTION_52	FOR_1	CALL_8
0x40091b2	      0xe800000000	                          call 0x40091b7	      4281	ops.c	FUNCTION_52	FOR_1	CALL_8
0x40091b7	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4284	ops.c	FUNCTION_52	FOR_1	IF_3
0x40091ba	            0x7529	                           jne 0x40091e5	      4284	ops.c	FUNCTION_52	FOR_1	IF_3
0x40091bc	    0x4c8b35000000	            mov r14, qword [0x040091c3] 	      4286	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x40091c3	          0x4d85f6	                           test r14, r14	      4289	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x40091c6	      0xb800000000	                              mov eax, 0	      4289	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x40091cb	        0x4c0f44f0	                          cmove r14, rax	      4289	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x40091cf	    0x8b3d00000000	            mov edi, dword [0x040091d5] 	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091d5	      0xe800000000	                          call 0x40091da	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091da	        0x39442414	            cmp dword [rsp + 0x14], eax 	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091de	            0x7528	                           jne 0x4009208	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091e0	      0xe916010000	                           jmp 0x40092fb	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091e5	    0x8b3d00000000	            mov edi, dword [0x040091eb] 	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091eb	      0xe800000000	                          call 0x40091f0	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091f0	        0x3b442414	            cmp eax, dword [rsp + 0x14] 	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091f4	     0xf84fb000000	                            je 0x40092f5	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091fa	          0x4863db	                         movsxd rbx, ebx	      4292	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x40091fd	        0x48c1e305	                              shl rbx, 5	      4292	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x4009201	    0x4c8db3000000	                          lea r14, [rbx]	      4292	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x4009208	    0x833d00000000	           cmp dword [0x0400920f], 0x22 	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x400920f	            0x750d	                           jne 0x400921e	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x4009211	    0x4c3935000000	            cmp qword [0x04009218], r14 	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x4009218	     0xf84d7000000	                            je 0x40092f5	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x400921e	        0x49833e00	                      cmp qword [r14], 0	      4301	ops.c	FUNCTION_52	FOR_1	IF_6
0x4009222	     0xf84c8000000	                            je 0x40092f0	      4301	ops.c	FUNCTION_52	FOR_1	IF_6
0x4009228	      0xbf0a000000	                            mov edi, 0xa	      4303	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_10
0x400922d	      0xe800000000	                          call 0x4009232	      4303	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_10
0x4009232	      0xbf22000000	                           mov edi, 0x22	      4304	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_11
0x4009237	      0xe800000000	                          call 0x400923c	      4304	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_11
0x400923c	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	      4305	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x4009240	      0xe800000000	                          call 0x4009245	      4305	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x4009245	      0xbf00000000	                              mov edi, 0	      4306	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_13
0x400924a	      0xe800000000	                          call 0x400924f	      4306	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_13
0x400924f	    0x8b0500000000	            mov eax, dword [0x04009255] 	      4308	ops.c	FUNCTION_52	FOR_1	IF_6
0x4009255	        0x448d60fa	                     lea r12d, [rax - 6]	      4308	ops.c	FUNCTION_52	FOR_1	IF_6
0x4009259	      0x49837e0800	                  cmp qword [r14 + 8], 0	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x400925e	            0x7e70	                           jle 0x40092d0	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009260	    0x41bd00000000	                             mov r13d, 0	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009266	        0x4183fc01	                             cmp r12d, 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x400926a	            0x7f19	                            jg 0x4009285	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x400926c	            0xeb62	                           jmp 0x40092d0	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x400926e	          0x4d85ed	                           test r13, r13	      4311	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x4009271	            0x7412	                            je 0x4009285	      4311	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x4009273	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x4009277	      0xbf00000000	                              mov edi, 0	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x400927c	      0xe800000000	                          call 0x4009281	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x4009281	        0x4183ec02	                             sub r12d, 2	      4314	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x4009285	          0x498b06	                    mov rax, qword [r14]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009288	        0x4a8b1ce8	            mov rbx, qword [rax + r13*8]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x400928c	          0x803b00	                       cmp byte [rbx], 0	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x400928f	            0x7522	                           jne 0x40092b3	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009291	            0xeb2d	                           jmp 0x40092c0	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009293	          0x4889df	                            mov rdi, rbx	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4009296	    0xff1500000000	                 call qword [0x0400929c]	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x400929c	            0x89c5	                            mov ebp, eax	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x400929e	            0x89c6	                            mov esi, eax	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x40092a0	          0x4889df	                            mov rdi, rbx	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x40092a3	      0xe800000000	                          call 0x40092a8	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x40092a8	          0x4863ed	                         movsxd rbp, ebp	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40092ab	          0x4801eb	                            add rbx, rbp	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40092ae	          0x803b00	                       cmp byte [rbx], 0	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40092b1	            0x740d	                            je 0x40092c0	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40092b3	          0x4889df	                            mov rdi, rbx	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40092b6	      0xe800000000	                          call 0x40092bb	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40092bb	          0x4129c4	                           sub r12d, eax	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40092be	            0x79d3	                           jns 0x4009293	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x40092c0	        0x4983c501	                              add r13, 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40092c4	        0x4d396e08	                cmp qword [r14 + 8], r13	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40092c8	            0x7e06	                           jle 0x40092d0	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40092ca	        0x4183fc01	                             cmp r12d, 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40092ce	            0x7f9e	                            jg 0x400926e	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40092d0	        0x4183fc01	                             cmp r12d, 1	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x40092d4	            0x7e15	                           jle 0x40092eb	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x40092d6	      0x41807e1001	                cmp byte [r14 + 0x10], 1	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x40092db	            0x750e	                           jne 0x40092eb	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x40092dd	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x40092e1	      0xbf00000000	                              mov edi, 0	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x40092e6	      0xe800000000	                          call 0x40092eb	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x40092eb	      0xe800000000	                          call 0x40092f0	      4329	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_18
0x40092f0	      0xe800000000	                          call 0x40092f5	      4331	ops.c	FUNCTION_52	FOR_1	CALL_19
0x40092f5	        0x4183ff27	                          cmp r15d, 0x27	      4265	ops.c	FUNCTION_52	FOR_1
0x40092f9	            0x7f12	                            jg 0x400930d	      4265	ops.c	FUNCTION_52	FOR_1
0x40092fb	    0x8b0500000000	            mov eax, dword [0x04009301] 	      4265	ops.c	FUNCTION_52	FOR_1
0x4009301	        0x4183c701	                             add r15d, 1	      4265	ops.c	FUNCTION_52	FOR_1
0x4009305	            0x85c0	                           test eax, eax	      4265	ops.c	FUNCTION_52	FOR_1
0x4009307	     0xf846cfeffff	                            je 0x4009179	      4265	ops.c	FUNCTION_52	FOR_1
0x400930d	      0xe800000000	                          call 0x4009312	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x4009312	          0x4889c3	                            mov rbx, rax	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x4009315	          0x4885c0	                           test rax, rax	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x4009318	            0x7440	                            je 0x400935a	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x400931a	        0x488b0424	                    mov rax, qword [rsp]	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x400931e	          0x4885c0	                           test rax, rax	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009321	            0x7416	                            je 0x4009339	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009323	      0xbe2e000000	                           mov esi, 0x2e	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009328	          0x4889c7	                            mov rdi, rax	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x400932b	      0xe800000000	                          call 0x4009330	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009330	          0x4885c0	                           test rax, rax	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009333	     0xf84c6010000	                            je 0x40094ff	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009339	    0x8b0500000000	            mov eax, dword [0x0400933f] 	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x400933f	            0x85c0	                           test eax, eax	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009341	            0x7517	                           jne 0x400935a	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4009343	      0xbf00000000	                              mov edi, 0	      4340	ops.c	FUNCTION_52	IF_9	CALL_22
0x4009348	      0xe800000000	                          call 0x400934d	      4340	ops.c	FUNCTION_52	IF_9	CALL_22
0x400934d	      0xbe01000000	                              mov esi, 1	      4341	ops.c	FUNCTION_52	IF_9	CALL_23
0x4009352	          0x4889df	                            mov rdi, rbx	      4341	ops.c	FUNCTION_52	IF_9	CALL_23
0x4009355	      0xe8fd7affff	                        call sym.dis_msg	      4341	ops.c	FUNCTION_52	IF_9	CALL_23
0x400935a	    0x48833d000000	               cmp qword [0x04009362], 0	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009362	            0x7443	                            je 0x40093a7	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009364	      0x48833c2400	                      cmp qword [rsp], 0	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009369	            0x7417	                            je 0x4009382	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x400936b	      0xbe3a000000	                           mov esi, 0x3a	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009370	        0x488b3c24	                    mov rdi, qword [rsp]	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009374	      0xe800000000	                          call 0x4009379	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009379	          0x4885c0	                           test rax, rax	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x400937c	     0xf848d010000	                            je 0x400950f	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009382	    0x8b0500000000	            mov eax, dword [0x04009388] 	      4348	ops.c	FUNCTION_52	IF_10
0x4009388	            0x85c0	                           test eax, eax	      4348	ops.c	FUNCTION_52	IF_10
0x400938a	            0x751b	                           jne 0x40093a7	      4348	ops.c	FUNCTION_52	IF_10
0x400938c	      0xbf00000000	                              mov edi, 0	      4350	ops.c	FUNCTION_52	IF_10	CALL_25
0x4009391	      0xe800000000	                          call 0x4009396	      4350	ops.c	FUNCTION_52	IF_10	CALL_25
0x4009396	      0xbe00000000	                              mov esi, 0	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x400939b	    0x488b3d000000	            mov rdi, qword [0x040093a2] 	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x40093a2	      0xe8b07affff	                        call sym.dis_msg	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x40093a7	    0x488b05000000	            mov rax, qword [0x040093ae] 	      4357	ops.c	FUNCTION_52	IF_11
0x40093ae	    0x4883b8980000	               cmp qword [rax + 0x98], 0	      4357	ops.c	FUNCTION_52	IF_11
0x40093b6	            0x7446	                            je 0x40093fe	      4357	ops.c	FUNCTION_52	IF_11
0x40093b8	      0x48833c2400	                      cmp qword [rsp], 0	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40093bd	     0xf8479010000	                            je 0x400953c	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40093c3	      0xbe25000000	                           mov esi, 0x25	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40093c8	        0x488b3c24	                    mov rdi, qword [rsp]	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40093cc	      0xe800000000	                          call 0x40093d1	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40093d1	          0x4885c0	                           test rax, rax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40093d4	     0xf854f010000	                           jne 0x4009529	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40093da	            0xeb29	                           jmp 0x4009405	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40093dc	      0xbf00000000	                              mov edi, 0	      4360	ops.c	FUNCTION_52	IF_11	CALL_28
0x40093e1	      0xe800000000	                          call 0x40093e6	      4360	ops.c	FUNCTION_52	IF_11	CALL_28
0x40093e6	    0x488b05000000	            mov rax, qword [0x040093ed] 	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x40093ed	    0x488bb8980000	            mov rdi, qword [rax + 0x98] 	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x40093f4	      0xbe00000000	                              mov esi, 0	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x40093f9	      0xe8597affff	                        call sym.dis_msg	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x40093fe	      0x48833c2400	                      cmp qword [rsp], 0	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009403	            0x7417	                            je 0x400941c	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009405	      0xbe25000000	                           mov esi, 0x25	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x400940a	        0x488b3c24	                    mov rdi, qword [rsp]	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x400940e	      0xe800000000	                          call 0x4009413	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009413	          0x4885c0	                           test rax, rax	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009416	     0xf8433010000	                            je 0x400954f	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x400941c	    0x8b0500000000	            mov eax, dword [0x04009422] 	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009422	            0x85c0	                           test eax, eax	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009424	            0x7531	                           jne 0x4009457	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009426	      0x488d542420	                   lea rdx, [rsp + 0x20]	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x400942b	      0x488d742418	                   lea rsi, [rsp + 0x18]	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009430	      0xbf00000000	                              mov edi, 0	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009435	      0xe800000000	                          call 0x400943a	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x400943a	            0x85c0	                           test eax, eax	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x400943c	            0x7419	                            je 0x4009457	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x400943e	      0xbf00000000	                              mov edi, 0	      4374	ops.c	FUNCTION_52	IF_12	IF_13	CALL_32
0x4009443	      0xe800000000	                          call 0x4009448	      4374	ops.c	FUNCTION_52	IF_12	IF_13	CALL_32
0x4009448	      0xbe00000000	                              mov esi, 0	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x400944d	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x4009452	      0xe8007affff	                        call sym.dis_msg	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x4009457	      0xe800000000	                          call 0x400945c	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x400945c	          0x4885c0	                           test rax, rax	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x400945f	            0x7444	                            je 0x40094a5	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x4009461	      0x48833c2400	                      cmp qword [rsp], 0	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009466	            0x7417	                            je 0x400947f	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009468	      0xbe2f000000	                           mov esi, 0x2f	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x400946d	        0x488b3c24	                    mov rdi, qword [rsp]	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009471	      0xe800000000	                          call 0x4009476	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009476	          0x4885c0	                           test rax, rax	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009479	     0xf84e3000000	                            je 0x4009562	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x400947f	    0x8b0500000000	            mov eax, dword [0x04009485] 	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009485	            0x85c0	                           test eax, eax	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009487	            0x751c	                           jne 0x40094a5	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009489	      0xbf00000000	                              mov edi, 0	      4385	ops.c	FUNCTION_52	IF_14	CALL_36
0x400948e	      0xe800000000	                          call 0x4009493	      4385	ops.c	FUNCTION_52	IF_14	CALL_36
0x4009493	      0xe800000000	                          call 0x4009498	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x4009498	      0xbe00000000	                              mov esi, 0	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x400949d	          0x4889c7	                            mov rdi, rax	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x40094a0	      0xe8b279ffff	                        call sym.dis_msg	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x40094a5	    0x48833d000000	               cmp qword [0x040094ad], 0	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40094ad	     0xf84d9000000	                            je 0x400958c	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40094b3	      0x48833c2400	                      cmp qword [rsp], 0	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40094b8	            0x7417	                            je 0x40094d1	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40094ba	      0xbe3d000000	                           mov esi, 0x3d	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40094bf	        0x488b3c24	                    mov rdi, qword [rsp]	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40094c3	      0xe800000000	                          call 0x40094c8	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40094c8	          0x4885c0	                           test rax, rax	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40094cb	     0xf84bb000000	                            je 0x400958c	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40094d1	    0x8b0500000000	            mov eax, dword [0x040094d7] 	      4394	ops.c	FUNCTION_52	IF_15
0x40094d7	            0x85c0	                           test eax, eax	      4394	ops.c	FUNCTION_52	IF_15
0x40094d9	     0xf85ad000000	                           jne 0x400958c	      4394	ops.c	FUNCTION_52	IF_15
0x40094df	      0xbf00000000	                              mov edi, 0	      4396	ops.c	FUNCTION_52	IF_15	CALL_40
0x40094e4	      0xe800000000	                          call 0x40094e9	      4396	ops.c	FUNCTION_52	IF_15	CALL_40
0x40094e9	      0xbe00000000	                              mov esi, 0	      4397	ops.c	FUNCTION_52	IF_15	CALL_41
0x40094ee	    0x488b3d000000	            mov rdi, qword [0x040094f5] 	      4397	ops.c	FUNCTION_52	IF_15	CALL_41
0x40094f5	      0xe85d79ffff	                        call sym.dis_msg	      4397	ops.c	FUNCTION_52	IF_15	CALL_41
0x40094fa	      0xe98d000000	                           jmp 0x400958c	      4400	ops.c	FUNCTION_52
0x40094ff	    0x48833d000000	               cmp qword [0x04009507], 0	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009507	     0xf855efeffff	                           jne 0x400936b	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x400950d	            0xeb63	                           jmp 0x4009572	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x400950f	    0x488b05000000	            mov rax, qword [0x04009516] 	      4357	ops.c	FUNCTION_52	IF_11
0x4009516	    0x4883b8980000	               cmp qword [rax + 0x98], 0	      4357	ops.c	FUNCTION_52	IF_11
0x400951e	     0xf859ffeffff	                           jne 0x40093c3	      4357	ops.c	FUNCTION_52	IF_11
0x4009524	      0xe9d5feffff	                           jmp 0x40093fe	      4357	ops.c	FUNCTION_52	IF_11
0x4009529	    0x8b0500000000	            mov eax, dword [0x0400952f] 	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x400952f	            0x85c0	                           test eax, eax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4009531	     0xf85cefeffff	                           jne 0x4009405	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4009537	      0xe9a0feffff	                           jmp 0x40093dc	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x400953c	    0x8b0500000000	            mov eax, dword [0x04009542] 	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4009542	            0x85c0	                           test eax, eax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4009544	     0xf85d2feffff	                           jne 0x400941c	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x400954a	      0xe98dfeffff	                           jmp 0x40093dc	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x400954f	      0xe800000000	                          call 0x4009554	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x4009554	          0x4885c0	                           test rax, rax	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x4009557	     0xf850bffffff	                           jne 0x4009468	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x400955d	      0xe943ffffff	                           jmp 0x40094a5	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x4009562	    0x48833d000000	               cmp qword [0x0400956a], 0	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x400956a	     0xf854affffff	                           jne 0x40094ba	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009570	            0xeb1a	                           jmp 0x400958c	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009572	    0x488b05000000	            mov rax, qword [0x04009579] 	      4357	ops.c	FUNCTION_52	IF_11
0x4009579	    0x4883b8980000	               cmp qword [rax + 0x98], 0	      4357	ops.c	FUNCTION_52	IF_11
0x4009581	     0xf853cfeffff	                           jne 0x40093c3	      4357	ops.c	FUNCTION_52	IF_11
0x4009587	      0xe972feffff	                           jmp 0x40093fe	      4357	ops.c	FUNCTION_52	IF_11
0x400958c	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4400	ops.c	FUNCTION_52
0x4009591	    0x644833042528	                xor rax, qword fs:[0x28]	      4400	ops.c	FUNCTION_52
0x400959a	            0x7405	                            je 0x40095a1	      4400	ops.c	FUNCTION_52
0x400959c	      0xe800000000	                          call 0x40095a1	      4400	ops.c	FUNCTION_52
0x40095a1	        0x4883c438	                           add rsp, 0x38	      4400	ops.c	FUNCTION_52
0x40095a5	              0x5b	                                 pop rbx	      4400	ops.c	FUNCTION_52
0x40095a6	              0x5d	                                 pop rbp	      4400	ops.c	FUNCTION_52
0x40095a7	            0x415c	                                 pop r12	      4400	ops.c	FUNCTION_52
0x40095a9	            0x415d	                                 pop r13	      4400	ops.c	FUNCTION_52
0x40095ab	            0x415e	                                 pop r14	      4400	ops.c	FUNCTION_52
0x40095ad	            0x415f	                                 pop r15	      4400	ops.c	FUNCTION_52
0x40095af	              0xc3	                                     ret	      4400	ops.c	FUNCTION_52
preprocs_left	CALL,2:ELSE,0:WHILE,0:FOR,0:functions,0:IF,0:SWITCH,0:DO,0	23
0x4004215	        0x4883ec08	                              sub rsp, 8	      4187	ops.c	FUNCTION_50
0x4004219	    0x488b15000000	            mov rdx, qword [0x04004220] 	      4191	ops.c	FUNCTION_50
0x4004220	    0x83ba74150000	             cmp dword [rdx + 0x1574], 0	      4191	ops.c	FUNCTION_50
0x4004227	            0x7410	                            je 0x4004239	      4191	ops.c	FUNCTION_50
0x4004229	      0xb801000000	                              mov eax, 1	      4191	ops.c	FUNCTION_50
0x400422e	    0x83ba28140000	             cmp dword [rdx + 0x1428], 0	      4191	ops.c	FUNCTION_50
0x4004235	            0x750c	                           jne 0x4004243	      4191	ops.c	FUNCTION_50
0x4004237	            0xeb36	                           jmp 0x400426f	      4191	ops.c	FUNCTION_50
0x4004239	    0x8b8228140000	          mov eax, dword [rdx + 0x1428] 	      4197	ops.c	FUNCTION_50	CALL_2
0x400423f	            0x85c0	                           test eax, eax	      4191	ops.c	FUNCTION_50
0x4004241	            0x742c	                            je 0x400426f	      4191	ops.c	FUNCTION_50
0x4004243	      0xba01000000	                              mov edx, 1	      4197	ops.c	FUNCTION_50	CALL_2
0x4004248	      0xbe20000000	                           mov esi, 0x20	      4197	ops.c	FUNCTION_50	CALL_2
0x400424d	      0xbf23000000	                           mov edi, 0x23	      4197	ops.c	FUNCTION_50	CALL_2
0x4004252	      0xe800000000	                          call 0x4004257	      4197	ops.c	FUNCTION_50	CALL_2
0x4004257	            0x85c0	                           test eax, eax	      4197	ops.c	FUNCTION_50	CALL_2
0x4004259	            0x7414	                            je 0x400426f	      4197	ops.c	FUNCTION_50	CALL_2
0x400425b	    0x488b05000000	            mov rax, qword [0x04004262] 	      4198	ops.c	FUNCTION_50
0x4004262	    0x83b8e8160000	             cmp dword [rax + 0x16e8], 0	      4191	ops.c	FUNCTION_50
0x4004269	           0xf94c0	                                 sete al	      4191	ops.c	FUNCTION_50
0x400426c	           0xfb6c0	                           movzx eax, al	      4191	ops.c	FUNCTION_50
0x400426f	        0x4883c408	                              add rsp, 8	      4201	ops.c	FUNCTION_50
0x4004273	              0xc3	                                     ret	      4201	ops.c	FUNCTION_50
