dis_msg	ELSE,1:DO,0:IF,1:functions,0:WHILE,1:FOR,0:SWITCH,0:CALL,4	59
0x4008f66	              0x55	                                push rbp	      4410	ops.c	FUNCTION_53
0x4008f67	          0x4889e5	                            mov rbp, rsp	      4410	ops.c	FUNCTION_53
0x4008f6a	        0x4883ec20	                           sub rsp, 0x20	      4410	ops.c	FUNCTION_53
0x4008f6e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4410	ops.c	FUNCTION_53
0x4008f72	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4410	ops.c	FUNCTION_53
0x4008f75	    0x488b05000000	            mov rax, qword [0x04008f7c] 	      4416	ops.c	FUNCTION_53
0x4008f7c	          0x83e806	                              sub eax, 6	      4416	ops.c	FUNCTION_53
0x4008f7f	          0x8945f8	                mov dword [rbp - 8], eax	      4416	ops.c	FUNCTION_53
0x4008f82	            0xeb58	                           jmp 0x4008fdc	      4417	ops.c	FUNCTION_53	WHILE_1
0x4008f84	    0x8b0500000000	            mov eax, dword [0x04008f8a] 	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008f8a	            0x85c0	                           test eax, eax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008f8c	            0x7435	                            je 0x4008fc3	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008f8e	    0x488b05000000	            mov rax, qword [0x04008f95] 	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008f95	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008f99	          0x4889d7	                            mov rdi, rdx	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008f9c	            0xffd0	                                call rax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008f9e	          0x8945fc	                mov dword [rbp - 4], eax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008fa1	        0x837dfc01	                  cmp dword [rbp - 4], 1	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008fa5	            0x7e1c	                           jle 0x4008fc3	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008fa7	          0x8b55fc	                mov edx, dword [rbp - 4]	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4008faa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4008fae	            0x89d6	                            mov esi, edx	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4008fb0	          0x4889c7	                            mov rdi, rax	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4008fb3	      0xe800000000	                          call 0x4008fb8	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4008fb8	          0x8b45fc	                mov eax, dword [rbp - 4]	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008fbb	            0x4898	                                    cdqe	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008fbd	        0x480145e8	            add qword [rbp - 0x18], rax 	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008fc1	            0xeb19	                           jmp 0x4008fdc	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4008fc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4008fc7	        0x488d5001	                      lea rdx, [rax + 1]	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4008fcb	        0x488955e8	             mov qword [rbp - 0x18], rdx	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4008fcf	      0xbe01000000	                              mov esi, 1	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4008fd4	          0x4889c7	                            mov rdi, rax	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4008fd7	      0xe800000000	                          call 0x4008fdc	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4008fdc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4417	ops.c	FUNCTION_53	WHILE_1
0x4008fe0	           0xfb600	                   movzx eax, byte [rax]	      4417	ops.c	FUNCTION_53	WHILE_1
0x4008fe3	            0x84c0	                             test al, al	      4417	ops.c	FUNCTION_53	WHILE_1
0x4008fe5	            0x7439	                            je 0x4009020	      4417	ops.c	FUNCTION_53	WHILE_1
0x4008fe7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4418	ops.c	FUNCTION_53	WHILE_1
0x4008feb	           0xfb600	                   movzx eax, byte [rax]	      4418	ops.c	FUNCTION_53	WHILE_1
0x4008fee	            0x3c1b	                            cmp al, 0x1b	      4418	ops.c	FUNCTION_53	WHILE_1
0x4008ff0	            0x7515	                           jne 0x4009007	      4418	ops.c	FUNCTION_53	WHILE_1
0x4008ff2	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4418	ops.c	FUNCTION_53	WHILE_1
0x4008ff6	            0x740f	                            je 0x4009007	      4418	ops.c	FUNCTION_53	WHILE_1
0x4008ff8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4418	ops.c	FUNCTION_53	WHILE_1
0x4008ffc	        0x4883c001	                              add rax, 1	      4418	ops.c	FUNCTION_53	WHILE_1
0x4009000	           0xfb600	                   movzx eax, byte [rax]	      4418	ops.c	FUNCTION_53	WHILE_1
0x4009003	            0x84c0	                             test al, al	      4418	ops.c	FUNCTION_53	WHILE_1
0x4009005	            0x7419	                            je 0x4009020	      4418	ops.c	FUNCTION_53	WHILE_1
0x4009007	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x400900b	          0x4889c7	                            mov rdi, rax	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x400900e	      0xe800000000	                          call 0x4009013	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4009013	          0x2945f8	                sub dword [rbp - 8], eax	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4009016	        0x837df800	                  cmp dword [rbp - 8], 0	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x400901a	     0xf8964ffffff	                           jns 0x4008f84	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4009020	      0xe800000000	                          call 0x4009025	      4431	ops.c	FUNCTION_53	CALL_4
0x4009025	              0x90	                                     nop	      4432	ops.c	FUNCTION_53
0x4009026	              0xc9	                                   leave	      4432	ops.c	FUNCTION_53
0x4009027	              0xc3	                                     ret	      4432	ops.c	FUNCTION_53
op_addsub	ELSE,4:DO,0:IF,19:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,23	266
0x400ad61	              0x55	                                push rbp	      5512	ops.c	FUNCTION_66
0x400ad62	          0x4889e5	                            mov rbp, rsp	      5512	ops.c	FUNCTION_66
0x400ad65	    0x4881ecb00000	                           sub rsp, 0xb0	      5512	ops.c	FUNCTION_66
0x400ad6c	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      5512	ops.c	FUNCTION_66
0x400ad73	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      5512	ops.c	FUNCTION_66
0x400ad7a	    0x89955cffffff	             mov dword [rbp - 0xa4], edx	      5512	ops.c	FUNCTION_66
0x400ad80	    0x64488b042528	                mov rax, qword fs:[0x28]	      5512	ops.c	FUNCTION_66
0x400ad89	        0x488945f8	                mov qword [rbp - 8], rax	      5512	ops.c	FUNCTION_66
0x400ad8d	            0x31c0	                            xor eax, eax	      5512	ops.c	FUNCTION_66
0x400ad8f	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      5515	ops.c	FUNCTION_66
0x400ad99	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5516	ops.c	FUNCTION_66
0x400ada0	        0x48894580	             mov qword [rbp - 0x80], rax	      5516	ops.c	FUNCTION_66
0x400ada4	    0x8b0500000000	            mov eax, dword [0x0400adaa] 	      5518	ops.c	FUNCTION_66	IF_1
0x400adaa	            0x85c0	                           test eax, eax	      5518	ops.c	FUNCTION_66	IF_1
0x400adac	            0x757a	                           jne 0x400ae28	      5518	ops.c	FUNCTION_66	IF_1
0x400adae	    0x488b05000000	            mov rax, qword [0x0400adb5] 	      5520	ops.c	FUNCTION_66	IF_1
0x400adb5	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5520	ops.c	FUNCTION_66	IF_1
0x400adb9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5520	ops.c	FUNCTION_66	IF_1
0x400adbd	        0x48894590	             mov qword [rbp - 0x70], rax	      5520	ops.c	FUNCTION_66	IF_1
0x400adc1	        0x48895598	             mov qword [rbp - 0x68], rdx	      5520	ops.c	FUNCTION_66	IF_1
0x400adc5	      0xe800000000	                          call 0x400adca	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x400adca	            0x85c0	                           test eax, eax	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x400adcc	     0xf840e040000	                            je 0x400b1e0	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x400add2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x400add9	            0x8b00	                    mov eax, dword [rax]	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x400addb	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x400addf	        0x488d7590	                   lea rsi, [rbp - 0x70]	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x400ade3	          0x4889d1	                            mov rcx, rdx	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x400ade6	      0xba00000000	                              mov edx, 0	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x400adeb	            0x89c7	                            mov edi, eax	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x400aded	      0xe808040000	                      call sym.do_addsub	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x400adf2	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x400adf8	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5524	ops.c	FUNCTION_66	IF_1	IF_3
0x400adff	     0xf84df030000	                            je 0x400b1e4	      5524	ops.c	FUNCTION_66	IF_1	IF_3
0x400ae05	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x400ae09	        0x488d5001	                      lea rdx, [rax + 1]	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x400ae0d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x400ae11	      0xb900000000	                              mov ecx, 0	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x400ae16	      0xbe00000000	                              mov esi, 0	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x400ae1b	          0x4889c7	                            mov rdi, rax	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x400ae1e	      0xe800000000	                          call 0x400ae23	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x400ae23	      0xe9bc030000	                           jmp 0x400b1e4	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x400ae28	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5534	ops.c	FUNCTION_66	ELSE_1	IF_4
0x400ae2f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5534	ops.c	FUNCTION_66	ELSE_1	IF_4
0x400ae33	        0x488d5001	                      lea rdx, [rax + 1]	      5534	ops.c	FUNCTION_66	ELSE_1	IF_4
0x400ae37	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400ae3e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400ae42	        0x4883e801	                              sub rax, 1	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400ae46	          0x4889d6	                            mov rsi, rdx	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400ae49	          0x4889c7	                            mov rdi, rax	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400ae4c	      0xe800000000	                          call 0x400ae51	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400ae51	            0x85c0	                           test eax, eax	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400ae53	     0xf848a030000	                            je 0x400b1e3	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x400ae59	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5537	ops.c	FUNCTION_66	ELSE_1
0x400ae60	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5537	ops.c	FUNCTION_66	ELSE_1
0x400ae64	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5537	ops.c	FUNCTION_66	ELSE_1
0x400ae68	        0x48894590	             mov qword [rbp - 0x70], rax	      5537	ops.c	FUNCTION_66	ELSE_1
0x400ae6c	        0x48895598	             mov qword [rbp - 0x68], rdx	      5537	ops.c	FUNCTION_66	ELSE_1
0x400ae70	      0xe981020000	                           jmp 0x400b0f6	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400ae75	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x400ae7c	          0x8b4060	            mov eax, dword [rax + 0x60] 	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x400ae7f	            0x85c0	                           test eax, eax	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x400ae81	            0x7430	                            je 0x400aeb3	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x400ae83	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x400ae87	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x400ae8b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x400ae92	      0xb900000000	                              mov ecx, 0	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x400ae97	          0x4889c7	                            mov rdi, rax	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x400ae9a	      0xe8aef9ffff	                     call sym.block_prep	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x400ae9f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x400aea2	          0x894598	             mov dword [rbp - 0x68], eax	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x400aea5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x400aea8	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x400aeae	      0xe943010000	                           jmp 0x400aff6	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x400aeb3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5546	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x400aeba	          0x8b4008	                mov eax, dword [rax + 8]	      5546	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x400aebd	          0x83f801	                              cmp eax, 1	      5546	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x400aec0	            0x7534	                           jne 0x400aef6	      5546	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x400aec2	    0x488b05000000	            mov rax, qword [0x0400aec9] 	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x400aec9	    0xc74040000000	               mov dword [rax + 0x40], 0	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x400aed0	    0xc74598000000	               mov dword [rbp - 0x68], 0	      5549	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x400aed7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x400aedb	          0x4889c7	                            mov rdi, rax	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x400aede	      0xe800000000	                          call 0x400aee3	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x400aee3	          0x4889c7	                            mov rdi, rax	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x400aee6	      0xe800000000	                          call 0x400aeeb	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x400aeeb	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x400aef1	      0xe900010000	                           jmp 0x400aff6	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x400aef6	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400aefa	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400af01	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400af05	          0x4839c2	                            cmp rdx, rax	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400af08	            0x7521	                           jne 0x400af2b	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400af0a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400af11	          0x8b4014	            mov eax, dword [rax + 0x14] 	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400af14	            0x85c0	                           test eax, eax	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400af16	            0x7513	                           jne 0x400af2b	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x400af18	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x400af1f	        0x4883c030	                           add rax, 0x30	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x400af23	          0x4889c7	                            mov rdi, rax	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x400af26	      0xe800000000	                          call 0x400af2b	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x400af2b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x400af2f	          0x4889c7	                            mov rdi, rax	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x400af32	      0xe800000000	                          call 0x400af37	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x400af37	          0x4889c7	                            mov rdi, rax	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x400af3a	      0xe800000000	                          call 0x400af3f	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x400af3f	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x400af45	    0xc74598000000	               mov dword [rbp - 0x68], 0	      5557	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3
0x400af4c	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af50	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af57	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af5b	          0x4839c2	                            cmp rdx, rax	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af5e	            0x7522	                           jne 0x400af82	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af60	          0x8b5598	             mov edx, dword [rbp - 0x68]	      5560	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af63	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5560	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af6a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5560	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af6d	             0x1d0	                            add eax, edx	      5560	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af6f	          0x894598	             mov dword [rbp - 0x68], eax	      5560	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af72	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5561	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af79	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5561	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af7c	    0x298578ffffff	             sub dword [rbp - 0x88], eax	      5561	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x400af82	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400af86	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400af8d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400af91	          0x4839c2	                            cmp rdx, rax	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400af94	            0x7560	                           jne 0x400aff6	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400af96	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x400af9d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x400afa1	          0x4889c7	                            mov rdi, rax	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x400afa4	      0xe800000000	                          call 0x400afa9	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x400afa9	          0x4889c7	                            mov rdi, rax	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x400afac	      0xe800000000	                          call 0x400afb1	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x400afb1	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x400afb7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x400afbe	          0x8b4038	            mov eax, dword [rax + 0x38] 	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x400afc1	    0x3b8578ffffff	             cmp eax, dword [rbp - 0x88]	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x400afc7	            0x7c13	                            jl 0x400afdc	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x400afc9	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      5567	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x400afcf	          0x8d50ff	                      lea edx, [rax - 1]	      5567	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x400afd2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5567	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x400afd9	          0x895038	             mov dword [rax + 0x38], edx	      5567	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x400afdc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400afe3	          0x8b5038	            mov edx, dword [rax + 0x38] 	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400afe6	          0x8b4598	             mov eax, dword [rbp - 0x68]	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400afe9	            0x29c2	                            sub edx, eax	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400afeb	            0x89d0	                            mov eax, edx	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400afed	          0x83c001	                              add eax, 1	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400aff0	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x400aff6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x400affd	            0x8b00	                    mov eax, dword [rax]	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x400afff	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x400b003	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x400b009	        0x488d7590	                   lea rsi, [rbp - 0x70]	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x400b00d	            0x89c7	                            mov edi, eax	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x400b00f	      0xe8e6010000	                      call sym.do_addsub	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x400b014	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x400b01a	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      5572	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x400b021	            0x742d	                            je 0x400b050	      5572	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x400b023	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5575	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x400b02a	            0x751d	                           jne 0x400b049	      5575	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x400b02c	    0x488b05000000	            mov rax, qword [0x0400b033] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x400b033	    0x488b90e81100	          mov rdx, qword [rax + 0x11e8] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x400b03a	    0x488b80e01100	          mov rax, qword [rax + 0x11e0] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x400b041	        0x488945a0	             mov qword [rbp - 0x60], rax	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x400b045	        0x488955a8	             mov qword [rbp - 0x58], rdx	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x400b049	    0x838574ffffff	               add dword [rbp - 0x8c], 1	      5577	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x400b050	      0xe800000000	                          call 0x400b055	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x400b055	            0x85c0	                           test eax, eax	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x400b057	            0x7474	                            je 0x400b0cd	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x400b059	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x400b060	            0x746b	                            je 0x400b0cd	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x400b062	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x400b066	    0x488b05000000	            mov rax, qword [0x0400b06d] 	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x400b06d	      0xba00000000	                              mov edx, 0	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x400b072	          0x4889ce	                            mov rsi, rcx	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x400b075	          0x4889c7	                            mov rdi, rax	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x400b078	      0xe800000000	                          call 0x400b07d	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x400b07d	        0x48894588	             mov qword [rbp - 0x78], rax	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x400b081	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x400b087	          0x4863c8	                         movsxd rcx, eax	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x400b08a	          0x8b5598	             mov edx, dword [rbp - 0x68]	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x400b08d	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x400b091	    0x488b05000000	            mov rax, qword [0x0400b098] 	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x400b098	          0x4889c7	                            mov rdi, rax	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x400b09b	      0xe800000000	                          call 0x400b0a0	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x400b0a0	          0x8b4598	             mov eax, dword [rbp - 0x68]	      5587	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13
0x400b0a3	          0x4863d0	                         movsxd rdx, eax	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400b0a6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400b0aa	        0x488d0c02	                    lea rcx, [rdx + rax]	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400b0ae	          0x8b5598	             mov edx, dword [rbp - 0x68]	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400b0b1	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400b0b5	    0x488b05000000	            mov rax, qword [0x0400b0bc] 	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400b0bc	    0x8bbd78ffffff	             mov edi, dword [rbp - 0x88]	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400b0c2	          0x4189f8	                            mov r8d, edi	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400b0c5	          0x4889c7	                            mov rdi, rax	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400b0c8	      0xe800000000	                          call 0x400b0cd	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x400b0cd	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      5590	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x400b0d4	            0x7414	                            je 0x400b0ea	      5590	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x400b0d6	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      5590	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x400b0dd	            0x740b	                            je 0x400b0ea	      5590	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x400b0df	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5591	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x400b0e6	        0x48014580	            add qword [rbp - 0x80], rax 	      5591	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x400b0ea	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400b0ee	        0x4883c001	                              add rax, 1	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400b0f2	        0x48894590	             mov qword [rbp - 0x70], rax	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400b0f6	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400b0fa	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400b101	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400b105	          0x4839c2	                            cmp rdx, rax	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400b108	     0xf8e67fdffff	                           jle 0x400ae75	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x400b10e	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5593	ops.c	FUNCTION_66	ELSE_1	IF_15
0x400b115	            0x742c	                            je 0x400b143	      5593	ops.c	FUNCTION_66	ELSE_1	IF_15
0x400b117	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x400b11e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x400b122	        0x488d5001	                      lea rdx, [rax + 1]	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x400b126	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x400b12d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x400b131	      0xb900000000	                              mov ecx, 0	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x400b136	      0xbe00000000	                              mov esi, 0	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x400b13b	          0x4889c7	                            mov rdi, rax	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x400b13e	      0xe800000000	                          call 0x400b143	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x400b143	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x400b14a	            0x7518	                           jne 0x400b164	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x400b14c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x400b153	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x400b156	            0x85c0	                           test eax, eax	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x400b158	            0x740a	                            je 0x400b164	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x400b15a	      0xbf14000000	                           mov edi, 0x14	      5598	ops.c	FUNCTION_66	ELSE_1	CALL_19
0x400b15f	      0xe800000000	                          call 0x400b164	      5598	ops.c	FUNCTION_66	ELSE_1	CALL_19
0x400b164	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5602	ops.c	FUNCTION_66	ELSE_1	IF_17
0x400b16b	            0x7e1d	                           jle 0x400b18a	      5602	ops.c	FUNCTION_66	ELSE_1	IF_17
0x400b16d	    0x488b0d000000	            mov rcx, qword [0x0400b174] 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x400b174	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x400b178	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x400b17c	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x400b183	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x400b18a	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x400b190	          0x4863d0	                         movsxd rdx, eax	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x400b193	    0x488b05000000	            mov rax, qword [0x0400b19a] 	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x400b19a	          0x4839c2	                            cmp rdx, rax	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x400b19d	            0x7e45	                           jle 0x400b1e4	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x400b19f	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 1	      5607	ops.c	FUNCTION_66	ELSE_1	IF_18	IF_19
0x400b1a6	            0x7514	                           jne 0x400b1bc	      5607	ops.c	FUNCTION_66	ELSE_1	IF_18	IF_19
0x400b1a8	      0xbf00000000	                              mov edi, 0	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x400b1ad	      0xe800000000	                          call 0x400b1b2	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x400b1b2	          0x4889c7	                            mov rdi, rax	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x400b1b5	      0xe800000000	                          call 0x400b1ba	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x400b1ba	            0xeb28	                           jmp 0x400b1e4	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x400b1bc	      0xbf00000000	                              mov edi, 0	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x400b1c1	      0xe800000000	                          call 0x400b1c6	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x400b1c6	          0x4889c2	                            mov rdx, rax	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x400b1c9	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x400b1cf	            0x89c6	                            mov esi, eax	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x400b1d1	          0x4889d7	                            mov rdi, rdx	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x400b1d4	      0xb800000000	                              mov eax, 0	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x400b1d9	      0xe800000000	                          call 0x400b1de	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x400b1de	            0xeb04	                           jmp 0x400b1e4	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x400b1e0	              0x90	                                     nop	      5522	ops.c	FUNCTION_66	IF_1	IF_2
0x400b1e1	            0xeb01	                           jmp 0x400b1e4	      5522	ops.c	FUNCTION_66	IF_1	IF_2
0x400b1e3	              0x90	                                     nop	      5535	ops.c	FUNCTION_66	ELSE_1	IF_4
0x400b1e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5613	ops.c	FUNCTION_66
0x400b1e8	    0x644833042528	                xor rax, qword fs:[0x28]	      5613	ops.c	FUNCTION_66
0x400b1f1	            0x7405	                            je 0x400b1f8	      5613	ops.c	FUNCTION_66
0x400b1f3	      0xe800000000	                          call 0x400b1f8	      5613	ops.c	FUNCTION_66
0x400b1f8	              0xc9	                                   leave	      5613	ops.c	FUNCTION_66
0x400b1f9	              0xc3	                                     ret	      5613	ops.c	FUNCTION_66
ends_in_white	ELSE,0:DO,0:IF,1:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,3	37
0x400a58c	              0x55	                                push rbp	      5231	ops.c	FUNCTION_61
0x400a58d	          0x4889e5	                            mov rbp, rsp	      5231	ops.c	FUNCTION_61
0x400a590	        0x4883ec20	                           sub rsp, 0x20	      5231	ops.c	FUNCTION_61
0x400a594	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5231	ops.c	FUNCTION_61
0x400a598	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5232	ops.c	FUNCTION_61	CALL_1
0x400a59c	          0x4889c7	                            mov rdi, rax	      5232	ops.c	FUNCTION_61	CALL_1
0x400a59f	      0xe800000000	                          call 0x400a5a4	      5232	ops.c	FUNCTION_61	CALL_1
0x400a5a4	        0x488945f0	             mov qword [rbp - 0x10], rax	      5232	ops.c	FUNCTION_61	CALL_1
0x400a5a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5235	ops.c	FUNCTION_61	IF_1
0x400a5ac	           0xfb600	                   movzx eax, byte [rax]	      5235	ops.c	FUNCTION_61	IF_1
0x400a5af	            0x84c0	                             test al, al	      5235	ops.c	FUNCTION_61	IF_1
0x400a5b1	            0x7507	                           jne 0x400a5ba	      5235	ops.c	FUNCTION_61	IF_1
0x400a5b3	      0xb800000000	                              mov eax, 0	      5236	ops.c	FUNCTION_61	IF_1
0x400a5b8	            0xeb45	                           jmp 0x400a5ff	      5236	ops.c	FUNCTION_61	IF_1
0x400a5ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5239	ops.c	FUNCTION_61	CALL_2
0x400a5be	          0x4889c7	                            mov rdi, rax	      5239	ops.c	FUNCTION_61	CALL_2
0x400a5c1	      0xe800000000	                          call 0x400a5c6	      5239	ops.c	FUNCTION_61	CALL_2
0x400a5c6	        0x4883e801	                              sub rax, 1	      5239	ops.c	FUNCTION_61	CALL_2
0x400a5ca	        0x488945f8	                mov qword [rbp - 8], rax	      5239	ops.c	FUNCTION_61	CALL_2
0x400a5ce	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5d6	          0x4801d0	                            add rax, rdx	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5d9	           0xfb600	                   movzx eax, byte [rax]	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5dc	            0x3c20	                            cmp al, 0x20	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5de	            0x7412	                            je 0x400a5f2	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5e0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5e8	          0x4801d0	                            add rax, rdx	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5eb	           0xfb600	                   movzx eax, byte [rax]	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5ee	            0x3c09	                               cmp al, 9	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5f0	            0x7507	                           jne 0x400a5f9	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5f2	      0xb801000000	                              mov eax, 1	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5f7	            0xeb05	                           jmp 0x400a5fe	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5f9	      0xb800000000	                              mov eax, 0	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5fe	              0x90	                                     nop	      5240	ops.c	FUNCTION_61	CALL_3
0x400a5ff	              0xc9	                                   leave	      5241	ops.c	FUNCTION_61
0x400a600	              0xc3	                                     ret	      5241	ops.c	FUNCTION_61
yank_copy_line	ELSE,0:DO,0:IF,1:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,4	68
0x4006980	              0x55	                                push rbp	      3403	ops.c	FUNCTION_46
0x4006981	          0x4889e5	                            mov rbp, rsp	      3403	ops.c	FUNCTION_46
0x4006984	        0x4883ec20	                           sub rsp, 0x20	      3403	ops.c	FUNCTION_46
0x4006988	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3403	ops.c	FUNCTION_46
0x400698c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3403	ops.c	FUNCTION_46
0x4006990	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4006994	            0x8b10	                    mov edx, dword [rax]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x4006996	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400699a	          0x8b4004	                mov eax, dword [rax + 4]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400699d	             0x1c2	                            add edx, eax	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400699f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x40069a3	          0x8b4008	                mov eax, dword [rax + 8]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x40069a6	             0x1d0	                            add eax, edx	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x40069a8	          0x83c001	                              add eax, 1	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x40069ab	            0x89c7	                            mov edi, eax	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x40069ad	      0xe800000000	                          call 0x40069b2	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x40069b2	        0x488945f8	                mov qword [rbp - 8], rax	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x40069b6	      0x48837df800	                  cmp qword [rbp - 8], 0	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x40069bb	            0x750a	                           jne 0x40069c7	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x40069bd	      0xb800000000	                              mov eax, 0	      3408	ops.c	FUNCTION_46	IF_1
0x40069c2	      0xe9a4000000	                           jmp 0x4006a6b	      3408	ops.c	FUNCTION_46	IF_1
0x40069c7	    0x488b05000000	            mov rax, qword [0x040069ce] 	      3409	ops.c	FUNCTION_46
0x40069ce	          0x488b00	                    mov rax, qword [rax]	      3409	ops.c	FUNCTION_46
0x40069d1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3409	ops.c	FUNCTION_46
0x40069d5	        0x48c1e203	                              shl rdx, 3	      3409	ops.c	FUNCTION_46
0x40069d9	          0x4801c2	                            add rdx, rax	      3409	ops.c	FUNCTION_46
0x40069dc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3409	ops.c	FUNCTION_46
0x40069e0	          0x488902	                    mov qword [rdx], rax	      3409	ops.c	FUNCTION_46
0x40069e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3410	ops.c	FUNCTION_46	CALL_2
0x40069e7	            0x8b00	                    mov eax, dword [rax]	      3410	ops.c	FUNCTION_46	CALL_2
0x40069e9	          0x4863d0	                         movsxd rdx, eax	      3410	ops.c	FUNCTION_46	CALL_2
0x40069ec	        0x488b45f8	                mov rax, qword [rbp - 8]	      3410	ops.c	FUNCTION_46	CALL_2
0x40069f0	      0xbe20000000	                           mov esi, 0x20	      3410	ops.c	FUNCTION_46	CALL_2
0x40069f5	          0x4889c7	                            mov rdi, rax	      3410	ops.c	FUNCTION_46	CALL_2
0x40069f8	      0xe800000000	                          call 0x40069fd	      3410	ops.c	FUNCTION_46	CALL_2
0x40069fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3411	ops.c	FUNCTION_46
0x4006a01	            0x8b00	                    mov eax, dword [rax]	      3411	ops.c	FUNCTION_46
0x4006a03	            0x4898	                                    cdqe	      3411	ops.c	FUNCTION_46
0x4006a05	        0x480145f8	                add qword [rbp - 8], rax	      3411	ops.c	FUNCTION_46
0x4006a09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3412	ops.c	FUNCTION_46	CALL_3
0x4006a0d	          0x8b4008	                mov eax, dword [rax + 8]	      3412	ops.c	FUNCTION_46	CALL_3
0x4006a10	          0x4863d0	                         movsxd rdx, eax	      3412	ops.c	FUNCTION_46	CALL_3
0x4006a13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3412	ops.c	FUNCTION_46	CALL_3
0x4006a17	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      3412	ops.c	FUNCTION_46	CALL_3
0x4006a1b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	ops.c	FUNCTION_46	CALL_3
0x4006a1f	          0x4889ce	                            mov rsi, rcx	      3412	ops.c	FUNCTION_46	CALL_3
0x4006a22	          0x4889c7	                            mov rdi, rax	      3412	ops.c	FUNCTION_46	CALL_3
0x4006a25	      0xe800000000	                          call 0x4006a2a	      3412	ops.c	FUNCTION_46	CALL_3
0x4006a2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3413	ops.c	FUNCTION_46
0x4006a2e	          0x8b4008	                mov eax, dword [rax + 8]	      3413	ops.c	FUNCTION_46
0x4006a31	            0x4898	                                    cdqe	      3413	ops.c	FUNCTION_46
0x4006a33	        0x480145f8	                add qword [rbp - 8], rax	      3413	ops.c	FUNCTION_46
0x4006a37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3414	ops.c	FUNCTION_46	CALL_4
0x4006a3b	          0x8b4004	                mov eax, dword [rax + 4]	      3414	ops.c	FUNCTION_46	CALL_4
0x4006a3e	          0x4863d0	                         movsxd rdx, eax	      3414	ops.c	FUNCTION_46	CALL_4
0x4006a41	        0x488b45f8	                mov rax, qword [rbp - 8]	      3414	ops.c	FUNCTION_46	CALL_4
0x4006a45	      0xbe20000000	                           mov esi, 0x20	      3414	ops.c	FUNCTION_46	CALL_4
0x4006a4a	          0x4889c7	                            mov rdi, rax	      3414	ops.c	FUNCTION_46	CALL_4
0x4006a4d	      0xe800000000	                          call 0x4006a52	      3414	ops.c	FUNCTION_46	CALL_4
0x4006a52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3415	ops.c	FUNCTION_46
0x4006a56	          0x8b4004	                mov eax, dword [rax + 4]	      3415	ops.c	FUNCTION_46
0x4006a59	            0x4898	                                    cdqe	      3415	ops.c	FUNCTION_46
0x4006a5b	        0x480145f8	                add qword [rbp - 8], rax	      3415	ops.c	FUNCTION_46
0x4006a5f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3416	ops.c	FUNCTION_46
0x4006a63	          0xc60000	                       mov byte [rax], 0	      3416	ops.c	FUNCTION_46
0x4006a66	      0xb801000000	                              mov eax, 1	      3417	ops.c	FUNCTION_46
0x4006a6b	              0xc9	                                   leave	      3418	ops.c	FUNCTION_46
0x4006a6c	              0xc3	                                     ret	      3418	ops.c	FUNCTION_46
do_join	ELSE,3:DO,0:IF,22:functions,0:WHILE,0:FOR,2:SWITCH,0:CALL,34	502
0x400915a	              0x55	                                push rbp	      4526	ops.c	FUNCTION_55
0x400915b	          0x4889e5	                            mov rbp, rsp	      4526	ops.c	FUNCTION_55
0x400915e	              0x53	                                push rbx	      4526	ops.c	FUNCTION_55
0x400915f	    0x4881ec980000	                           sub rsp, 0x98	      4526	ops.c	FUNCTION_55
0x4009166	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      4526	ops.c	FUNCTION_55
0x400916d	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	      4526	ops.c	FUNCTION_55
0x4009173	    0x899570ffffff	             mov dword [rbp - 0x90], edx	      4526	ops.c	FUNCTION_55
0x4009179	    0x898d6cffffff	             mov dword [rbp - 0x94], ecx	      4526	ops.c	FUNCTION_55
0x400917f	    0x44898568ffff	             mov dword [rbp - 0x98], r8d	      4526	ops.c	FUNCTION_55
0x4009186	    0x64488b042528	                mov rax, qword fs:[0x28]	      4526	ops.c	FUNCTION_55
0x400918f	        0x488945e8	             mov qword [rbp - 0x18], rax	      4526	ops.c	FUNCTION_55
0x4009193	            0x31c0	                            xor eax, eax	      4526	ops.c	FUNCTION_55
0x4009195	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      4527	ops.c	FUNCTION_55
0x400919d	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      4528	ops.c	FUNCTION_55
0x40091a5	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      4532	ops.c	FUNCTION_55
0x40091ac	    0xc74590000000	               mov dword [rbp - 0x70], 0	      4533	ops.c	FUNCTION_55
0x40091b3	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      4534	ops.c	FUNCTION_55
0x40091ba	    0xc74598000000	               mov dword [rbp - 0x68], 0	      4535	ops.c	FUNCTION_55
0x40091c1	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      4537	ops.c	FUNCTION_55
0x40091c8	    0xc7459c010000	               mov dword [rbp - 0x64], 1	      4538	ops.c	FUNCTION_55
0x40091cf	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      4540	ops.c	FUNCTION_55
0x40091d7	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 1	      4542	ops.c	FUNCTION_55	CALL_1
0x40091de	            0x7515	                           jne 0x40091f5	      4542	ops.c	FUNCTION_55	CALL_1
0x40091e0	      0xbf6a000000	                           mov edi, 0x6a	      4542	ops.c	FUNCTION_55	CALL_1
0x40091e5	      0xe800000000	                          call 0x40091ea	      4542	ops.c	FUNCTION_55	CALL_1
0x40091ea	            0x85c0	                           test eax, eax	      4542	ops.c	FUNCTION_55	CALL_1
0x40091ec	            0x7407	                            je 0x40091f5	      4542	ops.c	FUNCTION_55	CALL_1
0x40091ee	      0xb801000000	                              mov eax, 1	      4542	ops.c	FUNCTION_55	CALL_1
0x40091f3	            0xeb05	                           jmp 0x40091fa	      4542	ops.c	FUNCTION_55	CALL_1
0x40091f5	      0xb800000000	                              mov eax, 0	      4542	ops.c	FUNCTION_55	CALL_1
0x40091fa	          0x8945a4	             mov dword [rbp - 0x5c], eax	      4541	ops.c	FUNCTION_55
0x40091fd	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4009204	            0x743d	                            je 0x4009243	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4009206	    0x488b05000000	            mov rax, qword [0x0400920d] 	      4548	ops.c	FUNCTION_55	IF_1
0x400920d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4548	ops.c	FUNCTION_55	IF_1
0x4009211	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4009218	          0x4801c2	                            add rdx, rax	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x400921b	    0x488b05000000	            mov rax, qword [0x04009222] 	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4009222	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4009226	        0x4883e801	                              sub rax, 1	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x400922a	          0x4889d6	                            mov rsi, rdx	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x400922d	          0x4889c7	                            mov rdi, rax	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4009230	      0xe800000000	                          call 0x4009235	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4009235	            0x85c0	                           test eax, eax	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4009237	            0x750a	                           jne 0x4009243	      4547	ops.c	FUNCTION_55	IF_1	CALL_2
0x4009239	      0xb800000000	                              mov eax, 0	      4549	ops.c	FUNCTION_55	IF_1
0x400923e	      0xe9f4060000	                           jmp 0x4009937	      4549	ops.c	FUNCTION_55	IF_1
0x4009243	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4554	ops.c	FUNCTION_55	CALL_3
0x400924a	      0xbe01000000	                              mov esi, 1	      4554	ops.c	FUNCTION_55	CALL_3
0x400924f	          0x4889c7	                            mov rdi, rax	      4554	ops.c	FUNCTION_55	CALL_3
0x4009252	      0xe800000000	                          call 0x4009257	      4554	ops.c	FUNCTION_55	CALL_3
0x4009257	        0x488945d0	             mov qword [rbp - 0x30], rax	      4554	ops.c	FUNCTION_55	CALL_3
0x400925b	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4555	ops.c	FUNCTION_55	IF_2
0x4009260	            0x750a	                           jne 0x400926c	      4555	ops.c	FUNCTION_55	IF_2
0x4009262	      0xb800000000	                              mov eax, 0	      4556	ops.c	FUNCTION_55	IF_2
0x4009267	      0xe9cb060000	                           jmp 0x4009937	      4556	ops.c	FUNCTION_55	IF_2
0x400926c	        0x837da400	               cmp dword [rbp - 0x5c], 0	      4558	ops.c	FUNCTION_55	IF_3
0x4009270	            0x7439	                            je 0x40092ab	      4558	ops.c	FUNCTION_55	IF_3
0x4009272	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x4009279	        0x48c1e002	                              shl rax, 2	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x400927d	      0xbe01000000	                              mov esi, 1	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x4009282	          0x4889c7	                            mov rdi, rax	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x4009285	      0xe800000000	                          call 0x400928a	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x400928a	        0x488945c8	             mov qword [rbp - 0x38], rax	      4560	ops.c	FUNCTION_55	IF_3	CALL_4
0x400928e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4561	ops.c	FUNCTION_55	IF_3	IF_4
0x4009293	            0x7516	                           jne 0x40092ab	      4561	ops.c	FUNCTION_55	IF_3	IF_4
0x4009295	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4563	ops.c	FUNCTION_55	IF_3	IF_4	CALL_5
0x4009299	          0x4889c7	                            mov rdi, rax	      4563	ops.c	FUNCTION_55	IF_3	IF_4	CALL_5
0x400929c	      0xe800000000	                          call 0x40092a1	      4563	ops.c	FUNCTION_55	IF_3	IF_4	CALL_5
0x40092a1	      0xb800000000	                              mov eax, 0	      4564	ops.c	FUNCTION_55	IF_3	IF_4
0x40092a6	      0xe98c060000	                           jmp 0x4009937	      4564	ops.c	FUNCTION_55	IF_3	IF_4
0x40092ab	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      4573	ops.c	FUNCTION_55	FOR_1
0x40092b3	      0xe970030000	                           jmp 0x4009628	      4573	ops.c	FUNCTION_55	FOR_1
0x40092b8	    0x488b05000000	            mov rax, qword [0x040092bf] 	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x40092bf	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x40092c3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x40092c7	          0x4801d0	                            add rax, rdx	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x40092ca	          0x4889c7	                            mov rdi, rax	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x40092cd	      0xe800000000	                          call 0x40092d2	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x40092d2	        0x488945b0	             mov qword [rbp - 0x50], rax	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x40092d6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x40092da	        0x488945a8	             mov qword [rbp - 0x58], rax	      4575	ops.c	FUNCTION_55	FOR_1	CALL_6
0x40092de	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x40092e3	            0x7543	                           jne 0x4009328	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x40092e5	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x40092ec	            0x743a	                            je 0x4009328	      4576	ops.c	FUNCTION_55	FOR_1	IF_5
0x40092ee	    0x488b05000000	            mov rax, qword [0x040092f5] 	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x40092f5	        0x488b4008	                mov rax, qword [rax + 8]	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x40092f9	    0x488b15000000	            mov rdx, qword [0x04009300] 	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x4009300	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x4009304	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      4579	ops.c	FUNCTION_55	FOR_1	IF_5
0x400930b	    0x488b05000000	            mov rax, qword [0x04009312] 	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4009312	        0x488b5808	                mov rbx, qword [rax + 8]	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4009316	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x400931a	          0x4889c7	                            mov rdi, rax	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x400931d	      0xe800000000	                          call 0x4009322	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4009322	    0x8983e8110000	          mov dword [rbx + 0x11e8], eax 	      4580	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x4009328	        0x837da400	               cmp dword [rbp - 0x5c], 0	      4583	ops.c	FUNCTION_55	FOR_1	IF_6
0x400932c	            0x7479	                            je 0x40093a7	      4583	ops.c	FUNCTION_55	FOR_1	IF_6
0x400932e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4009333	            0x7e53	                           jle 0x4009388	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4009335	          0x8b4588	             mov eax, dword [rbp - 0x78]	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4009338	            0x85c0	                           test eax, eax	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x400933a	            0x744c	                            je 0x4009388	      4587	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x400933c	        0x488d4d88	                   lea rcx, [rbp - 0x78]	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x4009340	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x4009346	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x400934a	      0xbe01000000	                              mov esi, 1	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x400934f	          0x4889c7	                            mov rdi, rax	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x4009352	      0xe800000000	                          call 0x4009357	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x4009357	        0x488945d8	             mov qword [rbp - 0x28], rax	      4590	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x400935b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x400935f	    0x488d14850000	                        lea rdx, [rax*4]	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4009367	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x400936b	          0x4801d0	                            add rax, rdx	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x400936e	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4009372	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4009376	          0x4829d1	                            sub rcx, rdx	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4009379	          0x4889ca	                            mov rdx, rcx	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x400937c	            0x8910	                    mov dword [rax], edx	      4592	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x400937e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4593	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4009382	        0x488945a8	             mov qword [rbp - 0x58], rax	      4593	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4009386	            0xeb1f	                           jmp 0x40093a7	      4588	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x4009388	        0x488d4d88	                   lea rcx, [rbp - 0x78]	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x400938c	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4009392	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x4009396	      0xbe00000000	                              mov esi, 0	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x400939b	          0x4889c7	                            mov rdi, rax	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x400939e	      0xe800000000	                          call 0x40093a3	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x40093a3	        0x488945a8	             mov qword [rbp - 0x58], rax	      4596	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x40093a7	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x40093ae	     0xf840b010000	                            je 0x40094bf	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x40093b4	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x40093b9	     0xf8e00010000	                           jle 0x40094bf	      4601	ops.c	FUNCTION_55	FOR_1	IF_8
0x40093bf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4603	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x40093c3	          0x4889c7	                            mov rdi, rax	      4603	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x40093c6	      0xe800000000	                          call 0x40093cb	      4603	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x40093cb	        0x488945a8	             mov qword [rbp - 0x58], rax	      4603	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x40093cf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x40093d3	           0xfb600	                   movzx eax, byte [rax]	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x40093d6	            0x3c29	                            cmp al, 0x29	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x40093d8	     0xf84e1000000	                            je 0x40094bf	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x40093de	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x40093e2	     0xf84d7000000	                            je 0x40094bf	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x40093e8	        0x837d8c09	               cmp dword [rbp - 0x74], 9	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x40093ec	     0xf84cd000000	                            je 0x40094bf	      4604	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x40093f2	      0xbf4d000000	                           mov edi, 0x4d	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x40093f7	      0xe800000000	                          call 0x40093fc	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x40093fc	            0x85c0	                           test eax, eax	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x40093fe	            0x7428	                            je 0x4009428	      4606	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x4009400	    0x488b05000000	            mov rax, qword [0x04009407] 	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4009407	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x400940b	          0x4889d7	                            mov rdi, rdx	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x400940e	            0xffd0	                                call rax	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4009410	      0x3dff000000	                           cmp eax, 0xff	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4009415	     0xf8fa4000000	                            jg 0x40094bf	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x400941b	    0x817d8cff0000	           cmp dword [rbp - 0x74], 0xff 	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4009422	     0xf8f97000000	                            jg 0x40094bf	      4607	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x4009428	      0xbf42000000	                           mov edi, 0x42	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x400942d	      0xe800000000	                          call 0x4009432	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x4009432	            0x85c0	                           test eax, eax	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x4009434	            0x7420	                            je 0x4009456	      4608	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x4009436	    0x488b05000000	            mov rax, qword [0x0400943d] 	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x400943d	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4009441	          0x4889d7	                            mov rdi, rdx	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4009444	            0xffd0	                                call rax	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4009446	      0x3dff000000	                           cmp eax, 0xff	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x400944b	            0x7e09	                           jle 0x4009456	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x400944d	    0x817d8cff0000	           cmp dword [rbp - 0x74], 0xff 	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4009454	            0x7f69	                            jg 0x40094bf	      4609	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x4009456	        0x837d8c20	           cmp dword [rbp - 0x74], 0x20 	      4614	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x400945a	            0x7508	                           jne 0x4009464	      4614	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x400945c	          0x8b4590	             mov eax, dword [rbp - 0x70]	      4615	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x400945f	          0x89458c	             mov dword [rbp - 0x74], eax	      4615	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x4009462	            0xeb13	                           jmp 0x4009477	      4615	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x4009464	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4617	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x4009468	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4617	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x400946c	          0x4801d0	                            add rax, rdx	      4617	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x400946f	           0xfb610	                   movzx edx, byte [rax]	      4617	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x4009472	          0x83c201	                              add edx, 1	      4617	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x4009475	            0x8810	                      mov byte [rax], dl	      4617	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x4009477	    0x8b0500000000	            mov eax, dword [0x0400947d] 	      4619	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x400947d	            0x85c0	                           test eax, eax	      4619	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x400947f	            0x743e	                            je 0x40094bf	      4619	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4009481	        0x837d8c2e	           cmp dword [rbp - 0x74], 0x2e 	      4620	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4009485	            0x7425	                            je 0x40094ac	      4620	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x4009487	    0x488b05000000	            mov rax, qword [0x0400948e] 	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x400948e	      0xbe6a000000	                           mov esi, 0x6a	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x4009493	          0x4889c7	                            mov rdi, rax	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x4009496	      0xe800000000	                          call 0x400949b	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x400949b	          0x4885c0	                           test rax, rax	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x400949e	            0x751f	                           jne 0x40094bf	      4621	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x40094a0	        0x837d8c3f	           cmp dword [rbp - 0x74], 0x3f 	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40094a4	            0x7406	                            je 0x40094ac	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40094a6	        0x837d8c21	           cmp dword [rbp - 0x74], 0x21 	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40094aa	            0x7513	                           jne 0x40094bf	      4622	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40094ac	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40094b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40094b4	          0x4801d0	                            add rax, rdx	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40094b7	           0xfb610	                   movzx edx, byte [rax]	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40094ba	          0x83c201	                              add edx, 1	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40094bd	            0x8810	                      mov byte [rax], dl	      4623	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x40094bf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x40094c3	          0x4889c7	                            mov rdi, rax	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x40094c6	      0xe800000000	                          call 0x40094cb	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x40094cb	          0x894594	             mov dword [rbp - 0x6c], eax	      4626	ops.c	FUNCTION_55	FOR_1	CALL_16
0x40094ce	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4627	ops.c	FUNCTION_55	FOR_1
0x40094d2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4627	ops.c	FUNCTION_55	FOR_1
0x40094d6	          0x4801d0	                            add rax, rdx	      4627	ops.c	FUNCTION_55	FOR_1
0x40094d9	           0xfb600	                   movzx eax, byte [rax]	      4627	ops.c	FUNCTION_55	FOR_1
0x40094dc	           0xfb6d0	                           movzx edx, al	      4627	ops.c	FUNCTION_55	FOR_1
0x40094df	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4627	ops.c	FUNCTION_55	FOR_1
0x40094e2	             0x1d0	                            add eax, edx	      4627	ops.c	FUNCTION_55	FOR_1
0x40094e4	           0x14598	             add dword [rbp - 0x68], eax	      4627	ops.c	FUNCTION_55	FOR_1
0x40094e7	    0xc74590000000	               mov dword [rbp - 0x70], 0	      4628	ops.c	FUNCTION_55	FOR_1
0x40094ee	          0x8b4590	             mov eax, dword [rbp - 0x70]	      4628	ops.c	FUNCTION_55	FOR_1
0x40094f1	          0x89458c	             mov dword [rbp - 0x74], eax	      4628	ops.c	FUNCTION_55	FOR_1
0x40094f4	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x40094fb	     0xf8407010000	                            je 0x4009608	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x4009501	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x4009505	     0xf8efd000000	                           jle 0x4009608	      4629	ops.c	FUNCTION_55	FOR_1	IF_12
0x400950b	    0x8b0500000000	            mov eax, dword [0x04009511] 	      4632	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4009511	            0x85c0	                           test eax, eax	      4632	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4009513	     0xf84b7000000	                            je 0x40095d0	      4632	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4009519	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4634	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x400951c	          0x4863d0	                         movsxd rdx, eax	      4634	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x400951f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4634	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4009523	          0x4801d0	                            add rax, rdx	      4634	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4009526	        0x488945b8	             mov qword [rbp - 0x48], rax	      4634	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x400952a	    0x8b0500000000	            mov eax, dword [0x04009530] 	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4009530	            0x85c0	                           test eax, eax	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4009532	            0x7420	                            je 0x4009554	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4009534	    0x488b05000000	            mov rax, qword [0x0400953b] 	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x400953b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x400953f	        0x488d4aff	                      lea rcx, [rdx - 1]	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4009543	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4009547	          0x4889ce	                            mov rsi, rcx	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x400954a	          0x4889d7	                            mov rdi, rdx	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x400954d	            0xffd0	                                call rax	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x400954f	          0x83c001	                              add eax, 1	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4009552	            0xeb05	                           jmp 0x4009559	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4009554	      0xb801000000	                              mov eax, 1	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4009559	            0x4898	                                    cdqe	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x400955b	          0x48f7d8	                                 neg rax	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x400955e	        0x480145b8	            add qword [rbp - 0x48], rax 	      4635	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x4009562	    0x488b05000000	            mov rax, qword [0x04009569] 	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4009569	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x400956d	          0x4889d7	                            mov rdi, rdx	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4009570	            0xffd0	                                call rax	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4009572	          0x89458c	             mov dword [rbp - 0x74], eax	      4636	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x4009575	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4637	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4009579	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      4637	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x400957d	     0xf8685000000	                           jbe 0x4009608	      4637	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x4009583	    0x8b0500000000	            mov eax, dword [0x04009589] 	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4009589	            0x85c0	                           test eax, eax	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x400958b	            0x7420	                            je 0x40095ad	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x400958d	    0x488b05000000	            mov rax, qword [0x04009594] 	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4009594	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x4009598	        0x488d4aff	                      lea rcx, [rdx - 1]	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x400959c	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x40095a0	          0x4889ce	                            mov rsi, rcx	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x40095a3	          0x4889d7	                            mov rdi, rdx	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x40095a6	            0xffd0	                                call rax	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x40095a8	          0x83c001	                              add eax, 1	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x40095ab	            0xeb05	                           jmp 0x40095b2	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x40095ad	      0xb801000000	                              mov eax, 1	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x40095b2	            0x4898	                                    cdqe	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x40095b4	          0x48f7d8	                                 neg rax	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x40095b7	        0x480145b8	            add qword [rbp - 0x48], rax 	      4639	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x40095bb	    0x488b05000000	            mov rax, qword [0x040095c2] 	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x40095c2	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x40095c6	          0x4889d7	                            mov rdi, rdx	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x40095c9	            0xffd0	                                call rax	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x40095cb	          0x894590	             mov dword [rbp - 0x70], eax	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x40095ce	            0xeb38	                           jmp 0x4009608	      4640	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x40095d0	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x40095d3	            0x4898	                                    cdqe	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x40095d5	        0x488d50ff	                      lea rdx, [rax - 1]	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x40095d9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x40095dd	          0x4801d0	                            add rax, rdx	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x40095e0	           0xfb600	                   movzx eax, byte [rax]	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x40095e3	           0xfb6c0	                           movzx eax, al	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x40095e6	          0x89458c	             mov dword [rbp - 0x74], eax	      4646	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x40095e9	        0x837d9401	               cmp dword [rbp - 0x6c], 1	      4647	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x40095ed	            0x7e19	                           jle 0x4009608	      4647	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x40095ef	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x40095f2	            0x4898	                                    cdqe	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x40095f4	        0x488d50fe	                      lea rdx, [rax - 2]	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x40095f8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x40095fc	          0x4801d0	                            add rax, rdx	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x40095ff	           0xfb600	                   movzx eax, byte [rax]	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4009602	           0xfb6c0	                           movzx eax, al	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4009605	          0x894590	             mov dword [rbp - 0x70], eax	      4648	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x4009608	      0xe800000000	                          call 0x400960d	      4651	ops.c	FUNCTION_55	FOR_1	CALL_19
0x400960d	    0x8b0500000000	            mov eax, dword [0x04009613] 	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x4009613	            0x85c0	                           test eax, eax	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x4009615	            0x740c	                            je 0x4009623	      4652	ops.c	FUNCTION_55	FOR_1	IF_16
0x4009617	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      4654	ops.c	FUNCTION_55	FOR_1	IF_16
0x400961e	      0xe9f3020000	                           jmp 0x4009916	      4655	ops.c	FUNCTION_55	FOR_1	IF_16
0x4009623	      0x488345c001	               add qword [rbp - 0x40], 1	      4573	ops.c	FUNCTION_55	FOR_1
0x4009628	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4573	ops.c	FUNCTION_55	FOR_1
0x400962c	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	      4573	ops.c	FUNCTION_55	FOR_1
0x4009633	     0xf8c7ffcffff	                            jl 0x40092b8	      4573	ops.c	FUNCTION_55	FOR_1
0x4009639	          0x8b4598	             mov eax, dword [rbp - 0x68]	      4660	ops.c	FUNCTION_55
0x400963c	          0x2b4594	             sub eax, dword [rbp - 0x6c]	      4660	ops.c	FUNCTION_55
0x400963f	            0x89c2	                            mov edx, eax	      4660	ops.c	FUNCTION_55
0x4009641	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4660	ops.c	FUNCTION_55
0x4009648	        0x488d48ff	                      lea rcx, [rax - 1]	      4660	ops.c	FUNCTION_55
0x400964c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4660	ops.c	FUNCTION_55
0x4009650	          0x4801c8	                            add rax, rcx	      4660	ops.c	FUNCTION_55
0x4009653	           0xfb600	                   movzx eax, byte [rax]	      4660	ops.c	FUNCTION_55
0x4009656	           0xfb6c0	                           movzx eax, al	      4660	ops.c	FUNCTION_55
0x4009659	            0x29c2	                            sub edx, eax	      4660	ops.c	FUNCTION_55
0x400965b	            0x89d0	                            mov eax, edx	      4660	ops.c	FUNCTION_55
0x400965d	          0x8945a0	             mov dword [rbp - 0x60], eax	      4660	ops.c	FUNCTION_55
0x4009660	          0x8b4598	             mov eax, dword [rbp - 0x68]	      4663	ops.c	FUNCTION_55	CALL_20
0x4009663	          0x83c001	                              add eax, 1	      4663	ops.c	FUNCTION_55	CALL_20
0x4009666	            0x89c7	                            mov edi, eax	      4663	ops.c	FUNCTION_55	CALL_20
0x4009668	      0xe800000000	                          call 0x400966d	      4663	ops.c	FUNCTION_55	CALL_20
0x400966d	        0x488945e0	             mov qword [rbp - 0x20], rax	      4663	ops.c	FUNCTION_55	CALL_20
0x4009671	          0x8b4598	             mov eax, dword [rbp - 0x68]	      4664	ops.c	FUNCTION_55
0x4009674	          0x4863d0	                         movsxd rdx, eax	      4664	ops.c	FUNCTION_55
0x4009677	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4664	ops.c	FUNCTION_55
0x400967b	          0x4801d0	                            add rax, rdx	      4664	ops.c	FUNCTION_55
0x400967e	        0x488945b8	             mov qword [rbp - 0x48], rax	      4664	ops.c	FUNCTION_55
0x4009682	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4665	ops.c	FUNCTION_55
0x4009686	          0xc60000	                       mov byte [rax], 0	      4665	ops.c	FUNCTION_55
0x4009689	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4674	ops.c	FUNCTION_55	FOR_2
0x4009690	        0x4883e801	                              sub rax, 1	      4674	ops.c	FUNCTION_55	FOR_2
0x4009694	        0x488945c0	             mov qword [rbp - 0x40], rax	      4674	ops.c	FUNCTION_55	FOR_2
0x4009698	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4676	ops.c	FUNCTION_55	FOR_2
0x400969b	            0x4898	                                    cdqe	      4676	ops.c	FUNCTION_55	FOR_2
0x400969d	          0x48f7d8	                                 neg rax	      4676	ops.c	FUNCTION_55	FOR_2
0x40096a0	        0x480145b8	            add qword [rbp - 0x48], rax 	      4676	ops.c	FUNCTION_55	FOR_2
0x40096a4	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4677	ops.c	FUNCTION_55	FOR_2	CALL_21
0x40096a7	          0x4863d0	                         movsxd rdx, eax	      4677	ops.c	FUNCTION_55	FOR_2	CALL_21
0x40096aa	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4677	ops.c	FUNCTION_55	FOR_2	CALL_21
0x40096ae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4677	ops.c	FUNCTION_55	FOR_2	CALL_21
0x40096b2	          0x4889ce	                            mov rsi, rcx	      4677	ops.c	FUNCTION_55	FOR_2	CALL_21
0x40096b5	          0x4889c7	                            mov rdi, rax	      4677	ops.c	FUNCTION_55	FOR_2	CALL_21
0x40096b8	      0xe800000000	                          call 0x40096bd	      4677	ops.c	FUNCTION_55	FOR_2	CALL_21
0x40096bd	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096c5	          0x4801d0	                            add rax, rdx	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096c8	           0xfb600	                   movzx eax, byte [rax]	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096cb	            0x84c0	                             test al, al	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096cd	            0x743a	                            je 0x4009709	      4678	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096cf	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4680	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4680	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096d7	          0x4801d0	                            add rax, rdx	      4680	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096da	           0xfb600	                   movzx eax, byte [rax]	      4680	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096dd	           0xfb6c0	                           movzx eax, al	      4680	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096e0	          0x48f7d8	                                 neg rax	      4680	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096e3	        0x480145b8	            add qword [rbp - 0x48], rax 	      4680	ops.c	FUNCTION_55	FOR_2	IF_17
0x40096e7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4681	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x40096eb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4681	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x40096ef	          0x4801d0	                            add rax, rdx	      4681	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x40096f2	           0xfb600	                   movzx eax, byte [rax]	      4681	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x40096f5	           0xfb6d0	                           movzx edx, al	      4681	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x40096f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4681	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x40096fc	      0xbe20000000	                           mov esi, 0x20	      4681	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x4009701	          0x4889c7	                            mov rdi, rax	      4681	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x4009704	      0xe800000000	                          call 0x4009709	      4681	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x4009709	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4684	ops.c	FUNCTION_55	FOR_2
0x400970d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4684	ops.c	FUNCTION_55	FOR_2
0x4009711	          0x4889d1	                            mov rcx, rdx	      4684	ops.c	FUNCTION_55	FOR_2
0x4009714	          0x4829c1	                            sub rcx, rax	      4684	ops.c	FUNCTION_55	FOR_2
0x4009717	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4684	ops.c	FUNCTION_55	FOR_2
0x400971b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4684	ops.c	FUNCTION_55	FOR_2
0x400971f	          0x4801d0	                            add rax, rdx	      4684	ops.c	FUNCTION_55	FOR_2
0x4009722	           0xfb600	                   movzx eax, byte [rax]	      4684	ops.c	FUNCTION_55	FOR_2
0x4009725	           0xfb6c0	                           movzx eax, al	      4684	ops.c	FUNCTION_55	FOR_2
0x4009728	          0x4801c1	                            add rcx, rax	      4684	ops.c	FUNCTION_55	FOR_2
0x400972b	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4684	ops.c	FUNCTION_55	FOR_2
0x400972f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4684	ops.c	FUNCTION_55	FOR_2
0x4009733	          0x4829c2	                            sub rdx, rax	      4684	ops.c	FUNCTION_55	FOR_2
0x4009736	          0x4889d0	                            mov rax, rdx	      4684	ops.c	FUNCTION_55	FOR_2
0x4009739	          0x4829c1	                            sub rcx, rax	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x400973c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4009740	          0x48f7d8	                                 neg rax	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4009743	          0x4889c2	                            mov rdx, rax	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4009746	    0x488b05000000	            mov rax, qword [0x0400974d] 	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x400974d	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4009751	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4009755	          0x4801f0	                            add rax, rsi	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4009758	      0xbe00000000	                              mov esi, 0	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x400975d	          0x4889c7	                            mov rdi, rax	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4009760	      0xe800000000	                          call 0x4009765	      4683	ops.c	FUNCTION_55	FOR_2	CALL_23
0x4009765	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4685	ops.c	FUNCTION_55	FOR_2	IF_18
0x400976a	     0xf8484000000	                            je 0x40097f4	      4685	ops.c	FUNCTION_55	FOR_2	IF_18
0x4009770	    0x488b05000000	            mov rax, qword [0x04009777] 	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4009777	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x400977b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x400977f	          0x4801d0	                            add rax, rdx	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4009782	        0x4883e801	                              sub rax, 1	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4009786	          0x4889c7	                            mov rdi, rax	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4009789	      0xe800000000	                          call 0x400978e	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x400978e	        0x488945b0	             mov qword [rbp - 0x50], rax	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4009792	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x4009796	        0x488945a8	             mov qword [rbp - 0x58], rax	      4687	ops.c	FUNCTION_55	FOR_2	CALL_24
0x400979a	        0x837da400	               cmp dword [rbp - 0x5c], 0	      4689	ops.c	FUNCTION_55	FOR_2	IF_19
0x400979e	            0x741b	                            je 0x40097bb	      4689	ops.c	FUNCTION_55	FOR_2	IF_19
0x40097a0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x40097a4	        0x48c1e002	                              shl rax, 2	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x40097a8	        0x488d50fc	                      lea rdx, [rax - 4]	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x40097ac	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x40097b0	          0x4801d0	                            add rax, rdx	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x40097b3	            0x8b00	                    mov eax, dword [rax]	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x40097b5	            0x4898	                                    cdqe	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x40097b7	        0x480145a8	            add qword [rbp - 0x58], rax 	      4690	ops.c	FUNCTION_55	FOR_2	IF_19
0x40097bb	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x40097c2	            0x7417	                            je 0x40097db	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x40097c4	      0x48837dc001	               cmp qword [rbp - 0x40], 1	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x40097c9	            0x7e10	                           jle 0x40097db	      4692	ops.c	FUNCTION_55	FOR_2	IF_20
0x40097cb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4693	ops.c	FUNCTION_55	FOR_2	CALL_25
0x40097cf	          0x4889c7	                            mov rdi, rax	      4693	ops.c	FUNCTION_55	FOR_2	CALL_25
0x40097d2	      0xe800000000	                          call 0x40097d7	      4693	ops.c	FUNCTION_55	FOR_2	CALL_25
0x40097d7	        0x488945a8	             mov qword [rbp - 0x58], rax	      4693	ops.c	FUNCTION_55	FOR_2	CALL_25
0x40097db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x40097df	          0x4889c7	                            mov rdi, rax	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x40097e2	      0xe800000000	                          call 0x40097e7	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x40097e7	          0x894594	             mov dword [rbp - 0x6c], eax	      4694	ops.c	FUNCTION_55	FOR_2	CALL_26
0x40097ea	      0x48836dc001	               sub qword [rbp - 0x40], 1	      4674	ops.c	FUNCTION_55	FOR_2
0x40097ef	      0xe9a4feffff	                           jmp 0x4009698	      4695	ops.c	FUNCTION_55	FOR_2
0x40097f4	              0x90	                                     nop	      4686	ops.c	FUNCTION_55	FOR_2	IF_18
0x40097f5	    0x488b05000000	            mov rax, qword [0x040097fc] 	      4696	ops.c	FUNCTION_55	CALL_27
0x40097fc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4696	ops.c	FUNCTION_55	CALL_27
0x4009800	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      4696	ops.c	FUNCTION_55	CALL_27
0x4009804	      0xba00000000	                              mov edx, 0	      4696	ops.c	FUNCTION_55	CALL_27
0x4009809	          0x4889ce	                            mov rsi, rcx	      4696	ops.c	FUNCTION_55	CALL_27
0x400980c	          0x4889c7	                            mov rdi, rax	      4696	ops.c	FUNCTION_55	CALL_27
0x400980f	      0xe800000000	                          call 0x4009814	      4696	ops.c	FUNCTION_55	CALL_27
0x4009814	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      4698	ops.c	FUNCTION_55	IF_21
0x400981b	            0x743a	                            je 0x4009857	      4698	ops.c	FUNCTION_55	IF_21
0x400981d	    0x488b05000000	            mov rax, qword [0x04009824] 	      4701	ops.c	FUNCTION_55	IF_21
0x4009824	        0x488b4008	                mov rax, qword [rax + 8]	      4701	ops.c	FUNCTION_55	IF_21
0x4009828	    0x488b15000000	            mov rdx, qword [0x0400982f] 	      4701	ops.c	FUNCTION_55	IF_21
0x400982f	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      4701	ops.c	FUNCTION_55	IF_21
0x4009833	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      4701	ops.c	FUNCTION_55	IF_21
0x400983a	    0x488b05000000	            mov rax, qword [0x04009841] 	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4009841	        0x488b5808	                mov rbx, qword [rax + 8]	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4009845	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4009849	          0x4889c7	                            mov rdi, rax	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x400984c	      0xe800000000	                          call 0x4009851	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4009851	    0x898308120000	          mov dword [rbx + 0x1208], eax 	      4702	ops.c	FUNCTION_55	IF_21	CALL_28
0x4009857	    0x488b05000000	            mov rax, qword [0x0400985e] 	      4708	ops.c	FUNCTION_55
0x400985e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4708	ops.c	FUNCTION_55
0x4009862	        0x488d5001	                      lea rdx, [rax + 1]	      4707	ops.c	FUNCTION_55	CALL_29
0x4009866	    0x488b05000000	            mov rax, qword [0x0400986d] 	      4707	ops.c	FUNCTION_55	CALL_29
0x400986d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4707	ops.c	FUNCTION_55	CALL_29
0x4009871	          0x8b7594	             mov esi, dword [rbp - 0x6c]	      4707	ops.c	FUNCTION_55	CALL_29
0x4009874	      0xb900000000	                              mov ecx, 0	      4707	ops.c	FUNCTION_55	CALL_29
0x4009879	          0x4889c7	                            mov rdi, rax	      4707	ops.c	FUNCTION_55	CALL_29
0x400987c	      0xe800000000	                          call 0x4009881	      4707	ops.c	FUNCTION_55	CALL_29
0x4009881	    0x488b05000000	            mov rax, qword [0x04009888] 	      4715	ops.c	FUNCTION_55
0x4009888	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4715	ops.c	FUNCTION_55
0x400988c	        0x488945c0	             mov qword [rbp - 0x40], rax	      4715	ops.c	FUNCTION_55
0x4009890	    0x488b05000000	            mov rax, qword [0x04009897] 	      4716	ops.c	FUNCTION_55
0x4009897	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4716	ops.c	FUNCTION_55
0x400989b	        0x4883c201	                              add rdx, 1	      4716	ops.c	FUNCTION_55
0x400989f	        0x48895038	             mov qword [rax + 0x38], rdx	      4716	ops.c	FUNCTION_55
0x40098a3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4717	ops.c	FUNCTION_55	CALL_30
0x40098aa	        0x4883e801	                              sub rax, 1	      4717	ops.c	FUNCTION_55	CALL_30
0x40098ae	      0xbe00000000	                              mov esi, 0	      4717	ops.c	FUNCTION_55	CALL_30
0x40098b3	          0x4889c7	                            mov rdi, rax	      4717	ops.c	FUNCTION_55	CALL_30
0x40098b6	      0xe800000000	                          call 0x40098bb	      4717	ops.c	FUNCTION_55	CALL_30
0x40098bb	    0x488b05000000	            mov rax, qword [0x040098c2] 	      4718	ops.c	FUNCTION_55
0x40098c2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4718	ops.c	FUNCTION_55
0x40098c6	        0x48895038	             mov qword [rax + 0x38], rdx	      4718	ops.c	FUNCTION_55
0x40098ca	    0x488b1d000000	            mov rbx, qword [0x040098d1] 	      4725	ops.c	FUNCTION_55
0x40098d1	    0x488b05000000	            mov rax, qword [0x040098d8] 	      4726	ops.c	FUNCTION_55	CALL_31
0x40098d8	      0xbe71000000	                           mov esi, 0x71	      4726	ops.c	FUNCTION_55	CALL_31
0x40098dd	          0x4889c7	                            mov rdi, rax	      4726	ops.c	FUNCTION_55	CALL_31
0x40098e0	      0xe800000000	                          call 0x40098e5	      4726	ops.c	FUNCTION_55	CALL_31
0x40098e5	          0x4885c0	                           test rax, rax	      4726	ops.c	FUNCTION_55	CALL_31
0x40098e8	            0x7405	                            je 0x40098ef	      4726	ops.c	FUNCTION_55	CALL_31
0x40098ea	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4726	ops.c	FUNCTION_55	CALL_31
0x40098ed	            0xeb03	                           jmp 0x40098f2	      4726	ops.c	FUNCTION_55	CALL_31
0x40098ef	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4726	ops.c	FUNCTION_55	CALL_31
0x40098f2	          0x894340	             mov dword [rbx + 0x40], eax	      4725	ops.c	FUNCTION_55
0x40098f5	      0xe800000000	                          call 0x40098fa	      4727	ops.c	FUNCTION_55	CALL_32
0x40098fa	    0x488b05000000	            mov rax, qword [0x04009901] 	      4730	ops.c	FUNCTION_55
0x4009901	    0xc74044000000	               mov dword [rax + 0x44], 0	      4730	ops.c	FUNCTION_55
0x4009908	    0x488b05000000	            mov rax, qword [0x0400990f] 	      4732	ops.c	FUNCTION_55
0x400990f	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      4732	ops.c	FUNCTION_55
0x4009916	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4735	ops.c	FUNCTION_55	CALL_33
0x400991a	          0x4889c7	                            mov rdi, rax	      4735	ops.c	FUNCTION_55	CALL_33
0x400991d	      0xe800000000	                          call 0x4009922	      4735	ops.c	FUNCTION_55	CALL_33
0x4009922	        0x837da400	               cmp dword [rbp - 0x5c], 0	      4737	ops.c	FUNCTION_55	IF_22
0x4009926	            0x740c	                            je 0x4009934	      4737	ops.c	FUNCTION_55	IF_22
0x4009928	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4738	ops.c	FUNCTION_55	CALL_34
0x400992c	          0x4889c7	                            mov rdi, rax	      4738	ops.c	FUNCTION_55	CALL_34
0x400992f	      0xe800000000	                          call 0x4009934	      4738	ops.c	FUNCTION_55	CALL_34
0x4009934	          0x8b459c	             mov eax, dword [rbp - 0x64]	      4740	ops.c	FUNCTION_55
0x4009937	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4741	ops.c	FUNCTION_55
0x400993b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4741	ops.c	FUNCTION_55
0x4009944	            0x7405	                            je 0x400994b	      4741	ops.c	FUNCTION_55
0x4009946	      0xe800000000	                          call 0x400994b	      4741	ops.c	FUNCTION_55
0x400994b	    0x4881c4980000	                           add rsp, 0x98	      4741	ops.c	FUNCTION_55
0x4009952	              0x5b	                                 pop rbx	      4741	ops.c	FUNCTION_55
0x4009953	              0x5d	                                 pop rbp	      4741	ops.c	FUNCTION_55
0x4009954	              0xc3	                                     ret	      4741	ops.c	FUNCTION_55
dnd_yank_drag_data	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,2	22
0x400daf9	              0x55	                                push rbp	      6742	ops.c	FUNCTION_79
0x400dafa	          0x4889e5	                            mov rbp, rsp	      6742	ops.c	FUNCTION_79
0x400dafd	        0x4883ec20	                           sub rsp, 0x20	      6742	ops.c	FUNCTION_79
0x400db01	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6742	ops.c	FUNCTION_79
0x400db05	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6742	ops.c	FUNCTION_79
0x400db09	    0x488b05000000	            mov rax, qword [0x0400db10] 	      6745	ops.c	FUNCTION_79
0x400db10	        0x488945f8	                mov qword [rbp - 8], rax	      6745	ops.c	FUNCTION_79
0x400db14	    0x48c705000000	               mov qword [0x0400db1f], 0	      6746	ops.c	FUNCTION_79
0x400db1f	      0xe89a80ffff	                  call sym.free_yank_all	      6747	ops.c	FUNCTION_79	CALL_1
0x400db24	    0x488b05000000	            mov rax, qword [0x0400db2b] 	      6748	ops.c	FUNCTION_79	CALL_2
0x400db2b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      6748	ops.c	FUNCTION_79	CALL_2
0x400db2f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6748	ops.c	FUNCTION_79	CALL_2
0x400db33	    0x41b900000000	                              mov r9d, 0	      6748	ops.c	FUNCTION_79	CALL_2
0x400db39	    0x41b800000000	                              mov r8d, 0	      6748	ops.c	FUNCTION_79	CALL_2
0x400db3f	      0xbe00000000	                              mov esi, 0	      6748	ops.c	FUNCTION_79	CALL_2
0x400db44	          0x4889c7	                            mov rdi, rax	      6748	ops.c	FUNCTION_79	CALL_2
0x400db47	      0xe8dd080000	                     call sym.str_to_reg	      6748	ops.c	FUNCTION_79	CALL_2
0x400db4c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6749	ops.c	FUNCTION_79
0x400db50	    0x488905000000	            mov qword [0x0400db57], rax 	      6749	ops.c	FUNCTION_79
0x400db57	              0x90	                                     nop	      6750	ops.c	FUNCTION_79
0x400db58	              0xc9	                                   leave	      6750	ops.c	FUNCTION_79
0x400db59	              0xc3	                                     ret	      6750	ops.c	FUNCTION_79
insert_reg	ELSE,3:DO,0:IF,9:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,10	112
0x400216a	              0x55	                                push rbp	      1402	ops.c	FUNCTION_26
0x400216b	          0x4889e5	                            mov rbp, rsp	      1402	ops.c	FUNCTION_26
0x400216e	        0x4883ec40	                           sub rsp, 0x40	      1402	ops.c	FUNCTION_26
0x4002172	          0x897dcc	             mov dword [rbp - 0x34], edi	      1402	ops.c	FUNCTION_26
0x4002175	          0x8975c8	             mov dword [rbp - 0x38], esi	      1402	ops.c	FUNCTION_26
0x4002178	    0x64488b042528	                mov rax, qword fs:[0x28]	      1402	ops.c	FUNCTION_26
0x4002181	        0x488945f8	                mov qword [rbp - 8], rax	      1402	ops.c	FUNCTION_26
0x4002185	            0x31c0	                            xor eax, eax	      1402	ops.c	FUNCTION_26
0x4002187	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      1404	ops.c	FUNCTION_26
0x400218e	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1407	ops.c	FUNCTION_26
0x4002191	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1407	ops.c	FUNCTION_26
0x4002194	      0xe800000000	                          call 0x4002199	      1414	ops.c	FUNCTION_26	CALL_1
0x4002199	    0x8b0500000000	            mov eax, dword [0x0400219f] 	      1415	ops.c	FUNCTION_26	IF_1
0x400219f	            0x85c0	                           test eax, eax	      1415	ops.c	FUNCTION_26	IF_1
0x40021a1	            0x740a	                            je 0x40021ad	      1415	ops.c	FUNCTION_26	IF_1
0x40021a3	      0xb800000000	                              mov eax, 0	      1416	ops.c	FUNCTION_26	IF_1
0x40021a8	      0xe955010000	                           jmp 0x4002302	      1416	ops.c	FUNCTION_26	IF_1
0x40021ad	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x40021b1	            0x741d	                            je 0x40021d0	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x40021b3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x40021b6	      0xbe00000000	                              mov esi, 0	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x40021bb	            0x89c7	                            mov edi, eax	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x40021bd	      0xe800000000	                          call 0x40021c2	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x40021c2	            0x85c0	                           test eax, eax	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x40021c4	            0x750a	                           jne 0x40021d0	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x40021c6	      0xb800000000	                              mov eax, 0	      1420	ops.c	FUNCTION_26	IF_2
0x40021cb	      0xe932010000	                           jmp 0x4002302	      1420	ops.c	FUNCTION_26	IF_2
0x40021d0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1423	ops.c	FUNCTION_26	CALL_3
0x40021d3	            0x89c7	                            mov edi, eax	      1423	ops.c	FUNCTION_26	CALL_3
0x40021d5	      0xe800000000	                          call 0x40021da	      1423	ops.c	FUNCTION_26	CALL_3
0x40021da	          0x8945cc	             mov dword [rbp - 0x34], eax	      1423	ops.c	FUNCTION_26	CALL_3
0x40021dd	        0x837dcc2e	           cmp dword [rbp - 0x34], 0x2e 	      1426	ops.c	FUNCTION_26	IF_3
0x40021e1	            0x751c	                           jne 0x40021ff	      1426	ops.c	FUNCTION_26	IF_3
0x40021e3	      0xba01000000	                              mov edx, 1	      1427	ops.c	FUNCTION_26	CALL_4
0x40021e8	      0xbe01000000	                              mov esi, 1	      1427	ops.c	FUNCTION_26	CALL_4
0x40021ed	      0xbf00000000	                              mov edi, 0	      1427	ops.c	FUNCTION_26	CALL_4
0x40021f2	      0xe800000000	                          call 0x40021f7	      1427	ops.c	FUNCTION_26	CALL_4
0x40021f7	          0x8945e0	             mov dword [rbp - 0x20], eax	      1427	ops.c	FUNCTION_26	CALL_4
0x40021fa	      0xe900010000	                           jmp 0x40022ff	      1427	ops.c	FUNCTION_26	CALL_4
0x40021ff	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4002203	        0x488d75e8	                   lea rsi, [rbp - 0x18]	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4002207	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x400220a	      0xb901000000	                              mov ecx, 1	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x400220f	            0x89c7	                            mov edi, eax	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4002211	      0xe800000000	                          call 0x4002216	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4002216	            0x85c0	                           test eax, eax	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4002218	            0x7440	                            je 0x400225a	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x400221a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x400221e	          0x4885c0	                           test rax, rax	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x4002221	            0x750a	                           jne 0x400222d	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x4002223	      0xb800000000	                              mov eax, 0	      1431	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x4002228	      0xe9d5000000	                           jmp 0x4002302	      1431	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x400222d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1432	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x4002231	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1432	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x4002234	            0x89d6	                            mov esi, edx	      1432	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x4002236	          0x4889c7	                            mov rdi, rax	      1432	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x4002239	      0xe8da000000	                   call sym.stuffescaped	      1432	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x400223e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1433	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x4002241	            0x85c0	                           test eax, eax	      1433	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x4002243	     0xf84b6000000	                            je 0x40022ff	      1433	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x4002249	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x400224d	          0x4889c7	                            mov rdi, rax	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x4002250	      0xe800000000	                          call 0x4002255	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x4002255	      0xe9a5000000	                           jmp 0x40022ff	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x400225a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x400225d	      0xbe00000000	                              mov esi, 0	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x4002262	            0x89c7	                            mov edi, eax	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x4002264	      0xe800000000	                          call 0x4002269	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x4002269	            0x85c0	                           test eax, eax	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x400226b	            0x7407	                            je 0x4002274	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x400226d	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      1439	ops.c	FUNCTION_26	ELSE_2	IF_7
0x4002274	    0x488b05000000	            mov rax, qword [0x0400227b] 	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x400227b	          0x488b00	                    mov rax, qword [rax]	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x400227e	          0x4885c0	                           test rax, rax	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x4002281	            0x7509	                           jne 0x400228c	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x4002283	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1441	ops.c	FUNCTION_26	ELSE_2	IF_8
0x400228a	            0xeb73	                           jmp 0x40022ff	      1441	ops.c	FUNCTION_26	ELSE_2	IF_8
0x400228c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4002294	            0xeb58	                           jmp 0x40022ee	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4002296	    0x488b05000000	            mov rax, qword [0x0400229d] 	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x400229d	          0x488b00	                    mov rax, qword [rax]	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40022a0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40022a4	        0x48c1e203	                              shl rdx, 3	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40022a8	          0x4801d0	                            add rax, rdx	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40022ab	          0x488b00	                    mov rax, qword [rax]	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40022ae	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40022b1	            0x89d6	                            mov esi, edx	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40022b3	          0x4889c7	                            mov rdi, rax	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40022b6	      0xe85d000000	                   call sym.stuffescaped	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x40022bb	    0x488b05000000	            mov rax, qword [0x040022c2] 	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x40022c2	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x40022c6	            0x3c01	                               cmp al, 1	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x40022c8	            0x7415	                            je 0x40022df	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x40022ca	    0x488b05000000	            mov rax, qword [0x040022d1] 	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x40022d1	        0x488b4008	                mov rax, qword [rax + 8]	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x40022d5	        0x4883e801	                              sub rax, 1	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x40022d9	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x40022dd	            0x7e0a	                           jle 0x40022e9	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x40022df	      0xbf0a000000	                            mov edi, 0xa	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x40022e4	      0xe800000000	                          call 0x40022e9	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x40022e9	      0x488345f001	               add qword [rbp - 0x10], 1	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x40022ee	    0x488b05000000	            mov rax, qword [0x040022f5] 	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x40022f5	        0x488b4008	                mov rax, qword [rax + 8]	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x40022f9	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x40022fd	            0x7f97	                            jg 0x4002296	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x40022ff	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1457	ops.c	FUNCTION_26
0x4002302	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1458	ops.c	FUNCTION_26
0x4002306	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1458	ops.c	FUNCTION_26
0x400230f	            0x7405	                            je 0x4002316	      1458	ops.c	FUNCTION_26
0x4002311	      0xe800000000	                          call 0x4002316	      1458	ops.c	FUNCTION_26
0x4002316	              0xc9	                                   leave	      1458	ops.c	FUNCTION_26
0x4002317	              0xc3	                                     ret	      1458	ops.c	FUNCTION_26
copy_yank_reg	ELSE,1:DO,0:IF,2:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,4	72
0x4006a6d	              0x55	                                push rbp	      3426	ops.c	FUNCTION_47
0x4006a6e	          0x4889e5	                            mov rbp, rsp	      3426	ops.c	FUNCTION_47
0x4006a71	              0x53	                                push rbx	      3426	ops.c	FUNCTION_47
0x4006a72	        0x4883ec28	                           sub rsp, 0x28	      3426	ops.c	FUNCTION_47
0x4006a76	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3426	ops.c	FUNCTION_47
0x4006a7a	    0x488b05000000	            mov rax, qword [0x04006a81] 	      3427	ops.c	FUNCTION_47
0x4006a81	        0x488945e8	             mov qword [rbp - 0x18], rax	      3427	ops.c	FUNCTION_47
0x4006a85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3430	ops.c	FUNCTION_47
0x4006a89	    0x488905000000	            mov qword [0x04006a90], rax 	      3430	ops.c	FUNCTION_47
0x4006a90	      0xe829f1ffff	                  call sym.free_yank_all	      3431	ops.c	FUNCTION_47	CALL_1
0x4006a95	    0x488b05000000	            mov rax, qword [0x04006a9c] 	      3432	ops.c	FUNCTION_47
0x4006a9c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3432	ops.c	FUNCTION_47
0x4006aa0	          0x488b0a	                    mov rcx, qword [rdx]	      3432	ops.c	FUNCTION_47
0x4006aa3	          0x488908	                    mov qword [rax], rcx	      3432	ops.c	FUNCTION_47
0x4006aa6	        0x488b4a08	                mov rcx, qword [rdx + 8]	      3432	ops.c	FUNCTION_47
0x4006aaa	        0x48894808	                mov qword [rax + 8], rcx	      3432	ops.c	FUNCTION_47
0x4006aae	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      3432	ops.c	FUNCTION_47
0x4006ab2	        0x48894810	             mov qword [rax + 0x10], rcx	      3432	ops.c	FUNCTION_47
0x4006ab6	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      3432	ops.c	FUNCTION_47
0x4006aba	        0x48895018	             mov qword [rax + 0x18], rdx	      3432	ops.c	FUNCTION_47
0x4006abe	    0x488b1d000000	            mov rbx, qword [0x04006ac5] 	      3433	ops.c	FUNCTION_47	CALL_2
0x4006ac5	    0x488b05000000	            mov rax, qword [0x04006acc] 	      3434	ops.c	FUNCTION_47
0x4006acc	        0x488b4008	                mov rax, qword [rax + 8]	      3434	ops.c	FUNCTION_47
0x4006ad0	        0x48c1e003	                              shl rax, 3	      3433	ops.c	FUNCTION_47	CALL_2
0x4006ad4	      0xbe01000000	                              mov esi, 1	      3433	ops.c	FUNCTION_47	CALL_2
0x4006ad9	          0x4889c7	                            mov rdi, rax	      3433	ops.c	FUNCTION_47	CALL_2
0x4006adc	      0xe800000000	                          call 0x4006ae1	      3433	ops.c	FUNCTION_47	CALL_2
0x4006ae1	          0x488903	                    mov qword [rbx], rax	      3433	ops.c	FUNCTION_47	CALL_2
0x4006ae4	    0x488b05000000	            mov rax, qword [0x04006aeb] 	      3435	ops.c	FUNCTION_47	IF_1
0x4006aeb	          0x488b00	                    mov rax, qword [rax]	      3435	ops.c	FUNCTION_47	IF_1
0x4006aee	          0x4885c0	                           test rax, rax	      3435	ops.c	FUNCTION_47	IF_1
0x4006af1	            0x7511	                           jne 0x4006b04	      3435	ops.c	FUNCTION_47	IF_1
0x4006af3	    0x488b05000000	            mov rax, qword [0x04006afa] 	      3436	ops.c	FUNCTION_47	IF_1
0x4006afa	    0x48c740080000	                  mov qword [rax + 8], 0	      3436	ops.c	FUNCTION_47	IF_1
0x4006b02	            0xeb7b	                           jmp 0x4006b7f	      3436	ops.c	FUNCTION_47	IF_1
0x4006b04	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4006b0c	            0xeb60	                           jmp 0x4006b6e	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4006b0e	    0x488b05000000	            mov rax, qword [0x04006b15] 	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b15	          0x488b00	                    mov rax, qword [rax]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b18	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b1c	        0x48c1e203	                              shl rdx, 3	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b20	        0x488d1c10	                    lea rbx, [rax + rdx]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b28	          0x488b00	                    mov rax, qword [rax]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b2b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b2f	        0x48c1e203	                              shl rdx, 3	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b33	          0x4801d0	                            add rax, rdx	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b36	          0x488b00	                    mov rax, qword [rax]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b39	          0x4889c7	                            mov rdi, rax	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b3c	      0xe800000000	                          call 0x4006b41	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b41	          0x488903	                    mov qword [rbx], rax	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b44	          0x488b03	                    mov rax, qword [rbx]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b47	          0x4885c0	                           test rax, rax	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b4a	            0x751d	                           jne 0x4006b69	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4006b4c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3441	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_4
0x4006b50	          0x4889c7	                            mov rdi, rax	      3441	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_4
0x4006b53	      0xe8e3efffff	                      call sym.free_yank	      3441	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_4
0x4006b58	    0x488b05000000	            mov rax, qword [0x04006b5f] 	      3442	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x4006b5f	    0x48c740080000	                  mov qword [rax + 8], 0	      3442	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x4006b67	            0xeb16	                           jmp 0x4006b7f	      3443	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x4006b69	      0x488345e001	               add qword [rbp - 0x20], 1	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4006b6e	    0x488b05000000	            mov rax, qword [0x04006b75] 	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4006b75	        0x488b4008	                mov rax, qword [rax + 8]	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4006b79	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4006b7d	            0x7f8f	                            jg 0x4006b0e	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4006b7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3445	ops.c	FUNCTION_47
0x4006b83	    0x488905000000	            mov qword [0x04006b8a], rax 	      3445	ops.c	FUNCTION_47
0x4006b8a	              0x90	                                     nop	      3446	ops.c	FUNCTION_47
0x4006b8b	        0x4883c428	                           add rsp, 0x28	      3446	ops.c	FUNCTION_47
0x4006b8f	              0x5b	                                 pop rbx	      3446	ops.c	FUNCTION_47
0x4006b90	              0x5d	                                 pop rbp	      3446	ops.c	FUNCTION_47
0x4006b91	              0xc3	                                     ret	      3446	ops.c	FUNCTION_47
may_set_selection	ELSE,1:DO,0:IF,2:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,4	26
0x400da96	              0x55	                                push rbp	      6720	ops.c	ELSE_3	FUNCTION_78
0x400da97	          0x4889e5	                            mov rbp, rsp	      6720	ops.c	ELSE_3	FUNCTION_78
0x400da9a	    0x488b05000000	            mov rax, qword [0x0400daa1] 	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400daa1	    0x483d00000000	                              cmp rax, 0	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400daa7	            0x7520	                           jne 0x400dac9	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400daa9	    0x8b0500000000	            mov eax, dword [0x0400daaf] 	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400daaf	            0x85c0	                           test eax, eax	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400dab1	            0x7416	                            je 0x400dac9	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400dab3	      0xbf00000000	                              mov edi, 0	      6723	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_1
0x400dab8	      0xe800000000	                          call 0x400dabd	      6723	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_1
0x400dabd	      0xbf00000000	                              mov edi, 0	      6724	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0x400dac2	      0xe800000000	                          call 0x400dac7	      6724	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0x400dac7	            0xeb2d	                           jmp 0x400daf6	      6731	ops.c	ELSE_3	FUNCTION_78
0x400dac9	    0x488b05000000	            mov rax, qword [0x0400dad0] 	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400dad0	    0x483d00000000	                              cmp rax, 0	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400dad6	            0x751e	                           jne 0x400daf6	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400dad8	    0x8b0500000000	            mov eax, dword [0x0400dade] 	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400dade	            0x85c0	                           test eax, eax	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400dae0	            0x7414	                            je 0x400daf6	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400dae2	      0xbf00000000	                              mov edi, 0	      6728	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_3
0x400dae7	      0xe800000000	                          call 0x400daec	      6728	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_3
0x400daec	      0xbf00000000	                              mov edi, 0	      6729	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0x400daf1	      0xe800000000	                          call 0x400daf6	      6729	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0x400daf6	              0x90	                                     nop	      6731	ops.c	ELSE_3	FUNCTION_78
0x400daf7	              0x5d	                                 pop rbp	      6731	ops.c	ELSE_3	FUNCTION_78
0x400daf8	              0xc3	                                     ret	      6731	ops.c	ELSE_3	FUNCTION_78
write_reg_contents_ex	ELSE,2:DO,0:IF,11:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,18	152
0x400e1fe	              0x55	                                push rbp	      7050	ops.c	FUNCTION_87
0x400e1ff	          0x4889e5	                            mov rbp, rsp	      7050	ops.c	FUNCTION_87
0x400e202	              0x53	                                push rbx	      7050	ops.c	FUNCTION_87
0x400e203	        0x4883ec68	                           sub rsp, 0x68	      7050	ops.c	FUNCTION_87
0x400e207	          0x897dac	             mov dword [rbp - 0x54], edi	      7050	ops.c	FUNCTION_87
0x400e20a	        0x488975a0	             mov qword [rbp - 0x60], rsi	      7050	ops.c	FUNCTION_87
0x400e20e	          0x8955a8	             mov dword [rbp - 0x58], edx	      7050	ops.c	FUNCTION_87
0x400e211	          0x894d9c	             mov dword [rbp - 0x64], ecx	      7050	ops.c	FUNCTION_87
0x400e214	        0x44894598	             mov dword [rbp - 0x68], r8d	      7050	ops.c	FUNCTION_87
0x400e218	        0x4c894d90	              mov qword [rbp - 0x70], r9	      7050	ops.c	FUNCTION_87
0x400e21c	    0x64488b042528	                mov rax, qword fs:[0x28]	      7050	ops.c	FUNCTION_87
0x400e225	        0x488945e8	             mov qword [rbp - 0x18], rax	      7050	ops.c	FUNCTION_87
0x400e229	            0x31c0	                            xor eax, eax	      7050	ops.c	FUNCTION_87
0x400e22b	        0x837da800	               cmp dword [rbp - 0x58], 0	      7054	ops.c	FUNCTION_87	IF_1
0x400e22f	            0x780b	                            js 0x400e23c	      7054	ops.c	FUNCTION_87	IF_1
0x400e231	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      7055	ops.c	FUNCTION_87	IF_1
0x400e234	            0x4898	                                    cdqe	      7055	ops.c	FUNCTION_87	IF_1
0x400e236	        0x488945c8	             mov qword [rbp - 0x38], rax	      7055	ops.c	FUNCTION_87	IF_1
0x400e23a	            0xeb10	                           jmp 0x400e24c	      7055	ops.c	FUNCTION_87	IF_1
0x400e23c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7057	ops.c	FUNCTION_87	CALL_1
0x400e240	          0x4889c7	                            mov rdi, rax	      7057	ops.c	FUNCTION_87	CALL_1
0x400e243	      0xe800000000	                          call 0x400e248	      7057	ops.c	FUNCTION_87	CALL_1
0x400e248	        0x488945c8	             mov qword [rbp - 0x38], rax	      7057	ops.c	FUNCTION_87	CALL_1
0x400e24c	        0x837dac2f	           cmp dword [rbp - 0x54], 0x2f 	      7060	ops.c	FUNCTION_87	IF_2
0x400e250	            0x7520	                           jne 0x400e272	      7060	ops.c	FUNCTION_87	IF_2
0x400e252	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7062	ops.c	FUNCTION_87	IF_2	CALL_2
0x400e256	      0xb901000000	                              mov ecx, 1	      7062	ops.c	FUNCTION_87	IF_2	CALL_2
0x400e25b	      0xba01000000	                              mov edx, 1	      7062	ops.c	FUNCTION_87	IF_2	CALL_2
0x400e260	      0xbe00000000	                              mov esi, 0	      7062	ops.c	FUNCTION_87	IF_2	CALL_2
0x400e265	          0x4889c7	                            mov rdi, rax	      7062	ops.c	FUNCTION_87	IF_2	CALL_2
0x400e268	      0xe800000000	                          call 0x400e26d	      7062	ops.c	FUNCTION_87	IF_2	CALL_2
0x400e26d	      0xe99c010000	                           jmp 0x400e40e	      7063	ops.c	FUNCTION_87	IF_2
0x400e272	        0x837dac23	           cmp dword [rbp - 0x54], 0x23 	      7066	ops.c	FUNCTION_87	IF_3
0x400e276	     0xf85b8000000	                           jne 0x400e334	      7066	ops.c	FUNCTION_87	IF_3
0x400e27c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7070	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0x400e280	           0xfb600	                   movzx eax, byte [rax]	      7070	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0x400e283	           0xfb6c0	                           movzx eax, al	      7070	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0x400e286	          0x83e830	                           sub eax, 0x30	      7070	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0x400e289	          0x83f809	                              cmp eax, 9	      7070	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0x400e28c	            0x7741	                            ja 0x400e2cf	      7070	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0x400e28e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7072	ops.c	FUNCTION_87	IF_3	IF_4	CALL_4
0x400e292	          0x4889c7	                            mov rdi, rax	      7072	ops.c	FUNCTION_87	IF_3	IF_4	CALL_4
0x400e295	      0xe800000000	                          call 0x400e29a	      7072	ops.c	FUNCTION_87	IF_3	IF_4	CALL_4
0x400e29a	          0x8945b4	             mov dword [rbp - 0x4c], eax	      7072	ops.c	FUNCTION_87	IF_3	IF_4	CALL_4
0x400e29d	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7074	ops.c	FUNCTION_87	IF_3	IF_4	CALL_5
0x400e2a0	            0x89c7	                            mov edi, eax	      7074	ops.c	FUNCTION_87	IF_3	IF_4	CALL_5
0x400e2a2	      0xe800000000	                          call 0x400e2a7	      7074	ops.c	FUNCTION_87	IF_3	IF_4	CALL_5
0x400e2a7	        0x488945d0	             mov qword [rbp - 0x30], rax	      7074	ops.c	FUNCTION_87	IF_3	IF_4	CALL_5
0x400e2ab	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      7075	ops.c	FUNCTION_87	IF_3	IF_4	IF_5
0x400e2b0	            0x755b	                           jne 0x400e30d	      7075	ops.c	FUNCTION_87	IF_3	IF_4	IF_5
0x400e2b2	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x400e2b5	          0x4863d8	                         movsxd rbx, eax	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x400e2b8	      0xbf00000000	                              mov edi, 0	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x400e2bd	      0xe800000000	                          call 0x400e2c2	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x400e2c2	          0x4889de	                            mov rsi, rbx	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x400e2c5	          0x4889c7	                            mov rdi, rax	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x400e2c8	      0xe800000000	                          call 0x400e2cd	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x400e2cd	            0xeb3e	                           jmp 0x400e30d	      7076	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0x400e2cf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e2d3	          0x4889c7	                            mov rdi, rax	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e2d6	      0xe800000000	                          call 0x400e2db	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e2db	          0x4889c2	                            mov rdx, rax	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e2de	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e2e2	        0x488d3402	                    lea rsi, [rdx + rax]	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e2e6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e2ea	    0x41b800000000	                              mov r8d, 0	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e2f0	      0xb900000000	                              mov ecx, 0	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e2f5	      0xba01000000	                              mov edx, 1	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e2fa	          0x4889c7	                            mov rdi, rax	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e2fd	      0xe800000000	                          call 0x400e302	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e302	            0x89c7	                            mov edi, eax	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e304	      0xe800000000	                          call 0x400e309	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e309	        0x488945d0	             mov qword [rbp - 0x30], rax	      7079	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0x400e30d	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      7081	ops.c	FUNCTION_87	IF_3	IF_6
0x400e312	     0xf84ec000000	                            je 0x400e404	      7081	ops.c	FUNCTION_87	IF_3	IF_6
0x400e318	    0x488b05000000	            mov rax, qword [0x0400e31f] 	      7083	ops.c	FUNCTION_87	IF_3
0x400e31f	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7083	ops.c	FUNCTION_87	IF_3
0x400e323	    0x8b92b8000000	            mov edx, dword [rdx + 0xb8] 	      7083	ops.c	FUNCTION_87	IF_3
0x400e329	    0x899078010000	            mov dword [rax + 0x178], edx	      7083	ops.c	FUNCTION_87	IF_3
0x400e32f	      0xe9da000000	                           jmp 0x400e40e	      7084	ops.c	FUNCTION_87	IF_3
0x400e334	        0x837dac3d	           cmp dword [rbp - 0x54], 0x3d 	      7088	ops.c	FUNCTION_87	IF_7
0x400e338	            0x7566	                           jne 0x400e3a0	      7088	ops.c	FUNCTION_87	IF_7
0x400e33a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7092	ops.c	FUNCTION_87	IF_7	CALL_11
0x400e33e	            0x89c2	                            mov edx, eax	      7092	ops.c	FUNCTION_87	IF_7	CALL_11
0x400e340	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7092	ops.c	FUNCTION_87	IF_7	CALL_11
0x400e344	            0x89d6	                            mov esi, edx	      7092	ops.c	FUNCTION_87	IF_7	CALL_11
0x400e346	          0x4889c7	                            mov rdi, rax	      7092	ops.c	FUNCTION_87	IF_7	CALL_11
0x400e349	      0xe800000000	                          call 0x400e34e	      7092	ops.c	FUNCTION_87	IF_7	CALL_11
0x400e34e	        0x488945d8	             mov qword [rbp - 0x28], rax	      7092	ops.c	FUNCTION_87	IF_7	CALL_11
0x400e352	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      7093	ops.c	FUNCTION_87	IF_7	IF_8
0x400e357	     0xf84aa000000	                            je 0x400e407	      7093	ops.c	FUNCTION_87	IF_7	IF_8
0x400e35d	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      7095	ops.c	FUNCTION_87	IF_7	IF_9
0x400e361	            0x742f	                            je 0x400e392	      7095	ops.c	FUNCTION_87	IF_7	IF_9
0x400e363	      0xe800000000	                          call 0x400e368	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x400e368	          0x4889c2	                            mov rdx, rax	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x400e36b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x400e36f	          0x4889c6	                            mov rsi, rax	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x400e372	          0x4889d7	                            mov rdi, rdx	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x400e375	      0xe800000000	                          call 0x400e37a	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x400e37a	        0x488945e0	             mov qword [rbp - 0x20], rax	      7097	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0x400e37e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7098	ops.c	FUNCTION_87	IF_7	IF_9	CALL_14
0x400e382	          0x4889c7	                            mov rdi, rax	      7098	ops.c	FUNCTION_87	IF_7	IF_9	CALL_14
0x400e385	      0xe800000000	                          call 0x400e38a	      7098	ops.c	FUNCTION_87	IF_7	IF_9	CALL_14
0x400e38a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7099	ops.c	FUNCTION_87	IF_7	IF_9
0x400e38e	        0x488945d8	             mov qword [rbp - 0x28], rax	      7099	ops.c	FUNCTION_87	IF_7	IF_9
0x400e392	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7101	ops.c	FUNCTION_87	IF_7	CALL_15
0x400e396	          0x4889c7	                            mov rdi, rax	      7101	ops.c	FUNCTION_87	IF_7	CALL_15
0x400e399	      0xe800000000	                          call 0x400e39e	      7101	ops.c	FUNCTION_87	IF_7	CALL_15
0x400e39e	            0xeb6e	                           jmp 0x400e40e	      7102	ops.c	FUNCTION_87	IF_7
0x400e3a0	        0x837dac5f	           cmp dword [rbp - 0x54], 0x5f 	      7106	ops.c	FUNCTION_87	IF_10
0x400e3a4	            0x7464	                            je 0x400e40a	      7106	ops.c	FUNCTION_87	IF_10
0x400e3a6	        0x488d7d98	                   lea rdi, [rbp - 0x68]	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x400e3aa	          0x8b4d9c	             mov ecx, dword [rbp - 0x64]	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x400e3ad	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x400e3b1	        0x488d75b8	                   lea rsi, [rbp - 0x48]	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x400e3b5	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x400e3b8	          0x4989f8	                             mov r8, rdi	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x400e3bb	            0x89c7	                            mov edi, eax	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x400e3bd	      0xe820fcffff	                 call sym.init_write_reg	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x400e3c2	            0x85c0	                           test eax, eax	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x400e3c4	            0x7447	                            je 0x400e40d	      7109	ops.c	FUNCTION_87	IF_11	CALL_16
0x400e3c6	          0x8b7598	             mov esi, dword [rbp - 0x68]	      7113	ops.c	FUNCTION_87	CALL_17
0x400e3c9	    0x488b05000000	            mov rax, qword [0x0400e3d0] 	      7113	ops.c	FUNCTION_87	CALL_17
0x400e3d0	        0x488b7d90	             mov rdi, qword [rbp - 0x70]	      7113	ops.c	FUNCTION_87	CALL_17
0x400e3d4	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      7113	ops.c	FUNCTION_87	CALL_17
0x400e3d8	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      7113	ops.c	FUNCTION_87	CALL_17
0x400e3dc	    0x41b900000000	                              mov r9d, 0	      7113	ops.c	FUNCTION_87	CALL_17
0x400e3e2	          0x4989f8	                             mov r8, rdi	      7113	ops.c	FUNCTION_87	CALL_17
0x400e3e5	          0x4889c7	                            mov rdi, rax	      7113	ops.c	FUNCTION_87	CALL_17
0x400e3e8	      0xe83c000000	                     call sym.str_to_reg	      7113	ops.c	FUNCTION_87	CALL_17
0x400e3ed	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      7115	ops.c	FUNCTION_87	CALL_18
0x400e3f1	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      7115	ops.c	FUNCTION_87	CALL_18
0x400e3f5	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7115	ops.c	FUNCTION_87	CALL_18
0x400e3f8	          0x4889ce	                            mov rsi, rcx	      7115	ops.c	FUNCTION_87	CALL_18
0x400e3fb	            0x89c7	                            mov edi, eax	      7115	ops.c	FUNCTION_87	CALL_18
0x400e3fd	      0xe865fcffff	               call sym.finish_write_reg	      7115	ops.c	FUNCTION_87	CALL_18
0x400e402	            0xeb0a	                           jmp 0x400e40e	      7115	ops.c	FUNCTION_87	CALL_18
0x400e404	              0x90	                                     nop	      7082	ops.c	FUNCTION_87	IF_3	IF_6
0x400e405	            0xeb07	                           jmp 0x400e40e	      7082	ops.c	FUNCTION_87	IF_3	IF_6
0x400e407	              0x90	                                     nop	      7094	ops.c	FUNCTION_87	IF_7	IF_8
0x400e408	            0xeb04	                           jmp 0x400e40e	      7094	ops.c	FUNCTION_87	IF_7	IF_8
0x400e40a	              0x90	                                     nop	      7107	ops.c	FUNCTION_87	IF_10
0x400e40b	            0xeb01	                           jmp 0x400e40e	      7107	ops.c	FUNCTION_87	IF_10
0x400e40d	              0x90	                                     nop	      7111	ops.c	FUNCTION_87	IF_11
0x400e40e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7116	ops.c	FUNCTION_87
0x400e412	    0x644833042528	                xor rax, qword fs:[0x28]	      7116	ops.c	FUNCTION_87
0x400e41b	            0x7405	                            je 0x400e422	      7116	ops.c	FUNCTION_87
0x400e41d	      0xe800000000	                          call 0x400e422	      7116	ops.c	FUNCTION_87
0x400e422	        0x4883c468	                           add rsp, 0x68	      7116	ops.c	FUNCTION_87
0x400e426	              0x5b	                                 pop rbx	      7116	ops.c	FUNCTION_87
0x400e427	              0x5d	                                 pop rbp	      7116	ops.c	FUNCTION_87
0x400e428	              0xc3	                                     ret	      7116	ops.c	FUNCTION_87
do_record	ELSE,3:DO,0:IF,3:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,6	61
0x4001959	              0x55	                                push rbp	      1088	ops.c	FUNCTION_21
0x400195a	          0x4889e5	                            mov rbp, rsp	      1088	ops.c	FUNCTION_21
0x400195d	        0x4883ec30	                           sub rsp, 0x30	      1088	ops.c	FUNCTION_21
0x4001961	          0x897ddc	             mov dword [rbp - 0x24], edi	      1088	ops.c	FUNCTION_21
0x4001964	    0x8b0500000000	            mov eax, dword [0x0400196a] 	      1094	ops.c	FUNCTION_21	IF_1
0x400196a	            0x85c0	                           test eax, eax	      1094	ops.c	FUNCTION_21	IF_1
0x400196c	            0x7559	                           jne 0x40019c7	      1094	ops.c	FUNCTION_21	IF_1
0x400196e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4001972	            0x7827	                            js 0x400199b	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4001974	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4001977	          0x83e841	                           sub eax, 0x41	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x400197a	          0x83f819	                           cmp eax, 0x19	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x400197d	            0x7628	                           jbe 0x40019a7	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x400197f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4001982	          0x83e861	                           sub eax, 0x61	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4001985	          0x83f819	                           cmp eax, 0x19	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4001988	            0x761d	                           jbe 0x40019a7	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x400198a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x400198d	          0x83e830	                           sub eax, 0x30	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4001990	          0x83f809	                              cmp eax, 9	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4001993	            0x7612	                           jbe 0x40019a7	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4001995	        0x837ddc22	           cmp dword [rbp - 0x24], 0x22 	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4001999	            0x740c	                            je 0x40019a7	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x400199b	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1098	ops.c	FUNCTION_21	IF_1	IF_2
0x40019a2	      0xe99c000000	                           jmp 0x4001a43	      1098	ops.c	FUNCTION_21	IF_1	IF_2
0x40019a7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1101	ops.c	FUNCTION_21	IF_1	ELSE_1
0x40019aa	    0x890500000000	            mov dword [0x040019b0], eax 	      1101	ops.c	FUNCTION_21	IF_1	ELSE_1
0x40019b0	      0xe800000000	                          call 0x40019b5	      1102	ops.c	FUNCTION_21	IF_1	ELSE_1	CALL_2
0x40019b5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1103	ops.c	FUNCTION_21	IF_1	ELSE_1
0x40019b8	    0x890500000000	            mov dword [0x040019be], eax 	      1103	ops.c	FUNCTION_21	IF_1	ELSE_1
0x40019be	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      1104	ops.c	FUNCTION_21	IF_1	ELSE_1
0x40019c5	            0xeb7c	                           jmp 0x4001a43	      1104	ops.c	FUNCTION_21	IF_1	ELSE_1
0x40019c7	    0xc70500000000	               mov dword [0x040019d1], 0	      1114	ops.c	FUNCTION_21	ELSE_2
0x40019d1	      0xbf00000000	                              mov edi, 0	      1115	ops.c	FUNCTION_21	ELSE_2	CALL_3
0x40019d6	      0xe800000000	                          call 0x40019db	      1115	ops.c	FUNCTION_21	ELSE_2	CALL_3
0x40019db	      0xe800000000	                          call 0x40019e0	      1116	ops.c	FUNCTION_21	ELSE_2	CALL_4
0x40019e0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1116	ops.c	FUNCTION_21	ELSE_2	CALL_4
0x40019e4	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1117	ops.c	FUNCTION_21	ELSE_2	IF_3
0x40019e9	            0x7509	                           jne 0x40019f4	      1117	ops.c	FUNCTION_21	ELSE_2	IF_3
0x40019eb	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1118	ops.c	FUNCTION_21	ELSE_2	IF_3
0x40019f2	            0xeb4f	                           jmp 0x4001a43	      1118	ops.c	FUNCTION_21	ELSE_2	IF_3
0x40019f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1122	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x40019f8	          0x4889c7	                            mov rdi, rax	      1122	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x40019fb	      0xe800000000	                          call 0x4001a00	      1122	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x4001a00	    0x488b05000000	            mov rax, qword [0x04001a07] 	      1128	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4001a07	        0x488945f0	             mov qword [rbp - 0x10], rax	      1128	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4001a0b	    0x488b05000000	            mov rax, qword [0x04001a12] 	      1129	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4001a12	        0x488945f8	                mov qword [rbp - 8], rax	      1129	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4001a16	    0x8b0500000000	            mov eax, dword [0x04001a1c] 	      1131	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x4001a1c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1131	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x4001a20	          0x4889d6	                            mov rsi, rdx	      1131	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x4001a23	            0x89c7	                            mov edi, eax	      1131	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x4001a25	      0xe81e000000	                     call sym.stuff_yank	      1131	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x4001a2a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1131	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x4001a2d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1133	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4001a31	    0x488905000000	            mov qword [0x04001a38], rax 	      1133	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4001a38	        0x488b45f8	                mov rax, qword [rbp - 8]	      1134	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4001a3c	    0x488905000000	            mov qword [0x04001a43], rax 	      1134	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4001a43	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1137	ops.c	FUNCTION_21
0x4001a46	              0xc9	                                   leave	      1138	ops.c	FUNCTION_21
0x4001a47	              0xc3	                                     ret	      1138	ops.c	FUNCTION_21
finish_viminfo_registers	ELSE,0:DO,0:IF,2:functions,0:WHILE,0:FOR,2:SWITCH,0:CALL,3	63
0x400c521	              0x55	                                push rbp	      6067	ops.c	FUNCTION_69
0x400c522	          0x4889e5	                            mov rbp, rsp	      6067	ops.c	FUNCTION_69
0x400c525	        0x4883ec10	                           sub rsp, 0x10	      6067	ops.c	FUNCTION_69
0x400c529	    0x488b05000000	            mov rax, qword [0x0400c530] 	      6071	ops.c	FUNCTION_69	IF_1
0x400c530	          0x4885c0	                           test rax, rax	      6071	ops.c	FUNCTION_69	IF_1
0x400c533	     0xf84da000000	                            je 0x400c613	      6071	ops.c	FUNCTION_69	IF_1
0x400c539	    0xc745f8000000	                  mov dword [rbp - 8], 0	      6073	ops.c	FUNCTION_69	IF_1	FOR_1
0x400c540	      0xe99e000000	                           jmp 0x400c5e3	      6073	ops.c	FUNCTION_69	IF_1	FOR_1
0x400c545	    0x488b05000000	            mov rax, qword [0x0400c54c] 	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400c54c	          0x8b55f8	                mov edx, dword [rbp - 8]	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400c54f	          0x4863d2	                         movsxd rdx, edx	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400c552	        0x48c1e205	                              shl rdx, 5	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400c556	          0x4801d0	                            add rax, rdx	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400c559	          0x488b00	                    mov rax, qword [rax]	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400c55c	          0x4885c0	                           test rax, rax	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400c55f	            0x747e	                            je 0x400c5df	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400c561	    0xc745fc000000	                  mov dword [rbp - 4], 0	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c568	            0xeb33	                           jmp 0x400c59d	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c56a	    0x488b05000000	            mov rax, qword [0x0400c571] 	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c571	          0x8b55f8	                mov edx, dword [rbp - 8]	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c574	          0x4863d2	                         movsxd rdx, edx	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c577	        0x48c1e205	                              shl rdx, 5	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c57b	          0x4801d0	                            add rax, rdx	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c57e	          0x488b00	                    mov rax, qword [rax]	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c581	          0x8b55fc	                mov edx, dword [rbp - 4]	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c584	          0x4863d2	                         movsxd rdx, edx	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c587	        0x48c1e203	                              shl rdx, 3	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c58b	          0x4801d0	                            add rax, rdx	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c58e	          0x488b00	                    mov rax, qword [rax]	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c591	          0x4889c7	                            mov rdi, rax	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c594	      0xe800000000	                          call 0x400c599	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x400c599	        0x8345fc01	                  add dword [rbp - 4], 1	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c59d	          0x8b45fc	                mov eax, dword [rbp - 4]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c5a0	          0x4863d0	                         movsxd rdx, eax	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c5a3	    0x488b05000000	            mov rax, qword [0x0400c5aa] 	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c5aa	          0x8b4df8	                mov ecx, dword [rbp - 8]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c5ad	          0x4863c9	                         movsxd rcx, ecx	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c5b0	        0x48c1e105	                              shl rcx, 5	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c5b4	          0x4801c8	                            add rax, rcx	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c5b7	        0x488b4008	                mov rax, qword [rax + 8]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c5bb	          0x4839c2	                            cmp rdx, rax	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c5be	            0x7caa	                            jl 0x400c56a	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x400c5c0	    0x488b05000000	            mov rax, qword [0x0400c5c7] 	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x400c5c7	          0x8b55f8	                mov edx, dword [rbp - 8]	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x400c5ca	          0x4863d2	                         movsxd rdx, edx	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x400c5cd	        0x48c1e205	                              shl rdx, 5	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x400c5d1	          0x4801d0	                            add rax, rdx	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x400c5d4	          0x488b00	                    mov rax, qword [rax]	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x400c5d7	          0x4889c7	                            mov rdi, rax	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x400c5da	      0xe800000000	                          call 0x400c5df	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x400c5df	        0x8345f801	                  add dword [rbp - 8], 1	      6073	ops.c	FUNCTION_69	IF_1	FOR_1
0x400c5e3	        0x837df827	               cmp dword [rbp - 8], 0x27	      6073	ops.c	FUNCTION_69	IF_1	FOR_1
0x400c5e7	     0xf8e58ffffff	                           jle 0x400c545	      6073	ops.c	FUNCTION_69	IF_1	FOR_1
0x400c5ed	    0x488b05000000	            mov rax, qword [0x0400c5f4] 	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x400c5f4	          0x4885c0	                           test rax, rax	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x400c5f7	            0x741a	                            je 0x400c613	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x400c5f9	    0x488b05000000	            mov rax, qword [0x0400c600] 	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x400c600	          0x4889c7	                            mov rdi, rax	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x400c603	      0xe800000000	                          call 0x400c608	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x400c608	    0x48c705000000	               mov qword [0x0400c613], 0	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x400c613	              0x90	                                     nop	      6082	ops.c	FUNCTION_69
0x400c614	              0xc9	                                   leave	      6082	ops.c	FUNCTION_69
0x400c615	              0xc3	                                     ret	      6082	ops.c	FUNCTION_69
block_insert	ELSE,3:DO,0:IF,12:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,12	275
0x4000c8f	              0x55	                                push rbp	       581	ops.c	FUNCTION_8
0x4000c90	          0x4889e5	                            mov rbp, rsp	       581	ops.c	FUNCTION_8
0x4000c93	        0x4883ec60	                           sub rsp, 0x60	       581	ops.c	FUNCTION_8
0x4000c97	        0x48897db8	             mov qword [rbp - 0x48], rdi	       581	ops.c	FUNCTION_8
0x4000c9b	        0x488975b0	             mov qword [rbp - 0x50], rsi	       581	ops.c	FUNCTION_8
0x4000c9f	          0x8955ac	             mov dword [rbp - 0x54], edx	       581	ops.c	FUNCTION_8
0x4000ca2	        0x48894da0	             mov qword [rbp - 0x60], rcx	       581	ops.c	FUNCTION_8
0x4000ca6	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       583	ops.c	FUNCTION_8
0x4000cad	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       584	ops.c	FUNCTION_8
0x4000cb4	    0x8b0500000000	            mov eax, dword [0x04000cba] 	       589	ops.c	FUNCTION_8
0x4000cba	          0x8945e0	             mov dword [rbp - 0x20], eax	       589	ops.c	FUNCTION_8
0x4000cbd	    0xc70500000000	           mov dword [0x04000cc7], 0x10 	       591	ops.c	FUNCTION_8
0x4000cc7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       592	ops.c	FUNCTION_8	CALL_1
0x4000ccb	          0x4889c7	                            mov rdi, rax	       592	ops.c	FUNCTION_8	CALL_1
0x4000cce	      0xe800000000	                          call 0x4000cd3	       592	ops.c	FUNCTION_8	CALL_1
0x4000cd3	          0x8945e4	             mov dword [rbp - 0x1c], eax	       592	ops.c	FUNCTION_8	CALL_1
0x4000cd6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       594	ops.c	FUNCTION_8	FOR_1
0x4000cda	        0x488b4020	            mov rax, qword [rax + 0x20] 	       594	ops.c	FUNCTION_8	FOR_1
0x4000cde	        0x4883c001	                              add rax, 1	       594	ops.c	FUNCTION_8	FOR_1
0x4000ce2	        0x488945f0	             mov qword [rbp - 0x10], rax	       594	ops.c	FUNCTION_8	FOR_1
0x4000ce6	      0xe90e030000	                           jmp 0x4000ff9	       594	ops.c	FUNCTION_8	FOR_1
0x4000ceb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4000cef	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4000cf3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4000cf7	      0xb901000000	                              mov ecx, 1	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4000cfc	          0x4889c7	                            mov rdi, rax	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4000cff	      0xe8499b0000	                     call sym.block_prep	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4000d04	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4000d08	          0x8b4024	            mov eax, dword [rax + 0x24] 	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4000d0b	            0x85c0	                           test eax, eax	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4000d0d	            0x740a	                            je 0x4000d19	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4000d0f	        0x837dac00	               cmp dword [rbp - 0x54], 0	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4000d13	     0xf85d7020000	                           jne 0x4000ff0	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x4000d19	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4000d1d	          0x4889c7	                            mov rdi, rax	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4000d20	      0xe800000000	                          call 0x4000d25	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4000d25	        0x488945e8	             mov qword [rbp - 0x18], rax	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4000d29	        0x837dac00	               cmp dword [rbp - 0x54], 0	       602	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d2d	            0x7431	                            je 0x4000d60	       602	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d2f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d33	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d36	          0x8945cc	             mov dword [rbp - 0x34], eax	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d39	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       605	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d3d	            0x8b00	                    mov eax, dword [rax]	       605	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d3f	          0x8945d4	             mov dword [rbp - 0x2c], eax	       605	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d42	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       606	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4000d46	            0x7409	                            je 0x4000d51	       606	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4000d48	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4000d4b	          0x83e801	                              sub eax, 1	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4000d4e	          0x8945d0	             mov dword [rbp - 0x30], eax	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4000d51	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d55	          0x8b4018	            mov eax, dword [rax + 0x18] 	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d58	          0x8945d8	             mov dword [rbp - 0x28], eax	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d5b	      0xe9a6000000	                           jmp 0x4000e06	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4000d60	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0x4000d64	          0x8b4038	            mov eax, dword [rax + 0x38] 	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0x4000d67	          0x8945cc	             mov dword [rbp - 0x34], eax	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0x4000d6a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d6e	          0x8b4024	            mov eax, dword [rax + 0x24] 	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d71	            0x85c0	                           test eax, eax	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d73	            0x7555	                           jne 0x4000dca	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d75	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d79	          0x8b4004	                mov eax, dword [rax + 4]	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d7c	            0x85c0	                           test eax, eax	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d7e	            0x7410	                            je 0x4000d90	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d80	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d84	          0x8b4004	                mov eax, dword [rax + 4]	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d87	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d8a	            0x29c2	                            sub edx, eax	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d8c	            0x89d0	                            mov eax, edx	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d8e	            0xeb05	                           jmp 0x4000d95	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d90	      0xb800000000	                              mov eax, 0	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d95	          0x8945d4	             mov dword [rbp - 0x2c], eax	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000d98	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4000d9c	            0x7409	                            je 0x4000da7	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4000d9e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4000da1	          0x83e801	                              sub eax, 1	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4000da4	          0x8945d0	             mov dword [rbp - 0x30], eax	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4000da7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000dab	          0x8b5018	            mov edx, dword [rax + 0x18] 	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000dae	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000db2	          0x8b4008	                mov eax, dword [rax + 8]	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000db5	             0x1c2	                            add edx, eax	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000db7	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000dbb	           0xf95c0	                                setne al	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000dbe	           0xfb6c0	                           movzx eax, al	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000dc1	            0x29c2	                            sub edx, eax	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000dc3	            0x89d0	                            mov eax, edx	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000dc5	          0x8945d8	             mov dword [rbp - 0x28], eax	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000dc8	            0xeb3c	                           jmp 0x4000e06	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000dca	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000dce	          0x8b4028	            mov eax, dword [rax + 0x28] 	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000dd1	            0x85c0	                           test eax, eax	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000dd3	            0x7518	                           jne 0x4000ded	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000dd5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000dd9	          0x8b5068	            mov edx, dword [rax + 0x68] 	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000ddc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000de0	          0x8b4020	            mov eax, dword [rax + 0x20] 	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000de3	            0x29c2	                            sub edx, eax	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000de5	            0x89d0	                            mov eax, edx	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000de7	          0x83c001	                              add eax, 1	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000dea	          0x8945d4	             mov dword [rbp - 0x2c], eax	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4000ded	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       625	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4000df0	          0x8945d0	             mov dword [rbp - 0x30], eax	       625	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4000df3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4000df7	          0x8b5018	            mov edx, dword [rax + 0x18] 	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4000dfa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4000dfe	          0x8b4008	                mov eax, dword [rax + 8]	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4000e01	             0x1d0	                            add eax, edx	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4000e03	          0x8945d8	             mov dword [rbp - 0x28], eax	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4000e06	    0x8b0500000000	            mov eax, dword [0x04000e0c] 	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4000e0c	            0x85c0	                           test eax, eax	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4000e0e	            0x746b	                            je 0x4000e7b	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4000e10	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4000e14	            0x7e65	                           jle 0x4000e7b	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4000e16	        0x837dac00	               cmp dword [rbp - 0x54], 0	       636	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e1a	            0x742e	                            je 0x4000e4a	       636	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e1c	    0x488b05000000	            mov rax, qword [0x04000e23] 	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e23	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e26	          0x4863ca	                         movsxd rcx, edx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e29	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e2c	          0x4863d2	                         movsxd rdx, edx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e2f	          0x4801d1	                            add rcx, rdx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e32	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e36	          0x4801d1	                            add rcx, rdx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e39	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e3d	          0x4889ce	                            mov rsi, rcx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e40	          0x4889d7	                            mov rdi, rdx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e43	            0xffd0	                                call rax	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e45	          0x8945dc	             mov dword [rbp - 0x24], eax	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e48	            0xeb25	                           jmp 0x4000e6f	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4000e4a	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4000e4d	          0x4863d0	                         movsxd rdx, eax	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4000e50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4000e54	          0x4801c2	                            add rdx, rax	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4000e57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4000e5b	          0x4889d6	                            mov rsi, rdx	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4000e5e	          0x4889c7	                            mov rdi, rax	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4000e61	      0xe800000000	                          call 0x4000e66	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4000e66	          0x8945dc	             mov dword [rbp - 0x24], eax	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4000e69	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4000e6c	           0x145d8	             add dword [rbp - 0x28], eax	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4000e6f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       645	ops.c	FUNCTION_8	FOR_1	IF_7
0x4000e72	          0x2945d4	             sub dword [rbp - 0x2c], eax	       645	ops.c	FUNCTION_8	FOR_1	IF_7
0x4000e75	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       646	ops.c	FUNCTION_8	FOR_1	IF_7
0x4000e78	          0x2945d0	             sub dword [rbp - 0x30], eax	       646	ops.c	FUNCTION_8	FOR_1	IF_7
0x4000e7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000e7f	          0x4889c7	                            mov rdi, rax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000e82	      0xe800000000	                          call 0x4000e87	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000e87	            0x89c2	                            mov edx, eax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000e89	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000e8c	             0x1c2	                            add edx, eax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000e8e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000e91	             0x1d0	                            add eax, edx	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000e93	          0x83c001	                              add eax, 1	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000e96	            0x89c7	                            mov edi, eax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000e98	      0xe800000000	                          call 0x4000e9d	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000e9d	        0x488945f8	                mov qword [rbp - 8], rax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x4000ea1	      0x48837df800	                  cmp qword [rbp - 8], 0	       651	ops.c	FUNCTION_8	FOR_1	IF_9
0x4000ea6	     0xf8447010000	                            je 0x4000ff3	       651	ops.c	FUNCTION_8	FOR_1	IF_9
0x4000eac	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0x4000eaf	          0x4863d0	                         movsxd rdx, eax	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0x4000eb2	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0x4000eb6	        0x488b45f8	                mov rax, qword [rbp - 8]	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0x4000eba	          0x4889ce	                            mov rsi, rcx	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0x4000ebd	          0x4889c7	                            mov rdi, rax	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0x4000ec0	      0xe800000000	                          call 0x4000ec5	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0x4000ec5	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       656	ops.c	FUNCTION_8	FOR_1
0x4000ec8	            0x4898	                                    cdqe	       656	ops.c	FUNCTION_8	FOR_1
0x4000eca	        0x480145e8	            add qword [rbp - 0x18], rax 	       656	ops.c	FUNCTION_8	FOR_1
0x4000ece	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4000ed1	            0x4898	                                    cdqe	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4000ed3	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4000ed6	          0x4863ca	                         movsxd rcx, edx	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4000ed9	        0x488b55f8	                mov rdx, qword [rbp - 8]	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4000edd	          0x4801d1	                            add rcx, rdx	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4000ee0	          0x4889c2	                            mov rdx, rax	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4000ee3	      0xbe20000000	                           mov esi, 0x20	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4000ee8	          0x4889cf	                            mov rdi, rcx	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4000eeb	      0xe800000000	                          call 0x4000ef0	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x4000ef0	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000ef3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000ef6	          0x4863c8	                         movsxd rcx, eax	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000ef9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000efc	            0x4898	                                    cdqe	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000efe	          0x4801c1	                            add rcx, rax	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000f01	        0x488b45f8	                mov rax, qword [rbp - 8]	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000f05	          0x4801c1	                            add rcx, rax	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000f08	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000f0c	          0x4889c6	                            mov rsi, rax	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000f0f	          0x4889cf	                            mov rdi, rcx	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000f12	      0xe800000000	                          call 0x4000f17	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0x4000f17	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       663	ops.c	FUNCTION_8	FOR_1
0x4000f1a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       663	ops.c	FUNCTION_8	FOR_1
0x4000f1d	             0x1d0	                            add eax, edx	       663	ops.c	FUNCTION_8	FOR_1
0x4000f1f	          0x8945d8	             mov dword [rbp - 0x28], eax	       663	ops.c	FUNCTION_8	FOR_1
0x4000f22	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4000f26	            0x7442	                            je 0x4000f6a	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4000f28	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4000f2c	          0x8b4024	            mov eax, dword [rax + 0x24] 	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4000f2f	            0x85c0	                           test eax, eax	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4000f31	            0x7537	                           jne 0x4000f6a	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4000f33	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f36	          0x2b45d4	             sub eax, dword [rbp - 0x2c]	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f39	            0x4898	                                    cdqe	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f3b	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f3e	          0x4863ca	                         movsxd rcx, edx	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f41	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f44	          0x4863d2	                         movsxd rdx, edx	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f47	          0x4801d1	                            add rcx, rdx	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f4a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f4e	          0x4801d1	                            add rcx, rdx	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f51	          0x4889c2	                            mov rdx, rax	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f54	      0xbe20000000	                           mov esi, 0x20	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f59	          0x4889cf	                            mov rdi, rcx	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f5c	      0xe800000000	                          call 0x4000f61	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0x4000f61	      0x488345e801	               add qword [rbp - 0x18], 1	       670	ops.c	FUNCTION_8	FOR_1	IF_10
0x4000f66	        0x8345d001	               add dword [rbp - 0x30], 1	       672	ops.c	FUNCTION_8	FOR_1	IF_10
0x4000f6a	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       675	ops.c	FUNCTION_8	FOR_1	IF_11
0x4000f6e	            0x7e06	                           jle 0x4000f76	       675	ops.c	FUNCTION_8	FOR_1	IF_11
0x4000f70	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       676	ops.c	FUNCTION_8	FOR_1	IF_11
0x4000f73	           0x145d8	             add dword [rbp - 0x28], eax	       676	ops.c	FUNCTION_8	FOR_1	IF_11
0x4000f76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000f7a	          0x4889c7	                            mov rdi, rax	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000f7d	      0xe800000000	                          call 0x4000f82	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000f82	        0x488d5001	                      lea rdx, [rax + 1]	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000f86	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000f89	          0x4863c8	                         movsxd rcx, eax	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000f8c	        0x488b45f8	                mov rax, qword [rbp - 8]	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000f90	          0x4801c1	                            add rcx, rax	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000f93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000f97	          0x4889c6	                            mov rsi, rax	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000f9a	          0x4889cf	                            mov rdi, rcx	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000f9d	      0xe800000000	                          call 0x4000fa2	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4000fa2	        0x488b4df8	                mov rcx, qword [rbp - 8]	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4000fa6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4000faa	      0xba00000000	                              mov edx, 0	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4000faf	          0x4889ce	                            mov rsi, rcx	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4000fb2	          0x4889c7	                            mov rdi, rax	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4000fb5	      0xe800000000	                          call 0x4000fba	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4000fba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000fbe	        0x488b4030	            mov rax, qword [rax + 0x30] 	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000fc2	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000fc6	            0x752c	                           jne 0x4000ff4	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000fc8	    0x488b05000000	            mov rax, qword [0x04000fcf] 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000fcf	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000fd3	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000fd7	    0x488990001200	          mov qword [rax + 0x1200], rdx 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000fde	    0x488b05000000	            mov rax, qword [0x04000fe5] 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000fe5	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000fe8	    0x899008120000	          mov dword [rax + 0x1208], edx 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000fee	            0xeb04	                           jmp 0x4000ff4	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x4000ff0	              0x90	                                     nop	       598	ops.c	FUNCTION_8	FOR_1	IF_1
0x4000ff1	            0xeb01	                           jmp 0x4000ff4	       598	ops.c	FUNCTION_8	FOR_1	IF_1
0x4000ff3	              0x90	                                     nop	       652	ops.c	FUNCTION_8	FOR_1	IF_9
0x4000ff4	      0x488345f001	               add qword [rbp - 0x10], 1	       594	ops.c	FUNCTION_8	FOR_1
0x4000ff9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       594	ops.c	FUNCTION_8	FOR_1
0x4000ffd	        0x488b4030	            mov rax, qword [rax + 0x30] 	       594	ops.c	FUNCTION_8	FOR_1
0x4001001	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       594	ops.c	FUNCTION_8	FOR_1
0x4001005	     0xf8de0fcffff	                           jge 0x4000ceb	       594	ops.c	FUNCTION_8	FOR_1
0x400100b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       690	ops.c	FUNCTION_8	CALL_12
0x400100f	        0x488b4030	            mov rax, qword [rax + 0x30] 	       690	ops.c	FUNCTION_8	CALL_12
0x4001013	        0x488d5001	                      lea rdx, [rax + 1]	       690	ops.c	FUNCTION_8	CALL_12
0x4001017	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       690	ops.c	FUNCTION_8	CALL_12
0x400101b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       690	ops.c	FUNCTION_8	CALL_12
0x400101f	        0x4883c001	                              add rax, 1	       690	ops.c	FUNCTION_8	CALL_12
0x4001023	      0xb900000000	                              mov ecx, 0	       690	ops.c	FUNCTION_8	CALL_12
0x4001028	      0xbe00000000	                              mov esi, 0	       690	ops.c	FUNCTION_8	CALL_12
0x400102d	          0x4889c7	                            mov rdi, rax	       690	ops.c	FUNCTION_8	CALL_12
0x4001030	      0xe800000000	                          call 0x4001035	       690	ops.c	FUNCTION_8	CALL_12
0x4001035	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       692	ops.c	FUNCTION_8
0x4001038	    0x890500000000	            mov dword [0x0400103e], eax 	       692	ops.c	FUNCTION_8
0x400103e	              0x90	                                     nop	       693	ops.c	FUNCTION_8
0x400103f	              0xc9	                                   leave	       693	ops.c	FUNCTION_8
0x4001040	              0xc3	                                     ret	       693	ops.c	FUNCTION_8
op_replace	ELSE,8:DO,0:IF,30:functions,0:WHILE,2:FOR,2:SWITCH,0:CALL,43	676
0x4003933	              0x55	                                push rbp	      2131	ops.c	FUNCTION_35
0x4003934	          0x4889e5	                            mov rbp, rsp	      2131	ops.c	FUNCTION_35
0x4003937	              0x53	                                push rbx	      2131	ops.c	FUNCTION_35
0x4003938	    0x4881ecb80000	                           sub rsp, 0xb8	      2131	ops.c	FUNCTION_35
0x400393f	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      2131	ops.c	FUNCTION_35
0x4003946	    0x89b544ffffff	             mov dword [rbp - 0xbc], esi	      2131	ops.c	FUNCTION_35
0x400394c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2131	ops.c	FUNCTION_35
0x4003955	        0x488945e8	             mov qword [rbp - 0x18], rax	      2131	ops.c	FUNCTION_35
0x4003959	            0x31c0	                            xor eax, eax	      2131	ops.c	FUNCTION_35
0x400395b	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      2139	ops.c	FUNCTION_35
0x4003966	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      2140	ops.c	FUNCTION_35
0x4003970	    0x488b05000000	            mov rax, qword [0x04003977] 	      2142	ops.c	FUNCTION_35	IF_1
0x4003977	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2142	ops.c	FUNCTION_35	IF_1
0x400397a	          0x83e001	                              and eax, 1	      2142	ops.c	FUNCTION_35	IF_1
0x400397d	            0x85c0	                           test eax, eax	      2142	ops.c	FUNCTION_35	IF_1
0x400397f	            0x750e	                           jne 0x400398f	      2142	ops.c	FUNCTION_35	IF_1
0x4003981	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2142	ops.c	FUNCTION_35	IF_1
0x4003988	          0x8b4058	            mov eax, dword [rax + 0x58] 	      2142	ops.c	FUNCTION_35	IF_1
0x400398b	            0x85c0	                           test eax, eax	      2142	ops.c	FUNCTION_35	IF_1
0x400398d	            0x740a	                            je 0x4003999	      2142	ops.c	FUNCTION_35	IF_1
0x400398f	      0xb801000000	                              mov eax, 1	      2143	ops.c	FUNCTION_35	IF_1
0x4003994	      0xe9cd0a0000	                           jmp 0x4004466	      2143	ops.c	FUNCTION_35	IF_1
0x4003999	    0x83bd44ffffff	cmp dword [rbp - 0xbc], 0xffffffffffffffff	      2145	ops.c	FUNCTION_35	IF_2
0x40039a0	            0x7516	                           jne 0x40039b8	      2145	ops.c	FUNCTION_35	IF_2
0x40039a2	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      2147	ops.c	FUNCTION_35	IF_2
0x40039ac	    0xc78544ffffff	            mov dword [rbp - 0xbc], 0xd 	      2148	ops.c	FUNCTION_35	IF_2
0x40039b6	            0xeb1d	                           jmp 0x40039d5	      2148	ops.c	FUNCTION_35	IF_2
0x40039b8	    0x83bd44ffffff	cmp dword [rbp - 0xbc], 0xfffffffffffffffe	      2150	ops.c	FUNCTION_35	ELSE_1	IF_3
0x40039bf	            0x7514	                           jne 0x40039d5	      2150	ops.c	FUNCTION_35	ELSE_1	IF_3
0x40039c1	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      2152	ops.c	FUNCTION_35	ELSE_1	IF_3
0x40039cb	    0xc78544ffffff	             mov dword [rbp - 0xbc], 0xa	      2153	ops.c	FUNCTION_35	ELSE_1	IF_3
0x40039d5	    0x8b0500000000	            mov eax, dword [0x040039db] 	      2157	ops.c	FUNCTION_35	IF_4
0x40039db	            0x85c0	                           test eax, eax	      2157	ops.c	FUNCTION_35	IF_4
0x40039dd	            0x740f	                            je 0x40039ee	      2157	ops.c	FUNCTION_35	IF_4
0x40039df	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2158	ops.c	FUNCTION_35	CALL_1
0x40039e6	          0x4889c7	                            mov rdi, rax	      2158	ops.c	FUNCTION_35	CALL_1
0x40039e9	      0xe8e5feffff	                call sym.mb_adjust_opend	      2158	ops.c	FUNCTION_35	CALL_1
0x40039ee	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2162	ops.c	FUNCTION_35	IF_5
0x40039f5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2162	ops.c	FUNCTION_35	IF_5
0x40039f9	        0x488d5001	                      lea rdx, [rax + 1]	      2162	ops.c	FUNCTION_35	IF_5
0x40039fd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003a04	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003a08	        0x4883e801	                              sub rax, 1	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003a0c	          0x4889d6	                            mov rsi, rdx	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003a0f	          0x4889c7	                            mov rdi, rax	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003a12	      0xe800000000	                          call 0x4003a17	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003a17	            0x85c0	                           test eax, eax	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003a19	            0x750a	                           jne 0x4003a25	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003a1b	      0xb800000000	                              mov eax, 0	      2163	ops.c	FUNCTION_35	IF_5
0x4003a20	      0xe9410a0000	                           jmp 0x4004466	      2163	ops.c	FUNCTION_35	IF_5
0x4003a25	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2168	ops.c	FUNCTION_35	IF_6
0x4003a2c	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2168	ops.c	FUNCTION_35	IF_6
0x4003a2f	            0x85c0	                           test eax, eax	      2168	ops.c	FUNCTION_35	IF_6
0x4003a31	     0xf8407050000	                            je 0x4003f3e	      2168	ops.c	FUNCTION_35	IF_6
0x4003a37	    0x488b05000000	            mov rax, qword [0x04003a3e] 	      2170	ops.c	FUNCTION_35	IF_6
0x4003a3e	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2170	ops.c	FUNCTION_35	IF_6
0x4003a41	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2170	ops.c	FUNCTION_35	IF_6
0x4003a46	           0xf94c0	                                 sete al	      2170	ops.c	FUNCTION_35	IF_6
0x4003a49	           0xfb6c0	                           movzx eax, al	      2170	ops.c	FUNCTION_35	IF_6
0x4003a4c	          0x8945c8	             mov dword [rbp - 0x38], eax	      2170	ops.c	FUNCTION_35	IF_6
0x4003a4f	      0xe9c6040000	                           jmp 0x4003f1a	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003a54	    0x488b05000000	            mov rax, qword [0x04003a5b] 	      2173	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003a5b	    0xc74040000000	               mov dword [rax + 0x40], 0	      2173	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003a62	    0x488b05000000	            mov rax, qword [0x04003a69] 	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003a69	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003a6d	        0x488d75a0	                   lea rsi, [rbp - 0x60]	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003a71	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003a78	      0xb901000000	                              mov ecx, 1	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003a7d	          0x4889c7	                            mov rdi, rax	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003a80	      0xe8c86d0000	                     call sym.block_prep	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003a85	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003a88	            0x85c0	                           test eax, eax	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003a8a	            0x7519	                           jne 0x4003aa5	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003a8c	    0x8b0500000000	            mov eax, dword [0x04003a92] 	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003a92	            0x85c0	                           test eax, eax	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003a94	     0xf8469040000	                            je 0x4003f03	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003a9a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003a9d	            0x85c0	                           test eax, eax	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003a9f	     0xf855e040000	                           jne 0x4003f03	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003aa5	    0x8b0500000000	            mov eax, dword [0x04003aab] 	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003aab	            0x85c0	                           test eax, eax	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003aad	            0x744f	                            je 0x4003afe	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003aaf	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003ab2	            0x85c0	                           test eax, eax	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003ab4	            0x7448	                            je 0x4003afe	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003ab6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003aba	           0xfb600	                   movzx eax, byte [rax]	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003abd	            0x84c0	                             test al, al	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003abf	            0x753d	                           jne 0x4003afe	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003ac1	    0x488b05000000	            mov rax, qword [0x04003ac8] 	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003ac8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003acc	        0x48894590	             mov qword [rbp - 0x70], rax	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003ad0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4003ad7	          0x8b5064	            mov edx, dword [rax + 0x64] 	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4003ada	        0x488d4590	                   lea rax, [rbp - 0x70]	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4003ade	            0x89d6	                            mov esi, edx	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4003ae0	          0x4889c7	                            mov rdi, rax	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4003ae3	      0xe800000000	                          call 0x4003ae8	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4003ae8	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003aeb	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003aee	             0x1d0	                            add eax, edx	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003af0	          0x8945a0	             mov dword [rbp - 0x60], eax	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003af3	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2192	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003af6	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2192	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003afc	            0xeb1a	                           jmp 0x4003b18	      2186	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003afe	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003b01	            0x85c0	                           test eax, eax	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003b03	            0x7408	                            je 0x4003b0d	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003b05	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003b08	          0x83e801	                              sub eax, 1	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003b0b	            0xeb05	                           jmp 0x4003b12	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003b0d	      0xb800000000	                              mov eax, 0	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003b12	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003b18	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2200	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b1b	            0x85c0	                           test eax, eax	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b1d	            0x7416	                            je 0x4003b35	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b1f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b22	            0x85c0	                           test eax, eax	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b24	            0x750f	                           jne 0x4003b35	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b26	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b29	            0x85c0	                           test eax, eax	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b2b	            0x7e08	                           jle 0x4003b35	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b2d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b30	          0x83e801	                              sub eax, 1	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b33	            0xeb05	                           jmp 0x4003b3a	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b35	      0xb800000000	                              mov eax, 0	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b3a	     0x18558ffffff	             add dword [rbp - 0xa8], eax	      2200	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b40	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b47	          0x8b5068	            mov edx, dword [rax + 0x68] 	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b4a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b51	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b54	            0x29c2	                            sub edx, eax	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b56	            0x89d0	                            mov eax, edx	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b58	          0x83c001	                              add eax, 1	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b5b	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003b61	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b64	            0x85c0	                           test eax, eax	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b66	            0x742b	                            je 0x4003b93	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b68	    0x8b0500000000	            mov eax, dword [0x04003b6e] 	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b6e	            0x85c0	                           test eax, eax	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b70	            0x7407	                            je 0x4003b79	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b72	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b75	            0x85c0	                           test eax, eax	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b77	            0x741a	                            je 0x4003b93	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b79	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b80	          0x8b5068	            mov edx, dword [rax + 0x68] 	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b83	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b86	            0x29c2	                            sub edx, eax	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b88	            0x89d0	                            mov eax, edx	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b8a	          0x83c001	                              add eax, 1	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b8d	    0x29855cffffff	             sub dword [rbp - 0xa4], eax	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003b93	    0x488b05000000	            mov rax, qword [0x04003b9a] 	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003b9a	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003ba0	            0x89d7	                            mov edi, edx	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003ba2	            0xffd0	                                call rax	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003ba4	          0x83f801	                              cmp eax, 1	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003ba7	            0x7e39	                           jle 0x4003be2	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003ba9	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003baf	          0x83e001	                              and eax, 1	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003bb2	            0x85c0	                           test eax, eax	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003bb4	            0x7417	                            je 0x4003bcd	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003bb6	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003bb9	            0x85c0	                           test eax, eax	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003bbb	            0x7510	                           jne 0x4003bcd	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003bbd	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2217	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003bc0	          0x83c001	                              add eax, 1	      2217	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003bc3	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2217	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003bc6	    0x838558ffffff	               add dword [rbp - 0xa8], 1	      2218	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003bcd	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003bd3	            0x89c2	                            mov edx, eax	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003bd5	          0xc1ea1f	                           shr edx, 0x1f	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003bd8	             0x1d0	                            add eax, edx	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003bda	            0xd1f8	                              sar eax, 1	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003bdc	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003be2	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2224	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003be8	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2224	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003bee	    0x488b05000000	            mov rax, qword [0x04003bf5] 	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003bf5	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003bfb	            0x89d7	                            mov edi, edx	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003bfd	            0xffd0	                                call rax	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003bff	            0x89c2	                            mov edx, eax	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003c01	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003c07	           0xfafc2	                           imul eax, edx	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003c0a	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003c10	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2228	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003c13	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      2228	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003c19	            0x29c2	                            sub edx, eax	      2228	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003c1b	            0x89d0	                            mov eax, edx	      2228	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003c1d	     0x18558ffffff	             add dword [rbp - 0xa8], eax	      2228	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003c23	      0xe800000000	                          call 0x4003c28	      2230	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_5
0x4003c28	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2230	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_5
0x4003c2f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4003c36	          0x4889c7	                            mov rdi, rax	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4003c39	      0xe800000000	                          call 0x4003c3e	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4003c3e	        0x48894580	             mov qword [rbp - 0x80], rax	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4003c42	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003c46	            0x89c2	                            mov edx, eax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003c48	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003c4e	             0x1d0	                            add eax, edx	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003c50	          0x83c001	                              add eax, 1	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003c53	            0x89c7	                            mov edi, eax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003c55	      0xe800000000	                          call 0x4003c5a	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003c5a	        0x48894588	             mov qword [rbp - 0x78], rax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003c5e	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      2233	ops.c	FUNCTION_35	IF_6	FOR_1	IF_12
0x4003c63	     0xf849d020000	                            je 0x4003f06	      2233	ops.c	FUNCTION_35	IF_6	FOR_1	IF_12
0x4003c69	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2235	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_8
0x4003c6f	          0x4863d0	                         movsxd rdx, eax	      2235	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_8
0x4003c72	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2235	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_8
0x4003c76	          0x4801d0	                            add rax, rdx	      2235	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_8
0x4003c79	        0x488d5001	                      lea rdx, [rax + 1]	      2235	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_8
0x4003c7d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2235	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_8
0x4003c81	      0xbe00000000	                              mov esi, 0	      2235	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_8
0x4003c86	          0x4889c7	                            mov rdi, rax	      2235	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_8
0x4003c89	      0xe800000000	                          call 0x4003c8e	      2235	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_8
0x4003c8e	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2237	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_9
0x4003c91	          0x4863d0	                         movsxd rdx, eax	      2237	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_9
0x4003c94	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      2237	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_9
0x4003c9b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2237	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_9
0x4003c9f	          0x4889ce	                            mov rsi, rcx	      2237	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_9
0x4003ca2	          0x4889c7	                            mov rdi, rax	      2237	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_9
0x4003ca5	      0xe800000000	                          call 0x4003caa	      2237	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_9
0x4003caa	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003cad	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003cb0	             0x1d0	                            add eax, edx	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003cb2	            0x4898	                                    cdqe	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003cb4	    0x48018578ffff	            add qword [rbp - 0x88], rax 	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003cbb	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2240	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_10
0x4003cbe	            0x4898	                                    cdqe	      2240	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_10
0x4003cc0	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2240	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_10
0x4003cc3	          0x4863ca	                         movsxd rcx, edx	      2240	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_10
0x4003cc6	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2240	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_10
0x4003cca	          0x4801d1	                            add rcx, rdx	      2240	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_10
0x4003ccd	          0x4889c2	                            mov rdx, rax	      2240	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_10
0x4003cd0	      0xbe20000000	                           mov esi, 0x20	      2240	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_10
0x4003cd5	          0x4889cf	                            mov rdi, rcx	      2240	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_10
0x4003cd8	      0xe800000000	                          call 0x4003cdd	      2240	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_10
0x4003cdd	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003ce4	            0x751a	                           jne 0x4003d00	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003ce6	    0x83bd44ffffff	            cmp dword [rbp - 0xbc], 0xd 	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003ced	     0xf8412010000	                            je 0x4003e05	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003cf3	    0x83bd44ffffff	            cmp dword [rbp - 0xbc], 0xa 	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003cfa	     0xf8405010000	                            je 0x4003e05	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003d00	    0x8b0500000000	            mov eax, dword [0x04003d06] 	      2247	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14
0x4003d06	            0x85c0	                           test eax, eax	      2247	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14
0x4003d08	            0x7450	                            je 0x4003d5a	      2247	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14
0x4003d0a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4003d0e	          0x4889c7	                            mov rdi, rax	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4003d11	      0xe800000000	                          call 0x4003d16	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4003d16	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4003d1c	            0xeb2a	                           jmp 0x4003d48	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d1e	    0x488b05000000	            mov rax, qword [0x04003d25] 	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d25	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d2b	          0x4863ca	                         movsxd rcx, edx	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d2e	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d32	          0x4801d1	                            add rcx, rdx	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d35	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d3b	          0x4889ce	                            mov rsi, rcx	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d3e	            0x89d7	                            mov edi, edx	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d40	            0xffd0	                                call rax	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d42	     0x18558ffffff	             add dword [rbp - 0xa8], eax	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d48	    0x83ad60ffffff	               sub dword [rbp - 0xa0], 1	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d4f	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d56	            0x79c6	                           jns 0x4003d1e	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d58	            0xeb33	                           jmp 0x4003d8d	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003d5a	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d60	          0x4863d8	                         movsxd rbx, eax	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d63	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d67	          0x4889c7	                            mov rdi, rax	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d6a	      0xe800000000	                          call 0x4003d6f	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d6f	          0x4889c2	                            mov rdx, rax	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d72	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d76	        0x488d0c02	                    lea rcx, [rdx + rax]	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d7a	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d80	          0x4889da	                            mov rdx, rbx	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d83	            0x89c6	                            mov esi, eax	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d85	          0x4889cf	                            mov rdi, rcx	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d88	      0xe800000000	                          call 0x4003d8d	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x4003d8d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x4003d90	            0x85c0	                           test eax, eax	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x4003d92	     0xf85d3000000	                           jne 0x4003e6b	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x4003d98	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003d9b	          0x4863d8	                         movsxd rbx, eax	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003d9e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003da2	          0x4889c7	                            mov rdi, rax	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003da5	      0xe800000000	                          call 0x4003daa	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003daa	          0x4889c2	                            mov rdx, rax	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003dad	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003db1	          0x4801d0	                            add rax, rdx	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003db4	          0x4889da	                            mov rdx, rbx	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003db7	      0xbe20000000	                           mov esi, 0x20	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003dbc	          0x4889c7	                            mov rdi, rax	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003dbf	      0xe800000000	                          call 0x4003dc4	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4003dc4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003dcb	          0x4889c7	                            mov rdi, rax	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003dce	      0xe800000000	                          call 0x4003dd3	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003dd3	        0x488d5801	                      lea rbx, [rax + 1]	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003dd7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003ddb	          0x4889c7	                            mov rdi, rax	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003dde	      0xe800000000	                          call 0x4003de3	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003de3	          0x4889c2	                            mov rdx, rax	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003de6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003dea	        0x488d0c02	                    lea rcx, [rdx + rax]	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003dee	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003df5	          0x4889da	                            mov rdx, rbx	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003df8	          0x4889c6	                            mov rsi, rax	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003dfb	          0x4889cf	                            mov rdi, rcx	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003dfe	      0xe800000000	                          call 0x4003e03	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4003e03	            0xeb66	                           jmp 0x4003e6b	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x4003e05	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4003e09	            0x89c2	                            mov edx, eax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4003e0b	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4003e11	          0x8d1c02	                    lea ebx, [rdx + rax]	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4003e14	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2268	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_19
0x4003e18	          0x4889c7	                            mov rdi, rax	      2268	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_19
0x4003e1b	      0xe800000000	                          call 0x4003e20	      2268	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_19
0x4003e20	            0x29c3	                            sub ebx, eax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4003e22	            0x89d8	                            mov eax, ebx	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4003e24	          0x83c001	                              add eax, 1	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4003e27	            0x89c7	                            mov edi, eax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4003e29	      0xe800000000	                          call 0x4003e2e	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4003e2e	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4003e35	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      2269	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	IF_16
0x4003e3d	            0x742c	                            je 0x4003e6b	      2269	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	IF_16
0x4003e3f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4003e46	          0x4889c7	                            mov rdi, rax	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4003e49	      0xe800000000	                          call 0x4003e4e	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4003e4e	        0x488d5001	                      lea rdx, [rax + 1]	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4003e52	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4003e59	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4003e60	          0x4889ce	                            mov rsi, rcx	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4003e63	          0x4889c7	                            mov rdi, rax	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4003e66	      0xe800000000	                          call 0x4003e6b	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4003e6b	    0x488b05000000	            mov rax, qword [0x04003e72] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003e72	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003e76	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003e7a	      0xba00000000	                              mov edx, 0	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003e7f	          0x4889ce	                            mov rsi, rcx	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003e82	          0x4889c7	                            mov rdi, rax	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003e85	      0xe800000000	                          call 0x4003e8a	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003e8a	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      2274	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4003e92	            0x7473	                            je 0x4003f07	      2274	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4003e94	    0x488b15000000	            mov rdx, qword [0x04003e9b] 	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003e9b	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003e9f	        0x488d4801	                      lea rcx, [rax + 1]	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003ea3	        0x48894a38	             mov qword [rdx + 0x38], rcx	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003ea7	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003eae	      0xb900000000	                              mov ecx, 0	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003eb3	      0xba00000000	                              mov edx, 0	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003eb8	          0x4889c7	                            mov rdi, rax	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003ebb	      0xe800000000	                          call 0x4003ec0	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003ec0	    0x488b05000000	            mov rax, qword [0x04003ec7] 	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x4003ec7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x4003ecb	      0xbe01000000	                              mov esi, 1	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x4003ed0	          0x4889c7	                            mov rdi, rax	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x4003ed3	      0xe800000000	                          call 0x4003ed8	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x4003ed8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2278	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4003edf	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2278	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4003ee3	        0x488d5001	                      lea rdx, [rax + 1]	      2278	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4003ee7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2278	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4003eee	        0x48895030	             mov qword [rax + 0x30], rdx	      2278	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4003ef2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2279	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_24
0x4003ef9	          0x4889c7	                            mov rdi, rax	      2279	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_24
0x4003efc	      0xe800000000	                          call 0x4003f01	      2279	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_24
0x4003f01	            0xeb04	                           jmp 0x4003f07	      2279	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_24
0x4003f03	              0x90	                                     nop	      2176	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003f04	            0xeb01	                           jmp 0x4003f07	      2176	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003f06	              0x90	                                     nop	      2234	ops.c	FUNCTION_35	IF_6	FOR_1	IF_12
0x4003f07	    0x488b05000000	            mov rax, qword [0x04003f0e] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f0e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f12	        0x4883c201	                              add rdx, 1	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f16	        0x48895038	             mov qword [rax + 0x38], rdx	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f1a	    0x488b05000000	            mov rax, qword [0x04003f21] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f21	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f25	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f2c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f30	          0x4839c2	                            cmp rdx, rax	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f33	     0xf8e1bfbffff	                           jle 0x4003a54	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f39	      0xe987040000	                           jmp 0x40043c5	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f3e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2288	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4003f45	          0x8b4008	                mov eax, dword [rax + 8]	      2288	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4003f48	          0x83f801	                              cmp eax, 1	      2288	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4003f4b	            0x7571	                           jne 0x4003fbe	      2288	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4003f4d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2290	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4003f54	    0xc74028000000	               mov dword [rax + 0x28], 0	      2290	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4003f5b	    0x488b05000000	            mov rax, qword [0x04003f62] 	      2291	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4003f62	    0xc74040000000	               mov dword [rax + 0x40], 0	      2291	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4003f69	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003f70	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003f74	          0x4889c7	                            mov rdi, rax	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003f77	      0xe800000000	                          call 0x4003f7c	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003f7c	          0x4889c7	                            mov rdi, rax	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003f7f	      0xe800000000	                          call 0x4003f84	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003f84	            0x89c2	                            mov edx, eax	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003f86	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003f8d	          0x895038	             mov dword [rax + 0x38], edx	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x4003f90	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2293	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003f97	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2293	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003f9a	            0x85c0	                           test eax, eax	      2293	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003f9c	     0xf8443030000	                            je 0x40042e5	      2293	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003fa2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003fa9	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003fac	          0x8d50ff	                      lea edx, [rax - 1]	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003faf	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003fb6	          0x895038	             mov dword [rax + 0x38], edx	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003fb9	      0xe927030000	                           jmp 0x40042e5	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x4003fbe	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003fc5	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003fc8	            0x85c0	                           test eax, eax	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003fca	     0xf8515030000	                           jne 0x40042e5	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003fd0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003fd7	        0x4883c030	                           add rax, 0x30	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003fdb	          0x4889c7	                            mov rdi, rax	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003fde	      0xe800000000	                          call 0x4003fe3	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4003fe3	      0xe9fd020000	                           jmp 0x40042e5	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4003fe8	      0xe800000000	                          call 0x4003fed	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x4003fed	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x4003ff3	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x4003ffa	     0xf849a010000	                            je 0x400419a	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x4004000	    0x488b05000000	            mov rax, qword [0x04004007] 	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004007	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x400400d	            0x89d7	                            mov edi, edx	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x400400f	            0xffd0	                                call rax	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004011	          0x83f801	                              cmp eax, 1	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004014	            0x7f1a	                            jg 0x4004030	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004016	    0x488b05000000	            mov rax, qword [0x0400401d] 	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x400401d	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004023	            0x89d7	                            mov edi, edx	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004025	            0xffd0	                                call rax	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004027	          0x83f801	                              cmp eax, 1	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x400402a	     0xf8e92000000	                           jle 0x40040c2	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004030	    0x488b05000000	            mov rax, qword [0x04004037] 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004037	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400403b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004042	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004046	          0x4839c2	                            cmp rdx, rax	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004049	            0x753e	                           jne 0x4004089	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400404b	    0x488b05000000	            mov rax, qword [0x04004052] 	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004052	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004058	            0x89d7	                            mov edi, edx	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400405a	            0xffd0	                                call rax	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400405c	            0x89c3	                            mov ebx, eax	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400405e	    0x488b05000000	            mov rax, qword [0x04004065] 	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004065	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400406b	            0x89d7	                            mov edi, edx	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400406d	            0xffd0	                                call rax	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400406f	            0x29c3	                            sub ebx, eax	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004071	            0x89da	                            mov edx, ebx	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004073	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400407a	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400407d	             0x1c2	                            add edx, eax	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400407f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004086	          0x895038	             mov dword [rax + 0x38], edx	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004089	    0x8b0500000000	            mov eax, dword [0x0400408f] 	      2311	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x400408f	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2311	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004095	    0xc70500000000	           mov dword [0x0400409f], 0x50 	      2312	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x400409f	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2313	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_30
0x40040a5	            0x89c7	                            mov edi, eax	      2313	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_30
0x40040a7	      0xe800000000	                          call 0x40040ac	      2313	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_30
0x40040ac	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2314	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40040b2	    0x890500000000	            mov dword [0x040040b8], eax 	      2314	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40040b8	      0xe800000000	                          call 0x40040bd	      2316	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_31
0x40040bd	      0xe915020000	                           jmp 0x40042d7	      2316	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_31
0x40040c2	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 9	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x40040c9	     0xf858a000000	                           jne 0x4004159	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x40040cf	    0xc78568ffffff	               mov dword [rbp - 0x98], 0	      2324	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x40040d9	    0x488b05000000	            mov rax, qword [0x040040e0] 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x40040e0	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x40040e4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x40040eb	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x40040ef	          0x4839c2	                            cmp rdx, rax	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x40040f2	            0x7523	                           jne 0x4004117	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x40040f4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x40040fb	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x40040fe	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x4004105	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x4004108	            0x89d6	                            mov esi, edx	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x400410a	            0x89c7	                            mov edi, eax	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x400410c	      0xe800000000	                          call 0x4004111	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x4004111	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x4004117	      0xe800000000	                          call 0x400411c	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x400411c	            0x89c7	                            mov edi, eax	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x400411e	      0xe800000000	                          call 0x4004123	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x4004123	    0x488b05000000	            mov rax, qword [0x0400412a] 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x400412a	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x400412e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x4004135	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x4004139	          0x4839c2	                            cmp rdx, rax	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x400413c	            0x751b	                           jne 0x4004159	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x400413e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4004145	        0x488d5030	                   lea rdx, [rax + 0x30]	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4004149	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x400414f	            0x89c6	                            mov esi, eax	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4004151	          0x4889d7	                            mov rdi, rdx	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4004154	      0xe800000000	                          call 0x4004159	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4004159	    0x488b05000000	            mov rax, qword [0x04004160] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004160	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004164	    0x488b05000000	            mov rax, qword [0x0400416b] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400416b	      0xba01000000	                              mov edx, 1	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004170	          0x4889ce	                            mov rsi, rcx	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004173	          0x4889c7	                            mov rdi, rax	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004176	      0xe800000000	                          call 0x400417b	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400417b	          0x4889c2	                            mov rdx, rax	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400417e	    0x488b05000000	            mov rax, qword [0x04004185] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004185	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004188	            0x4898	                                    cdqe	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400418a	          0x4801d0	                            add rax, rdx	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400418d	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004193	            0x8810	                      mov byte [rax], dl	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004195	      0xe93d010000	                           jmp 0x40042d7	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400419a	    0x8b0500000000	            mov eax, dword [0x040041a0] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041a0	            0x85c0	                           test eax, eax	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041a2	     0xf842f010000	                            je 0x40042d7	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041a8	    0x488b05000000	            mov rax, qword [0x040041af] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041af	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041b3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041ba	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041be	          0x4839c2	                            cmp rdx, rax	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041c1	     0xf8510010000	                           jne 0x40042d7	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041c7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2344	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041ce	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2344	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041d1	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      2344	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041d7	    0x488b05000000	            mov rax, qword [0x040041de] 	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40041de	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40041e2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40041e9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40041ed	          0x4839c2	                            cmp rdx, rax	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40041f0	            0x7536	                           jne 0x4004228	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40041f2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40041f9	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x40041fc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004203	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004206	            0x39c2	                            cmp edx, eax	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004208	            0x751e	                           jne 0x4004228	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x400420a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004211	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004214	            0x85c0	                           test eax, eax	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004216	            0x7410	                            je 0x4004228	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004218	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2348	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x400421f	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2348	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004222	    0x29856cffffff	             sub dword [rbp - 0x94], eax	      2348	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004228	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x400422f	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x4004232	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x4004239	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x400423c	            0x89d6	                            mov esi, edx	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x400423e	            0x89c7	                            mov edi, eax	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x4004240	      0xe800000000	                          call 0x4004245	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x4004245	          0x83c001	                              add eax, 1	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x4004248	            0x89c7	                            mov edi, eax	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x400424a	      0xe800000000	                          call 0x400424f	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x400424f	    0x488b05000000	            mov rax, qword [0x04004256] 	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4004256	    0x488b15000000	            mov rdx, qword [0x0400425d] 	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400425d	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4004260	    0x8b8d6cffffff	             mov ecx, dword [rbp - 0x94]	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4004266	          0x83c101	                              add ecx, 1	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4004269	            0x29ca	                            sub edx, ecx	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400426b	          0x895040	             mov dword [rax + 0x40], edx	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400426e	            0xeb5b	                           jmp 0x40042cb	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x4004270	    0x488b05000000	            mov rax, qword [0x04004277] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x4004277	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x400427b	    0x488b05000000	            mov rax, qword [0x04004282] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x4004282	      0xba01000000	                              mov edx, 1	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x4004287	          0x4889ce	                            mov rsi, rcx	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x400428a	          0x4889c7	                            mov rdi, rax	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x400428d	      0xe800000000	                          call 0x4004292	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x4004292	          0x4889c2	                            mov rdx, rax	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x4004295	    0x488b05000000	            mov rax, qword [0x0400429c] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x400429c	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x400429f	            0x4898	                                    cdqe	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40042a1	          0x4801d0	                            add rax, rdx	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40042a4	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40042aa	            0x8810	                      mov byte [rax], dl	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40042ac	    0x488b05000000	            mov rax, qword [0x040042b3] 	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40042b3	        0x4883c038	                           add rax, 0x38	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40042b7	          0x4889c7	                            mov rdi, rax	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40042ba	      0xe800000000	                          call 0x40042bf	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40042bf	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40042c2	            0x7412	                            je 0x40042d6	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40042c4	    0x83ad6cffffff	               sub dword [rbp - 0x94], 1	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042cb	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042d2	            0x799c	                           jns 0x4004270	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042d4	            0xeb01	                           jmp 0x40042d7	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042d6	              0x90	                                     nop	      2359	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29
0x40042d7	      0xe800000000	                          call 0x40042dc	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x40042dc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x40042df	     0xf84df000000	                            je 0x40043c4	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x40042e5	    0x488b05000000	            mov rax, qword [0x040042ec] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40042ec	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40042f0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40042f7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40042fb	          0x4839c2	                            cmp rdx, rax	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40042fe	            0x7421	                            je 0x4004321	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004300	    0x488b05000000	            mov rax, qword [0x04004307] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004307	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400430b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004312	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004316	          0x4839c2	                            cmp rdx, rax	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004319	     0xf8cc9fcffff	                            jl 0x4003fe8	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400431f	            0xeb52	                           jmp 0x4004373	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004321	    0x488b05000000	            mov rax, qword [0x04004328] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004328	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400432b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004332	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004335	            0x39c2	                            cmp edx, eax	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004337	            0x741e	                            je 0x4004357	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004339	    0x488b05000000	            mov rax, qword [0x04004340] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004340	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004343	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400434a	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400434d	            0x39c2	                            cmp edx, eax	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400434f	     0xf8c93fcffff	                            jl 0x4003fe8	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004355	            0xeb1c	                           jmp 0x4004373	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004357	    0x488b05000000	            mov rax, qword [0x0400435e] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400435e	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004361	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004368	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400436b	            0x39c2	                            cmp edx, eax	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400436d	     0xf8c75fcffff	                            jl 0x4003fe8	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004373	    0x488b05000000	            mov rax, qword [0x0400437a] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400437a	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400437e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004385	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004389	          0x4839c2	                            cmp rdx, rax	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400438c	            0x7537	                           jne 0x40043c5	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400438e	    0x488b05000000	            mov rax, qword [0x04004395] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004395	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004398	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400439f	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40043a2	            0x39c2	                            cmp edx, eax	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40043a4	            0x751f	                           jne 0x40043c5	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40043a6	    0x488b05000000	            mov rax, qword [0x040043ad] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40043ad	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40043b0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40043b7	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40043ba	            0x39c2	                            cmp edx, eax	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40043bc	     0xf8426fcffff	                            je 0x4003fe8	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40043c2	            0xeb01	                           jmp 0x40043c5	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40043c4	              0x90	                                     nop	      2366	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30
0x40043c5	    0x488b0d000000	            mov rcx, qword [0x040043cc] 	      2370	ops.c	FUNCTION_35
0x40043cc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2370	ops.c	FUNCTION_35
0x40043d3	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2370	ops.c	FUNCTION_35
0x40043d7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2370	ops.c	FUNCTION_35
0x40043db	        0x48894138	             mov qword [rcx + 0x38], rax	      2370	ops.c	FUNCTION_35
0x40043df	        0x48895140	             mov qword [rcx + 0x40], rdx	      2370	ops.c	FUNCTION_35
0x40043e3	      0xe800000000	                          call 0x40043e8	      2371	ops.c	FUNCTION_35	CALL_42
0x40043e8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2372	ops.c	FUNCTION_35	CALL_43
0x40043ef	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2372	ops.c	FUNCTION_35	CALL_43
0x40043f3	        0x488d5001	                      lea rdx, [rax + 1]	      2372	ops.c	FUNCTION_35	CALL_43
0x40043f7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2372	ops.c	FUNCTION_35	CALL_43
0x40043fe	          0x8b7028	            mov esi, dword [rax + 0x28] 	      2372	ops.c	FUNCTION_35	CALL_43
0x4004401	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2372	ops.c	FUNCTION_35	CALL_43
0x4004408	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2372	ops.c	FUNCTION_35	CALL_43
0x400440c	      0xb900000000	                              mov ecx, 0	      2372	ops.c	FUNCTION_35	CALL_43
0x4004411	          0x4889c7	                            mov rdi, rax	      2372	ops.c	FUNCTION_35	CALL_43
0x4004414	      0xe800000000	                          call 0x4004419	      2372	ops.c	FUNCTION_35	CALL_43
0x4004419	    0x488b0d000000	            mov rcx, qword [0x04004420] 	      2375	ops.c	FUNCTION_35
0x4004420	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2375	ops.c	FUNCTION_35
0x4004427	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2375	ops.c	FUNCTION_35
0x400442b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2375	ops.c	FUNCTION_35
0x400442f	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      2375	ops.c	FUNCTION_35
0x4004436	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      2375	ops.c	FUNCTION_35
0x400443d	    0x488b0d000000	            mov rcx, qword [0x04004444] 	      2376	ops.c	FUNCTION_35
0x4004444	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2376	ops.c	FUNCTION_35
0x400444b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2376	ops.c	FUNCTION_35
0x400444f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2376	ops.c	FUNCTION_35
0x4004453	    0x488981001200	          mov qword [rcx + 0x1200], rax 	      2376	ops.c	FUNCTION_35
0x400445a	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	      2376	ops.c	FUNCTION_35
0x4004461	      0xb801000000	                              mov eax, 1	      2378	ops.c	FUNCTION_35
0x4004466	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2379	ops.c	FUNCTION_35
0x400446a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2379	ops.c	FUNCTION_35
0x4004473	            0x7405	                            je 0x400447a	      2379	ops.c	FUNCTION_35
0x4004475	      0xe800000000	                          call 0x400447a	      2379	ops.c	FUNCTION_35
0x400447a	    0x4881c4b80000	                           add rsp, 0xb8	      2379	ops.c	FUNCTION_35
0x4004481	              0x5b	                                 pop rbx	      2379	ops.c	FUNCTION_35
0x4004482	              0x5d	                                 pop rbp	      2379	ops.c	FUNCTION_35
0x4004483	              0xc3	                                     ret	      2379	ops.c	FUNCTION_35
do_execreg	ELSE,4:DO,0:IF,18:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,28	242
0x4001c16	              0x55	                                push rbp	      1211	ops.c	FUNCTION_23
0x4001c17	          0x4889e5	                            mov rbp, rsp	      1211	ops.c	FUNCTION_23
0x4001c1a	        0x4883ec30	                           sub rsp, 0x30	      1211	ops.c	FUNCTION_23
0x4001c1e	          0x897ddc	             mov dword [rbp - 0x24], edi	      1211	ops.c	FUNCTION_23
0x4001c21	          0x8975d8	             mov dword [rbp - 0x28], esi	      1211	ops.c	FUNCTION_23
0x4001c24	          0x8955d4	             mov dword [rbp - 0x2c], edx	      1211	ops.c	FUNCTION_23
0x4001c27	          0x894dd0	             mov dword [rbp - 0x30], ecx	      1211	ops.c	FUNCTION_23
0x4001c2a	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      1214	ops.c	FUNCTION_23
0x4001c31	        0x837ddc40	           cmp dword [rbp - 0x24], 0x40 	      1217	ops.c	FUNCTION_23	IF_1
0x4001c35	            0x752f	                           jne 0x4001c66	      1217	ops.c	FUNCTION_23	IF_1
0x4001c37	    0x8b0500000000	            mov eax, dword [0x04001c3d] 	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x4001c3d	            0x85c0	                           test eax, eax	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x4001c3f	            0x751c	                           jne 0x4001c5d	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x4001c41	      0xbf00000000	                              mov edi, 0	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4001c46	      0xe800000000	                          call 0x4001c4b	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4001c4b	          0x4889c7	                            mov rdi, rax	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4001c4e	      0xe800000000	                          call 0x4001c53	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4001c53	      0xb800000000	                              mov eax, 0	      1222	ops.c	FUNCTION_23	IF_1	IF_2
0x4001c58	      0xe96e030000	                           jmp 0x4001fcb	      1222	ops.c	FUNCTION_23	IF_1	IF_2
0x4001c5d	    0x8b0500000000	            mov eax, dword [0x04001c63] 	      1224	ops.c	FUNCTION_23	IF_1
0x4001c63	          0x8945dc	             mov dword [rbp - 0x24], eax	      1224	ops.c	FUNCTION_23	IF_1
0x4001c66	        0x837ddc25	           cmp dword [rbp - 0x24], 0x25 	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4001c6a	            0x7419	                            je 0x4001c85	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4001c6c	        0x837ddc23	           cmp dword [rbp - 0x24], 0x23 	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4001c70	            0x7413	                            je 0x4001c85	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4001c72	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4001c75	      0xbe00000000	                              mov esi, 0	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4001c7a	            0x89c7	                            mov edi, eax	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4001c7c	      0xe800000000	                          call 0x4001c81	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4001c81	            0x85c0	                           test eax, eax	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4001c83	            0x7514	                           jne 0x4001c99	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4001c85	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1229	ops.c	FUNCTION_23	IF_3	CALL_4
0x4001c88	            0x89c7	                            mov edi, eax	      1229	ops.c	FUNCTION_23	IF_3	CALL_4
0x4001c8a	      0xe800000000	                          call 0x4001c8f	      1229	ops.c	FUNCTION_23	IF_3	CALL_4
0x4001c8f	      0xb800000000	                              mov eax, 0	      1230	ops.c	FUNCTION_23	IF_3
0x4001c94	      0xe932030000	                           jmp 0x4001fcb	      1230	ops.c	FUNCTION_23	IF_3
0x4001c99	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1232	ops.c	FUNCTION_23
0x4001c9c	    0x890500000000	            mov dword [0x04001ca2], eax 	      1232	ops.c	FUNCTION_23
0x4001ca2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1235	ops.c	FUNCTION_23	CALL_5
0x4001ca5	            0x89c7	                            mov edi, eax	      1235	ops.c	FUNCTION_23	CALL_5
0x4001ca7	      0xe800000000	                          call 0x4001cac	      1235	ops.c	FUNCTION_23	CALL_5
0x4001cac	          0x8945dc	             mov dword [rbp - 0x24], eax	      1235	ops.c	FUNCTION_23	CALL_5
0x4001caf	        0x837ddc5f	           cmp dword [rbp - 0x24], 0x5f 	      1238	ops.c	FUNCTION_23	IF_4
0x4001cb3	            0x750a	                           jne 0x4001cbf	      1238	ops.c	FUNCTION_23	IF_4
0x4001cb5	      0xb801000000	                              mov eax, 1	      1239	ops.c	FUNCTION_23	IF_4
0x4001cba	      0xe90c030000	                           jmp 0x4001fcb	      1239	ops.c	FUNCTION_23	IF_4
0x4001cbf	        0x837ddc3a	           cmp dword [rbp - 0x24], 0x3a 	      1242	ops.c	FUNCTION_23	IF_5
0x4001cc3	     0xf85eb000000	                           jne 0x4001db4	      1242	ops.c	FUNCTION_23	IF_5
0x4001cc9	    0x488b05000000	            mov rax, qword [0x04001cd0] 	      1244	ops.c	FUNCTION_23	IF_5	IF_6
0x4001cd0	          0x4885c0	                           test rax, rax	      1244	ops.c	FUNCTION_23	IF_5	IF_6
0x4001cd3	            0x751c	                           jne 0x4001cf1	      1244	ops.c	FUNCTION_23	IF_5	IF_6
0x4001cd5	      0xbf00000000	                              mov edi, 0	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x4001cda	      0xe800000000	                          call 0x4001cdf	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x4001cdf	          0x4889c7	                            mov rdi, rax	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x4001ce2	      0xe800000000	                          call 0x4001ce7	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x4001ce7	      0xb800000000	                              mov eax, 0	      1247	ops.c	FUNCTION_23	IF_5	IF_6
0x4001cec	      0xe9da020000	                           jmp 0x4001fcb	      1247	ops.c	FUNCTION_23	IF_5	IF_6
0x4001cf1	    0x488b05000000	            mov rax, qword [0x04001cf8] 	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4001cf8	          0x4885c0	                           test rax, rax	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4001cfb	            0x741a	                            je 0x4001d17	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4001cfd	    0x488b05000000	            mov rax, qword [0x04001d04] 	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4001d04	          0x4889c7	                            mov rdi, rax	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4001d07	      0xe800000000	                          call 0x4001d0c	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4001d0c	    0x48c705000000	               mov qword [0x04001d17], 0	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4001d17	    0x488b05000000	            mov rax, qword [0x04001d1e] 	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4001d1e	      0xb900000000	                              mov ecx, 0	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4001d23	      0xba16000000	                           mov edx, 0x16	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4001d28	      0xbe00000000	                              mov esi, 0	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4001d2d	          0x4889c7	                            mov rdi, rax	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4001d30	      0xe800000000	                          call 0x4001d35	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4001d35	        0x488945f0	             mov qword [rbp - 0x10], rax	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4001d39	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1253	ops.c	FUNCTION_23	IF_5	IF_7
0x4001d3e	            0x7463	                            je 0x4001da3	      1253	ops.c	FUNCTION_23	IF_5	IF_7
0x4001d40	    0x8b0500000000	            mov eax, dword [0x04001d46] 	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4001d46	            0x85c0	                           test eax, eax	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4001d48	            0x743b	                            je 0x4001d85	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4001d4a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4001d4e	      0xba05000000	                              mov edx, 5	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4001d53	      0xbe00000000	                              mov esi, 0	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4001d58	          0x4889c7	                            mov rdi, rax	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4001d5b	      0xe800000000	                          call 0x4001d60	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4001d60	            0x85c0	                           test eax, eax	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4001d62	            0x7521	                           jne 0x4001d85	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4001d64	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4001d68	        0x488d7805	                      lea rdi, [rax + 5]	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4001d6c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4001d6f	            0x89c1	                            mov ecx, eax	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4001d71	      0xba01000000	                              mov edx, 1	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4001d76	      0xbe01000000	                              mov esi, 1	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4001d7b	      0xe8f0020000	                 call sym.put_in_typebuf	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4001d80	          0x8945e0	             mov dword [rbp - 0x20], eax	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4001d83	            0xeb1e	                           jmp 0x4001da3	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x4001d85	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4001d88	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4001d8c	            0x89d1	                            mov ecx, edx	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4001d8e	      0xba01000000	                              mov edx, 1	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4001d93	      0xbe01000000	                              mov esi, 1	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4001d98	          0x4889c7	                            mov rdi, rax	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4001d9b	      0xe8d0020000	                 call sym.put_in_typebuf	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4001da0	          0x8945e0	             mov dword [rbp - 0x20], eax	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4001da3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1262	ops.c	FUNCTION_23	IF_5	CALL_13
0x4001da7	          0x4889c7	                            mov rdi, rax	      1262	ops.c	FUNCTION_23	IF_5	CALL_13
0x4001daa	      0xe800000000	                          call 0x4001daf	      1262	ops.c	FUNCTION_23	IF_5	CALL_13
0x4001daf	      0xe914020000	                           jmp 0x4001fc8	      1262	ops.c	FUNCTION_23	IF_5	CALL_13
0x4001db4	        0x837ddc3d	           cmp dword [rbp - 0x24], 0x3d 	      1266	ops.c	FUNCTION_23	ELSE_2	IF_9
0x4001db8	            0x7545	                           jne 0x4001dff	      1266	ops.c	FUNCTION_23	ELSE_2	IF_9
0x4001dba	      0xe800000000	                          call 0x4001dbf	      1268	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_14
0x4001dbf	        0x488945f0	             mov qword [rbp - 0x10], rax	      1268	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_14
0x4001dc3	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1269	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x4001dc8	            0x750a	                           jne 0x4001dd4	      1269	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x4001dca	      0xb800000000	                              mov eax, 0	      1270	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x4001dcf	      0xe9f7010000	                           jmp 0x4001fcb	      1270	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x4001dd4	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4001dd7	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4001dda	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4001dde	      0xbe01000000	                              mov esi, 1	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4001de3	          0x4889c7	                            mov rdi, rax	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4001de6	      0xe885020000	                 call sym.put_in_typebuf	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4001deb	          0x8945e0	             mov dword [rbp - 0x20], eax	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x4001dee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1272	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_16
0x4001df2	          0x4889c7	                            mov rdi, rax	      1272	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_16
0x4001df5	      0xe800000000	                          call 0x4001dfa	      1272	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_16
0x4001dfa	      0xe9c9010000	                           jmp 0x4001fc8	      1272	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_16
0x4001dff	        0x837ddc2e	           cmp dword [rbp - 0x24], 0x2e 	      1275	ops.c	FUNCTION_23	ELSE_3	IF_11
0x4001e03	            0x7557	                           jne 0x4001e5c	      1275	ops.c	FUNCTION_23	ELSE_3	IF_11
0x4001e05	      0xe800000000	                          call 0x4001e0a	      1277	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_17
0x4001e0a	        0x488945f0	             mov qword [rbp - 0x10], rax	      1277	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_17
0x4001e0e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1278	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4001e13	            0x751c	                           jne 0x4001e31	      1278	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4001e15	      0xbf00000000	                              mov edi, 0	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4001e1a	      0xe800000000	                          call 0x4001e1f	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4001e1f	          0x4889c7	                            mov rdi, rax	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4001e22	      0xe800000000	                          call 0x4001e27	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4001e27	      0xb800000000	                              mov eax, 0	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4001e2c	      0xe99a010000	                           jmp 0x4001fcb	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4001e31	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4001e34	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4001e37	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4001e3b	      0xbe00000000	                              mov esi, 0	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4001e40	          0x4889c7	                            mov rdi, rax	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4001e43	      0xe828020000	                 call sym.put_in_typebuf	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4001e48	          0x8945e0	             mov dword [rbp - 0x20], eax	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4001e4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1284	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x4001e4f	          0x4889c7	                            mov rdi, rax	      1284	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x4001e52	      0xe800000000	                          call 0x4001e57	      1284	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x4001e57	      0xe96c010000	                           jmp 0x4001fc8	      1284	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x4001e5c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x4001e5f	      0xbe00000000	                              mov esi, 0	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x4001e64	            0x89c7	                            mov edi, eax	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x4001e66	      0xe800000000	                          call 0x4001e6b	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x4001e6b	    0x488b05000000	            mov rax, qword [0x04001e72] 	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x4001e72	          0x488b00	                    mov rax, qword [rax]	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x4001e75	          0x4885c0	                           test rax, rax	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x4001e78	            0x750a	                           jne 0x4001e84	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x4001e7a	      0xb800000000	                              mov eax, 0	      1290	ops.c	FUNCTION_23	ELSE_4	IF_13
0x4001e7f	      0xe947010000	                           jmp 0x4001fcb	      1290	ops.c	FUNCTION_23	ELSE_4	IF_13
0x4001e84	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1293	ops.c	FUNCTION_23	ELSE_4
0x4001e88	            0x7407	                            je 0x4001e91	      1293	ops.c	FUNCTION_23	ELSE_4
0x4001e8a	      0xb8ffffffff	                     mov eax, 0xffffffff	      1293	ops.c	FUNCTION_23	ELSE_4
0x4001e8f	            0xeb05	                           jmp 0x4001e96	      1293	ops.c	FUNCTION_23	ELSE_4
0x4001e91	      0xb800000000	                              mov eax, 0	      1293	ops.c	FUNCTION_23	ELSE_4
0x4001e96	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1293	ops.c	FUNCTION_23	ELSE_4
0x4001e99	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1298	ops.c	FUNCTION_23	ELSE_4	CALL_23
0x4001e9c	            0x89c7	                            mov edi, eax	      1298	ops.c	FUNCTION_23	ELSE_4	CALL_23
0x4001e9e	      0xe82a010000	          call sym.put_reedit_in_typebuf	      1298	ops.c	FUNCTION_23	ELSE_4	CALL_23
0x4001ea3	    0x488b05000000	            mov rax, qword [0x04001eaa] 	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4001eaa	        0x488b4008	                mov rax, qword [rax + 8]	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4001eae	        0x488945e8	             mov qword [rbp - 0x18], rax	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4001eb2	      0xe9f7000000	                           jmp 0x4001fae	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4001eb7	    0x488b05000000	            mov rax, qword [0x04001ebe] 	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4001ebe	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4001ec2	            0x3c01	                               cmp al, 1	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4001ec4	            0x741b	                            je 0x4001ee1	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4001ec6	    0x488b05000000	            mov rax, qword [0x04001ecd] 	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4001ecd	        0x488b4008	                mov rax, qword [rax + 8]	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4001ed1	        0x4883e801	                              sub rax, 1	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4001ed5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4001ed9	            0x7f06	                            jg 0x4001ee1	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4001edb	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4001edf	            0x742d	                            je 0x4001f0e	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4001ee1	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4001ee4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4001ee7	          0x4189d0	                            mov r8d, edx	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4001eea	      0xb901000000	                              mov ecx, 1	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4001eef	      0xba00000000	                              mov edx, 0	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4001ef4	            0x89c6	                            mov esi, eax	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4001ef6	      0xbf00000000	                              mov edi, 0	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4001efb	      0xe800000000	                          call 0x4001f00	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4001f00	            0x85c0	                           test eax, eax	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4001f02	            0x750a	                           jne 0x4001f0e	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4001f04	      0xb800000000	                              mov eax, 0	      1308	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15
0x4001f09	      0xe9bd000000	                           jmp 0x4001fcb	      1308	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15
0x4001f0e	    0x488b05000000	            mov rax, qword [0x04001f15] 	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4001f15	          0x488b00	                    mov rax, qword [rax]	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4001f18	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4001f1c	        0x48c1e203	                              shl rdx, 3	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4001f20	          0x4801d0	                            add rax, rdx	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4001f23	          0x488b00	                    mov rax, qword [rax]	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4001f26	          0x4889c7	                            mov rdi, rax	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4001f29	      0xe800000000	                          call 0x4001f2e	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4001f2e	        0x488945f8	                mov qword [rbp - 8], rax	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4001f32	      0x48837df800	                  cmp qword [rbp - 8], 0	      1311	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x4001f37	            0x750a	                           jne 0x4001f43	      1311	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x4001f39	      0xb800000000	                              mov eax, 0	      1312	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x4001f3e	      0xe988000000	                           jmp 0x4001fcb	      1312	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x4001f43	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4001f46	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4001f49	        0x488b45f8	                mov rax, qword [rbp - 8]	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4001f4d	          0x4189d0	                            mov r8d, edx	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4001f50	      0xb901000000	                              mov ecx, 1	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4001f55	      0xba00000000	                              mov edx, 0	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4001f5a	          0x4889c7	                            mov rdi, rax	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4001f5d	      0xe800000000	                          call 0x4001f62	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4001f62	          0x8945e0	             mov dword [rbp - 0x20], eax	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4001f65	        0x488b45f8	                mov rax, qword [rbp - 8]	      1314	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x4001f69	          0x4889c7	                            mov rdi, rax	      1314	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x4001f6c	      0xe800000000	                          call 0x4001f71	      1314	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x4001f71	        0x837de000	               cmp dword [rbp - 0x20], 0	      1315	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x4001f75	            0x7507	                           jne 0x4001f7e	      1315	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x4001f77	      0xb800000000	                              mov eax, 0	      1316	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x4001f7c	            0xeb4d	                           jmp 0x4001fcb	      1316	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x4001f7e	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001f82	            0x742a	                            je 0x4001fae	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001f84	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001f87	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001f8a	          0x4189d0	                            mov r8d, edx	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001f8d	      0xb901000000	                              mov ecx, 1	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001f92	      0xba00000000	                              mov edx, 0	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001f97	            0x89c6	                            mov esi, eax	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001f99	      0xbf00000000	                              mov edi, 0	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001f9e	      0xe800000000	                          call 0x4001fa3	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001fa3	            0x85c0	                           test eax, eax	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001fa5	            0x7507	                           jne 0x4001fae	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4001fa7	      0xb800000000	                              mov eax, 0	      1319	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18
0x4001fac	            0xeb1d	                           jmp 0x4001fcb	      1319	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18
0x4001fae	      0x48836de801	               sub qword [rbp - 0x18], 1	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4001fb3	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4001fb8	     0xf89f9feffff	                           jns 0x4001eb7	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4001fbe	    0xc70500000000	               mov dword [0x04001fc8], 1	      1321	ops.c	FUNCTION_23	ELSE_4
0x4001fc8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1323	ops.c	FUNCTION_23
0x4001fcb	              0xc9	                                   leave	      1324	ops.c	FUNCTION_23
0x4001fcc	              0xc3	                                     ret	      1324	ops.c	FUNCTION_23
mb_adjust_opend	ELSE,0:DO,0:IF,1:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,2	31
0x40038d3	              0x55	                                push rbp	      2114	ops.c	ELSE_6	FUNCTION_34
0x40038d4	          0x4889e5	                            mov rbp, rsp	      2114	ops.c	ELSE_6	FUNCTION_34
0x40038d7	        0x4883ec20	                           sub rsp, 0x20	      2114	ops.c	ELSE_6	FUNCTION_34
0x40038db	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2114	ops.c	ELSE_6	FUNCTION_34
0x40038df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x40038e3	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x40038e6	            0x85c0	                           test eax, eax	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x40038e8	            0x7446	                            je 0x4003930	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x40038ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2119	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x40038ee	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2119	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x40038f2	          0x4889c7	                            mov rdi, rax	      2119	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x40038f5	      0xe800000000	                          call 0x40038fa	      2119	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x40038fa	        0x488945f8	                mov qword [rbp - 8], rax	      2119	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x40038fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4003902	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4003905	          0x4863d0	                         movsxd rdx, eax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4003908	        0x488b45f8	                mov rax, qword [rbp - 8]	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400390c	          0x4801c2	                            add rdx, rax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400390f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4003913	          0x4889d6	                            mov rsi, rdx	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4003916	          0x4889c7	                            mov rdi, rax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4003919	      0xe800000000	                          call 0x400391e	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400391e	            0x89c2	                            mov edx, eax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4003920	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4003924	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4003927	             0x1c2	                            add edx, eax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4003929	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400392d	          0x895038	             mov dword [rax + 0x38], edx	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4003930	              0x90	                                     nop	      2122	ops.c	ELSE_6	FUNCTION_34
0x4003931	              0xc9	                                   leave	      2122	ops.c	ELSE_6	FUNCTION_34
0x4003932	              0xc3	                                     ret	      2122	ops.c	ELSE_6	FUNCTION_34
free_yank_all	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,1	9
0x4005bbe	              0x55	                                push rbp	      3044	ops.c	FUNCTION_44
0x4005bbf	          0x4889e5	                            mov rbp, rsp	      3044	ops.c	FUNCTION_44
0x4005bc2	    0x488b05000000	            mov rax, qword [0x04005bc9] 	      3045	ops.c	FUNCTION_44	CALL_1
0x4005bc9	        0x488b4008	                mov rax, qword [rax + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x4005bcd	          0x4889c7	                            mov rdi, rax	      3045	ops.c	FUNCTION_44	CALL_1
0x4005bd0	      0xe866ffffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x4005bd5	              0x90	                                     nop	      3046	ops.c	FUNCTION_44
0x4005bd6	              0x5d	                                 pop rbp	      3046	ops.c	FUNCTION_44
0x4005bd7	              0xc3	                                     ret	      3046	ops.c	FUNCTION_44
write_reg_contents	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,1	18
0x400e09e	              0x55	                                push rbp	      6993	ops.c	FUNCTION_85
0x400e09f	          0x4889e5	                            mov rbp, rsp	      6993	ops.c	FUNCTION_85
0x400e0a2	        0x4883ec20	                           sub rsp, 0x20	      6993	ops.c	FUNCTION_85
0x400e0a6	          0x897dfc	                mov dword [rbp - 4], edi	      6993	ops.c	FUNCTION_85
0x400e0a9	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6993	ops.c	FUNCTION_85
0x400e0ad	          0x8955f8	                mov dword [rbp - 8], edx	      6993	ops.c	FUNCTION_85
0x400e0b0	          0x894dec	             mov dword [rbp - 0x14], ecx	      6993	ops.c	FUNCTION_85
0x400e0b3	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      6994	ops.c	FUNCTION_85	CALL_1
0x400e0b6	          0x8b55f8	                mov edx, dword [rbp - 8]	      6994	ops.c	FUNCTION_85	CALL_1
0x400e0b9	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      6994	ops.c	FUNCTION_85	CALL_1
0x400e0bd	          0x8b45fc	                mov eax, dword [rbp - 4]	      6994	ops.c	FUNCTION_85	CALL_1
0x400e0c0	    0x41b900000000	                              mov r9d, 0	      6994	ops.c	FUNCTION_85	CALL_1
0x400e0c6	    0x41b8ff000000	                           mov r8d, 0xff	      6994	ops.c	FUNCTION_85	CALL_1
0x400e0cc	            0x89c7	                            mov edi, eax	      6994	ops.c	FUNCTION_85	CALL_1
0x400e0ce	      0xe800000000	                          call 0x400e0d3	      6994	ops.c	FUNCTION_85	CALL_1
0x400e0d3	              0x90	                                     nop	      6995	ops.c	FUNCTION_85
0x400e0d4	              0xc9	                                   leave	      6995	ops.c	FUNCTION_85
0x400e0d5	              0xc3	                                     ret	      6995	ops.c	FUNCTION_85
swapchars	ELSE,0:DO,0:IF,3:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,3	47
0x4004aad	              0x55	                                push rbp	      2509	ops.c	FUNCTION_37
0x4004aae	          0x4889e5	                            mov rbp, rsp	      2509	ops.c	FUNCTION_37
0x4004ab1	              0x53	                                push rbx	      2509	ops.c	FUNCTION_37
0x4004ab2	        0x4883ec28	                           sub rsp, 0x28	      2509	ops.c	FUNCTION_37
0x4004ab6	          0x897ddc	             mov dword [rbp - 0x24], edi	      2509	ops.c	FUNCTION_37
0x4004ab9	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2509	ops.c	FUNCTION_37
0x4004abd	          0x8955d8	             mov dword [rbp - 0x28], edx	      2509	ops.c	FUNCTION_37
0x4004ac0	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      2511	ops.c	FUNCTION_37
0x4004ac7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2513	ops.c	FUNCTION_37	FOR_1
0x4004aca	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2513	ops.c	FUNCTION_37	FOR_1
0x4004acd	            0xeb5d	                           jmp 0x4004b2c	      2513	ops.c	FUNCTION_37	FOR_1
0x4004acf	    0x8b0500000000	            mov eax, dword [0x04004ad5] 	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4004ad5	            0x85c0	                           test eax, eax	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4004ad7	            0x742a	                            je 0x4004b03	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4004ad9	    0x488b1d000000	            mov rbx, qword [0x04004ae0] 	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004ae0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004ae4	          0x4889c7	                            mov rdi, rax	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004ae7	      0xe800000000	                          call 0x4004aec	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004aec	          0x4889c7	                            mov rdi, rax	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004aef	            0xffd3	                                call rbx	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004af1	          0x8945ec	             mov dword [rbp - 0x14], eax	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004af4	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4004af8	            0x7e09	                           jle 0x4004b03	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4004afa	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4004afd	          0x83e801	                              sub eax, 1	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4004b00	          0x2945e4	             sub dword [rbp - 0x1c], eax	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4004b03	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4004b07	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4004b0a	          0x4889d6	                            mov rsi, rdx	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4004b0d	            0x89c7	                            mov edi, eax	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4004b0f	      0xe800000000	                          call 0x4004b14	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4004b14	           0x945e8	              or dword [rbp - 0x18], eax	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4004b17	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004b1b	          0x4889c7	                            mov rdi, rax	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004b1e	      0xe800000000	                          call 0x4004b23	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004b23	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004b26	            0x740c	                            je 0x4004b34	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004b28	        0x836de401	               sub dword [rbp - 0x1c], 1	      2513	ops.c	FUNCTION_37	FOR_1
0x4004b2c	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2513	ops.c	FUNCTION_37	FOR_1
0x4004b30	            0x7f9d	                            jg 0x4004acf	      2513	ops.c	FUNCTION_37	FOR_1
0x4004b32	            0xeb01	                           jmp 0x4004b35	      2513	ops.c	FUNCTION_37	FOR_1
0x4004b34	              0x90	                                     nop	      2527	ops.c	FUNCTION_37	FOR_1	IF_3
0x4004b35	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2529	ops.c	FUNCTION_37
0x4004b38	        0x4883c428	                           add rsp, 0x28	      2530	ops.c	FUNCTION_37
0x4004b3c	              0x5b	                                 pop rbx	      2530	ops.c	FUNCTION_37
0x4004b3d	              0x5d	                                 pop rbp	      2530	ops.c	FUNCTION_37
0x4004b3e	              0xc3	                                     ret	      2530	ops.c	FUNCTION_37
prepare_viminfo_registers	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,1	8
0x400c509	              0x55	                                push rbp	      6060	ops.c	FUNCTION_68
0x400c50a	          0x4889e5	                            mov rbp, rsp	      6060	ops.c	FUNCTION_68
0x400c50d	      0xbf00050000	                          mov edi, 0x500	      6061	ops.c	FUNCTION_68	CALL_1
0x400c512	      0xe800000000	                          call 0x400c517	      6061	ops.c	FUNCTION_68	CALL_1
0x400c517	    0x488905000000	            mov qword [0x0400c51e], rax 	      6061	ops.c	FUNCTION_68	CALL_1
0x400c51e	              0x90	                                     nop	      6063	ops.c	FUNCTION_68
0x400c51f	              0x5d	                                 pop rbp	      6063	ops.c	FUNCTION_68
0x400c520	              0xc3	                                     ret	      6063	ops.c	FUNCTION_68
yank_register_mline	ELSE,0:DO,0:IF,2:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,2	29
0x40018fd	              0x55	                                push rbp	      1071	ops.c	FUNCTION_20
0x40018fe	          0x4889e5	                            mov rbp, rsp	      1071	ops.c	FUNCTION_20
0x4001901	        0x4883ec10	                           sub rsp, 0x10	      1071	ops.c	FUNCTION_20
0x4001905	          0x897dfc	                mov dword [rbp - 4], edi	      1071	ops.c	FUNCTION_20
0x4001908	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x400190c	            0x741a	                            je 0x4001928	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x400190e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x4001911	      0xbe00000000	                              mov esi, 0	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x4001916	            0x89c7	                            mov edi, eax	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x4001918	      0xe800000000	                          call 0x400191d	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x400191d	            0x85c0	                           test eax, eax	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x400191f	            0x7507	                           jne 0x4001928	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x4001921	      0xb800000000	                              mov eax, 0	      1073	ops.c	FUNCTION_20	IF_1
0x4001926	            0xeb2f	                           jmp 0x4001957	      1073	ops.c	FUNCTION_20	IF_1
0x4001928	        0x837dfc5f	               cmp dword [rbp - 4], 0x5f	      1074	ops.c	FUNCTION_20	IF_2
0x400192c	            0x7507	                           jne 0x4001935	      1074	ops.c	FUNCTION_20	IF_2
0x400192e	      0xb800000000	                              mov eax, 0	      1075	ops.c	FUNCTION_20	IF_2
0x4001933	            0xeb22	                           jmp 0x4001957	      1075	ops.c	FUNCTION_20	IF_2
0x4001935	          0x8b45fc	                mov eax, dword [rbp - 4]	      1076	ops.c	FUNCTION_20	CALL_2
0x4001938	      0xbe00000000	                              mov esi, 0	      1076	ops.c	FUNCTION_20	CALL_2
0x400193d	            0x89c7	                            mov edi, eax	      1076	ops.c	FUNCTION_20	CALL_2
0x400193f	      0xe800000000	                          call 0x4001944	      1076	ops.c	FUNCTION_20	CALL_2
0x4001944	    0x488b05000000	            mov rax, qword [0x0400194b] 	      1077	ops.c	FUNCTION_20
0x400194b	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      1077	ops.c	FUNCTION_20
0x400194f	            0x3c01	                               cmp al, 1	      1077	ops.c	FUNCTION_20
0x4001951	           0xf94c0	                                 sete al	      1077	ops.c	FUNCTION_20
0x4001954	           0xfb6c0	                           movzx eax, al	      1077	ops.c	FUNCTION_20
0x4001957	              0xc9	                                   leave	      1078	ops.c	FUNCTION_20
0x4001958	              0xc3	                                     ret	      1078	ops.c	FUNCTION_20
stuff_yank	ELSE,1:DO,0:IF,5:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,16	117
0x4001a48	              0x55	                                push rbp	      1148	ops.c	FUNCTION_22
0x4001a49	          0x4889e5	                            mov rbp, rsp	      1148	ops.c	FUNCTION_22
0x4001a4c	              0x53	                                push rbx	      1148	ops.c	FUNCTION_22
0x4001a4d	        0x4883ec28	                           sub rsp, 0x28	      1148	ops.c	FUNCTION_22
0x4001a51	          0x897ddc	             mov dword [rbp - 0x24], edi	      1148	ops.c	FUNCTION_22
0x4001a54	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1148	ops.c	FUNCTION_22
0x4001a58	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4001a5c	            0x7429	                            je 0x4001a87	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4001a5e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4001a61	      0xbe01000000	                              mov esi, 1	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4001a66	            0x89c7	                            mov edi, eax	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4001a68	      0xe800000000	                          call 0x4001a6d	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4001a6d	            0x85c0	                           test eax, eax	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4001a6f	            0x7516	                           jne 0x4001a87	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x4001a71	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1155	ops.c	FUNCTION_22	IF_1	CALL_2
0x4001a75	          0x4889c7	                            mov rdi, rax	      1155	ops.c	FUNCTION_22	IF_1	CALL_2
0x4001a78	      0xe800000000	                          call 0x4001a7d	      1155	ops.c	FUNCTION_22	IF_1	CALL_2
0x4001a7d	      0xb800000000	                              mov eax, 0	      1156	ops.c	FUNCTION_22	IF_1
0x4001a82	      0xe988010000	                           jmp 0x4001c0f	      1156	ops.c	FUNCTION_22	IF_1
0x4001a87	        0x837ddc5f	           cmp dword [rbp - 0x24], 0x5f 	      1158	ops.c	FUNCTION_22	IF_2
0x4001a8b	            0x7516	                           jne 0x4001aa3	      1158	ops.c	FUNCTION_22	IF_2
0x4001a8d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1160	ops.c	FUNCTION_22	IF_2	CALL_3
0x4001a91	          0x4889c7	                            mov rdi, rax	      1160	ops.c	FUNCTION_22	IF_2	CALL_3
0x4001a94	      0xe800000000	                          call 0x4001a99	      1160	ops.c	FUNCTION_22	IF_2	CALL_3
0x4001a99	      0xb801000000	                              mov eax, 1	      1161	ops.c	FUNCTION_22	IF_2
0x4001a9e	      0xe96c010000	                           jmp 0x4001c0f	      1161	ops.c	FUNCTION_22	IF_2
0x4001aa3	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1163	ops.c	FUNCTION_22	CALL_4
0x4001aa6	      0xbe01000000	                              mov esi, 1	      1163	ops.c	FUNCTION_22	CALL_4
0x4001aab	            0x89c7	                            mov edi, eax	      1163	ops.c	FUNCTION_22	CALL_4
0x4001aad	      0xe800000000	                          call 0x4001ab2	      1163	ops.c	FUNCTION_22	CALL_4
0x4001ab2	    0x8b0500000000	            mov eax, dword [0x04001ab8] 	      1164	ops.c	FUNCTION_22	IF_3
0x4001ab8	            0x85c0	                           test eax, eax	      1164	ops.c	FUNCTION_22	IF_3
0x4001aba	     0xf84db000000	                            je 0x4001b9b	      1164	ops.c	FUNCTION_22	IF_3
0x4001ac0	    0x488b05000000	            mov rax, qword [0x04001ac7] 	      1164	ops.c	FUNCTION_22	IF_3
0x4001ac7	          0x488b00	                    mov rax, qword [rax]	      1164	ops.c	FUNCTION_22	IF_3
0x4001aca	          0x4885c0	                           test rax, rax	      1164	ops.c	FUNCTION_22	IF_3
0x4001acd	     0xf84c8000000	                            je 0x4001b9b	      1164	ops.c	FUNCTION_22	IF_3
0x4001ad3	    0x488b05000000	            mov rax, qword [0x04001ada] 	      1166	ops.c	FUNCTION_22	IF_3
0x4001ada	          0x488b10	                    mov rdx, qword [rax]	      1166	ops.c	FUNCTION_22	IF_3
0x4001add	    0x488b05000000	            mov rax, qword [0x04001ae4] 	      1166	ops.c	FUNCTION_22	IF_3
0x4001ae4	        0x488b4008	                mov rax, qword [rax + 8]	      1166	ops.c	FUNCTION_22	IF_3
0x4001ae8	        0x48c1e003	                              shl rax, 3	      1166	ops.c	FUNCTION_22	IF_3
0x4001aec	        0x4883e808	                              sub rax, 8	      1166	ops.c	FUNCTION_22	IF_3
0x4001af0	          0x4801d0	                            add rax, rdx	      1166	ops.c	FUNCTION_22	IF_3
0x4001af3	        0x488945e0	             mov qword [rbp - 0x20], rax	      1166	ops.c	FUNCTION_22	IF_3
0x4001af7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001afb	          0x488b00	                    mov rax, qword [rax]	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001afe	          0x4889c7	                            mov rdi, rax	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b01	      0xe800000000	                          call 0x4001b06	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b06	          0x4889c3	                            mov rbx, rax	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b09	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b0d	          0x4889c7	                            mov rdi, rax	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b10	      0xe800000000	                          call 0x4001b15	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b15	          0x4801d8	                            add rax, rbx	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b18	        0x4883c001	                              add rax, 1	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b1c	      0xbe01000000	                              mov esi, 1	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b21	          0x4889c7	                            mov rdi, rax	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b24	      0xe800000000	                          call 0x4001b29	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b29	        0x488945e8	             mov qword [rbp - 0x18], rax	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4001b2d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1168	ops.c	FUNCTION_22	IF_3	IF_4
0x4001b32	            0x7516	                           jne 0x4001b4a	      1168	ops.c	FUNCTION_22	IF_3	IF_4
0x4001b34	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1170	ops.c	FUNCTION_22	IF_3	IF_4	CALL_8
0x4001b38	          0x4889c7	                            mov rdi, rax	      1170	ops.c	FUNCTION_22	IF_3	IF_4	CALL_8
0x4001b3b	      0xe800000000	                          call 0x4001b40	      1170	ops.c	FUNCTION_22	IF_3	IF_4	CALL_8
0x4001b40	      0xb800000000	                              mov eax, 0	      1171	ops.c	FUNCTION_22	IF_3	IF_4
0x4001b45	      0xe9c5000000	                           jmp 0x4001c0f	      1171	ops.c	FUNCTION_22	IF_3	IF_4
0x4001b4a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1173	ops.c	FUNCTION_22	IF_3	CALL_9
0x4001b4e	          0x488b10	                    mov rdx, qword [rax]	      1173	ops.c	FUNCTION_22	IF_3	CALL_9
0x4001b51	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1173	ops.c	FUNCTION_22	IF_3	CALL_9
0x4001b55	          0x4889d6	                            mov rsi, rdx	      1173	ops.c	FUNCTION_22	IF_3	CALL_9
0x4001b58	          0x4889c7	                            mov rdi, rax	      1173	ops.c	FUNCTION_22	IF_3	CALL_9
0x4001b5b	      0xe800000000	                          call 0x4001b60	      1173	ops.c	FUNCTION_22	IF_3	CALL_9
0x4001b60	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1174	ops.c	FUNCTION_22	IF_3	CALL_10
0x4001b64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1174	ops.c	FUNCTION_22	IF_3	CALL_10
0x4001b68	          0x4889d6	                            mov rsi, rdx	      1174	ops.c	FUNCTION_22	IF_3	CALL_10
0x4001b6b	          0x4889c7	                            mov rdi, rax	      1174	ops.c	FUNCTION_22	IF_3	CALL_10
0x4001b6e	      0xe800000000	                          call 0x4001b73	      1174	ops.c	FUNCTION_22	IF_3	CALL_10
0x4001b73	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1175	ops.c	FUNCTION_22	IF_3	CALL_11
0x4001b77	          0x4889c7	                            mov rdi, rax	      1175	ops.c	FUNCTION_22	IF_3	CALL_11
0x4001b7a	      0xe800000000	                          call 0x4001b7f	      1175	ops.c	FUNCTION_22	IF_3	CALL_11
0x4001b7f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1176	ops.c	FUNCTION_22	IF_3	CALL_12
0x4001b83	          0x488b00	                    mov rax, qword [rax]	      1176	ops.c	FUNCTION_22	IF_3	CALL_12
0x4001b86	          0x4889c7	                            mov rdi, rax	      1176	ops.c	FUNCTION_22	IF_3	CALL_12
0x4001b89	      0xe800000000	                          call 0x4001b8e	      1176	ops.c	FUNCTION_22	IF_3	CALL_12
0x4001b8e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1177	ops.c	FUNCTION_22	IF_3
0x4001b92	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1177	ops.c	FUNCTION_22	IF_3
0x4001b96	          0x488910	                    mov qword [rax], rdx	      1177	ops.c	FUNCTION_22	IF_3
0x4001b99	            0xeb6f	                           jmp 0x4001c0a	      1177	ops.c	FUNCTION_22	IF_3
0x4001b9b	      0xe81e400000	                  call sym.free_yank_all	      1181	ops.c	FUNCTION_22	ELSE_1	CALL_13
0x4001ba0	    0x488b1d000000	            mov rbx, qword [0x04001ba7] 	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4001ba7	      0xbf08000000	                              mov edi, 8	      1183	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_14
0x4001bac	      0xe800000000	                          call 0x4001bb1	      1183	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_14
0x4001bb1	          0x488903	                    mov qword [rbx], rax	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4001bb4	          0x488b03	                    mov rax, qword [rbx]	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4001bb7	          0x4885c0	                           test rax, rax	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4001bba	            0x7513	                           jne 0x4001bcf	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4001bbc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1185	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x4001bc0	          0x4889c7	                            mov rdi, rax	      1185	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x4001bc3	      0xe800000000	                          call 0x4001bc8	      1185	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x4001bc8	      0xb800000000	                              mov eax, 0	      1186	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4001bcd	            0xeb40	                           jmp 0x4001c0f	      1186	ops.c	FUNCTION_22	ELSE_1	IF_5
0x4001bcf	    0x488b05000000	            mov rax, qword [0x04001bd6] 	      1188	ops.c	FUNCTION_22	ELSE_1
0x4001bd6	          0x488b00	                    mov rax, qword [rax]	      1188	ops.c	FUNCTION_22	ELSE_1
0x4001bd9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1188	ops.c	FUNCTION_22	ELSE_1
0x4001bdd	          0x488910	                    mov qword [rax], rdx	      1188	ops.c	FUNCTION_22	ELSE_1
0x4001be0	    0x488b05000000	            mov rax, qword [0x04001be7] 	      1189	ops.c	FUNCTION_22	ELSE_1
0x4001be7	    0x48c740080100	                  mov qword [rax + 8], 1	      1189	ops.c	FUNCTION_22	ELSE_1
0x4001bef	    0x488b05000000	            mov rax, qword [0x04001bf6] 	      1190	ops.c	FUNCTION_22	ELSE_1
0x4001bf6	        0xc6401000	                mov byte [rax + 0x10], 0	      1190	ops.c	FUNCTION_22	ELSE_1
0x4001bfa	    0x488b1d000000	            mov rbx, qword [0x04001c01] 	      1192	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x4001c01	      0xe800000000	                          call 0x4001c06	      1192	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x4001c06	        0x48894318	             mov qword [rbx + 0x18], rax	      1192	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x4001c0a	      0xb801000000	                              mov eax, 1	      1195	ops.c	FUNCTION_22
0x4001c0f	        0x4883c428	                           add rsp, 0x28	      1196	ops.c	FUNCTION_22
0x4001c13	              0x5b	                                 pop rbx	      1196	ops.c	FUNCTION_22
0x4001c14	              0x5d	                                 pop rbp	      1196	ops.c	FUNCTION_22
0x4001c15	              0xc3	                                     ret	      1196	ops.c	FUNCTION_22
finish_write_reg	ELSE,0:DO,0:IF,1:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,1	16
0x400e067	              0x55	                                push rbp	      6966	ops.c	FUNCTION_84
0x400e068	          0x4889e5	                            mov rbp, rsp	      6966	ops.c	FUNCTION_84
0x400e06b	        0x4883ec20	                           sub rsp, 0x20	      6966	ops.c	FUNCTION_84
0x400e06f	          0x897dfc	                mov dword [rbp - 4], edi	      6966	ops.c	FUNCTION_84
0x400e072	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6966	ops.c	FUNCTION_84
0x400e076	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6966	ops.c	FUNCTION_84
0x400e07a	      0xe817faffff	              call sym.may_set_selection	      6969	ops.c	FUNCTION_84	CALL_1
0x400e07f	        0x837dfc22	               cmp dword [rbp - 4], 0x22	      6973	ops.c	FUNCTION_84	IF_1
0x400e083	            0x740b	                            je 0x400e090	      6973	ops.c	FUNCTION_84	IF_1
0x400e085	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6974	ops.c	FUNCTION_84	IF_1
0x400e089	    0x488905000000	            mov qword [0x0400e090], rax 	      6974	ops.c	FUNCTION_84	IF_1
0x400e090	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6975	ops.c	FUNCTION_84
0x400e094	    0x488905000000	            mov qword [0x0400e09b], rax 	      6975	ops.c	FUNCTION_84
0x400e09b	              0x90	                                     nop	      6976	ops.c	FUNCTION_84
0x400e09c	              0xc9	                                   leave	      6976	ops.c	FUNCTION_84
0x400e09d	              0xc3	                                     ret	      6976	ops.c	FUNCTION_84
init_yank	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,0	15
0x4005b0b	              0x55	                                push rbp	      2983	ops.c	FUNCTION_41
0x4005b0c	          0x4889e5	                            mov rbp, rsp	      2983	ops.c	FUNCTION_41
0x4005b0f	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2986	ops.c	FUNCTION_41	FOR_1
0x4005b16	            0xeb1a	                           jmp 0x4005b32	      2986	ops.c	FUNCTION_41	FOR_1
0x4005b18	          0x8b45fc	                mov eax, dword [rbp - 4]	      2987	ops.c	FUNCTION_41	FOR_1
0x4005b1b	            0x4898	                                    cdqe	      2987	ops.c	FUNCTION_41	FOR_1
0x4005b1d	        0x48c1e005	                              shl rax, 5	      2987	ops.c	FUNCTION_41	FOR_1
0x4005b21	    0x480500000000	                              add rax, 0	      2987	ops.c	FUNCTION_41	FOR_1
0x4005b27	    0x48c700000000	                      mov qword [rax], 0	      2987	ops.c	FUNCTION_41	FOR_1
0x4005b2e	        0x8345fc01	                  add dword [rbp - 4], 1	      2986	ops.c	FUNCTION_41	FOR_1
0x4005b32	        0x837dfc27	               cmp dword [rbp - 4], 0x27	      2986	ops.c	FUNCTION_41	FOR_1
0x4005b36	            0x7ee0	                           jle 0x4005b18	      2986	ops.c	FUNCTION_41	FOR_1
0x4005b38	              0x90	                                     nop	      2988	ops.c	FUNCTION_41
0x4005b39	              0x5d	                                 pop rbp	      2988	ops.c	FUNCTION_41
0x4005b3a	              0xc3	                                     ret	      2988	ops.c	FUNCTION_41
cmdline_paste_reg	ELSE,0:DO,0:IF,4:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,4	62
0x4002691	              0x55	                                push rbp	      1606	ops.c	FUNCTION_29
0x4002692	          0x4889e5	                            mov rbp, rsp	      1606	ops.c	FUNCTION_29
0x4002695	        0x4883ec20	                           sub rsp, 0x20	      1606	ops.c	FUNCTION_29
0x4002699	          0x897dec	             mov dword [rbp - 0x14], edi	      1606	ops.c	FUNCTION_29
0x400269c	          0x8975e8	             mov dword [rbp - 0x18], esi	      1606	ops.c	FUNCTION_29
0x400269f	          0x8955e4	             mov dword [rbp - 0x1c], edx	      1606	ops.c	FUNCTION_29
0x40026a2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1608	ops.c	FUNCTION_29
0x40026a5	          0x8945f4	              mov dword [rbp - 0xc], eax	      1608	ops.c	FUNCTION_29
0x40026a8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1610	ops.c	FUNCTION_29	IF_1	CALL_1
0x40026ab	      0xbe00000000	                              mov esi, 0	      1610	ops.c	FUNCTION_29	IF_1	CALL_1
0x40026b0	            0x89c7	                            mov edi, eax	      1610	ops.c	FUNCTION_29	IF_1	CALL_1
0x40026b2	      0xe800000000	                          call 0x40026b7	      1610	ops.c	FUNCTION_29	IF_1	CALL_1
0x40026b7	            0x85c0	                           test eax, eax	      1610	ops.c	FUNCTION_29	IF_1	CALL_1
0x40026b9	            0x7407	                            je 0x40026c2	      1610	ops.c	FUNCTION_29	IF_1	CALL_1
0x40026bb	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      1611	ops.c	FUNCTION_29	IF_1
0x40026c2	    0x488b05000000	            mov rax, qword [0x040026c9] 	      1612	ops.c	FUNCTION_29	IF_2
0x40026c9	          0x488b00	                    mov rax, qword [rax]	      1612	ops.c	FUNCTION_29	IF_2
0x40026cc	          0x4885c0	                           test rax, rax	      1612	ops.c	FUNCTION_29	IF_2
0x40026cf	            0x750a	                           jne 0x40026db	      1612	ops.c	FUNCTION_29	IF_2
0x40026d1	      0xb800000000	                              mov eax, 0	      1613	ops.c	FUNCTION_29	IF_2
0x40026d6	      0xe99d000000	                           jmp 0x4002778	      1613	ops.c	FUNCTION_29	IF_2
0x40026db	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1615	ops.c	FUNCTION_29	FOR_1
0x40026e3	            0xeb79	                           jmp 0x400275e	      1615	ops.c	FUNCTION_29	FOR_1
0x40026e5	    0x488b05000000	            mov rax, qword [0x040026ec] 	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x40026ec	          0x488b00	                    mov rax, qword [rax]	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x40026ef	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x40026f3	        0x48c1e203	                              shl rdx, 3	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x40026f7	          0x4801d0	                            add rax, rdx	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x40026fa	          0x488b00	                    mov rax, qword [rax]	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x40026fd	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4002700	            0x89d6	                            mov esi, edx	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4002702	          0x4889c7	                            mov rdi, rax	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4002705	      0xe800000000	                          call 0x400270a	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x400270a	    0x488b05000000	            mov rax, qword [0x04002711] 	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002711	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002715	            0x3c01	                               cmp al, 1	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002717	            0x7415	                            je 0x400272e	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002719	    0x488b05000000	            mov rax, qword [0x04002720] 	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002720	        0x488b4008	                mov rax, qword [rax + 8]	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002724	        0x4883e801	                              sub rax, 1	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002728	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x400272c	            0x7e15	                           jle 0x4002743	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x400272e	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002732	            0x750f	                           jne 0x4002743	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4002734	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x4002737	            0x89c6	                            mov esi, eax	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x4002739	      0xbf00000000	                              mov edi, 0	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x400273e	      0xe800000000	                          call 0x4002743	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x4002743	      0xe800000000	                          call 0x4002748	      1626	ops.c	FUNCTION_29	FOR_1	CALL_4
0x4002748	    0x8b0500000000	            mov eax, dword [0x0400274e] 	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x400274e	            0x85c0	                           test eax, eax	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002750	            0x7407	                            je 0x4002759	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002752	      0xb800000000	                              mov eax, 0	      1628	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002757	            0xeb1f	                           jmp 0x4002778	      1628	ops.c	FUNCTION_29	FOR_1	IF_4
0x4002759	      0x488345f801	                  add qword [rbp - 8], 1	      1615	ops.c	FUNCTION_29	FOR_1
0x400275e	    0x488b05000000	            mov rax, qword [0x04002765] 	      1615	ops.c	FUNCTION_29	FOR_1
0x4002765	        0x488b4008	                mov rax, qword [rax + 8]	      1615	ops.c	FUNCTION_29	FOR_1
0x4002769	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1615	ops.c	FUNCTION_29	FOR_1
0x400276d	     0xf8f72ffffff	                            jg 0x40026e5	      1615	ops.c	FUNCTION_29	FOR_1
0x4002773	      0xb801000000	                              mov eax, 1	      1630	ops.c	FUNCTION_29
0x4002778	              0xc9	                                   leave	      1631	ops.c	FUNCTION_29
0x4002779	              0xc3	                                     ret	      1631	ops.c	FUNCTION_29
put_register	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,4	27
0x4001808	              0x55	                                push rbp	      1041	ops.c	FUNCTION_18
0x4001809	          0x4889e5	                            mov rbp, rsp	      1041	ops.c	FUNCTION_18
0x400180c	        0x4883ec10	                           sub rsp, 0x10	      1041	ops.c	FUNCTION_18
0x4001810	          0x897dfc	                mov dword [rbp - 4], edi	      1041	ops.c	FUNCTION_18
0x4001813	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1041	ops.c	FUNCTION_18
0x4001817	          0x8b45fc	                mov eax, dword [rbp - 4]	      1042	ops.c	FUNCTION_18	CALL_1
0x400181a	      0xbe00000000	                              mov esi, 0	      1042	ops.c	FUNCTION_18	CALL_1
0x400181f	            0x89c7	                            mov edi, eax	      1042	ops.c	FUNCTION_18	CALL_1
0x4001821	      0xe800000000	                          call 0x4001826	      1042	ops.c	FUNCTION_18	CALL_1
0x4001826	      0xe893430000	                  call sym.free_yank_all	      1043	ops.c	FUNCTION_18	CALL_2
0x400182b	    0x488b05000000	            mov rax, qword [0x04001832] 	      1044	ops.c	FUNCTION_18
0x4001832	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1044	ops.c	FUNCTION_18
0x4001836	          0x488b0a	                    mov rcx, qword [rdx]	      1044	ops.c	FUNCTION_18
0x4001839	          0x488908	                    mov qword [rax], rcx	      1044	ops.c	FUNCTION_18
0x400183c	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1044	ops.c	FUNCTION_18
0x4001840	        0x48894808	                mov qword [rax + 8], rcx	      1044	ops.c	FUNCTION_18
0x4001844	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1044	ops.c	FUNCTION_18
0x4001848	        0x48894810	             mov qword [rax + 0x10], rcx	      1044	ops.c	FUNCTION_18
0x400184c	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1044	ops.c	FUNCTION_18
0x4001850	        0x48895018	             mov qword [rax + 0x18], rdx	      1044	ops.c	FUNCTION_18
0x4001854	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1045	ops.c	FUNCTION_18	CALL_3
0x4001858	          0x4889c7	                            mov rdi, rax	      1045	ops.c	FUNCTION_18	CALL_3
0x400185b	      0xe800000000	                          call 0x4001860	      1045	ops.c	FUNCTION_18	CALL_3
0x4001860	      0xe831c20000	              call sym.may_set_selection	      1049	ops.c	FUNCTION_18	CALL_4
0x4001865	              0x90	                                     nop	      1051	ops.c	FUNCTION_18
0x4001866	              0xc9	                                   leave	      1051	ops.c	FUNCTION_18
0x4001867	              0xc3	                                     ret	      1051	ops.c	FUNCTION_18
op_shift	ELSE,8:DO,0:IF,13:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,19	208
0x4000165	              0x55	                                push rbp	       231	ops.c	FUNCTION_5
0x4000166	          0x4889e5	                            mov rbp, rsp	       231	ops.c	FUNCTION_5
0x4000169	              0x53	                                push rbx	       231	ops.c	FUNCTION_5
0x400016a	        0x4883ec38	                           sub rsp, 0x38	       231	ops.c	FUNCTION_5
0x400016e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       231	ops.c	FUNCTION_5
0x4000172	          0x8975c4	             mov dword [rbp - 0x3c], esi	       231	ops.c	FUNCTION_5
0x4000175	          0x8955c0	             mov dword [rbp - 0x40], edx	       231	ops.c	FUNCTION_5
0x4000178	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       235	ops.c	FUNCTION_5
0x400017f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       238	ops.c	FUNCTION_5	IF_1
0x4000183	        0x488b4030	            mov rax, qword [rax + 0x30] 	       238	ops.c	FUNCTION_5	IF_1
0x4000187	        0x488d5001	                      lea rdx, [rax + 1]	       238	ops.c	FUNCTION_5	IF_1
0x400018b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x400018f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x4000193	        0x4883e801	                              sub rax, 1	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x4000197	          0x4889d6	                            mov rsi, rdx	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x400019a	          0x4889c7	                            mov rdi, rax	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x400019d	      0xe800000000	                          call 0x40001a2	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40001a2	            0x85c0	                           test eax, eax	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40001a4	     0xf84f9020000	                            je 0x40004a3	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40001aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       241	ops.c	FUNCTION_5	IF_2
0x40001ae	          0x8b4060	            mov eax, dword [rax + 0x60] 	       241	ops.c	FUNCTION_5	IF_2
0x40001b1	            0x85c0	                           test eax, eax	       241	ops.c	FUNCTION_5	IF_2
0x40001b3	            0x740d	                            je 0x40001c2	       241	ops.c	FUNCTION_5	IF_2
0x40001b5	    0x488b05000000	            mov rax, qword [0x040001bc] 	       242	ops.c	FUNCTION_5	IF_2
0x40001bc	          0x8b4040	            mov eax, dword [rax + 0x40] 	       242	ops.c	FUNCTION_5	IF_2
0x40001bf	          0x8945d8	             mov dword [rbp - 0x28], eax	       242	ops.c	FUNCTION_5	IF_2
0x40001c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       244	ops.c	FUNCTION_5	FOR_1
0x40001c6	        0x488b4050	            mov rax, qword [rax + 0x50] 	       244	ops.c	FUNCTION_5	FOR_1
0x40001ca	        0x488945e0	             mov qword [rbp - 0x20], rax	       244	ops.c	FUNCTION_5	FOR_1
0x40001ce	      0xe988000000	                           jmp 0x400025b	       244	ops.c	FUNCTION_5	FOR_1
0x40001d3	      0xe800000000	                          call 0x40001d8	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x40001d8	           0xfb600	                   movzx eax, byte [rax]	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x40001db	           0xfb6c0	                           movzx eax, al	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x40001de	          0x8945dc	             mov dword [rbp - 0x24], eax	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x40001e1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       247	ops.c	FUNCTION_5	FOR_1	IF_3
0x40001e5	            0x7510	                           jne 0x40001f7	       247	ops.c	FUNCTION_5	FOR_1	IF_3
0x40001e7	    0x488b05000000	            mov rax, qword [0x040001ee] 	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x40001ee	    0xc74040000000	               mov dword [rax + 0x40], 0	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x40001f5	            0xeb51	                           jmp 0x4000248	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x40001f7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x40001fb	          0x8b4060	            mov eax, dword [rax + 0x60] 	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x40001fe	            0x85c0	                           test eax, eax	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4000200	            0x7413	                            je 0x4000215	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4000202	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4000205	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4000209	            0x89d6	                            mov esi, edx	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x400020b	          0x4889c7	                            mov rdi, rax	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x400020e	      0xe88f030000	                    call sym.shift_block	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4000213	            0xeb33	                           jmp 0x4000248	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4000215	        0x837ddc23	           cmp dword [rbp - 0x24], 0x23 	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4000219	            0x7509	                           jne 0x4000224	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x400021b	      0xe800000000	                          call 0x4000220	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4000220	            0x85c0	                           test eax, eax	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4000222	            0x7524	                           jne 0x4000248	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4000224	    0x8b3500000000	            mov esi, dword [0x0400022a] 	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x400022a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x400022e	            0x8b00	                    mov eax, dword [rax]	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4000230	          0x83f804	                              cmp eax, 4	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4000233	           0xf94c0	                                 sete al	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4000236	           0xfb6c0	                           movzx eax, al	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4000239	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x400023c	      0xb900000000	                              mov ecx, 0	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4000241	            0x89c7	                            mov edi, eax	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4000243	      0xe800000000	                          call 0x4000248	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4000248	    0x488b05000000	            mov rax, qword [0x0400024f] 	       262	ops.c	FUNCTION_5	FOR_1
0x400024f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       262	ops.c	FUNCTION_5	FOR_1
0x4000253	        0x4883c201	                              add rdx, 1	       262	ops.c	FUNCTION_5	FOR_1
0x4000257	        0x48895038	             mov qword [rax + 0x38], rdx	       262	ops.c	FUNCTION_5	FOR_1
0x400025b	      0x48836de001	               sub qword [rbp - 0x20], 1	       244	ops.c	FUNCTION_5	FOR_1
0x4000260	      0x48837de000	               cmp qword [rbp - 0x20], 0	       244	ops.c	FUNCTION_5	FOR_1
0x4000265	     0xf8968ffffff	                           jns 0x40001d3	       244	ops.c	FUNCTION_5	FOR_1
0x400026b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       265	ops.c	FUNCTION_5	CALL_6
0x400026f	        0x488b4030	            mov rax, qword [rax + 0x30] 	       265	ops.c	FUNCTION_5	CALL_6
0x4000273	        0x488d5001	                      lea rdx, [rax + 1]	       265	ops.c	FUNCTION_5	CALL_6
0x4000277	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       265	ops.c	FUNCTION_5	CALL_6
0x400027b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       265	ops.c	FUNCTION_5	CALL_6
0x400027f	      0xb900000000	                              mov ecx, 0	       265	ops.c	FUNCTION_5	CALL_6
0x4000284	      0xbe00000000	                              mov esi, 0	       265	ops.c	FUNCTION_5	CALL_6
0x4000289	          0x4889c7	                            mov rdi, rax	       265	ops.c	FUNCTION_5	CALL_6
0x400028c	      0xe800000000	                          call 0x4000291	       265	ops.c	FUNCTION_5	CALL_6
0x4000291	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       266	ops.c	FUNCTION_5	IF_6
0x4000295	          0x8b4060	            mov eax, dword [rax + 0x60] 	       266	ops.c	FUNCTION_5	IF_6
0x4000298	            0x85c0	                           test eax, eax	       266	ops.c	FUNCTION_5	IF_6
0x400029a	            0x7422	                            je 0x40002be	       266	ops.c	FUNCTION_5	IF_6
0x400029c	    0x488b05000000	            mov rax, qword [0x040002a3] 	       268	ops.c	FUNCTION_5	IF_6
0x40002a3	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       268	ops.c	FUNCTION_5	IF_6
0x40002a7	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       268	ops.c	FUNCTION_5	IF_6
0x40002ab	        0x48895038	             mov qword [rax + 0x38], rdx	       268	ops.c	FUNCTION_5	IF_6
0x40002af	    0x488b05000000	            mov rax, qword [0x040002b6] 	       269	ops.c	FUNCTION_5	IF_6
0x40002b6	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       269	ops.c	FUNCTION_5	IF_6
0x40002b9	          0x895040	             mov dword [rax + 0x40], edx	       269	ops.c	FUNCTION_5	IF_6
0x40002bc	            0xeb38	                           jmp 0x40002f6	       269	ops.c	FUNCTION_5	IF_6
0x40002be	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40002c2	            0x741f	                            je 0x40002e3	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40002c4	    0x488b05000000	            mov rax, qword [0x040002cb] 	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40002cb	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40002cf	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40002d3	        0x48895038	             mov qword [rax + 0x38], rdx	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40002d7	      0xbf06000000	                              mov edi, 6	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x40002dc	      0xe800000000	                          call 0x40002e1	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x40002e1	            0xeb13	                           jmp 0x40002f6	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x40002e3	    0x488b05000000	            mov rax, qword [0x040002ea] 	       277	ops.c	FUNCTION_5	ELSE_4
0x40002ea	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       277	ops.c	FUNCTION_5	ELSE_4
0x40002ee	        0x4883ea01	                              sub rdx, 1	       277	ops.c	FUNCTION_5	ELSE_4
0x40002f2	        0x48895038	             mov qword [rax + 0x38], rdx	       277	ops.c	FUNCTION_5	ELSE_4
0x40002f6	      0xe800000000	                          call 0x40002fb	       281	ops.c	FUNCTION_5	CALL_8
0x40002fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       285	ops.c	FUNCTION_5	IF_8
0x40002ff	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       285	ops.c	FUNCTION_5	IF_8
0x4000303	    0x488b05000000	            mov rax, qword [0x0400030a] 	       285	ops.c	FUNCTION_5	IF_8
0x400030a	          0x4839c2	                            cmp rdx, rax	       285	ops.c	FUNCTION_5	IF_8
0x400030d	     0xf8e0b010000	                           jle 0x400041e	       285	ops.c	FUNCTION_5	IF_8
0x4000313	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       287	ops.c	FUNCTION_5	IF_8	IF_9
0x4000317	            0x8b00	                    mov eax, dword [rax]	       287	ops.c	FUNCTION_5	IF_8	IF_9
0x4000319	          0x83f805	                              cmp eax, 5	       287	ops.c	FUNCTION_5	IF_8	IF_9
0x400031c	            0x750a	                           jne 0x4000328	       287	ops.c	FUNCTION_5	IF_8	IF_9
0x400031e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x4000326	            0xeb08	                           jmp 0x4000330	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x4000328	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       290	ops.c	FUNCTION_5	IF_8	ELSE_5
0x4000330	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x4000334	        0x488b4050	            mov rax, qword [rax + 0x50] 	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x4000338	        0x4883f801	                              cmp rax, 1	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x400033c	            0x755d	                           jne 0x400039b	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x400033e	        0x837dc001	               cmp dword [rbp - 0x40], 1	       293	ops.c	FUNCTION_5	IF_8	IF_10	IF_11
0x4000342	            0x752d	                           jne 0x4000371	       293	ops.c	FUNCTION_5	IF_8	IF_10	IF_11
0x4000344	      0xbf00000000	                              mov edi, 0	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x4000349	      0xe800000000	                          call 0x400034e	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x400034e	          0x4889c1	                            mov rcx, rax	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x4000351	    0x488b05000000	            mov rax, qword [0x04000358] 	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x4000358	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x400035c	          0x4889ce	                            mov rsi, rcx	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x400035f	          0x4889c7	                            mov rdi, rax	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x4000362	      0xb800000000	                              mov eax, 0	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x4000367	      0xe800000000	                          call 0x400036c	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x400036c	      0xe99e000000	                           jmp 0x400040f	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x4000371	      0xbf00000000	                              mov edi, 0	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x4000376	      0xe800000000	                          call 0x400037b	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x400037b	          0x4889c6	                            mov rsi, rax	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x400037e	    0x488b05000000	            mov rax, qword [0x04000385] 	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x4000385	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x4000388	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x400038c	          0x4889c7	                            mov rdi, rax	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x400038f	      0xb800000000	                              mov eax, 0	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x4000394	      0xe800000000	                          call 0x4000399	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x4000399	            0xeb74	                           jmp 0x400040f	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x400039b	        0x837dc001	               cmp dword [rbp - 0x40], 1	       300	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12
0x400039f	            0x7535	                           jne 0x40003d6	       300	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12
0x40003a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003a5	        0x488b5850	            mov rbx, qword [rax + 0x50] 	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003a9	      0xbf00000000	                              mov edi, 0	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003ae	      0xe800000000	                          call 0x40003b3	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003b3	          0x4889c6	                            mov rsi, rax	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003b6	    0x488b05000000	            mov rax, qword [0x040003bd] 	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003bd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003c1	          0x4889d1	                            mov rcx, rdx	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003c4	          0x4889da	                            mov rdx, rbx	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003c7	          0x4889c7	                            mov rdi, rax	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003ca	      0xb800000000	                              mov eax, 0	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003cf	      0xe800000000	                          call 0x40003d4	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003d4	            0xeb39	                           jmp 0x400040f	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x40003d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40003da	        0x488b5850	            mov rbx, qword [rax + 0x50] 	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40003de	      0xbf00000000	                              mov edi, 0	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40003e3	      0xe800000000	                          call 0x40003e8	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40003e8	          0x4889c6	                            mov rsi, rax	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40003eb	    0x488b05000000	            mov rax, qword [0x040003f2] 	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40003f2	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40003f5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40003f9	          0x4189c8	                            mov r8d, ecx	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40003fc	          0x4889d1	                            mov rcx, rdx	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x40003ff	          0x4889da	                            mov rdx, rbx	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x4000402	          0x4889c7	                            mov rdi, rax	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x4000405	      0xb800000000	                              mov eax, 0	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x400040a	      0xe800000000	                          call 0x400040f	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x400040f	    0x488b05000000	            mov rax, qword [0x04000416] 	       307	ops.c	FUNCTION_5	IF_8	CALL_17
0x4000416	          0x4889c7	                            mov rdi, rax	       307	ops.c	FUNCTION_5	IF_8	CALL_17
0x4000419	      0xe800000000	                          call 0x400041e	       307	ops.c	FUNCTION_5	IF_8	CALL_17
0x400041e	    0x488b0d000000	            mov rcx, qword [0x04000425] 	       313	ops.c	FUNCTION_5
0x4000425	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       313	ops.c	FUNCTION_5
0x4000429	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       313	ops.c	FUNCTION_5
0x400042d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       313	ops.c	FUNCTION_5
0x4000431	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	       313	ops.c	FUNCTION_5
0x4000438	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	       313	ops.c	FUNCTION_5
0x400043f	    0x488b05000000	            mov rax, qword [0x04000446] 	       314	ops.c	FUNCTION_5
0x4000446	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       314	ops.c	FUNCTION_5
0x400044a	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       314	ops.c	FUNCTION_5
0x400044e	    0x488990001200	          mov qword [rax + 0x1200], rdx 	       314	ops.c	FUNCTION_5
0x4000455	    0x488b1d000000	            mov rbx, qword [0x0400045c] 	       315	ops.c	FUNCTION_5	CALL_19
0x400045c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       315	ops.c	FUNCTION_5	CALL_19
0x4000460	        0x488b4030	            mov rax, qword [rax + 0x30] 	       315	ops.c	FUNCTION_5	CALL_19
0x4000464	          0x4889c7	                            mov rdi, rax	       315	ops.c	FUNCTION_5	CALL_19
0x4000467	      0xe800000000	                          call 0x400046c	       315	ops.c	FUNCTION_5	CALL_19
0x400046c	          0x4889c7	                            mov rdi, rax	       315	ops.c	FUNCTION_5	CALL_19
0x400046f	      0xe800000000	                          call 0x4000474	       315	ops.c	FUNCTION_5	CALL_19
0x4000474	    0x898308120000	          mov dword [rbx + 0x1208], eax 	       315	ops.c	FUNCTION_5	CALL_19
0x400047a	    0x488b05000000	            mov rax, qword [0x04000481] 	       316	ops.c	FUNCTION_5	IF_13
0x4000481	    0x8b8008120000	          mov eax, dword [rax + 0x1208] 	       316	ops.c	FUNCTION_5	IF_13
0x4000487	            0x85c0	                           test eax, eax	       316	ops.c	FUNCTION_5	IF_13
0x4000489	            0x7e19	                           jle 0x40004a4	       316	ops.c	FUNCTION_5	IF_13
0x400048b	    0x488b05000000	            mov rax, qword [0x04000492] 	       317	ops.c	FUNCTION_5	IF_13
0x4000492	    0x8b9008120000	          mov edx, dword [rax + 0x1208] 	       317	ops.c	FUNCTION_5	IF_13
0x4000498	          0x83ea01	                              sub edx, 1	       317	ops.c	FUNCTION_5	IF_13
0x400049b	    0x899008120000	          mov dword [rax + 0x1208], edx 	       317	ops.c	FUNCTION_5	IF_13
0x40004a1	            0xeb01	                           jmp 0x40004a4	       317	ops.c	FUNCTION_5	IF_13
0x40004a3	              0x90	                                     nop	       239	ops.c	FUNCTION_5	IF_1
0x40004a4	        0x4883c438	                           add rsp, 0x38	       318	ops.c	FUNCTION_5
0x40004a8	              0x5b	                                 pop rbx	       318	ops.c	FUNCTION_5
0x40004a9	              0x5d	                                 pop rbp	       318	ops.c	FUNCTION_5
0x40004aa	              0xc3	                                     ret	       318	ops.c	FUNCTION_5
op_format	ELSE,0:DO,0:IF,6:functions,1:WHILE,0:FOR,0:SWITCH,0:CALL,5	132
0x4009bbd	              0x55	                                push rbp	      4828	ops.c	FUNCTION_57
0x4009bbe	          0x4889e5	                            mov rbp, rsp	      4828	ops.c	FUNCTION_57
0x4009bc1	        0x4883ec20	                           sub rsp, 0x20	      4828	ops.c	FUNCTION_57
0x4009bc5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4828	ops.c	FUNCTION_57
0x4009bc9	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4828	ops.c	FUNCTION_57
0x4009bcc	    0x488b05000000	            mov rax, qword [0x04009bd3] 	      4829	ops.c	FUNCTION_57
0x4009bd3	          0x488b00	                    mov rax, qword [rax]	      4829	ops.c	FUNCTION_57
0x4009bd6	        0x488945f8	                mov qword [rbp - 8], rax	      4829	ops.c	FUNCTION_57
0x4009bda	    0x488b0d000000	            mov rcx, qword [0x04009be1] 	      4833	ops.c	FUNCTION_57
0x4009be1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4833	ops.c	FUNCTION_57
0x4009be5	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      4833	ops.c	FUNCTION_57
0x4009be9	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4833	ops.c	FUNCTION_57
0x4009bed	        0x48894138	             mov qword [rcx + 0x38], rax	      4833	ops.c	FUNCTION_57
0x4009bf1	        0x48895140	             mov qword [rcx + 0x40], rdx	      4833	ops.c	FUNCTION_57
0x4009bf5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4836	ops.c	FUNCTION_57	IF_1
0x4009bf9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4836	ops.c	FUNCTION_57	IF_1
0x4009bfd	        0x488d5001	                      lea rdx, [rax + 1]	      4836	ops.c	FUNCTION_57	IF_1
0x4009c01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4009c05	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4009c09	        0x4883e801	                              sub rax, 1	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4009c0d	          0x4889d6	                            mov rsi, rdx	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4009c10	          0x4889c7	                            mov rdi, rax	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4009c13	      0xe800000000	                          call 0x4009c18	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4009c18	            0x85c0	                           test eax, eax	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4009c1a	     0xf84b7010000	                            je 0x4009dd7	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4009c20	    0x488b0d000000	            mov rcx, qword [0x04009c27] 	      4838	ops.c	FUNCTION_57
0x4009c27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4838	ops.c	FUNCTION_57
0x4009c2b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4838	ops.c	FUNCTION_57
0x4009c2f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4838	ops.c	FUNCTION_57
0x4009c33	        0x48894138	             mov qword [rcx + 0x38], rax	      4838	ops.c	FUNCTION_57
0x4009c37	        0x48895140	             mov qword [rcx + 0x40], rdx	      4838	ops.c	FUNCTION_57
0x4009c3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4840	ops.c	FUNCTION_57	IF_2
0x4009c3f	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      4840	ops.c	FUNCTION_57	IF_2
0x4009c42	            0x85c0	                           test eax, eax	      4840	ops.c	FUNCTION_57	IF_2
0x4009c44	            0x740a	                            je 0x4009c50	      4840	ops.c	FUNCTION_57	IF_2
0x4009c46	      0xbf14000000	                           mov edi, 0x14	      4842	ops.c	FUNCTION_57	CALL_2
0x4009c4b	      0xe800000000	                          call 0x4009c50	      4842	ops.c	FUNCTION_57	CALL_2
0x4009c50	    0x488b0d000000	            mov rcx, qword [0x04009c57] 	      4845	ops.c	FUNCTION_57
0x4009c57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4845	ops.c	FUNCTION_57
0x4009c5b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4845	ops.c	FUNCTION_57
0x4009c5f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4845	ops.c	FUNCTION_57
0x4009c63	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      4845	ops.c	FUNCTION_57
0x4009c6a	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      4845	ops.c	FUNCTION_57
0x4009c71	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4849	ops.c	FUNCTION_57	IF_3
0x4009c75	            0x741a	                            je 0x4009c91	      4849	ops.c	FUNCTION_57	IF_3
0x4009c77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4850	ops.c	FUNCTION_57	IF_3
0x4009c7b	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      4850	ops.c	FUNCTION_57	IF_3
0x4009c7f	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4850	ops.c	FUNCTION_57	IF_3
0x4009c83	    0x488905000000	            mov qword [0x04009c8a], rax 	      4850	ops.c	FUNCTION_57	IF_3
0x4009c8a	    0x488915000000	            mov qword [0x04009c91], rdx 	      4850	ops.c	FUNCTION_57	IF_3
0x4009c91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4852	ops.c	FUNCTION_57	CALL_3
0x4009c95	        0x488b4050	            mov rax, qword [rax + 0x50] 	      4852	ops.c	FUNCTION_57	CALL_3
0x4009c99	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4852	ops.c	FUNCTION_57	CALL_3
0x4009c9c	            0x89d6	                            mov esi, edx	      4852	ops.c	FUNCTION_57	CALL_3
0x4009c9e	          0x4889c7	                            mov rdi, rax	      4852	ops.c	FUNCTION_57	CALL_3
0x4009ca1	      0xe800000000	                          call 0x4009ca6	      4852	ops.c	FUNCTION_57	CALL_3
0x4009ca6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4859	ops.c	FUNCTION_57	IF_4
0x4009caa	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4859	ops.c	FUNCTION_57	IF_4
0x4009cad	            0x85c0	                           test eax, eax	      4859	ops.c	FUNCTION_57	IF_4
0x4009caf	            0x742d	                            je 0x4009cde	      4859	ops.c	FUNCTION_57	IF_4
0x4009cb1	    0x488b05000000	            mov rax, qword [0x04009cb8] 	      4859	ops.c	FUNCTION_57	IF_4
0x4009cb8	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4859	ops.c	FUNCTION_57	IF_4
0x4009cbc	    0x488b05000000	            mov rax, qword [0x04009cc3] 	      4859	ops.c	FUNCTION_57	IF_4
0x4009cc3	          0x488b00	                    mov rax, qword [rax]	      4859	ops.c	FUNCTION_57	IF_4
0x4009cc6	          0x4839c2	                            cmp rdx, rax	      4859	ops.c	FUNCTION_57	IF_4
0x4009cc9	            0x7d13	                           jge 0x4009cde	      4859	ops.c	FUNCTION_57	IF_4
0x4009ccb	    0x488b05000000	            mov rax, qword [0x04009cd2] 	      4860	ops.c	FUNCTION_57	IF_4
0x4009cd2	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4860	ops.c	FUNCTION_57	IF_4
0x4009cd6	        0x4883c201	                              add rdx, 1	      4860	ops.c	FUNCTION_57	IF_4
0x4009cda	        0x48895038	             mov qword [rax + 0x38], rdx	      4860	ops.c	FUNCTION_57	IF_4
0x4009cde	      0xbf05000000	                              mov edi, 5	      4861	ops.c	FUNCTION_57	CALL_4
0x4009ce3	      0xe800000000	                          call 0x4009ce8	      4861	ops.c	FUNCTION_57	CALL_4
0x4009ce8	    0x488b05000000	            mov rax, qword [0x04009cef] 	      4862	ops.c	FUNCTION_57
0x4009cef	          0x488b00	                    mov rax, qword [rax]	      4862	ops.c	FUNCTION_57
0x4009cf2	        0x482b45f8	                sub rax, qword [rbp - 8]	      4862	ops.c	FUNCTION_57
0x4009cf6	        0x488945f8	                mov qword [rbp - 8], rax	      4862	ops.c	FUNCTION_57
0x4009cfa	        0x488b45f8	                mov rax, qword [rbp - 8]	      4863	ops.c	FUNCTION_57	CALL_5
0x4009cfe	          0x4889c7	                            mov rdi, rax	      4863	ops.c	FUNCTION_57	CALL_5
0x4009d01	      0xe800000000	                          call 0x4009d06	      4863	ops.c	FUNCTION_57	CALL_5
0x4009d06	    0x488b0d000000	            mov rcx, qword [0x04009d0d] 	      4866	ops.c	FUNCTION_57
0x4009d0d	    0x488b05000000	            mov rax, qword [0x04009d14] 	      4866	ops.c	FUNCTION_57
0x4009d14	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      4866	ops.c	FUNCTION_57
0x4009d18	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4866	ops.c	FUNCTION_57
0x4009d1c	    0x488981001200	          mov qword [rcx + 0x1200], rax 	      4866	ops.c	FUNCTION_57
0x4009d23	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	      4866	ops.c	FUNCTION_57
0x4009d2a	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4868	ops.c	FUNCTION_57	IF_5
0x4009d2e	            0x7428	                            je 0x4009d58	      4868	ops.c	FUNCTION_57	IF_5
0x4009d30	    0x488b0d000000	            mov rcx, qword [0x04009d37] 	      4870	ops.c	FUNCTION_57	IF_5
0x4009d37	    0x488b05000000	            mov rax, qword [0x04009d3e] 	      4870	ops.c	FUNCTION_57	IF_5
0x4009d3e	    0x488b15000000	            mov rdx, qword [0x04009d45] 	      4870	ops.c	FUNCTION_57	IF_5
0x4009d45	        0x48894138	             mov qword [rcx + 0x38], rax	      4870	ops.c	FUNCTION_57	IF_5
0x4009d49	        0x48895140	             mov qword [rcx + 0x40], rdx	      4870	ops.c	FUNCTION_57	IF_5
0x4009d4d	    0x48c705000000	               mov qword [0x04009d58], 0	      4871	ops.c	FUNCTION_57	IF_5
0x4009d58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4874	ops.c	FUNCTION_57	IF_6
0x4009d5c	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      4874	ops.c	FUNCTION_57	IF_6
0x4009d5f	            0x85c0	                           test eax, eax	      4874	ops.c	FUNCTION_57	IF_6
0x4009d61	            0x7475	                            je 0x4009dd8	      4874	ops.c	FUNCTION_57	IF_6
0x4009d63	    0x488b05000000	            mov rax, qword [0x04009d6a] 	      4878	ops.c	FUNCTION_57	IF_6
0x4009d6a	        0x488945f0	             mov qword [rbp - 0x10], rax	      4878	ops.c	FUNCTION_57	IF_6
0x4009d6e	            0xeb5e	                           jmp 0x4009dce	      4878	ops.c	FUNCTION_57	IF_6
0x4009d70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4009d74	        0x488b4058	            mov rax, qword [rax + 0x58] 	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4009d78	          0x4885c0	                           test rax, rax	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4009d7b	            0x7445	                            je 0x4009dc2	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4009d7d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009d81	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009d85	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009d89	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009d8d	          0x4839c2	                            cmp rdx, rax	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009d90	            0x7e19	                           jle 0x4009dab	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009d92	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009d96	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009d9a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009d9e	          0x4801c2	                            add rdx, rax	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009da1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009da5	        0x48895058	             mov qword [rax + 0x58], rdx	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009da9	            0xeb17	                           jmp 0x4009dc2	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4009dab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x4009daf	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x4009db3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x4009db7	          0x4801c2	                            add rdx, rax	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x4009dba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x4009dbe	        0x48895068	             mov qword [rax + 0x68], rdx	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x4009dc2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4878	ops.c	FUNCTION_57	IF_6
0x4009dc6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4878	ops.c	FUNCTION_57	IF_6
0x4009dca	        0x488945f0	             mov qword [rbp - 0x10], rax	      4878	ops.c	FUNCTION_57	IF_6
0x4009dce	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4878	ops.c	FUNCTION_57	IF_6
0x4009dd3	            0x759b	                           jne 0x4009d70	      4878	ops.c	FUNCTION_57	IF_6
0x4009dd5	            0xeb01	                           jmp 0x4009dd8	      4878	ops.c	FUNCTION_57	IF_6
0x4009dd7	              0x90	                                     nop	      4837	ops.c	FUNCTION_57	IF_1
0x4009dd8	              0xc9	                                   leave	      4891	ops.c	FUNCTION_57	ELSE_1
0x4009dd9	              0xc3	                                     ret	      4891	ops.c	FUNCTION_57	ELSE_1
op_insert	ELSE,3:DO,0:IF,25:functions,0:WHILE,1:FOR,1:SWITCH,0:CALL,28	457
0x4004dc0	              0x55	                                push rbp	      2611	ops.c	FUNCTION_39
0x4004dc1	          0x4889e5	                            mov rbp, rsp	      2611	ops.c	FUNCTION_39
0x4004dc4	    0x4881ec000100	                          sub rsp, 0x100	      2611	ops.c	FUNCTION_39
0x4004dcb	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	      2611	ops.c	FUNCTION_39
0x4004dd2	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	      2611	ops.c	FUNCTION_39
0x4004dd9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2611	ops.c	FUNCTION_39
0x4004de2	        0x488945f8	                mov qword [rbp - 8], rax	      2611	ops.c	FUNCTION_39
0x4004de6	            0x31c0	                            xor eax, eax	      2611	ops.c	FUNCTION_39
0x4004de8	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      2612	ops.c	FUNCTION_39
0x4004df3	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      2614	ops.c	FUNCTION_39
0x4004dfd	    0x488b05000000	            mov rax, qword [0x04004e04] 	      2620	ops.c	FUNCTION_39
0x4004e04	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2620	ops.c	FUNCTION_39
0x4004e07	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2620	ops.c	FUNCTION_39
0x4004e0c	           0xf94c0	                                 sete al	      2620	ops.c	FUNCTION_39
0x4004e0f	           0xfb6c0	                           movzx eax, al	      2620	ops.c	FUNCTION_39
0x4004e12	          0x894598	             mov dword [rbp - 0x68], eax	      2620	ops.c	FUNCTION_39
0x4004e15	    0x488b05000000	            mov rax, qword [0x04004e1c] 	      2623	ops.c	FUNCTION_39
0x4004e1c	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2623	ops.c	FUNCTION_39
0x4004e23	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2623	ops.c	FUNCTION_39
0x4004e27	        0x48895038	             mov qword [rax + 0x38], rdx	      2623	ops.c	FUNCTION_39
0x4004e2b	      0xbf14000000	                           mov edi, 0x14	      2624	ops.c	FUNCTION_39	CALL_1
0x4004e30	      0xe800000000	                          call 0x4004e35	      2624	ops.c	FUNCTION_39	CALL_1
0x4004e35	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2626	ops.c	FUNCTION_39	IF_1
0x4004e3c	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2626	ops.c	FUNCTION_39	IF_1
0x4004e3f	            0x85c0	                           test eax, eax	      2626	ops.c	FUNCTION_39	IF_1
0x4004e41	     0xf840d010000	                            je 0x4004f54	      2626	ops.c	FUNCTION_39	IF_1
0x4004e47	    0x488b05000000	            mov rax, qword [0x04004e4e] 	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x4004e4e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x4004e51	            0x85c0	                           test eax, eax	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x4004e53	            0x7e76	                           jle 0x4004ecb	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x4004e55	    0x8b0500000000	            mov eax, dword [0x04004e5b] 	      2635	ops.c	FUNCTION_39	IF_1	IF_2
0x4004e5b	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      2635	ops.c	FUNCTION_39	IF_1	IF_2
0x4004e61	    0xc70500000000	               mov dword [0x04004e6b], 4	      2637	ops.c	FUNCTION_39	IF_1	IF_2
0x4004e6b	      0xe800000000	                          call 0x4004e70	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4004e70	            0x85c0	                           test eax, eax	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4004e72	     0xf8470070000	                            je 0x40055e8	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4004e78	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4004e7f	            0x8b00	                    mov eax, dword [rax]	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4004e81	          0x83f812	                           cmp eax, 0x12	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4004e84	            0x750f	                           jne 0x4004e95	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4004e86	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2641	ops.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4004e8d	          0x8b4068	            mov eax, dword [rax + 0x68] 	      2641	ops.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4004e90	          0x83c001	                              add eax, 1	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4004e93	            0xeb05	                           jmp 0x4004e9a	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4004e95	      0xe800000000	                          call 0x4004e9a	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4004e9a	            0x89c7	                            mov edi, eax	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4004e9c	      0xe800000000	                          call 0x4004ea1	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4004ea1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2642	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4004ea8	            0x8b00	                    mov eax, dword [rax]	      2642	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4004eaa	          0x83f812	                           cmp eax, 0x12	      2642	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4004ead	            0x7510	                           jne 0x4004ebf	      2642	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4004eaf	    0x488b05000000	            mov rax, qword [0x04004eb6] 	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4004eb6	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4004eb9	          0x83ea01	                              sub edx, 1	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4004ebc	          0x895040	             mov dword [rax + 0x40], edx	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4004ebf	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      2644	ops.c	FUNCTION_39	IF_1	IF_2
0x4004ec5	    0x890500000000	            mov dword [0x04004ecb], eax 	      2644	ops.c	FUNCTION_39	IF_1	IF_2
0x4004ecb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4004ed2	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4004ed6	    0x488db570ffff	                   lea rsi, [rbp - 0x90]	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4004edd	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4004ee4	      0xb901000000	                              mov ecx, 1	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4004ee9	          0x4889c7	                            mov rdi, rax	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4004eec	      0xe85c590000	                     call sym.block_prep	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4004ef1	      0xe800000000	                          call 0x4004ef6	      2650	ops.c	FUNCTION_39	IF_1	CALL_6
0x4004ef6	    0x898518ffffff	             mov dword [rbp - 0xe8], eax	      2650	ops.c	FUNCTION_39	IF_1	CALL_6
0x4004efc	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4004f03	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4004f07	          0x4889c7	                            mov rdi, rax	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4004f0a	      0xe800000000	                          call 0x4004f0f	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4004f0f	          0x4889c2	                            mov rdx, rax	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4004f12	          0x8b4588	             mov eax, dword [rbp - 0x78]	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4004f15	            0x4898	                                    cdqe	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4004f17	          0x4801d0	                            add rax, rdx	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4004f1a	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4004f21	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2653	ops.c	FUNCTION_39	IF_1	IF_5
0x4004f28	            0x8b00	                    mov eax, dword [rax]	      2653	ops.c	FUNCTION_39	IF_1	IF_5
0x4004f2a	          0x83f812	                           cmp eax, 0x12	      2653	ops.c	FUNCTION_39	IF_1	IF_5
0x4004f2d	            0x750f	                           jne 0x4004f3e	      2653	ops.c	FUNCTION_39	IF_1	IF_5
0x4004f2f	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2654	ops.c	FUNCTION_39	IF_1	IF_5
0x4004f35	            0x4898	                                    cdqe	      2654	ops.c	FUNCTION_39	IF_1	IF_5
0x4004f37	    0x48018540ffff	            add qword [rbp - 0xc0], rax 	      2654	ops.c	FUNCTION_39	IF_1	IF_5
0x4004f3e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4004f45	          0x4889c7	                            mov rdi, rax	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4004f48	      0xe800000000	                          call 0x4004f4d	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4004f4d	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4004f54	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2658	ops.c	FUNCTION_39	IF_6
0x4004f5b	            0x8b00	                    mov eax, dword [rax]	      2658	ops.c	FUNCTION_39	IF_6
0x4004f5d	          0x83f812	                           cmp eax, 0x12	      2658	ops.c	FUNCTION_39	IF_6
0x4004f60	     0xf852a010000	                           jne 0x4005090	      2658	ops.c	FUNCTION_39	IF_6
0x4004f66	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x4004f6d	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x4004f70	            0x85c0	                           test eax, eax	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x4004f72	     0xf84bb000000	                            je 0x4005033	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x4004f78	    0x488b05000000	            mov rax, qword [0x04004f7f] 	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x4004f7f	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x4004f82	            0x85c0	                           test eax, eax	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x4004f84	     0xf85a9000000	                           jne 0x4005033	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x4004f8a	    0x488b05000000	            mov rax, qword [0x04004f91] 	      2667	ops.c	FUNCTION_39	IF_6	IF_7
0x4004f91	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2667	ops.c	FUNCTION_39	IF_6	IF_7
0x4004f98	            0xeb10	                           jmp 0x4004faa	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4004f9a	    0x488b05000000	            mov rax, qword [0x04004fa1] 	      2670	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4004fa1	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2670	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4004fa4	          0x83c201	                              add edx, 1	      2670	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4004fa7	          0x895040	             mov dword [rax + 0x40], edx	      2670	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4004faa	      0xe800000000	                          call 0x4004faf	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4004faf	           0xfb600	                   movzx eax, byte [rax]	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4004fb2	            0x84c0	                             test al, al	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4004fb4	            0x7419	                            je 0x4004fcf	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4004fb6	    0x488b05000000	            mov rax, qword [0x04004fbd] 	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4004fbd	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4004fc0	          0x8b4d88	             mov ecx, dword [rbp - 0x78]	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4004fc3	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4004fc9	             0x1ca	                            add edx, ecx	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4004fcb	            0x39d0	                            cmp eax, edx	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4004fcd	            0x7ccb	                            jl 0x4004f9a	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4004fcf	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4004fd2	            0x85c0	                           test eax, eax	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4004fd4	     0xf84b5000000	                            je 0x400508f	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4004fda	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4004fdd	            0x85c0	                           test eax, eax	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4004fdf	     0xf85aa000000	                           jne 0x400508f	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4004fe5	      0xe800000000	                          call 0x4004fea	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x4004fea	            0x85c0	                           test eax, eax	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x4004fec	     0xf84f9050000	                            je 0x40055eb	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x4004ff2	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4004ffc	            0xeb11	                           jmp 0x400500f	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4004ffe	      0xbf20000000	                           mov edi, 0x20	      2678	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	CALL_11
0x4005003	      0xe800000000	                          call 0x4005008	      2678	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	CALL_11
0x4005008	    0x83851cffffff	               add dword [rbp - 0xe4], 1	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x400500f	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4005015	    0x3b851cffffff	             cmp eax, dword [rbp - 0xe4]	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x400501b	            0x7fe1	                            jg 0x4004ffe	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x400501d	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      2679	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4005023	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      2679	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4005029	             0x1d0	                            add eax, edx	      2679	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x400502b	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2679	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4005031	            0xeb5c	                           jmp 0x400508f	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4005033	    0x488b0d000000	            mov rcx, qword [0x0400503a] 	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x400503a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4005041	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4005045	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4005049	        0x48894138	             mov qword [rcx + 0x38], rax	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x400504d	        0x48895140	             mov qword [rcx + 0x40], rdx	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4005051	      0xe800000000	                          call 0x4005056	      2685	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_12
0x4005056	    0x488b05000000	            mov rax, qword [0x0400505d] 	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x400505d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4005061	          0x4889c7	                            mov rdi, rax	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4005064	      0xe800000000	                          call 0x4005069	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4005069	           0xfb600	                   movzx eax, byte [rax]	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x400506c	            0x84c0	                             test al, al	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x400506e	            0x7420	                            je 0x4005090	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4005070	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4005077	          0x8b5064	            mov edx, dword [rax + 0x64] 	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x400507a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4005081	          0x8b4068	            mov eax, dword [rax + 0x68] 	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4005084	            0x39c2	                            cmp edx, eax	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4005086	            0x7408	                            je 0x4005090	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4005088	      0xe800000000	                          call 0x400508d	      2690	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_14
0x400508d	            0xeb01	                           jmp 0x4005090	      2690	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_14
0x400508f	              0x90	                                     nop	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4005090	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2694	ops.c	FUNCTION_39
0x4005097	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2694	ops.c	FUNCTION_39
0x400509b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2694	ops.c	FUNCTION_39
0x400509f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2694	ops.c	FUNCTION_39
0x40050a6	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      2694	ops.c	FUNCTION_39
0x40050ad	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2695	ops.c	FUNCTION_39	CALL_15
0x40050b4	          0x4889c2	                            mov rdx, rax	      2695	ops.c	FUNCTION_39	CALL_15
0x40050b7	      0xbe00000000	                              mov esi, 0	      2695	ops.c	FUNCTION_39	CALL_15
0x40050bc	      0xbf00000000	                              mov edi, 0	      2695	ops.c	FUNCTION_39	CALL_15
0x40050c1	      0xe800000000	                          call 0x40050c6	      2695	ops.c	FUNCTION_39	CALL_15
0x40050c6	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2700	ops.c	FUNCTION_39	IF_11
0x40050cd	    0x488b05000000	            mov rax, qword [0x040050d4] 	      2700	ops.c	FUNCTION_39	IF_11
0x40050d4	    0x488b80f01100	          mov rax, qword [rax + 0x11f0] 	      2700	ops.c	FUNCTION_39	IF_11
0x40050db	          0x4839c2	                            cmp rdx, rax	      2700	ops.c	FUNCTION_39	IF_11
0x40050de	     0xf85a8000000	                           jne 0x400518c	      2700	ops.c	FUNCTION_39	IF_11
0x40050e4	    0x488b05000000	            mov rax, qword [0x040050eb] 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40050eb	    0x488b90f01100	          mov rdx, qword [rax + 0x11f0] 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40050f2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40050f9	          0x4839c2	                            cmp rdx, rax	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40050fc	            0x741d	                            je 0x400511b	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40050fe	    0x488b05000000	            mov rax, qword [0x04005105] 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005105	    0x488b90f01100	          mov rdx, qword [rax + 0x11f0] 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x400510c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005113	          0x4839c2	                            cmp rdx, rax	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005116	           0xf9cc0	                                 setl al	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005119	            0xeb49	                           jmp 0x4005164	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x400511b	    0x488b05000000	            mov rax, qword [0x04005122] 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005122	    0x8b90f8110000	          mov edx, dword [rax + 0x11f8] 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005128	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x400512e	            0x39c2	                            cmp edx, eax	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005130	            0x741a	                            je 0x400514c	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005132	    0x488b05000000	            mov rax, qword [0x04005139] 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005139	    0x8b90f8110000	          mov edx, dword [rax + 0x11f8] 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x400513f	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005145	            0x39c2	                            cmp edx, eax	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005147	           0xf9cc0	                                 setl al	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x400514a	            0xeb18	                           jmp 0x4005164	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x400514c	    0x488b05000000	            mov rax, qword [0x04005153] 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005153	    0x8b90fc110000	          mov edx, dword [rax + 0x11fc] 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005159	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x400515f	            0x39c2	                            cmp edx, eax	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005161	           0xf9cc0	                                 setl al	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005164	            0x84c0	                             test al, al	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005166	            0x7424	                            je 0x400518c	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005168	    0x488b05000000	            mov rax, qword [0x0400516f] 	      2702	ops.c	FUNCTION_39	IF_11
0x400516f	    0x488b8d08ffff	             mov rcx, qword [rbp - 0xf8]	      2702	ops.c	FUNCTION_39	IF_11
0x4005176	    0x488b90f81100	          mov rdx, qword [rax + 0x11f8] 	      2702	ops.c	FUNCTION_39	IF_11
0x400517d	    0x488b80f01100	          mov rax, qword [rax + 0x11f0] 	      2702	ops.c	FUNCTION_39	IF_11
0x4005184	        0x48894120	             mov qword [rcx + 0x20], rax	      2702	ops.c	FUNCTION_39	IF_11
0x4005188	        0x48895128	             mov qword [rcx + 0x28], rdx	      2702	ops.c	FUNCTION_39	IF_11
0x400518c	    0x488b05000000	            mov rax, qword [0x04005193] 	      2707	ops.c	FUNCTION_39	IF_12
0x4005193	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2707	ops.c	FUNCTION_39	IF_12
0x4005197	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2707	ops.c	FUNCTION_39	IF_12
0x400519e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2707	ops.c	FUNCTION_39	IF_12
0x40051a2	          0x4839c2	                            cmp rdx, rax	      2707	ops.c	FUNCTION_39	IF_12
0x40051a5	     0xf8543040000	                           jne 0x40055ee	      2707	ops.c	FUNCTION_39	IF_12
0x40051ab	    0x8b0500000000	            mov eax, dword [0x040051b1] 	      2707	ops.c	FUNCTION_39	IF_12
0x40051b1	            0x85c0	                           test eax, eax	      2707	ops.c	FUNCTION_39	IF_12
0x40051b3	     0xf8535040000	                           jne 0x40055ee	      2707	ops.c	FUNCTION_39	IF_12
0x40051b9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2710	ops.c	FUNCTION_39	IF_13
0x40051c0	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2710	ops.c	FUNCTION_39	IF_13
0x40051c3	            0x85c0	                           test eax, eax	      2710	ops.c	FUNCTION_39	IF_13
0x40051c5	     0xf8424040000	                            je 0x40055ef	      2710	ops.c	FUNCTION_39	IF_13
0x40051cb	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      2713	ops.c	FUNCTION_39	IF_13
0x40051d5	      0xe800000000	                          call 0x40051da	      2719	ops.c	FUNCTION_39	IF_13	CALL_17
0x40051da	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      2719	ops.c	FUNCTION_39	IF_13	CALL_17
0x40051e0	    0x488b05000000	            mov rax, qword [0x040051e7] 	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x40051e7	    0x8b80e8110000	          mov eax, dword [rax + 0x11e8] 	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x40051ed	    0x3b8518ffffff	             cmp eax, dword [rbp - 0xe8]	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x40051f3	            0x7e40	                           jle 0x4005235	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x40051f5	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x40051fb	    0x3b8518ffffff	             cmp eax, dword [rbp - 0xe8]	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4005201	            0x7e32	                           jle 0x4005235	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4005203	          0x8b5588	             mov edx, dword [rbp - 0x78]	      2722	ops.c	FUNCTION_39	IF_13	IF_14
0x4005206	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      2722	ops.c	FUNCTION_39	IF_13	IF_14
0x400520c	    0x2b8518ffffff	             sub eax, dword [rbp - 0xe8]	      2722	ops.c	FUNCTION_39	IF_13	IF_14
0x4005212	             0x1d0	                            add eax, edx	      2722	ops.c	FUNCTION_39	IF_13	IF_14
0x4005214	          0x894588	             mov dword [rbp - 0x78], eax	      2722	ops.c	FUNCTION_39	IF_13	IF_14
0x4005217	          0x8b558c	             mov edx, dword [rbp - 0x74]	      2723	ops.c	FUNCTION_39	IF_13	IF_14
0x400521a	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      2723	ops.c	FUNCTION_39	IF_13	IF_14
0x4005220	    0x2b8518ffffff	             sub eax, dword [rbp - 0xe8]	      2723	ops.c	FUNCTION_39	IF_13	IF_14
0x4005226	             0x1d0	                            add eax, edx	      2723	ops.c	FUNCTION_39	IF_13	IF_14
0x4005228	          0x89458c	             mov dword [rbp - 0x74], eax	      2723	ops.c	FUNCTION_39	IF_13	IF_14
0x400522b	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	      2724	ops.c	FUNCTION_39	IF_13	IF_14
0x4005235	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x400523c	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x4005240	    0x488b05000000	            mov rax, qword [0x04005247] 	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x4005247	    0x488b80f01100	          mov rax, qword [rax + 0x11f0] 	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x400524e	          0x4839c2	                            cmp rdx, rax	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x4005251	     0xf85a9010000	                           jne 0x4005400	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x4005257	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2731	ops.c	FUNCTION_39	IF_13	IF_15
0x400525a	            0x85c0	                           test eax, eax	      2731	ops.c	FUNCTION_39	IF_13	IF_15
0x400525c	     0xf859e010000	                           jne 0x4005400	      2731	ops.c	FUNCTION_39	IF_13	IF_15
0x4005262	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 0	      2731	ops.c	FUNCTION_39	IF_13	IF_15
0x4005269	     0xf8591010000	                           jne 0x4005400	      2731	ops.c	FUNCTION_39	IF_13	IF_15
0x400526f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005276	            0x8b00	                    mov eax, dword [rax]	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005278	          0x83f811	                           cmp eax, 0x11	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400527b	     0xf85a9000000	                           jne 0x400532a	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005281	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005288	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400528b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2736	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005292	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2736	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005295	          0x8d0c02	                    lea ecx, [rdx + rax]	      2736	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005298	    0x488b05000000	            mov rax, qword [0x0400529f] 	      2738	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400529f	    0x8b90f8110000	          mov edx, dword [rax + 0x11f8] 	      2738	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052a5	    0x488b05000000	            mov rax, qword [0x040052ac] 	      2740	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052ac	    0x8b80fc110000	          mov eax, dword [rax + 0x11fc] 	      2740	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052b2	             0x1d0	                            add eax, edx	      2740	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052b4	            0x39c1	                            cmp ecx, eax	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052b6	            0x7472	                            je 0x400532a	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052b8	    0x488b05000000	            mov rax, qword [0x040052bf] 	      2745	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052bf	    0x8b90fc110000	          mov edx, dword [rax + 0x11fc] 	      2744	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x40052c5	    0x488b05000000	            mov rax, qword [0x040052cc] 	      2744	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x40052cc	    0x8b80f8110000	          mov eax, dword [rax + 0x11f8] 	      2744	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x40052d2	            0x89d6	                            mov esi, edx	      2744	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x40052d4	            0x89c7	                            mov edi, eax	      2744	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x40052d6	      0xe800000000	                          call 0x40052db	      2744	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x40052db	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      2744	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x40052e1	    0x488b05000000	            mov rax, qword [0x040052e8] 	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052e8	    0x8b90f8110000	          mov edx, dword [rax + 0x11f8] 	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052ee	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052f5	          0x895028	             mov dword [rax + 0x28], edx	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052f8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40052ff	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005302	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005308	            0x29c2	                            sub edx, eax	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400530a	            0x89d0	                            mov eax, edx	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400530c	            0x4898	                                    cdqe	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400530e	    0x48298538ffff	             sub qword [rbp - 0xc8], rax	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005315	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2748	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400531c	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      2748	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005322	          0x895064	             mov dword [rax + 0x64], edx	      2748	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005325	      0xe9d6000000	                           jmp 0x4005400	      2743	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400532a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2750	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005331	            0x8b00	                    mov eax, dword [rax]	      2750	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005333	          0x83f812	                           cmp eax, 0x12	      2750	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005336	     0xf85c4000000	                           jne 0x4005400	      2750	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400533c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005343	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005346	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2753	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400534d	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2753	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005350	          0x8d0c02	                    lea ecx, [rdx + rax]	      2753	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005353	    0x488b05000000	            mov rax, qword [0x0400535a] 	      2755	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400535a	    0x8b90f8110000	          mov edx, dword [rax + 0x11f8] 	      2755	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005360	    0x488b05000000	            mov rax, qword [0x04005367] 	      2757	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005367	    0x8b80fc110000	          mov eax, dword [rax + 0x11fc] 	      2757	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400536d	             0x1d0	                            add eax, edx	      2757	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400536f	            0x39c1	                            cmp ecx, eax	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005371	     0xf8c89000000	                            jl 0x4005400	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005377	    0x488b05000000	            mov rax, qword [0x0400537e] 	      2762	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400537e	    0x8b90fc110000	          mov edx, dword [rax + 0x11fc] 	      2761	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x4005384	    0x488b05000000	            mov rax, qword [0x0400538b] 	      2761	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x400538b	    0x8b80f8110000	          mov eax, dword [rax + 0x11f8] 	      2761	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x4005391	            0x89d6	                            mov esi, edx	      2761	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x4005393	            0x89c7	                            mov edi, eax	      2761	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x4005395	      0xe800000000	                          call 0x400539a	      2761	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x400539a	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      2761	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x40053a0	    0x488b05000000	            mov rax, qword [0x040053a7] 	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053a7	    0x8b90f8110000	          mov edx, dword [rax + 0x11f8] 	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053ad	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053b4	          0x895028	             mov dword [rax + 0x28], edx	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053b7	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2765	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053bd	            0x4898	                                    cdqe	      2765	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053bf	    0x48018538ffff	            add qword [rbp - 0xc8], rax 	      2765	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053c6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053cd	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053d0	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053d6	            0x29c2	                            sub edx, eax	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053d8	            0x89d0	                            mov eax, edx	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053da	            0x4898	                                    cdqe	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053dc	    0x48298538ffff	             sub qword [rbp - 0xc8], rax	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053e3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2767	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053ea	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      2767	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053f0	          0x895064	             mov dword [rax + 0x64], edx	      2767	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053f3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2768	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40053fa	    0xc70011000000	                   mov dword [rax], 0x11	      2768	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005400	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x4005407	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x400540b	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x400540f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x4005416	      0xb901000000	                              mov ecx, 1	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x400541b	          0x4889c7	                            mov rdi, rax	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x400541e	      0xe82a540000	                     call sym.block_prep	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x4005423	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4005426	            0x85c0	                           test eax, eax	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4005428	            0x740d	                            je 0x4005437	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x400542a	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x400542d	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4005433	            0x39c2	                            cmp edx, eax	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4005435	            0x7d43	                           jge 0x400547a	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4005437	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2780	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400543e	            0x8b00	                    mov eax, dword [rax]	      2780	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4005440	          0x83f812	                           cmp eax, 0x12	      2780	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4005443	            0x7526	                           jne 0x400546b	      2780	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4005445	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4005448	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400544e	            0x29c2	                            sub edx, eax	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4005450	            0x89d0	                            mov eax, edx	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4005452	            0x4898	                                    cdqe	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4005454	    0x48018538ffff	            add qword [rbp - 0xc8], rax 	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400545b	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2783	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x400545e	            0x85c0	                           test eax, eax	      2783	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4005460	            0x7409	                            je 0x400546b	      2783	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4005462	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2784	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4005465	          0x83e801	                              sub eax, 1	      2784	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4005468	          0x8945b8	             mov dword [rbp - 0x48], eax	      2784	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x400546b	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2786	ops.c	FUNCTION_39	IF_13	IF_18
0x400546e	          0x894588	             mov dword [rbp - 0x78], eax	      2786	ops.c	FUNCTION_39	IF_13	IF_18
0x4005471	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2787	ops.c	FUNCTION_39	IF_13	IF_18
0x4005474	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2787	ops.c	FUNCTION_39	IF_13	IF_18
0x400547a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x4005481	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x4005485	          0x4889c7	                            mov rdi, rax	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x4005488	      0xe800000000	                          call 0x400548d	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x400548d	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x4005494	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x400549b	          0x4889c7	                            mov rdi, rax	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x400549e	      0xe800000000	                          call 0x40054a3	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x40054a3	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x40054aa	          0x8b4588	             mov eax, dword [rbp - 0x78]	      2796	ops.c	FUNCTION_39	IF_13
0x40054ad	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2796	ops.c	FUNCTION_39	IF_13
0x40054b3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2797	ops.c	FUNCTION_39	IF_13	IF_21
0x40054ba	            0x8b00	                    mov eax, dword [rax]	      2797	ops.c	FUNCTION_39	IF_13	IF_21
0x40054bc	          0x83f812	                           cmp eax, 0x12	      2797	ops.c	FUNCTION_39	IF_13	IF_21
0x40054bf	            0x750c	                           jne 0x40054cd	      2797	ops.c	FUNCTION_39	IF_13	IF_21
0x40054c1	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2798	ops.c	FUNCTION_39	IF_13	IF_21
0x40054c7	     0x18524ffffff	             add dword [rbp - 0xdc], eax	      2798	ops.c	FUNCTION_39	IF_13	IF_21
0x40054cd	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2799	ops.c	FUNCTION_39	IF_13	IF_22
0x40054d3	            0x4898	                                    cdqe	      2799	ops.c	FUNCTION_39	IF_13	IF_22
0x40054d5	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      2799	ops.c	FUNCTION_39	IF_13	IF_22
0x40054dc	            0x7610	                           jbe 0x40054ee	      2799	ops.c	FUNCTION_39	IF_13	IF_22
0x40054de	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x40054e5	    0x48018540ffff	            add qword [rbp - 0xc0], rax 	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x40054ec	            0xeb0f	                           jmp 0x40054fd	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x40054ee	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2802	ops.c	FUNCTION_39	IF_13	ELSE_3
0x40054f4	            0x4898	                                    cdqe	      2802	ops.c	FUNCTION_39	IF_13	ELSE_3
0x40054f6	    0x48018540ffff	            add qword [rbp - 0xc0], rax 	      2802	ops.c	FUNCTION_39	IF_13	ELSE_3
0x40054fd	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      2803	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23
0x4005505	     0xf88e4000000	                            js 0x40055ef	      2803	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23
0x400550b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4005512	          0x4889c7	                            mov rdi, rax	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4005515	      0xe800000000	                          call 0x400551a	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x400551a	    0x482b8538ffff	             sub rax, qword [rbp - 0xc8]	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4005521	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4005528	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4005530	     0xf8eb9000000	                           jle 0x40055ef	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x4005536	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x400553d	            0x89c2	                            mov edx, eax	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x400553f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x4005546	            0x89d6	                            mov esi, edx	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x4005548	          0x4889c7	                            mov rdi, rax	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x400554b	      0xe800000000	                          call 0x4005550	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x4005550	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x4005557	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      2807	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x400555f	     0xf848a000000	                            je 0x40055ef	      2807	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x4005565	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2811	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25
0x400556c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2811	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25
0x4005570	        0x488d5001	                      lea rdx, [rax + 1]	      2811	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25
0x4005574	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x400557b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x400557f	          0x4889d6	                            mov rsi, rdx	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4005582	          0x4889c7	                            mov rdi, rax	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4005585	      0xe800000000	                          call 0x400558a	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x400558a	          0x83f801	                              cmp eax, 1	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x400558d	            0x752f	                           jne 0x40055be	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x400558f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x4005596	            0x8b00	                    mov eax, dword [rax]	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x4005598	          0x83f811	                           cmp eax, 0x11	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x400559b	           0xf94c0	                                 sete al	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x400559e	           0xfb6d0	                           movzx edx, al	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x40055a1	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x40055a8	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x40055af	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x40055b6	          0x4889c7	                            mov rdi, rax	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x40055b9	      0xe8d1b6ffff	                   call sym.block_insert	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x40055be	    0x488b05000000	            mov rax, qword [0x040055c5] 	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x40055c5	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x40055cc	          0x8b5228	            mov edx, dword [rdx + 0x28] 	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x40055cf	          0x895040	             mov dword [rax + 0x40], edx	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x40055d2	      0xe800000000	                          call 0x40055d7	      2816	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_27
0x40055d7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x40055de	          0x4889c7	                            mov rdi, rax	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x40055e1	      0xe800000000	                          call 0x40055e6	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x40055e6	            0xeb07	                           jmp 0x40055ef	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x40055e8	              0x90	                                     nop	      2639	ops.c	FUNCTION_39	IF_1	IF_2	IF_3
0x40055e9	            0xeb04	                           jmp 0x40055ef	      2639	ops.c	FUNCTION_39	IF_1	IF_2	IF_3
0x40055eb	              0x90	                                     nop	      2676	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9
0x40055ec	            0xeb01	                           jmp 0x40055ef	      2676	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9
0x40055ee	              0x90	                                     nop	      2708	ops.c	FUNCTION_39	IF_12
0x40055ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      2821	ops.c	FUNCTION_39
0x40055f3	    0x644833042528	                xor rax, qword fs:[0x28]	      2821	ops.c	FUNCTION_39
0x40055fc	            0x7405	                            je 0x4005603	      2821	ops.c	FUNCTION_39
0x40055fe	      0xe800000000	                          call 0x4005603	      2821	ops.c	FUNCTION_39
0x4005603	              0xc9	                                   leave	      2821	ops.c	FUNCTION_39
0x4005604	              0xc3	                                     ret	      2821	ops.c	FUNCTION_39
cursor_pos_info	ELSE,8:DO,0:IF,24:functions,0:WHILE,0:FOR,1:SWITCH,1:CALL,44	620
0x400ea77	              0x55	                                push rbp	      7343	ops.c	FUNCTION_91
0x400ea78	          0x4889e5	                            mov rbp, rsp	      7343	ops.c	FUNCTION_91
0x400ea7b	            0x4157	                                push r15	      7343	ops.c	FUNCTION_91
0x400ea7d	            0x4156	                                push r14	      7343	ops.c	FUNCTION_91
0x400ea7f	            0x4155	                                push r13	      7343	ops.c	FUNCTION_91
0x400ea81	            0x4154	                                push r12	      7343	ops.c	FUNCTION_91
0x400ea83	              0x53	                                push rbx	      7343	ops.c	FUNCTION_91
0x400ea84	    0x4881ece80100	                          sub rsp, 0x1e8	      7343	ops.c	FUNCTION_91
0x400ea8b	    0x4889bdf8fdff	            mov qword [rbp - 0x208], rdi	      7343	ops.c	FUNCTION_91
0x400ea92	    0x64488b042528	                mov rax, qword fs:[0x28]	      7343	ops.c	FUNCTION_91
0x400ea9b	        0x488945c8	             mov qword [rbp - 0x38], rax	      7343	ops.c	FUNCTION_91
0x400ea9f	            0x31c0	                            xor eax, eax	      7343	ops.c	FUNCTION_91
0x400eaa1	    0x48c78538feff	              mov qword [rbp - 0x1c8], 0	      7348	ops.c	FUNCTION_91
0x400eaac	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	      7350	ops.c	FUNCTION_91
0x400eab7	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	      7352	ops.c	FUNCTION_91
0x400eac2	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	      7353	ops.c	FUNCTION_91
0x400eacd	    0x48c78518feff	              mov qword [rbp - 0x1e8], 0	      7354	ops.c	FUNCTION_91
0x400ead8	    0x48c78520feff	              mov qword [rbp - 0x1e0], 0	      7355	ops.c	FUNCTION_91
0x400eae3	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	      7356	ops.c	FUNCTION_91
0x400eaee	    0x48c78550feff	        mov qword [rbp - 0x1b0], 0x186a0	      7358	ops.c	FUNCTION_91
0x400eaf9	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	      7359	ops.c	FUNCTION_91
0x400eb04	    0x488b05000000	            mov rax, qword [0x0400eb0b] 	      7367	ops.c	FUNCTION_91	IF_1
0x400eb0b	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7367	ops.c	FUNCTION_91	IF_1
0x400eb0e	          0x83e001	                              and eax, 1	      7367	ops.c	FUNCTION_91	IF_1
0x400eb11	            0x85c0	                           test eax, eax	      7367	ops.c	FUNCTION_91	IF_1
0x400eb13	            0x7425	                            je 0x400eb3a	      7367	ops.c	FUNCTION_91	IF_1
0x400eb15	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      7369	ops.c	FUNCTION_91	IF_1	IF_2
0x400eb1d	     0xf85370a0000	                           jne 0x400f55a	      7369	ops.c	FUNCTION_91	IF_1	IF_2
0x400eb23	      0xbf00000000	                              mov edi, 0	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400eb28	      0xe800000000	                          call 0x400eb2d	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400eb2d	          0x4889c7	                            mov rdi, rax	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400eb30	      0xe800000000	                          call 0x400eb35	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400eb35	      0xe92e0b0000	                           jmp 0x400f668	      7372	ops.c	FUNCTION_91	IF_1	IF_2
0x400eb3a	    0x488b05000000	            mov rax, qword [0x0400eb41] 	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400eb41	          0x4889c7	                            mov rdi, rax	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400eb44	      0xe800000000	                          call 0x400eb49	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400eb49	          0x83f801	                              cmp eax, 1	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400eb4c	            0x750c	                           jne 0x400eb5a	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400eb4e	    0xc78504feffff	              mov dword [rbp - 0x1fc], 2	      7378	ops.c	FUNCTION_91	ELSE_1	IF_3
0x400eb58	            0xeb0a	                           jmp 0x400eb64	      7378	ops.c	FUNCTION_91	ELSE_1	IF_3
0x400eb5a	    0xc78504feffff	              mov dword [rbp - 0x1fc], 1	      7380	ops.c	FUNCTION_91	ELSE_1	ELSE_2
0x400eb64	    0x8b0500000000	            mov eax, dword [0x0400eb6a] 	      7382	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400eb6a	            0x85c0	                           test eax, eax	      7382	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400eb6c	     0xf8427020000	                            je 0x400ed99	      7382	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400eb72	    0x488b15000000	            mov rdx, qword [0x0400eb79] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eb79	    0x488b05000000	            mov rax, qword [0x0400eb80] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eb80	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eb84	          0x4839c2	                            cmp rdx, rax	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eb87	            0x741a	                            je 0x400eba3	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eb89	    0x488b15000000	            mov rdx, qword [0x0400eb90] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eb90	    0x488b05000000	            mov rax, qword [0x0400eb97] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eb97	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eb9b	          0x4839c2	                            cmp rdx, rax	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eb9e	           0xf9cc0	                                 setl al	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eba1	            0xeb40	                           jmp 0x400ebe3	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eba3	    0x8b1500000000	            mov edx, dword [0x0400eba9] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400eba9	    0x488b05000000	            mov rax, qword [0x0400ebb0] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebb0	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebb3	            0x39c2	                            cmp edx, eax	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebb5	            0x7417	                            je 0x400ebce	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebb7	    0x8b1500000000	            mov edx, dword [0x0400ebbd] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebbd	    0x488b05000000	            mov rax, qword [0x0400ebc4] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebc4	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebc7	            0x39c2	                            cmp edx, eax	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebc9	           0xf9cc0	                                 setl al	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebcc	            0xeb15	                           jmp 0x400ebe3	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebce	    0x8b1500000000	            mov edx, dword [0x0400ebd4] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebd4	    0x488b05000000	            mov rax, qword [0x0400ebdb] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebdb	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebde	            0x39c2	                            cmp edx, eax	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebe0	           0xf9cc0	                                 setl al	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebe3	            0x84c0	                             test al, al	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebe5	            0x743b	                            je 0x400ec22	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400ebe7	    0x488b05000000	            mov rax, qword [0x0400ebee] 	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400ebee	    0x488b15000000	            mov rdx, qword [0x0400ebf5] 	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400ebf5	    0x48898580feff	            mov qword [rbp - 0x180], rax	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400ebfc	    0x48899588feff	            mov qword [rbp - 0x178], rdx	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400ec03	    0x488b05000000	            mov rax, qword [0x0400ec0a] 	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400ec0a	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400ec0e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400ec12	    0x48898590feff	            mov qword [rbp - 0x170], rax	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400ec19	    0x48899598feff	            mov qword [rbp - 0x168], rdx	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400ec20	            0xeb39	                           jmp 0x400ec5b	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400ec22	    0x488b05000000	            mov rax, qword [0x0400ec29] 	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400ec29	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400ec2d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400ec31	    0x48898580feff	            mov qword [rbp - 0x180], rax	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400ec38	    0x48899588feff	            mov qword [rbp - 0x178], rdx	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400ec3f	    0x488b05000000	            mov rax, qword [0x0400ec46] 	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400ec46	    0x488b15000000	            mov rdx, qword [0x0400ec4d] 	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400ec4d	    0x48898590feff	            mov qword [rbp - 0x170], rax	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400ec54	    0x48899598feff	            mov qword [rbp - 0x168], rdx	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400ec5b	    0x488b05000000	            mov rax, qword [0x0400ec62] 	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400ec62	           0xfb600	                   movzx eax, byte [rax]	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400ec65	            0x3c65	                            cmp al, 0x65	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400ec67	            0x7519	                           jne 0x400ec82	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400ec69	    0x8b8598feffff	            mov eax, dword [rbp - 0x168]	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400ec6f	            0x85c0	                           test eax, eax	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400ec71	            0x7e0f	                           jle 0x400ec82	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400ec73	    0x8b8598feffff	            mov eax, dword [rbp - 0x168]	      7395	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400ec79	          0x83e801	                              sub eax, 1	      7395	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400ec7c	    0x898598feffff	            mov dword [rbp - 0x168], eax	      7395	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400ec82	    0x8b0500000000	            mov eax, dword [0x0400ec88] 	      7397	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ec88	          0x83f816	                           cmp eax, 0x16	      7397	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ec8b	     0xf85e9000000	                           jne 0x400ed7a	      7397	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ec91	    0x488b05000000	            mov rax, qword [0x0400ec98] 	      7400	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ec98	    0x48898570feff	            mov qword [rbp - 0x190], rax	      7400	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ec9f	    0x488b05000000	            mov rax, qword [0x0400eca6] 	      7403	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400eca6	    0x488905000000	            mov qword [0x0400ecad], rax 	      7403	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ecad	    0xc7853cffffff	               mov dword [rbp - 0xc4], 1	      7405	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ecb7	    0xc78540ffffff	               mov dword [rbp - 0xc0], 1	      7406	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ecc1	    0xc785e0feffff	              mov dword [rbp - 0x120], 0	      7407	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400eccb	    0x488b05000000	            mov rax, qword [0x0400ecd2] 	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400ecd2	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400ecd9	        0x488d7a68	                   lea rdi, [rdx + 0x68]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400ecdd	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400ece4	        0x488d4a64	                   lea rcx, [rdx + 0x64]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400ece8	    0x488d9590feff	                  lea rdx, [rbp - 0x170]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400ecef	    0x488db580feff	                  lea rsi, [rbp - 0x180]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400ecf6	          0x4989f8	                             mov r8, rdi	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400ecf9	          0x4889c7	                            mov rdi, rax	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400ecfc	      0xe800000000	                          call 0x400ed01	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400ed01	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      7411	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ed08	    0x488905000000	            mov qword [0x0400ed0f], rax 	      7411	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ed0f	    0x488b05000000	            mov rax, qword [0x0400ed16] 	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400ed16	          0x8b4048	            mov eax, dword [rax + 0x48] 	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400ed19	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400ed1e	            0x750a	                           jne 0x400ed2a	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400ed20	    0xc78548ffffff	      mov dword [rbp - 0xb8], 0x7fffffff	      7414	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400ed2a	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed30	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed36	            0x39c2	                            cmp edx, eax	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed38	            0x7d40	                           jge 0x400ed7a	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed3a	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      7418	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed40	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      7418	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed46	             0x1d0	                            add eax, edx	      7418	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed48	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      7418	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed4e	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      7419	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed54	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      7419	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed5a	            0x29c2	                            sub edx, eax	      7419	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed5c	            0x89d0	                            mov eax, edx	      7419	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed5e	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      7419	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed64	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      7420	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed6a	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      7420	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed70	            0x29c2	                            sub edx, eax	      7420	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed72	            0x89d0	                            mov eax, edx	      7420	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed74	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      7420	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ed7a	    0x488b9590feff	            mov rdx, qword [rbp - 0x170]	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400ed81	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400ed88	          0x4829c2	                            sub rdx, rax	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400ed8b	          0x4889d0	                            mov rax, rdx	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400ed8e	        0x4883c001	                              add rax, 1	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400ed92	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400ed99	    0x48c78530feff	              mov qword [rbp - 0x1d0], 1	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400eda4	      0xe94e030000	                           jmp 0x400f0f7	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400eda9	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400edb0	    0x483b8550feff	            cmp rax, qword [rbp - 0x1b0]	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400edb7	            0x7e27	                           jle 0x400ede0	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400edb9	      0xe800000000	                          call 0x400edbe	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	CALL_6
0x400edbe	    0x8b0500000000	            mov eax, dword [0x0400edc4] 	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400edc4	            0x85c0	                           test eax, eax	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400edc6	     0xf859b080000	                           jne 0x400f667	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400edcc	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400edd3	    0x4805a0860100	                        add rax, 0x186a0	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400edd9	    0x48898550feff	            mov qword [rbp - 0x1b0], rax	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400ede0	    0x8b0500000000	            mov eax, dword [0x0400ede6] 	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400ede6	            0x85c0	                           test eax, eax	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400ede8	     0xf8421020000	                            je 0x400f00f	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400edee	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400edf5	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400edfc	     0xf8f0d020000	                            jg 0x400f00f	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400ee02	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400ee09	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400ee10	     0xf8cf9010000	                            jl 0x400f00f	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400ee16	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	      7441	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400ee21	    0x48c78568feff	              mov qword [rbp - 0x198], 0	      7442	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400ee2c	    0x8b0500000000	            mov eax, dword [0x0400ee32] 	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee32	          0x83f856	                           cmp eax, 0x56	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee35	            0x746b	                            je 0x400eea2	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee37	          0x83f876	                           cmp eax, 0x76	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee3a	     0xf8488000000	                            je 0x400eec8	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee40	          0x83f816	                           cmp eax, 0x16	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee43	     0xf8502010000	                           jne 0x400ef4b	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee49	      0xe800000000	                          call 0x400ee4e	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_7
0x400ee4e	    0x890500000000	            mov dword [0x0400ee54], eax 	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_7
0x400ee54	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400ee5b	    0x488db5a0feff	                  lea rsi, [rbp - 0x160]	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400ee62	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400ee69	      0xb900000000	                              mov ecx, 0	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400ee6e	          0x4889c7	                            mov rdi, rax	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400ee71	      0xe8d7b9ffff	                     call sym.block_prep	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400ee76	    0xc70500000000	               mov dword [0x0400ee80], 2	      7452	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee80	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      7454	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee87	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7454	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee8e	    0x8b85a8feffff	            mov eax, dword [rbp - 0x158]	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee94	            0x4898	                                    cdqe	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee96	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ee9d	      0xe9a9000000	                           jmp 0x400ef4b	      7456	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eea2	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400eea9	          0x4889c7	                            mov rdi, rax	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400eeac	      0xe800000000	                          call 0x400eeb1	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400eeb1	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400eeb8	    0x48c78568feff	     mov qword [rbp - 0x198], 0x7fffffff	      7459	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eec3	      0xe983000000	                           jmp 0x400ef4b	      7460	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eec8	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7463	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eecf	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eed6	            0x7508	                           jne 0x400eee0	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eed8	    0x8b8588feffff	            mov eax, dword [rbp - 0x178]	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eede	            0xeb05	                           jmp 0x400eee5	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eee0	      0xb800000000	                              mov eax, 0	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eee5	    0x898508feffff	            mov dword [rbp - 0x1f8], eax	      7463	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eeeb	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eef2	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eef9	            0x7511	                           jne 0x400ef0c	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400eefb	    0x8b8598feffff	            mov eax, dword [rbp - 0x168]	      7466	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ef01	    0x2b8508feffff	            sub eax, dword [rbp - 0x1f8]	      7466	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ef07	          0x83c001	                              add eax, 1	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ef0a	            0xeb05	                           jmp 0x400ef11	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ef0c	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ef11	    0x89850cfeffff	            mov dword [rbp - 0x1f4], eax	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ef17	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400ef1e	          0x4889c7	                            mov rdi, rax	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400ef21	      0xe800000000	                          call 0x400ef26	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400ef26	          0x4889c2	                            mov rdx, rax	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400ef29	    0x8b8508feffff	            mov eax, dword [rbp - 0x1f8]	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400ef2f	            0x4898	                                    cdqe	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400ef31	          0x4801d0	                            add rax, rdx	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400ef34	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400ef3b	    0x8b850cfeffff	            mov eax, dword [rbp - 0x1f4]	      7469	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ef41	            0x4898	                                    cdqe	      7469	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ef43	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7469	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ef4a	              0x90	                                     nop	      7471	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400ef4b	    0x4883bd60feff	              cmp qword [rbp - 0x1a0], 0	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400ef53	     0xf8458010000	                            je 0x400f0b1	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400ef59	    0x8bbd04feffff	            mov edi, dword [rbp - 0x1fc]	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400ef5f	    0x488b8d68feff	            mov rcx, qword [rbp - 0x198]	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400ef66	    0x488d9518feff	                  lea rdx, [rbp - 0x1e8]	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400ef6d	    0x488db528feff	                  lea rsi, [rbp - 0x1d8]	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400ef74	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400ef7b	          0x4189f8	                            mov r8d, edi	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400ef7e	          0x4889c7	                            mov rdi, rax	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400ef81	      0xe8b6f9ffff	                call sym.line_count_info	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400ef86	    0x48018548feff	           add qword [rbp - 0x1b8], rax 	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400ef8d	    0x488b05000000	            mov rax, qword [0x0400ef94] 	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400ef94	          0x488b00	                    mov rax, qword [rax]	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400ef97	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400ef9e	     0xf850d010000	                           jne 0x400f0b1	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efa4	    0x488b05000000	            mov rax, qword [0x0400efab] 	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efab	    0x8b8070140000	          mov eax, dword [rax + 0x1470] 	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efb1	            0x85c0	                           test eax, eax	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efb3	     0xf85f8000000	                           jne 0x400f0b1	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efb9	    0x488b05000000	            mov rax, qword [0x0400efc0] 	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efc0	    0x8b8008140000	          mov eax, dword [rax + 0x1408] 	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efc6	            0x85c0	                           test eax, eax	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efc8	            0x7515	                           jne 0x400efdf	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efca	    0x488b05000000	            mov rax, qword [0x0400efd1] 	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efd1	    0x8b8074140000	          mov eax, dword [rax + 0x1474] 	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efd7	            0x85c0	                           test eax, eax	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efd9	     0xf85d2000000	                           jne 0x400f0b1	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400efdf	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400efe6	          0x4889c7	                            mov rdi, rax	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400efe9	      0xe800000000	                          call 0x400efee	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400efee	    0x483b8568feff	            cmp rax, qword [rbp - 0x198]	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400eff5	     0xf8db6000000	                           jge 0x400f0b1	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400effb	    0x8b8504feffff	            mov eax, dword [rbp - 0x1fc]	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400f001	            0x4898	                                    cdqe	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400f003	    0x48298548feff	            sub qword [rbp - 0x1b8], rax	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400f00a	      0xe9a2000000	                           jmp 0x400f0b1	      7440	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f00f	    0x488b05000000	            mov rax, qword [0x0400f016] 	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f016	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f01a	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f021	     0xf858b000000	                           jne 0x400f0b2	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f027	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      7489	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f02e	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      7489	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f035	          0x4801d0	                            add rax, rdx	      7489	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f038	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      7489	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f03f	    0x488b9518feff	            mov rdx, qword [rbp - 0x1e8]	      7490	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f046	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      7490	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f04d	          0x4801d0	                            add rax, rdx	      7490	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f050	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	      7490	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f057	    0x488b05000000	            mov rax, qword [0x0400f05e] 	      7494	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f05e	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7494	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f061	          0x83c001	                              add eax, 1	      7494	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f064	          0x4863d8	                         movsxd rbx, eax	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f067	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f06e	          0x4889c7	                            mov rdi, rax	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f071	      0xe800000000	                          call 0x400f076	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f076	          0x4889c7	                            mov rdi, rax	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f079	    0x8b8d04feffff	            mov ecx, dword [rbp - 0x1fc]	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f07f	    0x488d9518feff	                  lea rdx, [rbp - 0x1e8]	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f086	    0x488d8528feff	                  lea rax, [rbp - 0x1d8]	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f08d	          0x4189c8	                            mov r8d, ecx	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f090	          0x4889d9	                            mov rcx, rbx	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f093	          0x4889c6	                            mov rsi, rax	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f096	      0xe8a1f8ffff	                call sym.line_count_info	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f09b	          0x4889c2	                            mov rdx, rax	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f09e	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      7491	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f0a5	          0x4801d0	                            add rax, rdx	      7491	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f0a8	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      7491	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f0af	            0xeb01	                           jmp 0x400f0b2	      7491	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f0b1	              0x90	                                     nop	      7440	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f0b2	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0b9	          0x4889c7	                            mov rdi, rax	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0bc	      0xe800000000	                          call 0x400f0c1	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0c1	          0x4889c7	                            mov rdi, rax	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0c4	    0x8b8d04feffff	            mov ecx, dword [rbp - 0x1fc]	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0ca	    0x488d9510feff	                  lea rdx, [rbp - 0x1f0]	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0d1	    0x488d8520feff	                  lea rax, [rbp - 0x1e0]	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0d8	          0x4189c8	                            mov r8d, ecx	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0db	      0xb9ffffff7f	                     mov ecx, 0x7fffffff	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0e0	          0x4889c6	                            mov rsi, rax	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0e3	      0xe854f8ffff	                call sym.line_count_info	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0e8	    0x48018538feff	           add qword [rbp - 0x1c8], rax 	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f0ef	    0x48838530feff	              add qword [rbp - 0x1d0], 1	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f0f7	    0x488b05000000	            mov rax, qword [0x0400f0fe] 	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f0fe	          0x488b00	                    mov rax, qword [rax]	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f101	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f108	     0xf8d9bfcffff	                           jge 0x400eda9	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f10e	    0x488b05000000	            mov rax, qword [0x0400f115] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f115	    0x8b8070140000	          mov eax, dword [rax + 0x1470] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f11b	            0x85c0	                           test eax, eax	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f11d	            0x7531	                           jne 0x400f150	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f11f	    0x488b05000000	            mov rax, qword [0x0400f126] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f126	    0x8b8008140000	          mov eax, dword [rax + 0x1408] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f12c	            0x85c0	                           test eax, eax	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f12e	            0x7511	                           jne 0x400f141	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f130	    0x488b05000000	            mov rax, qword [0x0400f137] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f137	    0x8b8074140000	          mov eax, dword [rax + 0x1474] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f13d	            0x85c0	                           test eax, eax	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f13f	            0x750f	                           jne 0x400f150	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f141	    0x8b8504feffff	            mov eax, dword [rbp - 0x1fc]	      7506	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f147	            0x4898	                                    cdqe	      7506	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f149	    0x48298538feff	            sub qword [rbp - 0x1c8], rax	      7506	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400f150	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      7508	ops.c	FUNCTION_91	ELSE_1	IF_17
0x400f158	     0xf8561030000	                           jne 0x400f4bf	      7508	ops.c	FUNCTION_91	ELSE_1	IF_17
0x400f15e	    0x8b0500000000	            mov eax, dword [0x0400f164] 	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0x400f164	            0x85c0	                           test eax, eax	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0x400f166	     0xf84a4010000	                            je 0x400f310	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0x400f16c	    0x8b0500000000	            mov eax, dword [0x0400f172] 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f172	          0x83f816	                           cmp eax, 0x16	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f175	     0xf8585000000	                           jne 0x400f200	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f17b	    0x488b05000000	            mov rax, qword [0x0400f182] 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f182	          0x8b4048	            mov eax, dword [rax + 0x48] 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f185	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f18a	            0x7474	                            je 0x400f200	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f18c	    0x488b05000000	            mov rax, qword [0x0400f193] 	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400f193	    0x488d9590feff	                  lea rdx, [rbp - 0x170]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400f19a	        0x488d7a08	                      lea rdi, [rdx + 8]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400f19e	    0x488d9580feff	                  lea rdx, [rbp - 0x180]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400f1a5	        0x488d4a08	                      lea rcx, [rdx + 8]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400f1a9	    0x488d9590feff	                  lea rdx, [rbp - 0x170]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400f1b0	    0x488db580feff	                  lea rsi, [rbp - 0x180]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400f1b7	          0x4989f8	                             mov r8, rdi	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400f1ba	          0x4889c7	                            mov rdi, rax	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400f1bd	      0xe800000000	                          call 0x400f1c2	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x400f1c2	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      7517	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f1c8	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      7517	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f1ce	            0x29c2	                            sub edx, eax	      7517	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f1d0	            0x89d0	                            mov eax, edx	      7517	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f1d2	          0x83c001	                              add eax, 1	      7517	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400f1d5	          0x4863d8	                         movsxd rbx, eax	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400f1d8	      0xbf00000000	                              mov edi, 0	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400f1dd	      0xe800000000	                          call 0x400f1e2	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400f1e2	          0x4889c2	                            mov rdx, rax	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400f1e5	        0x488d4590	                   lea rax, [rbp - 0x70]	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400f1e9	          0x4889d9	                            mov rcx, rbx	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400f1ec	      0xbe32000000	                           mov esi, 0x32	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400f1f1	          0x4889c7	                            mov rdi, rax	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400f1f4	      0xb800000000	                              mov eax, 0	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400f1f9	      0xe800000000	                          call 0x400f1fe	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400f1fe	            0xeb04	                           jmp 0x400f204	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x400f200	        0xc6459000	                mov byte [rbp - 0x70], 0	      7520	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_5
0x400f204	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      7522	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400f20b	    0x483b8548feff	            cmp rax, qword [rbp - 0x1b8]	      7522	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400f212	            0x757d	                           jne 0x400f291	      7522	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400f214	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400f21b	    0x483b8538feff	            cmp rax, qword [rbp - 0x1c8]	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400f222	            0x756d	                           jne 0x400f291	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400f224	    0x4c8ba520feff	            mov r12, qword [rbp - 0x1e0]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f22b	    0x488b9d28feff	            mov rbx, qword [rbp - 0x1d8]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f232	    0x488b05000000	            mov rax, qword [0x0400f239] 	      7527	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400f239	          0x4c8b28	                    mov r13, qword [rax]	      7527	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400f23c	      0xbf00000000	                              mov edi, 0	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f241	      0xe800000000	                          call 0x400f246	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f246	          0x4889c6	                            mov rsi, rax	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f249	    0x488b05000000	            mov rax, qword [0x0400f250] 	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f250	    0x488b8d58feff	            mov rcx, qword [rbp - 0x1a8]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f257	        0x488d5590	                   lea rdx, [rbp - 0x70]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f25b	    0xffb538feffff	                push qword [rbp - 0x1c8]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f261	    0xffb548feffff	                push qword [rbp - 0x1b8]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f267	            0x4154	                                push r12	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f269	              0x53	                                push rbx	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f26a	          0x4d89e9	                             mov r9, r13	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f26d	          0x4989c8	                             mov r8, rcx	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f270	          0x4889d1	                            mov rcx, rdx	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f273	          0x4889f2	                            mov rdx, rsi	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f276	      0xbe01040000	                          mov esi, 0x401	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f27b	          0x4889c7	                            mov rdi, rax	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f27e	      0xb800000000	                              mov eax, 0	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f283	      0xe800000000	                          call 0x400f288	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f288	        0x4883c420	                           add rsp, 0x20	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f28c	      0xe92e020000	                           jmp 0x400f4bf	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400f291	    0x4c8bb510feff	            mov r14, qword [rbp - 0x1f0]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f298	    0x4c8bad18feff	            mov r13, qword [rbp - 0x1e8]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f29f	    0x4c8ba520feff	            mov r12, qword [rbp - 0x1e0]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2a6	    0x488b9d28feff	            mov rbx, qword [rbp - 0x1d8]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2ad	    0x488b05000000	            mov rax, qword [0x0400f2b4] 	      7536	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6
0x400f2b4	          0x4c8b38	                    mov r15, qword [rax]	      7536	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6
0x400f2b7	      0xbf00000000	                              mov edi, 0	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2bc	      0xe800000000	                          call 0x400f2c1	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2c1	          0x4889c6	                            mov rsi, rax	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2c4	    0x488b05000000	            mov rax, qword [0x0400f2cb] 	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2cb	    0x488b8d58feff	            mov rcx, qword [rbp - 0x1a8]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2d2	        0x488d5590	                   lea rdx, [rbp - 0x70]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2d6	    0xffb538feffff	                push qword [rbp - 0x1c8]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2dc	    0xffb548feffff	                push qword [rbp - 0x1b8]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2e2	            0x4156	                                push r14	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2e4	            0x4155	                                push r13	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2e6	            0x4154	                                push r12	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2e8	              0x53	                                push rbx	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2e9	          0x4d89f9	                             mov r9, r15	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2ec	          0x4989c8	                             mov r8, rcx	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2ef	          0x4889d1	                            mov rcx, rdx	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2f2	          0x4889f2	                            mov rdx, rsi	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2f5	      0xbe01040000	                          mov esi, 0x401	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2fa	          0x4889c7	                            mov rdi, rax	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f2fd	      0xb800000000	                              mov eax, 0	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f302	      0xe800000000	                          call 0x400f307	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f307	        0x4883c430	                           add rsp, 0x30	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f30b	      0xe9af010000	                           jmp 0x400f4bf	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400f310	      0xe800000000	                          call 0x400f315	      7546	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_24
0x400f315	    0x48898578feff	            mov qword [rbp - 0x188], rax	      7546	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_24
0x400f31c	      0xe800000000	                          call 0x400f321	      7547	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_25
0x400f321	    0x488b05000000	            mov rax, qword [0x0400f328] 	      7549	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7
0x400f328	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      7549	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7
0x400f32e	          0x8d4801	                      lea ecx, [rax + 1]	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400f331	    0x488b05000000	            mov rax, qword [0x0400f338] 	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400f338	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400f33b	          0x8d5001	                      lea edx, [rax + 1]	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400f33e	        0x488d4590	                   lea rax, [rbp - 0x70]	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400f342	      0xbe32000000	                           mov esi, 0x32	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400f347	          0x4889c7	                            mov rdi, rax	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400f34a	      0xe800000000	                          call 0x400f34f	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400f34f	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f356	          0x4889c7	                            mov rdi, rax	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f359	      0xe800000000	                          call 0x400f35e	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f35e	            0x89c3	                            mov ebx, eax	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f360	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f367	          0x4889c7	                            mov rdi, rax	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f36a	      0xe800000000	                          call 0x400f36f	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f36f	            0x89c2	                            mov edx, eax	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f371	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f378	            0x89d9	                            mov ecx, ebx	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f37a	      0xbe28000000	                           mov esi, 0x28	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f37f	          0x4889c7	                            mov rdi, rax	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f382	      0xe800000000	                          call 0x400f387	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400f387	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      7553	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400f38e	    0x483b8548feff	            cmp rax, qword [rbp - 0x1b8]	      7553	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400f395	     0xf858e000000	                           jne 0x400f429	      7553	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400f39b	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400f3a2	    0x483b8538feff	            cmp rax, qword [rbp - 0x1c8]	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400f3a9	            0x757e	                           jne 0x400f429	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400f3ab	    0x4c8bad20feff	            mov r13, qword [rbp - 0x1e0]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3b2	    0x4c8ba528feff	            mov r12, qword [rbp - 0x1d8]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3b9	    0x488b05000000	            mov rax, qword [0x0400f3c0] 	      7559	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400f3c0	          0x488b18	                    mov rbx, qword [rax]	      7559	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400f3c3	    0x488b05000000	            mov rax, qword [0x0400f3ca] 	      7558	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400f3ca	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	      7558	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400f3ce	      0xbf00000000	                              mov edi, 0	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3d3	      0xe800000000	                          call 0x400f3d8	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3d8	          0x4889c6	                            mov rsi, rax	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3db	    0x488b05000000	            mov rax, qword [0x0400f3e2] 	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3e2	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3e9	        0x488d5590	                   lea rdx, [rbp - 0x70]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3ed	        0x4883ec08	                              sub rsp, 8	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3f1	    0xffb538feffff	                push qword [rbp - 0x1c8]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3f7	    0xffb548feffff	                push qword [rbp - 0x1b8]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3fd	            0x4155	                                push r13	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f3ff	            0x4154	                                push r12	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f401	              0x53	                                push rbx	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f402	          0x4d89f1	                             mov r9, r14	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f405	          0x4989c8	                             mov r8, rcx	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f408	          0x4889d1	                            mov rcx, rdx	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f40b	          0x4889f2	                            mov rdx, rsi	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f40e	      0xbe01040000	                          mov esi, 0x401	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f413	          0x4889c7	                            mov rdi, rax	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f416	      0xb800000000	                              mov eax, 0	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f41b	      0xe800000000	                          call 0x400f420	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f420	        0x4883c430	                           add rsp, 0x30	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f424	      0xe996000000	                           jmp 0x400f4bf	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400f429	    0x4c8bbd10feff	            mov r15, qword [rbp - 0x1f0]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f430	    0x4c8bb518feff	            mov r14, qword [rbp - 0x1e8]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f437	    0x4c8bad20feff	            mov r13, qword [rbp - 0x1e0]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f43e	    0x4c8ba528feff	            mov r12, qword [rbp - 0x1d8]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f445	    0x488b05000000	            mov rax, qword [0x0400f44c] 	      7567	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400f44c	          0x488b18	                    mov rbx, qword [rax]	      7567	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400f44f	    0x488b05000000	            mov rax, qword [0x0400f456] 	      7566	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400f456	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7566	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400f45a	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      7566	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400f461	      0xbf00000000	                              mov edi, 0	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f466	      0xe800000000	                          call 0x400f46b	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f46b	          0x4889c6	                            mov rsi, rax	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f46e	    0x488b05000000	            mov rax, qword [0x0400f475] 	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f475	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f47c	        0x488d5590	                   lea rdx, [rbp - 0x70]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f480	        0x4883ec08	                              sub rsp, 8	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f484	    0xffb538feffff	                push qword [rbp - 0x1c8]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f48a	    0xffb548feffff	                push qword [rbp - 0x1b8]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f490	            0x4157	                                push r15	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f492	            0x4156	                                push r14	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f494	            0x4155	                                push r13	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f496	            0x4154	                                push r12	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f498	              0x53	                                push rbx	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f499	    0x4c8b8df0fdff	             mov r9, qword [rbp - 0x210]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f4a0	          0x4989c8	                             mov r8, rcx	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f4a3	          0x4889d1	                            mov rcx, rdx	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f4a6	          0x4889f2	                            mov rdx, rsi	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f4a9	      0xbe01040000	                          mov esi, 0x401	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f4ae	          0x4889c7	                            mov rdi, rax	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f4b1	      0xb800000000	                              mov eax, 0	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f4b6	      0xe800000000	                          call 0x400f4bb	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f4bb	        0x4883c440	                           add rsp, 0x40	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400f4bf	      0xe800000000	                          call 0x400f4c4	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400f4c4	            0x4898	                                    cdqe	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400f4c6	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400f4cd	    0x4883bd40feff	              cmp qword [rbp - 0x1c0], 0	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400f4d5	            0x7e43	                           jle 0x400f51a	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400f4d7	      0xbf00000000	                              mov edi, 0	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f4dc	      0xe800000000	                          call 0x400f4e1	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f4e1	          0x4989c4	                            mov r12, rax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f4e4	    0x488b1d000000	            mov rbx, qword [0x0400f4eb] 	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f4eb	    0x488b05000000	            mov rax, qword [0x0400f4f2] 	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f4f2	          0x4889c7	                            mov rdi, rax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f4f5	      0xe800000000	                          call 0x400f4fa	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f4fa	        0x488d3c03	                    lea rdi, [rbx + rax]	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f4fe	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f505	          0x4889c1	                            mov rcx, rax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f508	          0x4c89e2	                            mov rdx, r12	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f50b	      0xbe01040000	                          mov esi, 0x401	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f510	      0xb800000000	                              mov eax, 0	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f515	      0xe800000000	                          call 0x400f51a	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400f51a	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      7580	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400f522	            0x7536	                           jne 0x400f55a	      7580	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400f524	    0x488b05000000	            mov rax, qword [0x0400f52b] 	      7583	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400f52b	    0x48898578feff	            mov qword [rbp - 0x188], rax	      7583	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400f532	    0x48c705000000	               mov qword [0x0400f53d], 0	      7584	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400f53d	    0x488b05000000	            mov rax, qword [0x0400f544] 	      7585	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0x400f544	          0x4889c7	                            mov rdi, rax	      7585	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0x400f547	      0xe800000000	                          call 0x400f54c	      7585	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0x400f54c	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7586	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400f553	    0x488905000000	            mov qword [0x0400f55a], rax 	      7586	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400f55a	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      7590	ops.c	FUNCTION_91	IF_24
0x400f562	     0xf8400010000	                            je 0x400f668	      7590	ops.c	FUNCTION_91	IF_24
0x400f568	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400f56f	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400f576	      0xb900000000	                              mov ecx, 0	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400f57b	      0xbe00000000	                              mov esi, 0	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400f580	          0x4889c7	                            mov rdi, rax	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400f583	      0xe800000000	                          call 0x400f588	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400f588	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400f58f	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400f596	      0xb900000000	                              mov ecx, 0	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400f59b	      0xbe00000000	                              mov esi, 0	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400f5a0	          0x4889c7	                            mov rdi, rax	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400f5a3	      0xe800000000	                          call 0x400f5a8	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400f5a8	    0x488b9538feff	            mov rdx, qword [rbp - 0x1c8]	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5af	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5b6	          0x4801c2	                            add rdx, rax	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5b9	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5c0	      0xb900000000	                              mov ecx, 0	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5c5	      0xbe00000000	                              mov esi, 0	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5ca	          0x4889c7	                            mov rdi, rax	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5cd	      0xe800000000	                          call 0x400f5d2	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5d2	    0x8b0500000000	            mov eax, dword [0x0400f5d8] 	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f5d8	            0x85c0	                           test eax, eax	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f5da	            0x7407	                            je 0x400f5e3	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f5dc	      0xbe00000000	                              mov esi, 0	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f5e1	            0xeb05	                           jmp 0x400f5e8	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f5e3	      0xbe00000000	                              mov esi, 0	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f5e8	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f5ef	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f5f6	      0xb900000000	                              mov ecx, 0	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f5fb	          0x4889c7	                            mov rdi, rax	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f5fe	      0xe800000000	                          call 0x400f603	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f603	    0x488b9518feff	            mov rdx, qword [rbp - 0x1e8]	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f60a	    0x8b0500000000	            mov eax, dword [0x0400f610] 	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f610	            0x85c0	                           test eax, eax	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f612	            0x7407	                            je 0x400f61b	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f614	      0xbe00000000	                              mov esi, 0	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f619	            0xeb05	                           jmp 0x400f620	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f61b	      0xbe00000000	                              mov esi, 0	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f620	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f627	      0xb900000000	                              mov ecx, 0	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f62c	          0x4889c7	                            mov rdi, rax	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f62f	      0xe800000000	                          call 0x400f634	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f634	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f63b	    0x8b0500000000	            mov eax, dword [0x0400f641] 	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f641	            0x85c0	                           test eax, eax	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f643	            0x7407	                            je 0x400f64c	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f645	      0xbe00000000	                              mov esi, 0	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f64a	            0xeb05	                           jmp 0x400f651	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f64c	      0xbe00000000	                              mov esi, 0	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f651	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f658	      0xb900000000	                              mov ecx, 0	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f65d	          0x4889c7	                            mov rdi, rax	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f660	      0xe800000000	                          call 0x400f665	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f665	            0xeb01	                           jmp 0x400f668	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f667	              0x90	                                     nop	      7433	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400f668	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7607	ops.c	FUNCTION_91
0x400f66c	    0x644833042528	                xor rax, qword fs:[0x28]	      7607	ops.c	FUNCTION_91
0x400f675	            0x7405	                            je 0x400f67c	      7607	ops.c	FUNCTION_91
0x400f677	      0xe800000000	                          call 0x400f67c	      7607	ops.c	FUNCTION_91
0x400f67c	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      7607	ops.c	FUNCTION_91
0x400f680	              0x5b	                                 pop rbx	      7607	ops.c	FUNCTION_91
0x400f681	            0x415c	                                 pop r12	      7607	ops.c	FUNCTION_91
0x400f683	            0x415d	                                 pop r13	      7607	ops.c	FUNCTION_91
0x400f685	            0x415e	                                 pop r14	      7607	ops.c	FUNCTION_91
0x400f687	            0x415f	                                 pop r15	      7607	ops.c	FUNCTION_91
0x400f689	              0x5d	                                 pop rbp	      7607	ops.c	FUNCTION_91
0x400f68a	              0xc3	                                     ret	      7607	ops.c	FUNCTION_91
get_expr_line_src	ELSE,0:DO,0:IF,1:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,1	12
0x400144e	              0x55	                                push rbp	       855	ops.c	FUNCTION_13
0x400144f	          0x4889e5	                            mov rbp, rsp	       855	ops.c	FUNCTION_13
0x4001452	    0x488b05000000	            mov rax, qword [0x04001459] 	       856	ops.c	FUNCTION_13	IF_1
0x4001459	          0x4885c0	                           test rax, rax	       856	ops.c	FUNCTION_13	IF_1
0x400145c	            0x7507	                           jne 0x4001465	       856	ops.c	FUNCTION_13	IF_1
0x400145e	      0xb800000000	                              mov eax, 0	       857	ops.c	FUNCTION_13	IF_1
0x4001463	            0xeb0f	                           jmp 0x4001474	       857	ops.c	FUNCTION_13	IF_1
0x4001465	    0x488b05000000	            mov rax, qword [0x0400146c] 	       858	ops.c	FUNCTION_13	CALL_1
0x400146c	          0x4889c7	                            mov rdi, rax	       858	ops.c	FUNCTION_13	CALL_1
0x400146f	      0xe800000000	                          call 0x4001474	       858	ops.c	FUNCTION_13	CALL_1
0x4001474	              0x5d	                                 pop rbp	       859	ops.c	FUNCTION_13
0x4001475	              0xc3	                                     ret	       859	ops.c	FUNCTION_13
op_change	ELSE,2:DO,0:IF,16:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,30	295
0x4005605	              0x55	                                push rbp	      2831	ops.c	FUNCTION_40
0x4005606	          0x4889e5	                            mov rbp, rsp	      2831	ops.c	FUNCTION_40
0x4005609	    0x4881ecd00000	                           sub rsp, 0xd0	      2831	ops.c	FUNCTION_40
0x4005610	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      2831	ops.c	FUNCTION_40
0x4005617	    0x64488b042528	                mov rax, qword fs:[0x28]	      2831	ops.c	FUNCTION_40
0x4005620	        0x488945f8	                mov qword [rbp - 8], rax	      2831	ops.c	FUNCTION_40
0x4005624	            0x31c0	                            xor eax, eax	      2831	ops.c	FUNCTION_40
0x4005626	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      2838	ops.c	FUNCTION_40
0x4005631	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      2839	ops.c	FUNCTION_40
0x400563c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2845	ops.c	FUNCTION_40
0x4005643	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2845	ops.c	FUNCTION_40
0x4005646	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      2845	ops.c	FUNCTION_40
0x400564c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2846	ops.c	FUNCTION_40	IF_1
0x4005653	          0x8b4008	                mov eax, dword [rax + 8]	      2846	ops.c	FUNCTION_40	IF_1
0x4005656	          0x83f801	                              cmp eax, 1	      2846	ops.c	FUNCTION_40	IF_1
0x4005659	            0x7540	                           jne 0x400569b	      2846	ops.c	FUNCTION_40	IF_1
0x400565b	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      2848	ops.c	FUNCTION_40	IF_1
0x4005665	    0x8b0500000000	            mov eax, dword [0x0400566b] 	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400566b	            0x85c0	                           test eax, eax	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400566d	            0x752c	                           jne 0x400569b	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400566f	    0x488b05000000	            mov rax, qword [0x04005676] 	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x4005676	    0x8b8074150000	          mov eax, dword [rax + 0x1574] 	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400567c	            0x85c0	                           test eax, eax	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400567e	            0x741b	                            je 0x400569b	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x4005680	    0x488b05000000	            mov rax, qword [0x04005687] 	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x4005687	    0x8b8028140000	          mov eax, dword [rax + 0x1428] 	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x400568d	            0x85c0	                           test eax, eax	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x400568f	            0x750a	                           jne 0x400569b	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x4005691	    0xc70500000000	               mov dword [0x0400569b], 1	      2855	ops.c	FUNCTION_40	IF_1	IF_2
0x400569b	    0x488b05000000	            mov rax, qword [0x040056a2] 	      2861	ops.c	FUNCTION_40	IF_3
0x40056a2	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2861	ops.c	FUNCTION_40	IF_3
0x40056a5	          0x83e001	                              and eax, 1	      2861	ops.c	FUNCTION_40	IF_3
0x40056a8	            0x85c0	                           test eax, eax	      2861	ops.c	FUNCTION_40	IF_3
0x40056aa	            0x7413	                            je 0x40056bf	      2861	ops.c	FUNCTION_40	IF_3
0x40056ac	      0xe800000000	                          call 0x40056b1	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x40056b1	            0x85c0	                           test eax, eax	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x40056b3	            0x7527	                           jne 0x40056dc	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x40056b5	      0xb800000000	                              mov eax, 0	      2864	ops.c	FUNCTION_40	IF_3	IF_4
0x40056ba	      0xe936040000	                           jmp 0x4005af5	      2864	ops.c	FUNCTION_40	IF_3	IF_4
0x40056bf	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x40056c6	          0x4889c7	                            mov rdi, rax	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x40056c9	      0xe800000000	                          call 0x40056ce	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x40056ce	            0x85c0	                           test eax, eax	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x40056d0	            0x750a	                           jne 0x40056dc	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x40056d2	      0xb800000000	                              mov eax, 0	      2867	ops.c	FUNCTION_40	ELSE_1	IF_5
0x40056d7	      0xe919040000	                           jmp 0x4005af5	      2867	ops.c	FUNCTION_40	ELSE_1	IF_5
0x40056dc	    0x488b05000000	            mov rax, qword [0x040056e3] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x40056e3	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x40056e6	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x40056ec	            0x7d29	                           jge 0x4005717	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x40056ee	    0x488b05000000	            mov rax, qword [0x040056f5] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x40056f5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x40056f9	          0x4889c7	                            mov rdi, rax	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x40056fc	      0xe800000000	                          call 0x4005701	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x4005701	           0xfb600	                   movzx eax, byte [rax]	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x4005704	            0x84c0	                             test al, al	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x4005706	            0x740f	                            je 0x4005717	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x4005708	    0x8b0500000000	            mov eax, dword [0x0400570e] 	      2870	ops.c	FUNCTION_40	IF_6
0x400570e	            0x85c0	                           test eax, eax	      2870	ops.c	FUNCTION_40	IF_6
0x4005710	            0x7505	                           jne 0x4005717	      2870	ops.c	FUNCTION_40	IF_6
0x4005712	      0xe800000000	                          call 0x4005717	      2871	ops.c	FUNCTION_40	CALL_4
0x4005717	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2876	ops.c	FUNCTION_40	IF_7
0x400571e	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2876	ops.c	FUNCTION_40	IF_7
0x4005721	            0x85c0	                           test eax, eax	      2876	ops.c	FUNCTION_40	IF_7
0x4005723	     0xf8482000000	                            je 0x40057ab	      2876	ops.c	FUNCTION_40	IF_7
0x4005729	    0x8b0500000000	            mov eax, dword [0x0400572f] 	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400572f	            0x85c0	                           test eax, eax	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x4005731	            0x7423	                            je 0x4005756	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x4005733	    0x488b05000000	            mov rax, qword [0x0400573a] 	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400573a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400573d	            0x85c0	                           test eax, eax	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400573f	            0x7f09	                            jg 0x400574a	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x4005741	      0xe800000000	                          call 0x4005746	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x4005746	            0x85c0	                           test eax, eax	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x4005748	            0x750c	                           jne 0x4005756	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400574a	      0xe800000000	                          call 0x400574f	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400574f	            0x89c7	                            mov edi, eax	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x4005751	      0xe800000000	                          call 0x4005756	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x4005756	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x400575d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x4005761	          0x4889c7	                            mov rdi, rax	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x4005764	      0xe800000000	                          call 0x4005769	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x4005769	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x4005770	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x4005777	          0x4889c7	                            mov rdi, rax	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400577a	      0xe800000000	                          call 0x400577f	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400577f	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x4005786	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x400578d	          0x4889c7	                            mov rdi, rax	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x4005790	      0xe800000000	                          call 0x4005795	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x4005795	            0x4898	                                    cdqe	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x4005797	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x400579e	    0x488b05000000	            mov rax, qword [0x040057a5] 	      2887	ops.c	FUNCTION_40	IF_7
0x40057a5	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2887	ops.c	FUNCTION_40	IF_7
0x40057a8	          0x8945c8	             mov dword [rbp - 0x38], eax	      2887	ops.c	FUNCTION_40	IF_7
0x40057ab	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2892	ops.c	FUNCTION_40	IF_9
0x40057b2	          0x8b4008	                mov eax, dword [rax + 8]	      2892	ops.c	FUNCTION_40	IF_9
0x40057b5	          0x83f801	                              cmp eax, 1	      2892	ops.c	FUNCTION_40	IF_9
0x40057b8	            0x7505	                           jne 0x40057bf	      2892	ops.c	FUNCTION_40	IF_9
0x40057ba	      0xe800000000	                          call 0x40057bf	      2893	ops.c	FUNCTION_40	CALL_11
0x40057bf	      0xba01000000	                              mov edx, 1	      2896	ops.c	FUNCTION_40	CALL_12
0x40057c4	      0xbe00000000	                              mov esi, 0	      2896	ops.c	FUNCTION_40	CALL_12
0x40057c9	      0xbf00000000	                              mov edi, 0	      2896	ops.c	FUNCTION_40	CALL_12
0x40057ce	      0xe800000000	                          call 0x40057d3	      2896	ops.c	FUNCTION_40	CALL_12
0x40057d3	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      2896	ops.c	FUNCTION_40	CALL_12
0x40057d9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2904	ops.c	FUNCTION_40	IF_10
0x40057e0	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2904	ops.c	FUNCTION_40	IF_10
0x40057e3	            0x85c0	                           test eax, eax	      2904	ops.c	FUNCTION_40	IF_10
0x40057e5	     0xf8404030000	                            je 0x4005aef	      2904	ops.c	FUNCTION_40	IF_10
0x40057eb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2904	ops.c	FUNCTION_40	IF_10
0x40057f2	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2904	ops.c	FUNCTION_40	IF_10
0x40057f6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2904	ops.c	FUNCTION_40	IF_10
0x40057fd	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2904	ops.c	FUNCTION_40	IF_10
0x4005801	          0x4839c2	                            cmp rdx, rax	      2904	ops.c	FUNCTION_40	IF_10
0x4005804	     0xf84e5020000	                            je 0x4005aef	      2904	ops.c	FUNCTION_40	IF_10
0x400580a	    0x8b0500000000	            mov eax, dword [0x04005810] 	      2904	ops.c	FUNCTION_40	IF_10
0x4005810	            0x85c0	                           test eax, eax	      2904	ops.c	FUNCTION_40	IF_10
0x4005812	     0xf85d7020000	                           jne 0x4005aef	      2904	ops.c	FUNCTION_40	IF_10
0x4005818	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2908	ops.c	FUNCTION_40	IF_10	CALL_13
0x400581f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2908	ops.c	FUNCTION_40	IF_10	CALL_13
0x4005823	          0x4889c7	                            mov rdi, rax	      2908	ops.c	FUNCTION_40	IF_10	CALL_13
0x4005826	      0xe800000000	                          call 0x400582b	      2908	ops.c	FUNCTION_40	IF_10	CALL_13
0x400582b	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2908	ops.c	FUNCTION_40	IF_10	CALL_13
0x4005832	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2909	ops.c	FUNCTION_40	IF_10	IF_11
0x4005835	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2909	ops.c	FUNCTION_40	IF_10	IF_11
0x400583c	            0x39d0	                            cmp eax, edx	      2909	ops.c	FUNCTION_40	IF_10	IF_11
0x400583e	            0x7e4b	                           jle 0x400588b	      2909	ops.c	FUNCTION_40	IF_10	IF_11
0x4005840	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2911	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x4005847	          0x4889c7	                            mov rdi, rax	      2911	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x400584a	      0xe800000000	                          call 0x400584f	      2911	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x400584f	            0x4898	                                    cdqe	      2911	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x4005851	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2911	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x4005858	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x400585f	    0x482b8560ffff	             sub rax, qword [rbp - 0xa0]	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x4005866	    0x48018558ffff	            add qword [rbp - 0xa8], rax 	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x400586d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x4005870	            0x89c2	                            mov edx, eax	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x4005872	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x4005879	            0x89c1	                            mov ecx, eax	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400587b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x4005882	            0x29c1	                            sub ecx, eax	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x4005884	            0x89c8	                            mov eax, ecx	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x4005886	             0x1d0	                            add eax, edx	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x4005888	          0x8945c8	             mov dword [rbp - 0x38], eax	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400588b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x4005892	          0x4889c7	                            mov rdi, rax	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x4005895	      0xe800000000	                          call 0x400589a	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400589a	    0x482b8558ffff	             sub rax, qword [rbp - 0xa8]	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x40058a1	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x40058a8	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      2918	ops.c	FUNCTION_40	IF_10	IF_12
0x40058b0	     0xf8e39020000	                           jle 0x4005aef	      2918	ops.c	FUNCTION_40	IF_10	IF_12
0x40058b6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x40058bd	          0x83c001	                              add eax, 1	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x40058c0	            0x89c7	                            mov edi, eax	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x40058c2	      0xe800000000	                          call 0x40058c7	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x40058c7	        0x48894580	             mov qword [rbp - 0x80], rax	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x40058cb	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x40058d0	     0xf840d020000	                            je 0x4005ae3	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x40058d6	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x40058dd	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x40058e0	          0x4863c8	                         movsxd rcx, eax	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x40058e3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x40058ea	          0x4801c1	                            add rcx, rax	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x40058ed	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x40058f1	          0x4889ce	                            mov rsi, rcx	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x40058f4	          0x4889c7	                            mov rdi, rax	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x40058f7	      0xe800000000	                          call 0x40058fc	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x40058fc	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x4005903	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x4005907	        0x4883c001	                              add rax, 1	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400590b	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x4005912	      0xe97f010000	                           jmp 0x4005a96	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x4005917	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400591e	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x4005922	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x4005929	      0xb901000000	                              mov ecx, 1	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400592e	          0x4889c7	                            mov rdi, rax	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x4005931	      0xe8174f0000	                     call sym.block_prep	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x4005936	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x4005939	            0x85c0	                           test eax, eax	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400593b	            0x740e	                            je 0x400594b	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400593d	    0x8b0500000000	            mov eax, dword [0x04005943] 	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x4005943	            0x85c0	                           test eax, eax	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x4005945	     0xf8443010000	                            je 0x4005a8e	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400594b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2936	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x400594e	            0x85c0	                           test eax, eax	      2936	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x4005950	            0x7425	                            je 0x4005977	      2936	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x4005952	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2938	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x4005959	        0x488945a0	             mov qword [rbp - 0x60], rax	      2938	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x400595d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x4005964	          0x8b5064	            mov edx, dword [rax + 0x64] 	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x4005967	        0x488d45a0	                   lea rax, [rbp - 0x60]	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400596b	            0x89d6	                            mov esi, edx	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400596d	          0x4889c7	                            mov rdi, rax	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x4005970	      0xe800000000	                          call 0x4005975	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x4005975	            0xeb07	                           jmp 0x400597e	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x4005977	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      2942	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	ELSE_2
0x400597e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x4005985	          0x4889c7	                            mov rdi, rax	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x4005988	      0xe800000000	                          call 0x400598d	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x400598d	        0x48894588	             mov qword [rbp - 0x78], rax	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x4005991	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x4005995	          0x4889c7	                            mov rdi, rax	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x4005998	      0xe800000000	                          call 0x400599d	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400599d	            0x89c2	                            mov edx, eax	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400599f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2947	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x40059a2	             0x1c2	                            add edx, eax	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x40059a4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x40059ab	             0x1d0	                            add eax, edx	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x40059ad	          0x83c001	                              add eax, 1	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x40059b0	            0x89c7	                            mov edi, eax	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x40059b2	      0xe800000000	                          call 0x40059b7	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x40059b7	        0x48894590	             mov qword [rbp - 0x70], rax	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x40059bb	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      2950	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x40059c0	     0xf84c7000000	                            je 0x4005a8d	      2950	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x40059c6	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2953	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x40059c9	          0x4863d0	                         movsxd rdx, eax	      2953	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x40059cc	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2953	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x40059d0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2953	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x40059d4	          0x4889ce	                            mov rsi, rcx	      2953	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x40059d7	          0x4889c7	                            mov rdi, rax	      2953	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x40059da	      0xe800000000	                          call 0x40059df	      2953	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x40059df	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2954	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x40059e2	            0x4898	                                    cdqe	      2954	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x40059e4	        0x48894598	             mov qword [rbp - 0x68], rax	      2954	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x40059e8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2956	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x40059eb	            0x4898	                                    cdqe	      2956	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x40059ed	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2956	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x40059f1	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2956	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x40059f5	          0x4801d1	                            add rcx, rdx	      2956	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x40059f8	          0x4889c2	                            mov rdx, rax	      2956	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x40059fb	      0xbe20000000	                           mov esi, 0x20	      2956	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x4005a00	          0x4889cf	                            mov rdi, rcx	      2956	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x4005a03	      0xe800000000	                          call 0x4005a08	      2956	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x4005a08	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2957	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x4005a0b	            0x4898	                                    cdqe	      2957	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x4005a0d	        0x48014598	            add qword [rbp - 0x68], rax 	      2957	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x4005a11	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      2959	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x4005a18	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2959	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x4005a1c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2959	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x4005a20	          0x4801c1	                            add rcx, rax	      2959	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x4005a23	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2959	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x4005a27	          0x4889c6	                            mov rsi, rax	      2959	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x4005a2a	          0x4889cf	                            mov rdi, rcx	      2959	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x4005a2d	      0xe800000000	                          call 0x4005a32	      2959	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x4005a32	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2960	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x4005a39	        0x48014598	            add qword [rbp - 0x68], rax 	      2960	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x4005a3d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2961	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x4005a40	            0x4898	                                    cdqe	      2961	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x4005a42	        0x48014588	            add qword [rbp - 0x78], rax 	      2961	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x4005a46	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x4005a4a	          0x4889c7	                            mov rdi, rax	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x4005a4d	      0xe800000000	                          call 0x4005a52	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x4005a52	        0x488d5001	                      lea rdx, [rax + 1]	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x4005a56	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x4005a5a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x4005a5e	          0x4801c1	                            add rcx, rax	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x4005a61	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x4005a65	          0x4889c6	                            mov rsi, rax	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x4005a68	          0x4889cf	                            mov rdi, rcx	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x4005a6b	      0xe800000000	                          call 0x4005a70	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x4005a70	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x4005a74	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x4005a7b	      0xba00000000	                              mov edx, 0	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x4005a80	          0x4889ce	                            mov rsi, rcx	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x4005a83	          0x4889c7	                            mov rdi, rax	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x4005a86	      0xe800000000	                          call 0x4005a8b	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x4005a8b	            0xeb01	                           jmp 0x4005a8e	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x4005a8d	              0x90	                                     nop	      2951	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x4005a8e	    0x48838550ffff	               add qword [rbp - 0xb0], 1	      2926	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x4005a96	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x4005a9d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x4005aa1	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x4005aa8	     0xf8d69feffff	                           jge 0x4005917	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x4005aae	      0xe800000000	                          call 0x4005ab3	      2966	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_28
0x4005ab3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x4005aba	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x4005abe	        0x488d5001	                      lea rdx, [rax + 1]	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x4005ac2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x4005ac9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x4005acd	        0x4883c001	                              add rax, 1	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x4005ad1	      0xb900000000	                              mov ecx, 0	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x4005ad6	      0xbe00000000	                              mov esi, 0	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x4005adb	          0x4889c7	                            mov rdi, rax	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x4005ade	      0xe800000000	                          call 0x4005ae3	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x4005ae3	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2970	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x4005ae7	          0x4889c7	                            mov rdi, rax	      2970	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x4005aea	      0xe800000000	                          call 0x4005aef	      2970	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x4005aef	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2975	ops.c	FUNCTION_40
0x4005af5	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2976	ops.c	FUNCTION_40
0x4005af9	    0x644833342528	                xor rsi, qword fs:[0x28]	      2976	ops.c	FUNCTION_40
0x4005b02	            0x7405	                            je 0x4005b09	      2976	ops.c	FUNCTION_40
0x4005b04	      0xe800000000	                          call 0x4005b09	      2976	ops.c	FUNCTION_40
0x4005b09	              0xc9	                                   leave	      2976	ops.c	FUNCTION_40
0x4005b0a	              0xc3	                                     ret	      2976	ops.c	FUNCTION_40
preprocs_left	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,2	29
0x4008a35	              0x55	                                push rbp	      4187	ops.c	FUNCTION_50
0x4008a36	          0x4889e5	                            mov rbp, rsp	      4187	ops.c	FUNCTION_50
0x4008a39	    0x488b05000000	            mov rax, qword [0x04008a40] 	      4191	ops.c	FUNCTION_50
0x4008a40	    0x8b8074150000	          mov eax, dword [rax + 0x1574] 	      4191	ops.c	FUNCTION_50
0x4008a46	            0x85c0	                           test eax, eax	      4191	ops.c	FUNCTION_50
0x4008a48	            0x7411	                            je 0x4008a5b	      4191	ops.c	FUNCTION_50
0x4008a4a	    0x488b05000000	            mov rax, qword [0x04008a51] 	      4191	ops.c	FUNCTION_50
0x4008a51	    0x8b8028140000	          mov eax, dword [rax + 0x1428] 	      4191	ops.c	FUNCTION_50
0x4008a57	            0x85c0	                           test eax, eax	      4191	ops.c	FUNCTION_50
0x4008a59	            0x743a	                            je 0x4008a95	      4191	ops.c	FUNCTION_50
0x4008a5b	    0x488b05000000	            mov rax, qword [0x04008a62] 	      4197	ops.c	FUNCTION_50	CALL_2
0x4008a62	    0x8b8028140000	          mov eax, dword [rax + 0x1428] 	      4197	ops.c	FUNCTION_50	CALL_2
0x4008a68	            0x85c0	                           test eax, eax	      4191	ops.c	FUNCTION_50
0x4008a6a	            0x7430	                            je 0x4008a9c	      4191	ops.c	FUNCTION_50
0x4008a6c	      0xba01000000	                              mov edx, 1	      4197	ops.c	FUNCTION_50	CALL_2
0x4008a71	      0xbe20000000	                           mov esi, 0x20	      4197	ops.c	FUNCTION_50	CALL_2
0x4008a76	      0xbf23000000	                           mov edi, 0x23	      4197	ops.c	FUNCTION_50	CALL_2
0x4008a7b	      0xe800000000	                          call 0x4008a80	      4197	ops.c	FUNCTION_50	CALL_2
0x4008a80	            0x85c0	                           test eax, eax	      4197	ops.c	FUNCTION_50	CALL_2
0x4008a82	            0x7418	                            je 0x4008a9c	      4197	ops.c	FUNCTION_50	CALL_2
0x4008a84	    0x488b05000000	            mov rax, qword [0x04008a8b] 	      4198	ops.c	FUNCTION_50
0x4008a8b	    0x8b80e8160000	          mov eax, dword [rax + 0x16e8] 	      4198	ops.c	FUNCTION_50
0x4008a91	            0x85c0	                           test eax, eax	      4198	ops.c	FUNCTION_50
0x4008a93	            0x7507	                           jne 0x4008a9c	      4198	ops.c	FUNCTION_50
0x4008a95	      0xb801000000	                              mov eax, 1	      4191	ops.c	FUNCTION_50
0x4008a9a	            0xeb05	                           jmp 0x4008aa1	      4191	ops.c	FUNCTION_50
0x4008a9c	      0xb800000000	                              mov eax, 0	      4191	ops.c	FUNCTION_50
0x4008aa1	              0x5d	                                 pop rbp	      4201	ops.c	FUNCTION_50
0x4008aa2	              0xc3	                                     ret	      4201	ops.c	FUNCTION_50
paragraph_start	ELSE,0:DO,0:IF,7:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,9	91
0x400a6fd	              0x55	                                push rbp	      5296	ops.c	FUNCTION_64
0x400a6fe	          0x4889e5	                            mov rbp, rsp	      5296	ops.c	FUNCTION_64
0x400a701	        0x4883ec40	                           sub rsp, 0x40	      5296	ops.c	FUNCTION_64
0x400a705	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5296	ops.c	FUNCTION_64
0x400a709	    0x64488b042528	                mov rax, qword fs:[0x28]	      5296	ops.c	FUNCTION_64
0x400a712	        0x488945f8	                mov qword [rbp - 8], rax	      5296	ops.c	FUNCTION_64
0x400a716	            0x31c0	                            xor eax, eax	      5296	ops.c	FUNCTION_64
0x400a718	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      5299	ops.c	FUNCTION_64
0x400a71f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      5300	ops.c	FUNCTION_64
0x400a727	      0x48837dc801	               cmp qword [rbp - 0x38], 1	      5306	ops.c	FUNCTION_64	IF_1
0x400a72c	            0x7f0a	                            jg 0x400a738	      5306	ops.c	FUNCTION_64	IF_1
0x400a72e	      0xb801000000	                              mov eax, 1	      5307	ops.c	FUNCTION_64	IF_1
0x400a733	      0xe9ff000000	                           jmp 0x400a837	      5307	ops.c	FUNCTION_64	IF_1
0x400a738	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5309	ops.c	FUNCTION_64	CALL_1
0x400a73c	        0x4883e801	                              sub rax, 1	      5309	ops.c	FUNCTION_64	CALL_1
0x400a740	          0x4889c7	                            mov rdi, rax	      5309	ops.c	FUNCTION_64	CALL_1
0x400a743	      0xe800000000	                          call 0x400a748	      5309	ops.c	FUNCTION_64	CALL_1
0x400a748	        0x488945f0	             mov qword [rbp - 0x10], rax	      5309	ops.c	FUNCTION_64	CALL_1
0x400a74c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5310	ops.c	FUNCTION_64	IF_2
0x400a750	           0xfb600	                   movzx eax, byte [rax]	      5310	ops.c	FUNCTION_64	IF_2
0x400a753	            0x84c0	                             test al, al	      5310	ops.c	FUNCTION_64	IF_2
0x400a755	            0x750a	                           jne 0x400a761	      5310	ops.c	FUNCTION_64	IF_2
0x400a757	      0xb801000000	                              mov eax, 1	      5311	ops.c	FUNCTION_64	IF_2
0x400a75c	      0xe9d6000000	                           jmp 0x400a837	      5311	ops.c	FUNCTION_64	IF_2
0x400a761	      0xbf71000000	                           mov edi, 0x71	      5314	ops.c	FUNCTION_64	CALL_2
0x400a766	      0xe800000000	                          call 0x400a76b	      5314	ops.c	FUNCTION_64	CALL_2
0x400a76b	          0x8945dc	             mov dword [rbp - 0x24], eax	      5314	ops.c	FUNCTION_64	CALL_2
0x400a76e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400a772	        0x488d78ff	                      lea rdi, [rax - 1]	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400a776	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400a779	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400a77d	        0x488d45d4	                   lea rax, [rbp - 0x2c]	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400a781	          0x4889c6	                            mov rsi, rax	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400a784	      0xe878feffff	                  call sym.fmt_check_par	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400a789	            0x85c0	                           test eax, eax	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400a78b	            0x740a	                            je 0x400a797	      5316	ops.c	FUNCTION_64	IF_3	CALL_3
0x400a78d	      0xb801000000	                              mov eax, 1	      5321	ops.c	FUNCTION_64	IF_3
0x400a792	      0xe9a0000000	                           jmp 0x400a837	      5321	ops.c	FUNCTION_64	IF_3
0x400a797	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x400a79a	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x400a79e	        0x488d75d8	                   lea rsi, [rbp - 0x28]	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x400a7a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x400a7a6	          0x4889c7	                            mov rdi, rax	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x400a7a9	      0xe853feffff	                  call sym.fmt_check_par	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x400a7ae	            0x85c0	                           test eax, eax	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x400a7b0	            0x7407	                            je 0x400a7b9	      5323	ops.c	FUNCTION_64	IF_4	CALL_4
0x400a7b2	      0xb801000000	                              mov eax, 1	      5328	ops.c	FUNCTION_64	IF_4
0x400a7b7	            0xeb7e	                           jmp 0x400a837	      5328	ops.c	FUNCTION_64	IF_4
0x400a7b9	      0xbf77000000	                           mov edi, 0x77	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400a7be	      0xe800000000	                          call 0x400a7c3	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400a7c3	            0x85c0	                           test eax, eax	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400a7c5	            0x741b	                            je 0x400a7e2	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400a7c7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400a7cb	        0x4883e801	                              sub rax, 1	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400a7cf	          0x4889c7	                            mov rdi, rax	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400a7d2	      0xe8b5fdffff	                  call sym.ends_in_white	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400a7d7	            0x85c0	                           test eax, eax	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400a7d9	            0x7507	                           jne 0x400a7e2	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400a7db	      0xb801000000	                              mov eax, 1	      5331	ops.c	FUNCTION_64	IF_5
0x400a7e0	            0xeb55	                           jmp 0x400a837	      5331	ops.c	FUNCTION_64	IF_5
0x400a7e2	      0xbf6e000000	                           mov edi, 0x6e	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x400a7e7	      0xe800000000	                          call 0x400a7ec	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x400a7ec	            0x85c0	                           test eax, eax	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x400a7ee	            0x7417	                            je 0x400a807	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x400a7f0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x400a7f4	          0x4889c7	                            mov rdi, rax	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x400a7f7	      0xe800000000	                          call 0x400a7fc	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x400a7fc	            0x85c0	                           test eax, eax	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x400a7fe	            0x7e07	                           jle 0x400a807	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x400a800	      0xb801000000	                              mov eax, 1	      5334	ops.c	FUNCTION_64	IF_6
0x400a805	            0xeb30	                           jmp 0x400a837	      5334	ops.c	FUNCTION_64	IF_6
0x400a807	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x400a80b	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x400a80e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x400a812	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x400a815	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x400a819	        0x4883ef01	                              sub rdi, 1	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x400a81d	          0x4989f0	                             mov r8, rsi	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x400a820	            0x89c6	                            mov esi, eax	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x400a822	      0xe82ef1ffff	                    call sym.same_leader	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x400a827	            0x85c0	                           test eax, eax	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x400a829	            0x7507	                           jne 0x400a832	      5337	ops.c	FUNCTION_64	IF_7	CALL_9
0x400a82b	      0xb801000000	                              mov eax, 1	      5339	ops.c	FUNCTION_64	IF_7
0x400a830	            0xeb05	                           jmp 0x400a837	      5339	ops.c	FUNCTION_64	IF_7
0x400a832	      0xb800000000	                              mov eax, 0	      5342	ops.c	FUNCTION_64
0x400a837	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5343	ops.c	FUNCTION_64
0x400a83b	    0x644833342528	                xor rsi, qword fs:[0x28]	      5343	ops.c	FUNCTION_64
0x400a844	            0x7405	                            je 0x400a84b	      5343	ops.c	FUNCTION_64
0x400a846	      0xe800000000	                          call 0x400a84b	      5343	ops.c	FUNCTION_64
0x400a84b	              0xc9	                                   leave	      5343	ops.c	FUNCTION_64
0x400a84c	              0xc3	                                     ret	      5343	ops.c	FUNCTION_64
set_expr_line	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,1	12
0x400138e	              0x55	                                push rbp	       813	ops.c	FUNCTION_11
0x400138f	          0x4889e5	                            mov rbp, rsp	       813	ops.c	FUNCTION_11
0x4001392	        0x4883ec10	                           sub rsp, 0x10	       813	ops.c	FUNCTION_11
0x4001396	        0x48897df8	                mov qword [rbp - 8], rdi	       813	ops.c	FUNCTION_11
0x400139a	    0x488b05000000	            mov rax, qword [0x040013a1] 	       814	ops.c	FUNCTION_11	CALL_1
0x40013a1	          0x4889c7	                            mov rdi, rax	       814	ops.c	FUNCTION_11	CALL_1
0x40013a4	      0xe800000000	                          call 0x40013a9	       814	ops.c	FUNCTION_11	CALL_1
0x40013a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       815	ops.c	FUNCTION_11
0x40013ad	    0x488905000000	            mov qword [0x040013b4], rax 	       815	ops.c	FUNCTION_11
0x40013b4	              0x90	                                     nop	       816	ops.c	FUNCTION_11
0x40013b5	              0xc9	                                   leave	       816	ops.c	FUNCTION_11
0x40013b6	              0xc3	                                     ret	       816	ops.c	FUNCTION_11
adjust_clip_reg	ELSE,1:DO,0:IF,4:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,0	62
0x400277a	              0x55	                                push rbp	      1640	ops.c	FUNCTION_30
0x400277b	          0x4889e5	                            mov rbp, rsp	      1640	ops.c	FUNCTION_30
0x400277e	        0x48897df8	                mov qword [rbp - 8], rdi	      1640	ops.c	FUNCTION_30
0x4002782	        0x488b45f8	                mov rax, qword [rbp - 8]	      1643	ops.c	FUNCTION_30	IF_1
0x4002786	            0x8b00	                    mov eax, dword [rax]	      1643	ops.c	FUNCTION_30	IF_1
0x4002788	            0x85c0	                           test eax, eax	      1643	ops.c	FUNCTION_30	IF_1
0x400278a	            0x7572	                           jne 0x40027fe	      1643	ops.c	FUNCTION_30	IF_1
0x400278c	    0x8b0500000000	            mov eax, dword [0x04002792] 	      1643	ops.c	FUNCTION_30	IF_1
0x4002792	            0x85c0	                           test eax, eax	      1643	ops.c	FUNCTION_30	IF_1
0x4002794	            0x750a	                           jne 0x40027a0	      1643	ops.c	FUNCTION_30	IF_1
0x4002796	    0x8b0500000000	            mov eax, dword [0x0400279c] 	      1643	ops.c	FUNCTION_30	IF_1
0x400279c	            0x85c0	                           test eax, eax	      1643	ops.c	FUNCTION_30	IF_1
0x400279e	            0x745e	                            je 0x40027fe	      1643	ops.c	FUNCTION_30	IF_1
0x40027a0	    0x8b0500000000	            mov eax, dword [0x040027a6] 	      1645	ops.c	FUNCTION_30	IF_1	IF_2
0x40027a6	            0x85c0	                           test eax, eax	      1645	ops.c	FUNCTION_30	IF_1	IF_2
0x40027a8	            0x742b	                            je 0x40027d5	      1645	ops.c	FUNCTION_30	IF_1	IF_2
0x40027aa	    0x8b0500000000	            mov eax, dword [0x040027b0] 	      1646	ops.c	FUNCTION_30	IF_1	IF_2
0x40027b0	          0x83e002	                              and eax, 2	      1646	ops.c	FUNCTION_30	IF_1	IF_2
0x40027b3	            0x85c0	                           test eax, eax	      1647	ops.c	FUNCTION_30	IF_1	IF_2
0x40027b5	            0x7411	                            je 0x40027c8	      1647	ops.c	FUNCTION_30	IF_1	IF_2
0x40027b7	    0x8b0500000000	            mov eax, dword [0x040027bd] 	      1646	ops.c	FUNCTION_30	IF_1	IF_2
0x40027bd	            0x85c0	                           test eax, eax	      1646	ops.c	FUNCTION_30	IF_1	IF_2
0x40027bf	            0x7407	                            je 0x40027c8	      1646	ops.c	FUNCTION_30	IF_1	IF_2
0x40027c1	      0xba2b000000	                           mov edx, 0x2b	      1647	ops.c	FUNCTION_30	IF_1	IF_2
0x40027c6	            0xeb05	                           jmp 0x40027cd	      1647	ops.c	FUNCTION_30	IF_1	IF_2
0x40027c8	      0xba2a000000	                           mov edx, 0x2a	      1647	ops.c	FUNCTION_30	IF_1	IF_2
0x40027cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1646	ops.c	FUNCTION_30	IF_1	IF_2
0x40027d1	            0x8910	                    mov dword [rax], edx	      1646	ops.c	FUNCTION_30	IF_1	IF_2
0x40027d3	            0xeb29	                           jmp 0x40027fe	      1646	ops.c	FUNCTION_30	IF_1	IF_2
0x40027d5	    0x8b0500000000	            mov eax, dword [0x040027db] 	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027db	          0x83e002	                              and eax, 2	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027de	            0x85c0	                           test eax, eax	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027e0	            0x7411	                            je 0x40027f3	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027e2	    0x8b0500000000	            mov eax, dword [0x040027e8] 	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027e8	            0x85c0	                           test eax, eax	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027ea	            0x7407	                            je 0x40027f3	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027ec	      0xba2b000000	                           mov edx, 0x2b	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027f1	            0xeb05	                           jmp 0x40027f8	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027f3	      0xba2a000000	                           mov edx, 0x2a	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027fc	            0x8910	                    mov dword [rax], edx	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x40027fe	    0x8b0500000000	            mov eax, dword [0x04002804] 	      1652	ops.c	FUNCTION_30	IF_3
0x4002804	            0x85c0	                           test eax, eax	      1652	ops.c	FUNCTION_30	IF_3
0x4002806	            0x7515	                           jne 0x400281d	      1652	ops.c	FUNCTION_30	IF_3
0x4002808	        0x488b45f8	                mov rax, qword [rbp - 8]	      1652	ops.c	FUNCTION_30	IF_3
0x400280c	            0x8b00	                    mov eax, dword [rax]	      1652	ops.c	FUNCTION_30	IF_3
0x400280e	          0x83f82a	                           cmp eax, 0x2a	      1652	ops.c	FUNCTION_30	IF_3
0x4002811	            0x750a	                           jne 0x400281d	      1652	ops.c	FUNCTION_30	IF_3
0x4002813	        0x488b45f8	                mov rax, qword [rbp - 8]	      1653	ops.c	FUNCTION_30	IF_3
0x4002817	    0xc70000000000	                      mov dword [rax], 0	      1653	ops.c	FUNCTION_30	IF_3
0x400281d	    0x8b0500000000	            mov eax, dword [0x04002823] 	      1654	ops.c	FUNCTION_30	IF_4
0x4002823	            0x85c0	                           test eax, eax	      1654	ops.c	FUNCTION_30	IF_4
0x4002825	            0x7515	                           jne 0x400283c	      1654	ops.c	FUNCTION_30	IF_4
0x4002827	        0x488b45f8	                mov rax, qword [rbp - 8]	      1654	ops.c	FUNCTION_30	IF_4
0x400282b	            0x8b00	                    mov eax, dword [rax]	      1654	ops.c	FUNCTION_30	IF_4
0x400282d	          0x83f82b	                           cmp eax, 0x2b	      1654	ops.c	FUNCTION_30	IF_4
0x4002830	            0x750a	                           jne 0x400283c	      1654	ops.c	FUNCTION_30	IF_4
0x4002832	        0x488b45f8	                mov rax, qword [rbp - 8]	      1655	ops.c	FUNCTION_30	IF_4
0x4002836	    0xc70000000000	                      mov dword [rax], 0	      1655	ops.c	FUNCTION_30	IF_4
0x400283c	              0x90	                                     nop	      1656	ops.c	FUNCTION_30
0x400283d	              0x5d	                                 pop rbp	      1656	ops.c	FUNCTION_30
0x400283e	              0xc3	                                     ret	      1656	ops.c	FUNCTION_30
adjust_cursor_eol	ELSE,0:DO,0:IF,2:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,3	51
0x400897b	              0x55	                                push rbp	      4157	ops.c	FUNCTION_49
0x400897c	          0x4889e5	                            mov rbp, rsp	      4157	ops.c	FUNCTION_49
0x400897f	        0x4883ec10	                           sub rsp, 0x10	      4157	ops.c	FUNCTION_49
0x4008983	    0x64488b042528	                mov rax, qword fs:[0x28]	      4157	ops.c	FUNCTION_49
0x400898c	        0x488945f8	                mov qword [rbp - 8], rax	      4157	ops.c	FUNCTION_49
0x4008990	            0x31c0	                            xor eax, eax	      4157	ops.c	FUNCTION_49
0x4008992	    0x488b05000000	            mov rax, qword [0x04008999] 	      4158	ops.c	FUNCTION_49	IF_1
0x4008999	          0x8b4040	            mov eax, dword [rax + 0x40] 	      4158	ops.c	FUNCTION_49	IF_1
0x400899c	            0x85c0	                           test eax, eax	      4158	ops.c	FUNCTION_49	IF_1
0x400899e	            0x7e7e	                           jle 0x4008a1e	      4158	ops.c	FUNCTION_49	IF_1
0x40089a0	      0xe800000000	                          call 0x40089a5	      4159	ops.c	FUNCTION_49	IF_1	CALL_1
0x40089a5	            0x85c0	                           test eax, eax	      4159	ops.c	FUNCTION_49	IF_1	CALL_1
0x40089a7	            0x7575	                           jne 0x4008a1e	      4159	ops.c	FUNCTION_49	IF_1	CALL_1
0x40089a9	    0x8b0500000000	            mov eax, dword [0x040089af] 	      4161	ops.c	FUNCTION_49	IF_1
0x40089af	          0x83e008	                              and eax, 8	      4161	ops.c	FUNCTION_49	IF_1
0x40089b2	            0x85c0	                           test eax, eax	      4161	ops.c	FUNCTION_49	IF_1
0x40089b4	            0x7568	                           jne 0x4008a1e	      4161	ops.c	FUNCTION_49	IF_1
0x40089b6	    0x8b0500000000	            mov eax, dword [0x040089bc] 	      4163	ops.c	FUNCTION_49	IF_1
0x40089bc	            0x85c0	                           test eax, eax	      4163	ops.c	FUNCTION_49	IF_1
0x40089be	            0x755e	                           jne 0x4008a1e	      4163	ops.c	FUNCTION_49	IF_1
0x40089c0	    0x8b0500000000	            mov eax, dword [0x040089c6] 	      4163	ops.c	FUNCTION_49	IF_1
0x40089c6	          0x83e010	                           and eax, 0x10	      4163	ops.c	FUNCTION_49	IF_1
0x40089c9	            0x85c0	                           test eax, eax	      4163	ops.c	FUNCTION_49	IF_1
0x40089cb	            0x7551	                           jne 0x4008a1e	      4163	ops.c	FUNCTION_49	IF_1
0x40089cd	      0xe800000000	                          call 0x40089d2	      4166	ops.c	FUNCTION_49	IF_1	CALL_2
0x40089d2	    0x8b0500000000	            mov eax, dword [0x040089d8] 	      4169	ops.c	FUNCTION_49	IF_1	IF_2
0x40089d8	          0x83f804	                              cmp eax, 4	      4169	ops.c	FUNCTION_49	IF_1	IF_2
0x40089db	            0x7541	                           jne 0x4008a1e	      4169	ops.c	FUNCTION_49	IF_1	IF_2
0x40089dd	    0x488b05000000	            mov rax, qword [0x040089e4] 	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40089e4	        0x488d7038	                   lea rsi, [rax + 0x38]	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40089e8	    0x488b05000000	            mov rax, qword [0x040089ef] 	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40089ef	        0x488d4df4	                    lea rcx, [rbp - 0xc]	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40089f3	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40089f7	          0x4989c8	                             mov r8, rcx	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40089fa	      0xb900000000	                              mov ecx, 0	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x40089ff	          0x4889c7	                            mov rdi, rax	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x4008a02	      0xe800000000	                          call 0x4008a07	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x4008a07	    0x488b05000000	            mov rax, qword [0x04008a0e] 	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x4008a0e	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x4008a11	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x4008a14	            0x29d1	                            sub ecx, edx	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x4008a16	            0x89ca	                            mov edx, ecx	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x4008a18	          0x83c201	                              add edx, 1	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x4008a1b	          0x895044	             mov dword [rax + 0x44], edx	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x4008a1e	              0x90	                                     nop	      4179	ops.c	FUNCTION_49
0x4008a1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4179	ops.c	FUNCTION_49
0x4008a23	    0x644833042528	                xor rax, qword fs:[0x28]	      4179	ops.c	FUNCTION_49
0x4008a2c	            0x7405	                            je 0x4008a33	      4179	ops.c	FUNCTION_49
0x4008a2e	      0xe800000000	                          call 0x4008a33	      4179	ops.c	FUNCTION_49
0x4008a33	              0xc9	                                   leave	      4179	ops.c	FUNCTION_49
0x4008a34	              0xc3	                                     ret	      4179	ops.c	FUNCTION_49
op_on_lines	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,0	13
0x40000f9	              0x55	                                push rbp	       203	ops.c	FUNCTION_2
0x40000fa	          0x4889e5	                            mov rbp, rsp	       203	ops.c	FUNCTION_2
0x40000fd	          0x897dfc	                mov dword [rbp - 4], edi	       203	ops.c	FUNCTION_2
0x4000100	          0x8b45fc	                mov eax, dword [rbp - 4]	       204	ops.c	FUNCTION_2
0x4000103	          0x4863d0	                         movsxd rdx, eax	       204	ops.c	FUNCTION_2
0x4000106	          0x4889d0	                            mov rax, rdx	       204	ops.c	FUNCTION_2
0x4000109	          0x4801c0	                            add rax, rax	       204	ops.c	FUNCTION_2
0x400010c	          0x4801d0	                            add rax, rdx	       204	ops.c	FUNCTION_2
0x400010f	    0x480500000000	                              add rax, 0	       204	ops.c	FUNCTION_2
0x4000115	           0xfb600	                   movzx eax, byte [rax]	       204	ops.c	FUNCTION_2
0x4000118	           0xfbec0	                           movsx eax, al	       204	ops.c	FUNCTION_2
0x400011b	              0x5d	                                 pop rbp	       205	ops.c	FUNCTION_2
0x400011c	              0xc3	                                     ret	       205	ops.c	FUNCTION_2
read_viminfo_register	ELSE,6:DO,0:IF,17:functions,0:WHILE,1:FOR,4:SWITCH,0:CALL,22	323
0x400c616	              0x55	                                push rbp	      6086	ops.c	FUNCTION_70
0x400c617	          0x4889e5	                            mov rbp, rsp	      6086	ops.c	FUNCTION_70
0x400c61a	              0x53	                                push rbx	      6086	ops.c	FUNCTION_70
0x400c61b	        0x4883ec58	                           sub rsp, 0x58	      6086	ops.c	FUNCTION_70
0x400c61f	        0x48897da8	             mov qword [rbp - 0x58], rdi	      6086	ops.c	FUNCTION_70
0x400c623	          0x8975a4	             mov dword [rbp - 0x5c], esi	      6086	ops.c	FUNCTION_70
0x400c626	    0x64488b042528	                mov rax, qword fs:[0x28]	      6086	ops.c	FUNCTION_70
0x400c62f	        0x488945e8	             mov qword [rbp - 0x18], rax	      6086	ops.c	FUNCTION_70
0x400c633	            0x31c0	                            xor eax, eax	      6086	ops.c	FUNCTION_70
0x400c635	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      6088	ops.c	FUNCTION_70
0x400c63c	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6092	ops.c	FUNCTION_70
0x400c643	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      6094	ops.c	FUNCTION_70
0x400c64b	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      6095	ops.c	FUNCTION_70
0x400c652	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      6096	ops.c	FUNCTION_70
0x400c659	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6099	ops.c	FUNCTION_70
0x400c65d	          0x488b00	                    mov rax, qword [rax]	      6099	ops.c	FUNCTION_70
0x400c660	        0x4883c001	                              add rax, 1	      6099	ops.c	FUNCTION_70
0x400c664	        0x488945d0	             mov qword [rbp - 0x30], rax	      6099	ops.c	FUNCTION_70
0x400c668	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6102	ops.c	FUNCTION_70	IF_1
0x400c66c	           0xfb600	                   movzx eax, byte [rax]	      6102	ops.c	FUNCTION_70	IF_1
0x400c66f	            0x3c22	                            cmp al, 0x22	      6102	ops.c	FUNCTION_70	IF_1
0x400c671	            0x7513	                           jne 0x400c686	      6102	ops.c	FUNCTION_70	IF_1
0x400c673	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      6104	ops.c	FUNCTION_70	IF_1
0x400c67a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6105	ops.c	FUNCTION_70	IF_1
0x400c67e	        0x4883c001	                              add rax, 1	      6105	ops.c	FUNCTION_70	IF_1
0x400c682	        0x488945d0	             mov qword [rbp - 0x30], rax	      6105	ops.c	FUNCTION_70	IF_1
0x400c686	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c68a	           0xfb600	                   movzx eax, byte [rax]	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c68d	           0xfb6c0	                           movzx eax, al	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c690	          0x83e841	                           sub eax, 0x41	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c693	          0x83f819	                           cmp eax, 0x19	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c696	            0x7665	                           jbe 0x400c6fd	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c698	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c69c	           0xfb600	                   movzx eax, byte [rax]	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c69f	           0xfb6c0	                           movzx eax, al	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6a2	          0x83e861	                           sub eax, 0x61	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6a5	          0x83f819	                           cmp eax, 0x19	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6a8	            0x7653	                           jbe 0x400c6fd	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6ae	           0xfb600	                   movzx eax, byte [rax]	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6b1	           0xfb6c0	                           movzx eax, al	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6b4	          0x83e830	                           sub eax, 0x30	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6b7	          0x83f809	                              cmp eax, 9	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6ba	            0x7641	                           jbe 0x400c6fd	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6c0	           0xfb600	                   movzx eax, byte [rax]	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6c3	            0x3c2d	                            cmp al, 0x2d	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6c5	            0x7436	                            je 0x400c6fd	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x400c6c7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400c6cb	          0x488b18	                    mov rbx, qword [rax]	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400c6ce	      0xbf00000000	                              mov edi, 0	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400c6d3	      0xe800000000	                          call 0x400c6d8	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400c6d8	          0x4889da	                            mov rdx, rbx	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400c6db	          0x4889c6	                            mov rsi, rax	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400c6de	      0xbf00000000	                              mov edi, 0	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400c6e3	      0xe800000000	                          call 0x400c6e8	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400c6e8	            0x85c0	                           test eax, eax	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400c6ea	            0x740a	                            je 0x400c6f6	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400c6ec	      0xb801000000	                              mov eax, 1	      6111	ops.c	FUNCTION_70	IF_2	IF_3
0x400c6f1	      0xe9e6030000	                           jmp 0x400cadc	      6111	ops.c	FUNCTION_70	IF_2	IF_3
0x400c6f6	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      6112	ops.c	FUNCTION_70	IF_2
0x400c6fd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6114	ops.c	FUNCTION_70	CALL_4
0x400c701	        0x488d5001	                      lea rdx, [rax + 1]	      6114	ops.c	FUNCTION_70	CALL_4
0x400c705	        0x488955d0	             mov qword [rbp - 0x30], rdx	      6114	ops.c	FUNCTION_70	CALL_4
0x400c709	           0xfb600	                   movzx eax, byte [rax]	      6114	ops.c	FUNCTION_70	CALL_4
0x400c70c	           0xfb6c0	                           movzx eax, al	      6114	ops.c	FUNCTION_70	CALL_4
0x400c70f	      0xbe00000000	                              mov esi, 0	      6114	ops.c	FUNCTION_70	CALL_4
0x400c714	            0x89c7	                            mov edi, eax	      6114	ops.c	FUNCTION_70	CALL_4
0x400c716	      0xe800000000	                          call 0x400c71b	      6114	ops.c	FUNCTION_70	CALL_4
0x400c71b	        0x837da400	               cmp dword [rbp - 0x5c], 0	      6115	ops.c	FUNCTION_70	IF_4
0x400c71f	            0x7516	                           jne 0x400c737	      6115	ops.c	FUNCTION_70	IF_4
0x400c721	    0x488b05000000	            mov rax, qword [0x0400c728] 	      6115	ops.c	FUNCTION_70	IF_4
0x400c728	          0x488b00	                    mov rax, qword [rax]	      6115	ops.c	FUNCTION_70	IF_4
0x400c72b	          0x4885c0	                           test rax, rax	      6115	ops.c	FUNCTION_70	IF_4
0x400c72e	            0x7407	                            je 0x400c737	      6115	ops.c	FUNCTION_70	IF_4
0x400c730	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      6116	ops.c	FUNCTION_70	IF_4
0x400c737	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6118	ops.c	FUNCTION_70	IF_5
0x400c73b	           0xfb600	                   movzx eax, byte [rax]	      6118	ops.c	FUNCTION_70	IF_5
0x400c73e	            0x3c40	                            cmp al, 0x40	      6118	ops.c	FUNCTION_70	IF_5
0x400c740	            0x7524	                           jne 0x400c766	      6118	ops.c	FUNCTION_70	IF_5
0x400c742	        0x837da400	               cmp dword [rbp - 0x5c], 0	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x400c746	            0x750a	                           jne 0x400c752	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x400c748	    0x8b0500000000	            mov eax, dword [0x0400c74e] 	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x400c74e	            0x85c0	                           test eax, eax	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x400c750	            0x7514	                           jne 0x400c766	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x400c752	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x400c756	        0x4883e801	                              sub rax, 1	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x400c75a	           0xfb600	                   movzx eax, byte [rax]	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x400c75d	           0xfb6c0	                           movzx eax, al	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x400c760	    0x890500000000	            mov dword [0x0400c766], eax 	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x400c766	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      6125	ops.c	FUNCTION_70
0x400c76d	    0xc745b8640000	           mov dword [rbp - 0x48], 0x64 	      6126	ops.c	FUNCTION_70
0x400c774	        0x837db000	               cmp dword [rbp - 0x50], 0	      6127	ops.c	FUNCTION_70	IF_7
0x400c778	     0xf849d010000	                            je 0x400c91b	      6127	ops.c	FUNCTION_70	IF_7
0x400c77e	        0x837dc000	               cmp dword [rbp - 0x40], 0	      6135	ops.c	FUNCTION_70	IF_7	IF_8
0x400c782	            0x740e	                            je 0x400c792	      6135	ops.c	FUNCTION_70	IF_7	IF_8
0x400c784	    0x488b05000000	            mov rax, qword [0x0400c78b] 	      6136	ops.c	FUNCTION_70	IF_7	IF_8
0x400c78b	    0x488905000000	            mov qword [0x0400c792], rax 	      6136	ops.c	FUNCTION_70	IF_7	IF_8
0x400c792	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x400c795	            0x4898	                                    cdqe	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x400c797	          0xc1e003	                              shl eax, 3	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x400c79a	            0x89c7	                            mov edi, eax	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x400c79c	      0xe800000000	                          call 0x400c7a1	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x400c7a1	        0x488945d8	             mov qword [rbp - 0x28], rax	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x400c7a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x400c7a9	          0x4889c7	                            mov rdi, rax	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x400c7ac	      0xe800000000	                          call 0x400c7b1	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x400c7b1	          0x4889c7	                            mov rdi, rax	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x400c7b4	      0xe800000000	                          call 0x400c7b9	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x400c7b9	        0x488945d0	             mov qword [rbp - 0x30], rax	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x400c7bd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400c7c1	      0xba04000000	                              mov edx, 4	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400c7c6	      0xbe00000000	                              mov esi, 0	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400c7cb	          0x4889c7	                            mov rdi, rax	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400c7ce	      0xe800000000	                          call 0x400c7d3	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400c7d3	            0x85c0	                           test eax, eax	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400c7d5	            0x7509	                           jne 0x400c7e0	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x400c7d7	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      6140	ops.c	FUNCTION_70	IF_7	IF_9
0x400c7de	            0xeb2a	                           jmp 0x400c80a	      6140	ops.c	FUNCTION_70	IF_7	IF_9
0x400c7e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x400c7e4	      0xba05000000	                              mov edx, 5	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x400c7e9	      0xbe00000000	                              mov esi, 0	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x400c7ee	          0x4889c7	                            mov rdi, rax	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x400c7f1	      0xe800000000	                          call 0x400c7f6	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x400c7f6	            0x85c0	                           test eax, eax	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x400c7f8	            0x7509	                           jne 0x400c803	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x400c7fa	    0xc745c4020000	               mov dword [rbp - 0x3c], 2	      6142	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0x400c801	            0xeb07	                           jmp 0x400c80a	      6142	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0x400c803	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      6144	ops.c	FUNCTION_70	IF_7	ELSE_2
0x400c80a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x400c80e	          0x4889c7	                            mov rdi, rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x400c811	      0xe800000000	                          call 0x400c816	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x400c816	          0x4889c7	                            mov rdi, rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x400c819	      0xe800000000	                          call 0x400c81e	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x400c81e	        0x488945d0	             mov qword [rbp - 0x30], rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x400c822	        0x488d45d0	                   lea rax, [rbp - 0x30]	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x400c826	          0x4889c7	                            mov rdi, rax	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x400c829	      0xe800000000	                          call 0x400c82e	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x400c82e	          0x8945c8	             mov dword [rbp - 0x38], eax	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x400c831	      0xe9e5000000	                           jmp 0x400c91b	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x400c836	        0x837db000	               cmp dword [rbp - 0x50], 0	      6153	ops.c	FUNCTION_70	WHILE_1	IF_11
0x400c83a	     0xf84db000000	                            je 0x400c91b	      6153	ops.c	FUNCTION_70	WHILE_1	IF_11
0x400c840	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6155	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400c843	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      6155	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400c846	     0xf8582000000	                           jne 0x400c8ce	      6155	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400c84c	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6158	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0x400c84f	             0x1c0	                            add eax, eax	      6158	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0x400c851	            0x4898	                                    cdqe	      6158	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0x400c853	          0xc1e003	                              shl eax, 3	      6158	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0x400c856	            0x89c7	                            mov edi, eax	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400c858	      0xe800000000	                          call 0x400c85d	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400c85d	        0x488945e0	             mov qword [rbp - 0x20], rax	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400c861	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6160	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0x400c866	            0x750c	                           jne 0x400c874	      6160	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0x400c868	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      6162	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0x400c86f	      0xe9e0000000	                           jmp 0x400c954	      6163	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0x400c874	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c87b	            0xeb32	                           jmp 0x400c8af	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c87d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c880	            0x4898	                                    cdqe	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c882	    0x488d14c50000	                        lea rdx, [rax*8]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c88a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c88e	          0x4801c2	                            add rdx, rax	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c891	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c894	            0x4898	                                    cdqe	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c896	    0x488d0cc50000	                        lea rcx, [rax*8]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c89e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c8a2	          0x4801c8	                            add rax, rcx	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c8a5	          0x488b00	                    mov rax, qword [rax]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c8a8	          0x488902	                    mov qword [rdx], rax	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c8ab	        0x8345bc01	               add dword [rbp - 0x44], 1	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c8af	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c8b2	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c8b5	            0x7cc6	                            jl 0x400c87d	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400c8b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x400c8bb	          0x4889c7	                            mov rdi, rax	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x400c8be	      0xe800000000	                          call 0x400c8c3	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x400c8c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6168	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400c8c7	        0x488945d8	             mov qword [rbp - 0x28], rax	      6168	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400c8cb	          0xd165b8	               shl dword [rbp - 0x48], 1	      6169	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400c8ce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x400c8d2	      0xba01000000	                              mov edx, 1	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x400c8d7	      0xbe01000000	                              mov esi, 1	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x400c8dc	          0x4889c7	                            mov rdi, rax	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x400c8df	      0xe800000000	                          call 0x400c8e4	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x400c8e4	        0x488945d0	             mov qword [rbp - 0x30], rax	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x400c8e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6172	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c8ec	          0x4885c0	                           test rax, rax	      6172	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c8ef	            0x7423	                            je 0x400c914	      6172	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c8f1	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c8f4	          0x8d5001	                      lea edx, [rax + 1]	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c8f7	          0x8955b4	             mov dword [rbp - 0x4c], edx	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c8fa	            0x4898	                                    cdqe	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c8fc	    0x488d14c50000	                        lea rdx, [rax*8]	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c904	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c908	          0x4801c2	                            add rdx, rax	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c90b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c90f	          0x488902	                    mov qword [rdx], rax	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c912	            0xeb07	                           jmp 0x400c91b	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x400c914	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      6176	ops.c	FUNCTION_70	WHILE_1	IF_11	ELSE_3
0x400c91b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x400c91f	          0x4889c7	                            mov rdi, rax	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x400c922	      0xe800000000	                          call 0x400c927	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x400c927	          0x8945cc	             mov dword [rbp - 0x34], eax	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x400c92a	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x400c92e	            0x7524	                           jne 0x400c954	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x400c930	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6151	ops.c	FUNCTION_70	WHILE_1
0x400c934	          0x488b00	                    mov rax, qword [rax]	      6151	ops.c	FUNCTION_70	WHILE_1
0x400c937	           0xfb600	                   movzx eax, byte [rax]	      6151	ops.c	FUNCTION_70	WHILE_1
0x400c93a	            0x3c09	                               cmp al, 9	      6151	ops.c	FUNCTION_70	WHILE_1
0x400c93c	     0xf84f4feffff	                            je 0x400c836	      6151	ops.c	FUNCTION_70	WHILE_1
0x400c942	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6151	ops.c	FUNCTION_70	WHILE_1
0x400c946	          0x488b00	                    mov rax, qword [rax]	      6151	ops.c	FUNCTION_70	WHILE_1
0x400c949	           0xfb600	                   movzx eax, byte [rax]	      6151	ops.c	FUNCTION_70	WHILE_1
0x400c94c	            0x3c3c	                            cmp al, 0x3c	      6151	ops.c	FUNCTION_70	WHILE_1
0x400c94e	     0xf84e2feffff	                            je 0x400c836	      6151	ops.c	FUNCTION_70	WHILE_1
0x400c954	        0x837db000	               cmp dword [rbp - 0x50], 0	      6180	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c958	     0xf843b010000	                            je 0x400ca99	      6180	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c95e	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400c965	            0xeb26	                           jmp 0x400c98d	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400c967	    0x488b05000000	            mov rax, qword [0x0400c96e] 	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400c96e	          0x488b00	                    mov rax, qword [rax]	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400c971	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400c974	          0x4863d2	                         movsxd rdx, edx	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400c977	        0x48c1e203	                              shl rdx, 3	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400c97b	          0x4801d0	                            add rax, rdx	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400c97e	          0x488b00	                    mov rax, qword [rax]	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400c981	          0x4889c7	                            mov rdi, rax	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400c984	      0xe800000000	                          call 0x400c989	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400c989	        0x8345bc01	               add dword [rbp - 0x44], 1	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400c98d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400c990	          0x4863d0	                         movsxd rdx, eax	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400c993	    0x488b05000000	            mov rax, qword [0x0400c99a] 	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400c99a	        0x488b4008	                mov rax, qword [rax + 8]	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400c99e	          0x4839c2	                            cmp rdx, rax	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400c9a1	            0x7cc4	                            jl 0x400c967	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400c9a3	    0x488b05000000	            mov rax, qword [0x0400c9aa] 	      6185	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0x400c9aa	          0x488b00	                    mov rax, qword [rax]	      6185	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0x400c9ad	          0x4889c7	                            mov rdi, rax	      6185	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0x400c9b0	      0xe800000000	                          call 0x400c9b5	      6185	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0x400c9b5	    0x488b05000000	            mov rax, qword [0x0400c9bc] 	      6187	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9bc	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6187	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9bf	          0x885010	               mov byte [rax + 0x10], dl	      6187	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9c2	    0x488b05000000	            mov rax, qword [0x0400c9c9] 	      6188	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9c9	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      6188	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9cc	          0x895014	             mov dword [rax + 0x14], edx	      6188	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9cf	    0x488b05000000	            mov rax, qword [0x0400c9d6] 	      6189	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9d6	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      6189	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9d9	          0x4863d2	                         movsxd rdx, edx	      6189	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9dc	        0x48895008	                mov qword [rax + 8], rdx	      6189	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9e0	    0x488b05000000	            mov rax, qword [0x0400c9e7] 	      6190	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9e7	    0x48c740180000	               mov qword [rax + 0x18], 0	      6190	ops.c	FUNCTION_70	ELSE_3	IF_15
0x400c9ef	        0x837db400	               cmp dword [rbp - 0x4c], 0	      6191	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x400c9f3	            0x7513	                           jne 0x400ca08	      6191	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x400c9f5	    0x488b05000000	            mov rax, qword [0x0400c9fc] 	      6193	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x400c9fc	    0x48c700000000	                      mov qword [rax], 0	      6193	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x400ca03	      0xe9c5000000	                           jmp 0x400cacd	      6193	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x400ca08	    0x488b1d000000	            mov rbx, qword [0x0400ca0f] 	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x400ca0f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6199	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0x400ca12	            0x4898	                                    cdqe	      6199	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0x400ca14	          0xc1e003	                              shl eax, 3	      6199	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0x400ca17	            0x89c7	                            mov edi, eax	      6199	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0x400ca19	      0xe800000000	                          call 0x400ca1e	      6199	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0x400ca1e	          0x488903	                    mov qword [rbx], rax	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x400ca21	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x400ca28	            0xeb65	                           jmp 0x400ca8f	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x400ca2a	    0x488b05000000	            mov rax, qword [0x0400ca31] 	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x400ca31	          0x488b00	                    mov rax, qword [rax]	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x400ca34	          0x4885c0	                           test rax, rax	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x400ca37	            0x7521	                           jne 0x400ca5a	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x400ca39	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x400ca3c	            0x4898	                                    cdqe	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x400ca3e	    0x488d14c50000	                        lea rdx, [rax*8]	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x400ca46	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x400ca4a	          0x4801d0	                            add rax, rdx	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x400ca4d	          0x488b00	                    mov rax, qword [rax]	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x400ca50	          0x4889c7	                            mov rdi, rax	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x400ca53	      0xe800000000	                          call 0x400ca58	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x400ca58	            0xeb31	                           jmp 0x400ca8b	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x400ca5a	    0x488b05000000	            mov rax, qword [0x0400ca61] 	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca61	          0x488b00	                    mov rax, qword [rax]	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca64	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca67	          0x4863d2	                         movsxd rdx, edx	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca6a	        0x48c1e203	                              shl rdx, 3	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca6e	          0x4801c2	                            add rdx, rax	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca71	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca74	            0x4898	                                    cdqe	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca76	    0x488d0cc50000	                        lea rcx, [rax*8]	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca7e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca82	          0x4801c8	                            add rax, rcx	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca85	          0x488b00	                    mov rax, qword [rax]	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca88	          0x488902	                    mov qword [rdx], rax	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400ca8b	        0x8345bc01	               add dword [rbp - 0x44], 1	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x400ca8f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x400ca92	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x400ca95	            0x7c93	                            jl 0x400ca2a	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x400ca97	            0xeb34	                           jmp 0x400cacd	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x400ca99	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x400caa0	            0xeb23	                           jmp 0x400cac5	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x400caa2	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x400caa5	            0x4898	                                    cdqe	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x400caa7	    0x488d14c50000	                        lea rdx, [rax*8]	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x400caaf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x400cab3	          0x4801d0	                            add rax, rdx	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x400cab6	          0x488b00	                    mov rax, qword [rax]	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x400cab9	          0x4889c7	                            mov rdi, rax	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x400cabc	      0xe800000000	                          call 0x400cac1	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x400cac1	        0x8345bc01	               add dword [rbp - 0x44], 1	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x400cac5	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x400cac8	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x400cacb	            0x7cd5	                            jl 0x400caa2	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x400cacd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6215	ops.c	FUNCTION_70	CALL_22
0x400cad1	          0x4889c7	                            mov rdi, rax	      6215	ops.c	FUNCTION_70	CALL_22
0x400cad4	      0xe800000000	                          call 0x400cad9	      6215	ops.c	FUNCTION_70	CALL_22
0x400cad9	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6217	ops.c	FUNCTION_70
0x400cadc	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      6218	ops.c	FUNCTION_70
0x400cae0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6218	ops.c	FUNCTION_70
0x400cae9	            0x7405	                            je 0x400caf0	      6218	ops.c	FUNCTION_70
0x400caeb	      0xe800000000	                          call 0x400caf0	      6218	ops.c	FUNCTION_70
0x400caf0	        0x4883c458	                           add rsp, 0x58	      6218	ops.c	FUNCTION_70
0x400caf4	              0x5b	                                 pop rbx	      6218	ops.c	FUNCTION_70
0x400caf5	              0x5d	                                 pop rbp	      6218	ops.c	FUNCTION_70
0x400caf6	              0xc3	                                     ret	      6218	ops.c	FUNCTION_70
get_register	ELSE,2:DO,0:IF,8:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,10	105
0x400168d	              0x55	                                push rbp	       990	ops.c	FUNCTION_17
0x400168e	          0x4889e5	                            mov rbp, rsp	       990	ops.c	FUNCTION_17
0x4001691	              0x53	                                push rbx	       990	ops.c	FUNCTION_17
0x4001692	        0x4883ec28	                           sub rsp, 0x28	       990	ops.c	FUNCTION_17
0x4001696	          0x897ddc	             mov dword [rbp - 0x24], edi	       990	ops.c	FUNCTION_17
0x4001699	          0x8975d8	             mov dword [rbp - 0x28], esi	       990	ops.c	FUNCTION_17
0x400169c	        0x837ddc2a	           cmp dword [rbp - 0x24], 0x2a 	       997	ops.c	FUNCTION_17	IF_1
0x40016a0	            0x7527	                           jne 0x40016c9	       997	ops.c	FUNCTION_17	IF_1
0x40016a2	    0x8b0500000000	            mov eax, dword [0x040016a8] 	       997	ops.c	FUNCTION_17	IF_1
0x40016a8	            0x85c0	                           test eax, eax	       997	ops.c	FUNCTION_17	IF_1
0x40016aa	            0x741d	                            je 0x40016c9	       997	ops.c	FUNCTION_17	IF_1
0x40016ac	      0xe800000000	                          call 0x40016b1	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40016b1	            0x85c0	                           test eax, eax	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40016b3	            0x740a	                            je 0x40016bf	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40016b5	      0xbf00000000	                              mov edi, 0	      1000	ops.c	FUNCTION_17	IF_1	CALL_2
0x40016ba	      0xe800000000	                          call 0x40016bf	      1000	ops.c	FUNCTION_17	IF_1	CALL_2
0x40016bf	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1001	ops.c	FUNCTION_17	IF_1	CALL_3
0x40016c2	            0x89c7	                            mov edi, eax	      1001	ops.c	FUNCTION_17	IF_1	CALL_3
0x40016c4	      0xe800000000	                          call 0x40016c9	      1001	ops.c	FUNCTION_17	IF_1	CALL_3
0x40016c9	        0x837ddc2b	           cmp dword [rbp - 0x24], 0x2b 	      1003	ops.c	FUNCTION_17	IF_3
0x40016cd	            0x7527	                           jne 0x40016f6	      1003	ops.c	FUNCTION_17	IF_3
0x40016cf	    0x8b0500000000	            mov eax, dword [0x040016d5] 	      1003	ops.c	FUNCTION_17	IF_3
0x40016d5	            0x85c0	                           test eax, eax	      1003	ops.c	FUNCTION_17	IF_3
0x40016d7	            0x741d	                            je 0x40016f6	      1003	ops.c	FUNCTION_17	IF_3
0x40016d9	      0xe800000000	                          call 0x40016de	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40016de	            0x85c0	                           test eax, eax	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40016e0	            0x740a	                            je 0x40016ec	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40016e2	      0xbf00000000	                              mov edi, 0	      1006	ops.c	FUNCTION_17	IF_3	CALL_5
0x40016e7	      0xe800000000	                          call 0x40016ec	      1006	ops.c	FUNCTION_17	IF_3	CALL_5
0x40016ec	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1007	ops.c	FUNCTION_17	IF_3	CALL_6
0x40016ef	            0x89c7	                            mov edi, eax	      1007	ops.c	FUNCTION_17	IF_3	CALL_6
0x40016f1	      0xe800000000	                          call 0x40016f6	      1007	ops.c	FUNCTION_17	IF_3	CALL_6
0x40016f6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1011	ops.c	FUNCTION_17	CALL_7
0x40016f9	      0xbe00000000	                              mov esi, 0	      1011	ops.c	FUNCTION_17	CALL_7
0x40016fe	            0x89c7	                            mov edi, eax	      1011	ops.c	FUNCTION_17	CALL_7
0x4001700	      0xe800000000	                          call 0x4001705	      1011	ops.c	FUNCTION_17	CALL_7
0x4001705	      0xbf20000000	                           mov edi, 0x20	      1012	ops.c	FUNCTION_17	CALL_8
0x400170a	      0xe800000000	                          call 0x400170f	      1012	ops.c	FUNCTION_17	CALL_8
0x400170f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1012	ops.c	FUNCTION_17	CALL_8
0x4001713	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1013	ops.c	FUNCTION_17	IF_5
0x4001718	     0xf84df000000	                            je 0x40017fd	      1013	ops.c	FUNCTION_17	IF_5
0x400171e	    0x488b15000000	            mov rdx, qword [0x04001725] 	      1015	ops.c	FUNCTION_17	IF_5
0x4001725	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1015	ops.c	FUNCTION_17	IF_5
0x4001729	          0x488b0a	                    mov rcx, qword [rdx]	      1015	ops.c	FUNCTION_17	IF_5
0x400172c	          0x488908	                    mov qword [rax], rcx	      1015	ops.c	FUNCTION_17	IF_5
0x400172f	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1015	ops.c	FUNCTION_17	IF_5
0x4001733	        0x48894808	                mov qword [rax + 8], rcx	      1015	ops.c	FUNCTION_17	IF_5
0x4001737	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1015	ops.c	FUNCTION_17	IF_5
0x400173b	        0x48894810	             mov qword [rax + 0x10], rcx	      1015	ops.c	FUNCTION_17	IF_5
0x400173f	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1015	ops.c	FUNCTION_17	IF_5
0x4001743	        0x48895018	             mov qword [rax + 0x18], rdx	      1015	ops.c	FUNCTION_17	IF_5
0x4001747	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1016	ops.c	FUNCTION_17	IF_5	IF_6
0x400174b	     0xf849e000000	                            je 0x40017ef	      1016	ops.c	FUNCTION_17	IF_5	IF_6
0x4001751	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x4001755	        0x488b4008	                mov rax, qword [rax + 8]	      1019	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x4001759	          0x4885c0	                           test rax, rax	      1019	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x400175c	            0x750d	                           jne 0x400176b	      1019	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x400175e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1020	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x4001762	    0x48c700000000	                      mov qword [rax], 0	      1020	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x4001769	            0xeb1c	                           jmp 0x4001787	      1020	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x400176b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1023	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1
0x400176f	        0x488b4008	                mov rax, qword [rax + 8]	      1023	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1
0x4001773	          0xc1e003	                              shl eax, 3	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x4001776	            0x89c7	                            mov edi, eax	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x4001778	      0xe800000000	                          call 0x400177d	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x400177d	          0x4889c2	                            mov rdx, rax	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x4001780	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x4001784	          0x488910	                    mov qword [rax], rdx	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x4001787	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1024	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x400178b	          0x488b00	                    mov rax, qword [rax]	      1024	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x400178e	          0x4885c0	                           test rax, rax	      1024	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x4001791	            0x746a	                            je 0x40017fd	      1024	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x4001793	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400179a	            0xeb3e	                           jmp 0x40017da	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400179c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017a0	          0x488b00	                    mov rax, qword [rax]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017a3	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017a6	          0x4863d2	                         movsxd rdx, edx	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017a9	        0x48c1e203	                              shl rdx, 3	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017ad	        0x488d1c10	                    lea rbx, [rax + rdx]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017b1	    0x488b05000000	            mov rax, qword [0x040017b8] 	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017b8	          0x488b00	                    mov rax, qword [rax]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017bb	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017be	          0x4863d2	                         movsxd rdx, edx	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017c1	        0x48c1e203	                              shl rdx, 3	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017c5	          0x4801d0	                            add rax, rdx	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017c8	          0x488b00	                    mov rax, qword [rax]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017cb	          0x4889c7	                            mov rdi, rax	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017ce	      0xe800000000	                          call 0x40017d3	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017d3	          0x488903	                    mov qword [rbx], rax	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x40017d6	        0x8345e401	               add dword [rbp - 0x1c], 1	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x40017da	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x40017dd	          0x4863d0	                         movsxd rdx, eax	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x40017e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x40017e4	        0x488b4008	                mov rax, qword [rax + 8]	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x40017e8	          0x4839c2	                            cmp rdx, rax	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x40017eb	            0x7caf	                            jl 0x400179c	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x40017ed	            0xeb0e	                           jmp 0x40017fd	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x40017ef	    0x488b05000000	            mov rax, qword [0x040017f6] 	      1031	ops.c	FUNCTION_17	IF_5	ELSE_2
0x40017f6	    0x48c700000000	                      mov qword [rax], 0	      1031	ops.c	FUNCTION_17	IF_5	ELSE_2
0x40017fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1033	ops.c	FUNCTION_17
0x4001801	        0x4883c428	                           add rsp, 0x28	      1034	ops.c	FUNCTION_17
0x4001805	              0x5b	                                 pop rbx	      1034	ops.c	FUNCTION_17
0x4001806	              0x5d	                                 pop rbp	      1034	ops.c	FUNCTION_17
0x4001807	              0xc3	                                     ret	      1034	ops.c	FUNCTION_17
swapchar	ELSE,4:DO,0:IF,11:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,17	178
0x4004b3f	              0x55	                                push rbp	      2541	ops.c	FUNCTION_38
0x4004b40	          0x4889e5	                            mov rbp, rsp	      2541	ops.c	FUNCTION_38
0x4004b43	        0x4883ec30	                           sub rsp, 0x30	      2541	ops.c	FUNCTION_38
0x4004b47	          0x897ddc	             mov dword [rbp - 0x24], edi	      2541	ops.c	FUNCTION_38
0x4004b4a	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2541	ops.c	FUNCTION_38
0x4004b4e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2545	ops.c	FUNCTION_38	CALL_1
0x4004b52	          0x4889c7	                            mov rdi, rax	      2545	ops.c	FUNCTION_38	CALL_1
0x4004b55	      0xe800000000	                          call 0x4004b5a	      2545	ops.c	FUNCTION_38	CALL_1
0x4004b5a	          0x8945ec	             mov dword [rbp - 0x14], eax	      2545	ops.c	FUNCTION_38	CALL_1
0x4004b5d	        0x837dec7f	           cmp dword [rbp - 0x14], 0x7f 	      2548	ops.c	FUNCTION_38	IF_1
0x4004b61	            0x7e10	                           jle 0x4004b73	      2548	ops.c	FUNCTION_38	IF_1
0x4004b63	        0x837ddc0f	            cmp dword [rbp - 0x24], 0xf 	      2548	ops.c	FUNCTION_38	IF_1
0x4004b67	            0x750a	                           jne 0x4004b73	      2548	ops.c	FUNCTION_38	IF_1
0x4004b69	      0xb800000000	                              mov eax, 0	      2549	ops.c	FUNCTION_38	IF_1
0x4004b6e	      0xe94b020000	                           jmp 0x4004dbe	      2549	ops.c	FUNCTION_38	IF_1
0x4004b73	        0x837ddc0b	            cmp dword [rbp - 0x24], 0xb 	      2552	ops.c	FUNCTION_38	IF_2
0x4004b77	     0xf85a1000000	                           jne 0x4004c1e	      2552	ops.c	FUNCTION_38	IF_2
0x4004b7d	    0x817decdf0000	           cmp dword [rbp - 0x14], 0xdf 	      2552	ops.c	FUNCTION_38	IF_2
0x4004b84	     0xf8594000000	                           jne 0x4004c1e	      2552	ops.c	FUNCTION_38	IF_2
0x4004b8a	    0x8b0500000000	            mov eax, dword [0x04004b90] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b90	            0x85c0	                           test eax, eax	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b92	            0x7518	                           jne 0x4004bac	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b94	    0x488b05000000	            mov rax, qword [0x04004b9b] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b9b	      0xbe00000000	                              mov esi, 0	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004ba0	          0x4889c7	                            mov rdi, rax	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004ba3	      0xe800000000	                          call 0x4004ba8	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004ba8	            0x85c0	                           test eax, eax	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004baa	            0x7572	                           jne 0x4004c1e	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004bac	    0x488b05000000	            mov rax, qword [0x04004bb3] 	      2555	ops.c	FUNCTION_38	IF_2
0x4004bb3	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2555	ops.c	FUNCTION_38	IF_2
0x4004bb7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2555	ops.c	FUNCTION_38	IF_2
0x4004bbb	        0x488945f0	             mov qword [rbp - 0x10], rax	      2555	ops.c	FUNCTION_38	IF_2
0x4004bbf	        0x488955f8	                mov qword [rbp - 8], rdx	      2555	ops.c	FUNCTION_38	IF_2
0x4004bc3	    0x488b0d000000	            mov rcx, qword [0x04004bca] 	      2558	ops.c	FUNCTION_38	IF_2
0x4004bca	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2558	ops.c	FUNCTION_38	IF_2
0x4004bce	        0x488b5008	                mov rdx, qword [rax + 8]	      2558	ops.c	FUNCTION_38	IF_2
0x4004bd2	          0x488b00	                    mov rax, qword [rax]	      2558	ops.c	FUNCTION_38	IF_2
0x4004bd5	        0x48894138	             mov qword [rcx + 0x38], rax	      2558	ops.c	FUNCTION_38	IF_2
0x4004bd9	        0x48895140	             mov qword [rcx + 0x40], rdx	      2558	ops.c	FUNCTION_38	IF_2
0x4004bdd	      0xbf00000000	                              mov edi, 0	      2559	ops.c	FUNCTION_38	IF_2	CALL_3
0x4004be2	      0xe800000000	                          call 0x4004be7	      2559	ops.c	FUNCTION_38	IF_2	CALL_3
0x4004be7	      0xbf53000000	                           mov edi, 0x53	      2560	ops.c	FUNCTION_38	IF_2	CALL_4
0x4004bec	      0xe800000000	                          call 0x4004bf1	      2560	ops.c	FUNCTION_38	IF_2	CALL_4
0x4004bf1	      0xbf53000000	                           mov edi, 0x53	      2561	ops.c	FUNCTION_38	IF_2	CALL_5
0x4004bf6	      0xe800000000	                          call 0x4004bfb	      2561	ops.c	FUNCTION_38	IF_2	CALL_5
0x4004bfb	    0x488b0d000000	            mov rcx, qword [0x04004c02] 	      2562	ops.c	FUNCTION_38	IF_2
0x4004c02	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2562	ops.c	FUNCTION_38	IF_2
0x4004c06	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2562	ops.c	FUNCTION_38	IF_2
0x4004c0a	        0x48894138	             mov qword [rcx + 0x38], rax	      2562	ops.c	FUNCTION_38	IF_2
0x4004c0e	        0x48895140	             mov qword [rcx + 0x40], rdx	      2562	ops.c	FUNCTION_38	IF_2
0x4004c12	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2563	ops.c	FUNCTION_38	IF_2	CALL_6
0x4004c16	          0x4889c7	                            mov rdi, rax	      2563	ops.c	FUNCTION_38	IF_2	CALL_6
0x4004c19	      0xe800000000	                          call 0x4004c1e	      2563	ops.c	FUNCTION_38	IF_2	CALL_6
0x4004c1e	    0x8b0500000000	            mov eax, dword [0x04004c24] 	      2566	ops.c	FUNCTION_38	IF_3
0x4004c24	            0x85c0	                           test eax, eax	      2566	ops.c	FUNCTION_38	IF_3
0x4004c26	            0x7413	                            je 0x4004c3b	      2566	ops.c	FUNCTION_38	IF_3
0x4004c28	    0x817decff0000	           cmp dword [rbp - 0x14], 0xff 	      2566	ops.c	FUNCTION_38	IF_3
0x4004c2f	            0x7e0a	                           jle 0x4004c3b	      2566	ops.c	FUNCTION_38	IF_3
0x4004c31	      0xb800000000	                              mov eax, 0	      2567	ops.c	FUNCTION_38	IF_3
0x4004c36	      0xe983010000	                           jmp 0x4004dbe	      2567	ops.c	FUNCTION_38	IF_3
0x4004c3b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2569	ops.c	FUNCTION_38
0x4004c3e	          0x8945e8	             mov dword [rbp - 0x18], eax	      2569	ops.c	FUNCTION_38
0x4004c41	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4004c44	            0x89c7	                            mov edi, eax	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4004c46	      0xe800000000	                          call 0x4004c4b	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4004c4b	            0x85c0	                           test eax, eax	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4004c4d	            0x7445	                            je 0x4004c94	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4004c4f	        0x837ddc0f	            cmp dword [rbp - 0x24], 0xf 	      2572	ops.c	FUNCTION_38	IF_4	IF_5
0x4004c53	            0x752a	                           jne 0x4004c7f	      2572	ops.c	FUNCTION_38	IF_4	IF_5
0x4004c55	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c58	          0x8d48ac	                   lea ecx, [rax - 0x54]	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c5b	      0xba4fecc44e	                     mov edx, 0x4ec4ec4f	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c60	            0x89c8	                            mov eax, ecx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c62	            0xf7ea	                                imul edx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c64	          0xc1fa03	                              sar edx, 3	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c67	            0x89c8	                            mov eax, ecx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c69	          0xc1f81f	                           sar eax, 0x1f	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c6c	            0x29c2	                            sub edx, eax	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c6e	            0x89d0	                            mov eax, edx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c70	          0x6bc01a	                     imul eax, eax, 0x1a	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c73	            0x29c1	                            sub ecx, eax	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c75	            0x89c8	                            mov eax, ecx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c77	          0x83c061	                           add eax, 0x61	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c7a	          0x8945e8	             mov dword [rbp - 0x18], eax	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c7d	            0xeb66	                           jmp 0x4004ce5	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004c7f	        0x837ddc0c	            cmp dword [rbp - 0x24], 0xc 	      2574	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004c83	            0x7460	                            je 0x4004ce5	      2574	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004c85	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004c88	            0x89c7	                            mov edi, eax	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004c8a	      0xe800000000	                          call 0x4004c8f	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004c8f	          0x8945e8	             mov dword [rbp - 0x18], eax	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004c92	            0xeb51	                           jmp 0x4004ce5	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004c94	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4004c97	            0x89c7	                            mov edi, eax	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4004c99	      0xe800000000	                          call 0x4004c9e	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4004c9e	            0x85c0	                           test eax, eax	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4004ca0	            0x7443	                            je 0x4004ce5	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4004ca2	        0x837ddc0f	            cmp dword [rbp - 0x24], 0xf 	      2579	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x4004ca6	            0x752a	                           jne 0x4004cd2	      2579	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x4004ca8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cab	          0x8d48cc	                   lea ecx, [rax - 0x34]	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cae	      0xba4fecc44e	                     mov edx, 0x4ec4ec4f	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cb3	            0x89c8	                            mov eax, ecx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cb5	            0xf7ea	                                imul edx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cb7	          0xc1fa03	                              sar edx, 3	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cba	            0x89c8	                            mov eax, ecx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cbc	          0xc1f81f	                           sar eax, 0x1f	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cbf	            0x29c2	                            sub edx, eax	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cc1	            0x89d0	                            mov eax, edx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cc3	          0x6bc01a	                     imul eax, eax, 0x1a	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cc6	            0x29c1	                            sub ecx, eax	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cc8	            0x89c8	                            mov eax, ecx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cca	          0x83c041	                           add eax, 0x41	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004ccd	          0x8945e8	             mov dword [rbp - 0x18], eax	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cd0	            0xeb13	                           jmp 0x4004ce5	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004cd2	        0x837ddc0b	            cmp dword [rbp - 0x24], 0xb 	      2581	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004cd6	            0x740d	                            je 0x4004ce5	      2581	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004cd8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004cdb	            0x89c7	                            mov edi, eax	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004cdd	      0xe800000000	                          call 0x4004ce2	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004ce2	          0x8945e8	             mov dword [rbp - 0x18], eax	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004ce5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2584	ops.c	FUNCTION_38	IF_10
0x4004ce8	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2584	ops.c	FUNCTION_38	IF_10
0x4004ceb	     0xf84c8000000	                            je 0x4004db9	      2584	ops.c	FUNCTION_38	IF_10
0x4004cf1	    0x8b0500000000	            mov eax, dword [0x04004cf7] 	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004cf7	            0x85c0	                           test eax, eax	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004cf9	     0xf8481000000	                            je 0x4004d80	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004cff	        0x837dec7f	           cmp dword [rbp - 0x14], 0x7f 	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d03	            0x7f06	                            jg 0x4004d0b	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d05	        0x837de87f	           cmp dword [rbp - 0x18], 0x7f 	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d09	            0x7e75	                           jle 0x4004d80	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d0b	    0x488b05000000	            mov rax, qword [0x04004d12] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d12	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d16	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d1a	        0x488945f0	             mov qword [rbp - 0x10], rax	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d1e	        0x488955f8	                mov qword [rbp - 8], rdx	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d22	    0x488b0d000000	            mov rcx, qword [0x04004d29] 	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d29	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d2d	        0x488b5008	                mov rdx, qword [rax + 8]	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d31	          0x488b00	                    mov rax, qword [rax]	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d34	        0x48894138	             mov qword [rcx + 0x38], rax	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d38	        0x48895140	             mov qword [rcx + 0x40], rdx	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d3c	      0xe800000000	                          call 0x4004d41	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d41	          0x4889c7	                            mov rdi, rax	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d44	      0xe800000000	                          call 0x4004d49	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d49	            0x4898	                                    cdqe	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d4b	      0xba00000000	                              mov edx, 0	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d50	      0xbe00000000	                              mov esi, 0	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d55	          0x4889c7	                            mov rdi, rax	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d58	      0xe800000000	                          call 0x4004d5d	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d5d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x4004d60	            0x89c7	                            mov edi, eax	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x4004d62	      0xe800000000	                          call 0x4004d67	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x4004d67	    0x488b0d000000	            mov rcx, qword [0x04004d6e] 	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d6e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d72	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d76	        0x48894138	             mov qword [rcx + 0x38], rax	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d7a	        0x48895140	             mov qword [rcx + 0x40], rdx	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d7e	            0xeb32	                           jmp 0x4004db2	      2588	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d80	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004d84	          0x488b08	                    mov rcx, qword [rax]	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004d87	    0x488b05000000	            mov rax, qword [0x04004d8e] 	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004d8e	      0xba01000000	                              mov edx, 1	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004d93	          0x4889ce	                            mov rsi, rcx	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004d96	          0x4889c7	                            mov rdi, rax	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004d99	      0xe800000000	                          call 0x4004d9e	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004d9e	          0x4889c2	                            mov rdx, rax	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004da1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004da5	          0x8b4008	                mov eax, dword [rax + 8]	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004da8	            0x4898	                                    cdqe	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004daa	          0x4801d0	                            add rax, rdx	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004dad	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004db0	            0x8810	                      mov byte [rax], dl	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004db2	      0xb801000000	                              mov eax, 1	      2600	ops.c	FUNCTION_38	IF_10
0x4004db7	            0xeb05	                           jmp 0x4004dbe	      2600	ops.c	FUNCTION_38	IF_10
0x4004db9	      0xb800000000	                              mov eax, 0	      2602	ops.c	FUNCTION_38
0x4004dbe	              0xc9	                                   leave	      2603	ops.c	FUNCTION_38
0x4004dbf	              0xc3	                                     ret	      2603	ops.c	FUNCTION_38
get_expr_line	ELSE,0:DO,0:IF,3:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,3	39
0x40013b7	              0x55	                                push rbp	       824	ops.c	FUNCTION_12
0x40013b8	          0x4889e5	                            mov rbp, rsp	       824	ops.c	FUNCTION_12
0x40013bb	        0x4883ec10	                           sub rsp, 0x10	       824	ops.c	FUNCTION_12
0x40013bf	    0x488b05000000	            mov rax, qword [0x040013c6] 	       829	ops.c	FUNCTION_12	IF_1
0x40013c6	          0x4885c0	                           test rax, rax	       829	ops.c	FUNCTION_12	IF_1
0x40013c9	            0x7507	                           jne 0x40013d2	       829	ops.c	FUNCTION_12	IF_1
0x40013cb	      0xb800000000	                              mov eax, 0	       830	ops.c	FUNCTION_12	IF_1
0x40013d0	            0xeb7a	                           jmp 0x400144c	       830	ops.c	FUNCTION_12	IF_1
0x40013d2	    0x488b05000000	            mov rax, qword [0x040013d9] 	       834	ops.c	FUNCTION_12	CALL_1
0x40013d9	          0x4889c7	                            mov rdi, rax	       834	ops.c	FUNCTION_12	CALL_1
0x40013dc	      0xe800000000	                          call 0x40013e1	       834	ops.c	FUNCTION_12	CALL_1
0x40013e1	        0x488945f0	             mov qword [rbp - 0x10], rax	       834	ops.c	FUNCTION_12	CALL_1
0x40013e5	      0x48837df000	               cmp qword [rbp - 0x10], 0	       835	ops.c	FUNCTION_12	IF_2
0x40013ea	            0x7507	                           jne 0x40013f3	       835	ops.c	FUNCTION_12	IF_2
0x40013ec	      0xb800000000	                              mov eax, 0	       836	ops.c	FUNCTION_12	IF_2
0x40013f1	            0xeb59	                           jmp 0x400144c	       836	ops.c	FUNCTION_12	IF_2
0x40013f3	    0x8b0500000000	            mov eax, dword [0x040013f9] 	       840	ops.c	FUNCTION_12	IF_3
0x40013f9	          0x83f809	                              cmp eax, 9	       840	ops.c	FUNCTION_12	IF_3
0x40013fc	            0x7e06	                           jle 0x4001404	       840	ops.c	FUNCTION_12	IF_3
0x40013fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       841	ops.c	FUNCTION_12	IF_3
0x4001402	            0xeb48	                           jmp 0x400144c	       841	ops.c	FUNCTION_12	IF_3
0x4001404	    0x8b0500000000	            mov eax, dword [0x0400140a] 	       843	ops.c	FUNCTION_12
0x400140a	          0x83c001	                              add eax, 1	       843	ops.c	FUNCTION_12
0x400140d	    0x890500000000	            mov dword [0x04001413], eax 	       843	ops.c	FUNCTION_12
0x4001413	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       844	ops.c	FUNCTION_12	CALL_2
0x4001417	      0xba01000000	                              mov edx, 1	       844	ops.c	FUNCTION_12	CALL_2
0x400141c	      0xbe00000000	                              mov esi, 0	       844	ops.c	FUNCTION_12	CALL_2
0x4001421	          0x4889c7	                            mov rdi, rax	       844	ops.c	FUNCTION_12	CALL_2
0x4001424	      0xe800000000	                          call 0x4001429	       844	ops.c	FUNCTION_12	CALL_2
0x4001429	        0x488945f8	                mov qword [rbp - 8], rax	       844	ops.c	FUNCTION_12	CALL_2
0x400142d	    0x8b0500000000	            mov eax, dword [0x04001433] 	       845	ops.c	FUNCTION_12
0x4001433	          0x83e801	                              sub eax, 1	       845	ops.c	FUNCTION_12
0x4001436	    0x890500000000	            mov dword [0x0400143c], eax 	       845	ops.c	FUNCTION_12
0x400143c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       846	ops.c	FUNCTION_12	CALL_3
0x4001440	          0x4889c7	                            mov rdi, rax	       846	ops.c	FUNCTION_12	CALL_3
0x4001443	      0xe800000000	                          call 0x4001448	       846	ops.c	FUNCTION_12	CALL_3
0x4001448	        0x488b45f8	                mov rax, qword [rbp - 8]	       847	ops.c	FUNCTION_12
0x400144c	              0xc9	                                   leave	       848	ops.c	FUNCTION_12
0x400144d	              0xc3	                                     ret	       848	ops.c	FUNCTION_12
op_tilde	ELSE,4:DO,0:IF,14:functions,0:WHILE,1:FOR,2:SWITCH,0:CALL,31	370
0x4004484	              0x55	                                push rbp	      2389	ops.c	FUNCTION_36
0x4004485	          0x4889e5	                            mov rbp, rsp	      2389	ops.c	FUNCTION_36
0x4004488	              0x53	                                push rbx	      2389	ops.c	FUNCTION_36
0x4004489	    0x4881ec980000	                           sub rsp, 0x98	      2389	ops.c	FUNCTION_36
0x4004490	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      2389	ops.c	FUNCTION_36
0x4004497	    0x64488b042528	                mov rax, qword fs:[0x28]	      2389	ops.c	FUNCTION_36
0x40044a0	        0x488945e8	             mov qword [rbp - 0x18], rax	      2389	ops.c	FUNCTION_36
0x40044a4	            0x31c0	                            xor eax, eax	      2389	ops.c	FUNCTION_36
0x40044a6	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      2392	ops.c	FUNCTION_36
0x40044b0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2395	ops.c	FUNCTION_36	IF_1
0x40044b7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2395	ops.c	FUNCTION_36	IF_1
0x40044bb	        0x488d5001	                      lea rdx, [rax + 1]	      2395	ops.c	FUNCTION_36	IF_1
0x40044bf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40044c6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40044ca	        0x4883e801	                              sub rax, 1	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40044ce	          0x4889d6	                            mov rsi, rdx	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40044d1	          0x4889c7	                            mov rdi, rax	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40044d4	      0xe800000000	                          call 0x40044d9	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40044d9	            0x85c0	                           test eax, eax	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40044db	     0xf84ad050000	                            je 0x4004a8e	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40044e1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2398	ops.c	FUNCTION_36
0x40044e8	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2398	ops.c	FUNCTION_36
0x40044ec	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2398	ops.c	FUNCTION_36
0x40044f0	        0x48894590	             mov qword [rbp - 0x70], rax	      2398	ops.c	FUNCTION_36
0x40044f4	        0x48895598	             mov qword [rbp - 0x68], rdx	      2398	ops.c	FUNCTION_36
0x40044f8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2399	ops.c	FUNCTION_36	IF_2
0x40044ff	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2399	ops.c	FUNCTION_36	IF_2
0x4004502	            0x85c0	                           test eax, eax	      2399	ops.c	FUNCTION_36	IF_2
0x4004504	     0xf842c010000	                            je 0x4004636	      2399	ops.c	FUNCTION_36	IF_2
0x400450a	      0xe9d1000000	                           jmp 0x40045e0	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x400450f	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4004513	        0x488d75a0	                   lea rsi, [rbp - 0x60]	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4004517	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x400451e	      0xb900000000	                              mov ecx, 0	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4004523	          0x4889c7	                            mov rdi, rax	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4004526	      0xe822630000	                     call sym.block_prep	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x400452b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2406	ops.c	FUNCTION_36	IF_2	FOR_1
0x400452e	          0x894598	             mov dword [rbp - 0x68], eax	      2406	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004531	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4004534	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x400453b	            0x8b00	                    mov eax, dword [rax]	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x400453d	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4004541	          0x4889ce	                            mov rsi, rcx	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4004544	            0x89c7	                            mov edi, eax	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4004546	      0xe862050000	                      call sym.swapchars	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x400454b	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4004551	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2408	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004557	     0x98574ffffff	              or dword [rbp - 0x8c], eax	      2408	ops.c	FUNCTION_36	IF_2	FOR_1
0x400455d	      0xe800000000	                          call 0x4004562	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4004562	            0x85c0	                           test eax, eax	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4004564	            0x746e	                            je 0x40045d4	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4004566	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x400456d	            0x7465	                            je 0x40045d4	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x400456f	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4004573	    0x488b05000000	            mov rax, qword [0x0400457a] 	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x400457a	      0xba00000000	                              mov edx, 0	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x400457f	          0x4889ce	                            mov rsi, rcx	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4004582	          0x4889c7	                            mov rdi, rax	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4004585	      0xe800000000	                          call 0x400458a	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x400458a	        0x48894580	             mov qword [rbp - 0x80], rax	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x400458e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2416	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3
0x4004591	          0x4863c8	                         movsxd rcx, eax	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4004594	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4004597	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x400459b	    0x488b05000000	            mov rax, qword [0x040045a2] 	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x40045a2	          0x4889c7	                            mov rdi, rax	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x40045a5	      0xe800000000	                          call 0x40045aa	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x40045aa	          0x8b7da8	             mov edi, dword [rbp - 0x58]	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40045ad	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2418	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3
0x40045b0	          0x4863d0	                         movsxd rdx, eax	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40045b3	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40045b7	        0x488d0c02	                    lea rcx, [rdx + rax]	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40045bb	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40045be	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40045c2	    0x488b05000000	            mov rax, qword [0x040045c9] 	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40045c9	          0x4189f8	                            mov r8d, edi	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40045cc	          0x4889c7	                            mov rdi, rax	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40045cf	      0xe800000000	                          call 0x40045d4	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x40045d4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40045d8	        0x4883c001	                              add rax, 1	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40045dc	        0x48894590	             mov qword [rbp - 0x70], rax	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40045e0	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40045e4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40045eb	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40045ef	          0x4839c2	                            cmp rdx, rax	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40045f2	     0xf8e17ffffff	                           jle 0x400450f	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x40045f8	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      2422	ops.c	FUNCTION_36	IF_2	IF_4
0x40045ff	     0xf84bd030000	                            je 0x40049c2	      2422	ops.c	FUNCTION_36	IF_2	IF_4
0x4004605	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x400460c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004610	        0x488d5001	                      lea rdx, [rax + 1]	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004614	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x400461b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x400461f	      0xb900000000	                              mov ecx, 0	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004624	      0xbe00000000	                              mov esi, 0	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004629	          0x4889c7	                            mov rdi, rax	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x400462c	      0xe800000000	                          call 0x4004631	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004631	      0xe98c030000	                           jmp 0x40049c2	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004636	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2427	ops.c	FUNCTION_36	ELSE_1	IF_5
0x400463d	          0x8b4008	                mov eax, dword [rax + 8]	      2427	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4004640	          0x83f801	                              cmp eax, 1	      2427	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4004643	            0x7563	                           jne 0x40046a8	      2427	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4004645	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2429	ops.c	FUNCTION_36	ELSE_1	IF_5
0x400464c	    0xc74028000000	               mov dword [rax + 0x28], 0	      2429	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4004653	    0xc74598000000	               mov dword [rbp - 0x68], 0	      2430	ops.c	FUNCTION_36	ELSE_1	IF_5
0x400465a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4004661	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4004665	          0x4889c7	                            mov rdi, rax	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4004668	      0xe800000000	                          call 0x400466d	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x400466d	          0x4889c7	                            mov rdi, rax	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4004670	      0xe800000000	                          call 0x4004675	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4004675	            0x89c2	                            mov edx, eax	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4004677	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x400467e	          0x895038	             mov dword [rax + 0x38], edx	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4004681	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2432	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4004688	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2432	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x400468b	            0x85c0	                           test eax, eax	      2432	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x400468d	            0x743a	                            je 0x40046c9	      2432	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x400468f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4004696	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4004699	          0x8d50ff	                      lea edx, [rax - 1]	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x400469c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x40046a3	          0x895038	             mov dword [rax + 0x38], edx	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x40046a6	            0xeb21	                           jmp 0x40046c9	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x40046a8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x40046af	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x40046b2	            0x85c0	                           test eax, eax	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x40046b4	            0x7513	                           jne 0x40046c9	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x40046b6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x40046bd	        0x4883c030	                           add rax, 0x30	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x40046c1	          0x4889c7	                            mov rdi, rax	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x40046c4	      0xe800000000	                          call 0x40046c9	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x40046c9	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40046cd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40046d4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40046d8	          0x4839c2	                            cmp rdx, rax	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40046db	            0x7536	                           jne 0x4004713	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40046dd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2440	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40046e4	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2440	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40046e7	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2440	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40046ea	            0x29c2	                            sub edx, eax	      2440	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40046ec	            0x89d0	                            mov eax, edx	      2440	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40046ee	          0x8d5001	                      lea edx, [rax + 1]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x40046f1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x40046f8	            0x8b00	                    mov eax, dword [rax]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x40046fa	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x40046fe	          0x4889ce	                            mov rsi, rcx	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4004701	            0x89c7	                            mov edi, eax	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4004703	      0xe8a5030000	                      call sym.swapchars	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4004708	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x400470e	      0xe905010000	                           jmp 0x4004818	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4004713	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2445	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x4004717	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2445	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x400471e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2445	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x4004722	          0x4839c2	                            cmp rdx, rax	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004725	            0x750f	                           jne 0x4004736	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004727	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2445	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x400472e	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2445	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x4004731	          0x8d5001	                      lea edx, [rax + 1]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004734	            0xeb16	                           jmp 0x400474c	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004736	        0x488d4590	                   lea rax, [rbp - 0x70]	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x400473a	          0x4889c7	                            mov rdi, rax	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x400473d	      0xe800000000	                          call 0x4004742	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4004742	          0x4889c7	                            mov rdi, rax	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4004745	      0xe800000000	                          call 0x400474a	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x400474a	            0x89c2	                            mov edx, eax	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x400474c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004753	            0x8b00	                    mov eax, dword [rax]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004755	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004759	          0x4889ce	                            mov rsi, rcx	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x400475c	            0x89c7	                            mov edi, eax	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x400475e	      0xe84a030000	                      call sym.swapchars	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004763	     0x98574ffffff	              or dword [rbp - 0x8c], eax	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004769	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004770	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004774	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004778	          0x4839c2	                            cmp rdx, rax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x400477b	            0x741a	                            je 0x4004797	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x400477d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004784	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004788	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x400478c	          0x4839c2	                            cmp rdx, rax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x400478f	     0xf8c83000000	                            jl 0x4004818	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004795	            0xeb35	                           jmp 0x40047cc	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004797	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x400479e	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047a1	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047a4	            0x39c2	                            cmp edx, eax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047a6	            0x7413	                            je 0x40047bb	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047a8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047af	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047b2	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047b5	            0x39c2	                            cmp edx, eax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047b7	            0x7c5f	                            jl 0x4004818	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047b9	            0xeb11	                           jmp 0x40047cc	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047bb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047c2	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047c5	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047c8	            0x39c2	                            cmp edx, eax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047ca	            0x7c4c	                            jl 0x4004818	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047cc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047d3	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047d7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047db	          0x4839c2	                            cmp rdx, rax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047de	            0x7522	                           jne 0x4004802	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047e0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047e7	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047ea	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047ed	            0x39c2	                            cmp edx, eax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047ef	            0x7511	                           jne 0x4004802	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047f1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047f8	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047fb	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x40047fe	            0x39c2	                            cmp edx, eax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004800	            0x7416	                            je 0x4004818	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004802	        0x488d4590	                   lea rax, [rbp - 0x70]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004806	          0x4889c7	                            mov rdi, rax	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004809	      0xe800000000	                          call 0x400480e	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x400480e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004811	            0x7405	                            je 0x4004818	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004813	      0xe9fbfeffff	                           jmp 0x4004713	      2449	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x4004818	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      2450	ops.c	FUNCTION_36	ELSE_1	IF_10
0x400481f	     0xf849d010000	                            je 0x40049c2	      2450	ops.c	FUNCTION_36	ELSE_1	IF_10
0x4004825	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x400482c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004830	        0x488d5001	                      lea rdx, [rax + 1]	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004834	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x400483b	          0x8b7028	            mov esi, dword [rax + 0x28] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x400483e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004845	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004849	      0xb900000000	                              mov ecx, 0	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x400484e	          0x4889c7	                            mov rdi, rax	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004851	      0xe800000000	                          call 0x4004856	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004856	      0xe800000000	                          call 0x400485b	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x400485b	            0x85c0	                           test eax, eax	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x400485d	     0xf845f010000	                            je 0x40049c2	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4004863	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x400486a	     0xf8452010000	                            je 0x40049c2	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4004870	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004877	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x400487b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x400487f	        0x48894590	             mov qword [rbp - 0x70], rax	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004883	        0x48895598	             mov qword [rbp - 0x68], rdx	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004887	      0xe999000000	                           jmp 0x4004925	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x400488c	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4004890	    0x488b05000000	            mov rax, qword [0x04004897] 	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4004897	      0xba00000000	                              mov edx, 0	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x400489c	          0x4889ce	                            mov rsi, rcx	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x400489f	          0x4889c7	                            mov rdi, rax	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x40048a2	      0xe800000000	                          call 0x40048a7	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x40048a7	        0x48894588	             mov qword [rbp - 0x78], rax	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x40048ab	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x40048af	          0x4889c7	                            mov rdi, rax	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x40048b2	      0xe800000000	                          call 0x40048b7	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x40048b7	            0x89c2	                            mov edx, eax	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x40048b9	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x40048bc	            0x29c2	                            sub edx, eax	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x40048be	            0x89d0	                            mov eax, edx	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x40048c0	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x40048c6	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x40048cc	          0x4863c8	                         movsxd rcx, eax	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x40048cf	          0x8b5598	             mov edx, dword [rbp - 0x68]	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x40048d2	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x40048d6	    0x488b05000000	            mov rax, qword [0x040048dd] 	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x40048dd	          0x4889c7	                            mov rdi, rax	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x40048e0	      0xe800000000	                          call 0x40048e5	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x40048e5	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2467	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x40048e8	          0x4863d0	                         movsxd rdx, eax	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x40048eb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x40048ef	        0x488d0c02	                    lea rcx, [rdx + rax]	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x40048f3	          0x8b5598	             mov edx, dword [rbp - 0x68]	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x40048f6	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x40048fa	    0x488b05000000	            mov rax, qword [0x04004901] 	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4004901	    0x8bbd7cffffff	             mov edi, dword [rbp - 0x84]	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4004907	          0x4189f8	                            mov r8d, edi	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x400490a	          0x4889c7	                            mov rdi, rax	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x400490d	      0xe800000000	                          call 0x4004912	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4004912	    0xc74598000000	               mov dword [rbp - 0x68], 0	      2468	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004919	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x400491d	        0x4883c001	                              add rax, 1	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004921	        0x48894590	             mov qword [rbp - 0x70], rax	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004925	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004929	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004930	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004934	          0x4839c2	                            cmp rdx, rax	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004937	     0xf8c4fffffff	                            jl 0x400488c	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x400493d	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4004941	    0x488b05000000	            mov rax, qword [0x04004948] 	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4004948	      0xba00000000	                              mov edx, 0	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x400494d	          0x4889ce	                            mov rsi, rcx	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4004950	          0x4889c7	                            mov rdi, rax	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4004953	      0xe800000000	                          call 0x4004958	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4004958	        0x48894588	             mov qword [rbp - 0x78], rax	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x400495c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004963	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004966	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004969	            0x29c2	                            sub edx, eax	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x400496b	            0x89d0	                            mov eax, edx	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x400496d	          0x83c001	                              add eax, 1	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004970	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004976	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x400497c	          0x4863c8	                         movsxd rcx, eax	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x400497f	          0x8b5598	             mov edx, dword [rbp - 0x68]	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4004982	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4004986	    0x488b05000000	            mov rax, qword [0x0400498d] 	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x400498d	          0x4889c7	                            mov rdi, rax	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4004990	      0xe800000000	                          call 0x4004995	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4004995	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2475	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004998	          0x4863d0	                         movsxd rdx, eax	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x400499b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x400499f	        0x488d0c02	                    lea rcx, [rdx + rax]	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x40049a3	          0x8b5598	             mov edx, dword [rbp - 0x68]	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x40049a6	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x40049aa	    0x488b05000000	            mov rax, qword [0x040049b1] 	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x40049b1	    0x8bbd7cffffff	             mov edi, dword [rbp - 0x84]	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x40049b7	          0x4189f8	                            mov r8d, edi	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x40049ba	          0x4889c7	                            mov rdi, rax	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x40049bd	      0xe800000000	                          call 0x40049c2	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x40049c2	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      2481	ops.c	FUNCTION_36	IF_12
0x40049c9	            0x7518	                           jne 0x40049e3	      2481	ops.c	FUNCTION_36	IF_12
0x40049cb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2481	ops.c	FUNCTION_36	IF_12
0x40049d2	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2481	ops.c	FUNCTION_36	IF_12
0x40049d5	            0x85c0	                           test eax, eax	      2481	ops.c	FUNCTION_36	IF_12
0x40049d7	            0x740a	                            je 0x40049e3	      2481	ops.c	FUNCTION_36	IF_12
0x40049d9	      0xbf14000000	                           mov edi, 0x14	      2483	ops.c	FUNCTION_36	CALL_27
0x40049de	      0xe800000000	                          call 0x40049e3	      2483	ops.c	FUNCTION_36	CALL_27
0x40049e3	    0x488b0d000000	            mov rcx, qword [0x040049ea] 	      2488	ops.c	FUNCTION_36
0x40049ea	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2488	ops.c	FUNCTION_36
0x40049f1	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2488	ops.c	FUNCTION_36
0x40049f5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2488	ops.c	FUNCTION_36
0x40049f9	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      2488	ops.c	FUNCTION_36
0x4004a00	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      2488	ops.c	FUNCTION_36
0x4004a07	    0x488b0d000000	            mov rcx, qword [0x04004a0e] 	      2489	ops.c	FUNCTION_36
0x4004a0e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2489	ops.c	FUNCTION_36
0x4004a15	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2489	ops.c	FUNCTION_36
0x4004a19	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2489	ops.c	FUNCTION_36
0x4004a1d	    0x488981001200	          mov qword [rcx + 0x1200], rax 	      2489	ops.c	FUNCTION_36
0x4004a24	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	      2489	ops.c	FUNCTION_36
0x4004a2b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2491	ops.c	FUNCTION_36	IF_13
0x4004a32	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      2491	ops.c	FUNCTION_36	IF_13
0x4004a36	    0x488b05000000	            mov rax, qword [0x04004a3d] 	      2491	ops.c	FUNCTION_36	IF_13
0x4004a3d	          0x4839c2	                            cmp rdx, rax	      2491	ops.c	FUNCTION_36	IF_13
0x4004a40	            0x7e4d	                           jle 0x4004a8f	      2491	ops.c	FUNCTION_36	IF_13
0x4004a42	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2493	ops.c	FUNCTION_36	IF_13	IF_14
0x4004a49	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2493	ops.c	FUNCTION_36	IF_13	IF_14
0x4004a4d	        0x4883f801	                              cmp rax, 1	      2493	ops.c	FUNCTION_36	IF_13	IF_14
0x4004a51	            0x7514	                           jne 0x4004a67	      2493	ops.c	FUNCTION_36	IF_13	IF_14
0x4004a53	      0xbf00000000	                              mov edi, 0	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4004a58	      0xe800000000	                          call 0x4004a5d	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4004a5d	          0x4889c7	                            mov rdi, rax	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4004a60	      0xe800000000	                          call 0x4004a65	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4004a65	            0xeb28	                           jmp 0x4004a8f	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4004a67	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4004a6e	        0x488b5850	            mov rbx, qword [rax + 0x50] 	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4004a72	      0xbf00000000	                              mov edi, 0	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4004a77	      0xe800000000	                          call 0x4004a7c	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4004a7c	          0x4889de	                            mov rsi, rbx	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4004a7f	          0x4889c7	                            mov rdi, rax	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4004a82	      0xb800000000	                              mov eax, 0	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4004a87	      0xe800000000	                          call 0x4004a8c	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4004a8c	            0xeb01	                           jmp 0x4004a8f	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4004a8e	              0x90	                                     nop	      2396	ops.c	FUNCTION_36	IF_1
0x4004a8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2498	ops.c	FUNCTION_36
0x4004a93	    0x644833042528	                xor rax, qword fs:[0x28]	      2498	ops.c	FUNCTION_36
0x4004a9c	            0x7405	                            je 0x4004aa3	      2498	ops.c	FUNCTION_36
0x4004a9e	      0xe800000000	                          call 0x4004aa3	      2498	ops.c	FUNCTION_36
0x4004aa3	    0x4881c4980000	                           add rsp, 0x98	      2498	ops.c	FUNCTION_36
0x4004aaa	              0x5b	                                 pop rbx	      2498	ops.c	FUNCTION_36
0x4004aab	              0x5d	                                 pop rbp	      2498	ops.c	FUNCTION_36
0x4004aac	              0xc3	                                     ret	      2498	ops.c	FUNCTION_36
clip_free_selection	ELSE,1:DO,0:IF,1:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,1	19
0x400d4e2	              0x55	                                push rbp	      6553	ops.c	FUNCTION_74
0x400d4e3	          0x4889e5	                            mov rbp, rsp	      6553	ops.c	FUNCTION_74
0x400d4e6	        0x4883ec20	                           sub rsp, 0x20	      6553	ops.c	FUNCTION_74
0x400d4ea	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6553	ops.c	FUNCTION_74
0x400d4ee	    0x488b05000000	            mov rax, qword [0x0400d4f5] 	      6554	ops.c	FUNCTION_74
0x400d4f5	        0x488945f8	                mov qword [rbp - 8], rax	      6554	ops.c	FUNCTION_74
0x400d4f9	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      6556	ops.c	FUNCTION_74	IF_1
0x400d501	            0x750d	                           jne 0x400d510	      6556	ops.c	FUNCTION_74	IF_1
0x400d503	    0x48c705000000	               mov qword [0x0400d50e], 0	      6557	ops.c	FUNCTION_74	IF_1
0x400d50e	            0xeb0b	                           jmp 0x400d51b	      6557	ops.c	FUNCTION_74	IF_1
0x400d510	    0x48c705000000	               mov qword [0x0400d51b], 0	      6559	ops.c	FUNCTION_74	ELSE_1
0x400d51b	      0xe89e86ffff	                  call sym.free_yank_all	      6560	ops.c	FUNCTION_74	CALL_1
0x400d520	    0x488b05000000	            mov rax, qword [0x0400d527] 	      6561	ops.c	FUNCTION_74
0x400d527	    0x48c740080000	                  mov qword [rax + 8], 0	      6561	ops.c	FUNCTION_74
0x400d52f	        0x488b45f8	                mov rax, qword [rbp - 8]	      6562	ops.c	FUNCTION_74
0x400d533	    0x488905000000	            mov qword [0x0400d53a], rax 	      6562	ops.c	FUNCTION_74
0x400d53a	              0x90	                                     nop	      6563	ops.c	FUNCTION_74
0x400d53b	              0xc9	                                   leave	      6563	ops.c	FUNCTION_74
0x400d53c	              0xc3	                                     ret	      6563	ops.c	FUNCTION_74
same_leader	ELSE,1:DO,0:IF,11:functions,0:WHILE,1:FOR,4:SWITCH,0:CALL,8	181
0x4009955	              0x55	                                push rbp	      4756	ops.c	FUNCTION_56
0x4009956	          0x4889e5	                            mov rbp, rsp	      4756	ops.c	FUNCTION_56
0x4009959	        0x4883ec40	                           sub rsp, 0x40	      4756	ops.c	FUNCTION_56
0x400995d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4756	ops.c	FUNCTION_56
0x4009961	          0x8975d4	             mov dword [rbp - 0x2c], esi	      4756	ops.c	FUNCTION_56
0x4009964	        0x488955c8	             mov qword [rbp - 0x38], rdx	      4756	ops.c	FUNCTION_56
0x4009968	          0x894dd0	             mov dword [rbp - 0x30], ecx	      4756	ops.c	FUNCTION_56
0x400996b	        0x4c8945c0	              mov qword [rbp - 0x40], r8	      4756	ops.c	FUNCTION_56
0x400996f	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4757	ops.c	FUNCTION_56
0x4009976	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      4757	ops.c	FUNCTION_56
0x400997d	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4762	ops.c	FUNCTION_56	IF_1
0x4009981	            0x750f	                           jne 0x4009992	      4762	ops.c	FUNCTION_56	IF_1
0x4009983	        0x837dd000	               cmp dword [rbp - 0x30], 0	      4763	ops.c	FUNCTION_56	IF_1
0x4009987	           0xf94c0	                                 sete al	      4763	ops.c	FUNCTION_56	IF_1
0x400998a	           0xfb6c0	                           movzx eax, al	      4763	ops.c	FUNCTION_56	IF_1
0x400998d	      0xe929020000	                           jmp 0x4009bbb	      4763	ops.c	FUNCTION_56	IF_1
0x4009992	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4772	ops.c	FUNCTION_56	IF_2
0x4009997	     0xf84ed000000	                            je 0x4009a8a	      4772	ops.c	FUNCTION_56	IF_2
0x400999d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x40099a1	        0x488945e8	             mov qword [rbp - 0x18], rax	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x40099a5	      0xe9c6000000	                           jmp 0x4009a70	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x40099aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4776	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x40099ae	           0xfb600	                   movzx eax, byte [rax]	      4776	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x40099b1	            0x3c66	                            cmp al, 0x66	      4776	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x40099b3	            0x750f	                           jne 0x40099c4	      4776	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x40099b5	        0x837dd000	               cmp dword [rbp - 0x30], 0	      4777	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x40099b9	           0xf94c0	                                 sete al	      4777	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x40099bc	           0xfb6c0	                           movzx eax, al	      4777	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x40099bf	      0xe9f7010000	                           jmp 0x4009bbb	      4777	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x40099c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4778	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x40099c8	           0xfb600	                   movzx eax, byte [rax]	      4778	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x40099cb	            0x3c65	                            cmp al, 0x65	      4778	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x40099cd	            0x750a	                           jne 0x40099d9	      4778	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x40099cf	      0xb800000000	                              mov eax, 0	      4779	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x40099d4	      0xe9e2010000	                           jmp 0x4009bbb	      4779	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x40099d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4780	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x40099dd	           0xfb600	                   movzx eax, byte [rax]	      4780	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x40099e0	            0x3c73	                            cmp al, 0x73	      4780	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x40099e2	     0xf8583000000	                           jne 0x4009a6b	      4780	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x40099e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40099ec	          0x4889c7	                            mov rdi, rax	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40099ef	      0xe800000000	                          call 0x40099f4	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40099f4	          0x4889c2	                            mov rdx, rax	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40099f7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40099fa	            0x4898	                                    cdqe	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40099fc	          0x4801d0	                            add rax, rdx	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x40099ff	           0xfb600	                   movzx eax, byte [rax]	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x4009a02	            0x84c0	                             test al, al	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x4009a04	            0x750a	                           jne 0x4009a10	      4782	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x4009a06	      0xb800000000	                              mov eax, 0	      4783	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6
0x4009a0b	      0xe9ab010000	                           jmp 0x4009bbb	      4783	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6
0x4009a10	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4784	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x4009a15	            0x7406	                            je 0x4009a1d	      4784	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x4009a17	        0x837dd000	               cmp dword [rbp - 0x30], 0	      4784	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x4009a1b	            0x750a	                           jne 0x4009a27	      4784	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x4009a1d	      0xb800000000	                              mov eax, 0	      4785	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x4009a22	      0xe994010000	                           jmp 0x4009bbb	      4785	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x4009a27	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a2b	        0x488945e8	             mov qword [rbp - 0x18], rax	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a2f	            0xeb1a	                           jmp 0x4009a4b	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4787	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x4009a35	           0xfb600	                   movzx eax, byte [rax]	      4787	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x4009a38	            0x3c6d	                            cmp al, 0x6d	      4787	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x4009a3a	            0x750a	                           jne 0x4009a46	      4787	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x4009a3c	      0xb801000000	                              mov eax, 1	      4788	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x4009a41	      0xe975010000	                           jmp 0x4009bbb	      4788	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x4009a46	      0x488345e801	               add qword [rbp - 0x18], 1	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a4f	           0xfb600	                   movzx eax, byte [rax]	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a52	            0x84c0	                             test al, al	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a54	            0x740b	                            je 0x4009a61	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a5a	           0xfb600	                   movzx eax, byte [rax]	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a5d	            0x3c3a	                            cmp al, 0x3a	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a5f	            0x75d0	                           jne 0x4009a31	      4786	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x4009a61	      0xb800000000	                              mov eax, 0	      4789	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x4009a66	      0xe950010000	                           jmp 0x4009bbb	      4789	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x4009a6b	      0x488345e801	               add qword [rbp - 0x18], 1	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4009a70	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4009a74	           0xfb600	                   movzx eax, byte [rax]	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4009a77	            0x84c0	                             test al, al	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4009a79	            0x740f	                            je 0x4009a8a	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4009a7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4009a7f	           0xfb600	                   movzx eax, byte [rax]	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4009a82	            0x3c3a	                            cmp al, 0x3a	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4009a84	     0xf8520ffffff	                           jne 0x40099aa	      4774	ops.c	FUNCTION_56	IF_2	FOR_1
0x4009a8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4798	ops.c	FUNCTION_56	CALL_3
0x4009a8e	          0x4889c7	                            mov rdi, rax	      4798	ops.c	FUNCTION_56	CALL_3
0x4009a91	      0xe800000000	                          call 0x4009a96	      4798	ops.c	FUNCTION_56	CALL_3
0x4009a96	          0x4889c7	                            mov rdi, rax	      4798	ops.c	FUNCTION_56	CALL_3
0x4009a99	      0xe800000000	                          call 0x4009a9e	      4798	ops.c	FUNCTION_56	CALL_3
0x4009a9e	        0x488945f0	             mov qword [rbp - 0x10], rax	      4798	ops.c	FUNCTION_56	CALL_3
0x4009aa2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4799	ops.c	FUNCTION_56	IF_9
0x4009aa7	     0xf84f1000000	                            je 0x4009b9e	      4799	ops.c	FUNCTION_56	IF_9
0x4009aad	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ab4	            0xeb04	                           jmp 0x4009aba	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ab6	        0x8345e001	               add dword [rbp - 0x20], 1	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009aba	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009abd	          0x4863d0	                         movsxd rdx, eax	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ac0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ac4	          0x4801d0	                            add rax, rdx	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ac7	           0xfb600	                   movzx eax, byte [rax]	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009aca	            0x3c20	                            cmp al, 0x20	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009acc	            0x74e8	                            je 0x4009ab6	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ace	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ad1	          0x4863d0	                         movsxd rdx, eax	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ad4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ad8	          0x4801d0	                            add rax, rdx	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009adb	           0xfb600	                   movzx eax, byte [rax]	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ade	            0x3c09	                               cmp al, 9	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ae0	            0x74d4	                            je 0x4009ab6	      4801	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x4009ae2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4803	ops.c	FUNCTION_56	IF_9	CALL_5
0x4009ae6	        0x4883c001	                              add rax, 1	      4803	ops.c	FUNCTION_56	IF_9	CALL_5
0x4009aea	          0x4889c7	                            mov rdi, rax	      4803	ops.c	FUNCTION_56	IF_9	CALL_5
0x4009aed	      0xe800000000	                          call 0x4009af2	      4803	ops.c	FUNCTION_56	IF_9	CALL_5
0x4009af2	        0x488945f8	                mov qword [rbp - 8], rax	      4803	ops.c	FUNCTION_56	IF_9	CALL_5
0x4009af6	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x4009afd	      0xe984000000	                           jmp 0x4009b86	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x4009b02	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b05	          0x4863d0	                         movsxd rdx, eax	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b08	        0x488b45f8	                mov rax, qword [rbp - 8]	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b0c	          0x4801d0	                            add rax, rdx	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b0f	           0xfb600	                   movzx eax, byte [rax]	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b12	            0x3c20	                            cmp al, 0x20	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b14	            0x7444	                            je 0x4009b5a	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b16	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b19	          0x4863d0	                         movsxd rdx, eax	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b1c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b20	          0x4801d0	                            add rax, rdx	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b23	           0xfb600	                   movzx eax, byte [rax]	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b26	            0x3c09	                               cmp al, 9	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b28	            0x7430	                            je 0x4009b5a	      4806	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x4009b2a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b2d	          0x8d5001	                      lea edx, [rax + 1]	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b30	          0x8955e0	             mov dword [rbp - 0x20], edx	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b33	          0x4863d0	                         movsxd rdx, eax	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b3a	          0x4801d0	                            add rax, rdx	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b3d	           0xfb610	                   movzx edx, byte [rax]	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b40	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b43	          0x4863c8	                         movsxd rcx, eax	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b46	        0x488b45f8	                mov rax, qword [rbp - 8]	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b4a	          0x4801c8	                            add rax, rcx	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b4d	           0xfb600	                   movzx eax, byte [rax]	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b50	            0x38c2	                              cmp dl, al	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b52	            0x742e	                            je 0x4009b82	      4808	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b54	            0xeb3c	                           jmp 0x4009b92	      4809	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x4009b56	        0x8345e001	               add dword [rbp - 0x20], 1	      4813	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1
0x4009b5a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b5d	          0x4863d0	                         movsxd rdx, eax	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b64	          0x4801d0	                            add rax, rdx	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b67	           0xfb600	                   movzx eax, byte [rax]	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b6a	            0x3c20	                            cmp al, 0x20	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b6c	            0x74e8	                            je 0x4009b56	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b6e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b71	          0x4863d0	                         movsxd rdx, eax	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b74	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b78	          0x4801d0	                            add rax, rdx	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b7b	           0xfb600	                   movzx eax, byte [rax]	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b7e	            0x3c09	                               cmp al, 9	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b80	            0x74d4	                            je 0x4009b56	      4812	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x4009b82	        0x8345e401	               add dword [rbp - 0x1c], 1	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x4009b86	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x4009b89	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x4009b8c	     0xf8c70ffffff	                            jl 0x4009b02	      4804	ops.c	FUNCTION_56	IF_9	FOR_4
0x4009b92	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4815	ops.c	FUNCTION_56	IF_9	CALL_8
0x4009b96	          0x4889c7	                            mov rdi, rax	      4815	ops.c	FUNCTION_56	IF_9	CALL_8
0x4009b99	      0xe800000000	                          call 0x4009b9e	      4815	ops.c	FUNCTION_56	IF_9	CALL_8
0x4009b9e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4817	ops.c	FUNCTION_56
0x4009ba1	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      4817	ops.c	FUNCTION_56
0x4009ba4	            0x750f	                           jne 0x4009bb5	      4817	ops.c	FUNCTION_56
0x4009ba6	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4817	ops.c	FUNCTION_56
0x4009ba9	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      4817	ops.c	FUNCTION_56
0x4009bac	            0x7507	                           jne 0x4009bb5	      4817	ops.c	FUNCTION_56
0x4009bae	      0xb801000000	                              mov eax, 1	      4817	ops.c	FUNCTION_56
0x4009bb3	            0xeb05	                           jmp 0x4009bba	      4817	ops.c	FUNCTION_56
0x4009bb5	      0xb800000000	                              mov eax, 0	      4817	ops.c	FUNCTION_56
0x4009bba	              0x90	                                     nop	      4817	ops.c	FUNCTION_56
0x4009bbb	              0xc9	                                   leave	      4818	ops.c	FUNCTION_56
0x4009bbc	              0xc3	                                     ret	      4818	ops.c	FUNCTION_56
put_in_typebuf	ELSE,2:DO,0:IF,6:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,6	69
0x4002070	              0x55	                                push rbp	      1365	ops.c	FUNCTION_25
0x4002071	          0x4889e5	                            mov rbp, rsp	      1365	ops.c	FUNCTION_25
0x4002074	        0x4883ec30	                           sub rsp, 0x30	      1365	ops.c	FUNCTION_25
0x4002078	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1365	ops.c	FUNCTION_25
0x400207c	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1365	ops.c	FUNCTION_25
0x400207f	          0x8955e0	             mov dword [rbp - 0x20], edx	      1365	ops.c	FUNCTION_25
0x4002082	          0x894ddc	             mov dword [rbp - 0x24], ecx	      1365	ops.c	FUNCTION_25
0x4002085	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      1366	ops.c	FUNCTION_25
0x400208c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1368	ops.c	FUNCTION_25	CALL_1
0x400208f	            0x89c7	                            mov edi, eax	      1368	ops.c	FUNCTION_25	CALL_1
0x4002091	      0xe837ffffff	          call sym.put_reedit_in_typebuf	      1368	ops.c	FUNCTION_25	CALL_1
0x4002096	        0x837de000	               cmp dword [rbp - 0x20], 0	      1369	ops.c	FUNCTION_25	IF_1
0x400209a	            0x7422	                            je 0x40020be	      1369	ops.c	FUNCTION_25	IF_1
0x400209c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1370	ops.c	FUNCTION_25	CALL_2
0x400209f	          0x4189c0	                            mov r8d, eax	      1370	ops.c	FUNCTION_25	CALL_2
0x40020a2	      0xb901000000	                              mov ecx, 1	      1370	ops.c	FUNCTION_25	CALL_2
0x40020a7	      0xba00000000	                              mov edx, 0	      1370	ops.c	FUNCTION_25	CALL_2
0x40020ac	      0xbeffffffff	                     mov esi, 0xffffffff	      1370	ops.c	FUNCTION_25	CALL_2
0x40020b1	      0xbf00000000	                              mov edi, 0	      1370	ops.c	FUNCTION_25	CALL_2
0x40020b6	      0xe800000000	                          call 0x40020bb	      1370	ops.c	FUNCTION_25	CALL_2
0x40020bb	          0x8945f4	              mov dword [rbp - 0xc], eax	      1370	ops.c	FUNCTION_25	CALL_2
0x40020be	        0x837df401	                cmp dword [rbp - 0xc], 1	      1371	ops.c	FUNCTION_25	IF_2
0x40020c2	            0x7573	                           jne 0x4002137	      1371	ops.c	FUNCTION_25	IF_2
0x40020c4	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1375	ops.c	FUNCTION_25	IF_2	IF_3
0x40020c8	            0x7412	                            je 0x40020dc	      1375	ops.c	FUNCTION_25	IF_2	IF_3
0x40020ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x40020ce	          0x4889c7	                            mov rdi, rax	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x40020d1	      0xe800000000	                          call 0x40020d6	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x40020d6	        0x488945f8	                mov qword [rbp - 8], rax	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x40020da	            0xeb08	                           jmp 0x40020e4	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x40020dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1378	ops.c	FUNCTION_25	IF_2	ELSE_1
0x40020e0	        0x488945f8	                mov qword [rbp - 8], rax	      1378	ops.c	FUNCTION_25	IF_2	ELSE_1
0x40020e4	      0x48837df800	                  cmp qword [rbp - 8], 0	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x40020e9	            0x7509	                           jne 0x40020f4	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x40020eb	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1380	ops.c	FUNCTION_25	IF_2	IF_4
0x40020f2	            0xeb31	                           jmp 0x4002125	      1380	ops.c	FUNCTION_25	IF_2	IF_4
0x40020f4	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40020f8	            0x7407	                            je 0x4002101	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40020fa	      0xbeffffffff	                     mov esi, 0xffffffff	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x40020ff	            0xeb05	                           jmp 0x4002106	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4002101	      0xbe00000000	                              mov esi, 0	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4002106	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4002109	        0x488b45f8	                mov rax, qword [rbp - 8]	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x400210d	          0x4189d0	                            mov r8d, edx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4002110	      0xb901000000	                              mov ecx, 1	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4002115	      0xba00000000	                              mov edx, 0	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x400211a	          0x4889c7	                            mov rdi, rax	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x400211d	      0xe800000000	                          call 0x4002122	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4002122	          0x8945f4	              mov dword [rbp - 0xc], eax	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4002125	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1384	ops.c	FUNCTION_25	IF_2	IF_5
0x4002129	            0x740c	                            je 0x4002137	      1384	ops.c	FUNCTION_25	IF_2	IF_5
0x400212b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x400212f	          0x4889c7	                            mov rdi, rax	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4002132	      0xe800000000	                          call 0x4002137	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4002137	        0x837de000	               cmp dword [rbp - 0x20], 0	      1387	ops.c	FUNCTION_25	IF_6
0x400213b	            0x7428	                            je 0x4002165	      1387	ops.c	FUNCTION_25	IF_6
0x400213d	        0x837df401	                cmp dword [rbp - 0xc], 1	      1387	ops.c	FUNCTION_25	IF_6
0x4002141	            0x7522	                           jne 0x4002165	      1387	ops.c	FUNCTION_25	IF_6
0x4002143	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1388	ops.c	FUNCTION_25	CALL_6
0x4002146	          0x4189c0	                            mov r8d, eax	      1388	ops.c	FUNCTION_25	CALL_6
0x4002149	      0xb901000000	                              mov ecx, 1	      1388	ops.c	FUNCTION_25	CALL_6
0x400214e	      0xba00000000	                              mov edx, 0	      1388	ops.c	FUNCTION_25	CALL_6
0x4002153	      0xbeffffffff	                     mov esi, 0xffffffff	      1388	ops.c	FUNCTION_25	CALL_6
0x4002158	      0xbf00000000	                              mov edi, 0	      1388	ops.c	FUNCTION_25	CALL_6
0x400215d	      0xe800000000	                          call 0x4002162	      1388	ops.c	FUNCTION_25	CALL_6
0x4002162	          0x8945f4	              mov dword [rbp - 0xc], eax	      1388	ops.c	FUNCTION_25	CALL_6
0x4002165	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1389	ops.c	FUNCTION_25
0x4002168	              0xc9	                                   leave	      1390	ops.c	FUNCTION_25
0x4002169	              0xc3	                                     ret	      1390	ops.c	FUNCTION_25
valid_yank_reg	ELSE,0:DO,0:IF,1:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,2	48
0x4001476	              0x55	                                push rbp	       870	ops.c	FUNCTION_14
0x4001477	          0x4889e5	                            mov rbp, rsp	       870	ops.c	FUNCTION_14
0x400147a	        0x4883ec10	                           sub rsp, 0x10	       870	ops.c	FUNCTION_14
0x400147e	          0x897dfc	                mov dword [rbp - 4], edi	       870	ops.c	FUNCTION_14
0x4001481	          0x8975f8	                mov dword [rbp - 8], esi	       870	ops.c	FUNCTION_14
0x4001484	        0x837dfc00	                  cmp dword [rbp - 4], 0	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4001488	            0x7e21	                           jle 0x40014ab	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400148a	          0x8b45fc	                mov eax, dword [rbp - 4]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400148d	          0x83e841	                           sub eax, 0x41	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4001490	          0x83f819	                           cmp eax, 0x19	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4001493	            0x7660	                           jbe 0x40014f5	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4001495	          0x8b45fc	                mov eax, dword [rbp - 4]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4001498	          0x83e861	                           sub eax, 0x61	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400149b	          0x83f819	                           cmp eax, 0x19	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400149e	            0x7655	                           jbe 0x40014f5	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40014a0	          0x8b45fc	                mov eax, dword [rbp - 4]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40014a3	          0x83e830	                           sub eax, 0x30	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40014a6	          0x83f809	                              cmp eax, 9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40014a9	            0x764a	                           jbe 0x40014f5	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40014ab	        0x837df800	                  cmp dword [rbp - 8], 0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40014af	            0x7514	                           jne 0x40014c5	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40014b1	          0x8b45fc	                mov eax, dword [rbp - 4]	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40014b4	            0x89c6	                            mov esi, eax	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40014b6	      0xbf00000000	                              mov edi, 0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40014bb	      0xe800000000	                          call 0x40014c0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40014c0	          0x4885c0	                           test rax, rax	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40014c3	            0x7530	                           jne 0x40014f5	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40014c5	        0x837dfc23	               cmp dword [rbp - 4], 0x23	       879	ops.c	FUNCTION_14	IF_1
0x40014c9	            0x742a	                            je 0x40014f5	       879	ops.c	FUNCTION_14	IF_1
0x40014cb	        0x837dfc22	               cmp dword [rbp - 4], 0x22	       880	ops.c	FUNCTION_14	IF_1
0x40014cf	            0x7424	                            je 0x40014f5	       880	ops.c	FUNCTION_14	IF_1
0x40014d1	        0x837dfc2d	               cmp dword [rbp - 4], 0x2d	       881	ops.c	FUNCTION_14	IF_1
0x40014d5	            0x741e	                            je 0x40014f5	       881	ops.c	FUNCTION_14	IF_1
0x40014d7	        0x837dfc5f	               cmp dword [rbp - 4], 0x5f	       882	ops.c	FUNCTION_14	IF_1
0x40014db	            0x7418	                            je 0x40014f5	       882	ops.c	FUNCTION_14	IF_1
0x40014dd	        0x837dfc2a	               cmp dword [rbp - 4], 0x2a	       884	ops.c	FUNCTION_14	IF_1
0x40014e1	            0x7412	                            je 0x40014f5	       884	ops.c	FUNCTION_14	IF_1
0x40014e3	        0x837dfc2b	               cmp dword [rbp - 4], 0x2b	       885	ops.c	FUNCTION_14	IF_1
0x40014e7	            0x740c	                            je 0x40014f5	       885	ops.c	FUNCTION_14	IF_1
0x40014e9	        0x837df800	                  cmp dword [rbp - 8], 0	       888	ops.c	FUNCTION_14	IF_1
0x40014ed	            0x750d	                           jne 0x40014fc	       888	ops.c	FUNCTION_14	IF_1
0x40014ef	        0x837dfc7e	               cmp dword [rbp - 4], 0x7e	       888	ops.c	FUNCTION_14	IF_1
0x40014f3	            0x7507	                           jne 0x40014fc	       888	ops.c	FUNCTION_14	IF_1
0x40014f5	      0xb801000000	                              mov eax, 1	       891	ops.c	FUNCTION_14	IF_1
0x40014fa	            0xeb05	                           jmp 0x4001501	       891	ops.c	FUNCTION_14	IF_1
0x40014fc	      0xb800000000	                              mov eax, 0	       892	ops.c	FUNCTION_14
0x4001501	              0xc9	                                   leave	       893	ops.c	FUNCTION_14
0x4001502	              0xc3	                                     ret	       893	ops.c	FUNCTION_14
get_extra_op_char	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,0	13
0x4000141	              0x55	                                push rbp	       222	ops.c	FUNCTION_4
0x4000142	          0x4889e5	                            mov rbp, rsp	       222	ops.c	FUNCTION_4
0x4000145	          0x897dfc	                mov dword [rbp - 4], edi	       222	ops.c	FUNCTION_4
0x4000148	          0x8b45fc	                mov eax, dword [rbp - 4]	       223	ops.c	FUNCTION_4
0x400014b	          0x4863d0	                         movsxd rdx, eax	       223	ops.c	FUNCTION_4
0x400014e	          0x4889d0	                            mov rax, rdx	       223	ops.c	FUNCTION_4
0x4000151	          0x4801c0	                            add rax, rax	       223	ops.c	FUNCTION_4
0x4000154	          0x4801d0	                            add rax, rdx	       223	ops.c	FUNCTION_4
0x4000157	    0x480500000000	                              add rax, 0	       223	ops.c	FUNCTION_4
0x400015d	           0xfb600	                   movzx eax, byte [rax]	       223	ops.c	FUNCTION_4
0x4000160	           0xfbec0	                           movsx eax, al	       223	ops.c	FUNCTION_4
0x4000163	              0x5d	                                 pop rbp	       224	ops.c	FUNCTION_4
0x4000164	              0xc3	                                     ret	       224	ops.c	FUNCTION_4
free_yank	ELSE,0:DO,0:IF,3:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,5	35
0x4005b3b	              0x55	                                push rbp	      3011	ops.c	FUNCTION_43
0x4005b3c	          0x4889e5	                            mov rbp, rsp	      3011	ops.c	FUNCTION_43
0x4005b3f	        0x4883ec20	                           sub rsp, 0x20	      3011	ops.c	FUNCTION_43
0x4005b43	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3011	ops.c	FUNCTION_43
0x4005b47	    0x488b05000000	            mov rax, qword [0x04005b4e] 	      3012	ops.c	FUNCTION_43	IF_1
0x4005b4e	          0x488b00	                    mov rax, qword [rax]	      3012	ops.c	FUNCTION_43	IF_1
0x4005b51	          0x4885c0	                           test rax, rax	      3012	ops.c	FUNCTION_43	IF_1
0x4005b54	            0x7465	                            je 0x4005bbb	      3012	ops.c	FUNCTION_43	IF_1
0x4005b56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4005b5a	        0x488945f8	                mov qword [rbp - 8], rax	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4005b5e	            0xeb20	                           jmp 0x4005b80	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4005b60	    0x488b05000000	            mov rax, qword [0x04005b67] 	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4005b67	          0x488b00	                    mov rax, qword [rax]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4005b6a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4005b6e	        0x48c1e203	                              shl rdx, 3	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4005b72	          0x4801d0	                            add rax, rdx	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4005b75	          0x488b00	                    mov rax, qword [rax]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4005b78	          0x4889c7	                            mov rdi, rax	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4005b7b	      0xe800000000	                          call 0x4005b80	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4005b80	      0x48836df801	                  sub qword [rbp - 8], 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4005b85	      0x48837df800	                  cmp qword [rbp - 8], 0	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4005b8a	            0x79d4	                           jns 0x4005b60	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4005b8c	    0x488b05000000	            mov rax, qword [0x04005b93] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4005b93	          0x488b00	                    mov rax, qword [rax]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4005b96	          0x4885c0	                           test rax, rax	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4005b99	            0x7420	                            je 0x4005bbb	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4005b9b	    0x488b05000000	            mov rax, qword [0x04005ba2] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4005ba2	          0x488b00	                    mov rax, qword [rax]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4005ba5	          0x4889c7	                            mov rdi, rax	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4005ba8	      0xe800000000	                          call 0x4005bad	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4005bad	    0x488b05000000	            mov rax, qword [0x04005bb4] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4005bb4	    0x48c700000000	                      mov qword [rax], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4005bbb	              0x90	                                     nop	      3040	ops.c	FUNCTION_43
0x4005bbc	              0xc9	                                   leave	      3040	ops.c	FUNCTION_43
0x4005bbd	              0xc3	                                     ret	      3040	ops.c	FUNCTION_43
fmt_check_par	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,3	77
0x400a601	              0x55	                                push rbp	      5258	ops.c	FUNCTION_62
0x400a602	          0x4889e5	                            mov rbp, rsp	      5258	ops.c	FUNCTION_62
0x400a605	        0x4883ec30	                           sub rsp, 0x30	      5258	ops.c	FUNCTION_62
0x400a609	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5258	ops.c	FUNCTION_62
0x400a60d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5258	ops.c	FUNCTION_62
0x400a611	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5258	ops.c	FUNCTION_62
0x400a615	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      5258	ops.c	FUNCTION_62
0x400a618	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      5259	ops.c	FUNCTION_62
0x400a620	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5262	ops.c	FUNCTION_62	CALL_1
0x400a624	          0x4889c7	                            mov rdi, rax	      5262	ops.c	FUNCTION_62	CALL_1
0x400a627	      0xe800000000	                          call 0x400a62c	      5262	ops.c	FUNCTION_62	CALL_1
0x400a62c	        0x488945f8	                mov qword [rbp - 8], rax	      5262	ops.c	FUNCTION_62	CALL_1
0x400a630	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      5263	ops.c	FUNCTION_62	IF_1
0x400a634	            0x7424	                            je 0x400a65a	      5263	ops.c	FUNCTION_62	IF_1
0x400a636	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      5264	ops.c	FUNCTION_62	CALL_2
0x400a63a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5264	ops.c	FUNCTION_62	CALL_2
0x400a63e	      0xb901000000	                              mov ecx, 1	      5264	ops.c	FUNCTION_62	CALL_2
0x400a643	      0xba00000000	                              mov edx, 0	      5264	ops.c	FUNCTION_62	CALL_2
0x400a648	          0x4889c7	                            mov rdi, rax	      5264	ops.c	FUNCTION_62	CALL_2
0x400a64b	      0xe800000000	                          call 0x400a650	      5264	ops.c	FUNCTION_62	CALL_2
0x400a650	            0x89c2	                            mov edx, eax	      5264	ops.c	FUNCTION_62	CALL_2
0x400a652	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5264	ops.c	FUNCTION_62	CALL_2
0x400a656	            0x8910	                    mov dword [rax], edx	      5264	ops.c	FUNCTION_62	CALL_2
0x400a658	            0xeb0a	                           jmp 0x400a664	      5264	ops.c	FUNCTION_62	CALL_2
0x400a65a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5266	ops.c	FUNCTION_62	ELSE_1
0x400a65e	    0xc70000000000	                      mov dword [rax], 0	      5266	ops.c	FUNCTION_62	ELSE_1
0x400a664	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x400a668	            0x8b00	                    mov eax, dword [rax]	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x400a66a	            0x85c0	                           test eax, eax	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x400a66c	            0x7e33	                           jle 0x400a6a1	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x400a66e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x400a672	          0x488b00	                    mov rax, qword [rax]	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x400a675	        0x488945f0	             mov qword [rbp - 0x10], rax	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x400a679	            0xeb05	                           jmp 0x400a680	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a67b	      0x488345f001	               add qword [rbp - 0x10], 1	      5275	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a680	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a684	           0xfb600	                   movzx eax, byte [rax]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a687	            0x84c0	                             test al, al	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a689	            0x7416	                            je 0x400a6a1	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a68b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a68f	           0xfb600	                   movzx eax, byte [rax]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a692	            0x3c3a	                            cmp al, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a694	            0x740b	                            je 0x400a6a1	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a696	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a69a	           0xfb600	                   movzx eax, byte [rax]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a69d	            0x3c65	                            cmp al, 0x65	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a69f	            0x75da	                           jne 0x400a67b	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400a6a1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5278	ops.c	FUNCTION_62	CALL_3
0x400a6a5	            0x8b00	                    mov eax, dword [rax]	      5278	ops.c	FUNCTION_62	CALL_3
0x400a6a7	          0x4863d0	                         movsxd rdx, eax	      5278	ops.c	FUNCTION_62	CALL_3
0x400a6aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      5278	ops.c	FUNCTION_62	CALL_3
0x400a6ae	          0x4801d0	                            add rax, rdx	      5278	ops.c	FUNCTION_62	CALL_3
0x400a6b1	          0x4889c7	                            mov rdi, rax	      5278	ops.c	FUNCTION_62	CALL_3
0x400a6b4	      0xe800000000	                          call 0x400a6b9	      5278	ops.c	FUNCTION_62	CALL_3
0x400a6b9	           0xfb600	                   movzx eax, byte [rax]	      5278	ops.c	FUNCTION_62	CALL_3
0x400a6bc	            0x84c0	                             test al, al	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6be	            0x742f	                            je 0x400a6ef	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6c0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5279	ops.c	FUNCTION_62
0x400a6c4	            0x8b00	                    mov eax, dword [rax]	      5279	ops.c	FUNCTION_62
0x400a6c6	            0x85c0	                           test eax, eax	      5279	ops.c	FUNCTION_62
0x400a6c8	            0x7e0b	                           jle 0x400a6d5	      5279	ops.c	FUNCTION_62
0x400a6ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5279	ops.c	FUNCTION_62
0x400a6ce	           0xfb600	                   movzx eax, byte [rax]	      5279	ops.c	FUNCTION_62
0x400a6d1	            0x3c65	                            cmp al, 0x65	      5279	ops.c	FUNCTION_62
0x400a6d3	            0x741a	                            je 0x400a6ef	      5279	ops.c	FUNCTION_62
0x400a6d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6d9	      0xba00000000	                              mov edx, 0	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6de	      0xbe00000000	                              mov esi, 0	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6e3	          0x4889c7	                            mov rdi, rax	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6e6	      0xe800000000	                          call 0x400a6eb	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6eb	            0x85c0	                           test eax, eax	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6ed	            0x7407	                            je 0x400a6f6	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6ef	      0xb801000000	                              mov eax, 1	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6f4	            0xeb05	                           jmp 0x400a6fb	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6f6	      0xb800000000	                              mov eax, 0	      5280	ops.c	FUNCTION_62	CALL_4
0x400a6fb	              0xc9	                                   leave	      5281	ops.c	FUNCTION_62
0x400a6fc	              0xc3	                                     ret	      5281	ops.c	FUNCTION_62
getreg_wrap_one_line	ELSE,0:DO,0:IF,3:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,3	34
0x400dc0f	              0x55	                                push rbp	      6807	ops.c	FUNCTION_81
0x400dc10	          0x4889e5	                            mov rbp, rsp	      6807	ops.c	FUNCTION_81
0x400dc13	        0x4883ec20	                           sub rsp, 0x20	      6807	ops.c	FUNCTION_81
0x400dc17	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6807	ops.c	FUNCTION_81
0x400dc1b	          0x8975e4	             mov dword [rbp - 0x1c], esi	      6807	ops.c	FUNCTION_81
0x400dc1e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6808	ops.c	FUNCTION_81	IF_1
0x400dc21	          0x83e004	                              and eax, 4	      6808	ops.c	FUNCTION_81	IF_1
0x400dc24	            0x85c0	                           test eax, eax	      6808	ops.c	FUNCTION_81	IF_1
0x400dc26	            0x7452	                            je 0x400dc7a	      6808	ops.c	FUNCTION_81	IF_1
0x400dc28	      0xe800000000	                          call 0x400dc2d	      6810	ops.c	FUNCTION_81	IF_1	CALL_1
0x400dc2d	        0x488945f8	                mov qword [rbp - 8], rax	      6810	ops.c	FUNCTION_81	IF_1	CALL_1
0x400dc31	      0x48837df800	                  cmp qword [rbp - 8], 0	      6812	ops.c	FUNCTION_81	IF_1	IF_2
0x400dc36	            0x743c	                            je 0x400dc74	      6812	ops.c	FUNCTION_81	IF_1	IF_2
0x400dc38	        0x488b45f8	                mov rax, qword [rbp - 8]	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400dc3c	      0xbaffffffff	                     mov edx, 0xffffffff	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400dc41	      0xbe00000000	                              mov esi, 0	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400dc46	          0x4889c7	                            mov rdi, rax	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400dc49	      0xe800000000	                          call 0x400dc4e	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400dc4e	            0x85c0	                           test eax, eax	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400dc50	            0x7513	                           jne 0x400dc65	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400dc52	        0x488b45f8	                mov rax, qword [rbp - 8]	      6816	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_3
0x400dc56	          0x4889c7	                            mov rdi, rax	      6816	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_3
0x400dc59	      0xe800000000	                          call 0x400dc5e	      6816	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_3
0x400dc5e	      0xb800000000	                              mov eax, 0	      6817	ops.c	FUNCTION_81	IF_1	IF_2	IF_3
0x400dc63	            0xeb19	                           jmp 0x400dc7e	      6817	ops.c	FUNCTION_81	IF_1	IF_2	IF_3
0x400dc65	        0x488b45f8	                mov rax, qword [rbp - 8]	      6819	ops.c	FUNCTION_81	IF_1	IF_2
0x400dc69	          0x488b00	                    mov rax, qword [rax]	      6819	ops.c	FUNCTION_81	IF_1	IF_2
0x400dc6c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6819	ops.c	FUNCTION_81	IF_1	IF_2
0x400dc70	        0x48895018	             mov qword [rax + 0x18], rdx	      6819	ops.c	FUNCTION_81	IF_1	IF_2
0x400dc74	        0x488b45f8	                mov rax, qword [rbp - 8]	      6821	ops.c	FUNCTION_81	IF_1
0x400dc78	            0xeb04	                           jmp 0x400dc7e	      6821	ops.c	FUNCTION_81	IF_1
0x400dc7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6823	ops.c	FUNCTION_81
0x400dc7e	              0xc9	                                   leave	      6824	ops.c	FUNCTION_81
0x400dc7f	              0xc3	                                     ret	      6824	ops.c	FUNCTION_81
init_write_reg	ELSE,0:DO,0:IF,2:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,4	38
0x400dfe2	              0x55	                                push rbp	      6944	ops.c	FUNCTION_83
0x400dfe3	          0x4889e5	                            mov rbp, rsp	      6944	ops.c	FUNCTION_83
0x400dfe6	        0x4883ec20	                           sub rsp, 0x20	      6944	ops.c	FUNCTION_83
0x400dfea	          0x897dfc	                mov dword [rbp - 4], edi	      6944	ops.c	FUNCTION_83
0x400dfed	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6944	ops.c	FUNCTION_83
0x400dff1	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6944	ops.c	FUNCTION_83
0x400dff5	          0x894df8	                mov dword [rbp - 8], ecx	      6944	ops.c	FUNCTION_83
0x400dff8	        0x4c8945e0	              mov qword [rbp - 0x20], r8	      6944	ops.c	FUNCTION_83
0x400dffc	          0x8b45fc	                mov eax, dword [rbp - 4]	      6945	ops.c	FUNCTION_83	IF_1	CALL_1
0x400dfff	      0xbe01000000	                              mov esi, 1	      6945	ops.c	FUNCTION_83	IF_1	CALL_1
0x400e004	            0x89c7	                            mov edi, eax	      6945	ops.c	FUNCTION_83	IF_1	CALL_1
0x400e006	      0xe800000000	                          call 0x400e00b	      6945	ops.c	FUNCTION_83	IF_1	CALL_1
0x400e00b	            0x85c0	                           test eax, eax	      6945	ops.c	FUNCTION_83	IF_1	CALL_1
0x400e00d	            0x7511	                           jne 0x400e020	      6945	ops.c	FUNCTION_83	IF_1	CALL_1
0x400e00f	          0x8b45fc	                mov eax, dword [rbp - 4]	      6947	ops.c	FUNCTION_83	IF_1	CALL_2
0x400e012	            0x89c7	                            mov edi, eax	      6947	ops.c	FUNCTION_83	IF_1	CALL_2
0x400e014	      0xe800000000	                          call 0x400e019	      6947	ops.c	FUNCTION_83	IF_1	CALL_2
0x400e019	      0xb800000000	                              mov eax, 0	      6948	ops.c	FUNCTION_83	IF_1
0x400e01e	            0xeb45	                           jmp 0x400e065	      6948	ops.c	FUNCTION_83	IF_1
0x400e020	    0x488b15000000	            mov rdx, qword [0x0400e027] 	      6952	ops.c	FUNCTION_83
0x400e027	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6952	ops.c	FUNCTION_83
0x400e02b	          0x488910	                    mov qword [rax], rdx	      6952	ops.c	FUNCTION_83
0x400e02e	    0x488b15000000	            mov rdx, qword [0x0400e035] 	      6953	ops.c	FUNCTION_83
0x400e035	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6953	ops.c	FUNCTION_83
0x400e039	          0x488910	                    mov qword [rax], rdx	      6953	ops.c	FUNCTION_83
0x400e03c	          0x8b45fc	                mov eax, dword [rbp - 4]	      6955	ops.c	FUNCTION_83	CALL_3
0x400e03f	      0xbe01000000	                              mov esi, 1	      6955	ops.c	FUNCTION_83	CALL_3
0x400e044	            0x89c7	                            mov edi, eax	      6955	ops.c	FUNCTION_83	CALL_3
0x400e046	      0xe800000000	                          call 0x400e04b	      6955	ops.c	FUNCTION_83	CALL_3
0x400e04b	    0x8b0500000000	            mov eax, dword [0x0400e051] 	      6956	ops.c	FUNCTION_83	IF_2
0x400e051	            0x85c0	                           test eax, eax	      6956	ops.c	FUNCTION_83	IF_2
0x400e053	            0x750b	                           jne 0x400e060	      6956	ops.c	FUNCTION_83	IF_2
0x400e055	        0x837df800	                  cmp dword [rbp - 8], 0	      6956	ops.c	FUNCTION_83	IF_2
0x400e059	            0x7505	                           jne 0x400e060	      6956	ops.c	FUNCTION_83	IF_2
0x400e05b	      0xe85e7bffff	                  call sym.free_yank_all	      6957	ops.c	FUNCTION_83	CALL_4
0x400e060	      0xb801000000	                              mov eax, 1	      6958	ops.c	FUNCTION_83
0x400e065	              0xc9	                                   leave	      6959	ops.c	FUNCTION_83
0x400e066	              0xc3	                                     ret	      6959	ops.c	FUNCTION_83
get_op_type	ELSE,0:DO,0:IF,6:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,1	57
0x4000040	              0x55	                                push rbp	       174	ops.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       174	ops.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	       174	ops.c	FUNCTION_1
0x4000048	          0x897dec	             mov dword [rbp - 0x14], edi	       174	ops.c	FUNCTION_1
0x400004b	          0x8975e8	             mov dword [rbp - 0x18], esi	       174	ops.c	FUNCTION_1
0x400004e	        0x837dec72	           cmp dword [rbp - 0x14], 0x72 	       177	ops.c	FUNCTION_1	IF_1
0x4000052	            0x750a	                           jne 0x400005e	       177	ops.c	FUNCTION_1	IF_1
0x4000054	      0xb810000000	                           mov eax, 0x10	       178	ops.c	FUNCTION_1	IF_1
0x4000059	      0xe999000000	                           jmp 0x40000f7	       178	ops.c	FUNCTION_1	IF_1
0x400005e	        0x837dec7e	           cmp dword [rbp - 0x14], 0x7e 	       179	ops.c	FUNCTION_1	IF_2
0x4000062	            0x750a	                           jne 0x400006e	       179	ops.c	FUNCTION_1	IF_2
0x4000064	      0xb807000000	                              mov eax, 7	       180	ops.c	FUNCTION_1	IF_2
0x4000069	      0xe989000000	                           jmp 0x40000f7	       180	ops.c	FUNCTION_1	IF_2
0x400006e	        0x837dec67	           cmp dword [rbp - 0x14], 0x67 	       181	ops.c	FUNCTION_1	IF_3
0x4000072	            0x750d	                           jne 0x4000081	       181	ops.c	FUNCTION_1	IF_3
0x4000074	        0x837de801	               cmp dword [rbp - 0x18], 1	       181	ops.c	FUNCTION_1	IF_3
0x4000078	            0x7507	                           jne 0x4000081	       181	ops.c	FUNCTION_1	IF_3
0x400007a	      0xb81c000000	                           mov eax, 0x1c	       182	ops.c	FUNCTION_1	IF_3
0x400007f	            0xeb76	                           jmp 0x40000f7	       182	ops.c	FUNCTION_1	IF_3
0x4000081	        0x837dec67	           cmp dword [rbp - 0x14], 0x67 	       183	ops.c	FUNCTION_1	IF_4
0x4000085	            0x750d	                           jne 0x4000094	       183	ops.c	FUNCTION_1	IF_4
0x4000087	        0x837de818	           cmp dword [rbp - 0x18], 0x18 	       183	ops.c	FUNCTION_1	IF_4
0x400008b	            0x7507	                           jne 0x4000094	       183	ops.c	FUNCTION_1	IF_4
0x400008d	      0xb81d000000	                           mov eax, 0x1d	       184	ops.c	FUNCTION_1	IF_4
0x4000092	            0xeb63	                           jmp 0x40000f7	       184	ops.c	FUNCTION_1	IF_4
0x4000094	    0xc745fc000000	                  mov dword [rbp - 4], 0	       185	ops.c	FUNCTION_1	FOR_1
0x400009b	          0x8b45fc	                mov eax, dword [rbp - 4]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x400009e	          0x4863d0	                         movsxd rdx, eax	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000a1	          0x4889d0	                            mov rax, rdx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000a4	          0x4801c0	                            add rax, rax	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000a7	          0x4801d0	                            add rax, rdx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000aa	    0x480500000000	                              add rax, 0	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000b0	           0xfb600	                   movzx eax, byte [rax]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000b3	           0xfbec0	                           movsx eax, al	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000b6	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000b9	            0x7520	                           jne 0x40000db	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000bb	          0x8b45fc	                mov eax, dword [rbp - 4]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000be	          0x4863d0	                         movsxd rdx, eax	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000c1	          0x4889d0	                            mov rax, rdx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000c4	          0x4801c0	                            add rax, rax	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000c7	          0x4801d0	                            add rax, rdx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000ca	    0x480500000000	                              add rax, 0	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000d0	           0xfb600	                   movzx eax, byte [rax]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000d3	           0xfbec0	                           movsx eax, al	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000d6	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000d9	            0x7418	                            je 0x40000f3	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000db	        0x837dfc1d	               cmp dword [rbp - 4], 0x1d	       189	ops.c	FUNCTION_1	FOR_1	IF_6
0x40000df	            0x750c	                           jne 0x40000ed	       189	ops.c	FUNCTION_1	FOR_1	IF_6
0x40000e1	      0xbf00000000	                              mov edi, 0	       191	ops.c	FUNCTION_1	FOR_1	IF_6	CALL_1
0x40000e6	      0xe800000000	                          call 0x40000eb	       191	ops.c	FUNCTION_1	FOR_1	IF_6	CALL_1
0x40000eb	            0xeb07	                           jmp 0x40000f4	       192	ops.c	FUNCTION_1	FOR_1	IF_6
0x40000ed	        0x8345fc01	                  add dword [rbp - 4], 1	       185	ops.c	FUNCTION_1	FOR_1
0x40000f1	            0xeba8	                           jmp 0x400009b	       194	ops.c	FUNCTION_1	FOR_1
0x40000f3	              0x90	                                     nop	       188	ops.c	FUNCTION_1	FOR_1	IF_5
0x40000f4	          0x8b45fc	                mov eax, dword [rbp - 4]	       195	ops.c	FUNCTION_1
0x40000f7	              0xc9	                                   leave	       196	ops.c	FUNCTION_1
0x40000f8	              0xc3	                                     ret	       196	ops.c	FUNCTION_1
op_delete	ELSE,6:DO,0:IF,48:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,68	813
0x4002b25	              0x55	                                push rbp	      1745	ops.c	FUNCTION_33
0x4002b26	          0x4889e5	                            mov rbp, rsp	      1745	ops.c	FUNCTION_33
0x4002b29	    0x4881ecb00000	                           sub rsp, 0xb0	      1745	ops.c	FUNCTION_33
0x4002b30	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      1745	ops.c	FUNCTION_33
0x4002b37	    0x64488b042528	                mov rax, qword fs:[0x28]	      1745	ops.c	FUNCTION_33
0x4002b40	        0x488945f8	                mov qword [rbp - 8], rax	      1745	ops.c	FUNCTION_33
0x4002b44	            0x31c0	                            xor eax, eax	      1745	ops.c	FUNCTION_33
0x4002b46	    0x488b05000000	            mov rax, qword [0x04002b4d] 	      1751	ops.c	FUNCTION_33
0x4002b4d	          0x488b00	                    mov rax, qword [rax]	      1751	ops.c	FUNCTION_33
0x4002b50	        0x48894590	             mov qword [rbp - 0x70], rax	      1751	ops.c	FUNCTION_33
0x4002b54	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      1752	ops.c	FUNCTION_33
0x4002b5e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1753	ops.c	FUNCTION_33
0x4002b65	          0x8b4004	                mov eax, dword [rax + 4]	      1753	ops.c	FUNCTION_33
0x4002b68	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1753	ops.c	FUNCTION_33
0x4002b6e	    0x488b05000000	            mov rax, qword [0x04002b75] 	      1755	ops.c	FUNCTION_33	IF_1
0x4002b75	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1755	ops.c	FUNCTION_33	IF_1
0x4002b78	          0x83e001	                              and eax, 1	      1755	ops.c	FUNCTION_33	IF_1
0x4002b7b	            0x85c0	                           test eax, eax	      1755	ops.c	FUNCTION_33	IF_1
0x4002b7d	            0x740a	                            je 0x4002b89	      1755	ops.c	FUNCTION_33	IF_1
0x4002b7f	      0xb801000000	                              mov eax, 1	      1756	ops.c	FUNCTION_33	IF_1
0x4002b84	      0xe9340d0000	                           jmp 0x40038bd	      1756	ops.c	FUNCTION_33	IF_1
0x4002b89	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1759	ops.c	FUNCTION_33	IF_2
0x4002b90	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1759	ops.c	FUNCTION_33	IF_2
0x4002b93	            0x85c0	                           test eax, eax	      1759	ops.c	FUNCTION_33	IF_2
0x4002b95	            0x740a	                            je 0x4002ba1	      1759	ops.c	FUNCTION_33	IF_2
0x4002b97	      0xe800000000	                          call 0x4002b9c	      1760	ops.c	FUNCTION_33	CALL_1
0x4002b9c	      0xe91c0d0000	                           jmp 0x40038bd	      1760	ops.c	FUNCTION_33	CALL_1
0x4002ba1	    0x488b05000000	            mov rax, qword [0x04002ba8] 	      1762	ops.c	FUNCTION_33	IF_3
0x4002ba8	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1762	ops.c	FUNCTION_33	IF_3
0x4002bae	            0x85c0	                           test eax, eax	      1762	ops.c	FUNCTION_33	IF_3
0x4002bb0	            0x751c	                           jne 0x4002bce	      1762	ops.c	FUNCTION_33	IF_3
0x4002bb2	      0xbf00000000	                              mov edi, 0	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x4002bb7	      0xe800000000	                          call 0x4002bbc	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x4002bbc	          0x4889c7	                            mov rdi, rax	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x4002bbf	      0xe800000000	                          call 0x4002bc4	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x4002bc4	      0xb800000000	                              mov eax, 0	      1765	ops.c	FUNCTION_33	IF_3
0x4002bc9	      0xe9ef0c0000	                           jmp 0x40038bd	      1765	ops.c	FUNCTION_33	IF_3
0x4002bce	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1769	ops.c	FUNCTION_33	CALL_4
0x4002bd5	        0x4883c004	                              add rax, 4	      1769	ops.c	FUNCTION_33	CALL_4
0x4002bd9	          0x4889c7	                            mov rdi, rax	      1769	ops.c	FUNCTION_33	CALL_4
0x4002bdc	      0xe800000000	                          call 0x4002be1	      1769	ops.c	FUNCTION_33	CALL_4
0x4002be1	    0x8b0500000000	            mov eax, dword [0x04002be7] 	      1773	ops.c	FUNCTION_33	IF_4
0x4002be7	            0x85c0	                           test eax, eax	      1773	ops.c	FUNCTION_33	IF_4
0x4002be9	            0x740f	                            je 0x4002bfa	      1773	ops.c	FUNCTION_33	IF_4
0x4002beb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1774	ops.c	FUNCTION_33	CALL_5
0x4002bf2	          0x4889c7	                            mov rdi, rax	      1774	ops.c	FUNCTION_33	CALL_5
0x4002bf5	      0xe8d90c0000	                call sym.mb_adjust_opend	      1774	ops.c	FUNCTION_33	CALL_5
0x4002bfa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1782	ops.c	FUNCTION_33	IF_5
0x4002c01	          0x8b4008	                mov eax, dword [rax + 8]	      1782	ops.c	FUNCTION_33	IF_5
0x4002c04	            0x85c0	                           test eax, eax	      1782	ops.c	FUNCTION_33	IF_5
0x4002c06	     0xf85d4000000	                           jne 0x4002ce0	      1782	ops.c	FUNCTION_33	IF_5
0x4002c0c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1783	ops.c	FUNCTION_33	IF_5
0x4002c13	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1783	ops.c	FUNCTION_33	IF_5
0x4002c16	            0x85c0	                           test eax, eax	      1783	ops.c	FUNCTION_33	IF_5
0x4002c18	     0xf85c2000000	                           jne 0x4002ce0	      1783	ops.c	FUNCTION_33	IF_5
0x4002c1e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1784	ops.c	FUNCTION_33	IF_5
0x4002c25	          0x8b4060	            mov eax, dword [rax + 0x60] 	      1784	ops.c	FUNCTION_33	IF_5
0x4002c28	            0x85c0	                           test eax, eax	      1784	ops.c	FUNCTION_33	IF_5
0x4002c2a	     0xf85b0000000	                           jne 0x4002ce0	      1784	ops.c	FUNCTION_33	IF_5
0x4002c30	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1785	ops.c	FUNCTION_33	IF_5
0x4002c37	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1785	ops.c	FUNCTION_33	IF_5
0x4002c3b	        0x4883f801	                              cmp rax, 1	      1785	ops.c	FUNCTION_33	IF_5
0x4002c3f	     0xf8e9b000000	                           jle 0x4002ce0	      1785	ops.c	FUNCTION_33	IF_5
0x4002c45	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1786	ops.c	FUNCTION_33	IF_5
0x4002c4c	          0x8b400c	              mov eax, dword [rax + 0xc]	      1786	ops.c	FUNCTION_33	IF_5
0x4002c4f	            0x85c0	                           test eax, eax	      1786	ops.c	FUNCTION_33	IF_5
0x4002c51	     0xf8589000000	                           jne 0x4002ce0	      1786	ops.c	FUNCTION_33	IF_5
0x4002c57	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1787	ops.c	FUNCTION_33	IF_5
0x4002c5e	            0x8b00	                    mov eax, dword [rax]	      1787	ops.c	FUNCTION_33	IF_5
0x4002c60	          0x83f801	                              cmp eax, 1	      1787	ops.c	FUNCTION_33	IF_5
0x4002c63	            0x757b	                           jne 0x4002ce0	      1787	ops.c	FUNCTION_33	IF_5
0x4002c65	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x4002c6c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x4002c70	          0x4889c7	                            mov rdi, rax	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x4002c73	      0xe800000000	                          call 0x4002c78	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x4002c78	          0x4889c2	                            mov rdx, rax	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x4002c7b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x4002c82	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x4002c85	            0x4898	                                    cdqe	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x4002c87	          0x4801d0	                            add rax, rdx	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x4002c8a	        0x48894588	             mov qword [rbp - 0x78], rax	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x4002c8e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1790	ops.c	FUNCTION_33	IF_5	IF_6
0x4002c92	           0xfb600	                   movzx eax, byte [rax]	      1790	ops.c	FUNCTION_33	IF_5	IF_6
0x4002c95	            0x84c0	                             test al, al	      1790	ops.c	FUNCTION_33	IF_5	IF_6
0x4002c97	            0x7410	                            je 0x4002ca9	      1790	ops.c	FUNCTION_33	IF_5	IF_6
0x4002c99	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1791	ops.c	FUNCTION_33	IF_5	IF_6
0x4002ca0	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1791	ops.c	FUNCTION_33	IF_5	IF_6
0x4002ca3	            0x4898	                                    cdqe	      1791	ops.c	FUNCTION_33	IF_5	IF_6
0x4002ca5	        0x48014588	            add qword [rbp - 0x78], rax 	      1791	ops.c	FUNCTION_33	IF_5	IF_6
0x4002ca9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1792	ops.c	FUNCTION_33	IF_5	CALL_7
0x4002cad	          0x4889c7	                            mov rdi, rax	      1792	ops.c	FUNCTION_33	IF_5	CALL_7
0x4002cb0	      0xe800000000	                          call 0x4002cb5	      1792	ops.c	FUNCTION_33	IF_5	CALL_7
0x4002cb5	        0x48894588	             mov qword [rbp - 0x78], rax	      1792	ops.c	FUNCTION_33	IF_5	CALL_7
0x4002cb9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x4002cbd	           0xfb600	                   movzx eax, byte [rax]	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x4002cc0	            0x84c0	                             test al, al	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x4002cc2	            0x751c	                           jne 0x4002ce0	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x4002cc4	      0xbf00000000	                              mov edi, 0	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x4002cc9	      0xe800000000	                          call 0x4002cce	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x4002cce	            0x85c0	                           test eax, eax	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x4002cd0	            0x740e	                            je 0x4002ce0	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x4002cd2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1794	ops.c	FUNCTION_33	IF_5	IF_7
0x4002cd9	    0xc74008010000	                  mov dword [rax + 8], 1	      1794	ops.c	FUNCTION_33	IF_5	IF_7
0x4002ce0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1801	ops.c	FUNCTION_33	IF_8
0x4002ce7	          0x8b4008	                mov eax, dword [rax + 8]	      1801	ops.c	FUNCTION_33	IF_8
0x4002cea	            0x85c0	                           test eax, eax	      1801	ops.c	FUNCTION_33	IF_8
0x4002cec	            0x756f	                           jne 0x4002d5d	      1801	ops.c	FUNCTION_33	IF_8
0x4002cee	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1802	ops.c	FUNCTION_33	IF_8
0x4002cf5	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1802	ops.c	FUNCTION_33	IF_8
0x4002cf9	        0x4883f801	                              cmp rax, 1	      1802	ops.c	FUNCTION_33	IF_8
0x4002cfd	            0x755e	                           jne 0x4002d5d	      1802	ops.c	FUNCTION_33	IF_8
0x4002cff	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1803	ops.c	FUNCTION_33	IF_8
0x4002d06	            0x8b00	                    mov eax, dword [rax]	      1803	ops.c	FUNCTION_33	IF_8
0x4002d08	          0x83f801	                              cmp eax, 1	      1803	ops.c	FUNCTION_33	IF_8
0x4002d0b	            0x7550	                           jne 0x4002d5d	      1803	ops.c	FUNCTION_33	IF_8
0x4002d0d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x4002d14	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x4002d18	          0x4889c7	                            mov rdi, rax	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x4002d1b	      0xe800000000	                          call 0x4002d20	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x4002d20	           0xfb600	                   movzx eax, byte [rax]	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x4002d23	            0x84c0	                             test al, al	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x4002d25	            0x7536	                           jne 0x4002d5d	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x4002d27	    0x8b0500000000	            mov eax, dword [0x04002d2d] 	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x4002d2d	            0x85c0	                           test eax, eax	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x4002d2f	     0xf85fa0a0000	                           jne 0x400382f	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x4002d35	    0x488b05000000	            mov rax, qword [0x04002d3c] 	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x4002d3c	      0xbe45000000	                           mov esi, 0x45	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x4002d41	          0x4889c7	                            mov rdi, rax	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x4002d44	      0xe800000000	                          call 0x4002d49	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x4002d49	          0x4885c0	                           test rax, rax	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x4002d4c	            0x7405	                            je 0x4002d53	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x4002d4e	      0xe800000000	                          call 0x4002d53	      1817	ops.c	FUNCTION_33	IF_8	CALL_11
0x4002d53	      0xb801000000	                              mov eax, 1	      1818	ops.c	FUNCTION_33	IF_8
0x4002d58	      0xe9600b0000	                           jmp 0x40038bd	      1818	ops.c	FUNCTION_33	IF_8
0x4002d5d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1826	ops.c	FUNCTION_33	IF_11
0x4002d64	          0x8b4004	                mov eax, dword [rax + 4]	      1826	ops.c	FUNCTION_33	IF_11
0x4002d67	          0x83f85f	                           cmp eax, 0x5f	      1826	ops.c	FUNCTION_33	IF_11
0x4002d6a	     0xf8431020000	                            je 0x4002fa1	      1826	ops.c	FUNCTION_33	IF_11
0x4002d70	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1828	ops.c	FUNCTION_33	IF_11	IF_12
0x4002d77	          0x8b4004	                mov eax, dword [rax + 4]	      1828	ops.c	FUNCTION_33	IF_11	IF_12
0x4002d7a	            0x85c0	                           test eax, eax	      1828	ops.c	FUNCTION_33	IF_11	IF_12
0x4002d7c	            0x7467	                            je 0x4002de5	      1828	ops.c	FUNCTION_33	IF_11	IF_12
0x4002d7e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x4002d85	          0x8b4004	                mov eax, dword [rax + 4]	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x4002d88	      0xbe01000000	                              mov esi, 1	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x4002d8d	            0x89c7	                            mov edi, eax	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x4002d8f	      0xe800000000	                          call 0x4002d94	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x4002d94	            0x85c0	                           test eax, eax	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x4002d96	            0x750f	                           jne 0x4002da7	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x4002d98	      0xe800000000	                          call 0x4002d9d	      1833	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_13
0x4002d9d	      0xb801000000	                              mov eax, 1	      1834	ops.c	FUNCTION_33	IF_11	IF_12	IF_13
0x4002da2	      0xe9160b0000	                           jmp 0x40038bd	      1834	ops.c	FUNCTION_33	IF_11	IF_12	IF_13
0x4002da7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x4002dae	          0x8b4004	                mov eax, dword [rax + 4]	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x4002db1	      0xbe01000000	                              mov esi, 1	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x4002db6	            0x89c7	                            mov edi, eax	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x4002db8	      0xe800000000	                          call 0x4002dbd	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x4002dbd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x4002dc4	      0xba00000000	                              mov edx, 0	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x4002dc9	      0xbe01000000	                              mov esi, 1	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x4002dce	          0x4889c7	                            mov rdi, rax	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x4002dd1	      0xe800000000	                          call 0x4002dd6	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x4002dd6	          0x83f801	                              cmp eax, 1	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x4002dd9	            0x750a	                           jne 0x4002de5	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x4002ddb	    0xc7856cffffff	               mov dword [rbp - 0x94], 1	      1838	ops.c	FUNCTION_33	IF_11	IF_12	IF_14
0x4002de5	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x4002dec	            0x752e	                           jne 0x4002e1c	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x4002dee	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x4002df5	          0x8b4008	                mov eax, dword [rax + 8]	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x4002df8	          0x83f801	                              cmp eax, 1	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x4002dfb	            0x741f	                            je 0x4002e1c	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x4002dfd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x4002e04	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x4002e08	        0x4883f801	                              cmp rax, 1	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x4002e0c	            0x7f0e	                            jg 0x4002e1c	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x4002e0e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x4002e15	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x4002e18	            0x85c0	                           test eax, eax	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x4002e1a	            0x742d	                            je 0x4002e49	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x4002e1c	      0xe800000000	                          call 0x4002e21	      1850	ops.c	FUNCTION_33	IF_11	IF_15	CALL_16
0x4002e21	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x4002e28	      0xba00000000	                              mov edx, 0	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x4002e2d	      0xbe01000000	                              mov esi, 1	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x4002e32	          0x4889c7	                            mov rdi, rax	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x4002e35	      0xe800000000	                          call 0x4002e3a	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x4002e3a	          0x83f801	                              cmp eax, 1	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x4002e3d	            0x750a	                           jne 0x4002e49	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x4002e3f	    0xc7856cffffff	               mov dword [rbp - 0x94], 1	      1852	ops.c	FUNCTION_33	IF_11	IF_15	IF_16
0x4002e49	    0x8b0500000000	            mov eax, dword [0x04002e4f] 	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e4f	          0x83e001	                              and eax, 1	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e52	            0x85c0	                           test eax, eax	      1857	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e54	            0x740f	                            je 0x4002e65	      1857	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e56	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e5d	          0x8b4004	                mov eax, dword [rax + 4]	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e60	          0x83f82a	                           cmp eax, 0x2a	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e63	            0x742a	                            je 0x4002e8f	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e65	    0x8b0500000000	            mov eax, dword [0x04002e6b] 	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e6b	          0x83e002	                              and eax, 2	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e6e	            0x85c0	                           test eax, eax	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e70	            0x740f	                            je 0x4002e81	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e72	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e79	          0x8b4004	                mov eax, dword [rax + 4]	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e7c	          0x83f82b	                           cmp eax, 0x2b	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e7f	            0x740e	                            je 0x4002e8f	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e81	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e88	          0x8b4004	                mov eax, dword [rax + 4]	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e8b	            0x85c0	                           test eax, eax	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e8d	            0x757a	                           jne 0x4002f09	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e8f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e96	          0x8b4008	                mov eax, dword [rax + 8]	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e99	          0x83f801	                              cmp eax, 1	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e9c	            0x746b	                            je 0x4002f09	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x4002e9e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1863	ops.c	FUNCTION_33	IF_11	IF_17
0x4002ea5	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1863	ops.c	FUNCTION_33	IF_11	IF_17
0x4002ea9	        0x4883f801	                              cmp rax, 1	      1863	ops.c	FUNCTION_33	IF_11	IF_17
0x4002ead	            0x755a	                           jne 0x4002f09	      1863	ops.c	FUNCTION_33	IF_11	IF_17
0x4002eaf	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1865	ops.c	FUNCTION_33	IF_11	IF_17
0x4002eb6	    0xc740042d0000	               mov dword [rax + 4], 0x2d	      1865	ops.c	FUNCTION_33	IF_11	IF_17
0x4002ebd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1866	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x4002ec4	          0x8b4004	                mov eax, dword [rax + 4]	      1866	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x4002ec7	      0xbe01000000	                              mov esi, 1	      1866	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x4002ecc	            0x89c7	                            mov edi, eax	      1866	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x4002ece	      0xe800000000	                          call 0x4002ed3	      1866	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x4002ed3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x4002eda	      0xba00000000	                              mov edx, 0	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x4002edf	      0xbe01000000	                              mov esi, 1	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x4002ee4	          0x4889c7	                            mov rdi, rax	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x4002ee7	      0xe800000000	                          call 0x4002eec	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x4002eec	          0x83f801	                              cmp eax, 1	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x4002eef	            0x750a	                           jne 0x4002efb	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x4002ef1	    0xc7856cffffff	               mov dword [rbp - 0x94], 1	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x4002efb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1869	ops.c	FUNCTION_33	IF_11	IF_17
0x4002f02	    0xc74004000000	                  mov dword [rax + 4], 0	      1869	ops.c	FUNCTION_33	IF_11	IF_17
0x4002f09	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1878	ops.c	FUNCTION_33	IF_11	IF_19
0x4002f10	            0x7564	                           jne 0x4002f76	      1878	ops.c	FUNCTION_33	IF_11	IF_19
0x4002f12	    0x8b0500000000	            mov eax, dword [0x04002f18] 	      1880	ops.c	FUNCTION_33	IF_11	IF_19
0x4002f18	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      1880	ops.c	FUNCTION_33	IF_11	IF_19
0x4002f1e	    0xc70500000000	               mov dword [0x04002f28], 0	      1882	ops.c	FUNCTION_33	IF_11	IF_19
0x4002f28	      0xbf00000000	                              mov edi, 0	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x4002f2d	      0xe800000000	                          call 0x4002f32	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x4002f32	      0xbe01000000	                              mov esi, 1	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x4002f37	          0x4889c7	                            mov rdi, rax	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x4002f3a	      0xe800000000	                          call 0x4002f3f	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x4002f3f	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x4002f45	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      1884	ops.c	FUNCTION_33	IF_11	IF_19
0x4002f4b	    0x890500000000	            mov dword [0x04002f51], eax 	      1884	ops.c	FUNCTION_33	IF_11	IF_19
0x4002f51	    0x83bd68ffffff	           cmp dword [rbp - 0x98], 0x79 	      1885	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x4002f58	            0x741c	                            je 0x4002f76	      1885	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x4002f5a	      0xbf00000000	                              mov edi, 0	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x4002f5f	      0xe800000000	                          call 0x4002f64	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x4002f64	          0x4889c7	                            mov rdi, rax	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x4002f67	      0xe800000000	                          call 0x4002f6c	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x4002f6c	      0xb800000000	                              mov eax, 0	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x4002f71	      0xe947090000	                           jmp 0x40038bd	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x4002f76	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x4002f7d	            0x7422	                            je 0x4002fa1	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x4002f7f	      0xe800000000	                          call 0x4002f84	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x4002f84	            0x85c0	                           test eax, eax	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x4002f86	            0x7419	                            je 0x4002fa1	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x4002f88	    0x488b15000000	            mov rdx, qword [0x04002f8f] 	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x4002f8f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x4002f96	          0x4889d6	                            mov rsi, rdx	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x4002f99	          0x4889c7	                            mov rdi, rax	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x4002f9c	      0xe83bf9ffff	                call sym.yank_do_autocmd	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x4002fa1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1901	ops.c	FUNCTION_33	IF_22
0x4002fa8	          0x8b4060	            mov eax, dword [rax + 0x60] 	      1901	ops.c	FUNCTION_33	IF_22
0x4002fab	            0x85c0	                           test eax, eax	      1901	ops.c	FUNCTION_33	IF_22
0x4002fad	     0xf8405020000	                            je 0x40031b8	      1901	ops.c	FUNCTION_33	IF_22
0x4002fb3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1904	ops.c	FUNCTION_33	IF_22	IF_23
0x4002fba	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1904	ops.c	FUNCTION_33	IF_22	IF_23
0x4002fbe	        0x488d5001	                      lea rdx, [rax + 1]	      1904	ops.c	FUNCTION_33	IF_22	IF_23
0x4002fc2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x4002fc9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x4002fcd	        0x4883e801	                              sub rax, 1	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x4002fd1	          0x4889d6	                            mov rsi, rdx	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x4002fd4	          0x4889c7	                            mov rdi, rax	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x4002fd7	      0xe800000000	                          call 0x4002fdc	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x4002fdc	            0x85c0	                           test eax, eax	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x4002fde	            0x750a	                           jne 0x4002fea	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x4002fe0	      0xb800000000	                              mov eax, 0	      1905	ops.c	FUNCTION_33	IF_22	IF_23
0x4002fe5	      0xe9d3080000	                           jmp 0x40038bd	      1905	ops.c	FUNCTION_33	IF_22	IF_23
0x4002fea	    0x488b05000000	            mov rax, qword [0x04002ff1] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x4002ff1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x4002ff5	        0x48894580	             mov qword [rbp - 0x80], rax	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x4002ff9	      0xe95b010000	                           jmp 0x4003159	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x4002ffe	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x4003002	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x4003006	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400300d	      0xb901000000	                              mov ecx, 1	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x4003012	          0x4889c7	                            mov rdi, rax	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x4003015	      0xe833780000	                     call sym.block_prep	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400301a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x400301d	            0x85c0	                           test eax, eax	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x400301f	     0xf842b010000	                            je 0x4003150	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x4003025	    0x488b05000000	            mov rax, qword [0x0400302c] 	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400302c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x4003030	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x4003034	            0x7520	                           jne 0x4003056	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x4003036	    0x488b05000000	            mov rax, qword [0x0400303d] 	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400303d	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x4003040	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x4003043	             0x1ca	                            add edx, ecx	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x4003045	          0x895040	             mov dword [rax + 0x40], edx	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x4003048	    0x488b05000000	            mov rax, qword [0x0400304f] 	      1918	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400304f	    0xc74044000000	               mov dword [rax + 0x44], 0	      1918	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x4003056	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x4003059	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x400305c	            0x29c2	                            sub edx, eax	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x400305e	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x4003061	            0x29c2	                            sub edx, eax	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x4003063	            0x89d0	                            mov eax, edx	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x4003065	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x400306b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x400306f	          0x4889c7	                            mov rdi, rax	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x4003072	      0xe800000000	                          call 0x4003077	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x4003077	        0x48894598	             mov qword [rbp - 0x68], rax	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x400307b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400307f	          0x4889c7	                            mov rdi, rax	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x4003082	      0xe800000000	                          call 0x4003087	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x4003087	            0x89c2	                            mov edx, eax	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x4003089	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400308f	            0x29c2	                            sub edx, eax	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x4003091	            0x89d0	                            mov eax, edx	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x4003093	          0x83c001	                              add eax, 1	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x4003096	            0x89c7	                            mov edi, eax	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x4003098	      0xe800000000	                          call 0x400309d	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400309d	        0x488945a0	             mov qword [rbp - 0x60], rax	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x40030a1	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1929	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x40030a6	     0xf84a7000000	                            je 0x4003153	      1929	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x40030ac	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1932	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x40030af	          0x4863d0	                         movsxd rdx, eax	      1932	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x40030b2	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1932	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x40030b6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1932	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x40030ba	          0x4889ce	                            mov rsi, rcx	      1932	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x40030bd	          0x4889c7	                            mov rdi, rax	      1932	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x40030c0	      0xe800000000	                          call 0x40030c5	      1932	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x40030c5	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030c8	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030cb	             0x1d0	                            add eax, edx	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030cd	            0x4898	                                    cdqe	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030cf	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030d2	          0x4863ca	                         movsxd rcx, edx	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030d5	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030d9	          0x4801d1	                            add rcx, rdx	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030dc	          0x4889c2	                            mov rdx, rax	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030df	      0xbe20000000	                           mov esi, 0x20	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030e4	          0x4889cf	                            mov rdi, rcx	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030e7	      0xe800000000	                          call 0x40030ec	      1934	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x40030ec	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x40030ef	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x40030f2	             0x1d0	                            add eax, edx	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x40030f4	            0x4898	                                    cdqe	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x40030f6	        0x48014598	            add qword [rbp - 0x68], rax 	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x40030fa	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x40030fe	          0x4889c7	                            mov rdi, rax	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x4003101	      0xe800000000	                          call 0x4003106	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x4003106	        0x488d5001	                      lea rdx, [rax + 1]	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400310a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400310d	          0x4863c8	                         movsxd rcx, eax	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x4003110	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x4003113	            0x4898	                                    cdqe	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x4003115	          0x4801c1	                            add rcx, rax	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x4003118	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400311b	            0x4898	                                    cdqe	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400311d	          0x4801c1	                            add rcx, rax	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x4003120	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x4003124	          0x4801c1	                            add rcx, rax	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x4003127	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400312b	          0x4889c6	                            mov rsi, rax	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400312e	          0x4889cf	                            mov rdi, rcx	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x4003131	      0xe800000000	                          call 0x4003136	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x4003136	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400313a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400313e	      0xba00000000	                              mov edx, 0	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x4003143	          0x4889ce	                            mov rsi, rcx	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x4003146	          0x4889c7	                            mov rdi, rax	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x4003149	      0xe800000000	                          call 0x400314e	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400314e	            0xeb04	                           jmp 0x4003154	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x4003150	              0x90	                                     nop	      1911	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x4003151	            0xeb01	                           jmp 0x4003154	      1911	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x4003153	              0x90	                                     nop	      1930	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x4003154	      0x4883458001	               add qword [rbp - 0x80], 1	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x4003159	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x4003160	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x4003164	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x4003168	     0xf8d90feffff	                           jge 0x4002ffe	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400316e	      0xe800000000	                          call 0x4003173	      1943	ops.c	FUNCTION_33	IF_22	CALL_35
0x4003173	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1945	ops.c	FUNCTION_33	IF_22
0x400317a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1945	ops.c	FUNCTION_33	IF_22
0x400317e	        0x488d5001	                      lea rdx, [rax + 1]	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x4003182	    0x488b05000000	            mov rax, qword [0x04003189] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x4003189	          0x8b7040	            mov esi, dword [rax + 0x40] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400318c	    0x488b05000000	            mov rax, qword [0x04003193] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x4003193	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x4003197	      0xb900000000	                              mov ecx, 0	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400319c	          0x4889c7	                            mov rdi, rax	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400319f	      0xe800000000	                          call 0x40031a4	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x40031a4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1946	ops.c	FUNCTION_33	IF_22
0x40031ab	    0x48c740500000	               mov qword [rax + 0x50], 0	      1946	ops.c	FUNCTION_33	IF_22
0x40031b3	      0xe95f060000	                           jmp 0x4003817	      1946	ops.c	FUNCTION_33	IF_22
0x40031b8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27
0x40031bf	          0x8b4008	                mov eax, dword [rax + 8]	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27
0x40031c2	          0x83f801	                              cmp eax, 1	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27
0x40031c5	     0xf8519010000	                           jne 0x40032e4	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27
0x40031cb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1950	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x40031d2	            0x8b00	                    mov eax, dword [rax]	      1950	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x40031d4	          0x83f803	                              cmp eax, 3	      1950	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x40031d7	     0xf85db000000	                           jne 0x40032b8	      1950	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x40031dd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x40031e4	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x40031e8	        0x4883f801	                              cmp rax, 1	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x40031ec	            0x7e4d	                           jle 0x400323b	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x40031ee	    0x488b05000000	            mov rax, qword [0x040031f5] 	      1958	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x40031f5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1958	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x40031f9	        0x48894580	             mov qword [rbp - 0x80], rax	      1958	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x40031fd	    0x488b05000000	            mov rax, qword [0x04003204] 	      1959	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x4003204	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1959	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x4003208	        0x4883c201	                              add rdx, 1	      1959	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400320c	        0x48895038	             mov qword [rax + 0x38], rdx	      1959	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x4003210	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x4003217	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400321b	        0x4883e801	                              sub rax, 1	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400321f	      0xbe01000000	                              mov esi, 1	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x4003224	          0x4889c7	                            mov rdi, rax	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x4003227	      0xe800000000	                          call 0x400322c	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400322c	    0x488b05000000	            mov rax, qword [0x04003233] 	      1961	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x4003233	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1961	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x4003237	        0x48895038	             mov qword [rax + 0x38], rdx	      1961	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400323b	      0xe800000000	                          call 0x4003240	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x4003240	            0x85c0	                           test eax, eax	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x4003242	            0x750a	                           jne 0x400324e	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x4003244	      0xb800000000	                              mov eax, 0	      1964	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30
0x4003249	      0xe96f060000	                           jmp 0x40038bd	      1964	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30
0x400324e	    0x488b05000000	            mov rax, qword [0x04003255] 	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x4003255	    0x8b80ec130000	          mov eax, dword [rax + 0x13ec] 	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400325b	            0x85c0	                           test eax, eax	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400325d	            0x7426	                            je 0x4003285	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400325f	      0xbf01000000	                              mov edi, 1	      1967	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31	CALL_39
0x4003264	      0xe800000000	                          call 0x4003269	      1967	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31	CALL_39
0x4003269	    0xc70500000000	               mov dword [0x04003273], 1	      1968	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x4003273	    0x488b05000000	            mov rax, qword [0x0400327a] 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400327a	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400327d	    0x890500000000	            mov dword [0x04003283], eax 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x4003283	            0xeb0a	                           jmp 0x400328f	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x4003285	      0xbf00000000	                              mov edi, 0	      1972	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x400328a	      0xe800000000	                          call 0x400328f	      1972	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x400328f	      0xbf00000000	                              mov edi, 0	      1973	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_41
0x4003294	      0xe800000000	                          call 0x4003299	      1973	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_41
0x4003299	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1975	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x40032a0	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1975	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x40032a4	        0x4883f801	                              cmp rax, 1	      1975	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x40032a8	     0xf8e69050000	                           jle 0x4003817	      1975	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x40032ae	      0xe800000000	                          call 0x40032b3	      1976	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_42
0x40032b3	      0xe95f050000	                           jmp 0x4003817	      1976	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_42
0x40032b8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x40032bf	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x40032c3	      0xbe01000000	                              mov esi, 1	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x40032c8	          0x4889c7	                            mov rdi, rax	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x40032cb	      0xe800000000	                          call 0x40032d0	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x40032d0	      0xbf05000000	                              mov edi, 5	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x40032d5	      0xe800000000	                          call 0x40032da	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x40032da	      0xe800000000	                          call 0x40032df	      1982	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x40032df	      0xe933050000	                           jmp 0x4003817	      1982	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x40032e4	    0x8b0500000000	            mov eax, dword [0x040032ea] 	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33
0x40032ea	            0x85c0	                           test eax, eax	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33
0x40032ec	     0xf8400020000	                            je 0x40034f2	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33
0x40032f2	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	      1990	ops.c	FUNCTION_33	ELSE_4	IF_33
0x40032fc	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x4003303	        0x4883c020	                           add rax, 0x20	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x4003307	          0x4889c7	                            mov rdi, rax	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400330a	      0xe800000000	                          call 0x400330f	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400330f	          0x83f809	                              cmp eax, 9	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x4003312	     0xf85ed000000	                           jne 0x4003405	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x4003318	      0xe800000000	                          call 0x400331d	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400331d	            0x85c0	                           test eax, eax	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400331f	            0x750a	                           jne 0x400332b	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x4003321	      0xb800000000	                              mov eax, 0	      1996	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35
0x4003326	      0xe992050000	                           jmp 0x40038bd	      1996	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35
0x400332b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x4003332	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x4003336	        0x4883f801	                              cmp rax, 1	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x400333a	            0x7523	                           jne 0x400335f	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x400333c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x4003343	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x4003346	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400334d	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x4003350	            0x89d6	                            mov esi, edx	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x4003352	            0x89c7	                            mov edi, eax	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x4003354	      0xe800000000	                          call 0x4003359	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x4003359	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400335f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x4003366	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x4003369	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x4003370	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x4003373	            0x89d6	                            mov esi, edx	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x4003375	            0x89c7	                            mov edi, eax	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x4003377	      0xe800000000	                          call 0x400337c	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400337c	            0x89c7	                            mov edi, eax	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400337e	      0xe800000000	                          call 0x4003383	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x4003383	    0x488b05000000	            mov rax, qword [0x0400338a] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400338a	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x4003391	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x4003395	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x4003399	        0x48894120	             mov qword [rcx + 0x20], rax	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400339d	        0x48895128	             mov qword [rcx + 0x28], rdx	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x40033a1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2001	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033a8	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2001	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033ac	        0x4883f801	                              cmp rax, 1	      2001	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033b0	            0x7553	                           jne 0x4003405	      2001	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033b2	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      2003	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x40033b8	            0x89c7	                            mov edi, eax	      2003	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x40033ba	      0xe800000000	                          call 0x40033bf	      2003	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x40033bf	    0x488b05000000	            mov rax, qword [0x040033c6] 	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033c6	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033c9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033d0	          0x895038	             mov dword [rax + 0x38], edx	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033d3	    0x488b05000000	            mov rax, qword [0x040033da] 	      2005	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033da	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2005	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033dd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2005	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033e4	          0x89503c	             mov dword [rax + 0x3c], edx	      2005	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033e7	    0x488b0d000000	            mov rcx, qword [0x040033ee] 	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033ee	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033f5	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033f9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x40033fd	        0x48894138	             mov qword [rcx + 0x38], rax	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x4003401	        0x48895140	             mov qword [rcx + 0x40], rdx	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x4003405	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400340c	        0x4883c030	                           add rax, 0x30	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x4003410	          0x4889c7	                            mov rdi, rax	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x4003413	      0xe800000000	                          call 0x4003418	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x4003418	          0x83f809	                              cmp eax, 9	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400341b	     0xf85d1000000	                           jne 0x40034f2	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x4003421	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x4003428	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400342b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x4003432	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x4003435	            0x39c2	                            cmp edx, eax	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x4003437	     0xf8db5000000	                           jge 0x40034f2	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400343d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2016	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x4003444	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2016	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x4003448	        0x488d5001	                      lea rdx, [rax + 1]	      2016	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x400344c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x4003453	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x4003457	        0x4883e801	                              sub rax, 1	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400345b	          0x4889d6	                            mov rsi, rdx	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400345e	          0x4889c7	                            mov rdi, rax	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x4003461	      0xe800000000	                          call 0x4003466	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x4003466	            0x85c0	                           test eax, eax	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x4003468	            0x750a	                           jne 0x4003474	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400346a	      0xb800000000	                              mov eax, 0	      2017	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x400346f	      0xe949040000	                           jmp 0x40038bd	      2017	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x4003474	    0x488b0d000000	            mov rcx, qword [0x0400347b] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400347b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x4003482	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x4003486	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400348a	        0x48894138	             mov qword [rcx + 0x38], rax	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400348e	        0x48895140	             mov qword [rcx + 0x40], rdx	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x4003492	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x4003499	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400349c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x40034a3	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x40034a6	            0x89d6	                            mov esi, edx	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x40034a8	            0x89c7	                            mov edi, eax	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x40034aa	      0xe800000000	                          call 0x40034af	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x40034af	            0x89c7	                            mov edi, eax	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x40034b1	      0xe800000000	                          call 0x40034b6	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x40034b6	    0x488b05000000	            mov rax, qword [0x040034bd] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034bd	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034c4	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034c8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034cc	        0x48894130	             mov qword [rcx + 0x30], rax	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034d0	        0x48895138	             mov qword [rcx + 0x38], rdx	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034d4	    0x488b0d000000	            mov rcx, qword [0x040034db] 	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034db	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034e2	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034e6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034ea	        0x48894138	             mov qword [rcx + 0x38], rax	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034ee	        0x48895140	             mov qword [rcx + 0x40], rdx	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x40034f2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40034f9	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40034fd	        0x4883f801	                              cmp rax, 1	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x4003501	     0xf85ca010000	                           jne 0x40036d1	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x4003507	      0xe800000000	                          call 0x400350c	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400350c	            0x85c0	                           test eax, eax	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400350e	            0x750a	                           jne 0x400351a	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x4003510	      0xb800000000	                              mov eax, 0	      2029	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41
0x4003515	      0xe9a3030000	                           jmp 0x40038bd	      2029	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41
0x400351a	    0x488b05000000	            mov rax, qword [0x04003521] 	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x4003521	      0xbe24000000	                           mov esi, 0x24	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x4003526	          0x4889c7	                            mov rdi, rax	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x4003529	      0xe800000000	                          call 0x400352e	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400352e	          0x4885c0	                           test rax, rax	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x4003531	            0x745e	                            je 0x4003591	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x4003533	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2033	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400353a	            0x8b00	                    mov eax, dword [rax]	      2033	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400353c	          0x83f803	                              cmp eax, 3	      2033	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400353f	            0x7550	                           jne 0x4003591	      2033	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x4003541	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x4003548	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400354c	    0x488b05000000	            mov rax, qword [0x04003553] 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x4003553	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x4003557	          0x4839c2	                            cmp rdx, rax	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400355a	            0x7535	                           jne 0x4003591	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400355c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x4003563	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x4003566	            0x85c0	                           test eax, eax	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x4003568	            0x7527	                           jne 0x4003591	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400356a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x4003571	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x4003574	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400357b	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400357e	            0x85c0	                           test eax, eax	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x4003580	           0xf94c0	                                 sete al	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x4003583	           0xfb6c0	                           movzx eax, al	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x4003586	            0x29c2	                            sub edx, eax	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x4003588	            0x89d0	                            mov eax, edx	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400358a	            0x89c7	                            mov edi, eax	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400358c	      0xe800000000	                          call 0x4003591	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x4003591	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x4003598	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400359b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035a2	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035a5	            0x29c2	                            sub edx, eax	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035a7	            0x89d0	                            mov eax, edx	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035a9	          0x8d5001	                      lea edx, [rax + 1]	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035ac	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035b3	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035b6	            0x85c0	                           test eax, eax	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035b8	           0xf94c0	                                 sete al	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035bb	           0xfb6c0	                           movzx eax, al	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035be	            0x29c2	                            sub edx, eax	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035c0	            0x89d0	                            mov eax, edx	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035c2	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x40035c8	    0x8b0500000000	            mov eax, dword [0x040035ce] 	      2041	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x40035ce	            0x85c0	                           test eax, eax	      2041	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x40035d0	     0xf84ae000000	                            je 0x4003684	      2041	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x40035d6	      0xe800000000	                          call 0x40035db	      2046	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_59
0x40035db	        0x488945a8	             mov qword [rbp - 0x58], rax	      2046	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_59
0x40035df	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x40035e3	          0x4889c7	                            mov rdi, rax	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x40035e6	      0xe800000000	                          call 0x40035eb	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x40035eb	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x40035f1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x40035f8	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x40035fb	            0x85c0	                           test eax, eax	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x40035fd	            0x7443	                            je 0x4003642	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x40035ff	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003606	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003609	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400360f	          0x83ea01	                              sub edx, 1	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003612	            0x39d0	                            cmp eax, edx	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003614	            0x7c2c	                            jl 0x4003642	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003616	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2051	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400361d	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2051	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003620	            0x85c0	                           test eax, eax	      2051	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003622	            0x7417	                            je 0x400363b	      2051	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003624	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2051	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400362b	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2051	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400362e	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	      2051	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003634	          0x83ea01	                              sub edx, 1	      2051	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003637	            0x39d0	                            cmp eax, edx	      2051	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003639	            0x7d07	                           jge 0x4003642	      2051	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400363b	    0x838568ffffff	               add dword [rbp - 0x98], 1	      2052	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x4003642	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x4003649	            0x7522	                           jne 0x400366d	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400364b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x4003652	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x4003655	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400365c	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400365f	            0x39c2	                            cmp edx, eax	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x4003661	            0x740a	                            je 0x400366d	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x4003663	    0xc78568ffffff	               mov dword [rbp - 0x98], 1	      2055	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400366d	      0xe800000000	                          call 0x4003672	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x4003672	            0x85c0	                           test eax, eax	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x4003674	            0x740e	                            je 0x4003684	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x4003676	    0x488b05000000	            mov rax, qword [0x0400367d] 	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x400367d	    0xc74044000000	               mov dword [rax + 0x44], 0	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x4003684	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2063	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400368b	            0x8b00	                    mov eax, dword [rax]	      2063	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400368d	          0x83f801	                              cmp eax, 1	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x4003690	            0x7515	                           jne 0x40036a7	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x4003692	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2063	ops.c	FUNCTION_33	ELSE_4	IF_40
0x4003699	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2063	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400369c	            0x85c0	                           test eax, eax	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400369e	            0x7507	                           jne 0x40036a7	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036a0	      0xba01000000	                              mov edx, 1	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036a5	            0xeb05	                           jmp 0x40036ac	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036a7	      0xba00000000	                              mov edx, 0	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036ac	    0x8b0500000000	            mov eax, dword [0x040036b2] 	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036b2	            0x85c0	                           test eax, eax	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036b4	           0xf94c0	                                 sete al	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036b7	           0xfb6c8	                           movzx ecx, al	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036ba	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036c0	            0x4898	                                    cdqe	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036c2	            0x89ce	                            mov esi, ecx	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036c4	          0x4889c7	                            mov rdi, rax	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036c7	      0xe800000000	                          call 0x40036cc	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036cc	      0xe946010000	                           jmp 0x4003817	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x40036d1	    0x488b05000000	            mov rax, qword [0x040036d8] 	      2071	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x40036d8	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2071	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x40036dc	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2071	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x40036e3	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2071	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x40036e7	          0x4801c2	                            add rdx, rax	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x40036ea	    0x488b05000000	            mov rax, qword [0x040036f1] 	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x40036f1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x40036f5	        0x4883e801	                              sub rax, 1	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x40036f9	          0x4889d6	                            mov rsi, rdx	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x40036fc	          0x4889c7	                            mov rdi, rax	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x40036ff	      0xe800000000	                          call 0x4003704	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x4003704	            0x85c0	                           test eax, eax	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x4003706	            0x750a	                           jne 0x4003712	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x4003708	      0xb800000000	                              mov eax, 0	      2072	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x400370d	      0xe9ab010000	                           jmp 0x40038bd	      2072	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x4003712	      0xbf01000000	                              mov edi, 1	      2074	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_64
0x4003717	      0xe800000000	                          call 0x400371c	      2074	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_64
0x400371c	    0x488b05000000	            mov rax, qword [0x04003723] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003723	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003727	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400372b	        0x488945b0	             mov qword [rbp - 0x50], rax	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400372f	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003733	    0x488b05000000	            mov rax, qword [0x0400373a] 	      2077	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400373a	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2077	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400373e	        0x4883c201	                              add rdx, 1	      2077	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003742	        0x48895038	             mov qword [rax + 0x38], rdx	      2077	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003746	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400374d	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x4003751	        0x4883e802	                              sub rax, 2	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x4003755	      0xbe00000000	                              mov esi, 0	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400375a	          0x4889c7	                            mov rdi, rax	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400375d	      0xe800000000	                          call 0x4003762	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x4003762	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003769	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400376c	          0x8d5001	                      lea edx, [rax + 1]	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400376f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003776	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003779	            0x85c0	                           test eax, eax	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400377b	           0xf94c0	                                 sete al	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400377e	           0xfb6c0	                           movzx eax, al	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003781	            0x29c2	                            sub edx, eax	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003783	            0x89d0	                            mov eax, edx	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003785	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400378b	    0x488b05000000	            mov rax, qword [0x04003792] 	      2082	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003792	    0xc74040000000	               mov dword [rax + 0x40], 0	      2082	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x4003799	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2084	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x40037a0	            0x8b00	                    mov eax, dword [rax]	      2084	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x40037a2	          0x83f801	                              cmp eax, 1	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037a5	            0x7515	                           jne 0x40037bc	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037a7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2084	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x40037ae	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2084	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x40037b1	            0x85c0	                           test eax, eax	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037b3	            0x7507	                           jne 0x40037bc	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037b5	      0xba01000000	                              mov edx, 1	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037ba	            0xeb05	                           jmp 0x40037c1	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037bc	      0xba00000000	                              mov edx, 0	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037c1	    0x8b0500000000	            mov eax, dword [0x040037c7] 	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037c7	            0x85c0	                           test eax, eax	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037c9	           0xf94c0	                                 sete al	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037cc	           0xfb6c8	                           movzx ecx, al	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037cf	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037d5	            0x4898	                                    cdqe	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037d7	            0x89ce	                            mov esi, ecx	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037d9	          0x4889c7	                            mov rdi, rax	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037dc	      0xe800000000	                          call 0x40037e1	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x40037e1	    0x488b0d000000	            mov rcx, qword [0x040037e8] 	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x40037e8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x40037ec	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x40037f0	        0x48894138	             mov qword [rcx + 0x38], rax	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x40037f4	        0x48895140	             mov qword [rcx + 0x40], rdx	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x40037f8	    0x41b800000000	                              mov r8d, 0	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x40037fe	      0xb900000000	                              mov ecx, 0	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x4003803	      0xba00000000	                              mov edx, 0	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x4003808	      0xbe00000000	                              mov esi, 0	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400380d	      0xbf02000000	                              mov edi, 2	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x4003812	      0xe800000000	                          call 0x4003817	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x4003817	    0x488b05000000	            mov rax, qword [0x0400381e] 	      2090	ops.c	FUNCTION_33	CALL_68
0x400381e	          0x488b00	                    mov rax, qword [rax]	      2090	ops.c	FUNCTION_33	CALL_68
0x4003821	        0x482b4590	             sub rax, qword [rbp - 0x70]	      2090	ops.c	FUNCTION_33	CALL_68
0x4003825	          0x4889c7	                            mov rdi, rax	      2090	ops.c	FUNCTION_33	CALL_68
0x4003828	      0xe800000000	                          call 0x400382d	      2090	ops.c	FUNCTION_33	CALL_68
0x400382d	            0xeb01	                           jmp 0x4003830	      2090	ops.c	FUNCTION_33	CALL_68
0x400382f	              0x90	                                     nop	      1814	ops.c	FUNCTION_33	IF_8	IF_9
0x4003830	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2095	ops.c	FUNCTION_33	IF_48
0x4003837	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2095	ops.c	FUNCTION_33	IF_48
0x400383a	            0x85c0	                           test eax, eax	      2095	ops.c	FUNCTION_33	IF_48
0x400383c	            0x7432	                            je 0x4003870	      2095	ops.c	FUNCTION_33	IF_48
0x400383e	    0x488b05000000	            mov rax, qword [0x04003845] 	      2097	ops.c	FUNCTION_33	IF_48
0x4003845	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2097	ops.c	FUNCTION_33	IF_48
0x400384c	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      2097	ops.c	FUNCTION_33	IF_48
0x4003850	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2097	ops.c	FUNCTION_33	IF_48
0x4003857	    0x488b05000000	            mov rax, qword [0x0400385e] 	      2098	ops.c	FUNCTION_33	IF_48
0x400385e	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2098	ops.c	FUNCTION_33	IF_48
0x4003865	          0x8b5228	            mov edx, dword [rdx + 0x28] 	      2098	ops.c	FUNCTION_33	IF_48
0x4003868	    0x899008120000	          mov dword [rax + 0x1208], edx 	      2098	ops.c	FUNCTION_33	IF_48
0x400386e	            0xeb24	                           jmp 0x4003894	      2098	ops.c	FUNCTION_33	IF_48
0x4003870	    0x488b0d000000	            mov rcx, qword [0x04003877] 	      2101	ops.c	FUNCTION_33	ELSE_6
0x4003877	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2101	ops.c	FUNCTION_33	ELSE_6
0x400387e	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2101	ops.c	FUNCTION_33	ELSE_6
0x4003882	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2101	ops.c	FUNCTION_33	ELSE_6
0x4003886	    0x488981001200	          mov qword [rcx + 0x1200], rax 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400388d	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	      2101	ops.c	FUNCTION_33	ELSE_6
0x4003894	    0x488b0d000000	            mov rcx, qword [0x0400389b] 	      2102	ops.c	FUNCTION_33	ELSE_6
0x400389b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2102	ops.c	FUNCTION_33	ELSE_6
0x40038a2	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2102	ops.c	FUNCTION_33	ELSE_6
0x40038a6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2102	ops.c	FUNCTION_33	ELSE_6
0x40038aa	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      2102	ops.c	FUNCTION_33	ELSE_6
0x40038b1	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      2102	ops.c	FUNCTION_33	ELSE_6
0x40038b8	      0xb801000000	                              mov eax, 1	      2104	ops.c	FUNCTION_33	ELSE_6
0x40038bd	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2105	ops.c	FUNCTION_33	ELSE_6
0x40038c1	    0x644833342528	                xor rsi, qword fs:[0x28]	      2105	ops.c	FUNCTION_33	ELSE_6
0x40038ca	            0x7405	                            je 0x40038d1	      2105	ops.c	FUNCTION_33	ELSE_6
0x40038cc	      0xe800000000	                          call 0x40038d1	      2105	ops.c	FUNCTION_33	ELSE_6
0x40038d1	              0xc9	                                   leave	      2105	ops.c	FUNCTION_33	ELSE_6
0x40038d2	              0xc3	                                     ret	      2105	ops.c	FUNCTION_33	ELSE_6
shift_block	ELSE,4:DO,0:IF,13:functions,0:WHILE,2:FOR,1:SWITCH,0:CALL,24	414
0x40005a2	              0x55	                                push rbp	       381	ops.c	FUNCTION_7
0x40005a3	          0x4889e5	                            mov rbp, rsp	       381	ops.c	FUNCTION_7
0x40005a6	              0x53	                                push rbx	       381	ops.c	FUNCTION_7
0x40005a7	    0x4881ece80000	                           sub rsp, 0xe8	       381	ops.c	FUNCTION_7
0x40005ae	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       381	ops.c	FUNCTION_7
0x40005b5	    0x89b514ffffff	             mov dword [rbp - 0xec], esi	       381	ops.c	FUNCTION_7
0x40005bb	    0x64488b042528	                mov rax, qword fs:[0x28]	       381	ops.c	FUNCTION_7
0x40005c4	        0x488945e8	             mov qword [rbp - 0x18], rax	       381	ops.c	FUNCTION_7
0x40005c8	            0x31c0	                            xor eax, eax	       381	ops.c	FUNCTION_7
0x40005ca	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       382	ops.c	FUNCTION_7
0x40005d1	            0x8b00	                    mov eax, dword [rax]	       382	ops.c	FUNCTION_7
0x40005d3	          0x83f804	                              cmp eax, 4	       382	ops.c	FUNCTION_7
0x40005d6	           0xf94c0	                                 sete al	       382	ops.c	FUNCTION_7
0x40005d9	           0xfb6c0	                           movzx eax, al	       382	ops.c	FUNCTION_7
0x40005dc	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       382	ops.c	FUNCTION_7
0x40005e2	    0x8b0500000000	            mov eax, dword [0x040005e8] 	       383	ops.c	FUNCTION_7
0x40005e8	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	       383	ops.c	FUNCTION_7
0x40005ee	    0x488b05000000	            mov rax, qword [0x040005f5] 	       386	ops.c	FUNCTION_7
0x40005f5	          0x8b4040	            mov eax, dword [rax + 0x40] 	       386	ops.c	FUNCTION_7
0x40005f8	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	       386	ops.c	FUNCTION_7
0x40005fe	    0x488b05000000	            mov rax, qword [0x04000605] 	       387	ops.c	FUNCTION_7	CALL_1
0x4000605	          0x4889c7	                            mov rdi, rax	       387	ops.c	FUNCTION_7	CALL_1
0x4000608	      0xe800000000	                          call 0x400060d	       387	ops.c	FUNCTION_7	CALL_1
0x400060d	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       387	ops.c	FUNCTION_7	CALL_1
0x4000613	    0x488b05000000	            mov rax, qword [0x0400061a] 	       388	ops.c	FUNCTION_7
0x400061a	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	       388	ops.c	FUNCTION_7
0x4000621	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       388	ops.c	FUNCTION_7
0x4000627	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	       392	ops.c	FUNCTION_7
0x4000631	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	       392	ops.c	FUNCTION_7
0x400063b	    0x8b0500000000	            mov eax, dword [0x04000641] 	       395	ops.c	FUNCTION_7
0x4000641	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       395	ops.c	FUNCTION_7
0x4000647	    0xc70500000000	               mov dword [0x04000651], 0	       397	ops.c	FUNCTION_7
0x4000651	    0xc70500000000	           mov dword [0x0400065b], 0x10 	       400	ops.c	FUNCTION_7
0x400065b	    0x488b05000000	            mov rax, qword [0x04000662] 	       401	ops.c	FUNCTION_7	CALL_2
0x4000662	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       401	ops.c	FUNCTION_7	CALL_2
0x4000666	        0x488d75a0	                   lea rsi, [rbp - 0x60]	       401	ops.c	FUNCTION_7	CALL_2
0x400066a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       401	ops.c	FUNCTION_7	CALL_2
0x4000671	      0xb901000000	                              mov ecx, 1	       401	ops.c	FUNCTION_7	CALL_2
0x4000676	          0x4889c7	                            mov rdi, rax	       401	ops.c	FUNCTION_7	CALL_2
0x4000679	      0xe8cfa10000	                     call sym.block_prep	       401	ops.c	FUNCTION_7	CALL_2
0x400067e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       402	ops.c	FUNCTION_7	IF_1
0x4000681	            0x85c0	                           test eax, eax	       402	ops.c	FUNCTION_7	IF_1
0x4000683	     0xf85de050000	                           jne 0x4000c67	       402	ops.c	FUNCTION_7	IF_1
0x4000689	    0x8b9514ffffff	             mov edx, dword [rbp - 0xec]	       406	ops.c	FUNCTION_7
0x400068f	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       406	ops.c	FUNCTION_7
0x4000695	           0xfafc2	                           imul eax, edx	       406	ops.c	FUNCTION_7
0x4000698	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	       406	ops.c	FUNCTION_7
0x400069e	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       407	ops.c	FUNCTION_7	IF_2
0x40006a4	              0x99	                                     cdq	       407	ops.c	FUNCTION_7	IF_2
0x40006a5	    0xf7bd48ffffff	                 idiv dword [rbp - 0xb8]	       407	ops.c	FUNCTION_7	IF_2
0x40006ab	    0x3b8514ffffff	             cmp eax, dword [rbp - 0xec]	       407	ops.c	FUNCTION_7	IF_2
0x40006b1	     0xf85b3050000	                           jne 0x4000c6a	       407	ops.c	FUNCTION_7	IF_2
0x40006b7	      0xe800000000	                          call 0x40006bc	       410	ops.c	FUNCTION_7	CALL_3
0x40006bc	        0x48894580	             mov qword [rbp - 0x80], rax	       410	ops.c	FUNCTION_7	CALL_3
0x40006c0	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       412	ops.c	FUNCTION_7	IF_3
0x40006c7	     0xf8585020000	                           jne 0x4000952	       412	ops.c	FUNCTION_7	IF_3
0x40006cd	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       420	ops.c	FUNCTION_7	IF_3
0x40006d0	     0x18524ffffff	             add dword [rbp - 0xdc], eax	       420	ops.c	FUNCTION_7	IF_3
0x40006d6	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       421	ops.c	FUNCTION_7	IF_3
0x40006d9	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       421	ops.c	FUNCTION_7	IF_3
0x40006dc	            0x29c2	                            sub edx, eax	       421	ops.c	FUNCTION_7	IF_3
0x40006de	            0x89d0	                            mov eax, edx	       421	ops.c	FUNCTION_7	IF_3
0x40006e0	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	       421	ops.c	FUNCTION_7	IF_3
0x40006e6	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x40006e9	            0x85c0	                           test eax, eax	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x40006eb	     0xf8488000000	                            je 0x4000779	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x40006f1	    0x8b0500000000	            mov eax, dword [0x040006f7] 	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x40006f7	            0x85c0	                           test eax, eax	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x40006f9	            0x7436	                            je 0x4000731	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x40006fb	    0x488b05000000	            mov rax, qword [0x04000702] 	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4000702	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4000706	          0x4889d7	                            mov rdi, rdx	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4000709	            0xffd0	                                call rax	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x400070b	          0x83f801	                              cmp eax, 1	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x400070e	            0x750e	                           jne 0x400071e	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4000710	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       428	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4000714	        0x4883c001	                              add rax, 1	       428	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x4000718	        0x488945b0	             mov qword [rbp - 0x50], rax	       428	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x400071c	            0xeb5b	                           jmp 0x4000779	       428	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x400071e	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	       431	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x4000728	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       432	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x400072f	            0xeb48	                           jmp 0x4000779	       432	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x4000731	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4000735	        0x4883c001	                              add rax, 1	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4000739	        0x488945b0	             mov qword [rbp - 0x50], rax	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x400073d	            0xeb3a	                           jmp 0x4000779	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400073f	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       443	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4000742	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4000746	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x400074a	        0x4883c110	                           add rcx, 0x10	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x400074e	          0x4889ce	                            mov rsi, rcx	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4000751	          0x4889c7	                            mov rdi, rax	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4000754	      0xe800000000	                          call 0x4000759	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4000759	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x400075f	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       444	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4000765	     0x18524ffffff	             add dword [rbp - 0xdc], eax	       444	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x400076b	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x400076e	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4000774	             0x1d0	                            add eax, edx	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4000776	          0x8945bc	             mov dword [rbp - 0x44], eax	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4000779	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400077d	           0xfb600	                   movzx eax, byte [rax]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4000780	            0x3c20	                            cmp al, 0x20	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4000782	            0x74bb	                            je 0x400073f	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4000784	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4000788	           0xfb600	                   movzx eax, byte [rax]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400078b	            0x3c09	                               cmp al, 9	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400078d	            0x74b0	                            je 0x400073f	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400078f	    0x488b05000000	            mov rax, qword [0x04000796] 	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4000796	    0x8b8078140000	          mov eax, dword [rax + 0x1478] 	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x400079c	            0x85c0	                           test eax, eax	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x400079e	            0x7522	                           jne 0x40007c2	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x40007a0	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x40007a6	              0x99	                                     cdq	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x40007a7	    0xf7bd4cffffff	                 idiv dword [rbp - 0xb4]	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x40007ad	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x40007b3	             0x1d0	                            add eax, edx	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x40007b5	              0x99	                                     cdq	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x40007b6	    0xf7bd4cffffff	                 idiv dword [rbp - 0xb4]	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x40007bc	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x40007c2	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	       451	ops.c	FUNCTION_7	IF_3	IF_8
0x40007c9	            0x7424	                            je 0x40007ef	       451	ops.c	FUNCTION_7	IF_3	IF_8
0x40007cb	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x40007d1	              0x99	                                     cdq	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x40007d2	    0xf7bd4cffffff	                 idiv dword [rbp - 0xb4]	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x40007d8	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x40007de	             0x1d0	                            add eax, edx	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x40007e0	              0x99	                                     cdq	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x40007e1	    0xf7bd4cffffff	                 idiv dword [rbp - 0xb4]	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x40007e7	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x40007ed	            0xeb0c	                           jmp 0x40007fb	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x40007ef	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       454	ops.c	FUNCTION_7	IF_3	ELSE_3
0x40007f5	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	       454	ops.c	FUNCTION_7	IF_3	ELSE_3
0x40007fb	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       456	ops.c	FUNCTION_7	IF_3
0x40007fe	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       456	ops.c	FUNCTION_7	IF_3
0x4000801	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       456	ops.c	FUNCTION_7	IF_3
0x4000804	            0x85c0	                           test eax, eax	       456	ops.c	FUNCTION_7	IF_3
0x4000806	           0xf95c0	                                setne al	       456	ops.c	FUNCTION_7	IF_3
0x4000809	           0xfb6c0	                           movzx eax, al	       456	ops.c	FUNCTION_7	IF_3
0x400080c	            0x29c1	                            sub ecx, eax	       456	ops.c	FUNCTION_7	IF_3
0x400080e	            0x89c8	                            mov eax, ecx	       456	ops.c	FUNCTION_7	IF_3
0x4000810	            0x29c2	                            sub edx, eax	       456	ops.c	FUNCTION_7	IF_3
0x4000812	            0x89d0	                            mov eax, edx	       456	ops.c	FUNCTION_7	IF_3
0x4000814	          0x8945b8	             mov dword [rbp - 0x48], eax	       456	ops.c	FUNCTION_7	IF_3
0x4000817	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x400081b	          0x4889c7	                            mov rdi, rax	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x400081e	      0xe800000000	                          call 0x4000823	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x4000823	          0x83c001	                              add eax, 1	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x4000826	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x400082c	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x400082f	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4000835	             0x1c2	                            add edx, eax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4000837	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x400083d	             0x1c2	                            add edx, eax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x400083f	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4000845	             0x1d0	                            add eax, edx	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4000847	            0x89c7	                            mov edi, eax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4000849	      0xe800000000	                          call 0x400084e	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x400084e	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x4000855	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	       459	ops.c	FUNCTION_7	IF_3	IF_9
0x400085d	     0xf840a040000	                            je 0x4000c6d	       459	ops.c	FUNCTION_7	IF_3	IF_9
0x4000863	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x4000866	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x400086c	             0x1c2	                            add edx, eax	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x400086e	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x4000874	             0x1c2	                            add edx, eax	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x4000876	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x400087c	             0x1d0	                            add eax, edx	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x400087e	          0x4863d0	                         movsxd rdx, eax	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x4000881	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x4000888	      0xbe00000000	                              mov esi, 0	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x400088d	          0x4889c7	                            mov rdi, rax	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x4000890	      0xe800000000	                          call 0x4000895	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x4000895	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x4000898	          0x4863d0	                         movsxd rdx, eax	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x400089b	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x400089f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x40008a6	          0x4889ce	                            mov rsi, rcx	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x40008a9	          0x4889c7	                            mov rdi, rax	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x40008ac	      0xe800000000	                          call 0x40008b1	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x40008b1	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40008b7	            0x4898	                                    cdqe	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40008b9	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40008bc	          0x4863ca	                         movsxd rcx, edx	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40008bf	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40008c6	          0x4801d1	                            add rcx, rdx	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40008c9	          0x4889c2	                            mov rdx, rax	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40008cc	      0xbe09000000	                              mov esi, 9	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40008d1	          0x4889cf	                            mov rdi, rcx	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40008d4	      0xe800000000	                          call 0x40008d9	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40008d9	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x40008df	            0x4898	                                    cdqe	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x40008e1	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x40008e4	          0x4863ca	                         movsxd rcx, edx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x40008e7	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x40008ed	          0x4863d2	                         movsxd rdx, edx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x40008f0	          0x4801d1	                            add rcx, rdx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x40008f3	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x40008fa	          0x4801d1	                            add rcx, rdx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x40008fd	          0x4889c2	                            mov rdx, rax	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x4000900	      0xbe20000000	                           mov esi, 0x20	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x4000905	          0x4889cf	                            mov rdi, rcx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x4000908	      0xe800000000	                          call 0x400090d	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x400090d	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000913	          0x4863d0	                         movsxd rdx, eax	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000916	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x400091a	          0x8b4db8	             mov ecx, dword [rbp - 0x48]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x400091d	          0x4863f1	                         movsxd rsi, ecx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000920	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000926	          0x4863c9	                         movsxd rcx, ecx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000929	          0x4801ce	                            add rsi, rcx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x400092c	    0x8b8d30ffffff	             mov ecx, dword [rbp - 0xd0]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000932	          0x4863c9	                         movsxd rcx, ecx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000935	          0x4801ce	                            add rsi, rcx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000938	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x400093f	          0x4801f1	                            add rcx, rsi	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000942	          0x4889c6	                            mov rsi, rax	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000945	          0x4889cf	                            mov rdi, rcx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000948	      0xe800000000	                          call 0x400094d	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x400094d	      0xe9b1020000	                           jmp 0x4000c03	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x4000952	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       481	ops.c	FUNCTION_7	ELSE_4
0x4000956	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       481	ops.c	FUNCTION_7	ELSE_4
0x400095d	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x4000960	            0x85c0	                           test eax, eax	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x4000962	            0x7437	                            je 0x400099b	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x4000964	    0x8b0500000000	            mov eax, dword [0x0400096a] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400096a	            0x85c0	                           test eax, eax	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400096c	            0x7415	                            je 0x4000983	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400096e	    0x488b05000000	            mov rax, qword [0x04000975] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4000975	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400097c	          0x4889d7	                            mov rdi, rdx	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400097f	            0xffd0	                                call rax	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4000981	            0xeb05	                           jmp 0x4000988	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4000983	      0xb801000000	                              mov eax, 1	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4000988	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400098f	            0x4898	                                    cdqe	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4000991	          0x4801d0	                            add rax, rdx	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4000994	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400099b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       499	ops.c	FUNCTION_7	ELSE_4
0x400099e	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	       499	ops.c	FUNCTION_7	ELSE_4
0x40009a4	            0xeb2e	                           jmp 0x40009d4	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40009a6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x40009aa	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x40009b0	    0x488d8d68ffff	                   lea rcx, [rbp - 0x98]	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x40009b7	          0x4889ce	                            mov rsi, rcx	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x40009ba	          0x4889c7	                            mov rdi, rax	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x40009bd	      0xe800000000	                          call 0x40009c2	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x40009c2	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x40009c8	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       504	ops.c	FUNCTION_7	ELSE_4	WHILE_1
0x40009ce	     0x18538ffffff	             add dword [rbp - 0xc8], eax	       504	ops.c	FUNCTION_7	ELSE_4	WHILE_1
0x40009d4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40009db	           0xfb600	                   movzx eax, byte [rax]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40009de	            0x3c20	                            cmp al, 0x20	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40009e0	            0x74c4	                            je 0x40009a6	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40009e2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40009e9	           0xfb600	                   movzx eax, byte [rax]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40009ec	            0x3c09	                               cmp al, 9	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40009ee	            0x74b6	                            je 0x40009a6	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40009f0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       507	ops.c	FUNCTION_7	ELSE_4
0x40009f7	          0x8b4064	            mov eax, dword [rax + 0x64] 	       507	ops.c	FUNCTION_7	ELSE_4
0x40009fa	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	       507	ops.c	FUNCTION_7	ELSE_4
0x4000a00	            0x29c2	                            sub edx, eax	       507	ops.c	FUNCTION_7	ELSE_4
0x4000a02	            0x89d0	                            mov eax, edx	       507	ops.c	FUNCTION_7	ELSE_4
0x4000a04	            0x4898	                                    cdqe	       507	ops.c	FUNCTION_7	ELSE_4
0x4000a06	        0x48894588	             mov qword [rbp - 0x78], rax	       507	ops.c	FUNCTION_7	ELSE_4
0x4000a0a	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       511	ops.c	FUNCTION_7	ELSE_4
0x4000a10	          0x4863d0	                         movsxd rdx, eax	       511	ops.c	FUNCTION_7	ELSE_4
0x4000a13	        0x488b4588	             mov rax, qword [rbp - 0x78]	       510	ops.c	FUNCTION_7	ELSE_4
0x4000a17	          0x4839c2	                            cmp rdx, rax	       510	ops.c	FUNCTION_7	ELSE_4
0x4000a1a	        0x480f46c2	                         cmovbe rax, rdx	       510	ops.c	FUNCTION_7	ELSE_4
0x4000a1e	        0x48894590	             mov qword [rbp - 0x70], rax	       510	ops.c	FUNCTION_7	ELSE_4
0x4000a22	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       514	ops.c	FUNCTION_7	ELSE_4
0x4000a28	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       514	ops.c	FUNCTION_7	ELSE_4
0x4000a2c	            0x29d0	                            sub eax, edx	       514	ops.c	FUNCTION_7	ELSE_4
0x4000a2e	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       514	ops.c	FUNCTION_7	ELSE_4
0x4000a34	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       518	ops.c	FUNCTION_7	ELSE_4
0x4000a38	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       518	ops.c	FUNCTION_7	ELSE_4
0x4000a3f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       519	ops.c	FUNCTION_7	ELSE_4
0x4000a42	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	       519	ops.c	FUNCTION_7	ELSE_4
0x4000a48	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0x4000a4b	            0x85c0	                           test eax, eax	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0x4000a4d	     0xf8487000000	                            je 0x4000ada	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0x4000a53	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       525	ops.c	FUNCTION_7	ELSE_4	IF_11
0x4000a56	    0x298534ffffff	             sub dword [rbp - 0xcc], eax	       525	ops.c	FUNCTION_7	ELSE_4	IF_11
0x4000a5c	            0xeb7c	                           jmp 0x4000ada	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4000a5e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       528	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4000a65	        0x48894598	             mov qword [rbp - 0x68], rax	       528	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4000a69	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x4000a6f	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x4000a76	        0x488b4598	             mov rax, qword [rbp - 0x68]	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x4000a7a	          0x4889ce	                            mov rsi, rcx	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x4000a7d	          0x4889c7	                            mov rdi, rax	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x4000a80	      0xe800000000	                          call 0x4000a85	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x4000a85	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x4000a8b	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4000a91	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4000a97	             0x1d0	                            add eax, edx	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4000a99	    0x3b855cffffff	             cmp eax, dword [rbp - 0xa4]	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4000a9f	            0x7f4d	                            jg 0x4000aee	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4000aa1	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       535	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4000aa7	     0x18534ffffff	             add dword [rbp - 0xcc], eax	       535	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4000aad	    0x8b0500000000	            mov eax, dword [0x04000ab3] 	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4000ab3	            0x85c0	                           test eax, eax	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4000ab5	            0x7415	                            je 0x4000acc	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4000ab7	    0x488b05000000	            mov rax, qword [0x04000abe] 	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4000abe	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4000ac5	          0x4889d7	                            mov rdi, rdx	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4000ac8	            0xffd0	                                call rax	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4000aca	            0xeb05	                           jmp 0x4000ad1	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4000acc	      0xb801000000	                              mov eax, 1	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4000ad1	            0x4898	                                    cdqe	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4000ad3	    0x48018578ffff	            add qword [rbp - 0x88], rax 	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x4000ada	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4000ae0	    0x3b855cffffff	             cmp eax, dword [rbp - 0xa4]	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4000ae6	     0xf8c72ffffff	                            jl 0x4000a5e	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4000aec	            0xeb01	                           jmp 0x4000aef	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4000aee	              0x90	                                     nop	       534	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4000aef	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       542	ops.c	FUNCTION_7	ELSE_4
0x4000af5	    0x2b8534ffffff	             sub eax, dword [rbp - 0xcc]	       542	ops.c	FUNCTION_7	ELSE_4
0x4000afb	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	       542	ops.c	FUNCTION_7	ELSE_4
0x4000b01	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       548	ops.c	FUNCTION_7	ELSE_4
0x4000b08	        0x488b4580	             mov rax, qword [rbp - 0x80]	       548	ops.c	FUNCTION_7	ELSE_4
0x4000b0c	          0x4829c2	                            sub rdx, rax	       548	ops.c	FUNCTION_7	ELSE_4
0x4000b0f	          0x4889d0	                            mov rax, rdx	       548	ops.c	FUNCTION_7	ELSE_4
0x4000b12	            0x89c2	                            mov edx, eax	       548	ops.c	FUNCTION_7	ELSE_4
0x4000b14	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       549	ops.c	FUNCTION_7	ELSE_4
0x4000b1a	          0x8d1c02	                    lea ebx, [rdx + rax]	       549	ops.c	FUNCTION_7	ELSE_4
0x4000b1d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x4000b24	          0x4889c7	                            mov rdi, rax	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x4000b27	      0xe800000000	                          call 0x4000b2c	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x4000b2c	             0x1d8	                            add eax, ebx	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x4000b2e	          0x83c001	                              add eax, 1	       548	ops.c	FUNCTION_7	ELSE_4
0x4000b31	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       548	ops.c	FUNCTION_7	ELSE_4
0x4000b37	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4000b3d	            0x89c7	                            mov edi, eax	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4000b3f	      0xe800000000	                          call 0x4000b44	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4000b44	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4000b4b	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	       553	ops.c	FUNCTION_7	ELSE_4	IF_13
0x4000b53	     0xf8417010000	                            je 0x4000c70	       553	ops.c	FUNCTION_7	ELSE_4	IF_13
0x4000b59	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0x4000b60	        0x488b4580	             mov rax, qword [rbp - 0x80]	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0x4000b64	          0x4829c2	                            sub rdx, rax	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0x4000b67	          0x4889d0	                            mov rax, rdx	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0x4000b6a	          0x4889c2	                            mov rdx, rax	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0x4000b6d	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0x4000b71	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0x4000b78	          0x4889ce	                            mov rsi, rcx	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0x4000b7b	          0x4889c7	                            mov rdi, rax	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0x4000b7e	      0xe800000000	                          call 0x4000b83	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0x4000b83	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000b89	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000b90	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000b94	          0x4829d1	                            sub rcx, rdx	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000b97	          0x4889ca	                            mov rdx, rcx	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000b9a	          0x4889d1	                            mov rcx, rdx	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000b9d	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000ba4	          0x4801d1	                            add rcx, rdx	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000ba7	          0x4889c2	                            mov rdx, rax	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000baa	      0xbe20000000	                           mov esi, 0x20	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000baf	          0x4889cf	                            mov rdi, rcx	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000bb2	      0xe800000000	                          call 0x4000bb7	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0x4000bb7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bbe	          0x4889c7	                            mov rdi, rax	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bc1	      0xe800000000	                          call 0x4000bc6	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bc6	        0x488d5001	                      lea rdx, [rax + 1]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bca	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bd1	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bd8	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bdc	          0x4829ce	                            sub rsi, rcx	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bdf	          0x4889f1	                            mov rcx, rsi	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000be2	          0x4889ce	                            mov rsi, rcx	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000be5	    0x8b8d60ffffff	             mov ecx, dword [rbp - 0xa0]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000beb	          0x4801ce	                            add rsi, rcx	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bee	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bf5	          0x4801f1	                            add rcx, rsi	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bf8	          0x4889c6	                            mov rsi, rax	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bfb	          0x4889cf	                            mov rdi, rcx	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000bfe	      0xe800000000	                          call 0x4000c03	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x4000c03	    0x488b05000000	            mov rax, qword [0x04000c0a] 	       560	ops.c	FUNCTION_7	CALL_23
0x4000c0a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       560	ops.c	FUNCTION_7	CALL_23
0x4000c0e	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	       560	ops.c	FUNCTION_7	CALL_23
0x4000c15	      0xba00000000	                              mov edx, 0	       560	ops.c	FUNCTION_7	CALL_23
0x4000c1a	          0x4889ce	                            mov rsi, rcx	       560	ops.c	FUNCTION_7	CALL_23
0x4000c1d	          0x4889c7	                            mov rdi, rax	       560	ops.c	FUNCTION_7	CALL_23
0x4000c20	      0xe800000000	                          call 0x4000c25	       560	ops.c	FUNCTION_7	CALL_23
0x4000c25	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       561	ops.c	FUNCTION_7	CALL_24
0x4000c28	    0x488b05000000	            mov rax, qword [0x04000c2f] 	       561	ops.c	FUNCTION_7	CALL_24
0x4000c2f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       561	ops.c	FUNCTION_7	CALL_24
0x4000c33	            0x89d6	                            mov esi, edx	       561	ops.c	FUNCTION_7	CALL_24
0x4000c35	          0x4889c7	                            mov rdi, rax	       561	ops.c	FUNCTION_7	CALL_24
0x4000c38	      0xe800000000	                          call 0x4000c3d	       561	ops.c	FUNCTION_7	CALL_24
0x4000c3d	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	       562	ops.c	FUNCTION_7
0x4000c43	    0x890500000000	            mov dword [0x04000c49], eax 	       562	ops.c	FUNCTION_7
0x4000c49	    0x488b05000000	            mov rax, qword [0x04000c50] 	       563	ops.c	FUNCTION_7
0x4000c50	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	       563	ops.c	FUNCTION_7
0x4000c56	          0x895040	             mov dword [rax + 0x40], edx	       563	ops.c	FUNCTION_7
0x4000c59	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	       565	ops.c	FUNCTION_7
0x4000c5f	    0x890500000000	            mov dword [0x04000c65], eax 	       565	ops.c	FUNCTION_7
0x4000c65	            0xeb0a	                           jmp 0x4000c71	       565	ops.c	FUNCTION_7
0x4000c67	              0x90	                                     nop	       403	ops.c	FUNCTION_7	IF_1
0x4000c68	            0xeb07	                           jmp 0x4000c71	       403	ops.c	FUNCTION_7	IF_1
0x4000c6a	              0x90	                                     nop	       408	ops.c	FUNCTION_7	IF_2
0x4000c6b	            0xeb04	                           jmp 0x4000c71	       408	ops.c	FUNCTION_7	IF_2
0x4000c6d	              0x90	                                     nop	       460	ops.c	FUNCTION_7	IF_3	IF_9
0x4000c6e	            0xeb01	                           jmp 0x4000c71	       460	ops.c	FUNCTION_7	IF_3	IF_9
0x4000c70	              0x90	                                     nop	       554	ops.c	FUNCTION_7	ELSE_4	IF_13
0x4000c71	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       567	ops.c	FUNCTION_7
0x4000c75	    0x644833042528	                xor rax, qword fs:[0x28]	       567	ops.c	FUNCTION_7
0x4000c7e	            0x7405	                            je 0x4000c85	       567	ops.c	FUNCTION_7
0x4000c80	      0xe800000000	                          call 0x4000c85	       567	ops.c	FUNCTION_7
0x4000c85	    0x4881c4e80000	                           add rsp, 0xe8	       567	ops.c	FUNCTION_7
0x4000c8c	              0x5b	                                 pop rbx	       567	ops.c	FUNCTION_7
0x4000c8d	              0x5d	                                 pop rbp	       567	ops.c	FUNCTION_7
0x4000c8e	              0xc3	                                     ret	       567	ops.c	FUNCTION_7
line_count_info	ELSE,1:DO,0:IF,5:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,2	88
0x400e93c	              0x55	                                push rbp	      7295	ops.c	FUNCTION_90
0x400e93d	          0x4889e5	                            mov rbp, rsp	      7295	ops.c	FUNCTION_90
0x400e940	        0x4883ec50	                           sub rsp, 0x50	      7295	ops.c	FUNCTION_90
0x400e944	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      7295	ops.c	FUNCTION_90
0x400e948	        0x488975d0	             mov qword [rbp - 0x30], rsi	      7295	ops.c	FUNCTION_90
0x400e94c	        0x488955c8	             mov qword [rbp - 0x38], rdx	      7295	ops.c	FUNCTION_90
0x400e950	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      7295	ops.c	FUNCTION_90
0x400e954	        0x448945bc	             mov dword [rbp - 0x44], r8d	      7295	ops.c	FUNCTION_90
0x400e958	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7297	ops.c	FUNCTION_90
0x400e960	    0x48c745f80000	                  mov qword [rbp - 8], 0	      7298	ops.c	FUNCTION_90
0x400e968	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      7299	ops.c	FUNCTION_90
0x400e96f	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      7301	ops.c	FUNCTION_90	FOR_1
0x400e977	            0xeb75	                           jmp 0x400e9ee	      7301	ops.c	FUNCTION_90	FOR_1
0x400e979	        0x837de400	               cmp dword [rbp - 0x1c], 0	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x400e97d	            0x742a	                            je 0x400e9a9	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x400e97f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400e983	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400e987	          0x4801d0	                            add rax, rdx	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400e98a	           0xfb600	                   movzx eax, byte [rax]	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400e98d	           0xfb6c0	                           movzx eax, al	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400e990	            0x89c7	                            mov edi, eax	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400e992	      0xe800000000	                          call 0x400e997	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400e997	            0x85c0	                           test eax, eax	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400e999	            0x7431	                            je 0x400e9cc	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400e99b	      0x488345f001	               add qword [rbp - 0x10], 1	      7307	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400e9a0	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400e9a7	            0xeb23	                           jmp 0x400e9cc	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400e9a9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400e9ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400e9b1	          0x4801d0	                            add rax, rdx	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400e9b4	           0xfb600	                   movzx eax, byte [rax]	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400e9b7	           0xfb6c0	                           movzx eax, al	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400e9ba	            0x89c7	                            mov edi, eax	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400e9bc	      0xe800000000	                          call 0x400e9c1	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400e9c1	            0x85c0	                           test eax, eax	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400e9c3	            0x7507	                           jne 0x400e9cc	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400e9c5	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      7312	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3
0x400e9cc	      0x488345f801	                  add qword [rbp - 8], 1	      7313	ops.c	FUNCTION_90	FOR_1
0x400e9d1	    0x488b05000000	            mov rax, qword [0x0400e9d8] 	      7315	ops.c	FUNCTION_90	FOR_1
0x400e9d8	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      7315	ops.c	FUNCTION_90	FOR_1
0x400e9dc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      7315	ops.c	FUNCTION_90	FOR_1
0x400e9e0	          0x4801ca	                            add rdx, rcx	      7315	ops.c	FUNCTION_90	FOR_1
0x400e9e3	          0x4889d7	                            mov rdi, rdx	      7315	ops.c	FUNCTION_90	FOR_1
0x400e9e6	            0xffd0	                                call rax	      7315	ops.c	FUNCTION_90	FOR_1
0x400e9e8	            0x4898	                                    cdqe	      7315	ops.c	FUNCTION_90	FOR_1
0x400e9ea	        0x480145e8	            add qword [rbp - 0x18], rax 	      7315	ops.c	FUNCTION_90	FOR_1
0x400e9ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7301	ops.c	FUNCTION_90	FOR_1
0x400e9f2	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7301	ops.c	FUNCTION_90	FOR_1
0x400e9f6	            0x7d16	                           jge 0x400ea0e	      7301	ops.c	FUNCTION_90	FOR_1
0x400e9f8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7301	ops.c	FUNCTION_90	FOR_1
0x400e9fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7301	ops.c	FUNCTION_90	FOR_1
0x400ea00	          0x4801d0	                            add rax, rdx	      7301	ops.c	FUNCTION_90	FOR_1
0x400ea03	           0xfb600	                   movzx eax, byte [rax]	      7301	ops.c	FUNCTION_90	FOR_1
0x400ea06	            0x84c0	                             test al, al	      7301	ops.c	FUNCTION_90	FOR_1
0x400ea08	     0xf856bffffff	                           jne 0x400e979	      7301	ops.c	FUNCTION_90	FOR_1
0x400ea0e	        0x837de400	               cmp dword [rbp - 0x1c], 0	      7321	ops.c	FUNCTION_90	IF_4
0x400ea12	            0x7405	                            je 0x400ea19	      7321	ops.c	FUNCTION_90	IF_4
0x400ea14	      0x488345f001	               add qword [rbp - 0x10], 1	      7322	ops.c	FUNCTION_90	IF_4
0x400ea19	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7323	ops.c	FUNCTION_90
0x400ea1d	          0x488b10	                    mov rdx, qword [rax]	      7323	ops.c	FUNCTION_90
0x400ea20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7323	ops.c	FUNCTION_90
0x400ea24	          0x4801c2	                            add rdx, rax	      7323	ops.c	FUNCTION_90
0x400ea27	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7323	ops.c	FUNCTION_90
0x400ea2b	          0x488910	                    mov qword [rax], rdx	      7323	ops.c	FUNCTION_90
0x400ea2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7326	ops.c	FUNCTION_90	IF_5
0x400ea32	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7326	ops.c	FUNCTION_90	IF_5
0x400ea36	            0x7d24	                           jge 0x400ea5c	      7326	ops.c	FUNCTION_90	IF_5
0x400ea38	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7326	ops.c	FUNCTION_90	IF_5
0x400ea3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7326	ops.c	FUNCTION_90	IF_5
0x400ea40	          0x4801d0	                            add rax, rdx	      7326	ops.c	FUNCTION_90	IF_5
0x400ea43	           0xfb600	                   movzx eax, byte [rax]	      7326	ops.c	FUNCTION_90	IF_5
0x400ea46	            0x84c0	                             test al, al	      7326	ops.c	FUNCTION_90	IF_5
0x400ea48	            0x7512	                           jne 0x400ea5c	      7326	ops.c	FUNCTION_90	IF_5
0x400ea4a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      7328	ops.c	FUNCTION_90	IF_5
0x400ea4d	            0x4898	                                    cdqe	      7328	ops.c	FUNCTION_90	IF_5
0x400ea4f	        0x480145e8	            add qword [rbp - 0x18], rax 	      7328	ops.c	FUNCTION_90	IF_5
0x400ea53	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      7329	ops.c	FUNCTION_90	IF_5
0x400ea56	            0x4898	                                    cdqe	      7329	ops.c	FUNCTION_90	IF_5
0x400ea58	        0x480145f8	                add qword [rbp - 8], rax	      7329	ops.c	FUNCTION_90	IF_5
0x400ea5c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7331	ops.c	FUNCTION_90
0x400ea60	          0x488b10	                    mov rdx, qword [rax]	      7331	ops.c	FUNCTION_90
0x400ea63	        0x488b45f8	                mov rax, qword [rbp - 8]	      7331	ops.c	FUNCTION_90
0x400ea67	          0x4801c2	                            add rdx, rax	      7331	ops.c	FUNCTION_90
0x400ea6a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7331	ops.c	FUNCTION_90
0x400ea6e	          0x488910	                    mov qword [rax], rdx	      7331	ops.c	FUNCTION_90
0x400ea71	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7332	ops.c	FUNCTION_90
0x400ea75	              0xc9	                                   leave	      7333	ops.c	FUNCTION_90
0x400ea76	              0xc3	                                     ret	      7333	ops.c	FUNCTION_90
get_expr_register	ELSE,1:DO,0:IF,2:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,3	26
0x4001334	              0x55	                                push rbp	       794	ops.c	FUNCTION_10
0x4001335	          0x4889e5	                            mov rbp, rsp	       794	ops.c	FUNCTION_10
0x4001338	        0x4883ec10	                           sub rsp, 0x10	       794	ops.c	FUNCTION_10
0x400133c	      0xba00000000	                              mov edx, 0	       797	ops.c	FUNCTION_10	CALL_1
0x4001341	      0xbe00000000	                              mov esi, 0	       797	ops.c	FUNCTION_10	CALL_1
0x4001346	      0xbf3d000000	                           mov edi, 0x3d	       797	ops.c	FUNCTION_10	CALL_1
0x400134b	      0xe800000000	                          call 0x4001350	       797	ops.c	FUNCTION_10	CALL_1
0x4001350	        0x488945f8	                mov qword [rbp - 8], rax	       797	ops.c	FUNCTION_10	CALL_1
0x4001354	      0x48837df800	                  cmp qword [rbp - 8], 0	       798	ops.c	FUNCTION_10	IF_1
0x4001359	            0x7507	                           jne 0x4001362	       798	ops.c	FUNCTION_10	IF_1
0x400135b	      0xb800000000	                              mov eax, 0	       799	ops.c	FUNCTION_10	IF_1
0x4001360	            0xeb2a	                           jmp 0x400138c	       799	ops.c	FUNCTION_10	IF_1
0x4001362	        0x488b45f8	                mov rax, qword [rbp - 8]	       800	ops.c	FUNCTION_10	IF_2
0x4001366	           0xfb600	                   movzx eax, byte [rax]	       800	ops.c	FUNCTION_10	IF_2
0x4001369	            0x84c0	                             test al, al	       800	ops.c	FUNCTION_10	IF_2
0x400136b	            0x750e	                           jne 0x400137b	       800	ops.c	FUNCTION_10	IF_2
0x400136d	        0x488b45f8	                mov rax, qword [rbp - 8]	       801	ops.c	FUNCTION_10	CALL_2
0x4001371	          0x4889c7	                            mov rdi, rax	       801	ops.c	FUNCTION_10	CALL_2
0x4001374	      0xe800000000	                          call 0x4001379	       801	ops.c	FUNCTION_10	CALL_2
0x4001379	            0xeb0c	                           jmp 0x4001387	       801	ops.c	FUNCTION_10	CALL_2
0x400137b	        0x488b45f8	                mov rax, qword [rbp - 8]	       803	ops.c	FUNCTION_10	CALL_3
0x400137f	          0x4889c7	                            mov rdi, rax	       803	ops.c	FUNCTION_10	CALL_3
0x4001382	      0xe800000000	                          call 0x4001387	       803	ops.c	FUNCTION_10	CALL_3
0x4001387	      0xb83d000000	                           mov eax, 0x3d	       804	ops.c	FUNCTION_10
0x400138c	              0xc9	                                   leave	       805	ops.c	FUNCTION_10
0x400138d	              0xc3	                                     ret	       805	ops.c	FUNCTION_10
clip_get_selection	ELSE,1:DO,0:IF,3:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,7	127
0x400d53d	              0x55	                                push rbp	      6570	ops.c	FUNCTION_75
0x400d53e	          0x4889e5	                            mov rbp, rsp	      6570	ops.c	FUNCTION_75
0x400d541	    0x4881ec500100	                          sub rsp, 0x150	      6570	ops.c	FUNCTION_75
0x400d548	    0x4889bdb8feff	            mov qword [rbp - 0x148], rdi	      6570	ops.c	FUNCTION_75
0x400d54f	    0x64488b042528	                mov rax, qword fs:[0x28]	      6570	ops.c	FUNCTION_75
0x400d558	        0x488945f8	                mov qword [rbp - 8], rax	      6570	ops.c	FUNCTION_75
0x400d55c	            0x31c0	                            xor eax, eax	      6570	ops.c	FUNCTION_75
0x400d55e	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      6581	ops.c	FUNCTION_75	IF_1
0x400d565	          0x8b4004	                mov eax, dword [rax + 4]	      6581	ops.c	FUNCTION_75	IF_1
0x400d568	            0x85c0	                           test eax, eax	      6581	ops.c	FUNCTION_75	IF_1
0x400d56a	     0xf8466020000	                            je 0x400d7d6	      6581	ops.c	FUNCTION_75	IF_1
0x400d570	    0x4881bdb8feff	              cmp qword [rbp - 0x148], 0	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x400d57b	            0x7510	                           jne 0x400d58d	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x400d57d	    0x488b05000000	            mov rax, qword [0x0400d584] 	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x400d584	          0x4885c0	                           test rax, rax	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x400d587	     0xf8572020000	                           jne 0x400d7ff	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x400d58d	    0x4881bdb8feff	              cmp qword [rbp - 0x148], 0	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x400d598	            0x7510	                           jne 0x400d5aa	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x400d59a	    0x488b05000000	            mov rax, qword [0x0400d5a1] 	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x400d5a1	          0x4885c0	                           test rax, rax	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x400d5a4	     0xf8555020000	                           jne 0x400d7ff	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x400d5aa	    0x488b05000000	            mov rax, qword [0x0400d5b1] 	      6588	ops.c	FUNCTION_75	IF_1
0x400d5b1	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6588	ops.c	FUNCTION_75	IF_1
0x400d5b8	    0x488b05000000	            mov rax, qword [0x0400d5bf] 	      6589	ops.c	FUNCTION_75	IF_1
0x400d5bf	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6589	ops.c	FUNCTION_75	IF_1
0x400d5c6	    0x488b05000000	            mov rax, qword [0x0400d5cd] 	      6590	ops.c	FUNCTION_75	IF_1
0x400d5cd	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6590	ops.c	FUNCTION_75	IF_1
0x400d5d1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6590	ops.c	FUNCTION_75	IF_1
0x400d5d5	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6590	ops.c	FUNCTION_75	IF_1
0x400d5dc	    0x488995e8feff	            mov qword [rbp - 0x118], rdx	      6590	ops.c	FUNCTION_75	IF_1
0x400d5e3	    0x488b05000000	            mov rax, qword [0x0400d5ea] 	      6591	ops.c	FUNCTION_75	IF_1
0x400d5ea	          0x8b4048	            mov eax, dword [rax + 0x48] 	      6591	ops.c	FUNCTION_75	IF_1
0x400d5ed	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      6591	ops.c	FUNCTION_75	IF_1
0x400d5f3	    0x488b05000000	            mov rax, qword [0x0400d5fa] 	      6592	ops.c	FUNCTION_75	IF_1
0x400d5fa	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      6592	ops.c	FUNCTION_75	IF_1
0x400d5fd	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      6592	ops.c	FUNCTION_75	IF_1
0x400d603	    0x488b05000000	            mov rax, qword [0x0400d60a] 	      6593	ops.c	FUNCTION_75	IF_1
0x400d60a	    0x488b90e81100	          mov rdx, qword [rax + 0x11e8] 	      6593	ops.c	FUNCTION_75	IF_1
0x400d611	    0x488b80e01100	          mov rax, qword [rax + 0x11e0] 	      6593	ops.c	FUNCTION_75	IF_1
0x400d618	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      6593	ops.c	FUNCTION_75	IF_1
0x400d61f	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	      6593	ops.c	FUNCTION_75	IF_1
0x400d626	    0x488b05000000	            mov rax, qword [0x0400d62d] 	      6594	ops.c	FUNCTION_75	IF_1
0x400d62d	    0x488b90081200	          mov rdx, qword [rax + 0x1208] 	      6594	ops.c	FUNCTION_75	IF_1
0x400d634	    0x488b80001200	          mov rax, qword [rax + 0x1200] 	      6594	ops.c	FUNCTION_75	IF_1
0x400d63b	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      6594	ops.c	FUNCTION_75	IF_1
0x400d642	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	      6594	ops.c	FUNCTION_75	IF_1
0x400d649	    0x488b05000000	            mov rax, qword [0x0400d650] 	      6595	ops.c	FUNCTION_75	IF_1
0x400d650	    0x488b15000000	            mov rdx, qword [0x0400d657] 	      6595	ops.c	FUNCTION_75	IF_1
0x400d657	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      6595	ops.c	FUNCTION_75	IF_1
0x400d65e	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	      6595	ops.c	FUNCTION_75	IF_1
0x400d665	    0x8b0500000000	            mov eax, dword [0x0400d66b] 	      6596	ops.c	FUNCTION_75	IF_1
0x400d66b	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      6596	ops.c	FUNCTION_75	IF_1
0x400d671	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      6597	ops.c	FUNCTION_75	IF_1	CALL_1
0x400d678	          0x4889c7	                            mov rdi, rax	      6597	ops.c	FUNCTION_75	IF_1	CALL_1
0x400d67b	      0xe800000000	                          call 0x400d680	      6597	ops.c	FUNCTION_75	IF_1	CALL_1
0x400d680	    0x4881bdb8feff	              cmp qword [rbp - 0x148], 0	      6598	ops.c	FUNCTION_75	IF_1
0x400d68b	            0x7507	                           jne 0x400d694	      6598	ops.c	FUNCTION_75	IF_1
0x400d68d	      0xb82b000000	                           mov eax, 0x2b	      6598	ops.c	FUNCTION_75	IF_1
0x400d692	            0xeb05	                           jmp 0x400d699	      6598	ops.c	FUNCTION_75	IF_1
0x400d694	      0xb82a000000	                           mov eax, 0x2a	      6598	ops.c	FUNCTION_75	IF_1
0x400d699	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      6598	ops.c	FUNCTION_75	IF_1
0x400d69f	    0xc78570ffffff	               mov dword [rbp - 0x90], 2	      6599	ops.c	FUNCTION_75	IF_1
0x400d6a9	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      6600	ops.c	FUNCTION_75	IF_1	CALL_2
0x400d6b0	      0xba48000000	                           mov edx, 0x48	      6600	ops.c	FUNCTION_75	IF_1	CALL_2
0x400d6b5	      0xbe00000000	                              mov esi, 0	      6600	ops.c	FUNCTION_75	IF_1	CALL_2
0x400d6ba	          0x4889c7	                            mov rdi, rax	      6600	ops.c	FUNCTION_75	IF_1	CALL_2
0x400d6bd	      0xe800000000	                          call 0x400d6c2	      6600	ops.c	FUNCTION_75	IF_1	CALL_2
0x400d6c2	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      6601	ops.c	FUNCTION_75	IF_1
0x400d6c9	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      6601	ops.c	FUNCTION_75	IF_1
0x400d6d0	    0xc7852cffffff	           mov dword [rbp - 0xd4], 0x79 	      6602	ops.c	FUNCTION_75	IF_1
0x400d6da	    0x48c78550ffff	               mov qword [rbp - 0xb0], 1	      6603	ops.c	FUNCTION_75	IF_1
0x400d6e5	    0xc7855cffffff	               mov dword [rbp - 0xa4], 2	      6604	ops.c	FUNCTION_75	IF_1
0x400d6ef	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x400d6f6	      0xba01000000	                              mov edx, 1	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x400d6fb	      0xbe00000000	                              mov esi, 0	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x400d700	          0x4889c7	                            mov rdi, rax	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x400d703	      0xe800000000	                          call 0x400d708	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x400d708	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6606	ops.c	FUNCTION_75	IF_1
0x400d70f	    0x488905000000	            mov qword [0x0400d716], rax 	      6606	ops.c	FUNCTION_75	IF_1
0x400d716	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6607	ops.c	FUNCTION_75	IF_1
0x400d71d	    0x488905000000	            mov qword [0x0400d724], rax 	      6607	ops.c	FUNCTION_75	IF_1
0x400d724	    0x488b0d000000	            mov rcx, qword [0x0400d72b] 	      6608	ops.c	FUNCTION_75	IF_1
0x400d72b	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      6608	ops.c	FUNCTION_75	IF_1
0x400d732	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      6608	ops.c	FUNCTION_75	IF_1
0x400d739	        0x48894138	             mov qword [rcx + 0x38], rax	      6608	ops.c	FUNCTION_75	IF_1
0x400d73d	        0x48895140	             mov qword [rcx + 0x40], rdx	      6608	ops.c	FUNCTION_75	IF_1
0x400d741	      0xe800000000	                          call 0x400d746	      6609	ops.c	FUNCTION_75	IF_1	CALL_4
0x400d746	    0x488b05000000	            mov rax, qword [0x0400d74d] 	      6610	ops.c	FUNCTION_75	IF_1
0x400d74d	    0x8b95c4feffff	            mov edx, dword [rbp - 0x13c]	      6610	ops.c	FUNCTION_75	IF_1
0x400d753	          0x895048	             mov dword [rax + 0x48], edx	      6610	ops.c	FUNCTION_75	IF_1
0x400d756	    0x488b05000000	            mov rax, qword [0x0400d75d] 	      6611	ops.c	FUNCTION_75	IF_1
0x400d75d	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      6611	ops.c	FUNCTION_75	IF_1
0x400d763	          0x89504c	             mov dword [rax + 0x4c], edx	      6611	ops.c	FUNCTION_75	IF_1
0x400d766	    0x488b0d000000	            mov rcx, qword [0x0400d76d] 	      6612	ops.c	FUNCTION_75	IF_1
0x400d76d	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      6612	ops.c	FUNCTION_75	IF_1
0x400d774	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      6612	ops.c	FUNCTION_75	IF_1
0x400d77b	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      6612	ops.c	FUNCTION_75	IF_1
0x400d782	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      6612	ops.c	FUNCTION_75	IF_1
0x400d789	    0x488b0d000000	            mov rcx, qword [0x0400d790] 	      6613	ops.c	FUNCTION_75	IF_1
0x400d790	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6613	ops.c	FUNCTION_75	IF_1
0x400d797	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      6613	ops.c	FUNCTION_75	IF_1
0x400d79e	    0x488981001200	          mov qword [rcx + 0x1200], rax 	      6613	ops.c	FUNCTION_75	IF_1
0x400d7a5	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	      6613	ops.c	FUNCTION_75	IF_1
0x400d7ac	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      6614	ops.c	FUNCTION_75	IF_1
0x400d7b3	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      6614	ops.c	FUNCTION_75	IF_1
0x400d7ba	    0x488905000000	            mov qword [0x0400d7c1], rax 	      6614	ops.c	FUNCTION_75	IF_1
0x400d7c1	    0x488915000000	            mov qword [0x0400d7c8], rdx 	      6614	ops.c	FUNCTION_75	IF_1
0x400d7c8	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      6615	ops.c	FUNCTION_75	IF_1
0x400d7ce	    0x890500000000	            mov dword [0x0400d7d4], eax 	      6615	ops.c	FUNCTION_75	IF_1
0x400d7d4	            0xeb2a	                           jmp 0x400d800	      6615	ops.c	FUNCTION_75	IF_1
0x400d7d6	      0xe800000000	                          call 0x400d7db	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x400d7db	            0x85c0	                           test eax, eax	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x400d7dd	            0x7521	                           jne 0x400d800	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x400d7df	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      6619	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_6
0x400d7e6	          0x4889c7	                            mov rdi, rax	      6619	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_6
0x400d7e9	      0xe800000000	                          call 0x400d7ee	      6619	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_6
0x400d7ee	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x400d7f5	          0x4889c7	                            mov rdi, rax	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x400d7f8	      0xe800000000	                          call 0x400d7fd	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x400d7fd	            0xeb01	                           jmp 0x400d800	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x400d7ff	              0x90	                                     nop	      6585	ops.c	FUNCTION_75	IF_1	IF_2
0x400d800	        0x488b45f8	                mov rax, qword [rbp - 8]	      6624	ops.c	FUNCTION_75
0x400d804	    0x644833042528	                xor rax, qword fs:[0x28]	      6624	ops.c	FUNCTION_75
0x400d80d	            0x7405	                            je 0x400d814	      6624	ops.c	FUNCTION_75
0x400d80f	      0xe800000000	                          call 0x400d814	      6624	ops.c	FUNCTION_75
0x400d814	              0xc9	                                   leave	      6624	ops.c	FUNCTION_75
0x400d815	              0xc3	                                     ret	      6624	ops.c	FUNCTION_75
do_addsub	ELSE,15:DO,0:IF,53:functions,0:WHILE,8:FOR,2:SWITCH,0:CALL,47	1102
0x400b1fa	              0x55	                                push rbp	      5627	ops.c	FUNCTION_67
0x400b1fb	          0x4889e5	                            mov rbp, rsp	      5627	ops.c	FUNCTION_67
0x400b1fe	              0x53	                                push rbx	      5627	ops.c	FUNCTION_67
0x400b1ff	    0x4881ec180100	                          sub rsp, 0x118	      5627	ops.c	FUNCTION_67
0x400b206	    0x89bdfcfeffff	            mov dword [rbp - 0x104], edi	      5627	ops.c	FUNCTION_67
0x400b20c	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	      5627	ops.c	FUNCTION_67
0x400b213	    0x8995f8feffff	            mov dword [rbp - 0x108], edx	      5627	ops.c	FUNCTION_67
0x400b219	    0x48898de8feff	            mov qword [rbp - 0x118], rcx	      5627	ops.c	FUNCTION_67
0x400b220	    0x64488b042528	                mov rax, qword fs:[0x28]	      5627	ops.c	FUNCTION_67
0x400b229	        0x488945e8	             mov qword [rbp - 0x18], rax	      5627	ops.c	FUNCTION_67
0x400b22d	            0x31c0	                            xor eax, eax	      5627	ops.c	FUNCTION_67
0x400b22f	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      5644	ops.c	FUNCTION_67
0x400b239	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	      5645	ops.c	FUNCTION_67
0x400b243	    0x8b0500000000	            mov eax, dword [0x0400b249] 	      5646	ops.c	FUNCTION_67
0x400b249	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      5646	ops.c	FUNCTION_67
0x400b24f	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      5647	ops.c	FUNCTION_67
0x400b259	    0x488b05000000	            mov rax, qword [0x0400b260] 	      5648	ops.c	FUNCTION_67
0x400b260	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5648	ops.c	FUNCTION_67
0x400b264	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5648	ops.c	FUNCTION_67
0x400b268	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      5648	ops.c	FUNCTION_67
0x400b26f	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      5648	ops.c	FUNCTION_67
0x400b276	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      5649	ops.c	FUNCTION_67
0x400b280	    0x488b05000000	            mov rax, qword [0x0400b287] 	      5653	ops.c	FUNCTION_67	CALL_1
0x400b287	    0x488b80481500	          mov rax, qword [rax + 0x1548] 	      5653	ops.c	FUNCTION_67	CALL_1
0x400b28e	      0xbe78000000	                           mov esi, 0x78	      5653	ops.c	FUNCTION_67	CALL_1
0x400b293	          0x4889c7	                            mov rdi, rax	      5653	ops.c	FUNCTION_67	CALL_1
0x400b296	      0xe800000000	                          call 0x400b29b	      5653	ops.c	FUNCTION_67	CALL_1
0x400b29b	          0x4885c0	                           test rax, rax	      5653	ops.c	FUNCTION_67	CALL_1
0x400b29e	           0xf95c0	                                setne al	      5653	ops.c	FUNCTION_67	CALL_1
0x400b2a1	           0xfb6c0	                           movzx eax, al	      5653	ops.c	FUNCTION_67	CALL_1
0x400b2a4	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	      5653	ops.c	FUNCTION_67	CALL_1
0x400b2aa	    0x488b05000000	            mov rax, qword [0x0400b2b1] 	      5654	ops.c	FUNCTION_67	CALL_2
0x400b2b1	    0x488b80481500	          mov rax, qword [rax + 0x1548] 	      5654	ops.c	FUNCTION_67	CALL_2
0x400b2b8	      0xbe6f000000	                           mov esi, 0x6f	      5654	ops.c	FUNCTION_67	CALL_2
0x400b2bd	          0x4889c7	                            mov rdi, rax	      5654	ops.c	FUNCTION_67	CALL_2
0x400b2c0	      0xe800000000	                          call 0x400b2c5	      5654	ops.c	FUNCTION_67	CALL_2
0x400b2c5	          0x4885c0	                           test rax, rax	      5654	ops.c	FUNCTION_67	CALL_2
0x400b2c8	           0xf95c0	                                setne al	      5654	ops.c	FUNCTION_67	CALL_2
0x400b2cb	           0xfb6c0	                           movzx eax, al	      5654	ops.c	FUNCTION_67	CALL_2
0x400b2ce	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      5654	ops.c	FUNCTION_67	CALL_2
0x400b2d4	    0x488b05000000	            mov rax, qword [0x0400b2db] 	      5655	ops.c	FUNCTION_67	CALL_3
0x400b2db	    0x488b80481500	          mov rax, qword [rax + 0x1548] 	      5655	ops.c	FUNCTION_67	CALL_3
0x400b2e2	      0xbe62000000	                           mov esi, 0x62	      5655	ops.c	FUNCTION_67	CALL_3
0x400b2e7	          0x4889c7	                            mov rdi, rax	      5655	ops.c	FUNCTION_67	CALL_3
0x400b2ea	      0xe800000000	                          call 0x400b2ef	      5655	ops.c	FUNCTION_67	CALL_3
0x400b2ef	          0x4885c0	                           test rax, rax	      5655	ops.c	FUNCTION_67	CALL_3
0x400b2f2	           0xf95c0	                                setne al	      5655	ops.c	FUNCTION_67	CALL_3
0x400b2f5	           0xfb6c0	                           movzx eax, al	      5655	ops.c	FUNCTION_67	CALL_3
0x400b2f8	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      5655	ops.c	FUNCTION_67	CALL_3
0x400b2fe	    0x488b05000000	            mov rax, qword [0x0400b305] 	      5656	ops.c	FUNCTION_67	CALL_4
0x400b305	    0x488b80481500	          mov rax, qword [rax + 0x1548] 	      5656	ops.c	FUNCTION_67	CALL_4
0x400b30c	      0xbe70000000	                           mov esi, 0x70	      5656	ops.c	FUNCTION_67	CALL_4
0x400b311	          0x4889c7	                            mov rdi, rax	      5656	ops.c	FUNCTION_67	CALL_4
0x400b314	      0xe800000000	                          call 0x400b319	      5656	ops.c	FUNCTION_67	CALL_4
0x400b319	          0x4885c0	                           test rax, rax	      5656	ops.c	FUNCTION_67	CALL_4
0x400b31c	           0xf95c0	                                setne al	      5656	ops.c	FUNCTION_67	CALL_4
0x400b31f	           0xfb6c0	                           movzx eax, al	      5656	ops.c	FUNCTION_67	CALL_4
0x400b322	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      5656	ops.c	FUNCTION_67	CALL_4
0x400b328	    0x488b0d000000	            mov rcx, qword [0x0400b32f] 	      5658	ops.c	FUNCTION_67
0x400b32f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5658	ops.c	FUNCTION_67
0x400b336	        0x488b5008	                mov rdx, qword [rax + 8]	      5658	ops.c	FUNCTION_67
0x400b33a	          0x488b00	                    mov rax, qword [rax]	      5658	ops.c	FUNCTION_67
0x400b33d	        0x48894138	             mov qword [rcx + 0x38], rax	      5658	ops.c	FUNCTION_67
0x400b341	        0x48895140	             mov qword [rcx + 0x40], rdx	      5658	ops.c	FUNCTION_67
0x400b345	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5659	ops.c	FUNCTION_67	CALL_5
0x400b34c	          0x488b00	                    mov rax, qword [rax]	      5659	ops.c	FUNCTION_67	CALL_5
0x400b34f	          0x4889c7	                            mov rdi, rax	      5659	ops.c	FUNCTION_67	CALL_5
0x400b352	      0xe800000000	                          call 0x400b357	      5659	ops.c	FUNCTION_67	CALL_5
0x400b357	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5659	ops.c	FUNCTION_67	CALL_5
0x400b35e	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5660	ops.c	FUNCTION_67
0x400b365	          0x8b4008	                mov eax, dword [rax + 8]	      5660	ops.c	FUNCTION_67
0x400b368	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      5660	ops.c	FUNCTION_67
0x400b36e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5662	ops.c	FUNCTION_67	IF_1
0x400b375	           0xfb600	                   movzx eax, byte [rax]	      5662	ops.c	FUNCTION_67	IF_1
0x400b378	            0x84c0	                             test al, al	      5662	ops.c	FUNCTION_67	IF_1
0x400b37a	     0xf8423110000	                            je 0x400c4a3	      5662	ops.c	FUNCTION_67	IF_1
0x400b380	    0x8b0500000000	            mov eax, dword [0x0400b386] 	      5668	ops.c	FUNCTION_67	IF_2
0x400b386	            0x85c0	                           test eax, eax	      5668	ops.c	FUNCTION_67	IF_2
0x400b388	     0xf85de050000	                           jne 0x400b96c	      5668	ops.c	FUNCTION_67	IF_2
0x400b38e	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      5670	ops.c	FUNCTION_67	IF_2	IF_3
0x400b395	            0x746f	                            je 0x400b406	      5670	ops.c	FUNCTION_67	IF_2	IF_3
0x400b397	            0xeb40	                           jmp 0x400b3d9	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b399	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5673	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1
0x400b3a0	    0x8b0500000000	            mov eax, dword [0x0400b3a6] 	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3a6	            0x85c0	                           test eax, eax	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3a8	            0x742f	                            je 0x400b3d9	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3aa	    0x488b05000000	            mov rax, qword [0x0400b3b1] 	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3b1	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3b7	          0x4863ca	                         movsxd rcx, edx	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3ba	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3c1	          0x4801d1	                            add rcx, rdx	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3c4	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3cb	          0x4889ce	                            mov rsi, rcx	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3ce	          0x4889d7	                            mov rdi, rdx	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3d1	            0xffd0	                                call rax	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3d3	    0x298508ffffff	             sub dword [rbp - 0xf8], eax	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400b3d9	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b3e0	            0x7e24	                           jle 0x400b406	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b3e2	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b3e8	          0x4863d0	                         movsxd rdx, eax	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b3eb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b3f2	          0x4801d0	                            add rax, rdx	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b3f5	           0xfb600	                   movzx eax, byte [rax]	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b3f8	           0xfb6c0	                           movzx eax, al	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b3fb	            0x89c7	                            mov edi, eax	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b3fd	      0xe800000000	                          call 0x400b402	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b402	            0x85c0	                           test eax, eax	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b404	            0x7593	                           jne 0x400b399	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400b406	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      5680	ops.c	FUNCTION_67	IF_2	IF_5
0x400b40d	            0x746f	                            je 0x400b47e	      5680	ops.c	FUNCTION_67	IF_2	IF_5
0x400b40f	            0xeb40	                           jmp 0x400b451	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b411	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5683	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2
0x400b418	    0x8b0500000000	            mov eax, dword [0x0400b41e] 	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b41e	            0x85c0	                           test eax, eax	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b420	            0x742f	                            je 0x400b451	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b422	    0x488b05000000	            mov rax, qword [0x0400b429] 	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b429	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b42f	          0x4863ca	                         movsxd rcx, edx	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b432	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b439	          0x4801d1	                            add rcx, rdx	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b43c	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b443	          0x4889ce	                            mov rsi, rcx	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b446	          0x4889d7	                            mov rdi, rdx	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b449	            0xffd0	                                call rax	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b44b	    0x298508ffffff	             sub dword [rbp - 0xf8], eax	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400b451	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b458	            0x7e24	                           jle 0x400b47e	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b45a	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b460	          0x4863d0	                         movsxd rdx, eax	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b463	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b46a	          0x4801d0	                            add rax, rdx	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b46d	           0xfb600	                   movzx eax, byte [rax]	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b470	           0xfb6c0	                           movzx eax, al	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b473	            0x89c7	                            mov edi, eax	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b475	      0xe800000000	                          call 0x400b47a	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b47a	            0x85c0	                           test eax, eax	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b47c	            0x7593	                           jne 0x400b411	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400b47e	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x400b485	     0xf844c010000	                            je 0x400b5d7	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x400b48b	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      5691	ops.c	FUNCTION_67	IF_2	IF_7
0x400b492	     0xf843f010000	                            je 0x400b5d7	      5691	ops.c	FUNCTION_67	IF_2	IF_7
0x400b498	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x400b49f	     0xf8eb3000000	                           jle 0x400b558	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4a5	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4ab	          0x4863d0	                         movsxd rdx, eax	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4ae	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4b5	          0x4801d0	                            add rax, rdx	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4b8	           0xfb600	                   movzx eax, byte [rax]	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4bb	            0x3c58	                            cmp al, 0x58	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4bd	            0x741a	                            je 0x400b4d9	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4bf	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5694	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4c5	          0x4863d0	                         movsxd rdx, eax	      5694	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4c8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5694	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4cf	          0x4801d0	                            add rax, rdx	      5694	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4d2	           0xfb600	                   movzx eax, byte [rax]	      5694	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4d5	            0x3c78	                            cmp al, 0x78	      5694	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4d7	            0x757f	                           jne 0x400b558	      5694	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4d9	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4df	            0x4898	                                    cdqe	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4e1	        0x488d50ff	                      lea rdx, [rax - 1]	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4e5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4ec	          0x4801d0	                            add rax, rdx	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4ef	           0xfb600	                   movzx eax, byte [rax]	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4f2	            0x3c30	                            cmp al, 0x30	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4f4	            0x7562	                           jne 0x400b558	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4f6	    0x8b0500000000	            mov eax, dword [0x0400b4fc] 	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4fc	            0x85c0	                           test eax, eax	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x400b4fe	            0x7431	                            je 0x400b531	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x400b500	    0x488b05000000	            mov rax, qword [0x0400b507] 	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x400b507	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x400b50d	          0x4863d2	                         movsxd rdx, edx	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x400b510	        0x488d4aff	                      lea rcx, [rdx - 1]	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x400b514	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x400b51b	          0x4801d1	                            add rcx, rdx	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x400b51e	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x400b525	          0x4889ce	                            mov rsi, rcx	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x400b528	          0x4889d7	                            mov rdi, rdx	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x400b52b	            0xffd0	                                call rax	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x400b52d	            0x85c0	                           test eax, eax	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x400b52f	            0x7527	                           jne 0x400b558	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x400b531	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x400b537	            0x4898	                                    cdqe	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x400b539	        0x488d5001	                      lea rdx, [rax + 1]	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x400b53d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x400b544	          0x4801d0	                            add rax, rdx	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x400b547	           0xfb600	                   movzx eax, byte [rax]	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x400b54a	           0xfb6c0	                           movzx eax, al	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x400b54d	            0x89c7	                            mov edi, eax	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x400b54f	      0xe800000000	                          call 0x400b554	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x400b554	            0x85c0	                           test eax, eax	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x400b556	            0x757f	                           jne 0x400b5d7	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x400b558	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5705	ops.c	FUNCTION_67	IF_2	IF_7
0x400b55f	          0x8b4008	                mov eax, dword [rax + 8]	      5705	ops.c	FUNCTION_67	IF_2	IF_7
0x400b562	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      5705	ops.c	FUNCTION_67	IF_2	IF_7
0x400b568	            0xeb40	                           jmp 0x400b5aa	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b56a	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5709	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3
0x400b571	    0x8b0500000000	            mov eax, dword [0x0400b577] 	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b577	            0x85c0	                           test eax, eax	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b579	            0x742f	                            je 0x400b5aa	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b57b	    0x488b05000000	            mov rax, qword [0x0400b582] 	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b582	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b588	          0x4863ca	                         movsxd rcx, edx	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b58b	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b592	          0x4801d1	                            add rcx, rdx	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b595	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b59c	          0x4889ce	                            mov rsi, rcx	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b59f	          0x4889d7	                            mov rdi, rdx	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b5a2	            0xffd0	                                call rax	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b5a4	    0x298508ffffff	             sub dword [rbp - 0xf8], eax	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400b5aa	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5b1	            0x7e24	                           jle 0x400b5d7	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5b3	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5b9	          0x4863d0	                         movsxd rdx, eax	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5bc	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5c3	          0x4801d0	                            add rax, rdx	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5c6	           0xfb600	                   movzx eax, byte [rax]	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5c9	           0xfb6c0	                           movzx eax, al	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5cc	            0x89c7	                            mov edi, eax	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5ce	      0xe800000000	                          call 0x400b5d3	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5d3	            0x85c0	                           test eax, eax	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5d5	            0x7593	                           jne 0x400b56a	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x400b5d7	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      5717	ops.c	FUNCTION_67	IF_2	IF_9
0x400b5de	     0xf84c8000000	                            je 0x400b6ac	      5717	ops.c	FUNCTION_67	IF_2	IF_9
0x400b5e4	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x400b5eb	     0xf8ebb000000	                           jle 0x400b6ac	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x400b5f1	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x400b5f7	          0x4863d0	                         movsxd rdx, eax	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x400b5fa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x400b601	          0x4801d0	                            add rax, rdx	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x400b604	           0xfb600	                   movzx eax, byte [rax]	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x400b607	            0x3c58	                            cmp al, 0x58	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x400b609	            0x741e	                            je 0x400b629	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x400b60b	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5720	ops.c	FUNCTION_67	IF_2	IF_9
0x400b611	          0x4863d0	                         movsxd rdx, eax	      5720	ops.c	FUNCTION_67	IF_2	IF_9
0x400b614	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5720	ops.c	FUNCTION_67	IF_2	IF_9
0x400b61b	          0x4801d0	                            add rax, rdx	      5720	ops.c	FUNCTION_67	IF_2	IF_9
0x400b61e	           0xfb600	                   movzx eax, byte [rax]	      5720	ops.c	FUNCTION_67	IF_2	IF_9
0x400b621	            0x3c78	                            cmp al, 0x78	      5720	ops.c	FUNCTION_67	IF_2	IF_9
0x400b623	     0xf8583000000	                           jne 0x400b6ac	      5720	ops.c	FUNCTION_67	IF_2	IF_9
0x400b629	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x400b62f	            0x4898	                                    cdqe	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x400b631	        0x488d50ff	                      lea rdx, [rax - 1]	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x400b635	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x400b63c	          0x4801d0	                            add rax, rdx	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x400b63f	           0xfb600	                   movzx eax, byte [rax]	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x400b642	            0x3c30	                            cmp al, 0x30	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x400b644	            0x7566	                           jne 0x400b6ac	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x400b646	    0x8b0500000000	            mov eax, dword [0x0400b64c] 	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x400b64c	            0x85c0	                           test eax, eax	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x400b64e	            0x7431	                            je 0x400b681	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x400b650	    0x488b05000000	            mov rax, qword [0x0400b657] 	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400b657	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400b65d	          0x4863d2	                         movsxd rdx, edx	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400b660	        0x488d4aff	                      lea rcx, [rdx - 1]	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400b664	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400b66b	          0x4801d1	                            add rcx, rdx	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400b66e	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400b675	          0x4889ce	                            mov rsi, rcx	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400b678	          0x4889d7	                            mov rdi, rdx	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400b67b	            0xffd0	                                call rax	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400b67d	            0x85c0	                           test eax, eax	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x400b67f	            0x752b	                           jne 0x400b6ac	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x400b681	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b687	            0x4898	                                    cdqe	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b689	        0x488d5001	                      lea rdx, [rax + 1]	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b68d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b694	          0x4801d0	                            add rax, rdx	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b697	           0xfb600	                   movzx eax, byte [rax]	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b69a	           0xfb6c0	                           movzx eax, al	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b69d	            0x89c7	                            mov edi, eax	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b69f	      0xe800000000	                          call 0x400b6a4	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b6a4	            0x85c0	                           test eax, eax	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b6a6	     0xf85d5000000	                           jne 0x400b781	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b6ac	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b6b3	     0xf8411010000	                            je 0x400b7ca	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400b6b9	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5728	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6c0	     0xf8e04010000	                           jle 0x400b7ca	      5728	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6c6	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6cc	          0x4863d0	                         movsxd rdx, eax	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6cf	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6d6	          0x4801d0	                            add rax, rdx	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6d9	           0xfb600	                   movzx eax, byte [rax]	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6dc	            0x3c42	                            cmp al, 0x42	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6de	            0x741e	                            je 0x400b6fe	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6e0	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5730	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6e6	          0x4863d0	                         movsxd rdx, eax	      5730	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6e9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5730	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6f0	          0x4801d0	                            add rax, rdx	      5730	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6f3	           0xfb600	                   movzx eax, byte [rax]	      5730	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6f6	            0x3c62	                            cmp al, 0x62	      5730	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6f8	     0xf85cc000000	                           jne 0x400b7ca	      5730	ops.c	FUNCTION_67	IF_2	IF_9
0x400b6fe	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x400b704	            0x4898	                                    cdqe	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x400b706	        0x488d50ff	                      lea rdx, [rax - 1]	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x400b70a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x400b711	          0x4801d0	                            add rax, rdx	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x400b714	           0xfb600	                   movzx eax, byte [rax]	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x400b717	            0x3c30	                            cmp al, 0x30	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x400b719	     0xf85ab000000	                           jne 0x400b7ca	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x400b71f	    0x8b0500000000	            mov eax, dword [0x0400b725] 	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x400b725	            0x85c0	                           test eax, eax	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x400b727	            0x7431	                            je 0x400b75a	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x400b729	    0x488b05000000	            mov rax, qword [0x0400b730] 	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x400b730	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x400b736	          0x4863d2	                         movsxd rdx, edx	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x400b739	        0x488d4aff	                      lea rcx, [rdx - 1]	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x400b73d	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x400b744	          0x4801d1	                            add rcx, rdx	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x400b747	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x400b74e	          0x4889ce	                            mov rsi, rcx	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x400b751	          0x4889d7	                            mov rdi, rdx	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x400b754	            0xffd0	                                call rax	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x400b756	            0x85c0	                           test eax, eax	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x400b758	            0x7570	                           jne 0x400b7ca	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x400b75a	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400b760	            0x4898	                                    cdqe	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400b762	        0x488d5001	                      lea rdx, [rax + 1]	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400b766	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400b76d	          0x4801d0	                            add rax, rdx	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400b770	           0xfb600	                   movzx eax, byte [rax]	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400b773	           0xfb6c0	                           movzx eax, al	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400b776	            0x89c7	                            mov edi, eax	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400b778	      0xe800000000	                          call 0x400b77d	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400b77d	            0x85c0	                           test eax, eax	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400b77f	            0x7449	                            je 0x400b7ca	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x400b781	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5739	ops.c	FUNCTION_67	IF_2	IF_9
0x400b788	    0x8b0500000000	            mov eax, dword [0x0400b78e] 	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b78e	            0x85c0	                           test eax, eax	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b790	     0xf84d6010000	                            je 0x400b96c	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b796	    0x488b05000000	            mov rax, qword [0x0400b79d] 	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b79d	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b7a3	          0x4863ca	                         movsxd rcx, edx	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b7a6	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b7ad	          0x4801d1	                            add rcx, rdx	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b7b0	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b7b7	          0x4889ce	                            mov rsi, rcx	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b7ba	          0x4889d7	                            mov rdi, rdx	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b7bd	            0xffd0	                                call rax	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b7bf	    0x298508ffffff	             sub dword [rbp - 0xf8], eax	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b7c5	      0xe9a2010000	                           jmp 0x400b96c	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400b7ca	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5750	ops.c	FUNCTION_67	IF_2	ELSE_1
0x400b7d1	          0x8b4008	                mov eax, dword [rax + 8]	      5750	ops.c	FUNCTION_67	IF_2	ELSE_1
0x400b7d4	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      5750	ops.c	FUNCTION_67	IF_2	ELSE_1
0x400b7da	            0xeb36	                           jmp 0x400b812	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400b7dc	    0x8b0500000000	            mov eax, dword [0x0400b7e2] 	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b7e2	            0x85c0	                           test eax, eax	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b7e4	            0x7421	                            je 0x400b807	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b7e6	    0x488b05000000	            mov rax, qword [0x0400b7ed] 	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b7ed	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b7f3	          0x4863ca	                         movsxd rcx, edx	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b7f6	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b7fd	          0x4801ca	                            add rdx, rcx	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b800	          0x4889d7	                            mov rdi, rdx	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b803	            0xffd0	                                call rax	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b805	            0xeb05	                           jmp 0x400b80c	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b807	      0xb801000000	                              mov eax, 1	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b80c	     0x18508ffffff	             add dword [rbp - 0xf8], eax	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400b812	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400b818	          0x4863d0	                         movsxd rdx, eax	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400b81b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400b822	          0x4801d0	                            add rax, rdx	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400b825	           0xfb600	                   movzx eax, byte [rax]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400b828	            0x84c0	                             test al, al	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400b82a	     0xf84bd000000	                            je 0x400b8ed	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x400b830	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400b836	          0x4863d0	                         movsxd rdx, eax	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400b839	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400b840	          0x4801d0	                            add rax, rdx	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400b843	           0xfb600	                   movzx eax, byte [rax]	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400b846	           0xfb6c0	                           movzx eax, al	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400b849	            0x89c7	                            mov edi, eax	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400b84b	      0xe800000000	                          call 0x400b850	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400b850	            0x85c0	                           test eax, eax	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400b852	     0xf8595000000	                           jne 0x400b8ed	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400b858	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b85f	     0xf8477ffffff	                            je 0x400b7dc	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b865	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b86b	          0x4863d0	                         movsxd rdx, eax	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b86e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b875	          0x4801d0	                            add rax, rdx	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b878	           0xfb600	                   movzx eax, byte [rax]	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b87b	           0xfb6c0	                           movzx eax, al	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b87e	          0x83e841	                           sub eax, 0x41	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b881	          0x83f819	                           cmp eax, 0x19	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b884	            0x7667	                           jbe 0x400b8ed	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b886	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b88c	          0x4863d0	                         movsxd rdx, eax	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b88f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b896	          0x4801d0	                            add rax, rdx	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b899	           0xfb600	                   movzx eax, byte [rax]	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b89c	           0xfb6c0	                           movzx eax, al	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b89f	          0x83e861	                           sub eax, 0x61	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b8a2	          0x83f819	                           cmp eax, 0x19	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b8a5	     0xf8731ffffff	                            ja 0x400b7dc	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400b8ab	            0xeb40	                           jmp 0x400b8ed	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x400b8ad	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5761	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x400b8b4	    0x8b0500000000	            mov eax, dword [0x0400b8ba] 	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8ba	            0x85c0	                           test eax, eax	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8bc	            0x742f	                            je 0x400b8ed	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8be	    0x488b05000000	            mov rax, qword [0x0400b8c5] 	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8c5	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8cb	          0x4863ca	                         movsxd rcx, edx	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8ce	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8d5	          0x4801d1	                            add rcx, rdx	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8d8	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8df	          0x4889ce	                            mov rsi, rcx	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8e2	          0x4889d7	                            mov rdi, rdx	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8e5	            0xffd0	                                call rax	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8e7	    0x298508ffffff	             sub dword [rbp - 0xf8], eax	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x400b8ed	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x400b8f4	            0x7e76	                           jle 0x400b96c	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x400b8f6	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400b8fc	            0x4898	                                    cdqe	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400b8fe	        0x488d50ff	                      lea rdx, [rax - 1]	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400b902	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400b909	          0x4801d0	                            add rax, rdx	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400b90c	           0xfb600	                   movzx eax, byte [rax]	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400b90f	           0xfb6c0	                           movzx eax, al	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400b912	            0x89c7	                            mov edi, eax	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400b914	      0xe800000000	                          call 0x400b919	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400b919	            0x85c0	                           test eax, eax	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400b91b	            0x744f	                            je 0x400b96c	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x400b91d	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b924	            0x7487	                            je 0x400b8ad	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b926	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b92c	          0x4863d0	                         movsxd rdx, eax	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b92f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b936	          0x4801d0	                            add rax, rdx	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b939	           0xfb600	                   movzx eax, byte [rax]	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b93c	           0xfb6c0	                           movzx eax, al	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b93f	          0x83e841	                           sub eax, 0x41	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b942	          0x83f819	                           cmp eax, 0x19	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b945	            0x7625	                           jbe 0x400b96c	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b947	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b94d	          0x4863d0	                         movsxd rdx, eax	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b950	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b957	          0x4801d0	                            add rax, rdx	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b95a	           0xfb600	                   movzx eax, byte [rax]	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b95d	           0xfb6c0	                           movzx eax, al	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b960	          0x83e861	                           sub eax, 0x61	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b963	          0x83f819	                           cmp eax, 0x19	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b966	     0xf8741ffffff	                            ja 0x400b8ad	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x400b96c	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5770	ops.c	FUNCTION_67	IF_12
0x400b973	     0xf8481010000	                            je 0x400bafa	      5770	ops.c	FUNCTION_67	IF_12
0x400b979	            0xeb54	                           jmp 0x400b9cf	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b97b	    0x8b0500000000	            mov eax, dword [0x0400b981] 	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b981	            0x85c0	                           test eax, eax	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b983	            0x7421	                            je 0x400b9a6	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b985	    0x488b05000000	            mov rax, qword [0x0400b98c] 	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b98c	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b992	          0x4863ca	                         movsxd rcx, edx	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b995	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b99c	          0x4801ca	                            add rdx, rcx	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b99f	          0x4889d7	                            mov rdi, rdx	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b9a2	            0xffd0	                                call rax	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b9a4	            0xeb05	                           jmp 0x400b9ab	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b9a6	      0xb801000000	                              mov eax, 1	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b9ab	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400b9b1	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      5778	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9b7	     0x18508ffffff	             add dword [rbp - 0xf8], eax	      5778	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9bd	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9c3	    0x2b8548ffffff	             sub eax, dword [rbp - 0xb8]	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9c9	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9cf	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9d5	          0x4863d0	                         movsxd rdx, eax	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9d8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9df	          0x4801d0	                            add rax, rdx	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9e2	           0xfb600	                   movzx eax, byte [rax]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9e5	            0x84c0	                             test al, al	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9e7	     0xf8481000000	                            je 0x400ba6e	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9ed	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9f3	            0x85c0	                           test eax, eax	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9f5	            0x7e77	                           jle 0x400ba6e	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400b9f7	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x400b9fd	          0x4863d0	                         movsxd rdx, eax	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x400ba00	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x400ba07	          0x4801d0	                            add rax, rdx	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x400ba0a	           0xfb600	                   movzx eax, byte [rax]	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x400ba0d	           0xfb6c0	                           movzx eax, al	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x400ba10	            0x89c7	                            mov edi, eax	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x400ba12	      0xe800000000	                          call 0x400ba17	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x400ba17	            0x85c0	                           test eax, eax	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x400ba19	            0x7553	                           jne 0x400ba6e	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x400ba1b	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba22	     0xf8453ffffff	                            je 0x400b97b	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba28	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba2e	          0x4863d0	                         movsxd rdx, eax	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba31	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba38	          0x4801d0	                            add rax, rdx	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba3b	           0xfb600	                   movzx eax, byte [rax]	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba3e	           0xfb6c0	                           movzx eax, al	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba41	          0x83e841	                           sub eax, 0x41	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba44	          0x83f819	                           cmp eax, 0x19	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba47	            0x7625	                           jbe 0x400ba6e	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba49	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba4f	          0x4863d0	                         movsxd rdx, eax	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba52	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba59	          0x4801d0	                            add rax, rdx	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba5c	           0xfb600	                   movzx eax, byte [rax]	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba5f	           0xfb6c0	                           movzx eax, al	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba62	          0x83e861	                           sub eax, 0x61	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba65	          0x83f819	                           cmp eax, 0x19	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba68	     0xf870dffffff	                            ja 0x400b97b	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x400ba6e	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5782	ops.c	FUNCTION_67	IF_12	IF_13
0x400ba74	            0x85c0	                           test eax, eax	      5782	ops.c	FUNCTION_67	IF_12	IF_13
0x400ba76	     0xf842a0a0000	                            je 0x400c4a6	      5782	ops.c	FUNCTION_67	IF_12	IF_13
0x400ba7c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400ba83	          0x8b4008	                mov eax, dword [rax + 8]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400ba86	    0x3b8508ffffff	             cmp eax, dword [rbp - 0xf8]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400ba8c	            0x7d6c	                           jge 0x400bafa	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400ba8e	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400ba94	            0x4898	                                    cdqe	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400ba96	        0x488d50ff	                      lea rdx, [rax - 1]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400ba9a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400baa1	          0x4801d0	                            add rax, rdx	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400baa4	           0xfb600	                   movzx eax, byte [rax]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400baa7	            0x3c2d	                            cmp al, 0x2d	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400baa9	            0x754f	                           jne 0x400bafa	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400baab	    0x8b0500000000	            mov eax, dword [0x0400bab1] 	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x400bab1	            0x85c0	                           test eax, eax	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x400bab3	            0x7431	                            je 0x400bae6	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x400bab5	    0x488b05000000	            mov rax, qword [0x0400babc] 	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x400babc	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x400bac2	          0x4863d2	                         movsxd rdx, edx	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x400bac5	        0x488d4aff	                      lea rcx, [rdx - 1]	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x400bac9	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x400bad0	          0x4801d1	                            add rcx, rdx	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x400bad3	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x400bada	          0x4889ce	                            mov rsi, rcx	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x400badd	          0x4889d7	                            mov rdi, rdx	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x400bae0	            0xffd0	                                call rax	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x400bae2	            0x85c0	                           test eax, eax	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x400bae4	            0x7514	                           jne 0x400bafa	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x400bae6	    0xc7851cffffff	               mov dword [rbp - 0xe4], 1	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x400baf0	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x400bafa	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5800	ops.c	FUNCTION_67
0x400bb00	          0x4863d0	                         movsxd rdx, eax	      5800	ops.c	FUNCTION_67
0x400bb03	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5800	ops.c	FUNCTION_67
0x400bb0a	          0x4801d0	                            add rax, rdx	      5800	ops.c	FUNCTION_67
0x400bb0d	           0xfb600	                   movzx eax, byte [rax]	      5800	ops.c	FUNCTION_67
0x400bb10	           0xfb6c0	                           movzx eax, al	      5800	ops.c	FUNCTION_67
0x400bb13	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      5800	ops.c	FUNCTION_67
0x400bb19	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb1f	          0x83e830	                           sub eax, 0x30	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb22	          0x83f809	                              cmp eax, 9	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb25	            0x762f	                           jbe 0x400bb56	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb27	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb2e	            0x741c	                            je 0x400bb4c	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb30	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb36	          0x83e841	                           sub eax, 0x41	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb39	          0x83f819	                           cmp eax, 0x19	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb3c	            0x7618	                           jbe 0x400bb56	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb3e	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb44	          0x83e861	                           sub eax, 0x61	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb47	          0x83f819	                           cmp eax, 0x19	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb4a	            0x760a	                           jbe 0x400bb56	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400bb4c	      0xe800000000	                          call 0x400bb51	      5803	ops.c	FUNCTION_67	IF_15	CALL_22
0x400bb51	      0xe954090000	                           jmp 0x400c4aa	      5804	ops.c	FUNCTION_67	IF_15
0x400bb56	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x400bb5d	     0xf84b5010000	                            je 0x400bd18	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x400bb63	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x400bb69	          0x83e841	                           sub eax, 0x41	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x400bb6c	          0x83f819	                           cmp eax, 0x19	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x400bb6f	            0x7612	                           jbe 0x400bb83	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x400bb71	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x400bb77	          0x83e861	                           sub eax, 0x61	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x400bb7a	          0x83f819	                           cmp eax, 0x19	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x400bb7d	     0xf8795010000	                            ja 0x400bd18	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x400bb83	    0x83bdfcfeffff	          cmp dword [rbp - 0x104], 0x1d 	      5810	ops.c	FUNCTION_67	IF_16	IF_17
0x400bb8a	     0xf8588000000	                           jne 0x400bc18	      5810	ops.c	FUNCTION_67	IF_16	IF_17
0x400bb90	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x60 	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400bb97	            0x7f0d	                            jg 0x400bba6	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400bb99	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400bb9f	          0x83e841	                           sub eax, 0x41	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400bba2	            0x4898	                                    cdqe	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400bba4	            0xeb0b	                           jmp 0x400bbb1	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400bba6	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400bbac	          0x83e861	                           sub eax, 0x61	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400bbaf	            0x4898	                                    cdqe	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400bbb1	    0x483b85e8feff	            cmp rax, qword [rbp - 0x118]	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400bbb8	            0x7d44	                           jge 0x400bbfe	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400bbba	      0xe800000000	                          call 0x400bbbf	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400bbbf	          0x488b00	                    mov rax, qword [rax]	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400bbc2	    0x8b9514ffffff	             mov edx, dword [rbp - 0xec]	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400bbc8	          0x4863d2	                         movsxd rdx, edx	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400bbcb	          0x4801d2	                            add rdx, rdx	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400bbce	          0x4801d0	                            add rax, rdx	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400bbd1	           0xfb700	                   movzx eax, word [rax]	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400bbd4	           0xfb7c0	                           movzx eax, ax	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400bbd7	      0x2500010000	                          and eax, 0x100	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400bbdc	            0x85c0	                           test eax, eax	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400bbde	            0x740f	                            je 0x400bbef	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400bbe0	    0xc78514ffffff	           mov dword [rbp - 0xec], 0x41 	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x400bbea	      0xe9ac000000	                           jmp 0x400bc9b	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x400bbef	    0xc78514ffffff	           mov dword [rbp - 0xec], 0x61 	      5817	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	ELSE_2
0x400bbf9	      0xe99d000000	                           jmp 0x400bc9b	      5817	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	ELSE_2
0x400bbfe	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x400bc04	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x400bc0b	            0x29d0	                            sub eax, edx	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x400bc0d	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x400bc13	      0xe983000000	                           jmp 0x400bc9b	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x400bc18	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x60 	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400bc1f	            0x7f0f	                            jg 0x400bc30	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400bc21	      0xb85a000000	                           mov eax, 0x5a	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400bc26	    0x2b8514ffffff	             sub eax, dword [rbp - 0xec]	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400bc2c	            0x4898	                                    cdqe	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400bc2e	            0xeb0d	                           jmp 0x400bc3d	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400bc30	      0xb87a000000	                           mov eax, 0x7a	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400bc35	    0x2b8514ffffff	             sub eax, dword [rbp - 0xec]	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400bc3b	            0x4898	                                    cdqe	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400bc3d	    0x483b85e8feff	            cmp rax, qword [rbp - 0x118]	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400bc44	            0x7d3e	                           jge 0x400bc84	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400bc46	      0xe800000000	                          call 0x400bc4b	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400bc4b	          0x488b00	                    mov rax, qword [rax]	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400bc4e	    0x8b9514ffffff	             mov edx, dword [rbp - 0xec]	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400bc54	          0x4863d2	                         movsxd rdx, edx	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400bc57	          0x4801d2	                            add rdx, rdx	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400bc5a	          0x4801d0	                            add rax, rdx	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400bc5d	           0xfb700	                   movzx eax, word [rax]	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400bc60	           0xfb7c0	                           movzx eax, ax	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400bc63	      0x2500010000	                          and eax, 0x100	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400bc68	            0x85c0	                           test eax, eax	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400bc6a	            0x740c	                            je 0x400bc78	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x400bc6c	    0xc78514ffffff	           mov dword [rbp - 0xec], 0x5a 	      5831	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0x400bc76	            0xeb23	                           jmp 0x400bc9b	      5831	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0x400bc78	    0xc78514ffffff	           mov dword [rbp - 0xec], 0x7a 	      5833	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	ELSE_5
0x400bc82	            0xeb17	                           jmp 0x400bc9b	      5833	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	ELSE_5
0x400bc84	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x400bc8b	            0x89c2	                            mov edx, eax	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x400bc8d	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x400bc93	             0x1d0	                            add eax, edx	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x400bc95	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x400bc9b	    0x488b05000000	            mov rax, qword [0x0400bca2] 	      5842	ops.c	FUNCTION_67	IF_16
0x400bca2	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5842	ops.c	FUNCTION_67	IF_16
0x400bca8	          0x895040	             mov dword [rax + 0x40], edx	      5842	ops.c	FUNCTION_67	IF_16
0x400bcab	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      5843	ops.c	FUNCTION_67	IF_16	IF_22
0x400bcb2	            0x7517	                           jne 0x400bccb	      5843	ops.c	FUNCTION_67	IF_16	IF_22
0x400bcb4	    0x488b05000000	            mov rax, qword [0x0400bcbb] 	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x400bcbb	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x400bcbf	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x400bcc3	        0x48894580	             mov qword [rbp - 0x80], rax	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x400bcc7	        0x48895588	             mov qword [rbp - 0x78], rdx	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x400bccb	    0xc78524ffffff	               mov dword [rbp - 0xdc], 1	      5845	ops.c	FUNCTION_67	IF_16
0x400bcd5	      0xbf00000000	                              mov edi, 0	      5846	ops.c	FUNCTION_67	IF_16	CALL_30
0x400bcda	      0xe800000000	                          call 0x400bcdf	      5846	ops.c	FUNCTION_67	IF_16	CALL_30
0x400bcdf	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5847	ops.c	FUNCTION_67	IF_16	CALL_31
0x400bce5	            0x89c7	                            mov edi, eax	      5847	ops.c	FUNCTION_67	IF_16	CALL_31
0x400bce7	      0xe800000000	                          call 0x400bcec	      5847	ops.c	FUNCTION_67	IF_16	CALL_31
0x400bcec	    0x488b05000000	            mov rax, qword [0x0400bcf3] 	      5848	ops.c	FUNCTION_67	IF_16
0x400bcf3	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5848	ops.c	FUNCTION_67	IF_16
0x400bcf7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5848	ops.c	FUNCTION_67	IF_16
0x400bcfb	        0x48894590	             mov qword [rbp - 0x70], rax	      5848	ops.c	FUNCTION_67	IF_16
0x400bcff	        0x48895598	             mov qword [rbp - 0x68], rdx	      5848	ops.c	FUNCTION_67	IF_16
0x400bd03	    0x488b05000000	            mov rax, qword [0x0400bd0a] 	      5849	ops.c	FUNCTION_67	IF_16
0x400bd0a	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5849	ops.c	FUNCTION_67	IF_16
0x400bd10	          0x895040	             mov dword [rax + 0x40], edx	      5849	ops.c	FUNCTION_67	IF_16
0x400bd13	      0xe91f070000	                           jmp 0x400c437	      5849	ops.c	FUNCTION_67	IF_16
0x400bd18	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd1f	            0x7e72	                           jle 0x400bd93	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd21	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd27	            0x4898	                                    cdqe	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd29	        0x488d50ff	                      lea rdx, [rax - 1]	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd2d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd34	          0x4801d0	                            add rax, rdx	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd37	           0xfb600	                   movzx eax, byte [rax]	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd3a	            0x3c2d	                            cmp al, 0x2d	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd3c	            0x7555	                           jne 0x400bd93	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd3e	    0x8b0500000000	            mov eax, dword [0x0400bd44] 	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd44	            0x85c0	                           test eax, eax	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd46	            0x7431	                            je 0x400bd79	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd48	    0x488b05000000	            mov rax, qword [0x0400bd4f] 	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd4f	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd55	          0x4863d2	                         movsxd rdx, edx	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd58	        0x488d4aff	                      lea rcx, [rdx - 1]	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd5c	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd63	          0x4801d1	                            add rcx, rdx	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd66	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd6d	          0x4889ce	                            mov rsi, rcx	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd70	          0x4889d7	                            mov rdi, rdx	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd73	            0xffd0	                                call rax	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd75	            0x85c0	                           test eax, eax	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd77	            0x751a	                           jne 0x400bd93	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd79	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5858	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd80	            0x7511	                           jne 0x400bd93	      5858	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd82	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5861	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd89	    0xc7851cffffff	               mov dword [rbp - 0xe4], 1	      5862	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400bd93	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bd9a	            0x7442	                            je 0x400bdde	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bd9c	    0x8b0500000000	            mov eax, dword [0x0400bda2] 	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bda2	          0x83f856	                           cmp eax, 0x56	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bda5	            0x7437	                            je 0x400bdde	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bda7	    0x488b05000000	            mov rax, qword [0x0400bdae] 	      5866	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bdae	    0x8b801c030000	           mov eax, dword [rax + 0x31c] 	      5866	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bdb4	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bdb9	            0x7517	                           jne 0x400bdd2	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bdbb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x400bdc2	          0x4889c7	                            mov rdi, rax	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x400bdc5	      0xe800000000	                          call 0x400bdca	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x400bdca	    0x2b8508ffffff	             sub eax, dword [rbp - 0xf8]	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bdd0	            0xeb06	                           jmp 0x400bdd8	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bdd2	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bdd8	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      5866	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400bdde	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      5871	ops.c	FUNCTION_67	ELSE_7
0x400bde5	           0xf95c0	                                setne al	      5871	ops.c	FUNCTION_67	ELSE_7
0x400bde8	           0xfb6c0	                           movzx eax, al	      5871	ops.c	FUNCTION_67	ELSE_7
0x400bdeb	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      5872	ops.c	FUNCTION_67	ELSE_7
0x400bdf2	            0x7407	                            je 0x400bdfb	      5872	ops.c	FUNCTION_67	ELSE_7
0x400bdf4	      0xba02000000	                              mov edx, 2	      5872	ops.c	FUNCTION_67	ELSE_7
0x400bdf9	            0xeb05	                           jmp 0x400be00	      5872	ops.c	FUNCTION_67	ELSE_7
0x400bdfb	      0xba00000000	                              mov edx, 0	      5872	ops.c	FUNCTION_67	ELSE_7
0x400be00	             0x1d0	                            add eax, edx	      5872	ops.c	FUNCTION_67	ELSE_7
0x400be02	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      5873	ops.c	FUNCTION_67	ELSE_7
0x400be09	            0x7407	                            je 0x400be12	      5873	ops.c	FUNCTION_67	ELSE_7
0x400be0b	      0xba04000000	                              mov edx, 4	      5873	ops.c	FUNCTION_67	ELSE_7
0x400be10	            0xeb05	                           jmp 0x400be17	      5873	ops.c	FUNCTION_67	ELSE_7
0x400be12	      0xba00000000	                              mov edx, 0	      5873	ops.c	FUNCTION_67	ELSE_7
0x400be17	          0x8d3410	                    lea esi, [rax + rdx]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be1a	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be20	          0x4863d0	                         movsxd rdx, eax	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be23	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be2a	        0x488d3c02	                    lea rdi, [rdx + rax]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be2e	    0x4c8d8550ffff	                    lea r8, [rbp - 0xb0]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be35	    0x488d95f8feff	                  lea rdx, [rbp - 0x108]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be3c	    0x488d8504ffff	                   lea rax, [rbp - 0xfc]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be43	        0x4883ec08	                              sub rsp, 8	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be47	    0x8b8d28ffffff	             mov ecx, dword [rbp - 0xd8]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be4d	              0x51	                                push rcx	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be4e	          0x4d89c1	                              mov r9, r8	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be51	    0x41b800000000	                              mov r8d, 0	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be57	            0x89f1	                            mov ecx, esi	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be59	          0x4889c6	                            mov rsi, rax	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be5c	      0xe800000000	                          call 0x400be61	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be61	        0x4883c410	                           add rsp, 0x10	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400be65	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400be6b	            0x85c0	                           test eax, eax	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400be6d	            0x7429	                            je 0x400be98	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400be6f	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400be76	            0x7420	                            je 0x400be98	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400be78	    0x838508ffffff	               add dword [rbp - 0xf8], 1	      5879	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400be7f	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5880	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400be85	          0x83e801	                              sub eax, 1	      5880	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400be88	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5880	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400be8e	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      5881	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400be98	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      5884	ops.c	FUNCTION_67	ELSE_7
0x400bea2	    0x83bdfcfeffff	          cmp dword [rbp - 0x104], 0x1d 	      5885	ops.c	FUNCTION_67	ELSE_7	IF_26
0x400bea9	            0x7507	                           jne 0x400beb2	      5885	ops.c	FUNCTION_67	ELSE_7	IF_26
0x400beab	    0x83b518ffffff	               xor dword [rbp - 0xe8], 1	      5886	ops.c	FUNCTION_67	ELSE_7	IF_26
0x400beb2	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5887	ops.c	FUNCTION_67	ELSE_7	IF_27
0x400beb9	            0x7407	                            je 0x400bec2	      5887	ops.c	FUNCTION_67	ELSE_7	IF_27
0x400bebb	    0x83b518ffffff	               xor dword [rbp - 0xe8], 1	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x400bec2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5890	ops.c	FUNCTION_67	ELSE_7
0x400bec9	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      5890	ops.c	FUNCTION_67	ELSE_7
0x400bed0	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	      5891	ops.c	FUNCTION_67	ELSE_7	IF_28
0x400bed7	            0x741d	                            je 0x400bef6	      5891	ops.c	FUNCTION_67	ELSE_7	IF_28
0x400bed9	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x400bee0	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x400bee7	          0x4829c2	                            sub rdx, rax	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x400beea	          0x4889d0	                            mov rax, rdx	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x400beed	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x400bef4	            0xeb18	                           jmp 0x400bf0e	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x400bef6	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x400befd	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x400bf04	          0x4801d0	                            add rax, rdx	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x400bf07	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x400bf0e	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5896	ops.c	FUNCTION_67	ELSE_7	IF_29
0x400bf14	            0x85c0	                           test eax, eax	      5896	ops.c	FUNCTION_67	ELSE_7	IF_29
0x400bf16	            0x7571	                           jne 0x400bf89	      5896	ops.c	FUNCTION_67	ELSE_7	IF_29
0x400bf18	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	      5898	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30
0x400bf1f	            0x742a	                            je 0x400bf4b	      5898	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30
0x400bf21	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5900	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400bf28	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      5900	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400bf2f	            0x7642	                           jbe 0x400bf73	      5900	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400bf31	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5902	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400bf38	          0x48f7d8	                                 neg rax	      5902	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400bf3b	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5902	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400bf42	    0x83b51cffffff	               xor dword [rbp - 0xe4], 1	      5903	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400bf49	            0xeb28	                           jmp 0x400bf73	      5903	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400bf4b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5909	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x400bf52	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      5909	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x400bf59	            0x7318	                           jae 0x400bf73	      5909	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x400bf5b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5911	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x400bf62	          0x48f7d0	                                 not rax	      5911	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x400bf65	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5911	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x400bf6c	    0x83b51cffffff	               xor dword [rbp - 0xe4], 1	      5912	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x400bf73	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5915	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x400bf7a	          0x4885c0	                           test rax, rax	      5915	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x400bf7d	            0x750a	                           jne 0x400bf89	      5915	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x400bf7f	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x400bf89	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bf90	            0x7431	                            je 0x400bfc3	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bf92	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 0	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bf99	            0x7528	                           jne 0x400bfc3	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bf9b	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bfa2	            0x751f	                           jne 0x400bfc3	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bfa4	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bfab	            0x7e16	                           jle 0x400bfc3	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bfad	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5922	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bfb4	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bfba	          0x83c001	                              add eax, 1	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bfbd	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400bfc3	    0x488b05000000	            mov rax, qword [0x0400bfca] 	      5929	ops.c	FUNCTION_67	ELSE_7
0x400bfca	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5929	ops.c	FUNCTION_67	ELSE_7
0x400bfd0	          0x895040	             mov dword [rax + 0x40], edx	      5929	ops.c	FUNCTION_67	ELSE_7
0x400bfd3	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      5930	ops.c	FUNCTION_67	ELSE_7	IF_35
0x400bfda	            0x7517	                           jne 0x400bff3	      5930	ops.c	FUNCTION_67	ELSE_7	IF_35
0x400bfdc	    0x488b05000000	            mov rax, qword [0x0400bfe3] 	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x400bfe3	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x400bfe7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x400bfeb	        0x48894580	             mov qword [rbp - 0x80], rax	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x400bfef	        0x48895588	             mov qword [rbp - 0x78], rdx	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x400bff3	    0xc78524ffffff	               mov dword [rbp - 0xdc], 1	      5932	ops.c	FUNCTION_67	ELSE_7
0x400bffd	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5933	ops.c	FUNCTION_67	ELSE_7
0x400c003	    0x898510ffffff	             mov dword [rbp - 0xf0], eax	      5933	ops.c	FUNCTION_67	ELSE_7
0x400c009	      0xe800000000	                          call 0x400c00e	      5934	ops.c	FUNCTION_67	ELSE_7	CALL_34
0x400c00e	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      5934	ops.c	FUNCTION_67	ELSE_7	CALL_34
0x400c014	    0x83bd0cffffff	           cmp dword [rbp - 0xf4], 0x2d 	      5939	ops.c	FUNCTION_67	ELSE_7	IF_36
0x400c01b	     0xf8597000000	                           jne 0x400c0b8	      5939	ops.c	FUNCTION_67	ELSE_7	IF_36
0x400c021	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5940	ops.c	FUNCTION_67	ELSE_7	IF_36
0x400c027	          0x83e801	                              sub eax, 1	      5940	ops.c	FUNCTION_67	ELSE_7	IF_36
0x400c02a	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5940	ops.c	FUNCTION_67	ELSE_7	IF_36
0x400c030	      0xe983000000	                           jmp 0x400c0b8	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x400c035	    0x81bd0cffffff	           cmp dword [rbp - 0xf4], 0xff 	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c03f	            0x7f62	                            jg 0x400c0a3	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c041	      0xe800000000	                          call 0x400c046	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c046	          0x488b00	                    mov rax, qword [rax]	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c049	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c04f	          0x4863d2	                         movsxd rdx, edx	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c052	          0x4801d2	                            add rdx, rdx	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c055	          0x4801d0	                            add rax, rdx	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c058	           0xfb700	                   movzx eax, word [rax]	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c05b	           0xfb7c0	                           movzx eax, ax	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c05e	      0x2500040000	                          and eax, 0x400	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c063	            0x85c0	                           test eax, eax	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c065	            0x743c	                            je 0x400c0a3	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x400c067	      0xe800000000	                          call 0x400c06c	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x400c06c	          0x488b00	                    mov rax, qword [rax]	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x400c06f	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x400c075	          0x4863d2	                         movsxd rdx, edx	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x400c078	          0x4801d2	                            add rdx, rdx	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x400c07b	          0x4801d0	                            add rax, rdx	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x400c07e	           0xfb700	                   movzx eax, word [rax]	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x400c081	           0xfb7c0	                           movzx eax, ax	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x400c084	      0x2500010000	                          and eax, 0x100	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x400c089	            0x85c0	                           test eax, eax	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x400c08b	            0x740c	                            je 0x400c099	      5945	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0x400c08d	    0xc70500000000	               mov dword [0x0400c097], 1	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x400c097	            0xeb0a	                           jmp 0x400c0a3	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x400c099	    0xc70500000000	               mov dword [0x0400c0a3], 0	      5948	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	ELSE_10
0x400c0a3	      0xbf00000000	                              mov edi, 0	      5951	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_37
0x400c0a8	      0xe800000000	                          call 0x400c0ad	      5951	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_37
0x400c0ad	      0xe800000000	                          call 0x400c0b2	      5952	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_38
0x400c0b2	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      5952	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_38
0x400c0b8	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x400c0be	          0x8d50ff	                      lea edx, [rax - 1]	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x400c0c1	    0x899510ffffff	             mov dword [rbp - 0xf0], edx	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x400c0c7	            0x85c0	                           test eax, eax	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x400c0c9	     0xf8f66ffffff	                            jg 0x400c035	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x400c0cf	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x400c0d5	          0x83c041	                           add eax, 0x41	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x400c0d8	            0x89c7	                            mov edi, eax	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x400c0da	      0xe800000000	                          call 0x400c0df	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x400c0df	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x400c0e6	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      5961	ops.c	FUNCTION_67	ELSE_7	IF_39
0x400c0ee	     0xf84b5030000	                            je 0x400c4a9	      5961	ops.c	FUNCTION_67	ELSE_7	IF_39
0x400c0f4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5963	ops.c	FUNCTION_67	ELSE_7
0x400c0fb	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5963	ops.c	FUNCTION_67	ELSE_7
0x400c102	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400c109	            0x7427	                            je 0x400c132	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400c10b	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400c112	            0x7409	                            je 0x400c11d	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400c114	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 0	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400c11b	            0x7415	                            je 0x400c132	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400c11d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400c124	        0x488d5001	                      lea rdx, [rax + 1]	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400c128	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400c12f	          0xc6002d	                    mov byte [rax], 0x2d	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400c132	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5968	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400c138	            0x85c0	                           test eax, eax	      5968	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400c13a	            0x7424	                            je 0x400c160	      5968	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400c13c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5970	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400c143	        0x488d5001	                      lea rdx, [rax + 1]	      5970	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400c147	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      5970	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400c14e	          0xc60030	                    mov byte [rax], 0x30	      5970	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400c151	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5971	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400c157	          0x83e801	                              sub eax, 1	      5971	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400c15a	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5971	ops.c	FUNCTION_67	ELSE_7	IF_41
0x400c160	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c166	          0x83f862	                           cmp eax, 0x62	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c169	            0x7421	                            je 0x400c18c	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c16b	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c171	          0x83f842	                           cmp eax, 0x42	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c174	            0x7416	                            je 0x400c18c	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c176	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c17c	          0x83f878	                           cmp eax, 0x78	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c17f	            0x740b	                            je 0x400c18c	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c181	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c187	          0x83f858	                           cmp eax, 0x58	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c18a	            0x7529	                           jne 0x400c1b5	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c18c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c193	        0x488d5001	                      lea rdx, [rax + 1]	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c197	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c19e	    0x8b9504ffffff	             mov edx, dword [rbp - 0xfc]	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c1a4	            0x8810	                      mov byte [rax], dl	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c1a6	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5977	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c1ac	          0x83e801	                              sub eax, 1	      5977	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c1af	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5977	ops.c	FUNCTION_67	ELSE_7	IF_42
0x400c1b5	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c1bb	          0x83f862	                           cmp eax, 0x62	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c1be	            0x740f	                            je 0x400c1cf	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c1c0	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c1c6	          0x83f842	                           cmp eax, 0x42	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c1c9	     0xf85c4000000	                           jne 0x400c293	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c1cf	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      5986	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c1d9	    0xc7854cffffff	           mov dword [rbp - 0xb4], 0x40 	      5987	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c1e3	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x400c1e9	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x400c1ef	            0xeb27	                           jmp 0x400c218	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x400c1f1	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400c1f8	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400c1fe	          0x83e801	                              sub eax, 1	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400c201	            0x89c1	                            mov ecx, eax	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400c203	          0x48d3ea	                             shr rdx, cl	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400c206	          0x4889d0	                            mov rax, rdx	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400c209	          0x83e001	                              and eax, 1	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400c20c	          0x4885c0	                           test rax, rax	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400c20f	            0x7512	                           jne 0x400c223	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400c211	    0x83ad30ffffff	               sub dword [rbp - 0xd0], 1	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x400c218	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x400c21f	            0x7fd0	                            jg 0x400c1f1	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x400c221	            0xeb01	                           jmp 0x400c224	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x400c223	              0x90	                                     nop	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x400c224	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c22e	            0xeb48	                           jmp 0x400c278	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c230	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c236	          0x8d5001	                      lea edx, [rax + 1]	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c239	    0x89952cffffff	             mov dword [rbp - 0xd4], edx	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c23f	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c246	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c24c	          0x83ea01	                              sub edx, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c24f	            0x89d1	                            mov ecx, edx	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c251	          0x48d3ee	                             shr rsi, cl	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c254	          0x4889f2	                            mov rdx, rsi	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c257	          0x83e201	                              and edx, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c25a	          0x4885d2	                           test rdx, rdx	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c25d	            0x7407	                            je 0x400c266	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c25f	      0xba31000000	                           mov edx, 0x31	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c264	            0xeb05	                           jmp 0x400c26b	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c266	      0xba30000000	                           mov edx, 0x30	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c26b	            0x4898	                                    cdqe	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c26d	        0x885405a0	         mov byte [rbp + rax - 0x60], dl	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c271	    0x83ad30ffffff	               sub dword [rbp - 0xd0], 1	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c278	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c27f	            0x7faf	                            jg 0x400c230	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x400c281	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c287	            0x4898	                                    cdqe	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c289	      0xc64405a000	          mov byte [rbp + rax - 0x60], 0	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c28e	      0xe9c6000000	                           jmp 0x400c359	      5984	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400c293	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5998	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0x400c299	            0x85c0	                           test eax, eax	      5998	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0x400c29b	            0x752a	                           jne 0x400c2c7	      5998	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0x400c29d	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400c2a4	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400c2a8	          0x4889d1	                            mov rcx, rdx	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400c2ab	      0xba00000000	                              mov edx, 0	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400c2b0	      0xbe41000000	                           mov esi, 0x41	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400c2b5	          0x4889c7	                            mov rdi, rax	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400c2b8	      0xb800000000	                              mov eax, 0	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400c2bd	      0xe800000000	                          call 0x400c2c2	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400c2c2	      0xe992000000	                           jmp 0x400c359	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x400c2c7	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      6001	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0x400c2cd	          0x83f830	                           cmp eax, 0x30	      6001	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0x400c2d0	            0x7527	                           jne 0x400c2f9	      6001	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0x400c2d2	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x400c2d9	        0x488d45a0	                   lea rax, [rbp - 0x60]	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x400c2dd	          0x4889d1	                            mov rcx, rdx	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x400c2e0	      0xba00000000	                              mov edx, 0	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x400c2e5	      0xbe41000000	                           mov esi, 0x41	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x400c2ea	          0x4889c7	                            mov rdi, rax	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x400c2ed	      0xb800000000	                              mov eax, 0	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x400c2f2	      0xe800000000	                          call 0x400c2f7	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x400c2f7	            0xeb60	                           jmp 0x400c359	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x400c2f9	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x400c2ff	            0x85c0	                           test eax, eax	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x400c301	            0x7431	                            je 0x400c334	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x400c303	    0x8b0500000000	            mov eax, dword [0x0400c309] 	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x400c309	            0x85c0	                           test eax, eax	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x400c30b	            0x7427	                            je 0x400c334	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x400c30d	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x400c314	        0x488d45a0	                   lea rax, [rbp - 0x60]	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x400c318	          0x4889d1	                            mov rcx, rdx	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x400c31b	      0xba00000000	                              mov edx, 0	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x400c320	      0xbe41000000	                           mov esi, 0x41	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x400c325	          0x4889c7	                            mov rdi, rax	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x400c328	      0xb800000000	                              mov eax, 0	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x400c32d	      0xe800000000	                          call 0x400c332	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x400c332	            0xeb25	                           jmp 0x400c359	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x400c334	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x400c33b	        0x488d45a0	                   lea rax, [rbp - 0x60]	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x400c33f	          0x4889d1	                            mov rcx, rdx	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x400c342	      0xba00000000	                              mov edx, 0	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x400c347	      0xbe41000000	                           mov esi, 0x41	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x400c34c	          0x4889c7	                            mov rdi, rax	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x400c34f	      0xb800000000	                              mov eax, 0	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x400c354	      0xe800000000	                          call 0x400c359	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x400c359	    0x8b9df8feffff	            mov ebx, dword [rbp - 0x108]	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400c35f	        0x488d45a0	                   lea rax, [rbp - 0x60]	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400c363	          0x4889c7	                            mov rdi, rax	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400c366	      0xe800000000	                          call 0x400c36b	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400c36b	            0x29c3	                            sub ebx, eax	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400c36d	            0x89d8	                            mov eax, ebx	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400c36f	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x400c375	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x30 	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x400c37c	            0x753d	                           jne 0x400c3bb	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x400c37e	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x400c385	            0x7421	                            je 0x400c3a8	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x400c387	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x400c38d	            0x85c0	                           test eax, eax	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x400c38f	            0x742a	                            je 0x400c3bb	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x400c391	            0xeb15	                           jmp 0x400c3a8	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x400c393	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      6020	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x400c39a	        0x488d5001	                      lea rdx, [rax + 1]	      6020	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x400c39e	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      6020	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x400c3a5	          0xc60030	                    mov byte [rax], 0x30	      6020	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x400c3a8	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x400c3ae	          0x8d50ff	                      lea edx, [rax - 1]	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x400c3b1	    0x8995f8feffff	            mov dword [rbp - 0x108], edx	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x400c3b7	            0x85c0	                           test eax, eax	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x400c3b9	            0x7fd8	                            jg 0x400c393	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x400c3bb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      6021	ops.c	FUNCTION_67	ELSE_7
0x400c3c2	          0xc60000	                       mov byte [rax], 0	      6021	ops.c	FUNCTION_67	ELSE_7
0x400c3c5	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      6022	ops.c	FUNCTION_67	ELSE_7	CALL_45
0x400c3c9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6022	ops.c	FUNCTION_67	ELSE_7	CALL_45
0x400c3d0	          0x4889d6	                            mov rsi, rdx	      6022	ops.c	FUNCTION_67	ELSE_7	CALL_45
0x400c3d3	          0x4889c7	                            mov rdi, rax	      6022	ops.c	FUNCTION_67	ELSE_7	CALL_45
0x400c3d6	      0xe800000000	                          call 0x400c3db	      6022	ops.c	FUNCTION_67	ELSE_7	CALL_45
0x400c3db	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6023	ops.c	FUNCTION_67	ELSE_7	CALL_46
0x400c3e2	          0x4889c7	                            mov rdi, rax	      6023	ops.c	FUNCTION_67	ELSE_7	CALL_46
0x400c3e5	      0xe800000000	                          call 0x400c3ea	      6023	ops.c	FUNCTION_67	ELSE_7	CALL_46
0x400c3ea	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6024	ops.c	FUNCTION_67	ELSE_7	CALL_47
0x400c3f1	          0x4889c7	                            mov rdi, rax	      6024	ops.c	FUNCTION_67	ELSE_7	CALL_47
0x400c3f4	      0xe800000000	                          call 0x400c3f9	      6024	ops.c	FUNCTION_67	ELSE_7	CALL_47
0x400c3f9	    0x488b05000000	            mov rax, qword [0x0400c400] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x400c400	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x400c404	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x400c408	        0x48894590	             mov qword [rbp - 0x70], rax	      6025	ops.c	FUNCTION_67	ELSE_7
0x400c40c	        0x48895598	             mov qword [rbp - 0x68], rdx	      6025	ops.c	FUNCTION_67	ELSE_7
0x400c410	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x400c417	            0x741e	                            je 0x400c437	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x400c419	    0x488b05000000	            mov rax, qword [0x0400c420] 	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x400c420	          0x8b4040	            mov eax, dword [rax + 0x40] 	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x400c423	            0x85c0	                           test eax, eax	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x400c425	            0x7410	                            je 0x400c437	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x400c427	    0x488b05000000	            mov rax, qword [0x0400c42e] 	      6027	ops.c	FUNCTION_67	ELSE_7	IF_49
0x400c42e	          0x8b5040	            mov edx, dword [rax + 0x40] 	      6027	ops.c	FUNCTION_67	ELSE_7	IF_49
0x400c431	          0x83ea01	                              sub edx, 1	      6027	ops.c	FUNCTION_67	ELSE_7	IF_49
0x400c434	          0x895040	             mov dword [rax + 0x40], edx	      6027	ops.c	FUNCTION_67	ELSE_7	IF_49
0x400c437	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      6030	ops.c	FUNCTION_67	IF_50
0x400c43e	            0x746a	                            je 0x400c4aa	      6030	ops.c	FUNCTION_67	IF_50
0x400c440	    0x488b0d000000	            mov rcx, qword [0x0400c447] 	      6033	ops.c	FUNCTION_67	IF_50
0x400c447	        0x488b4580	             mov rax, qword [rbp - 0x80]	      6033	ops.c	FUNCTION_67	IF_50
0x400c44b	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      6033	ops.c	FUNCTION_67	IF_50
0x400c44f	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      6033	ops.c	FUNCTION_67	IF_50
0x400c456	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      6033	ops.c	FUNCTION_67	IF_50
0x400c45d	    0x488b0d000000	            mov rcx, qword [0x0400c464] 	      6034	ops.c	FUNCTION_67	IF_50
0x400c464	        0x488b4590	             mov rax, qword [rbp - 0x70]	      6034	ops.c	FUNCTION_67	IF_50
0x400c468	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      6034	ops.c	FUNCTION_67	IF_50
0x400c46c	    0x488981001200	          mov qword [rcx + 0x1200], rax 	      6034	ops.c	FUNCTION_67	IF_50
0x400c473	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	      6034	ops.c	FUNCTION_67	IF_50
0x400c47a	    0x488b05000000	            mov rax, qword [0x0400c481] 	      6035	ops.c	FUNCTION_67	IF_50	IF_51
0x400c481	    0x8b8008120000	          mov eax, dword [rax + 0x1208] 	      6035	ops.c	FUNCTION_67	IF_50	IF_51
0x400c487	            0x85c0	                           test eax, eax	      6035	ops.c	FUNCTION_67	IF_50	IF_51
0x400c489	            0x7e1f	                           jle 0x400c4aa	      6035	ops.c	FUNCTION_67	IF_50	IF_51
0x400c48b	    0x488b05000000	            mov rax, qword [0x0400c492] 	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x400c492	    0x8b9008120000	          mov edx, dword [rax + 0x1208] 	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x400c498	          0x83ea01	                              sub edx, 1	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x400c49b	    0x899008120000	          mov dword [rax + 0x1208], edx 	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x400c4a1	            0xeb07	                           jmp 0x400c4aa	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x400c4a3	              0x90	                                     nop	      5663	ops.c	FUNCTION_67	IF_1
0x400c4a4	            0xeb04	                           jmp 0x400c4aa	      5663	ops.c	FUNCTION_67	IF_1
0x400c4a6	              0x90	                                     nop	      5783	ops.c	FUNCTION_67	IF_12	IF_13
0x400c4a7	            0xeb01	                           jmp 0x400c4aa	      5783	ops.c	FUNCTION_67	IF_12	IF_13
0x400c4a9	              0x90	                                     nop	      5962	ops.c	FUNCTION_67	ELSE_7	IF_39
0x400c4aa	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      6040	ops.c	FUNCTION_67	IF_52
0x400c4b1	            0x741f	                            je 0x400c4d2	      6040	ops.c	FUNCTION_67	IF_52
0x400c4b3	    0x488b0d000000	            mov rcx, qword [0x0400c4ba] 	      6041	ops.c	FUNCTION_67	IF_52
0x400c4ba	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      6041	ops.c	FUNCTION_67	IF_52
0x400c4c1	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      6041	ops.c	FUNCTION_67	IF_52
0x400c4c8	        0x48894138	             mov qword [rcx + 0x38], rax	      6041	ops.c	FUNCTION_67	IF_52
0x400c4cc	        0x48895140	             mov qword [rcx + 0x40], rdx	      6041	ops.c	FUNCTION_67	IF_52
0x400c4d0	            0xeb17	                           jmp 0x400c4e9	      6041	ops.c	FUNCTION_67	IF_52
0x400c4d2	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      6042	ops.c	FUNCTION_67	ELSE_15	IF_53
0x400c4d9	            0x740e	                            je 0x400c4e9	      6042	ops.c	FUNCTION_67	ELSE_15	IF_53
0x400c4db	    0x488b05000000	            mov rax, qword [0x0400c4e2] 	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x400c4e2	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x400c4e9	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      6045	ops.c	FUNCTION_67
0x400c4ef	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      6046	ops.c	FUNCTION_67
0x400c4f3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6046	ops.c	FUNCTION_67
0x400c4fc	            0x7405	                            je 0x400c503	      6046	ops.c	FUNCTION_67
0x400c4fe	      0xe800000000	                          call 0x400c503	      6046	ops.c	FUNCTION_67
0x400c503	        0x488b5df8	                mov rbx, qword [rbp - 8]	      6046	ops.c	FUNCTION_67
0x400c507	              0xc9	                                   leave	      6046	ops.c	FUNCTION_67
0x400c508	              0xc3	                                     ret	      6046	ops.c	FUNCTION_67
op_formatexpr	ELSE,0:DO,0:IF,2:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,3	27
0x4009dda	              0x55	                                push rbp	      4899	ops.c	ELSE_1	FUNCTION_58
0x4009ddb	          0x4889e5	                            mov rbp, rsp	      4899	ops.c	ELSE_1	FUNCTION_58
0x4009dde	        0x4883ec10	                           sub rsp, 0x10	      4899	ops.c	ELSE_1	FUNCTION_58
0x4009de2	        0x48897df8	                mov qword [rbp - 8], rdi	      4899	ops.c	ELSE_1	FUNCTION_58
0x4009de6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x4009dea	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x4009ded	            0x85c0	                           test eax, eax	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x4009def	            0x740a	                            je 0x4009dfb	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x4009df1	      0xbf14000000	                           mov edi, 0x14	      4902	ops.c	ELSE_1	FUNCTION_58	CALL_1
0x4009df6	      0xe800000000	                          call 0x4009dfb	      4902	ops.c	ELSE_1	FUNCTION_58	CALL_1
0x4009dfb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4009dff	        0x488b4850	            mov rcx, qword [rax + 0x50] 	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4009e03	        0x488b45f8	                mov rax, qword [rbp - 8]	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4009e07	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4009e0b	      0xba00000000	                              mov edx, 0	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4009e10	          0x4889ce	                            mov rsi, rcx	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4009e13	          0x4889c7	                            mov rdi, rax	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4009e16	      0xe800000000	                          call 0x4009e1b	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4009e1b	            0x85c0	                           test eax, eax	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4009e1d	            0x7411	                            je 0x4009e30	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4009e1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x4009e23	      0xbe00000000	                              mov esi, 0	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x4009e28	          0x4889c7	                            mov rdi, rax	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x4009e2b	      0xe800000000	                          call 0x4009e30	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x4009e30	              0x90	                                     nop	      4908	ops.c	ELSE_1	FUNCTION_58
0x4009e31	              0xc9	                                   leave	      4908	ops.c	ELSE_1	FUNCTION_58
0x4009e32	              0xc3	                                     ret	      4908	ops.c	ELSE_1	FUNCTION_58
x11_export_final_selection	ELSE,4:DO,0:IF,8:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,9	120
0x400d2f5	              0x55	                                push rbp	      6473	ops.c	FUNCTION_73
0x400d2f6	          0x4889e5	                            mov rbp, rsp	      6473	ops.c	FUNCTION_73
0x400d2f9	        0x4883ec50	                           sub rsp, 0x50	      6473	ops.c	FUNCTION_73
0x400d2fd	    0x64488b042528	                mov rax, qword fs:[0x28]	      6473	ops.c	FUNCTION_73
0x400d306	        0x488945f8	                mov qword [rbp - 8], rax	      6473	ops.c	FUNCTION_73
0x400d30a	            0x31c0	                            xor eax, eax	      6473	ops.c	FUNCTION_73
0x400d30c	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      6475	ops.c	FUNCTION_73
0x400d314	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      6476	ops.c	FUNCTION_73
0x400d31c	    0xc745b8ffffff	     mov dword [rbp - 0x48], 0xffffffff 	      6477	ops.c	FUNCTION_73
0x400d323	    0x8b0500000000	            mov eax, dword [0x0400d329] 	      6480	ops.c	FUNCTION_73	IF_1
0x400d329	            0x85c0	                           test eax, eax	      6480	ops.c	FUNCTION_73	IF_1
0x400d32b	            0x741e	                            je 0x400d34b	      6480	ops.c	FUNCTION_73	IF_1
0x400d32d	    0x8b0500000000	            mov eax, dword [0x0400d333] 	      6481	ops.c	FUNCTION_73	IF_1
0x400d333	            0x85c0	                           test eax, eax	      6481	ops.c	FUNCTION_73	IF_1
0x400d335	            0x7407	                            je 0x400d33e	      6481	ops.c	FUNCTION_73	IF_1
0x400d337	      0xe800000000	                          call 0x400d33c	      6481	ops.c	FUNCTION_73	IF_1
0x400d33c	            0xeb07	                           jmp 0x400d345	      6481	ops.c	FUNCTION_73	IF_1
0x400d33e	    0x488b05000000	            mov rax, qword [0x0400d345] 	      6481	ops.c	FUNCTION_73	IF_1
0x400d345	        0x488945d0	             mov qword [rbp - 0x30], rax	      6481	ops.c	FUNCTION_73	IF_1
0x400d349	            0xeb0b	                           jmp 0x400d356	      6481	ops.c	FUNCTION_73	IF_1
0x400d34b	    0x488b05000000	            mov rax, qword [0x0400d352] 	      6485	ops.c	FUNCTION_73	ELSE_1
0x400d352	        0x488945d0	             mov qword [rbp - 0x30], rax	      6485	ops.c	FUNCTION_73	ELSE_1
0x400d356	    0x8b0500000000	            mov eax, dword [0x0400d35c] 	      6491	ops.c	FUNCTION_73	IF_2
0x400d35c	            0x85c0	                           test eax, eax	      6491	ops.c	FUNCTION_73	IF_2
0x400d35e	            0x741d	                            je 0x400d37d	      6491	ops.c	FUNCTION_73	IF_2
0x400d360	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      6492	ops.c	FUNCTION_73	CALL_1
0x400d364	        0x488d45c0	                   lea rax, [rbp - 0x40]	      6492	ops.c	FUNCTION_73	CALL_1
0x400d368	      0xba00000000	                              mov edx, 0	      6492	ops.c	FUNCTION_73	CALL_1
0x400d36d	          0x4889ce	                            mov rsi, rcx	      6492	ops.c	FUNCTION_73	CALL_1
0x400d370	          0x4889c7	                            mov rdi, rax	      6492	ops.c	FUNCTION_73	CALL_1
0x400d373	      0xe800000000	                          call 0x400d378	      6492	ops.c	FUNCTION_73	CALL_1
0x400d378	          0x8945b8	             mov dword [rbp - 0x48], eax	      6492	ops.c	FUNCTION_73	CALL_1
0x400d37b	            0xeb25	                           jmp 0x400d3a2	      6492	ops.c	FUNCTION_73	CALL_1
0x400d37d	    0x8b0500000000	            mov eax, dword [0x0400d383] 	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400d383	            0x85c0	                           test eax, eax	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400d385	            0x741b	                            je 0x400d3a2	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400d387	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400d38b	        0x488d45c0	                   lea rax, [rbp - 0x40]	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400d38f	      0xba00000000	                              mov edx, 0	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400d394	          0x4889ce	                            mov rsi, rcx	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400d397	          0x4889c7	                            mov rdi, rax	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400d39a	      0xe800000000	                          call 0x400d39f	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400d39f	          0x8945b8	             mov dword [rbp - 0x48], eax	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400d3a2	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      6497	ops.c	FUNCTION_73	IF_4
0x400d3a7	     0xf8412010000	                            je 0x400d4bf	      6497	ops.c	FUNCTION_73	IF_4
0x400d3ad	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6497	ops.c	FUNCTION_73	IF_4
0x400d3b1	          0x4885c0	                           test rax, rax	      6497	ops.c	FUNCTION_73	IF_4
0x400d3b4	     0xf8405010000	                            je 0x400d4bf	      6497	ops.c	FUNCTION_73	IF_4
0x400d3ba	        0x837db800	               cmp dword [rbp - 0x48], 0	      6497	ops.c	FUNCTION_73	IF_4
0x400d3be	     0xf88fb000000	                            js 0x400d4bf	      6497	ops.c	FUNCTION_73	IF_4
0x400d3c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6498	ops.c	FUNCTION_73	IF_4
0x400d3c8	    0x483dffff0f00	                        cmp rax, 0xfffff	      6498	ops.c	FUNCTION_73	IF_4
0x400d3ce	     0xf87eb000000	                            ja 0x400d4bf	      6498	ops.c	FUNCTION_73	IF_4
0x400d3d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6498	ops.c	FUNCTION_73	IF_4
0x400d3d8	          0x4885c0	                           test rax, rax	      6498	ops.c	FUNCTION_73	IF_4
0x400d3db	     0xf84de000000	                            je 0x400d4bf	      6498	ops.c	FUNCTION_73	IF_4
0x400d3e1	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      6501	ops.c	FUNCTION_73	IF_4
0x400d3e8	    0x8b0500000000	            mov eax, dword [0x0400d3ee] 	      6507	ops.c	FUNCTION_73	IF_4	IF_5
0x400d3ee	            0x85c0	                           test eax, eax	      6507	ops.c	FUNCTION_73	IF_4	IF_5
0x400d3f0	     0xf849c000000	                            je 0x400d492	      6507	ops.c	FUNCTION_73	IF_4	IF_5
0x400d3f6	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      6511	ops.c	FUNCTION_73	IF_4	IF_5
0x400d3fd	    0x488b0d000000	            mov rcx, qword [0x0400d404] 	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400d404	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400d408	      0xba00000000	                              mov edx, 0	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400d40d	          0x4889ce	                            mov rsi, rcx	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400d410	          0x4889c7	                            mov rdi, rax	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400d413	      0xe800000000	                          call 0x400d418	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400d418	          0x83f801	                              cmp eax, 1	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400d41b	            0x756e	                           jne 0x400d48b	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400d41d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6514	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x400d421	          0x8945b4	             mov dword [rbp - 0x4c], eax	      6514	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x400d424	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      6517	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x400d42b	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400d42f	        0x488d55b4	                   lea rdx, [rbp - 0x4c]	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400d433	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400d437	          0x4889ce	                            mov rsi, rcx	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400d43a	          0x4889c7	                            mov rdi, rax	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400d43d	      0xe800000000	                          call 0x400d442	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400d442	        0x488945d8	             mov qword [rbp - 0x28], rax	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400d446	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6519	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x400d449	            0x4898	                                    cdqe	      6519	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x400d44b	        0x488945c8	             mov qword [rbp - 0x38], rax	      6519	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x400d44f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      6520	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x400d454	            0x7416	                            je 0x400d46c	      6520	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x400d456	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6522	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0x400d45a	          0x4889c7	                            mov rdi, rax	      6522	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0x400d45d	      0xe800000000	                          call 0x400d462	      6522	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0x400d462	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6523	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x400d466	        0x488945c0	             mov qword [rbp - 0x40], rax	      6523	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x400d46a	            0xeb07	                           jmp 0x400d473	      6523	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x400d46c	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6527	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	ELSE_3
0x400d473	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400d477	      0xba00000000	                              mov edx, 0	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400d47c	      0xbe00000000	                              mov esi, 0	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400d481	          0x4889c7	                            mov rdi, rax	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400d484	      0xe800000000	                          call 0x400d489	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400d489	            0xeb07	                           jmp 0x400d492	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400d48b	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6533	ops.c	FUNCTION_73	IF_4	IF_5	ELSE_4
0x400d492	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      6539	ops.c	FUNCTION_73	IF_4	IF_8
0x400d496	            0x7427	                            je 0x400d4bf	      6539	ops.c	FUNCTION_73	IF_4	IF_8
0x400d498	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x400d49c	            0x89c2	                            mov edx, eax	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x400d49e	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x400d4a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x400d4a6	      0xb900000000	                              mov ecx, 0	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x400d4ab	          0x4889c7	                            mov rdi, rax	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x400d4ae	      0xe800000000	                          call 0x400d4b3	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x400d4b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x400d4b7	          0x4889c7	                            mov rdi, rax	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x400d4ba	      0xe800000000	                          call 0x400d4bf	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x400d4bf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6547	ops.c	FUNCTION_73	CALL_9
0x400d4c3	          0x4889c7	                            mov rdi, rax	      6547	ops.c	FUNCTION_73	CALL_9
0x400d4c6	      0xe800000000	                          call 0x400d4cb	      6547	ops.c	FUNCTION_73	CALL_9
0x400d4cb	              0x90	                                     nop	      6548	ops.c	FUNCTION_73
0x400d4cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      6548	ops.c	FUNCTION_73
0x400d4d0	    0x644833042528	                xor rax, qword fs:[0x28]	      6548	ops.c	FUNCTION_73
0x400d4d9	            0x7405	                            je 0x400d4e0	      6548	ops.c	FUNCTION_73
0x400d4db	      0xe800000000	                          call 0x400d4e0	      6548	ops.c	FUNCTION_73
0x400d4e0	              0xc9	                                   leave	      6548	ops.c	FUNCTION_73
0x400d4e1	              0xc3	                                     ret	      6548	ops.c	FUNCTION_73
may_get_selection	ELSE,3:DO,0:IF,4:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,2	26
0x4001635	              0x55	                                push rbp	       963	ops.c	FUNCTION_16
0x4001636	          0x4889e5	                            mov rbp, rsp	       963	ops.c	FUNCTION_16
0x4001639	        0x4883ec10	                           sub rsp, 0x10	       963	ops.c	FUNCTION_16
0x400163d	          0x897dfc	                mov dword [rbp - 4], edi	       963	ops.c	FUNCTION_16
0x4001640	        0x837dfc2a	               cmp dword [rbp - 4], 0x2a	       964	ops.c	FUNCTION_16	IF_1
0x4001644	            0x751f	                           jne 0x4001665	       964	ops.c	FUNCTION_16	IF_1
0x4001646	    0x8b0500000000	            mov eax, dword [0x0400164c] 	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400164c	            0x85c0	                           test eax, eax	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400164e	            0x7509	                           jne 0x4001659	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x4001650	    0xc745fc000000	                  mov dword [rbp - 4], 0	       967	ops.c	FUNCTION_16	IF_1	IF_2
0x4001657	            0xeb2f	                           jmp 0x4001688	       967	ops.c	FUNCTION_16	IF_1	IF_2
0x4001659	      0xbf00000000	                              mov edi, 0	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400165e	      0xe800000000	                          call 0x4001663	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4001663	            0xeb23	                           jmp 0x4001688	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4001665	        0x837dfc2b	               cmp dword [rbp - 4], 0x2b	       971	ops.c	FUNCTION_16	ELSE_2	IF_3
0x4001669	            0x751d	                           jne 0x4001688	       971	ops.c	FUNCTION_16	ELSE_2	IF_3
0x400166b	    0x8b0500000000	            mov eax, dword [0x04001671] 	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4001671	            0x85c0	                           test eax, eax	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4001673	            0x7509	                           jne 0x400167e	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4001675	    0xc745fc000000	                  mov dword [rbp - 4], 0	       974	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400167c	            0xeb0a	                           jmp 0x4001688	       974	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400167e	      0xbf00000000	                              mov edi, 0	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4001683	      0xe800000000	                          call 0x4001688	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4001688	          0x8b45fc	                mov eax, dword [rbp - 4]	       978	ops.c	FUNCTION_16
0x400168b	              0xc9	                                   leave	       979	ops.c	FUNCTION_16
0x400168c	              0xc3	                                     ret	       979	ops.c	FUNCTION_16
str_to_reg	ELSE,5:DO,0:IF,19:functions,0:WHILE,1:FOR,6:SWITCH,0:CALL,11	355
0x400e429	              0x55	                                push rbp	      7132	ops.c	FUNCTION_88
0x400e42a	          0x4889e5	                            mov rbp, rsp	      7132	ops.c	FUNCTION_88
0x400e42d	              0x53	                                push rbx	      7132	ops.c	FUNCTION_88
0x400e42e	    0x4881ec880000	                           sub rsp, 0x88	      7132	ops.c	FUNCTION_88
0x400e435	        0x48897d98	             mov qword [rbp - 0x68], rdi	      7132	ops.c	FUNCTION_88
0x400e439	          0x897594	             mov dword [rbp - 0x6c], esi	      7132	ops.c	FUNCTION_88
0x400e43c	        0x48895588	             mov qword [rbp - 0x78], rdx	      7132	ops.c	FUNCTION_88
0x400e440	        0x48894d80	             mov qword [rbp - 0x80], rcx	      7132	ops.c	FUNCTION_88
0x400e444	    0x4c898578ffff	              mov qword [rbp - 0x88], r8	      7132	ops.c	FUNCTION_88
0x400e44b	        0x44894d90	             mov dword [rbp - 0x70], r9d	      7132	ops.c	FUNCTION_88
0x400e44f	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      7139	ops.c	FUNCTION_88
0x400e456	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      7140	ops.c	FUNCTION_88
0x400e45d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7146	ops.c	FUNCTION_88	IF_1
0x400e461	          0x488b00	                    mov rax, qword [rax]	      7146	ops.c	FUNCTION_88	IF_1
0x400e464	          0x4885c0	                           test rax, rax	      7146	ops.c	FUNCTION_88	IF_1
0x400e467	            0x750c	                           jne 0x400e475	      7146	ops.c	FUNCTION_88	IF_1
0x400e469	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7147	ops.c	FUNCTION_88	IF_1
0x400e46d	    0x48c740080000	                  mov qword [rax + 8], 0	      7147	ops.c	FUNCTION_88	IF_1
0x400e475	    0x817d94ff0000	           cmp dword [rbp - 0x6c], 0xff 	      7149	ops.c	FUNCTION_88	IF_2
0x400e47c	            0x754a	                           jne 0x400e4c8	      7149	ops.c	FUNCTION_88	IF_2
0x400e47e	        0x837d9000	               cmp dword [rbp - 0x70], 0	      7152	ops.c	FUNCTION_88	IF_2
0x400e482	            0x7533	                           jne 0x400e4b7	      7152	ops.c	FUNCTION_88	IF_2
0x400e484	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      7152	ops.c	FUNCTION_88	IF_2
0x400e489	            0x7e33	                           jle 0x400e4be	      7152	ops.c	FUNCTION_88	IF_2
0x400e48b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7150	ops.c	FUNCTION_88	IF_2
0x400e48f	        0x488d50ff	                      lea rdx, [rax - 1]	      7150	ops.c	FUNCTION_88	IF_2
0x400e493	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7150	ops.c	FUNCTION_88	IF_2
0x400e497	          0x4801d0	                            add rax, rdx	      7150	ops.c	FUNCTION_88	IF_2
0x400e49a	           0xfb600	                   movzx eax, byte [rax]	      7150	ops.c	FUNCTION_88	IF_2
0x400e49d	            0x3c0a	                             cmp al, 0xa	      7150	ops.c	FUNCTION_88	IF_2
0x400e49f	            0x7416	                            je 0x400e4b7	      7150	ops.c	FUNCTION_88	IF_2
0x400e4a1	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7151	ops.c	FUNCTION_88	IF_2
0x400e4a5	        0x488d50ff	                      lea rdx, [rax - 1]	      7151	ops.c	FUNCTION_88	IF_2
0x400e4a9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7151	ops.c	FUNCTION_88	IF_2
0x400e4ad	          0x4801d0	                            add rax, rdx	      7151	ops.c	FUNCTION_88	IF_2
0x400e4b0	           0xfb600	                   movzx eax, byte [rax]	      7151	ops.c	FUNCTION_88	IF_2
0x400e4b3	            0x3c0d	                             cmp al, 0xd	      7151	ops.c	FUNCTION_88	IF_2
0x400e4b5	            0x7507	                           jne 0x400e4be	      7151	ops.c	FUNCTION_88	IF_2
0x400e4b7	      0xb801000000	                              mov eax, 1	      7152	ops.c	FUNCTION_88	IF_2
0x400e4bc	            0xeb05	                           jmp 0x400e4c3	      7152	ops.c	FUNCTION_88	IF_2
0x400e4be	      0xb800000000	                              mov eax, 0	      7152	ops.c	FUNCTION_88	IF_2
0x400e4c3	          0x8945a8	             mov dword [rbp - 0x58], eax	      7150	ops.c	FUNCTION_88	IF_2
0x400e4c6	            0xeb06	                           jmp 0x400e4ce	      7150	ops.c	FUNCTION_88	IF_2
0x400e4c8	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      7154	ops.c	FUNCTION_88	ELSE_1
0x400e4cb	          0x8945a8	             mov dword [rbp - 0x58], eax	      7154	ops.c	FUNCTION_88	ELSE_1
0x400e4ce	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      7159	ops.c	FUNCTION_88	ELSE_1
0x400e4d5	        0x837d9000	               cmp dword [rbp - 0x70], 0	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x400e4d9	            0x7424	                            je 0x400e4ff	      7160	ops.c	FUNCTION_88	ELSE_1	IF_3
0x400e4db	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400e4df	        0x488945d8	             mov qword [rbp - 0x28], rax	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400e4e3	            0xeb09	                           jmp 0x400e4ee	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400e4e5	        0x8345b401	               add dword [rbp - 0x4c], 1	      7163	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400e4e9	      0x488345d808	               add qword [rbp - 0x28], 8	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400e4ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400e4f2	          0x488b00	                    mov rax, qword [rax]	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400e4f5	          0x4885c0	                           test rax, rax	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400e4f8	            0x75eb	                           jne 0x400e4e5	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400e4fa	      0xe981000000	                           jmp 0x400e580	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400e4ff	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x400e507	            0xeb1b	                           jmp 0x400e524	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x400e509	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      7168	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x400e50d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7168	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x400e511	          0x4801d0	                            add rax, rdx	      7168	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x400e514	           0xfb600	                   movzx eax, byte [rax]	      7168	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x400e517	            0x3c0a	                             cmp al, 0xa	      7168	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x400e519	            0x7504	                           jne 0x400e51f	      7168	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x400e51b	        0x8345b401	               add dword [rbp - 0x4c], 1	      7169	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0x400e51f	      0x488345c801	               add qword [rbp - 0x38], 1	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x400e524	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x400e528	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x400e52c	            0x7cdb	                            jl 0x400e509	      7167	ops.c	FUNCTION_88	ELSE_2	FOR_2
0x400e52e	        0x837da800	               cmp dword [rbp - 0x58], 0	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e532	            0x741d	                            je 0x400e551	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e534	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e539	            0x7416	                            je 0x400e551	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e53b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e53f	        0x488d50ff	                      lea rdx, [rax - 1]	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e543	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e547	          0x4801d0	                            add rax, rdx	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e54a	           0xfb600	                   movzx eax, byte [rax]	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e54d	            0x3c0a	                             cmp al, 0xa	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e54f	            0x740b	                            je 0x400e55c	      7170	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e551	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      7172	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e558	        0x8345b401	               add dword [rbp - 0x4c], 1	      7173	ops.c	FUNCTION_88	ELSE_2	IF_5
0x400e55c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x400e560	        0x488b4008	                mov rax, qword [rax + 8]	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x400e564	          0x4885c0	                           test rax, rax	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x400e567	            0x7e17	                           jle 0x400e580	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x400e569	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x400e56d	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x400e571	            0x84c0	                             test al, al	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x400e573	            0x750b	                           jne 0x400e580	      7175	ops.c	FUNCTION_88	ELSE_2	IF_6
0x400e575	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      7177	ops.c	FUNCTION_88	ELSE_2	IF_6
0x400e57c	        0x836db401	               sub dword [rbp - 0x4c], 1	      7178	ops.c	FUNCTION_88	ELSE_2	IF_6
0x400e580	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7183	ops.c	FUNCTION_88	IF_7
0x400e584	        0x488b5008	                mov rdx, qword [rax + 8]	      7183	ops.c	FUNCTION_88	IF_7
0x400e588	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7183	ops.c	FUNCTION_88	IF_7
0x400e58b	            0x4898	                                    cdqe	      7183	ops.c	FUNCTION_88	IF_7
0x400e58d	          0x4801d0	                            add rax, rdx	      7183	ops.c	FUNCTION_88	IF_7
0x400e590	          0x4885c0	                           test rax, rax	      7183	ops.c	FUNCTION_88	IF_7
0x400e593	            0x752f	                           jne 0x400e5c4	      7183	ops.c	FUNCTION_88	IF_7
0x400e595	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400e599	          0x488b00	                    mov rax, qword [rax]	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400e59c	          0x4885c0	                           test rax, rax	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400e59f	     0xf8464030000	                            je 0x400e909	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400e5a5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400e5a9	          0x488b00	                    mov rax, qword [rax]	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400e5ac	          0x4889c7	                            mov rdi, rax	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400e5af	      0xe800000000	                          call 0x400e5b4	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400e5b4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400e5b8	    0x48c700000000	                      mov qword [rax], 0	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400e5bf	      0xe945030000	                           jmp 0x400e909	      7186	ops.c	FUNCTION_88	IF_7
0x400e5c4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7193	ops.c	FUNCTION_88	CALL_2
0x400e5c8	        0x488b5008	                mov rdx, qword [rax + 8]	      7193	ops.c	FUNCTION_88	CALL_2
0x400e5cc	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7193	ops.c	FUNCTION_88	CALL_2
0x400e5cf	            0x4898	                                    cdqe	      7193	ops.c	FUNCTION_88	CALL_2
0x400e5d1	          0x4801d0	                            add rax, rdx	      7193	ops.c	FUNCTION_88	CALL_2
0x400e5d4	        0x48c1e003	                              shl rax, 3	      7193	ops.c	FUNCTION_88	CALL_2
0x400e5d8	      0xbe01000000	                              mov esi, 1	      7193	ops.c	FUNCTION_88	CALL_2
0x400e5dd	          0x4889c7	                            mov rdi, rax	      7193	ops.c	FUNCTION_88	CALL_2
0x400e5e0	      0xe800000000	                          call 0x400e5e5	      7193	ops.c	FUNCTION_88	CALL_2
0x400e5e5	        0x488945e8	             mov qword [rbp - 0x18], rax	      7193	ops.c	FUNCTION_88	CALL_2
0x400e5e9	      0x48837de800	               cmp qword [rbp - 0x18], 0	      7195	ops.c	FUNCTION_88	IF_8
0x400e5ee	     0xf8418030000	                            je 0x400e90c	      7195	ops.c	FUNCTION_88	IF_8
0x400e5f4	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      7197	ops.c	FUNCTION_88	FOR_3
0x400e5fb	            0xeb32	                           jmp 0x400e62f	      7197	ops.c	FUNCTION_88	FOR_3
0x400e5fd	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7198	ops.c	FUNCTION_88	FOR_3
0x400e600	            0x4898	                                    cdqe	      7198	ops.c	FUNCTION_88	FOR_3
0x400e602	    0x488d14c50000	                        lea rdx, [rax*8]	      7198	ops.c	FUNCTION_88	FOR_3
0x400e60a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7198	ops.c	FUNCTION_88	FOR_3
0x400e60e	          0x4801c2	                            add rdx, rax	      7198	ops.c	FUNCTION_88	FOR_3
0x400e611	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7198	ops.c	FUNCTION_88	FOR_3
0x400e615	          0x488b00	                    mov rax, qword [rax]	      7198	ops.c	FUNCTION_88	FOR_3
0x400e618	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      7198	ops.c	FUNCTION_88	FOR_3
0x400e61b	          0x4863c9	                         movsxd rcx, ecx	      7198	ops.c	FUNCTION_88	FOR_3
0x400e61e	        0x48c1e103	                              shl rcx, 3	      7198	ops.c	FUNCTION_88	FOR_3
0x400e622	          0x4801c8	                            add rax, rcx	      7198	ops.c	FUNCTION_88	FOR_3
0x400e625	          0x488b00	                    mov rax, qword [rax]	      7198	ops.c	FUNCTION_88	FOR_3
0x400e628	          0x488902	                    mov qword [rdx], rax	      7198	ops.c	FUNCTION_88	FOR_3
0x400e62b	        0x8345ac01	               add dword [rbp - 0x54], 1	      7197	ops.c	FUNCTION_88	FOR_3
0x400e62f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7197	ops.c	FUNCTION_88	FOR_3
0x400e632	          0x4863d0	                         movsxd rdx, eax	      7197	ops.c	FUNCTION_88	FOR_3
0x400e635	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7197	ops.c	FUNCTION_88	FOR_3
0x400e639	        0x488b4008	                mov rax, qword [rax + 8]	      7197	ops.c	FUNCTION_88	FOR_3
0x400e63d	          0x4839c2	                            cmp rdx, rax	      7197	ops.c	FUNCTION_88	FOR_3
0x400e640	            0x7cbb	                            jl 0x400e5fd	      7197	ops.c	FUNCTION_88	FOR_3
0x400e642	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7199	ops.c	FUNCTION_88	CALL_3
0x400e646	          0x488b00	                    mov rax, qword [rax]	      7199	ops.c	FUNCTION_88	CALL_3
0x400e649	          0x4889c7	                            mov rdi, rax	      7199	ops.c	FUNCTION_88	CALL_3
0x400e64c	      0xe800000000	                          call 0x400e651	      7199	ops.c	FUNCTION_88	CALL_3
0x400e651	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7200	ops.c	FUNCTION_88
0x400e655	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7200	ops.c	FUNCTION_88
0x400e659	          0x488910	                    mov qword [rax], rdx	      7200	ops.c	FUNCTION_88
0x400e65c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      7201	ops.c	FUNCTION_88
0x400e664	        0x837d9000	               cmp dword [rbp - 0x70], 0	      7206	ops.c	FUNCTION_88	IF_9
0x400e668	            0x7478	                            je 0x400e6e2	      7206	ops.c	FUNCTION_88	IF_9
0x400e66a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400e66e	        0x488945d8	             mov qword [rbp - 0x28], rax	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400e672	            0xeb5d	                           jmp 0x400e6d1	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400e674	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x400e678	          0x488b00	                    mov rax, qword [rax]	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x400e67b	          0x4889c7	                            mov rdi, rax	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x400e67e	      0xe800000000	                          call 0x400e683	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x400e683	        0x488945c8	             mov qword [rbp - 0x38], rax	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x400e687	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e68a	            0x4898	                                    cdqe	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e68c	    0x488d14c50000	                        lea rdx, [rax*8]	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e694	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e698	        0x488d1c02	                    lea rbx, [rdx + rax]	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e69c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e6a0	            0x89c2	                            mov edx, eax	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e6a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e6a6	          0x488b00	                    mov rax, qword [rax]	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e6a9	            0x89d6	                            mov esi, edx	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e6ab	          0x4889c7	                            mov rdi, rax	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e6ae	      0xe800000000	                          call 0x400e6b3	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e6b3	          0x488903	                    mov qword [rbx], rax	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400e6b6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7212	ops.c	FUNCTION_88	IF_9	FOR_4	IF_10
0x400e6ba	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      7212	ops.c	FUNCTION_88	IF_9	FOR_4	IF_10
0x400e6be	            0x7e08	                           jle 0x400e6c8	      7212	ops.c	FUNCTION_88	IF_9	FOR_4	IF_10
0x400e6c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7213	ops.c	FUNCTION_88	IF_9	FOR_4	IF_10
0x400e6c4	        0x488945e0	             mov qword [rbp - 0x20], rax	      7213	ops.c	FUNCTION_88	IF_9	FOR_4	IF_10
0x400e6c8	      0x488345d808	               add qword [rbp - 0x28], 8	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400e6cd	        0x8345ac01	               add dword [rbp - 0x54], 1	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400e6d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400e6d5	          0x488b00	                    mov rax, qword [rax]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400e6d8	          0x4885c0	                           test rax, rax	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400e6db	            0x7597	                           jne 0x400e674	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400e6dd	      0xe9c3010000	                           jmp 0x400e8a5	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400e6e2	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e6ea	      0xe99c010000	                           jmp 0x400e88b	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e6ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x400e6f3	        0x488945c8	             mov qword [rbp - 0x38], rax	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x400e6f7	            0xeb17	                           jmp 0x400e710	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x400e6f9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x400e6fd	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x400e701	          0x4801d0	                            add rax, rdx	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x400e704	           0xfb600	                   movzx eax, byte [rax]	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x400e707	            0x3c0a	                             cmp al, 0xa	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x400e709	            0x7411	                            je 0x400e71c	      7221	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x400e70b	      0x488345c801	               add qword [rbp - 0x38], 1	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x400e710	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x400e714	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x400e718	            0x7cdf	                            jl 0x400e6f9	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x400e71a	            0xeb01	                           jmp 0x400e71d	      7220	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0x400e71c	              0x90	                                     nop	      7222	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0x400e71d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7223	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e721	        0x482945c8	             sub qword [rbp - 0x38], rax	      7223	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e725	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7224	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_12
0x400e729	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      7224	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_12
0x400e72d	            0x7e08	                           jle 0x400e737	      7224	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_12
0x400e72f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7225	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_12
0x400e733	        0x488945e0	             mov qword [rbp - 0x20], rax	      7225	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_12
0x400e737	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7226	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x400e73b	            0x7428	                            je 0x400e765	      7226	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x400e73d	        0x836dac01	               sub dword [rbp - 0x54], 1	      7228	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0x400e741	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x400e745	          0x488b00	                    mov rax, qword [rax]	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x400e748	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x400e74b	          0x4863d2	                         movsxd rdx, edx	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x400e74e	        0x48c1e203	                              shl rdx, 3	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x400e752	          0x4801d0	                            add rax, rdx	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x400e755	          0x488b00	                    mov rax, qword [rax]	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x400e758	          0x4889c7	                            mov rdi, rax	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x400e75b	      0xe800000000	                          call 0x400e760	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x400e760	          0x8945b0	             mov dword [rbp - 0x50], eax	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x400e763	            0xeb07	                           jmp 0x400e76c	      7229	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0x400e765	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      7232	ops.c	FUNCTION_88	ELSE_3	FOR_5	ELSE_4
0x400e76c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x400e770	            0x89c2	                            mov edx, eax	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x400e772	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x400e775	             0x1d0	                            add eax, edx	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x400e777	          0x83c001	                              add eax, 1	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x400e77a	            0x89c7	                            mov edi, eax	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x400e77c	      0xe800000000	                          call 0x400e781	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x400e781	        0x488945d0	             mov qword [rbp - 0x30], rax	      7233	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0x400e785	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x400e78a	     0xf8414010000	                            je 0x400e8a4	      7234	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x400e790	        0x837db000	               cmp dword [rbp - 0x50], 0	      7236	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_15
0x400e794	            0x742c	                            je 0x400e7c2	      7236	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_15
0x400e796	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e799	          0x4863d0	                         movsxd rdx, eax	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e79c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e7a0	          0x488b00	                    mov rax, qword [rax]	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e7a3	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e7a6	          0x4863c9	                         movsxd rcx, ecx	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e7a9	        0x48c1e103	                              shl rcx, 3	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e7ad	          0x4801c8	                            add rax, rcx	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e7b0	          0x488b08	                    mov rcx, qword [rax]	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e7b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e7b7	          0x4889ce	                            mov rsi, rcx	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e7ba	          0x4889c7	                            mov rdi, rax	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e7bd	      0xe800000000	                          call 0x400e7c2	      7237	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0x400e7c2	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7238	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_16
0x400e7c6	            0x741f	                            je 0x400e7e7	      7238	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_16
0x400e7c8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x400e7cc	          0x488b00	                    mov rax, qword [rax]	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x400e7cf	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x400e7d2	          0x4863d2	                         movsxd rdx, edx	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x400e7d5	        0x48c1e203	                              shl rdx, 3	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x400e7d9	          0x4801d0	                            add rax, rdx	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x400e7dc	          0x488b00	                    mov rax, qword [rax]	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x400e7df	          0x4889c7	                            mov rdi, rax	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x400e7e2	      0xe800000000	                          call 0x400e7e7	      7239	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0x400e7e7	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      7240	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0x400e7ec	            0x7428	                            je 0x400e816	      7240	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0x400e7ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7241	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0x400e7f2	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      7241	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0x400e7f6	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      7241	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0x400e7fa	        0x488d3411	                    lea rsi, [rcx + rdx]	      7241	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0x400e7fe	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      7241	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0x400e801	          0x4863ca	                         movsxd rcx, edx	      7241	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0x400e804	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7241	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0x400e808	          0x4801d1	                            add rcx, rdx	      7241	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0x400e80b	          0x4889c2	                            mov rdx, rax	      7241	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0x400e80e	          0x4889cf	                            mov rdi, rcx	      7241	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0x400e811	      0xe800000000	                          call 0x400e816	      7241	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0x400e816	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7242	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e81a	            0x89c2	                            mov edx, eax	      7242	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e81c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7242	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e81f	             0x1d0	                            add eax, edx	      7242	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e821	          0x8945b0	             mov dword [rbp - 0x50], eax	      7242	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e824	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7243	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e827	          0x4863d0	                         movsxd rdx, eax	      7243	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e82a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7243	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e82e	          0x4801d0	                            add rax, rdx	      7243	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e831	          0xc60000	                       mov byte [rax], 0	      7243	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e834	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e838	          0x488b08	                    mov rcx, qword [rax]	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e83b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e83e	          0x8d5001	                      lea edx, [rax + 1]	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e841	          0x8955ac	             mov dword [rbp - 0x54], edx	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e844	            0x4898	                                    cdqe	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e846	        0x48c1e003	                              shl rax, 3	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e84a	        0x488d1401	                    lea rdx, [rcx + rax]	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e84e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e852	          0x488902	                    mov qword [rdx], rax	      7244	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e855	            0xeb17	                           jmp 0x400e86e	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x400e857	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7247	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x400e85b	           0xfb600	                   movzx eax, byte [rax]	      7247	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x400e85e	            0x84c0	                             test al, al	      7247	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x400e860	            0x7507	                           jne 0x400e869	      7247	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x400e862	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7248	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x400e866	          0xc6000a	                     mov byte [rax], 0xa	      7248	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0x400e869	      0x488345d001	               add qword [rbp - 0x30], 1	      7249	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x400e86e	        0x836db001	               sub dword [rbp - 0x50], 1	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x400e872	        0x837db000	               cmp dword [rbp - 0x50], 0	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x400e876	            0x79df	                           jns 0x400e857	      7245	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0x400e878	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      7251	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e87f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e883	        0x4883c001	                              add rax, 1	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e887	        0x480145c0	            add qword [rbp - 0x40], rax 	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e88b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e88e	          0x4863d0	                         movsxd rdx, eax	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e891	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e895	          0x4801d0	                            add rax, rdx	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e898	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e89c	     0xf8f4dfeffff	                            jg 0x400e6ef	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e8a2	            0xeb01	                           jmp 0x400e8a5	      7218	ops.c	FUNCTION_88	ELSE_3	FOR_5
0x400e8a4	              0x90	                                     nop	      7235	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0x400e8a5	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      7254	ops.c	FUNCTION_88
0x400e8a8	            0x89c2	                            mov edx, eax	      7254	ops.c	FUNCTION_88
0x400e8aa	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7254	ops.c	FUNCTION_88
0x400e8ae	          0x885010	               mov byte [rax + 0x10], dl	      7254	ops.c	FUNCTION_88
0x400e8b1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7255	ops.c	FUNCTION_88
0x400e8b4	          0x4863d0	                         movsxd rdx, eax	      7255	ops.c	FUNCTION_88
0x400e8b7	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7255	ops.c	FUNCTION_88
0x400e8bb	        0x48895008	                mov qword [rax + 8], rdx	      7255	ops.c	FUNCTION_88
0x400e8bf	        0x837da802	               cmp dword [rbp - 0x58], 2	      7256	ops.c	FUNCTION_88	IF_19
0x400e8c3	            0x7527	                           jne 0x400e8ec	      7256	ops.c	FUNCTION_88	IF_19
0x400e8c5	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      7257	ops.c	FUNCTION_88	IF_19
0x400e8cd	            0x790b	                           jns 0x400e8da	      7257	ops.c	FUNCTION_88	IF_19
0x400e8cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7257	ops.c	FUNCTION_88	IF_19
0x400e8d3	          0x83e801	                              sub eax, 1	      7257	ops.c	FUNCTION_88	IF_19
0x400e8d6	            0x89c2	                            mov edx, eax	      7257	ops.c	FUNCTION_88	IF_19
0x400e8d8	            0xeb09	                           jmp 0x400e8e3	      7257	ops.c	FUNCTION_88	IF_19
0x400e8da	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      7257	ops.c	FUNCTION_88	IF_19
0x400e8e1	            0x89c2	                            mov edx, eax	      7257	ops.c	FUNCTION_88	IF_19
0x400e8e3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7257	ops.c	FUNCTION_88	IF_19
0x400e8e7	          0x895014	             mov dword [rax + 0x14], edx	      7257	ops.c	FUNCTION_88	IF_19
0x400e8ea	            0xeb0b	                           jmp 0x400e8f7	      7257	ops.c	FUNCTION_88	IF_19
0x400e8ec	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7259	ops.c	FUNCTION_88	ELSE_5
0x400e8f0	    0xc74014000000	               mov dword [rax + 0x14], 0	      7259	ops.c	FUNCTION_88	ELSE_5
0x400e8f7	      0xe800000000	                          call 0x400e8fc	      7261	ops.c	FUNCTION_88	CALL_11
0x400e8fc	          0x4889c2	                            mov rdx, rax	      7261	ops.c	FUNCTION_88	CALL_11
0x400e8ff	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7261	ops.c	FUNCTION_88	CALL_11
0x400e903	        0x48895018	             mov qword [rax + 0x18], rdx	      7261	ops.c	FUNCTION_88	CALL_11
0x400e907	            0xeb04	                           jmp 0x400e90d	      7261	ops.c	FUNCTION_88	CALL_11
0x400e909	              0x90	                                     nop	      7186	ops.c	FUNCTION_88	IF_7
0x400e90a	            0xeb01	                           jmp 0x400e90d	      7186	ops.c	FUNCTION_88	IF_7
0x400e90c	              0x90	                                     nop	      7196	ops.c	FUNCTION_88	IF_8
0x400e90d	    0x4881c4880000	                           add rsp, 0x88	      7263	ops.c	FUNCTION_88
0x400e914	              0x5b	                                 pop rbx	      7263	ops.c	FUNCTION_88
0x400e915	              0x5d	                                 pop rbp	      7263	ops.c	FUNCTION_88
0x400e916	              0xc3	                                     ret	      7263	ops.c	FUNCTION_88
yank_do_autocmd	ELSE,0:DO,0:IF,2:functions,0:WHILE,0:FOR,1:SWITCH,1:CALL,15	149
0x40028dc	              0x55	                                push rbp	      1680	ops.c	FUNCTION_32
0x40028dd	          0x4889e5	                            mov rbp, rsp	      1680	ops.c	FUNCTION_32
0x40028e0	        0x4883c480	             add rsp, 0xffffffffffffff80	      1680	ops.c	FUNCTION_32
0x40028e4	        0x48897d88	             mov qword [rbp - 0x78], rdi	      1680	ops.c	FUNCTION_32
0x40028e8	        0x48897580	             mov qword [rbp - 0x80], rsi	      1680	ops.c	FUNCTION_32
0x40028ec	    0x64488b042528	                mov rax, qword fs:[0x28]	      1680	ops.c	FUNCTION_32
0x40028f5	        0x488945f8	                mov qword [rbp - 8], rax	      1680	ops.c	FUNCTION_32
0x40028f9	            0x31c0	                            xor eax, eax	      1680	ops.c	FUNCTION_32
0x40028fb	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1686	ops.c	FUNCTION_32
0x4002903	    0x8b0500000000	            mov eax, dword [0x04002909] 	      1688	ops.c	FUNCTION_32	IF_1
0x4002909	            0x85c0	                           test eax, eax	      1688	ops.c	FUNCTION_32	IF_1
0x400290b	     0xf85fa010000	                           jne 0x4002b0b	      1688	ops.c	FUNCTION_32	IF_1
0x4002911	      0xbf56000000	                           mov edi, 0x56	      1691	ops.c	FUNCTION_32	CALL_1
0x4002916	      0xe800000000	                          call 0x400291b	      1691	ops.c	FUNCTION_32	CALL_1
0x400291b	        0x488945a0	             mov qword [rbp - 0x60], rax	      1691	ops.c	FUNCTION_32	CALL_1
0x400291f	      0xe800000000	                          call 0x4002924	      1693	ops.c	FUNCTION_32	CALL_2
0x4002924	        0x488945a8	             mov qword [rbp - 0x58], rax	      1693	ops.c	FUNCTION_32	CALL_2
0x4002928	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1694	ops.c	FUNCTION_32	IF_2
0x400292d	     0xf84db010000	                            je 0x4002b0e	      1694	ops.c	FUNCTION_32	IF_2
0x4002933	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      1696	ops.c	FUNCTION_32	FOR_1
0x400293a	            0xeb2f	                           jmp 0x400296b	      1696	ops.c	FUNCTION_32	FOR_1
0x400293c	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1697	ops.c	FUNCTION_32	CALL_3
0x4002940	          0x488b00	                    mov rax, qword [rax]	      1697	ops.c	FUNCTION_32	CALL_3
0x4002943	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      1697	ops.c	FUNCTION_32	CALL_3
0x4002946	          0x4863d2	                         movsxd rdx, edx	      1697	ops.c	FUNCTION_32	CALL_3
0x4002949	        0x48c1e203	                              shl rdx, 3	      1697	ops.c	FUNCTION_32	CALL_3
0x400294d	          0x4801d0	                            add rax, rdx	      1697	ops.c	FUNCTION_32	CALL_3
0x4002950	          0x488b08	                    mov rcx, qword [rax]	      1697	ops.c	FUNCTION_32	CALL_3
0x4002953	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1697	ops.c	FUNCTION_32	CALL_3
0x4002957	      0xbaffffffff	                     mov edx, 0xffffffff	      1697	ops.c	FUNCTION_32	CALL_3
0x400295c	          0x4889ce	                            mov rsi, rcx	      1697	ops.c	FUNCTION_32	CALL_3
0x400295f	          0x4889c7	                            mov rdi, rax	      1697	ops.c	FUNCTION_32	CALL_3
0x4002962	      0xe800000000	                          call 0x4002967	      1697	ops.c	FUNCTION_32	CALL_3
0x4002967	        0x83459401	               add dword [rbp - 0x6c], 1	      1696	ops.c	FUNCTION_32	FOR_1
0x400296b	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1696	ops.c	FUNCTION_32	FOR_1
0x400296e	          0x4863d0	                         movsxd rdx, eax	      1696	ops.c	FUNCTION_32	FOR_1
0x4002971	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1696	ops.c	FUNCTION_32	FOR_1
0x4002975	        0x488b4008	                mov rax, qword [rax + 8]	      1696	ops.c	FUNCTION_32	FOR_1
0x4002979	          0x4839c2	                            cmp rdx, rax	      1696	ops.c	FUNCTION_32	FOR_1
0x400297c	            0x7cbe	                            jl 0x400293c	      1696	ops.c	FUNCTION_32	FOR_1
0x400297e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1698	ops.c	FUNCTION_32
0x4002982	        0xc6404802	                mov byte [rax + 0x48], 2	      1698	ops.c	FUNCTION_32
0x4002986	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1699	ops.c	FUNCTION_32	CALL_4
0x400298a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1699	ops.c	FUNCTION_32	CALL_4
0x400298e	      0xbe00000000	                              mov esi, 0	      1699	ops.c	FUNCTION_32	CALL_4
0x4002993	          0x4889c7	                            mov rdi, rax	      1699	ops.c	FUNCTION_32	CALL_4
0x4002996	      0xe800000000	                          call 0x400299b	      1699	ops.c	FUNCTION_32	CALL_4
0x400299b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1701	ops.c	FUNCTION_32
0x400299f	          0x8b4004	                mov eax, dword [rax + 4]	      1701	ops.c	FUNCTION_32
0x40029a2	          0x8845b0	               mov byte [rbp - 0x50], al	      1701	ops.c	FUNCTION_32
0x40029a5	        0xc645b100	                mov byte [rbp - 0x4f], 0	      1702	ops.c	FUNCTION_32
0x40029a9	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1703	ops.c	FUNCTION_32	CALL_5
0x40029ad	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1703	ops.c	FUNCTION_32	CALL_5
0x40029b1	          0x4889d1	                            mov rcx, rdx	      1703	ops.c	FUNCTION_32	CALL_5
0x40029b4	      0xba00000000	                              mov edx, 0	      1703	ops.c	FUNCTION_32	CALL_5
0x40029b9	      0xbe00000000	                              mov esi, 0	      1703	ops.c	FUNCTION_32	CALL_5
0x40029be	          0x4889c7	                            mov rdi, rax	      1703	ops.c	FUNCTION_32	CALL_5
0x40029c1	      0xe800000000	                          call 0x40029c6	      1703	ops.c	FUNCTION_32	CALL_5
0x40029c6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1705	ops.c	FUNCTION_32	CALL_6
0x40029ca	            0x8b00	                    mov eax, dword [rax]	      1705	ops.c	FUNCTION_32	CALL_6
0x40029cc	            0x89c7	                            mov edi, eax	      1705	ops.c	FUNCTION_32	CALL_6
0x40029ce	      0xe800000000	                          call 0x40029d3	      1705	ops.c	FUNCTION_32	CALL_6
0x40029d3	          0x8845b0	               mov byte [rbp - 0x50], al	      1705	ops.c	FUNCTION_32	CALL_6
0x40029d6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1706	ops.c	FUNCTION_32	CALL_7
0x40029da	            0x8b00	                    mov eax, dword [rax]	      1706	ops.c	FUNCTION_32	CALL_7
0x40029dc	            0x89c7	                            mov edi, eax	      1706	ops.c	FUNCTION_32	CALL_7
0x40029de	      0xe800000000	                          call 0x40029e3	      1706	ops.c	FUNCTION_32	CALL_7
0x40029e3	          0x8845b1	               mov byte [rbp - 0x4f], al	      1706	ops.c	FUNCTION_32	CALL_7
0x40029e6	        0xc645b200	                mov byte [rbp - 0x4e], 0	      1707	ops.c	FUNCTION_32
0x40029ea	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1708	ops.c	FUNCTION_32	CALL_8
0x40029ee	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1708	ops.c	FUNCTION_32	CALL_8
0x40029f2	          0x4889d1	                            mov rcx, rdx	      1708	ops.c	FUNCTION_32	CALL_8
0x40029f5	      0xba00000000	                              mov edx, 0	      1708	ops.c	FUNCTION_32	CALL_8
0x40029fa	      0xbe00000000	                              mov esi, 0	      1708	ops.c	FUNCTION_32	CALL_8
0x40029ff	          0x4889c7	                            mov rdi, rax	      1708	ops.c	FUNCTION_32	CALL_8
0x4002a02	      0xe800000000	                          call 0x4002a07	      1708	ops.c	FUNCTION_32	CALL_8
0x4002a07	        0xc645b000	                mov byte [rbp - 0x50], 0	      1710	ops.c	FUNCTION_32
0x4002a0b	        0xc645b100	                mov byte [rbp - 0x4f], 0	      1711	ops.c	FUNCTION_32
0x4002a0f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a13	          0x8b4004	                mov eax, dword [rax + 4]	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a16	        0x488d5598	                   lea rdx, [rbp - 0x68]	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a1a	          0x4889d6	                            mov rsi, rdx	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a1d	            0x89c7	                            mov edi, eax	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a1f	      0xe800000000	                          call 0x4002a24	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a24	           0xfb6c0	                           movzx eax, al	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a27	          0x83f801	                              cmp eax, 1	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a2a	            0x740b	                            je 0x4002a37	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a2c	          0x83f802	                              cmp eax, 2	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a2f	            0x7412	                            je 0x4002a43	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a31	            0x85c0	                           test eax, eax	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a33	            0x7408	                            je 0x4002a3d	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a35	            0xeb38	                           jmp 0x4002a6f	      1712	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x4002a37	        0xc645b056	            mov byte [rbp - 0x50], 0x56 	      1714	ops.c	FUNCTION_32	SWITCH_1
0x4002a3b	            0xeb32	                           jmp 0x4002a6f	      1714	ops.c	FUNCTION_32	SWITCH_1
0x4002a3d	        0xc645b076	            mov byte [rbp - 0x50], 0x76 	      1715	ops.c	FUNCTION_32	SWITCH_1
0x4002a41	            0xeb2c	                           jmp 0x4002a6f	      1715	ops.c	FUNCTION_32	SWITCH_1
0x4002a43	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4002a47	        0x488d5001	                      lea rdx, [rax + 1]	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4002a4b	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4002a4f	          0x4989d0	                             mov r8, rdx	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4002a52	      0xb916000000	                           mov ecx, 0x16	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4002a57	      0xba00000000	                              mov edx, 0	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4002a5c	      0xbe43000000	                           mov esi, 0x43	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4002a61	          0x4889c7	                            mov rdi, rax	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4002a64	      0xb800000000	                              mov eax, 0	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4002a69	      0xe800000000	                          call 0x4002a6e	      1717	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x4002a6e	              0x90	                                     nop	      1719	ops.c	FUNCTION_32	SWITCH_1
0x4002a6f	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1721	ops.c	FUNCTION_32	CALL_11
0x4002a73	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1721	ops.c	FUNCTION_32	CALL_11
0x4002a77	          0x4889d1	                            mov rcx, rdx	      1721	ops.c	FUNCTION_32	CALL_11
0x4002a7a	      0xba00000000	                              mov edx, 0	      1721	ops.c	FUNCTION_32	CALL_11
0x4002a7f	      0xbe00000000	                              mov esi, 0	      1721	ops.c	FUNCTION_32	CALL_11
0x4002a84	          0x4889c7	                            mov rdi, rax	      1721	ops.c	FUNCTION_32	CALL_11
0x4002a87	      0xe800000000	                          call 0x4002a8c	      1721	ops.c	FUNCTION_32	CALL_11
0x4002a8c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1724	ops.c	FUNCTION_32	CALL_12
0x4002a90	          0x4889c7	                            mov rdi, rax	      1724	ops.c	FUNCTION_32	CALL_12
0x4002a93	      0xe800000000	                          call 0x4002a98	      1724	ops.c	FUNCTION_32	CALL_12
0x4002a98	    0xc70500000000	               mov dword [0x04002aa2], 1	      1726	ops.c	FUNCTION_32
0x4002aa2	    0x8b0500000000	            mov eax, dword [0x04002aa8] 	      1727	ops.c	FUNCTION_32
0x4002aa8	          0x83c001	                              add eax, 1	      1727	ops.c	FUNCTION_32
0x4002aab	    0x890500000000	            mov dword [0x04002ab1], eax 	      1727	ops.c	FUNCTION_32
0x4002ab1	    0x488b05000000	            mov rax, qword [0x04002ab8] 	      1728	ops.c	FUNCTION_32	CALL_13
0x4002ab8	          0x4989c0	                             mov r8, rax	      1728	ops.c	FUNCTION_32	CALL_13
0x4002abb	      0xb900000000	                              mov ecx, 0	      1728	ops.c	FUNCTION_32	CALL_13
0x4002ac0	      0xba00000000	                              mov edx, 0	      1728	ops.c	FUNCTION_32	CALL_13
0x4002ac5	      0xbe00000000	                              mov esi, 0	      1728	ops.c	FUNCTION_32	CALL_13
0x4002aca	      0xbf57000000	                           mov edi, 0x57	      1728	ops.c	FUNCTION_32	CALL_13
0x4002acf	      0xe800000000	                          call 0x4002ad4	      1728	ops.c	FUNCTION_32	CALL_13
0x4002ad4	    0x8b0500000000	            mov eax, dword [0x04002ada] 	      1729	ops.c	FUNCTION_32
0x4002ada	          0x83e801	                              sub eax, 1	      1729	ops.c	FUNCTION_32
0x4002add	    0x890500000000	            mov dword [0x04002ae3], eax 	      1729	ops.c	FUNCTION_32
0x4002ae3	    0xc70500000000	               mov dword [0x04002aed], 0	      1730	ops.c	FUNCTION_32
0x4002aed	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1733	ops.c	FUNCTION_32	CALL_14
0x4002af1	          0x4889c7	                            mov rdi, rax	      1733	ops.c	FUNCTION_32	CALL_14
0x4002af4	      0xe800000000	                          call 0x4002af9	      1733	ops.c	FUNCTION_32	CALL_14
0x4002af9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1734	ops.c	FUNCTION_32	CALL_15
0x4002afd	        0x4883c010	                           add rax, 0x10	      1734	ops.c	FUNCTION_32	CALL_15
0x4002b01	          0x4889c7	                            mov rdi, rax	      1734	ops.c	FUNCTION_32	CALL_15
0x4002b04	      0xe800000000	                          call 0x4002b09	      1734	ops.c	FUNCTION_32	CALL_15
0x4002b09	            0xeb04	                           jmp 0x4002b0f	      1734	ops.c	FUNCTION_32	CALL_15
0x4002b0b	              0x90	                                     nop	      1689	ops.c	FUNCTION_32	IF_1
0x4002b0c	            0xeb01	                           jmp 0x4002b0f	      1689	ops.c	FUNCTION_32	IF_1
0x4002b0e	              0x90	                                     nop	      1695	ops.c	FUNCTION_32	IF_2
0x4002b0f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1735	ops.c	FUNCTION_32
0x4002b13	    0x644833042528	                xor rax, qword fs:[0x28]	      1735	ops.c	FUNCTION_32
0x4002b1c	            0x7405	                            je 0x4002b23	      1735	ops.c	FUNCTION_32
0x4002b1e	      0xe800000000	                          call 0x4002b23	      1735	ops.c	FUNCTION_32
0x4002b23	              0xc9	                                   leave	      1735	ops.c	FUNCTION_32
0x4002b24	              0xc3	                                     ret	      1735	ops.c	FUNCTION_32
clip_convert_selection	ELSE,3:DO,0:IF,6:functions,0:WHILE,0:FOR,2:SWITCH,0:CALL,2	153
0x400d87b	              0x55	                                push rbp	      6655	ops.c	FUNCTION_77
0x400d87c	          0x4889e5	                            mov rbp, rsp	      6655	ops.c	FUNCTION_77
0x400d87f	              0x53	                                push rbx	      6655	ops.c	FUNCTION_77
0x400d880	        0x4883ec48	                           sub rsp, 0x48	      6655	ops.c	FUNCTION_77
0x400d884	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      6655	ops.c	FUNCTION_77
0x400d888	        0x488975c0	             mov qword [rbp - 0x40], rsi	      6655	ops.c	FUNCTION_77
0x400d88c	        0x488955b8	             mov qword [rbp - 0x48], rdx	      6655	ops.c	FUNCTION_77
0x400d890	    0x48817db80000	               cmp qword [rbp - 0x48], 0	      6662	ops.c	FUNCTION_77	IF_1
0x400d898	            0x750a	                           jne 0x400d8a4	      6662	ops.c	FUNCTION_77	IF_1
0x400d89a	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6663	ops.c	FUNCTION_77	IF_1
0x400d8a2	            0xeb08	                           jmp 0x400d8ac	      6663	ops.c	FUNCTION_77	IF_1
0x400d8a4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6665	ops.c	FUNCTION_77	ELSE_1
0x400d8ac	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      6670	ops.c	FUNCTION_77
0x400d8b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6673	ops.c	FUNCTION_77
0x400d8b7	    0x48c700000000	                      mov qword [rax], 0	      6673	ops.c	FUNCTION_77
0x400d8be	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6674	ops.c	FUNCTION_77
0x400d8c2	    0x48c700000000	                      mov qword [rax], 0	      6674	ops.c	FUNCTION_77
0x400d8c9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6675	ops.c	FUNCTION_77	IF_2
0x400d8cd	          0x488b00	                    mov rax, qword [rax]	      6675	ops.c	FUNCTION_77	IF_2
0x400d8d0	          0x4885c0	                           test rax, rax	      6675	ops.c	FUNCTION_77	IF_2
0x400d8d3	            0x750a	                           jne 0x400d8df	      6675	ops.c	FUNCTION_77	IF_2
0x400d8d5	      0xb8ffffffff	                     mov eax, 0xffffffff	      6676	ops.c	FUNCTION_77	IF_2
0x400d8da	      0xe9b0010000	                           jmp 0x400da8f	      6676	ops.c	FUNCTION_77	IF_2
0x400d8df	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      6678	ops.c	FUNCTION_77	FOR_1
0x400d8e6	            0xeb3e	                           jmp 0x400d926	      6678	ops.c	FUNCTION_77	FOR_1
0x400d8e8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6679	ops.c	FUNCTION_77	CALL_1
0x400d8ec	          0x488b18	                    mov rbx, qword [rax]	      6679	ops.c	FUNCTION_77	CALL_1
0x400d8ef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6679	ops.c	FUNCTION_77	CALL_1
0x400d8f3	          0x488b00	                    mov rax, qword [rax]	      6679	ops.c	FUNCTION_77	CALL_1
0x400d8f6	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      6679	ops.c	FUNCTION_77	CALL_1
0x400d8f9	          0x4863d2	                         movsxd rdx, edx	      6679	ops.c	FUNCTION_77	CALL_1
0x400d8fc	        0x48c1e203	                              shl rdx, 3	      6679	ops.c	FUNCTION_77	CALL_1
0x400d900	          0x4801d0	                            add rax, rdx	      6679	ops.c	FUNCTION_77	CALL_1
0x400d903	          0x488b00	                    mov rax, qword [rax]	      6679	ops.c	FUNCTION_77	CALL_1
0x400d906	          0x4889c7	                            mov rdi, rax	      6679	ops.c	FUNCTION_77	CALL_1
0x400d909	      0xe800000000	                          call 0x400d90e	      6679	ops.c	FUNCTION_77	CALL_1
0x400d90e	          0x4889c2	                            mov rdx, rax	      6679	ops.c	FUNCTION_77	CALL_1
0x400d911	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6679	ops.c	FUNCTION_77	CALL_1
0x400d914	          0x4801d0	                            add rax, rdx	      6679	ops.c	FUNCTION_77	CALL_1
0x400d917	        0x488d1403	                    lea rdx, [rbx + rax]	      6679	ops.c	FUNCTION_77	CALL_1
0x400d91b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6679	ops.c	FUNCTION_77	CALL_1
0x400d91f	          0x488910	                    mov qword [rax], rdx	      6679	ops.c	FUNCTION_77	CALL_1
0x400d922	        0x8345d401	               add dword [rbp - 0x2c], 1	      6678	ops.c	FUNCTION_77	FOR_1
0x400d926	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6678	ops.c	FUNCTION_77	FOR_1
0x400d929	          0x4863d0	                         movsxd rdx, eax	      6678	ops.c	FUNCTION_77	FOR_1
0x400d92c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6678	ops.c	FUNCTION_77	FOR_1
0x400d930	        0x488b4008	                mov rax, qword [rax + 8]	      6678	ops.c	FUNCTION_77	FOR_1
0x400d934	          0x4839c2	                            cmp rdx, rax	      6678	ops.c	FUNCTION_77	FOR_1
0x400d937	            0x7caf	                            jl 0x400d8e8	      6678	ops.c	FUNCTION_77	FOR_1
0x400d939	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6684	ops.c	FUNCTION_77	IF_3
0x400d93d	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6684	ops.c	FUNCTION_77	IF_3
0x400d941	            0x84c0	                             test al, al	      6684	ops.c	FUNCTION_77	IF_3
0x400d943	            0x7523	                           jne 0x400d968	      6684	ops.c	FUNCTION_77	IF_3
0x400d945	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6684	ops.c	FUNCTION_77	IF_3
0x400d949	          0x488b10	                    mov rdx, qword [rax]	      6684	ops.c	FUNCTION_77	IF_3
0x400d94c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6684	ops.c	FUNCTION_77	IF_3
0x400d94f	          0x4839c2	                            cmp rdx, rax	      6684	ops.c	FUNCTION_77	IF_3
0x400d952	            0x7214	                            jb 0x400d968	      6684	ops.c	FUNCTION_77	IF_3
0x400d954	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6685	ops.c	FUNCTION_77	IF_3
0x400d958	          0x488b10	                    mov rdx, qword [rax]	      6685	ops.c	FUNCTION_77	IF_3
0x400d95b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6685	ops.c	FUNCTION_77	IF_3
0x400d95e	          0x4829c2	                            sub rdx, rax	      6685	ops.c	FUNCTION_77	IF_3
0x400d961	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6685	ops.c	FUNCTION_77	IF_3
0x400d965	          0x488910	                    mov qword [rax], rdx	      6685	ops.c	FUNCTION_77	IF_3
0x400d968	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6687	ops.c	FUNCTION_77	CALL_2
0x400d96c	          0x488b00	                    mov rax, qword [rax]	      6687	ops.c	FUNCTION_77	CALL_2
0x400d96f	        0x4883c001	                              add rax, 1	      6687	ops.c	FUNCTION_77	CALL_2
0x400d973	      0xbe01000000	                              mov esi, 1	      6687	ops.c	FUNCTION_77	CALL_2
0x400d978	          0x4889c7	                            mov rdi, rax	      6687	ops.c	FUNCTION_77	CALL_2
0x400d97b	      0xe800000000	                          call 0x400d980	      6687	ops.c	FUNCTION_77	CALL_2
0x400d980	          0x4889c2	                            mov rdx, rax	      6687	ops.c	FUNCTION_77	CALL_2
0x400d983	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6687	ops.c	FUNCTION_77	CALL_2
0x400d987	          0x488910	                    mov qword [rax], rdx	      6687	ops.c	FUNCTION_77	CALL_2
0x400d98a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6687	ops.c	FUNCTION_77	CALL_2
0x400d98e	          0x488b00	                    mov rax, qword [rax]	      6687	ops.c	FUNCTION_77	CALL_2
0x400d991	        0x488945e8	             mov qword [rbp - 0x18], rax	      6687	ops.c	FUNCTION_77	CALL_2
0x400d995	      0x48837de800	               cmp qword [rbp - 0x18], 0	      6688	ops.c	FUNCTION_77	IF_4
0x400d99a	            0x750a	                           jne 0x400d9a6	      6688	ops.c	FUNCTION_77	IF_4
0x400d99c	      0xb8ffffffff	                     mov eax, 0xffffffff	      6689	ops.c	FUNCTION_77	IF_4
0x400d9a1	      0xe9e9000000	                           jmp 0x400da8f	      6689	ops.c	FUNCTION_77	IF_4
0x400d9a6	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      6690	ops.c	FUNCTION_77
0x400d9ad	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      6691	ops.c	FUNCTION_77	FOR_2
0x400d9b4	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      6691	ops.c	FUNCTION_77	FOR_2
0x400d9bb	      0xe9b4000000	                           jmp 0x400da74	      6691	ops.c	FUNCTION_77	FOR_2
0x400d9c0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9c4	          0x488b00	                    mov rax, qword [rax]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9c7	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9ca	          0x4863d2	                         movsxd rdx, edx	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9cd	        0x48c1e203	                              shl rdx, 3	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9d1	          0x4801d0	                            add rax, rdx	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9d4	          0x488b10	                    mov rdx, qword [rax]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9d7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9da	            0x4898	                                    cdqe	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9dc	          0x4801d0	                            add rax, rdx	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9df	           0xfb600	                   movzx eax, byte [rax]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9e2	            0x3c0a	                             cmp al, 0xa	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9e4	            0x7512	                           jne 0x400d9f8	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9e6	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9e9	          0x4863d0	                         movsxd rdx, eax	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9f0	          0x4801d0	                            add rax, rdx	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9f3	          0xc60000	                       mov byte [rax], 0	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9f6	            0xeb74	                           jmp 0x400da6c	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x400d9f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400d9fc	          0x488b00	                    mov rax, qword [rax]	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400d9ff	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da02	          0x4863d2	                         movsxd rdx, edx	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da05	        0x48c1e203	                              shl rdx, 3	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da09	          0x4801d0	                            add rax, rdx	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da0c	          0x488b10	                    mov rdx, qword [rax]	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da0f	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da12	            0x4898	                                    cdqe	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da14	          0x4801d0	                            add rax, rdx	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da17	           0xfb600	                   movzx eax, byte [rax]	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da1a	            0x84c0	                             test al, al	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da1c	            0x751d	                           jne 0x400da3b	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da1e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6703	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da21	          0x4863d0	                         movsxd rdx, eax	      6703	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6703	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da28	          0x4801d0	                            add rax, rdx	      6703	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da2b	          0xc6000a	                     mov byte [rax], 0xa	      6703	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da2e	        0x8345d001	               add dword [rbp - 0x30], 1	      6705	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da32	    0xc745d8ffffff	     mov dword [rbp - 0x28], 0xffffffff 	      6706	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da39	            0xeb31	                           jmp 0x400da6c	      6706	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400da3b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da3e	          0x4863d0	                         movsxd rdx, eax	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da45	          0x4801c2	                            add rdx, rax	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da48	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da4c	          0x488b00	                    mov rax, qword [rax]	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da4f	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da52	          0x4863c9	                         movsxd rcx, ecx	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da55	        0x48c1e103	                              shl rcx, 3	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da59	          0x4801c8	                            add rax, rcx	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da5c	          0x488b08	                    mov rcx, qword [rax]	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da5f	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da62	            0x4898	                                    cdqe	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da64	          0x4801c8	                            add rax, rcx	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da67	           0xfb600	                   movzx eax, byte [rax]	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da6a	            0x8802	                      mov byte [rdx], al	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400da6c	        0x8345d401	               add dword [rbp - 0x2c], 1	      6691	ops.c	FUNCTION_77	FOR_2
0x400da70	        0x8345d801	               add dword [rbp - 0x28], 1	      6691	ops.c	FUNCTION_77	FOR_2
0x400da74	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6691	ops.c	FUNCTION_77	FOR_2
0x400da78	          0x488b00	                    mov rax, qword [rax]	      6691	ops.c	FUNCTION_77	FOR_2
0x400da7b	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      6691	ops.c	FUNCTION_77	FOR_2
0x400da7e	     0xf8f3cffffff	                            jg 0x400d9c0	      6691	ops.c	FUNCTION_77	FOR_2
0x400da84	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6711	ops.c	FUNCTION_77	ELSE_3
0x400da88	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6711	ops.c	FUNCTION_77	ELSE_3
0x400da8c	           0xfb6c0	                           movzx eax, al	      6711	ops.c	FUNCTION_77	ELSE_3
0x400da8f	        0x4883c448	                           add rsp, 0x48	      6712	ops.c	FUNCTION_77	ELSE_3
0x400da93	              0x5b	                                 pop rbx	      6712	ops.c	FUNCTION_77	ELSE_3
0x400da94	              0x5d	                                 pop rbp	      6712	ops.c	FUNCTION_77	ELSE_3
0x400da95	              0xc3	                                     ret	      6712	ops.c	FUNCTION_77	ELSE_3
handle_viminfo_register	ELSE,3:DO,0:IF,13:functions,0:WHILE,0:FOR,2:SWITCH,0:CALL,5	258
0x400caf7	              0x55	                                push rbp	      6225	ops.c	FUNCTION_71
0x400caf8	          0x4889e5	                            mov rbp, rsp	      6225	ops.c	FUNCTION_71
0x400cafb	              0x53	                                push rbx	      6225	ops.c	FUNCTION_71
0x400cafc	        0x4883ec48	                           sub rsp, 0x48	      6225	ops.c	FUNCTION_71
0x400cb00	        0x48897db8	             mov qword [rbp - 0x48], rdi	      6225	ops.c	FUNCTION_71
0x400cb04	          0x8975b4	             mov dword [rbp - 0x4c], esi	      6225	ops.c	FUNCTION_71
0x400cb07	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6226	ops.c	FUNCTION_71
0x400cb0b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6226	ops.c	FUNCTION_71
0x400cb0f	        0x488945e0	             mov qword [rbp - 0x20], rax	      6226	ops.c	FUNCTION_71
0x400cb13	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6240	ops.c	FUNCTION_71	IF_1
0x400cb17	            0x8b00	                    mov eax, dword [rax]	      6240	ops.c	FUNCTION_71	IF_1
0x400cb19	          0x83f805	                              cmp eax, 5	      6240	ops.c	FUNCTION_71	IF_1
0x400cb1c	     0xf8e41030000	                           jle 0x400ce63	      6240	ops.c	FUNCTION_71	IF_1
0x400cb22	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6241	ops.c	FUNCTION_71	IF_1
0x400cb26	            0x8b00	                    mov eax, dword [rax]	      6241	ops.c	FUNCTION_71	IF_1
0x400cb28	            0x85c0	                           test eax, eax	      6241	ops.c	FUNCTION_71	IF_1
0x400cb2a	     0xf8533030000	                           jne 0x400ce63	      6241	ops.c	FUNCTION_71	IF_1
0x400cb30	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6242	ops.c	FUNCTION_71	IF_1
0x400cb34	        0x4883c020	                           add rax, 0x20	      6242	ops.c	FUNCTION_71	IF_1
0x400cb38	            0x8b00	                    mov eax, dword [rax]	      6242	ops.c	FUNCTION_71	IF_1
0x400cb3a	            0x85c0	                           test eax, eax	      6242	ops.c	FUNCTION_71	IF_1
0x400cb3c	     0xf8521030000	                           jne 0x400ce63	      6242	ops.c	FUNCTION_71	IF_1
0x400cb42	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6243	ops.c	FUNCTION_71	IF_1
0x400cb46	        0x4883c040	                           add rax, 0x40	      6243	ops.c	FUNCTION_71	IF_1
0x400cb4a	            0x8b00	                    mov eax, dword [rax]	      6243	ops.c	FUNCTION_71	IF_1
0x400cb4c	            0x85c0	                           test eax, eax	      6243	ops.c	FUNCTION_71	IF_1
0x400cb4e	     0xf850f030000	                           jne 0x400ce63	      6243	ops.c	FUNCTION_71	IF_1
0x400cb54	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6244	ops.c	FUNCTION_71	IF_1
0x400cb58	        0x4883c060	                           add rax, 0x60	      6244	ops.c	FUNCTION_71	IF_1
0x400cb5c	            0x8b00	                    mov eax, dword [rax]	      6244	ops.c	FUNCTION_71	IF_1
0x400cb5e	            0x85c0	                           test eax, eax	      6244	ops.c	FUNCTION_71	IF_1
0x400cb60	     0xf85fd020000	                           jne 0x400ce63	      6244	ops.c	FUNCTION_71	IF_1
0x400cb66	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6245	ops.c	FUNCTION_71	IF_1
0x400cb6a	        0x4883e880	             sub rax, 0xffffffffffffff80	      6245	ops.c	FUNCTION_71	IF_1
0x400cb6e	            0x8b00	                    mov eax, dword [rax]	      6245	ops.c	FUNCTION_71	IF_1
0x400cb70	            0x85c0	                           test eax, eax	      6245	ops.c	FUNCTION_71	IF_1
0x400cb72	     0xf85eb020000	                           jne 0x400ce63	      6245	ops.c	FUNCTION_71	IF_1
0x400cb78	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6246	ops.c	FUNCTION_71	IF_1
0x400cb7c	    0x4805a0000000	                           add rax, 0xa0	      6246	ops.c	FUNCTION_71	IF_1
0x400cb82	            0x8b00	                    mov eax, dword [rax]	      6246	ops.c	FUNCTION_71	IF_1
0x400cb84	            0x85c0	                           test eax, eax	      6246	ops.c	FUNCTION_71	IF_1
0x400cb86	     0xf85d7020000	                           jne 0x400ce63	      6246	ops.c	FUNCTION_71	IF_1
0x400cb8c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6248	ops.c	FUNCTION_71
0x400cb90	        0x488b4008	                mov rax, qword [rax + 8]	      6248	ops.c	FUNCTION_71
0x400cb94	          0x8945c4	             mov dword [rbp - 0x3c], eax	      6248	ops.c	FUNCTION_71
0x400cb97	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6249	ops.c	FUNCTION_71
0x400cb9b	        0x4883c020	                           add rax, 0x20	      6249	ops.c	FUNCTION_71
0x400cb9f	        0x488b4008	                mov rax, qword [rax + 8]	      6249	ops.c	FUNCTION_71
0x400cba3	          0x8945c8	             mov dword [rbp - 0x38], eax	      6249	ops.c	FUNCTION_71
0x400cba6	        0x837dc800	               cmp dword [rbp - 0x38], 0	      6250	ops.c	FUNCTION_71	IF_2
0x400cbaa	     0xf88b6020000	                            js 0x400ce66	      6250	ops.c	FUNCTION_71	IF_2
0x400cbb0	        0x837dc827	           cmp dword [rbp - 0x38], 0x27 	      6250	ops.c	FUNCTION_71	IF_2
0x400cbb4	     0xf8fac020000	                            jg 0x400ce66	      6250	ops.c	FUNCTION_71	IF_2
0x400cbba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6252	ops.c	FUNCTION_71
0x400cbbe	        0x4883c040	                           add rax, 0x40	      6252	ops.c	FUNCTION_71
0x400cbc2	        0x488b4008	                mov rax, qword [rax + 8]	      6252	ops.c	FUNCTION_71
0x400cbc6	          0x8945cc	             mov dword [rbp - 0x34], eax	      6252	ops.c	FUNCTION_71
0x400cbc9	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6253	ops.c	FUNCTION_71	IF_3
0x400cbcd	            0x7410	                            je 0x400cbdf	      6253	ops.c	FUNCTION_71	IF_3
0x400cbcf	        0x837dcc01	               cmp dword [rbp - 0x34], 1	      6253	ops.c	FUNCTION_71	IF_3
0x400cbd3	            0x740a	                            je 0x400cbdf	      6253	ops.c	FUNCTION_71	IF_3
0x400cbd5	        0x837dcc02	               cmp dword [rbp - 0x34], 2	      6253	ops.c	FUNCTION_71	IF_3
0x400cbd9	     0xf858a020000	                           jne 0x400ce69	      6253	ops.c	FUNCTION_71	IF_3
0x400cbdf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6255	ops.c	FUNCTION_71
0x400cbe3	        0x4883c060	                           add rax, 0x60	      6255	ops.c	FUNCTION_71
0x400cbe7	        0x488b4008	                mov rax, qword [rax + 8]	      6255	ops.c	FUNCTION_71
0x400cbeb	          0x8945d0	             mov dword [rbp - 0x30], eax	      6255	ops.c	FUNCTION_71
0x400cbee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6256	ops.c	FUNCTION_71	IF_4
0x400cbf2	            0x8b00	                    mov eax, dword [rax]	      6256	ops.c	FUNCTION_71	IF_4
0x400cbf4	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6256	ops.c	FUNCTION_71	IF_4
0x400cbf7	          0x83c206	                              add edx, 6	      6256	ops.c	FUNCTION_71	IF_4
0x400cbfa	            0x39d0	                            cmp eax, edx	      6256	ops.c	FUNCTION_71	IF_4
0x400cbfc	     0xf8c6a020000	                            jl 0x400ce6c	      6256	ops.c	FUNCTION_71	IF_4
0x400cc02	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6258	ops.c	FUNCTION_71
0x400cc06	        0x4883e880	             sub rax, 0xffffffffffffff80	      6258	ops.c	FUNCTION_71
0x400cc0a	        0x488b4008	                mov rax, qword [rax + 8]	      6258	ops.c	FUNCTION_71
0x400cc0e	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6258	ops.c	FUNCTION_71
0x400cc11	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6259	ops.c	FUNCTION_71	IF_5
0x400cc15	     0xf8854020000	                            js 0x400ce6f	      6259	ops.c	FUNCTION_71	IF_5
0x400cc1b	    0x488b05000000	            mov rax, qword [0x0400cc22] 	      6262	ops.c	FUNCTION_71	IF_6
0x400cc22	          0x4885c0	                           test rax, rax	      6262	ops.c	FUNCTION_71	IF_6
0x400cc25	            0x741a	                            je 0x400cc41	      6262	ops.c	FUNCTION_71	IF_6
0x400cc27	    0x488b05000000	            mov rax, qword [0x0400cc2e] 	      6265	ops.c	FUNCTION_71	IF_6
0x400cc2e	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      6265	ops.c	FUNCTION_71	IF_6
0x400cc31	          0x4863d2	                         movsxd rdx, edx	      6265	ops.c	FUNCTION_71	IF_6
0x400cc34	        0x48c1e205	                              shl rdx, 5	      6265	ops.c	FUNCTION_71	IF_6
0x400cc38	          0x4801d0	                            add rax, rdx	      6265	ops.c	FUNCTION_71	IF_6
0x400cc3b	        0x488945d8	             mov qword [rbp - 0x28], rax	      6265	ops.c	FUNCTION_71	IF_6
0x400cc3f	            0xeb13	                           jmp 0x400cc54	      6265	ops.c	FUNCTION_71	IF_6
0x400cc41	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6267	ops.c	FUNCTION_71	ELSE_1
0x400cc44	            0x4898	                                    cdqe	      6267	ops.c	FUNCTION_71	ELSE_1
0x400cc46	        0x48c1e005	                              shl rax, 5	      6267	ops.c	FUNCTION_71	ELSE_1
0x400cc4a	    0x480500000000	                              add rax, 0	      6267	ops.c	FUNCTION_71	ELSE_1
0x400cc50	        0x488945d8	             mov qword [rbp - 0x28], rax	      6267	ops.c	FUNCTION_71	ELSE_1
0x400cc54	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6270	ops.c	FUNCTION_71
0x400cc58	    0x4805a0000000	                           add rax, 0xa0	      6270	ops.c	FUNCTION_71
0x400cc5e	        0x488b4008	                mov rax, qword [rax + 8]	      6270	ops.c	FUNCTION_71
0x400cc62	        0x488945e8	             mov qword [rbp - 0x18], rax	      6270	ops.c	FUNCTION_71
0x400cc66	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6271	ops.c	FUNCTION_71	IF_7
0x400cc6a	          0x488b00	                    mov rax, qword [rax]	      6271	ops.c	FUNCTION_71	IF_7
0x400cc6d	          0x4885c0	                           test rax, rax	      6271	ops.c	FUNCTION_71	IF_7
0x400cc70	            0x7423	                            je 0x400cc95	      6271	ops.c	FUNCTION_71	IF_7
0x400cc72	        0x837db400	               cmp dword [rbp - 0x4c], 0	      6271	ops.c	FUNCTION_71	IF_7
0x400cc76	            0x751d	                           jne 0x400cc95	      6271	ops.c	FUNCTION_71	IF_7
0x400cc78	      0x48837de800	               cmp qword [rbp - 0x18], 0	      6272	ops.c	FUNCTION_71	IF_7
0x400cc7d	     0xf84ef010000	                            je 0x400ce72	      6272	ops.c	FUNCTION_71	IF_7
0x400cc83	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6272	ops.c	FUNCTION_71	IF_7
0x400cc87	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6272	ops.c	FUNCTION_71	IF_7
0x400cc8b	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      6272	ops.c	FUNCTION_71	IF_7
0x400cc8f	     0xf8fdd010000	                            jg 0x400ce72	      6272	ops.c	FUNCTION_71	IF_7
0x400cc95	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6275	ops.c	FUNCTION_71	IF_8
0x400cc99	          0x488b00	                    mov rax, qword [rax]	      6275	ops.c	FUNCTION_71	IF_8
0x400cc9c	          0x4885c0	                           test rax, rax	      6275	ops.c	FUNCTION_71	IF_8
0x400cc9f	            0x743f	                            je 0x400cce0	      6275	ops.c	FUNCTION_71	IF_8
0x400cca1	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400cca8	            0xeb23	                           jmp 0x400cccd	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccaa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccae	          0x488b00	                    mov rax, qword [rax]	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccb1	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccb4	          0x4863d2	                         movsxd rdx, edx	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccb7	        0x48c1e203	                              shl rdx, 3	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccbb	          0x4801d0	                            add rax, rdx	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccbe	          0x488b00	                    mov rax, qword [rax]	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccc1	          0x4889c7	                            mov rdi, rax	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccc4	      0xe800000000	                          call 0x400ccc9	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccc9	        0x8345c001	               add dword [rbp - 0x40], 1	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400cccd	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccd0	          0x4863d0	                         movsxd rdx, eax	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccd3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccd7	        0x488b4008	                mov rax, qword [rax + 8]	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccdb	          0x4839c2	                            cmp rdx, rax	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400ccde	            0x7cca	                            jl 0x400ccaa	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400cce0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6278	ops.c	FUNCTION_71	CALL_2
0x400cce4	          0x488b00	                    mov rax, qword [rax]	      6278	ops.c	FUNCTION_71	CALL_2
0x400cce7	          0x4889c7	                            mov rdi, rax	      6278	ops.c	FUNCTION_71	CALL_2
0x400ccea	      0xe800000000	                          call 0x400ccef	      6278	ops.c	FUNCTION_71	CALL_2
0x400ccef	    0x488b05000000	            mov rax, qword [0x0400ccf6] 	      6280	ops.c	FUNCTION_71	IF_9
0x400ccf6	          0x4885c0	                           test rax, rax	      6280	ops.c	FUNCTION_71	IF_9
0x400ccf9	            0x753f	                           jne 0x400cd3a	      6280	ops.c	FUNCTION_71	IF_9
0x400ccfb	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6282	ops.c	FUNCTION_71	IF_9	IF_10
0x400ccfe	          0x83e001	                              and eax, 1	      6282	ops.c	FUNCTION_71	IF_9	IF_10
0x400cd01	            0x85c0	                           test eax, eax	      6282	ops.c	FUNCTION_71	IF_9	IF_10
0x400cd03	            0x740b	                            je 0x400cd10	      6282	ops.c	FUNCTION_71	IF_9	IF_10
0x400cd05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6283	ops.c	FUNCTION_71	IF_9	IF_10
0x400cd09	    0x488905000000	            mov qword [0x0400cd10], rax 	      6283	ops.c	FUNCTION_71	IF_9	IF_10
0x400cd10	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x400cd13	          0x83e002	                              and eax, 2	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x400cd16	            0x85c0	                           test eax, eax	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x400cd18	            0x7420	                            je 0x400cd3a	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x400cd1a	        0x837db400	               cmp dword [rbp - 0x4c], 0	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x400cd1e	            0x750a	                           jne 0x400cd2a	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x400cd20	    0x8b0500000000	            mov eax, dword [0x0400cd26] 	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x400cd26	            0x85c0	                           test eax, eax	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x400cd28	            0x7510	                           jne 0x400cd3a	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x400cd2a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6285	ops.c	FUNCTION_71	IF_9	CALL_3
0x400cd2d	            0x89c7	                            mov edi, eax	      6285	ops.c	FUNCTION_71	IF_9	CALL_3
0x400cd2f	      0xe800000000	                          call 0x400cd34	      6285	ops.c	FUNCTION_71	IF_9	CALL_3
0x400cd34	    0x890500000000	            mov dword [0x0400cd3a], eax 	      6285	ops.c	FUNCTION_71	IF_9	CALL_3
0x400cd3a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6287	ops.c	FUNCTION_71
0x400cd3d	            0x89c2	                            mov edx, eax	      6287	ops.c	FUNCTION_71
0x400cd3f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6287	ops.c	FUNCTION_71
0x400cd43	          0x885010	               mov byte [rax + 0x10], dl	      6287	ops.c	FUNCTION_71
0x400cd46	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6288	ops.c	FUNCTION_71
0x400cd4a	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      6288	ops.c	FUNCTION_71
0x400cd4d	          0x895014	             mov dword [rax + 0x14], edx	      6288	ops.c	FUNCTION_71
0x400cd50	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6289	ops.c	FUNCTION_71
0x400cd53	          0x4863d0	                         movsxd rdx, eax	      6289	ops.c	FUNCTION_71
0x400cd56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6289	ops.c	FUNCTION_71
0x400cd5a	        0x48895008	                mov qword [rax + 8], rdx	      6289	ops.c	FUNCTION_71
0x400cd5e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6290	ops.c	FUNCTION_71
0x400cd62	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6290	ops.c	FUNCTION_71
0x400cd66	        0x48895018	             mov qword [rax + 0x18], rdx	      6290	ops.c	FUNCTION_71
0x400cd6a	        0x837dd000	               cmp dword [rbp - 0x30], 0	      6291	ops.c	FUNCTION_71	IF_12
0x400cd6e	            0x7510	                           jne 0x400cd80	      6291	ops.c	FUNCTION_71	IF_12
0x400cd70	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6292	ops.c	FUNCTION_71	IF_12
0x400cd74	    0x48c700000000	                      mov qword [rax], 0	      6292	ops.c	FUNCTION_71	IF_12
0x400cd7b	      0xe9f3000000	                           jmp 0x400ce73	      6292	ops.c	FUNCTION_71	IF_12
0x400cd80	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x400cd83	            0x4898	                                    cdqe	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x400cd85	          0xc1e003	                              shl eax, 3	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x400cd88	            0x89c7	                            mov edi, eax	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x400cd8a	      0xe800000000	                          call 0x400cd8f	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x400cd8f	          0x4889c2	                            mov rdx, rax	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x400cd92	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6295	ops.c	FUNCTION_71	ELSE_2
0x400cd96	          0x488910	                    mov qword [rax], rdx	      6295	ops.c	FUNCTION_71	ELSE_2
0x400cd99	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x400cda0	      0xe9b0000000	                           jmp 0x400ce55	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x400cda5	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cda8	            0x4898	                                    cdqe	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdaa	        0x4883c006	                              add rax, 6	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdae	        0x48c1e005	                              shl rax, 5	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdb2	          0x4889c2	                            mov rdx, rax	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdb5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdb9	          0x4801d0	                            add rax, rdx	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdbc	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdbf	            0x85c0	                           test eax, eax	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdc1	            0x7453	                            je 0x400ce16	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdc3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdc7	          0x488b00	                    mov rax, qword [rax]	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdca	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdcd	          0x4863d2	                         movsxd rdx, edx	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdd0	        0x48c1e203	                              shl rdx, 3	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdd4	          0x4801c2	                            add rdx, rax	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdd7	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdda	            0x4898	                                    cdqe	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cddc	        0x4883c006	                              add rax, 6	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cde0	        0x48c1e005	                              shl rax, 5	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cde4	          0x4889c1	                            mov rcx, rax	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cde7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdeb	          0x4801c8	                            add rax, rcx	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdee	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdf2	          0x488902	                    mov qword [rdx], rax	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdf5	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdf8	            0x4898	                                    cdqe	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdfa	        0x4883c006	                              add rax, 6	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400cdfe	        0x48c1e005	                              shl rax, 5	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400ce02	          0x4889c2	                            mov rdx, rax	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400ce05	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400ce09	          0x4801d0	                            add rax, rdx	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400ce0c	    0x48c740100000	               mov qword [rax + 0x10], 0	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400ce14	            0xeb3b	                           jmp 0x400ce51	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x400ce16	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce1a	          0x488b00	                    mov rax, qword [rax]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce1d	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce20	          0x4863d2	                         movsxd rdx, edx	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce23	        0x48c1e203	                              shl rdx, 3	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce27	        0x488d1c10	                    lea rbx, [rax + rdx]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce2b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce2e	            0x4898	                                    cdqe	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce30	        0x4883c006	                              add rax, 6	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce34	        0x48c1e005	                              shl rax, 5	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce38	          0x4889c2	                            mov rdx, rax	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce3b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce3f	          0x4801d0	                            add rax, rdx	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce42	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce46	          0x4889c7	                            mov rdi, rax	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce49	      0xe800000000	                          call 0x400ce4e	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce4e	          0x488903	                    mov qword [rbx], rax	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x400ce51	        0x8345c001	               add dword [rbp - 0x40], 1	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x400ce55	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x400ce58	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x400ce5b	     0xf8c44ffffff	                            jl 0x400cda5	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x400ce61	            0xeb10	                           jmp 0x400ce73	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x400ce63	              0x90	                                     nop	      6247	ops.c	FUNCTION_71	IF_1
0x400ce64	            0xeb0d	                           jmp 0x400ce73	      6247	ops.c	FUNCTION_71	IF_1
0x400ce66	              0x90	                                     nop	      6251	ops.c	FUNCTION_71	IF_2
0x400ce67	            0xeb0a	                           jmp 0x400ce73	      6251	ops.c	FUNCTION_71	IF_2
0x400ce69	              0x90	                                     nop	      6254	ops.c	FUNCTION_71	IF_3
0x400ce6a	            0xeb07	                           jmp 0x400ce73	      6254	ops.c	FUNCTION_71	IF_3
0x400ce6c	              0x90	                                     nop	      6257	ops.c	FUNCTION_71	IF_4
0x400ce6d	            0xeb04	                           jmp 0x400ce73	      6257	ops.c	FUNCTION_71	IF_4
0x400ce6f	              0x90	                                     nop	      6260	ops.c	FUNCTION_71	IF_5
0x400ce70	            0xeb01	                           jmp 0x400ce73	      6260	ops.c	FUNCTION_71	IF_5
0x400ce72	              0x90	                                     nop	      6273	ops.c	FUNCTION_71	IF_7
0x400ce73	        0x4883c448	                           add rsp, 0x48	      6308	ops.c	FUNCTION_71
0x400ce77	              0x5b	                                 pop rbx	      6308	ops.c	FUNCTION_71
0x400ce78	              0x5d	                                 pop rbp	      6308	ops.c	FUNCTION_71
0x400ce79	              0xc3	                                     ret	      6308	ops.c	FUNCTION_71
write_reg_contents_lst	ELSE,2:DO,0:IF,5:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,6	84
0x400e0d6	              0x55	                                push rbp	      7005	ops.c	FUNCTION_86
0x400e0d7	          0x4889e5	                            mov rbp, rsp	      7005	ops.c	FUNCTION_86
0x400e0da	        0x4883ec40	                           sub rsp, 0x40	      7005	ops.c	FUNCTION_86
0x400e0de	          0x897ddc	             mov dword [rbp - 0x24], edi	      7005	ops.c	FUNCTION_86
0x400e0e1	        0x488975d0	             mov qword [rbp - 0x30], rsi	      7005	ops.c	FUNCTION_86
0x400e0e5	          0x8955d8	             mov dword [rbp - 0x28], edx	      7005	ops.c	FUNCTION_86
0x400e0e8	          0x894dcc	             mov dword [rbp - 0x34], ecx	      7005	ops.c	FUNCTION_86
0x400e0eb	        0x448945c8	             mov dword [rbp - 0x38], r8d	      7005	ops.c	FUNCTION_86
0x400e0ef	        0x4c894dc0	              mov qword [rbp - 0x40], r9	      7005	ops.c	FUNCTION_86
0x400e0f3	    0x64488b042528	                mov rax, qword fs:[0x28]	      7005	ops.c	FUNCTION_86
0x400e0fc	        0x488945f8	                mov qword [rbp - 8], rax	      7005	ops.c	FUNCTION_86
0x400e100	            0x31c0	                            xor eax, eax	      7005	ops.c	FUNCTION_86
0x400e102	        0x837ddc2f	           cmp dword [rbp - 0x24], 0x2f 	      7008	ops.c	FUNCTION_86	IF_1
0x400e106	            0x7406	                            je 0x400e10e	      7008	ops.c	FUNCTION_86	IF_1
0x400e108	        0x837ddc3d	           cmp dword [rbp - 0x24], 0x3d 	      7010	ops.c	FUNCTION_86	IF_1
0x400e10c	            0x756f	                           jne 0x400e17d	      7010	ops.c	FUNCTION_86	IF_1
0x400e10e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x400e112	          0x488b00	                    mov rax, qword [rax]	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x400e115	          0x4885c0	                           test rax, rax	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x400e118	            0x750a	                           jne 0x400e124	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x400e11a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7017	ops.c	FUNCTION_86	IF_1	IF_2
0x400e122	            0xeb32	                           jmp 0x400e156	      7017	ops.c	FUNCTION_86	IF_1	IF_2
0x400e124	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7018	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400e128	        0x4883c008	                              add rax, 8	      7018	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400e12c	          0x488b00	                    mov rax, qword [rax]	      7018	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400e12f	          0x4885c0	                           test rax, rax	      7018	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400e132	            0x7417	                            je 0x400e14b	      7018	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400e134	      0xbf00000000	                              mov edi, 0	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400e139	      0xe800000000	                          call 0x400e13e	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400e13e	          0x4889c7	                            mov rdi, rax	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400e141	      0xe800000000	                          call 0x400e146	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400e146	      0xe99d000000	                           jmp 0x400e1e8	      7022	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400e14b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7025	ops.c	FUNCTION_86	IF_1	ELSE_2
0x400e14f	          0x488b00	                    mov rax, qword [rax]	      7025	ops.c	FUNCTION_86	IF_1	ELSE_2
0x400e152	        0x488945f0	             mov qword [rbp - 0x10], rax	      7025	ops.c	FUNCTION_86	IF_1	ELSE_2
0x400e156	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400e159	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400e15d	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400e160	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400e164	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400e167	          0x4989f9	                             mov r9, rdi	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400e16a	          0x4189c8	                            mov r8d, ecx	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400e16d	            0x89d1	                            mov ecx, edx	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400e16f	      0xbaffffffff	                     mov edx, 0xffffffff	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400e174	            0x89c7	                            mov edi, eax	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400e176	      0xe800000000	                          call 0x400e17b	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400e17b	            0xeb6b	                           jmp 0x400e1e8	      7027	ops.c	FUNCTION_86	IF_1
0x400e17d	        0x837ddc5f	           cmp dword [rbp - 0x24], 0x5f 	      7030	ops.c	FUNCTION_86	IF_4
0x400e181	            0x7461	                            je 0x400e1e4	      7030	ops.c	FUNCTION_86	IF_4
0x400e183	        0x488d7dc8	                   lea rdi, [rbp - 0x38]	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400e187	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400e18a	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400e18e	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400e192	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400e195	          0x4989f8	                             mov r8, rdi	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400e198	            0x89c7	                            mov edi, eax	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400e19a	      0xe843feffff	                 call sym.init_write_reg	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400e19f	            0x85c0	                           test eax, eax	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400e1a1	            0x7444	                            je 0x400e1e7	      7033	ops.c	FUNCTION_86	IF_5	CALL_4
0x400e1a3	          0x8b75c8	             mov esi, dword [rbp - 0x38]	      7037	ops.c	FUNCTION_86	CALL_5
0x400e1a6	    0x488b05000000	            mov rax, qword [0x0400e1ad] 	      7037	ops.c	FUNCTION_86	CALL_5
0x400e1ad	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      7037	ops.c	FUNCTION_86	CALL_5
0x400e1b1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7037	ops.c	FUNCTION_86	CALL_5
0x400e1b5	    0x41b901000000	                              mov r9d, 1	      7037	ops.c	FUNCTION_86	CALL_5
0x400e1bb	          0x4989c8	                             mov r8, rcx	      7037	ops.c	FUNCTION_86	CALL_5
0x400e1be	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7037	ops.c	FUNCTION_86	CALL_5
0x400e1c5	          0x4889c7	                            mov rdi, rax	      7037	ops.c	FUNCTION_86	CALL_5
0x400e1c8	      0xe85c020000	                     call sym.str_to_reg	      7037	ops.c	FUNCTION_86	CALL_5
0x400e1cd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7039	ops.c	FUNCTION_86	CALL_6
0x400e1d1	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      7039	ops.c	FUNCTION_86	CALL_6
0x400e1d5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7039	ops.c	FUNCTION_86	CALL_6
0x400e1d8	          0x4889ce	                            mov rsi, rcx	      7039	ops.c	FUNCTION_86	CALL_6
0x400e1db	            0x89c7	                            mov edi, eax	      7039	ops.c	FUNCTION_86	CALL_6
0x400e1dd	      0xe885feffff	               call sym.finish_write_reg	      7039	ops.c	FUNCTION_86	CALL_6
0x400e1e2	            0xeb04	                           jmp 0x400e1e8	      7039	ops.c	FUNCTION_86	CALL_6
0x400e1e4	              0x90	                                     nop	      7031	ops.c	FUNCTION_86	IF_4
0x400e1e5	            0xeb01	                           jmp 0x400e1e8	      7031	ops.c	FUNCTION_86	IF_4
0x400e1e7	              0x90	                                     nop	      7035	ops.c	FUNCTION_86	IF_5
0x400e1e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      7040	ops.c	FUNCTION_86
0x400e1ec	    0x644833042528	                xor rax, qword fs:[0x28]	      7040	ops.c	FUNCTION_86
0x400e1f5	            0x7405	                            je 0x400e1fc	      7040	ops.c	FUNCTION_86
0x400e1f7	      0xe800000000	                          call 0x400e1fc	      7040	ops.c	FUNCTION_86
0x400e1fc	              0xc9	                                   leave	      7040	ops.c	FUNCTION_86
0x400e1fd	              0xc3	                                     ret	      7040	ops.c	FUNCTION_86
clear_oparg	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,1	12
0x400e917	              0x55	                                push rbp	      7268	ops.c	FUNCTION_89
0x400e918	          0x4889e5	                            mov rbp, rsp	      7268	ops.c	FUNCTION_89
0x400e91b	        0x4883ec10	                           sub rsp, 0x10	      7268	ops.c	FUNCTION_89
0x400e91f	        0x48897df8	                mov qword [rbp - 8], rdi	      7268	ops.c	FUNCTION_89
0x400e923	        0x488b45f8	                mov rax, qword [rbp - 8]	      7269	ops.c	FUNCTION_89	CALL_1
0x400e927	      0xba80000000	                           mov edx, 0x80	      7269	ops.c	FUNCTION_89	CALL_1
0x400e92c	      0xbe00000000	                              mov esi, 0	      7269	ops.c	FUNCTION_89	CALL_1
0x400e931	          0x4889c7	                            mov rdi, rax	      7269	ops.c	FUNCTION_89	CALL_1
0x400e934	      0xe800000000	                          call 0x400e939	      7269	ops.c	FUNCTION_89	CALL_1
0x400e939	              0x90	                                     nop	      7270	ops.c	FUNCTION_89
0x400e93a	              0xc9	                                   leave	      7270	ops.c	FUNCTION_89
0x400e93b	              0xc3	                                     ret	      7270	ops.c	FUNCTION_89
put_reedit_in_typebuf	ELSE,1:DO,0:IF,3:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,1	43
0x4001fcd	              0x55	                                push rbp	      1332	ops.c	FUNCTION_24
0x4001fce	          0x4889e5	                            mov rbp, rsp	      1332	ops.c	FUNCTION_24
0x4001fd1	        0x4883ec20	                           sub rsp, 0x20	      1332	ops.c	FUNCTION_24
0x4001fd5	          0x897dec	             mov dword [rbp - 0x14], edi	      1332	ops.c	FUNCTION_24
0x4001fd8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1332	ops.c	FUNCTION_24
0x4001fe1	        0x488945f8	                mov qword [rbp - 8], rax	      1332	ops.c	FUNCTION_24
0x4001fe5	            0x31c0	                            xor eax, eax	      1332	ops.c	FUNCTION_24
0x4001fe7	    0x8b0500000000	            mov eax, dword [0x04001fed] 	      1335	ops.c	FUNCTION_24	IF_1
0x4001fed	            0x85c0	                           test eax, eax	      1335	ops.c	FUNCTION_24	IF_1
0x4001fef	            0x7468	                            je 0x4002059	      1335	ops.c	FUNCTION_24	IF_1
0x4001ff1	    0x8b0500000000	            mov eax, dword [0x04001ff7] 	      1337	ops.c	FUNCTION_24	IF_1	IF_2
0x4001ff7	          0x83f856	                           cmp eax, 0x56	      1337	ops.c	FUNCTION_24	IF_1	IF_2
0x4001ffa	            0x750e	                           jne 0x400200a	      1337	ops.c	FUNCTION_24	IF_1	IF_2
0x4001ffc	        0xc645f067	            mov byte [rbp - 0x10], 0x67 	      1339	ops.c	FUNCTION_24	IF_1	IF_2
0x4002000	        0xc645f152	              mov byte [rbp - 0xf], 0x52	      1340	ops.c	FUNCTION_24	IF_1	IF_2
0x4002004	        0xc645f200	                 mov byte [rbp - 0xe], 0	      1341	ops.c	FUNCTION_24	IF_1	IF_2
0x4002008	            0xeb1f	                           jmp 0x4002029	      1341	ops.c	FUNCTION_24	IF_1	IF_2
0x400200a	    0x8b0500000000	            mov eax, dword [0x04002010] 	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4002010	          0x83f849	                           cmp eax, 0x49	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4002013	            0x7408	                            je 0x400201d	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4002015	    0x8b0500000000	            mov eax, dword [0x0400201b] 	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x400201b	            0xeb05	                           jmp 0x4002022	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x400201d	      0xb869000000	                           mov eax, 0x69	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4002022	          0x8845f0	               mov byte [rbp - 0x10], al	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4002025	        0xc645f100	                 mov byte [rbp - 0xf], 0	      1346	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4002029	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x400202c	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4002030	          0x4189d0	                            mov r8d, edx	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4002033	      0xb901000000	                              mov ecx, 1	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4002038	      0xba00000000	                              mov edx, 0	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x400203d	      0xbeffffffff	                     mov esi, 0xffffffff	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4002042	          0x4889c7	                            mov rdi, rax	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4002045	      0xe800000000	                          call 0x400204a	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x400204a	          0x83f801	                              cmp eax, 1	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x400204d	            0x750a	                           jne 0x4002059	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x400204f	    0xc70500000000	               mov dword [0x04002059], 0	      1349	ops.c	FUNCTION_24	IF_1	IF_3
0x4002059	              0x90	                                     nop	      1351	ops.c	FUNCTION_24
0x400205a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1351	ops.c	FUNCTION_24
0x400205e	    0x644833042528	                xor rax, qword fs:[0x28]	      1351	ops.c	FUNCTION_24
0x4002067	            0x7405	                            je 0x400206e	      1351	ops.c	FUNCTION_24
0x4002069	      0xe800000000	                          call 0x400206e	      1351	ops.c	FUNCTION_24
0x400206e	              0xc9	                                   leave	      1351	ops.c	FUNCTION_24
0x400206f	              0xc3	                                     ret	      1351	ops.c	FUNCTION_24
clip_yank_selection	ELSE,1:DO,0:IF,1:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,2	26
0x400d816	              0x55	                                push rbp	      6635	ops.c	FUNCTION_76
0x400d817	          0x4889e5	                            mov rbp, rsp	      6635	ops.c	FUNCTION_76
0x400d81a	        0x4883ec30	                           sub rsp, 0x30	      6635	ops.c	FUNCTION_76
0x400d81e	          0x897dec	             mov dword [rbp - 0x14], edi	      6635	ops.c	FUNCTION_76
0x400d821	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6635	ops.c	FUNCTION_76
0x400d825	        0x488955d8	             mov qword [rbp - 0x28], rdx	      6635	ops.c	FUNCTION_76
0x400d829	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      6635	ops.c	FUNCTION_76
0x400d82d	    0x48817dd00000	               cmp qword [rbp - 0x30], 0	      6638	ops.c	FUNCTION_76	IF_1
0x400d835	            0x750a	                           jne 0x400d841	      6638	ops.c	FUNCTION_76	IF_1
0x400d837	    0x48c745f80000	                  mov qword [rbp - 8], 0	      6639	ops.c	FUNCTION_76	IF_1
0x400d83f	            0xeb08	                           jmp 0x400d849	      6639	ops.c	FUNCTION_76	IF_1
0x400d841	    0x48c745f80000	                  mov qword [rbp - 8], 0	      6641	ops.c	FUNCTION_76	ELSE_1
0x400d849	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6643	ops.c	FUNCTION_76	CALL_1
0x400d84d	          0x4889c7	                            mov rdi, rax	      6643	ops.c	FUNCTION_76	CALL_1
0x400d850	      0xe800000000	                          call 0x400d855	      6643	ops.c	FUNCTION_76	CALL_1
0x400d855	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      6645	ops.c	FUNCTION_76	CALL_2
0x400d859	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6645	ops.c	FUNCTION_76	CALL_2
0x400d85d	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      6645	ops.c	FUNCTION_76	CALL_2
0x400d860	        0x488b45f8	                mov rax, qword [rbp - 8]	      6645	ops.c	FUNCTION_76	CALL_2
0x400d864	    0x41b900000000	                              mov r9d, 0	      6645	ops.c	FUNCTION_76	CALL_2
0x400d86a	    0x41b800000000	                              mov r8d, 0	      6645	ops.c	FUNCTION_76	CALL_2
0x400d870	          0x4889c7	                            mov rdi, rax	      6645	ops.c	FUNCTION_76	CALL_2
0x400d873	      0xe8b10b0000	                     call sym.str_to_reg	      6645	ops.c	FUNCTION_76	CALL_2
0x400d878	              0x90	                                     nop	      6646	ops.c	FUNCTION_76
0x400d879	              0xc9	                                   leave	      6646	ops.c	FUNCTION_76
0x400d87a	              0xc3	                                     ret	      6646	ops.c	FUNCTION_76
do_put	ELSE,27:DO,1:IF,100:functions,0:WHILE,1:FOR,8:SWITCH,0:CALL,105	1583
0x4006b92	              0x55	                                push rbp	      3462	ops.c	FUNCTION_48
0x4006b93	          0x4889e5	                            mov rbp, rsp	      3462	ops.c	FUNCTION_48
0x4006b96	              0x53	                                push rbx	      3462	ops.c	FUNCTION_48
0x4006b97	    0x4881ec580100	                          sub rsp, 0x158	      3462	ops.c	FUNCTION_48
0x4006b9e	    0x89bdbcfeffff	            mov dword [rbp - 0x144], edi	      3462	ops.c	FUNCTION_48
0x4006ba4	    0x89b5b8feffff	            mov dword [rbp - 0x148], esi	      3462	ops.c	FUNCTION_48
0x4006baa	    0x488995b0feff	            mov qword [rbp - 0x150], rdx	      3462	ops.c	FUNCTION_48
0x4006bb1	    0x898dacfeffff	            mov dword [rbp - 0x154], ecx	      3462	ops.c	FUNCTION_48
0x4006bb7	    0x64488b042528	                mov rax, qword fs:[0x28]	      3462	ops.c	FUNCTION_48
0x4006bc0	        0x488945e8	             mov qword [rbp - 0x18], rax	      3462	ops.c	FUNCTION_48
0x4006bc4	            0x31c0	                            xor eax, eax	      3462	ops.c	FUNCTION_48
0x4006bc6	    0xc785d0feffff	              mov dword [rbp - 0x130], 0	      3466	ops.c	FUNCTION_48
0x4006bd0	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      3473	ops.c	FUNCTION_48
0x4006bdb	    0xc785e0feffff	              mov dword [rbp - 0x120], 0	      3476	ops.c	FUNCTION_48
0x4006be5	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      3479	ops.c	FUNCTION_48
0x4006bf0	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      3480	ops.c	FUNCTION_48
0x4006bfb	    0xc785e8feffff	              mov dword [rbp - 0x118], 0	      3483	ops.c	FUNCTION_48
0x4006c05	    0xc785ecfeffff	              mov dword [rbp - 0x114], 0	      3484	ops.c	FUNCTION_48
0x4006c0f	    0xc785f0feffff	              mov dword [rbp - 0x110], 1	      3485	ops.c	FUNCTION_48
0x4006c19	    0xc785f4feffff	              mov dword [rbp - 0x10c], 0	      3486	ops.c	FUNCTION_48
0x4006c23	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      3488	ops.c	FUNCTION_48
0x4006c2e	    0xc785ccfeffff	              mov dword [rbp - 0x134], 0	      3489	ops.c	FUNCTION_48
0x4006c38	    0x488d85bcfeff	                  lea rax, [rbp - 0x144]	      3494	ops.c	FUNCTION_48	CALL_1
0x4006c3f	          0x4889c7	                            mov rdi, rax	      3494	ops.c	FUNCTION_48	CALL_1
0x4006c42	      0xe800000000	                          call 0x4006c47	      3494	ops.c	FUNCTION_48	CALL_1
0x4006c47	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3495	ops.c	FUNCTION_48	CALL_2
0x4006c4d	            0x89c7	                            mov edi, eax	      3495	ops.c	FUNCTION_48	CALL_2
0x4006c4f	      0xe800000000	                          call 0x4006c54	      3495	ops.c	FUNCTION_48	CALL_2
0x4006c54	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3498	ops.c	FUNCTION_48	IF_1
0x4006c5a	          0x83e001	                              and eax, 1	      3498	ops.c	FUNCTION_48	IF_1
0x4006c5d	            0x85c0	                           test eax, eax	      3498	ops.c	FUNCTION_48	IF_1
0x4006c5f	            0x740b	                            je 0x4006c6c	      3498	ops.c	FUNCTION_48	IF_1
0x4006c61	      0xe800000000	                          call 0x4006c66	      3499	ops.c	FUNCTION_48	CALL_3
0x4006c66	    0x8985e8feffff	            mov dword [rbp - 0x118], eax	      3499	ops.c	FUNCTION_48	CALL_3
0x4006c6c	    0x488b0d000000	            mov rcx, qword [0x04006c73] 	      3501	ops.c	FUNCTION_48
0x4006c73	    0x488b05000000	            mov rax, qword [0x04006c7a] 	      3501	ops.c	FUNCTION_48
0x4006c7a	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3501	ops.c	FUNCTION_48
0x4006c7e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3501	ops.c	FUNCTION_48
0x4006c82	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      3501	ops.c	FUNCTION_48
0x4006c89	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      3501	ops.c	FUNCTION_48
0x4006c90	    0x488b0d000000	            mov rcx, qword [0x04006c97] 	      3502	ops.c	FUNCTION_48
0x4006c97	    0x488b05000000	            mov rax, qword [0x04006c9e] 	      3502	ops.c	FUNCTION_48
0x4006c9e	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3502	ops.c	FUNCTION_48
0x4006ca2	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3502	ops.c	FUNCTION_48
0x4006ca6	    0x488981001200	          mov qword [rcx + 0x1200], rax 	      3502	ops.c	FUNCTION_48
0x4006cad	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	      3502	ops.c	FUNCTION_48
0x4006cb4	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3508	ops.c	FUNCTION_48	IF_2
0x4006cba	          0x83f82e	                           cmp eax, 0x2e	      3508	ops.c	FUNCTION_48	IF_2
0x4006cbd	     0xf8591000000	                           jne 0x4006d54	      3508	ops.c	FUNCTION_48	IF_2
0x4006cc3	    0x8b0500000000	            mov eax, dword [0x04006cc9] 	      3510	ops.c	FUNCTION_48	IF_2	IF_3
0x4006cc9	            0x85c0	                           test eax, eax	      3510	ops.c	FUNCTION_48	IF_2	IF_3
0x4006ccb	            0x740d	                            je 0x4006cda	      3510	ops.c	FUNCTION_48	IF_2	IF_3
0x4006ccd	    0x8b0500000000	            mov eax, dword [0x04006cd3] 	      3511	ops.c	FUNCTION_48	IF_2	CALL_4
0x4006cd3	            0x89c7	                            mov edi, eax	      3511	ops.c	FUNCTION_48	IF_2	CALL_4
0x4006cd5	      0xe800000000	                          call 0x4006cda	      3511	ops.c	FUNCTION_48	IF_2	CALL_4
0x4006cda	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006ce1	            0x7518	                           jne 0x4006cfb	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006ce3	    0x4883bdb0feff	cmp qword [rbp - 0x150], 0xffffffffffffffff	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006ceb	            0x7507	                           jne 0x4006cf4	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006ced	      0xb86f000000	                           mov eax, 0x6f	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006cf2	            0xeb1d	                           jmp 0x4006d11	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006cf4	      0xb861000000	                           mov eax, 0x61	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006cf9	            0xeb16	                           jmp 0x4006d11	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006cfb	    0x4883bdb0feff	cmp qword [rbp - 0x150], 0xffffffffffffffff	      3513	ops.c	FUNCTION_48	IF_2
0x4006d03	            0x7507	                           jne 0x4006d0c	      3513	ops.c	FUNCTION_48	IF_2
0x4006d05	      0xb84f000000	                           mov eax, 0x4f	      3513	ops.c	FUNCTION_48	IF_2
0x4006d0a	            0xeb05	                           jmp 0x4006d11	      3513	ops.c	FUNCTION_48	IF_2
0x4006d0c	      0xb869000000	                           mov eax, 0x69	      3513	ops.c	FUNCTION_48	IF_2
0x4006d11	    0x488b8db0feff	            mov rcx, qword [rbp - 0x150]	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006d18	      0xba00000000	                              mov edx, 0	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006d1d	          0x4889ce	                            mov rsi, rcx	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006d20	            0x89c7	                            mov edi, eax	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006d22	      0xe800000000	                          call 0x4006d27	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x4006d27	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4006d2d	          0x83e002	                              and eax, 2	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4006d30	            0x85c0	                           test eax, eax	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4006d32	     0xf84211c0000	                            je 0x4008959	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4006d38	      0xe800000000	                          call 0x4006d3d	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4006d3d	            0x85c0	                           test eax, eax	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4006d3f	     0xf84141c0000	                            je 0x4008959	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x4006d45	      0xbf6c000000	                           mov edi, 0x6c	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x4006d4a	      0xe800000000	                          call 0x4006d4f	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x4006d4f	      0xe9051c0000	                           jmp 0x4008959	      3518	ops.c	FUNCTION_48	IF_2
0x4006d54	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4006d5a	    0x488d95ccfeff	                  lea rdx, [rbp - 0x134]	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4006d61	    0x488db520ffff	                   lea rsi, [rbp - 0xe0]	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4006d68	      0xb901000000	                              mov ecx, 1	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4006d6d	            0x89c7	                            mov edi, eax	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4006d6f	      0xe800000000	                          call 0x4006d74	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4006d74	            0x85c0	                           test eax, eax	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4006d76	            0x7410	                            je 0x4006d88	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x4006d78	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3527	ops.c	FUNCTION_48	IF_5	IF_6
0x4006d7f	          0x4885c0	                           test rax, rax	      3527	ops.c	FUNCTION_48	IF_5	IF_6
0x4006d82	     0xf84d41b0000	                            je 0x400895c	      3527	ops.c	FUNCTION_48	IF_5	IF_6
0x4006d88	    0x488b05000000	            mov rax, qword [0x04006d8f] 	      3533	ops.c	FUNCTION_48	CALL_9
0x4006d8f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3533	ops.c	FUNCTION_48	CALL_9
0x4006d93	        0x488d5001	                      lea rdx, [rax + 1]	      3533	ops.c	FUNCTION_48	CALL_9
0x4006d97	    0x488b05000000	            mov rax, qword [0x04006d9e] 	      3533	ops.c	FUNCTION_48	CALL_9
0x4006d9e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3533	ops.c	FUNCTION_48	CALL_9
0x4006da2	          0x4889d6	                            mov rsi, rdx	      3533	ops.c	FUNCTION_48	CALL_9
0x4006da5	          0x4889c7	                            mov rdi, rax	      3533	ops.c	FUNCTION_48	CALL_9
0x4006da8	      0xe800000000	                          call 0x4006dad	      3533	ops.c	FUNCTION_48	CALL_9
0x4006dad	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3535	ops.c	FUNCTION_48	IF_7
0x4006db4	          0x4885c0	                           test rax, rax	      3535	ops.c	FUNCTION_48	IF_7
0x4006db7	     0xf8437010000	                            je 0x4006ef4	      3535	ops.c	FUNCTION_48	IF_7
0x4006dbd	    0xc785d4feffff	              mov dword [rbp - 0x12c], 0	      3537	ops.c	FUNCTION_48	IF_7
0x4006dc7	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3539	ops.c	FUNCTION_48	IF_7	IF_8
0x4006dcd	          0x83f83d	                           cmp eax, 0x3d	      3539	ops.c	FUNCTION_48	IF_7	IF_8
0x4006dd0	     0xf8503010000	                           jne 0x4006ed9	      3539	ops.c	FUNCTION_48	IF_7	IF_8
0x4006dd6	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	      3546	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x4006de1	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x4006de8	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x4006def	      0xe99c000000	                           jmp 0x4006e90	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4006df4	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3550	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x4006dfc	            0x7423	                            je 0x4006e21	      3550	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x4006dfe	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3551	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x4006e05	    0x488d14c50000	                        lea rdx, [rax*8]	      3551	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x4006e0d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3551	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x4006e14	          0x4801c2	                            add rdx, rax	      3551	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x4006e17	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3551	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x4006e1e	          0x488902	                    mov qword [rdx], rax	      3551	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x4006e21	    0x48838530ffff	               add qword [rbp - 0xd0], 1	      3552	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4006e29	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4006e30	      0xbe0a000000	                            mov esi, 0xa	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4006e35	          0x4889c7	                            mov rdi, rax	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4006e38	      0xe800000000	                          call 0x4006e3d	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4006e3d	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x4006e44	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4006e4b	          0x4885c0	                           test rax, rax	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4006e4e	            0x7440	                            je 0x4006e90	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4006e50	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3556	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x4006e58	            0x740a	                            je 0x4006e64	      3556	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x4006e5a	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3557	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x4006e61	          0xc60000	                       mov byte [rax], 0	      3557	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x4006e64	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4006e6b	        0x4883c001	                              add rax, 1	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4006e6f	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x4006e76	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4006e7d	           0xfb600	                   movzx eax, byte [rax]	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4006e80	            0x84c0	                             test al, al	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4006e82	            0x750c	                           jne 0x4006e90	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4006e84	    0xc785d4feffff	              mov dword [rbp - 0x12c], 1	      3562	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4006e8e	            0xeb10	                           jmp 0x4006ea0	      3563	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x4006e90	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4006e97	          0x4885c0	                           test rax, rax	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4006e9a	     0xf8554ffffff	                           jne 0x4006df4	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x4006ea0	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3567	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_13
0x4006ea8	     0xf85a4000000	                           jne 0x4006f52	      3567	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_13
0x4006eae	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x4006eb5	          0xc1e003	                              shl eax, 3	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x4006eb8	            0x89c7	                            mov edi, eax	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x4006eba	      0xe800000000	                          call 0x4006ebf	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x4006ebf	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x4006ec6	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x4006ece	     0xf842e1a0000	                            je 0x4008902	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x4006ed4	      0xe9fdfeffff	                           jmp 0x4006dd6	      3573	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x4006ed9	    0x48c78530ffff	               mov qword [rbp - 0xd0], 1	      3578	ops.c	FUNCTION_48	IF_7	ELSE_1
0x4006ee4	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      3579	ops.c	FUNCTION_48	IF_7	ELSE_1
0x4006eeb	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3579	ops.c	FUNCTION_48	IF_7	ELSE_1
0x4006ef2	            0xeb5f	                           jmp 0x4006f53	      3579	ops.c	FUNCTION_48	IF_7	ELSE_1
0x4006ef4	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x4006efa	      0xbe00000000	                              mov esi, 0	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x4006eff	            0x89c7	                            mov edi, eax	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x4006f01	      0xe800000000	                          call 0x4006f06	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x4006f06	    0x488b05000000	            mov rax, qword [0x04006f0d] 	      3586	ops.c	FUNCTION_48	ELSE_2
0x4006f0d	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3586	ops.c	FUNCTION_48	ELSE_2
0x4006f11	           0xfb6c0	                           movzx eax, al	      3586	ops.c	FUNCTION_48	ELSE_2
0x4006f14	    0x8985d4feffff	            mov dword [rbp - 0x12c], eax	      3586	ops.c	FUNCTION_48	ELSE_2
0x4006f1a	    0x488b05000000	            mov rax, qword [0x04006f21] 	      3587	ops.c	FUNCTION_48	ELSE_2
0x4006f21	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3587	ops.c	FUNCTION_48	ELSE_2
0x4006f24	            0x4898	                                    cdqe	      3587	ops.c	FUNCTION_48	ELSE_2
0x4006f26	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      3587	ops.c	FUNCTION_48	ELSE_2
0x4006f2d	    0x488b05000000	            mov rax, qword [0x04006f34] 	      3588	ops.c	FUNCTION_48	ELSE_2
0x4006f34	        0x488b4008	                mov rax, qword [rax + 8]	      3588	ops.c	FUNCTION_48	ELSE_2
0x4006f38	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      3588	ops.c	FUNCTION_48	ELSE_2
0x4006f3f	    0x488b05000000	            mov rax, qword [0x04006f46] 	      3589	ops.c	FUNCTION_48	ELSE_2
0x4006f46	          0x488b00	                    mov rax, qword [rax]	      3589	ops.c	FUNCTION_48	ELSE_2
0x4006f49	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3589	ops.c	FUNCTION_48	ELSE_2
0x4006f50	            0xeb01	                           jmp 0x4006f53	      3589	ops.c	FUNCTION_48	ELSE_2
0x4006f52	              0x90	                                     nop	      3568	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_13
0x4006f53	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 1	      3592	ops.c	FUNCTION_48	IF_15
0x4006f5a	     0xf852a020000	                           jne 0x400718a	      3592	ops.c	FUNCTION_48	IF_15
0x4006f60	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3594	ops.c	FUNCTION_48	IF_15	IF_16
0x4006f66	          0x83e010	                           and eax, 0x10	      3594	ops.c	FUNCTION_48	IF_15	IF_16
0x4006f69	            0x85c0	                           test eax, eax	      3594	ops.c	FUNCTION_48	IF_15	IF_16
0x4006f6b	     0xf8496010000	                            je 0x4007107	      3594	ops.c	FUNCTION_48	IF_15	IF_16
0x4006f71	      0xe800000000	                          call 0x4006f76	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x4006f76	            0x85c0	                           test eax, eax	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x4006f78	     0xf8487190000	                            je 0x4008905	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x4006f7e	      0xe800000000	                          call 0x4006f83	      3602	ops.c	FUNCTION_48	IF_15	IF_16	CALL_14
0x4006f83	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      3602	ops.c	FUNCTION_48	IF_15	IF_16	CALL_14
0x4006f8a	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x4006f91	            0x753b	                           jne 0x4006fce	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x4006f93	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x4006f9a	           0xfb600	                   movzx eax, byte [rax]	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x4006f9d	            0x84c0	                             test al, al	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x4006f9f	            0x742d	                            je 0x4006fce	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x4006fa1	    0x8b0500000000	            mov eax, dword [0x04006fa7] 	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4006fa7	            0x85c0	                           test eax, eax	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4006fa9	            0x7415	                            je 0x4006fc0	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4006fab	    0x488b05000000	            mov rax, qword [0x04006fb2] 	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4006fb2	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4006fb9	          0x4889d7	                            mov rdi, rdx	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4006fbc	            0xffd0	                                call rax	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4006fbe	            0xeb05	                           jmp 0x4006fc5	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4006fc0	      0xb801000000	                              mov eax, 1	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4006fc5	            0x4898	                                    cdqe	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4006fc7	    0x48018560ffff	            add qword [rbp - 0xa0], rax 	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x4006fce	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x4006fd5	          0x4889c7	                            mov rdi, rax	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x4006fd8	      0xe800000000	                          call 0x4006fdd	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x4006fdd	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x4006fe4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3606	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x4006feb	          0x4885c0	                           test rax, rax	      3606	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x4006fee	     0xf8414190000	                            je 0x4008908	      3606	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x4006ff4	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4006ffb	    0x488b05000000	            mov rax, qword [0x04007002] 	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4007002	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4007006	      0xb900000000	                              mov ecx, 0	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x400700b	      0xba00000000	                              mov edx, 0	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4007010	          0x4889c7	                            mov rdi, rax	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4007013	      0xe800000000	                          call 0x4007018	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x4007018	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3609	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x400701f	          0x4889c7	                            mov rdi, rax	      3609	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x4007022	      0xe800000000	                          call 0x4007027	      3609	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x4007027	      0xe800000000	                          call 0x400702c	      3611	ops.c	FUNCTION_48	IF_15	IF_16	CALL_19
0x400702c	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3611	ops.c	FUNCTION_48	IF_15	IF_16	CALL_19
0x4007033	    0x488b05000000	            mov rax, qword [0x0400703a] 	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x400703a	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x400703d	          0x4863d0	                         movsxd rdx, eax	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x4007040	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x4007047	          0x4801d0	                            add rax, rdx	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x400704a	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x4007051	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x4007058	            0x753b	                           jne 0x4007095	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x400705a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x4007061	           0xfb600	                   movzx eax, byte [rax]	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x4007064	            0x84c0	                             test al, al	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x4007066	            0x742d	                            je 0x4007095	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x4007068	    0x8b0500000000	            mov eax, dword [0x0400706e] 	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400706e	            0x85c0	                           test eax, eax	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007070	            0x7415	                            je 0x4007087	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007072	    0x488b05000000	            mov rax, qword [0x04007079] 	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007079	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007080	          0x4889d7	                            mov rdi, rdx	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007083	            0xffd0	                                call rax	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007085	            0xeb05	                           jmp 0x400708c	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007087	      0xb801000000	                              mov eax, 1	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400708c	            0x4898	                                    cdqe	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400708e	    0x48018560ffff	            add qword [rbp - 0xa0], rax 	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x4007095	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x400709c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x40070a3	          0x4829c2	                            sub rdx, rax	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x40070a6	          0x4889d0	                            mov rax, rdx	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x40070a9	            0x89c2	                            mov edx, eax	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x40070ab	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x40070b2	            0x89d6	                            mov esi, edx	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x40070b4	          0x4889c7	                            mov rdi, rax	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x40070b7	      0xe800000000	                          call 0x40070bc	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x40070bc	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x40070c3	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3616	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x40070ca	          0x4885c0	                           test rax, rax	      3616	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x40070cd	     0xf8438180000	                            je 0x400890b	      3616	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x40070d3	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x40070da	    0x488b05000000	            mov rax, qword [0x040070e1] 	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x40070e1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x40070e5	      0xba00000000	                              mov edx, 0	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x40070ea	          0x4889ce	                            mov rsi, rcx	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x40070ed	          0x4889c7	                            mov rdi, rax	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x40070f0	      0xe800000000	                          call 0x40070f5	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x40070f5	    0x48838550ffff	               add qword [rbp - 0xb0], 1	      3619	ops.c	FUNCTION_48	IF_15	IF_16
0x40070fd	    0xc785b8feffff	              mov dword [rbp - 0x148], 1	      3620	ops.c	FUNCTION_48	IF_15	IF_16
0x4007107	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3622	ops.c	FUNCTION_48	IF_15	IF_22
0x400710d	          0x83e020	                           and eax, 0x20	      3622	ops.c	FUNCTION_48	IF_15	IF_22
0x4007110	            0x85c0	                           test eax, eax	      3622	ops.c	FUNCTION_48	IF_15	IF_22
0x4007112	            0x742e	                            je 0x4007142	      3622	ops.c	FUNCTION_48	IF_15	IF_22
0x4007114	    0x488b0d000000	            mov rcx, qword [0x0400711b] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x400711b	    0x488b05000000	            mov rax, qword [0x04007122] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4007122	    0x488b90100300	           mov rdx, qword [rax + 0x310] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4007129	    0x488b80080300	           mov rax, qword [rax + 0x308] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4007130	        0x48894138	             mov qword [rcx + 0x38], rax	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4007134	        0x48895140	             mov qword [rcx + 0x40], rdx	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x4007138	    0xc785b8feffff	              mov dword [rbp - 0x148], 1	      3626	ops.c	FUNCTION_48	IF_15	IF_22
0x4007142	    0x488b0d000000	            mov rcx, qword [0x04007149] 	      3628	ops.c	FUNCTION_48	IF_15
0x4007149	    0x488b05000000	            mov rax, qword [0x04007150] 	      3628	ops.c	FUNCTION_48	IF_15
0x4007150	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3628	ops.c	FUNCTION_48	IF_15
0x4007154	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3628	ops.c	FUNCTION_48	IF_15
0x4007158	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      3628	ops.c	FUNCTION_48	IF_15
0x400715f	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      3628	ops.c	FUNCTION_48	IF_15
0x4007166	    0x488b0d000000	            mov rcx, qword [0x0400716d] 	      3629	ops.c	FUNCTION_48	IF_15
0x400716d	    0x488b05000000	            mov rax, qword [0x04007174] 	      3629	ops.c	FUNCTION_48	IF_15
0x4007174	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3629	ops.c	FUNCTION_48	IF_15
0x4007178	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3629	ops.c	FUNCTION_48	IF_15
0x400717c	    0x488981001200	          mov qword [rcx + 0x1200], rax 	      3629	ops.c	FUNCTION_48	IF_15
0x4007183	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	      3629	ops.c	FUNCTION_48	IF_15
0x400718a	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3632	ops.c	FUNCTION_48	IF_23
0x4007190	          0x83e008	                              and eax, 8	      3632	ops.c	FUNCTION_48	IF_23
0x4007193	            0x85c0	                           test eax, eax	      3632	ops.c	FUNCTION_48	IF_23
0x4007195	            0x740a	                            je 0x40071a1	      3632	ops.c	FUNCTION_48	IF_23
0x4007197	    0xc785d4feffff	              mov dword [rbp - 0x12c], 1	      3633	ops.c	FUNCTION_48	IF_23
0x40071a1	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      3635	ops.c	FUNCTION_48	IF_24
0x40071a9	            0x740a	                            je 0x40071b5	      3635	ops.c	FUNCTION_48	IF_24
0x40071ab	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3635	ops.c	FUNCTION_48	IF_24
0x40071b3	            0x753b	                           jne 0x40071f0	      3635	ops.c	FUNCTION_48	IF_24
0x40071b5	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071bb	            0x85c0	                           test eax, eax	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071bd	            0x7412	                            je 0x40071d1	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071bf	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071c5	            0x89c7	                            mov edi, eax	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071c7	      0xe800000000	                          call 0x40071cc	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071cc	          0x4889c3	                            mov rbx, rax	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071cf	            0xeb05	                           jmp 0x40071d6	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071d1	      0xbb00000000	                              mov ebx, 0	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071d6	      0xbf00000000	                              mov edi, 0	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071db	      0xe800000000	                          call 0x40071e0	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071e0	          0x4889de	                            mov rsi, rbx	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071e3	          0x4889c7	                            mov rdi, rax	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071e6	      0xe800000000	                          call 0x40071eb	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x40071eb	      0xe925170000	                           jmp 0x4008915	      3639	ops.c	FUNCTION_48	IF_24
0x40071f0	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 2	      3642	ops.c	FUNCTION_48	IF_25
0x40071f7	            0x7579	                           jne 0x4007272	      3642	ops.c	FUNCTION_48	IF_25
0x40071f9	    0x488b05000000	            mov rax, qword [0x04007200] 	      3644	ops.c	FUNCTION_48	IF_25
0x4007200	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3644	ops.c	FUNCTION_48	IF_25
0x4007204	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3644	ops.c	FUNCTION_48	IF_25
0x400720b	          0x4801d0	                            add rax, rdx	      3644	ops.c	FUNCTION_48	IF_25
0x400720e	        0x4883c001	                              add rax, 1	      3644	ops.c	FUNCTION_48	IF_25
0x4007212	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3644	ops.c	FUNCTION_48	IF_25
0x4007219	    0x488b05000000	            mov rax, qword [0x04007220] 	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x4007220	          0x488b10	                    mov rdx, qword [rax]	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x4007223	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x400722a	          0x4839c2	                            cmp rdx, rax	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x400722d	            0x7d15	                           jge 0x4007244	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x400722f	    0x488b05000000	            mov rax, qword [0x04007236] 	      3646	ops.c	FUNCTION_48	IF_25	IF_26
0x4007236	          0x488b00	                    mov rax, qword [rax]	      3646	ops.c	FUNCTION_48	IF_25	IF_26
0x4007239	        0x4883c001	                              add rax, 1	      3646	ops.c	FUNCTION_48	IF_25	IF_26
0x400723d	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3646	ops.c	FUNCTION_48	IF_25	IF_26
0x4007244	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400724b	    0x488b15000000	            mov rdx, qword [0x04007252] 	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4007252	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4007256	        0x4883ea01	                              sub rdx, 1	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400725a	          0x4889c6	                            mov rsi, rax	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400725d	          0x4889d7	                            mov rdi, rdx	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4007260	      0xe800000000	                          call 0x4007265	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4007265	            0x85c0	                           test eax, eax	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x4007267	     0xf854a010000	                           jne 0x40073b7	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400726d	      0xe9a3160000	                           jmp 0x4008915	      3648	ops.c	FUNCTION_48	IF_25	IF_27
0x4007272	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 1	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007279	     0xf852b010000	                           jne 0x40073aa	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400727f	    0x488b05000000	            mov rax, qword [0x04007286] 	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007286	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400728a	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007291	    0x83bdb8feffff	cmp dword [rbp - 0x148], 0xffffffffffffffff	      3656	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_29
0x4007298	            0x7520	                           jne 0x40072ba	      3656	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_29
0x400729a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x40072a1	    0x488d8d18ffff	                   lea rcx, [rbp - 0xe8]	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x40072a8	      0xba00000000	                              mov edx, 0	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x40072ad	          0x4889ce	                            mov rsi, rcx	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x40072b0	          0x4889c7	                            mov rdi, rax	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x40072b3	      0xe800000000	                          call 0x40072b8	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x40072b8	            0xeb1b	                           jmp 0x40072d5	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x40072ba	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x40072c1	    0x488d9518ffff	                   lea rdx, [rbp - 0xe8]	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x40072c8	      0xbe00000000	                              mov esi, 0	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x40072cd	          0x4889c7	                            mov rdi, rax	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x40072d0	      0xe800000000	                          call 0x40072d5	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x40072d5	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3661	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x40072dc	            0x7512	                           jne 0x40072f0	      3661	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x40072de	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3662	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x40072e5	        0x4883c001	                              add rax, 1	      3662	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x40072e9	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3662	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x40072f0	    0x488b05000000	            mov rax, qword [0x040072f7] 	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40072f7	          0x488b00	                    mov rax, qword [rax]	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40072fa	        0x4883f801	                              cmp rax, 1	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x40072fe	            0x7527	                           jne 0x4007327	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007300	      0xbf01000000	                              mov edi, 1	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007305	      0xe800000000	                          call 0x400730a	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400730a	           0xfb600	                   movzx eax, byte [rax]	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400730d	            0x84c0	                             test al, al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400730f	            0x7516	                           jne 0x4007327	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007311	      0xbe02000000	                              mov esi, 2	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007316	      0xbf00000000	                              mov edi, 0	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400731b	      0xe800000000	                          call 0x4007320	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007320	            0x85c0	                           test eax, eax	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007322	           0xf94c0	                                 sete al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007325	            0xeb22	                           jmp 0x4007349	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007327	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400732e	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007335	        0x4883ea01	                              sub rdx, 1	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007339	          0x4889c6	                            mov rsi, rax	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400733c	          0x4889d7	                            mov rdi, rdx	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400733f	      0xe800000000	                          call 0x4007344	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007344	            0x85c0	                           test eax, eax	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007346	           0xf94c0	                                 sete al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007349	            0x84c0	                             test al, al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400734b	     0xf85bd150000	                           jne 0x400890e	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x4007351	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3668	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007358	            0x7518	                           jne 0x4007372	      3668	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x400735a	    0x488b05000000	            mov rax, qword [0x04007361] 	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007361	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007368	        0x4883ea01	                              sub rdx, 1	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x400736c	        0x48895038	             mov qword [rax + 0x38], rdx	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007370	            0xeb12	                           jmp 0x4007384	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x4007372	    0x488b05000000	            mov rax, qword [0x04007379] 	      3671	ops.c	FUNCTION_48	ELSE_3	IF_28	ELSE_5
0x4007379	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3671	ops.c	FUNCTION_48	ELSE_3	IF_28	ELSE_5
0x4007380	        0x48895038	             mov qword [rax + 0x38], rdx	      3671	ops.c	FUNCTION_48	ELSE_3	IF_28	ELSE_5
0x4007384	    0x488b0d000000	            mov rcx, qword [0x0400738b] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400738b	    0x488b05000000	            mov rax, qword [0x04007392] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007392	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x4007396	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400739a	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x40073a1	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x40073a8	            0xeb0d	                           jmp 0x40073b7	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x40073aa	      0xe800000000	                          call 0x40073af	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x40073af	            0x85c0	                           test eax, eax	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x40073b1	     0xf845a150000	                            je 0x4008911	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x40073b7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3678	ops.c	FUNCTION_48	CALL_33
0x40073be	          0x488b00	                    mov rax, qword [rax]	      3678	ops.c	FUNCTION_48	CALL_33
0x40073c1	          0x4889c7	                            mov rdi, rax	      3678	ops.c	FUNCTION_48	CALL_33
0x40073c4	      0xe800000000	                          call 0x40073c9	      3678	ops.c	FUNCTION_48	CALL_33
0x40073c9	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      3678	ops.c	FUNCTION_48	CALL_33
0x40073cf	    0x8b0500000000	            mov eax, dword [0x040073d5] 	      3681	ops.c	FUNCTION_48	IF_34
0x40073d5	          0x83f804	                              cmp eax, 4	      3681	ops.c	FUNCTION_48	IF_34
0x40073d8	     0xf85ac000000	                           jne 0x400748a	      3681	ops.c	FUNCTION_48	IF_34
0x40073de	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3681	ops.c	FUNCTION_48	IF_34
0x40073e5	     0xf859f000000	                           jne 0x400748a	      3681	ops.c	FUNCTION_48	IF_34
0x40073eb	      0xe800000000	                          call 0x40073f0	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x40073f0	          0x83f809	                              cmp eax, 9	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x40073f3	            0x7561	                           jne 0x4007456	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x40073f5	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x40073fc	            0x7527	                           jne 0x4007425	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x40073fe	    0x488b05000000	            mov rax, qword [0x04007405] 	      3688	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007405	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3688	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007408	          0x4863d0	                         movsxd rdx, eax	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400740b	    0x488b05000000	            mov rax, qword [0x04007412] 	      3688	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007412	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      3688	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007419	        0x4883e801	                              sub rax, 1	      3688	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400741d	          0x4839c2	                            cmp rdx, rax	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007420	           0xf9cc0	                                 setl al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007423	            0xeb0f	                           jmp 0x4007434	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007425	    0x488b05000000	            mov rax, qword [0x0400742c] 	      3689	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400742c	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3689	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400742f	            0x85c0	                           test eax, eax	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007431	           0xf9fc0	                                 setg al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007434	            0x84c0	                             test al, al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007436	            0x740e	                            je 0x4007446	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x4007438	      0xe800000000	                          call 0x400743d	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x400743d	            0x89c7	                            mov edi, eax	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x400743f	      0xe800000000	                          call 0x4007444	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x4007444	            0xeb44	                           jmp 0x400748a	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x4007446	    0x488b05000000	            mov rax, qword [0x0400744d] 	      3692	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x400744d	    0xc74044000000	               mov dword [rax + 0x44], 0	      3692	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x4007454	            0xeb34	                           jmp 0x400748a	      3692	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x4007456	    0x488b05000000	            mov rax, qword [0x0400745d] 	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400745d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4007460	            0x85c0	                           test eax, eax	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4007462	            0x7f09	                            jg 0x400746d	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4007464	      0xe800000000	                          call 0x4007469	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x4007469	            0x85c0	                           test eax, eax	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400746b	            0x751d	                           jne 0x400748a	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400746d	      0xe800000000	                          call 0x4007472	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007472	            0x89c2	                            mov edx, eax	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007474	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400747b	           0xf94c0	                                 sete al	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400747e	           0xfb6c0	                           movzx eax, al	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007481	             0x1d0	                            add eax, edx	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007483	            0x89c7	                            mov edi, eax	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x4007485	      0xe800000000	                          call 0x400748a	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400748a	    0x488b05000000	            mov rax, qword [0x04007491] 	      3699	ops.c	FUNCTION_48
0x4007491	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3699	ops.c	FUNCTION_48
0x4007495	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3699	ops.c	FUNCTION_48
0x400749c	    0x488b05000000	            mov rax, qword [0x040074a3] 	      3700	ops.c	FUNCTION_48
0x40074a3	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3700	ops.c	FUNCTION_48
0x40074a6	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3700	ops.c	FUNCTION_48
0x40074ac	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 2	      3705	ops.c	FUNCTION_48	IF_38
0x40074b3	     0xf85c4080000	                           jne 0x4007d7d	      3705	ops.c	FUNCTION_48	IF_38
0x40074b9	      0xe800000000	                          call 0x40074be	      3707	ops.c	FUNCTION_48	IF_38	CALL_40
0x40074be	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      3707	ops.c	FUNCTION_48	IF_38	CALL_40
0x40074c4	    0xc74590000000	               mov dword [rbp - 0x70], 0	      3708	ops.c	FUNCTION_48	IF_38
0x40074cb	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x40074d2	     0xf85df000000	                           jne 0x40075b7	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x40074d8	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x40074df	     0xf84d2000000	                            je 0x40075b7	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x40074e5	    0x8b0500000000	            mov eax, dword [0x040074eb] 	      3713	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x40074eb	          0x83f804	                              cmp eax, 4	      3713	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x40074ee	            0x752f	                           jne 0x400751f	      3713	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x40074f0	    0x488b05000000	            mov rax, qword [0x040074f7] 	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x40074f7	        0x488d7038	                   lea rsi, [rax + 0x38]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x40074fb	    0x488b05000000	            mov rax, qword [0x04007502] 	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4007502	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4007506	    0x488d95c8feff	                  lea rdx, [rbp - 0x138]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400750d	          0x4989c8	                             mov r8, rcx	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4007510	      0xb900000000	                              mov ecx, 0	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4007515	          0x4889c7	                            mov rdi, rax	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x4007518	      0xe800000000	                          call 0x400751d	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400751d	            0xeb2e	                           jmp 0x400754d	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400751f	    0x488b05000000	            mov rax, qword [0x04007526] 	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x4007526	        0x488d7038	                   lea rsi, [rax + 0x38]	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x400752a	    0x488b05000000	            mov rax, qword [0x04007531] 	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x4007531	    0x488d95c8feff	                  lea rdx, [rbp - 0x138]	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x4007538	          0x4989d0	                             mov r8, rdx	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x400753b	      0xb900000000	                              mov ecx, 0	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x4007540	      0xba00000000	                              mov edx, 0	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x4007545	          0x4889c7	                            mov rdi, rax	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x4007548	      0xe800000000	                          call 0x400754d	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x400754d	    0x8b0500000000	            mov eax, dword [0x04007553] 	      3720	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x4007553	            0x85c0	                           test eax, eax	      3720	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x4007555	            0x742b	                            je 0x4007582	      3720	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x4007557	    0x488b1d000000	            mov rbx, qword [0x0400755e] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400755e	      0xe800000000	                          call 0x4007563	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x4007563	          0x4889c7	                            mov rdi, rax	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x4007566	            0xffd3	                                call rbx	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x4007568	            0x89c1	                            mov ecx, eax	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400756a	    0x488b05000000	            mov rax, qword [0x04007571] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x4007571	    0x488b15000000	            mov rdx, qword [0x04007578] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x4007578	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400757b	             0x1ca	                            add edx, ecx	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400757d	          0x895040	             mov dword [rax + 0x40], edx	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x4007580	            0xeb24	                           jmp 0x40075a6	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x4007582	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 9	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4007589	            0x750b	                           jne 0x4007596	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400758b	    0x8b0500000000	            mov eax, dword [0x04007591] 	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4007591	          0x83f804	                              cmp eax, 4	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4007594	            0x7410	                            je 0x40075a6	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x4007596	    0x488b05000000	            mov rax, qword [0x0400759d] 	      3728	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400759d	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3728	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x40075a0	          0x83c201	                              add edx, 1	      3728	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x40075a3	          0x895040	             mov dword [rax + 0x40], edx	      3728	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x40075a6	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3729	ops.c	FUNCTION_48	IF_38	IF_39
0x40075ac	          0x83c001	                              add eax, 1	      3729	ops.c	FUNCTION_48	IF_38	IF_39
0x40075af	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3729	ops.c	FUNCTION_48	IF_38	IF_39
0x40075b5	            0xeb2d	                           jmp 0x40075e4	      3729	ops.c	FUNCTION_48	IF_38	IF_39
0x40075b7	    0x488b05000000	            mov rax, qword [0x040075be] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x40075be	        0x488d7038	                   lea rsi, [rax + 0x38]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x40075c2	    0x488b05000000	            mov rax, qword [0x040075c9] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x40075c9	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x40075cd	    0x488d95c8feff	                  lea rdx, [rbp - 0x138]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x40075d4	          0x4989c8	                             mov r8, rcx	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x40075d7	      0xb900000000	                              mov ecx, 0	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x40075dc	          0x4889c7	                            mov rdi, rax	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x40075df	      0xe800000000	                          call 0x40075e4	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x40075e4	    0x488b05000000	            mov rax, qword [0x040075eb] 	      3735	ops.c	FUNCTION_48	IF_38
0x40075eb	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3735	ops.c	FUNCTION_48	IF_38
0x40075ee	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3735	ops.c	FUNCTION_48	IF_38
0x40075f4	             0x1d0	                            add eax, edx	      3735	ops.c	FUNCTION_48	IF_38
0x40075f6	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3735	ops.c	FUNCTION_48	IF_38
0x40075fc	    0x8b0500000000	            mov eax, dword [0x04007602] 	      3736	ops.c	FUNCTION_48	IF_38	IF_43
0x4007602	          0x83f804	                              cmp eax, 4	      3736	ops.c	FUNCTION_48	IF_38	IF_43
0x4007605	     0xf85bf000000	                           jne 0x40076ca	      3736	ops.c	FUNCTION_48	IF_38	IF_43
0x400760b	    0x488b05000000	            mov rax, qword [0x04007612] 	      3737	ops.c	FUNCTION_48	IF_38	IF_43
0x4007612	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3737	ops.c	FUNCTION_48	IF_38	IF_43
0x4007615	            0x85c0	                           test eax, eax	      3737	ops.c	FUNCTION_48	IF_38	IF_43
0x4007617	            0x7f15	                            jg 0x400762e	      3737	ops.c	FUNCTION_48	IF_38	IF_43
0x4007619	    0x488b05000000	            mov rax, qword [0x04007620] 	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x4007620	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x4007623	          0x8b4590	             mov eax, dword [rbp - 0x70]	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x4007626	            0x39c2	                            cmp edx, eax	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x4007628	     0xf859c000000	                           jne 0x40076ca	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x400762e	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4007635	            0x7518	                           jne 0x400764f	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4007637	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x400763e	            0x750f	                           jne 0x400764f	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4007640	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3741	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4007646	          0x83c001	                              add eax, 1	      3741	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x4007649	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3741	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x400764f	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x4007656	            0x7419	                            je 0x4007671	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x4007658	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400765f	            0x7410	                            je 0x4007671	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x4007661	    0x488b05000000	            mov rax, qword [0x04007668] 	      3743	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x4007668	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3743	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400766b	          0x83c201	                              add edx, 1	      3743	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400766e	          0x895040	             mov dword [rax + 0x40], edx	      3743	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x4007671	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 9	      3744	ops.c	FUNCTION_48	IF_38	IF_43	IF_46
0x4007678	            0x7550	                           jne 0x40076ca	      3744	ops.c	FUNCTION_48	IF_38	IF_43	IF_46
0x400767a	    0x83bdb8feffff	cmp dword [rbp - 0x148], 0xffffffffffffffff	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x4007681	            0x751e	                           jne 0x40076a1	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x4007683	    0x488b05000000	            mov rax, qword [0x0400768a] 	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400768a	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400768d	            0x85c0	                           test eax, eax	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400768f	            0x7410	                            je 0x40076a1	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x4007691	    0x488b05000000	            mov rax, qword [0x04007698] 	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x4007698	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400769b	          0x83ea01	                              sub edx, 1	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400769e	          0x895040	             mov dword [rax + 0x40], edx	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x40076a1	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40076a8	            0x7520	                           jne 0x40076ca	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40076aa	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40076b0	          0x8d50ff	                      lea edx, [rax - 1]	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40076b3	          0x8b4590	             mov eax, dword [rbp - 0x70]	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40076b6	            0x39c2	                            cmp edx, eax	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40076b8	            0x7510	                           jne 0x40076ca	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40076ba	    0x488b05000000	            mov rax, qword [0x040076c1] 	      3749	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40076c1	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3749	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40076c4	          0x83c201	                              add edx, 1	      3749	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40076c7	          0x895040	             mov dword [rax + 0x40], edx	      3749	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x40076ca	    0x488b05000000	            mov rax, qword [0x040076d1] 	      3752	ops.c	FUNCTION_48	IF_38
0x40076d1	    0xc74044000000	               mov dword [rax + 0x44], 0	      3752	ops.c	FUNCTION_48	IF_38
0x40076d8	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      3754	ops.c	FUNCTION_48	IF_38
0x40076df	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40076ea	      0xe936050000	                           jmp 0x4007c25	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x40076ef	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      3760	ops.c	FUNCTION_48	IF_38	FOR_2
0x40076f6	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      3761	ops.c	FUNCTION_48	IF_38	FOR_2
0x40076fd	    0xc785d8feffff	              mov dword [rbp - 0x128], 0	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007707	    0xc785dcfeffff	              mov dword [rbp - 0x124], 0	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007711	    0x488b05000000	            mov rax, qword [0x04007718] 	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x4007718	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400771c	    0x488b05000000	            mov rax, qword [0x04007723] 	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x4007723	          0x488b00	                    mov rax, qword [rax]	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x4007726	          0x4839c2	                            cmp rdx, rax	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x4007729	            0x7e31	                           jle 0x400775c	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400772b	    0x488b05000000	            mov rax, qword [0x04007732] 	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4007732	          0x488b00	                    mov rax, qword [rax]	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4007735	      0xb900000000	                              mov ecx, 0	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400773a	      0xba01000000	                              mov edx, 1	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400773f	      0xbe00000000	                              mov esi, 0	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4007744	          0x4889c7	                            mov rdi, rax	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4007747	      0xe800000000	                          call 0x400774c	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400774c	            0x85c0	                           test eax, eax	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400774e	     0xf84e7040000	                            je 0x4007c3b	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x4007754	    0x48838550ffff	               add qword [rbp - 0xb0], 1	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400775c	      0xe800000000	                          call 0x4007761	      3774	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_46
0x4007761	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3774	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_46
0x4007768	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x400776f	          0x4889c7	                            mov rdi, rax	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x4007772	      0xe800000000	                          call 0x4007777	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x4007777	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x400777d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x4007784	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400778b	            0xeb31	                           jmp 0x40077be	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400778d	    0x8b95d8feffff	            mov edx, dword [rbp - 0x128]	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x4007793	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x400779a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x40077a1	          0x4889ce	                            mov rsi, rcx	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x40077a4	          0x4889c7	                            mov rdi, rax	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x40077a7	      0xe800000000	                          call 0x40077ac	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x40077ac	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x40077b2	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      3780	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40077b8	     0x185d8feffff	            add dword [rbp - 0x128], eax	      3780	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40077be	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40077c4	    0x3985d8feffff	           cmp dword [rbp - 0x128], eax 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40077ca	            0x7d0e	                           jge 0x40077da	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40077cc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40077d3	           0xfb600	                   movzx eax, byte [rax]	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40077d6	            0x84c0	                             test al, al	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40077d8	            0x75b3	                           jne 0x400778d	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x40077da	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x40077e1	          0x4889c2	                            mov rdx, rax	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x40077e4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x40077eb	          0x4829c2	                            sub rdx, rax	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x40077ee	          0x4889d0	                            mov rax, rdx	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x40077f1	          0x8945b8	             mov dword [rbp - 0x48], eax	      3782	ops.c	FUNCTION_48	IF_38	FOR_2
0x40077f4	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x40077fa	    0x3985d8feffff	           cmp dword [rbp - 0x128], eax 	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007800	            0x7c1c	                            jl 0x400781e	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007802	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007808	    0x3985d8feffff	           cmp dword [rbp - 0x128], eax 	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400780e	            0x7515	                           jne 0x4007825	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007810	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007817	           0xfb600	                   movzx eax, byte [rax]	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400781a	            0x84c0	                             test al, al	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400781c	            0x7507	                           jne 0x4007825	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400781e	      0xb801000000	                              mov eax, 1	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007823	            0xeb05	                           jmp 0x400782a	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007825	      0xb800000000	                              mov eax, 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400782a	    0x8885c7feffff	              mov byte [rbp - 0x139], al	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007830	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3786	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x4007836	    0x3985d8feffff	           cmp dword [rbp - 0x128], eax 	      3786	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x400783c	            0x7d14	                           jge 0x4007852	      3786	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x400783e	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x4007844	    0x2b85d8feffff	            sub eax, dword [rbp - 0x128]	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x400784a	          0x8945a0	             mov dword [rbp - 0x60], eax	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x400784d	      0xe9aa000000	                           jmp 0x40078fc	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x4007852	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4007858	    0x3985d8feffff	           cmp dword [rbp - 0x128], eax 	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400785e	     0xf8e98000000	                           jle 0x40078fc	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4007864	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400786a	    0x8b95d8feffff	            mov edx, dword [rbp - 0x128]	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4007870	            0x29c2	                            sub edx, eax	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4007872	            0x89d0	                            mov eax, edx	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4007874	          0x8945a4	             mov dword [rbp - 0x5c], eax	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4007877	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400787a	    0x8b95e0feffff	            mov edx, dword [rbp - 0x120]	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4007880	            0x29c2	                            sub edx, eax	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4007882	            0x89d0	                            mov eax, edx	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4007884	          0x8945a0	             mov dword [rbp - 0x60], eax	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4007887	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3792	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400788a	          0x83e801	                              sub eax, 1	      3792	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400788d	          0x8945b8	             mov dword [rbp - 0x48], eax	      3792	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x4007890	    0xc785dcfeffff	              mov dword [rbp - 0x124], 1	      3793	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400789a	    0x8b0500000000	            mov eax, dword [0x040078a0] 	      3795	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078a0	            0x85c0	                           test eax, eax	      3795	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078a2	            0x7430	                            je 0x40078d4	      3795	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078a4	    0x488b05000000	            mov rax, qword [0x040078ab] 	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078ab	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078ae	          0x4863ca	                         movsxd rcx, edx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078b1	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078b8	          0x4801d1	                            add rcx, rdx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078bb	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078c2	          0x4889ce	                            mov rsi, rcx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078c5	          0x4889d7	                            mov rdi, rdx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078c8	            0xffd0	                                call rax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078ca	            0x89c2	                            mov edx, eax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078cc	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078cf	            0x29d0	                            sub eax, edx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078d1	          0x8945b8	             mov dword [rbp - 0x48], eax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x40078d4	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x40078d7	          0x4863d0	                         movsxd rdx, eax	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x40078da	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x40078e1	          0x4801d0	                            add rax, rdx	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x40078e4	           0xfb600	                   movzx eax, byte [rax]	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x40078e7	            0x3c09	                               cmp al, 9	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x40078e9	            0x7411	                            je 0x40078fc	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x40078eb	    0xc785dcfeffff	              mov dword [rbp - 0x124], 0	      3803	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x40078f5	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x40078fc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x4007903	    0x488d14c50000	                        lea rdx, [rax*8]	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x400790b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x4007912	          0x4801d0	                            add rax, rdx	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x4007915	          0x488b00	                    mov rax, qword [rax]	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x4007918	          0x4889c7	                            mov rdi, rax	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x400791b	      0xe800000000	                          call 0x4007920	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x4007920	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x4007926	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3811	ops.c	FUNCTION_48	IF_38	FOR_2
0x400792d	          0x83c001	                              add eax, 1	      3811	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007930	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      3811	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007936	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4007941	            0xeb46	                           jmp 0x4007989	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4007943	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x400794a	    0x488d14c50000	                        lea rdx, [rax*8]	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4007952	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4007959	          0x4801d0	                            add rax, rdx	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x400795c	          0x488b10	                    mov rdx, qword [rax]	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x400795f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4007966	          0x4801d0	                            add rax, rdx	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4007969	      0xba00000000	                              mov edx, 0	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x400796e	          0x4889c6	                            mov rsi, rax	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4007971	      0xbf00000000	                              mov edi, 0	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4007976	      0xe800000000	                          call 0x400797b	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x400797b	    0x2985f8feffff	            sub dword [rbp - 0x108], eax	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x4007981	    0x48838540ffff	               add qword [rbp - 0xc0], 1	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4007989	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400798f	            0x4898	                                    cdqe	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4007991	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x4007998	            0x7fa9	                            jg 0x4007943	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400799a	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      3814	ops.c	FUNCTION_48	IF_38	FOR_2	IF_55
0x40079a1	            0x790a	                           jns 0x40079ad	      3814	ops.c	FUNCTION_48	IF_38	FOR_2	IF_55
0x40079a3	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	      3815	ops.c	FUNCTION_48	IF_38	FOR_2	IF_55
0x40079ad	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40079b3	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40079b9	             0x1d0	                            add eax, edx	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40079bb	            0x89c2	                            mov edx, eax	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40079bd	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40079c4	           0xfafc2	                           imul eax, edx	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40079c7	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40079ca	             0x1c2	                            add edx, eax	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40079cc	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40079cf	             0x1d0	                            add eax, edx	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40079d1	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x40079d7	    0x8b95d0feffff	            mov edx, dword [rbp - 0x130]	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x40079dd	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x40079e3	             0x1d0	                            add eax, edx	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x40079e5	          0x83c001	                              add eax, 1	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x40079e8	            0x89c7	                            mov edi, eax	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x40079ea	      0xe800000000	                          call 0x40079ef	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x40079ef	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x40079f6	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      3820	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x40079fe	     0xf843a020000	                            je 0x4007c3e	      3820	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x4007a04	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3823	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a0b	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3823	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a12	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4007a15	          0x4863d0	                         movsxd rdx, eax	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4007a18	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4007a1f	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4007a26	          0x4889ce	                            mov rsi, rcx	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4007a29	          0x4889c7	                            mov rdi, rax	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4007a2c	      0xe800000000	                          call 0x4007a31	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x4007a31	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a38	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a3b	            0x4898	                                    cdqe	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a3d	          0x4801d0	                            add rax, rdx	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a40	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a47	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      3827	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x4007a4a	          0x4863d0	                         movsxd rdx, eax	      3827	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x4007a4d	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3827	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x4007a54	      0xbe20000000	                           mov esi, 0x20	      3827	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x4007a59	          0x4889c7	                            mov rdi, rax	      3827	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x4007a5c	      0xe800000000	                          call 0x4007a61	      3827	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x4007a61	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a68	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a6b	            0x4898	                                    cdqe	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a6d	          0x4801d0	                            add rax, rdx	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a70	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007a77	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4007a82	      0xe9b4000000	                           jmp 0x4007b3b	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4007a87	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4007a8d	          0x4863d0	                         movsxd rdx, eax	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4007a90	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4007a97	    0x488d0cc50000	                        lea rcx, [rax*8]	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4007a9f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4007aa6	          0x4801c8	                            add rax, rcx	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4007aa9	          0x488b08	                    mov rcx, qword [rax]	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4007aac	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4007ab3	          0x4889ce	                            mov rsi, rcx	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4007ab6	          0x4889c7	                            mov rdi, rax	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4007ab9	      0xe800000000	                          call 0x4007abe	      3832	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x4007abe	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4007ac5	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4007acb	            0x4898	                                    cdqe	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4007acd	          0x4801d0	                            add rax, rdx	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4007ad0	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4007ad7	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007ade	        0x4883e801	                              sub rax, 1	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007ae2	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007ae9	            0x7f09	                            jg 0x4007af4	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007aeb	    0x80bdc7feffff	               cmp byte [rbp - 0x139], 0	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007af2	            0x753f	                           jne 0x4007b33	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007af4	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007afb	            0x7436	                            je 0x4007b33	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007afd	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4007b03	          0x4863d0	                         movsxd rdx, eax	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4007b06	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4007b0d	      0xbe20000000	                           mov esi, 0x20	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4007b12	          0x4889c7	                            mov rdi, rax	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4007b15	      0xe800000000	                          call 0x4007b1a	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x4007b1a	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007b21	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007b27	            0x4898	                                    cdqe	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007b29	          0x4801d0	                            add rax, rdx	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007b2c	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x4007b33	    0x48838540ffff	               add qword [rbp - 0xc0], 1	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4007b3b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4007b42	    0x483b85b0feff	            cmp rax, qword [rbp - 0x150]	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4007b49	     0xf8c38ffffff	                            jl 0x4007a87	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x4007b4f	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3843	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x4007b52	          0x4863d0	                         movsxd rdx, eax	      3843	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x4007b55	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3843	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x4007b5c	      0xbe20000000	                           mov esi, 0x20	      3843	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x4007b61	          0x4889c7	                            mov rdi, rax	      3843	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x4007b64	      0xe800000000	                          call 0x4007b69	      3843	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x4007b69	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007b70	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007b73	            0x4898	                                    cdqe	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007b75	          0x4801d0	                            add rax, rdx	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007b78	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007b7f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007b82	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007b88	            0x29c2	                            sub edx, eax	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007b8a	            0x89d0	                            mov eax, edx	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007b8c	    0x2b85dcfeffff	            sub eax, dword [rbp - 0x124]	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007b92	          0x83c001	                              add eax, 1	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007b95	          0x4863d0	                         movsxd rdx, eax	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007b98	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007b9b	          0x4863c8	                         movsxd rcx, eax	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007b9e	    0x8b85dcfeffff	            mov eax, dword [rbp - 0x124]	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007ba4	            0x4898	                                    cdqe	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007ba6	          0x4801c1	                            add rcx, rax	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007ba9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007bb0	          0x4801c1	                            add rcx, rax	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007bb3	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007bba	          0x4889ce	                            mov rsi, rcx	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007bbd	          0x4889c7	                            mov rdi, rax	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007bc0	      0xe800000000	                          call 0x4007bc5	      3846	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x4007bc5	    0x488b05000000	            mov rax, qword [0x04007bcc] 	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4007bcc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4007bd0	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4007bd7	      0xba00000000	                              mov edx, 0	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4007bdc	          0x4889ce	                            mov rsi, rcx	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4007bdf	          0x4889c7	                            mov rdi, rax	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4007be2	      0xe800000000	                          call 0x4007be7	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x4007be7	    0x488b05000000	            mov rax, qword [0x04007bee] 	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007bee	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007bf2	        0x4883c201	                              add rdx, 1	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007bf6	        0x48895038	             mov qword [rax + 0x38], rdx	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007bfa	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      3851	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4007c02	            0x7519	                           jne 0x4007c1d	      3851	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4007c04	    0x488b05000000	            mov rax, qword [0x04007c0b] 	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4007c0b	    0x488b15000000	            mov rdx, qword [0x04007c12] 	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4007c12	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4007c15	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4007c18	             0x1ca	                            add edx, ecx	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4007c1a	          0x895040	             mov dword [rax + 0x40], edx	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x4007c1d	    0x48838528ffff	               add qword [rbp - 0xd8], 1	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007c25	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007c2c	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007c33	     0xf8cb6faffff	                            jl 0x40076ef	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007c39	            0xeb04	                           jmp 0x4007c3f	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x4007c3b	              0x90	                                     nop	      3770	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50
0x4007c3c	            0xeb01	                           jmp 0x4007c3f	      3770	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50
0x4007c3e	              0x90	                                     nop	      3821	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x4007c3f	    0x488b05000000	            mov rax, qword [0x04007c46] 	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x4007c46	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x4007c4a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x4007c51	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x4007c58	      0xbe00000000	                              mov esi, 0	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x4007c5d	          0x4889c7	                            mov rdi, rax	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x4007c60	      0xe800000000	                          call 0x4007c65	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x4007c65	    0x488b0d000000	            mov rcx, qword [0x04007c6c] 	      3858	ops.c	FUNCTION_48	IF_38
0x4007c6c	    0x488b05000000	            mov rax, qword [0x04007c73] 	      3858	ops.c	FUNCTION_48	IF_38
0x4007c73	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3858	ops.c	FUNCTION_48	IF_38
0x4007c77	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3858	ops.c	FUNCTION_48	IF_38
0x4007c7b	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      3858	ops.c	FUNCTION_48	IF_38
0x4007c82	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      3858	ops.c	FUNCTION_48	IF_38
0x4007c89	    0x488b05000000	            mov rax, qword [0x04007c90] 	      3859	ops.c	FUNCTION_48	IF_38
0x4007c90	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3859	ops.c	FUNCTION_48	IF_38
0x4007c97	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      3859	ops.c	FUNCTION_48	IF_38
0x4007c9e	    0x488b05000000	            mov rax, qword [0x04007ca5] 	      3862	ops.c	FUNCTION_48	IF_38
0x4007ca5	    0x488b15000000	            mov rdx, qword [0x04007cac] 	      3862	ops.c	FUNCTION_48	IF_38
0x4007cac	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      3862	ops.c	FUNCTION_48	IF_38
0x4007cb0	        0x4883ea01	                              sub rdx, 1	      3862	ops.c	FUNCTION_48	IF_38
0x4007cb4	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      3862	ops.c	FUNCTION_48	IF_38
0x4007cbb	    0x488b05000000	            mov rax, qword [0x04007cc2] 	      3863	ops.c	FUNCTION_48	IF_38
0x4007cc2	          0x8b4db8	             mov ecx, dword [rbp - 0x48]	      3863	ops.c	FUNCTION_48	IF_38
0x4007cc5	    0x8b95d0feffff	            mov edx, dword [rbp - 0x130]	      3863	ops.c	FUNCTION_48	IF_38
0x4007ccb	             0x1ca	                            add edx, ecx	      3863	ops.c	FUNCTION_48	IF_38
0x4007ccd	          0x83ea01	                              sub edx, 1	      3863	ops.c	FUNCTION_48	IF_38
0x4007cd0	    0x899008120000	          mov dword [rax + 0x1208], edx 	      3863	ops.c	FUNCTION_48	IF_38
0x4007cd6	    0x488b05000000	            mov rax, qword [0x04007cdd] 	      3865	ops.c	FUNCTION_48	IF_38
0x4007cdd	    0xc7800c120000	            mov dword [rax + 0x120c], 0 	      3865	ops.c	FUNCTION_48	IF_38
0x4007ce7	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3867	ops.c	FUNCTION_48	IF_38	IF_59
0x4007ced	          0x83e002	                              and eax, 2	      3867	ops.c	FUNCTION_48	IF_38	IF_59
0x4007cf0	            0x85c0	                           test eax, eax	      3867	ops.c	FUNCTION_48	IF_38	IF_59
0x4007cf2	            0x7472	                            je 0x4007d66	      3867	ops.c	FUNCTION_48	IF_38	IF_59
0x4007cf4	    0x488b0d000000	            mov rcx, qword [0x04007cfb] 	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x4007cfb	    0x488b05000000	            mov rax, qword [0x04007d02] 	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x4007d02	    0x488b90081200	          mov rdx, qword [rax + 0x1208] 	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x4007d09	    0x488b80001200	          mov rax, qword [rax + 0x1200] 	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x4007d10	        0x48894138	             mov qword [rcx + 0x38], rax	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x4007d14	        0x48895140	             mov qword [rcx + 0x40], rdx	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x4007d18	    0x488b05000000	            mov rax, qword [0x04007d1f] 	      3872	ops.c	FUNCTION_48	IF_38	IF_59
0x4007d1f	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3872	ops.c	FUNCTION_48	IF_38	IF_59
0x4007d22	          0x83c201	                              add edx, 1	      3872	ops.c	FUNCTION_48	IF_38	IF_59
0x4007d25	          0x895040	             mov dword [rax + 0x40], edx	      3872	ops.c	FUNCTION_48	IF_38	IF_59
0x4007d28	      0xe800000000	                          call 0x4007d2d	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x4007d2d	          0x4889c7	                            mov rdi, rax	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x4007d30	      0xe800000000	                          call 0x4007d35	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x4007d35	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x4007d3b	    0x488b05000000	            mov rax, qword [0x04007d42] 	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4007d42	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4007d45	    0x3b850cffffff	             cmp eax, dword [rbp - 0xf4]	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4007d4b	     0xf8e920b0000	                           jle 0x40088e3	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4007d51	    0x488b05000000	            mov rax, qword [0x04007d58] 	      3877	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4007d58	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      3877	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4007d5e	          0x895040	             mov dword [rax + 0x40], edx	      3877	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4007d61	      0xe97d0b0000	                           jmp 0x40088e3	      3877	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x4007d66	    0x488b05000000	            mov rax, qword [0x04007d6d] 	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x4007d6d	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x4007d74	        0x48895038	             mov qword [rax + 0x38], rdx	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x4007d78	      0xe9660b0000	                           jmp 0x40088e3	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x4007d7d	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3887	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007d84	     0xf85fc000000	                           jne 0x4007e86	      3887	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007d8a	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x4007d91	     0xf85c9000000	                           jne 0x4007e60	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x4007d97	      0xe800000000	                          call 0x4007d9c	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x4007d9c	            0x85c0	                           test eax, eax	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x4007d9e	     0xf84bc000000	                            je 0x4007e60	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x4007da4	    0x8b0500000000	            mov eax, dword [0x04007daa] 	      3894	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x4007daa	            0x85c0	                           test eax, eax	      3894	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x4007dac	            0x7474	                            je 0x4007e22	      3894	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x4007dae	    0x488b1d000000	            mov rbx, qword [0x04007db5] 	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x4007db5	      0xe800000000	                          call 0x4007dba	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x4007dba	          0x4889c7	                            mov rdi, rax	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x4007dbd	            0xffd3	                                call rbx	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x4007dbf	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x4007dc5	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      3899	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x4007dcb	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      3899	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x4007dd1	             0x1d0	                            add eax, edx	      3899	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x4007dd3	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3899	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x4007dd9	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      3900	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007de0	            0x747e	                            je 0x4007e60	      3900	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007de2	    0x488b05000000	            mov rax, qword [0x04007de9] 	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007de9	    0x488b15000000	            mov rdx, qword [0x04007df0] 	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007df0	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007df3	    0x8b9500ffffff	            mov edx, dword [rbp - 0x100]	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007df9	             0x1ca	                            add edx, ecx	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007dfb	          0x895040	             mov dword [rax + 0x40], edx	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007dfe	    0x488b05000000	            mov rax, qword [0x04007e05] 	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007e05	    0x488b15000000	            mov rdx, qword [0x04007e0c] 	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007e0c	    0x8b8a08120000	          mov ecx, dword [rdx + 0x1208] 	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007e12	    0x8b9500ffffff	            mov edx, dword [rbp - 0x100]	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007e18	             0x1ca	                            add edx, ecx	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007e1a	    0x899008120000	          mov dword [rax + 0x1208], edx 	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007e20	            0xeb3e	                           jmp 0x4007e60	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x4007e22	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3909	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15
0x4007e28	          0x83c001	                              add eax, 1	      3909	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15
0x4007e2b	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3909	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15
0x4007e31	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      3910	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4007e38	            0x7426	                            je 0x4007e60	      3910	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4007e3a	    0x488b05000000	            mov rax, qword [0x04007e41] 	      3912	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4007e41	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3912	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4007e44	          0x83c201	                              add edx, 1	      3912	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4007e47	          0x895040	             mov dword [rax + 0x40], edx	      3912	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4007e4a	    0x488b05000000	            mov rax, qword [0x04007e51] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4007e51	    0x8b9008120000	          mov edx, dword [rax + 0x1208] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4007e57	          0x83c201	                              add edx, 1	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4007e5a	    0x899008120000	          mov dword [rax + 0x1208], edx 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x4007e60	    0x488b0d000000	            mov rcx, qword [0x04007e67] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007e67	    0x488b05000000	            mov rax, qword [0x04007e6e] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007e6e	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007e72	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007e76	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007e7d	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007e84	            0xeb1b	                           jmp 0x4007ea1	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x4007e86	    0x83bdb8feffff	cmp dword [rbp - 0x148], 0xffffffffffffffff	      3922	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4007e8d	            0x7512	                           jne 0x4007ea1	      3922	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4007e8f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4007e96	        0x4883e801	                              sub rax, 1	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4007e9a	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x4007ea1	    0x488b05000000	            mov rax, qword [0x04007ea8] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x4007ea8	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x4007eac	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x4007eb0	        0x48894580	             mov qword [rbp - 0x80], rax	      3924	ops.c	FUNCTION_48	ELSE_14
0x4007eb4	        0x48895588	             mov qword [rbp - 0x78], rdx	      3924	ops.c	FUNCTION_48	ELSE_14
0x4007eb8	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4007ebf	     0xf8515030000	                           jne 0x40081da	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4007ec5	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 1	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4007ecd	     0xf8507030000	                           jne 0x40081da	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4007ed3	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      3931	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4007ede	    0x8b0500000000	            mov eax, dword [0x04007ee4] 	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x4007ee4	            0x85c0	                           test eax, eax	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x4007ee6	            0x7441	                            je 0x4007f29	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x4007ee8	    0x488b05000000	            mov rax, qword [0x04007eef] 	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x4007eef	    0x488b80080300	           mov rax, qword [rax + 0x308] 	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x4007ef6	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x4007efd	    0x488b05000000	            mov rax, qword [0x04007f04] 	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007f04	    0x488b80f80200	           mov rax, qword [rax + 0x2f8] 	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007f0b	    0x483b8568ffff	             cmp rax, qword [rbp - 0x98]	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007f12	            0x7e15	                           jle 0x4007f29	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007f14	    0x488b05000000	            mov rax, qword [0x04007f1b] 	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007f1b	    0x488b80f80200	           mov rax, qword [rax + 0x2f8] 	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007f22	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x4007f29	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4007f30	            0x89c2	                            mov edx, eax	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4007f32	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4007f38	           0xfafc2	                           imul eax, edx	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4007f3b	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3941	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4007f41	    0x83bdd0feffff	              cmp dword [rbp - 0x130], 0	      3942	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x4007f48	     0xf8ec6010000	                           jle 0x4008114	      3942	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x4007f4e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3944	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x4007f55	          0x4889c7	                            mov rdi, rax	      3944	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x4007f58	      0xe800000000	                          call 0x4007f5d	      3944	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x4007f5d	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3944	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x4007f64	    0x8b0500000000	            mov eax, dword [0x04007f6a] 	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007f6a	            0x85c0	                           test eax, eax	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007f6c	            0x7432	                            je 0x4007fa0	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007f6e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007f75	          0x4889c7	                            mov rdi, rax	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007f78	      0xe800000000	                          call 0x4007f7d	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007f7d	            0x89c2	                            mov edx, eax	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007f7f	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007f85	            0x39c2	                            cmp edx, eax	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007f87	            0x7d17	                           jge 0x4007fa0	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x4007f89	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3947	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x4007f90	        0x4883c001	                              add rax, 1	      3947	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x4007f94	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3947	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x4007f9b	      0xe990010000	                           jmp 0x4008130	      3948	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x4007fa0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007fa7	          0x4889c7	                            mov rdi, rax	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007faa	      0xe800000000	                          call 0x4007faf	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007faf	            0x89c2	                            mov edx, eax	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007fb1	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007fb7	             0x1d0	                            add eax, edx	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007fb9	          0x83c001	                              add eax, 1	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007fbc	            0x89c7	                            mov edi, eax	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007fbe	      0xe800000000	                          call 0x4007fc3	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007fc3	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x4007fca	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      3951	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x4007fd2	     0xf843c090000	                            je 0x4008914	      3951	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x4007fd8	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3953	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x4007fde	          0x4863d0	                         movsxd rdx, eax	      3953	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x4007fe1	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      3953	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x4007fe8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3953	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x4007fef	          0x4889ce	                            mov rsi, rcx	      3953	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x4007ff2	          0x4889c7	                            mov rdi, rax	      3953	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x4007ff5	      0xe800000000	                          call 0x4007ffa	      3953	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x4007ffa	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x4008000	          0x4863d0	                         movsxd rdx, eax	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x4008003	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x400800a	          0x4801d0	                            add rax, rdx	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x400800d	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x4008014	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400801f	            0xeb46	                           jmp 0x4008067	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x4008021	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3957	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x4008027	          0x4863d0	                         movsxd rdx, eax	      3957	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x400802a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3957	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x4008031	          0x488b08	                    mov rcx, qword [rax]	      3957	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x4008034	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3957	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x400803b	          0x4889ce	                            mov rsi, rcx	      3957	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x400803e	          0x4889c7	                            mov rdi, rax	      3957	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x4008041	      0xe800000000	                          call 0x4008046	      3957	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x4008046	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400804d	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x4008053	            0x4898	                                    cdqe	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x4008055	          0x4801d0	                            add rax, rdx	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x4008058	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400805f	    0x48838528ffff	               add qword [rbp - 0xd8], 1	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x4008067	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400806e	    0x483b85b0feff	            cmp rax, qword [rbp - 0x150]	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x4008075	            0x7caa	                            jl 0x4008021	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x4008077	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x400807d	          0x4863d0	                         movsxd rdx, eax	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x4008080	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x4008087	          0x4801d0	                            add rax, rdx	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x400808a	          0x4889c7	                            mov rdi, rax	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x400808d	      0xe800000000	                          call 0x4008092	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x4008092	        0x488d5001	                      lea rdx, [rax + 1]	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x4008096	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x400809c	          0x4863c8	                         movsxd rcx, eax	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x400809f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40080a6	          0x4801c1	                            add rcx, rax	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40080a9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40080b0	          0x4889ce	                            mov rsi, rcx	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40080b3	          0x4889c7	                            mov rdi, rax	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40080b6	      0xe800000000	                          call 0x40080bb	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x40080bb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x40080c2	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x40080c9	      0xba00000000	                              mov edx, 0	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x40080ce	          0x4889ce	                            mov rsi, rcx	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x40080d1	          0x4889c7	                            mov rdi, rax	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x40080d4	      0xe800000000	                          call 0x40080d9	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x40080d9	    0x488b05000000	            mov rax, qword [0x040080e0] 	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x40080e0	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x40080e4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x40080eb	          0x4839c2	                            cmp rdx, rax	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x40080ee	            0x7524	                           jne 0x4008114	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x40080f0	      0xe800000000	                          call 0x40080f5	      3966	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73	CALL_72
0x40080f5	    0x488b05000000	            mov rax, qword [0x040080fc] 	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x40080fc	    0x488b15000000	            mov rdx, qword [0x04008103] 	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008103	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008106	    0x8b8dd0feffff	            mov ecx, dword [rbp - 0x130]	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400810c	          0x83e901	                              sub ecx, 1	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400810f	             0x1ca	                            add edx, ecx	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008111	          0x895040	             mov dword [rax + 0x40], edx	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x4008114	    0x8b0500000000	            mov eax, dword [0x0400811a] 	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400811a	            0x85c0	                           test eax, eax	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400811c	            0x7412	                            je 0x4008130	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400811e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x4008125	        0x4883c001	                              add rax, 1	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x4008129	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x4008130	    0x8b0500000000	            mov eax, dword [0x04008136] 	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4008136	            0x85c0	                           test eax, eax	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4008138	            0x7414	                            je 0x400814e	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x400813a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4008141	    0x483b8568ffff	             cmp rax, qword [rbp - 0x98]	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x4008148	     0xf8edbfdffff	                           jle 0x4007f29	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x400814e	    0x8b0500000000	            mov eax, dword [0x04008154] 	      3974	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x4008154	            0x85c0	                           test eax, eax	      3974	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x4008156	            0x7412	                            je 0x400816a	      3974	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x4008158	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x400815f	        0x4883e801	                              sub rax, 1	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x4008163	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x400816a	    0x488b0d000000	            mov rcx, qword [0x04008171] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008171	    0x488b05000000	            mov rax, qword [0x04008178] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008178	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400817c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008180	    0x488981001200	          mov qword [rcx + 0x1200], rax 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x4008187	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400818e	    0x83bdd0feffff	              cmp dword [rbp - 0x130], 0	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x4008195	            0x7427	                            je 0x40081be	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x4008197	    0x8b0500000000	            mov eax, dword [0x0400819d] 	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400819d	            0x85c0	                           test eax, eax	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400819f	            0x750d	                           jne 0x40081ae	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x40081a1	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x40081a7	          0x83e002	                              and eax, 2	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x40081aa	            0x85c0	                           test eax, eax	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x40081ac	            0x7410	                            je 0x40081be	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x40081ae	    0x488b05000000	            mov rax, qword [0x040081b5] 	      3980	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x40081b5	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3980	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x40081b8	          0x83c201	                              add edx, 1	      3980	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x40081bb	          0x895040	             mov dword [rax + 0x40], edx	      3980	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x40081be	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x40081c4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x40081cb	            0x89d6	                            mov esi, edx	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x40081cd	          0x4889c7	                            mov rdi, rax	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x40081d0	      0xe800000000	                          call 0x40081d5	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x40081d5	      0xe909070000	                           jmp 0x40088e3	      3930	ops.c	FUNCTION_48	ELSE_14	IF_67
0x40081da	    0x48c78558ffff	               mov qword [rbp - 0xa8], 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40081e5	      0xe91e040000	                           jmp 0x4008608	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40081ea	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      3991	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x40081f5	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3992	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x40081fc	     0xf85ea030000	                           jne 0x40085ec	      3992	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008202	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x4008206	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x400820d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x4008214	          0x4889c7	                            mov rdi, rax	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x4008217	      0xe800000000	                          call 0x400821c	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x400821c	          0x4889c2	                            mov rdx, rax	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x400821f	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x4008225	            0x4898	                                    cdqe	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x4008227	          0x4801d0	                            add rax, rdx	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x400822a	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x4008231	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008238	        0x48c1e003	                              shl rax, 3	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x400823c	        0x488d50f8	                      lea rdx, [rax - 8]	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008240	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008247	          0x4801d0	                            add rax, rdx	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x400824a	          0x488b00	                    mov rax, qword [rax]	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x400824d	          0x4889c7	                            mov rdi, rax	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008250	      0xe800000000	                          call 0x4008255	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x4008255	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x400825b	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008262	          0x4889c7	                            mov rdi, rax	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008265	      0xe800000000	                          call 0x400826a	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x400826a	            0x89c2	                            mov edx, eax	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x400826c	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008272	             0x1d0	                            add eax, edx	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008274	          0x83c001	                              add eax, 1	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008277	            0x89c7	                            mov edi, eax	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008279	      0xe800000000	                          call 0x400827e	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x400827e	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x4008285	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x400828d	     0xf848b030000	                            je 0x400861e	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x4008293	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x400829a	        0x48c1e003	                              shl rax, 3	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x400829e	        0x488d50f8	                      lea rdx, [rax - 8]	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x40082a2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x40082a9	          0x4801d0	                            add rax, rdx	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x40082ac	          0x488b10	                    mov rdx, qword [rax]	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x40082af	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x40082b6	          0x4889d6	                            mov rsi, rdx	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x40082b9	          0x4889c7	                            mov rdi, rax	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x40082bc	      0xe800000000	                          call 0x40082c1	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x40082c1	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      4006	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_79
0x40082c8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4006	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_79
0x40082cf	          0x4889d6	                            mov rsi, rdx	      4006	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_79
0x40082d2	          0x4889c7	                            mov rdi, rax	      4006	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_79
0x40082d5	      0xe800000000	                          call 0x40082da	      4006	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_79
0x40082da	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x40082e1	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x40082e8	      0xb900000000	                              mov ecx, 0	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x40082ed	      0xba00000000	                              mov edx, 0	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x40082f2	          0x4889c7	                            mov rdi, rax	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x40082f5	      0xe800000000	                          call 0x40082fa	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x40082fa	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4009	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x4008301	          0x4889c7	                            mov rdi, rax	      4009	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x4008304	      0xe800000000	                          call 0x4008309	      4009	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x4008309	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x4008310	          0x4889c7	                            mov rdi, rax	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x4008313	      0xe800000000	                          call 0x4008318	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x4008318	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x400831f	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008325	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x400832b	             0x1d0	                            add eax, edx	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x400832d	          0x83c001	                              add eax, 1	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008330	            0x89c7	                            mov edi, eax	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008332	      0xe800000000	                          call 0x4008337	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x4008337	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x400833e	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x4008346	     0xf84d5020000	                            je 0x4008621	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x400834c	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x4008352	          0x4863d0	                         movsxd rdx, eax	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x4008355	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x400835c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x4008363	          0x4889ce	                            mov rsi, rcx	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x4008366	          0x4889c7	                            mov rdi, rax	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x4008369	      0xe800000000	                          call 0x400836e	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x400836e	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x4008374	          0x83c001	                              add eax, 1	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x4008377	          0x4863d0	                         movsxd rdx, eax	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x400837a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x4008381	          0x488b00	                    mov rax, qword [rax]	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x4008384	    0x8b8dc8feffff	            mov ecx, dword [rbp - 0x138]	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x400838a	          0x4863f1	                         movsxd rsi, ecx	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x400838d	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x4008394	          0x4801f1	                            add rcx, rsi	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x4008397	          0x4889c6	                            mov rsi, rax	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x400839a	          0x4889cf	                            mov rdi, rcx	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x400839d	      0xe800000000	                          call 0x40083a2	      4018	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x40083a2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x40083a9	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x40083b0	      0xba00000000	                              mov edx, 0	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x40083b5	          0x4889ce	                            mov rsi, rcx	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x40083b8	          0x4889c7	                            mov rdi, rax	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x40083bb	      0xe800000000	                          call 0x40083c0	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x40083c0	    0x488b05000000	            mov rax, qword [0x040083c7] 	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x40083c7	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x40083ce	        0x48895038	             mov qword [rax + 0x38], rdx	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x40083d2	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	      4022	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x40083dd	      0xe90a020000	                           jmp 0x40085ec	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x40083e2	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40083e9	            0x7514	                           jne 0x40083ff	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40083eb	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40083f2	        0x4883e801	                              sub rax, 1	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40083f6	    0x483b8528ffff	             cmp rax, qword [rbp - 0xd8]	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40083fd	            0x7e3d	                           jle 0x400843c	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x40083ff	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008406	    0x488d14c50000	                        lea rdx, [rax*8]	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400840e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008415	          0x4801d0	                            add rax, rdx	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008418	          0x488b30	                    mov rsi, qword [rax]	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400841b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008422	      0xb900000000	                              mov ecx, 0	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008427	      0xba00000000	                              mov edx, 0	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400842c	          0x4889c7	                            mov rdi, rax	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400842f	      0xe800000000	                          call 0x4008434	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008434	            0x85c0	                           test eax, eax	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x4008436	     0xf84e8010000	                            je 0x4008624	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400843c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008443	        0x4883c001	                              add rax, 1	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008447	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400844e	    0x48838550ffff	               add qword [rbp - 0xb0], 1	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008456	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400845c	          0x83e001	                              and eax, 1	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400845f	            0x85c0	                           test eax, eax	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008461	     0xf847d010000	                            je 0x40085e4	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008467	    0x488b05000000	            mov rax, qword [0x0400846e] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400846e	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008472	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008476	        0x48894590	             mov qword [rbp - 0x70], rax	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400847a	        0x48895598	             mov qword [rbp - 0x68], rdx	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400847e	    0x488b05000000	            mov rax, qword [0x04008485] 	      4036	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008485	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4036	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400848c	        0x48895038	             mov qword [rax + 0x38], rdx	      4036	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008490	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x4008497	          0x4889c7	                            mov rdi, rax	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x400849a	      0xe800000000	                          call 0x400849f	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x400849f	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x40084a6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x40084ad	    0x483b85b0feff	            cmp rax, qword [rbp - 0x150]	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x40084b4	            0x7529	                           jne 0x40084df	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x40084b6	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x40084bd	        0x4883e801	                              sub rax, 1	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x40084c1	    0x483b8528ffff	             cmp rax, qword [rbp - 0xd8]	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x40084c8	            0x7515	                           jne 0x40084df	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x40084ca	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x40084d1	          0x4889c7	                            mov rdi, rax	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x40084d4	      0xe800000000	                          call 0x40084d9	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x40084d9	    0x8985f4feffff	            mov dword [rbp - 0x10c], eax	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x40084df	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x40084e6	           0xfb600	                   movzx eax, byte [rax]	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x40084e9	            0x3c23	                            cmp al, 0x23	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x40084eb	            0x7515	                           jne 0x4008502	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x40084ed	      0xe800000000	                          call 0x40084f2	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x40084f2	            0x85c0	                           test eax, eax	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x40084f4	            0x740c	                            je 0x4008502	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x40084f6	    0xc785e4feffff	              mov dword [rbp - 0x11c], 0	      4042	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83
0x4008500	            0xeb78	                           jmp 0x400857a	      4042	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83
0x4008502	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4045	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x4008509	           0xfb600	                   movzx eax, byte [rax]	      4045	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x400850c	            0x84c0	                             test al, al	      4045	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x400850e	            0x750c	                           jne 0x400851c	      4045	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x4008510	    0xc785e4feffff	              mov dword [rbp - 0x11c], 0	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x400851a	            0xeb5e	                           jmp 0x400857a	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x400851c	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 0	      4047	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x4008523	            0x742d	                            je 0x4008552	      4047	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x4008525	      0xe800000000	                          call 0x400852a	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x400852a	            0x89c2	                            mov edx, eax	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x400852c	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x4008532	            0x29d0	                            sub eax, edx	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x4008534	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x400853a	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4050	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x4008540	    0x8985e4feffff	            mov dword [rbp - 0x11c], eax	      4050	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x4008546	    0xc785f0feffff	              mov dword [rbp - 0x110], 0	      4051	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x4008550	            0xeb28	                           jmp 0x400857a	      4051	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x4008552	      0xe800000000	                          call 0x4008557	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008557	            0x89c2	                            mov edx, eax	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008559	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x400855f	             0x1d0	                            add eax, edx	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008561	    0x8985e4feffff	            mov dword [rbp - 0x11c], eax	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008567	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x400856e	            0x790a	                           jns 0x400857a	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x4008570	    0xc785e4feffff	              mov dword [rbp - 0x11c], 0	      4054	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86
0x400857a	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4055	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x4008580	      0xbe00000000	                              mov esi, 0	      4055	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x4008585	            0x89c7	                            mov edi, eax	      4055	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x4008587	      0xe800000000	                          call 0x400858c	      4055	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x400858c	    0x488b0d000000	            mov rcx, qword [0x04008593] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008593	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x4008597	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400859b	        0x48894138	             mov qword [rcx + 0x38], rax	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400859f	        0x48895140	             mov qword [rcx + 0x40], rdx	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x40085a3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x40085aa	    0x483b85b0feff	            cmp rax, qword [rbp - 0x150]	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x40085b1	            0x7531	                           jne 0x40085e4	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x40085b3	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x40085ba	        0x4883e801	                              sub rax, 1	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x40085be	    0x483b8528ffff	             cmp rax, qword [rbp - 0xd8]	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x40085c5	            0x751d	                           jne 0x40085e4	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x40085c7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x40085ce	          0x4889c7	                            mov rdi, rax	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x40085d1	      0xe800000000	                          call 0x40085d6	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x40085d6	          0x4889c7	                            mov rdi, rax	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x40085d9	      0xe800000000	                          call 0x40085de	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x40085de	    0x2985f4feffff	            sub dword [rbp - 0x10c], eax	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x40085e4	    0x48838528ffff	               add qword [rbp - 0xd8], 1	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x40085ec	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x40085f3	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x40085fa	     0xf8ce2fdffff	                            jl 0x40083e2	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x4008600	    0x48838558ffff	               add qword [rbp - 0xa8], 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008608	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400860f	    0x483b85b0feff	            cmp rax, qword [rbp - 0x150]	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x4008616	     0xf8ecefbffff	                           jle 0x40081ea	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400861c	            0xeb07	                           jmp 0x4008625	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400861e	              0x90	                                     nop	      4004	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x400861f	            0xeb04	                           jmp 0x4008625	      4004	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x4008621	              0x90	                                     nop	      4014	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x4008622	            0xeb01	                           jmp 0x4008625	      4014	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x4008624	              0x90	                                     nop	      4030	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x4008625	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 1	      4066	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x400862c	            0x7533	                           jne 0x4008661	      4066	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x400862e	    0x488b05000000	            mov rax, qword [0x04008635] 	      4068	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x4008635	    0xc780e8110000	            mov dword [rax + 0x11e8], 0 	      4068	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x400863f	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x4008646	            0x7519	                           jne 0x4008661	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x4008648	    0x488b05000000	            mov rax, qword [0x0400864f] 	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x400864f	    0x488b90e01100	          mov rdx, qword [rax + 0x11e0] 	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x4008656	        0x4883c201	                              add rdx, 1	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x400865a	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x4008661	    0x488b05000000	            mov rax, qword [0x04008668] 	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008668	    0x488b90e01100	          mov rdx, qword [rax + 0x11e0] 	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400866f	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008676	           0xf94c0	                                 sete al	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008679	           0xfb6c0	                           movzx eax, al	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400867c	          0x4801d0	                            add rax, rdx	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400867f	        0x488d50ff	                      lea rdx, [rax - 1]	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008683	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400868a	          0x4801c2	                            add rdx, rax	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400868d	    0x488b05000000	            mov rax, qword [0x04008694] 	      4075	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008694	          0x488b00	                    mov rax, qword [rax]	      4075	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x4008697	          0x4839c2	                            cmp rdx, rax	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400869a	            0x7c11	                            jl 0x40086ad	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400869c	    0x488b05000000	            mov rax, qword [0x040086a3] 	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40086a3	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40086a9	            0x85c0	                           test eax, eax	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40086ab	            0x7438	                            je 0x40086e5	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x40086ad	    0x488b05000000	            mov rax, qword [0x040086b4] 	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40086b4	    0x488b90e01100	          mov rdx, qword [rax + 0x11e0] 	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40086bb	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40086c2	           0xf94c0	                                 sete al	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40086c5	           0xfb6c0	                           movzx eax, al	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40086c8	        0x488d3c02	                    lea rdi, [rdx + rax]	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40086cc	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40086d3	      0xb900000000	                              mov ecx, 0	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40086d8	          0x4889c2	                            mov rdx, rax	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40086db	      0xbeffffff7f	                     mov esi, 0x7fffffff	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40086e0	      0xe800000000	                          call 0x40086e5	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x40086e5	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      4084	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x40086ec	            0x7537	                           jne 0x4008725	      4084	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x40086ee	    0x488b05000000	            mov rax, qword [0x040086f5] 	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x40086f5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x40086f9	        0x488d7801	                      lea rdi, [rax + 1]	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x40086fd	    0x8bb5c8feffff	            mov esi, dword [rbp - 0x138]	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x4008703	    0x488b05000000	            mov rax, qword [0x0400870a] 	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x400870a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x400870e	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x4008715	          0x4889d1	                            mov rcx, rdx	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x4008718	          0x4889fa	                            mov rdx, rdi	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x400871b	          0x4889c7	                            mov rdi, rax	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x400871e	      0xe800000000	                          call 0x4008723	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x4008723	            0xeb30	                           jmp 0x4008755	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x4008725	    0x488b05000000	            mov rax, qword [0x0400872c] 	      4089	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21
0x400872c	    0x488b90e01100	          mov rdx, qword [rax + 0x11e0] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008733	    0x488b05000000	            mov rax, qword [0x0400873a] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x400873a	    0x488b80e01100	          mov rax, qword [rax + 0x11e0] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008741	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008748	      0xbe00000000	                              mov esi, 0	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x400874d	          0x4889c7	                            mov rdi, rax	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008750	      0xe800000000	                          call 0x4008755	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x4008755	    0x488b05000000	            mov rax, qword [0x0400875c] 	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x400875c	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x4008763	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x400876a	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008771	        0x48c1e003	                              shl rax, 3	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008775	        0x488d50f8	                      lea rdx, [rax - 8]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008779	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008780	          0x4801d0	                            add rax, rdx	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008783	          0x488b00	                    mov rax, qword [rax]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008786	          0x4889c7	                            mov rdi, rax	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008789	      0xe800000000	                          call 0x400878e	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x400878e	    0x2b85f4feffff	            sub eax, dword [rbp - 0x10c]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x4008794	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x400879a	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4095	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x40087a0	          0x83f801	                              cmp eax, 1	      4095	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x40087a3	            0x7e18	                           jle 0x40087bd	      4095	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x40087a5	    0x488b05000000	            mov rax, qword [0x040087ac] 	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x40087ac	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x40087b2	          0x83ea01	                              sub edx, 1	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x40087b5	    0x899008120000	          mov dword [rax + 0x1208], edx 	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x40087bb	            0xeb11	                           jmp 0x40087ce	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x40087bd	    0x488b05000000	            mov rax, qword [0x040087c4] 	      4098	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22
0x40087c4	    0xc78008120000	            mov dword [rax + 0x1208], 0 	      4098	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22
0x40087ce	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4100	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x40087d4	          0x83e004	                              and eax, 4	      4100	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x40087d7	            0x85c0	                           test eax, eax	      4100	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x40087d9	            0x7421	                            je 0x40087fc	      4100	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x40087db	    0x488b05000000	            mov rax, qword [0x040087e2] 	      4103	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x40087e2	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4103	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x40087e9	        0x48895038	             mov qword [rax + 0x38], rdx	      4103	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x40087ed	      0xbf05000000	                              mov edi, 5	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x40087f2	      0xe800000000	                          call 0x40087f7	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x40087f7	      0xe9e7000000	                           jmp 0x40088e3	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x40087fc	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4106	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x4008802	          0x83e002	                              and eax, 2	      4106	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x4008805	            0x85c0	                           test eax, eax	      4106	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x4008807	     0xf8480000000	                            je 0x400888d	      4106	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x400880d	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 1	      4109	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95
0x4008814	            0x7553	                           jne 0x4008869	      4109	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95
0x4008816	    0x488b05000000	            mov rax, qword [0x0400881d] 	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x400881d	          0x488b10	                    mov rdx, qword [rax]	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4008820	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4008827	          0x4839c2	                            cmp rdx, rax	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x400882a	            0x7f17	                            jg 0x4008843	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x400882c	    0x488b05000000	            mov rax, qword [0x04008833] 	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4008833	    0x488b15000000	            mov rdx, qword [0x0400883a] 	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x400883a	          0x488b12	                    mov rdx, qword [rdx]	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x400883d	        0x48895038	             mov qword [rax + 0x38], rdx	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4008841	            0xeb16	                           jmp 0x4008859	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x4008843	    0x488b05000000	            mov rax, qword [0x0400884a] 	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x400884a	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008851	        0x4883c201	                              add rdx, 1	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008855	        0x48895038	             mov qword [rax + 0x38], rdx	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008859	    0x488b05000000	            mov rax, qword [0x04008860] 	      4115	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008860	    0xc74040000000	               mov dword [rax + 0x40], 0	      4115	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008867	            0xeb7a	                           jmp 0x40088e3	      4115	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x4008869	    0x488b05000000	            mov rax, qword [0x04008870] 	      4119	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x4008870	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4119	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x4008877	        0x48895038	             mov qword [rax + 0x38], rdx	      4119	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x400887b	    0x488b05000000	            mov rax, qword [0x04008882] 	      4120	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x4008882	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      4120	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x4008888	          0x895040	             mov dword [rax + 0x40], edx	      4120	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x400888b	            0xeb56	                           jmp 0x40088e3	      4120	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x400888d	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 1	      4123	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x4008894	            0x7536	                           jne 0x40088cc	      4123	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x4008896	    0x488b05000000	            mov rax, qword [0x0400889d] 	      4126	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x400889d	    0xc74040000000	               mov dword [rax + 0x40], 0	      4126	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x40088a4	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      4127	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x40088ab	            0x7513	                           jne 0x40088c0	      4127	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x40088ad	    0x488b05000000	            mov rax, qword [0x040088b4] 	      4128	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x40088b4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4128	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x40088b8	        0x4883c201	                              add rdx, 1	      4128	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x40088bc	        0x48895038	             mov qword [rax + 0x38], rdx	      4128	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x40088c0	      0xbf05000000	                              mov edi, 5	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x40088c5	      0xe800000000	                          call 0x40088ca	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x40088ca	            0xeb17	                           jmp 0x40088e3	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x40088cc	    0x488b0d000000	            mov rcx, qword [0x040088d3] 	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x40088d3	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x40088d7	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x40088db	        0x48894138	             mov qword [rcx + 0x38], rax	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x40088df	        0x48895140	             mov qword [rcx + 0x40], rdx	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x40088e3	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4136	ops.c	FUNCTION_48	CALL_102
0x40088ea	          0x4889c7	                            mov rdi, rax	      4136	ops.c	FUNCTION_48	CALL_102
0x40088ed	      0xe800000000	                          call 0x40088f2	      4136	ops.c	FUNCTION_48	CALL_102
0x40088f2	    0x488b05000000	            mov rax, qword [0x040088f9] 	      4137	ops.c	FUNCTION_48
0x40088f9	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      4137	ops.c	FUNCTION_48
0x4008900	            0xeb13	                           jmp 0x4008915	      4137	ops.c	FUNCTION_48
0x4008902	              0x90	                                     nop	      3572	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x4008903	            0xeb10	                           jmp 0x4008915	      3572	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x4008905	              0x90	                                     nop	      3601	ops.c	FUNCTION_48	IF_15	IF_16	IF_17
0x4008906	            0xeb0d	                           jmp 0x4008915	      3601	ops.c	FUNCTION_48	IF_15	IF_16	IF_17
0x4008908	              0x90	                                     nop	      3607	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x4008909	            0xeb0a	                           jmp 0x4008915	      3607	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x400890b	              0x90	                                     nop	      3617	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x400890c	            0xeb07	                           jmp 0x4008915	      3617	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x400890e	              0x90	                                     nop	      3666	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31
0x400890f	            0xeb04	                           jmp 0x4008915	      3666	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31
0x4008911	              0x90	                                     nop	      3676	ops.c	FUNCTION_48	ELSE_6	IF_33
0x4008912	            0xeb01	                           jmp 0x4008915	      3676	ops.c	FUNCTION_48	ELSE_6	IF_33
0x4008914	              0x90	                                     nop	      3952	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x4008915	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4140	ops.c	FUNCTION_48	IF_99
0x400891b	            0x85c0	                           test eax, eax	      4140	ops.c	FUNCTION_48	IF_99
0x400891d	            0x740f	                            je 0x400892e	      4140	ops.c	FUNCTION_48	IF_99
0x400891f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4141	ops.c	FUNCTION_48	CALL_103
0x4008926	          0x4889c7	                            mov rdi, rax	      4141	ops.c	FUNCTION_48	CALL_103
0x4008929	      0xe800000000	                          call 0x400892e	      4141	ops.c	FUNCTION_48	CALL_103
0x400892e	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      4142	ops.c	FUNCTION_48	IF_100
0x4008934	          0x83f83d	                           cmp eax, 0x3d	      4142	ops.c	FUNCTION_48	IF_100
0x4008937	            0x750f	                           jne 0x4008948	      4142	ops.c	FUNCTION_48	IF_100
0x4008939	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4143	ops.c	FUNCTION_48	CALL_104
0x4008940	          0x4889c7	                            mov rdi, rax	      4143	ops.c	FUNCTION_48	CALL_104
0x4008943	      0xe800000000	                          call 0x4008948	      4143	ops.c	FUNCTION_48	CALL_104
0x4008948	    0xc70500000000	               mov dword [0x04008952], 0	      4145	ops.c	FUNCTION_48
0x4008952	      0xe800000000	                          call 0x4008957	      4148	ops.c	FUNCTION_48	CALL_105
0x4008957	            0xeb04	                           jmp 0x400895d	      4148	ops.c	FUNCTION_48	CALL_105
0x4008959	              0x90	                                     nop	      3518	ops.c	FUNCTION_48	IF_2
0x400895a	            0xeb01	                           jmp 0x400895d	      3518	ops.c	FUNCTION_48	IF_2
0x400895c	              0x90	                                     nop	      3528	ops.c	FUNCTION_48	IF_5	IF_6
0x400895d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4149	ops.c	FUNCTION_48
0x4008961	    0x644833042528	                xor rax, qword fs:[0x28]	      4149	ops.c	FUNCTION_48
0x400896a	            0x7405	                            je 0x4008971	      4149	ops.c	FUNCTION_48
0x400896c	      0xe800000000	                          call 0x4008971	      4149	ops.c	FUNCTION_48
0x4008971	    0x4881c4580100	                          add rsp, 0x158	      4149	ops.c	FUNCTION_48
0x4008978	              0x5b	                                 pop rbx	      4149	ops.c	FUNCTION_48
0x4008979	              0x5d	                                 pop rbp	      4149	ops.c	FUNCTION_48
0x400897a	              0xc3	                                     ret	      4149	ops.c	FUNCTION_48
get_reg_type	ELSE,0:DO,0:IF,3:functions,0:WHILE,0:FOR,0:SWITCH,1:CALL,3	51
0x400db5a	              0x55	                                push rbp	      6762	ops.c	FUNCTION_80
0x400db5b	          0x4889e5	                            mov rbp, rsp	      6762	ops.c	FUNCTION_80
0x400db5e	        0x4883ec10	                           sub rsp, 0x10	      6762	ops.c	FUNCTION_80
0x400db62	          0x897dfc	                mov dword [rbp - 4], edi	      6762	ops.c	FUNCTION_80
0x400db65	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6762	ops.c	FUNCTION_80
0x400db69	        0x837dfc5f	               cmp dword [rbp - 4], 0x5f	      6763	ops.c	FUNCTION_80	SWITCH_1
0x400db6d	            0x7717	                            ja 0x400db86	      6763	ops.c	FUNCTION_80	SWITCH_1
0x400db6f	          0x8b45fc	                mov eax, dword [rbp - 4]	      6763	ops.c	FUNCTION_80	SWITCH_1
0x400db72	    0x488b04c50000	                  mov rax, qword [rax*8]	      6763	ops.c	FUNCTION_80	SWITCH_1
0x400db7a	            0xffe0	                                 jmp rax	      6763	ops.c	FUNCTION_80	SWITCH_1
0x400db7c	      0xb800000000	                              mov eax, 0	      6778	ops.c	FUNCTION_80	SWITCH_1
0x400db81	      0xe987000000	                           jmp 0x400dc0d	      6778	ops.c	FUNCTION_80	SWITCH_1
0x400db86	          0x8b45fc	                mov eax, dword [rbp - 4]	      6782	ops.c	FUNCTION_80	CALL_1
0x400db89	            0x89c7	                            mov edi, eax	      6782	ops.c	FUNCTION_80	CALL_1
0x400db8b	      0xe800000000	                          call 0x400db90	      6782	ops.c	FUNCTION_80	CALL_1
0x400db90	          0x8945fc	                mov dword [rbp - 4], eax	      6782	ops.c	FUNCTION_80	CALL_1
0x400db93	        0x837dfc00	                  cmp dword [rbp - 4], 0	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x400db97	            0x741a	                            je 0x400dbb3	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x400db99	          0x8b45fc	                mov eax, dword [rbp - 4]	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x400db9c	      0xbe00000000	                              mov esi, 0	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x400dba1	            0x89c7	                            mov edi, eax	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x400dba3	      0xe800000000	                          call 0x400dba8	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x400dba8	            0x85c0	                           test eax, eax	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x400dbaa	            0x7507	                           jne 0x400dbb3	      6785	ops.c	FUNCTION_80	IF_1	CALL_2
0x400dbac	      0xb8ffffffff	                     mov eax, 0xffffffff	      6786	ops.c	FUNCTION_80	IF_1
0x400dbb1	            0xeb5a	                           jmp 0x400dc0d	      6786	ops.c	FUNCTION_80	IF_1
0x400dbb3	          0x8b45fc	                mov eax, dword [rbp - 4]	      6788	ops.c	FUNCTION_80	CALL_3
0x400dbb6	      0xbe00000000	                              mov esi, 0	      6788	ops.c	FUNCTION_80	CALL_3
0x400dbbb	            0x89c7	                            mov edi, eax	      6788	ops.c	FUNCTION_80	CALL_3
0x400dbbd	      0xe800000000	                          call 0x400dbc2	      6788	ops.c	FUNCTION_80	CALL_3
0x400dbc2	    0x488b05000000	            mov rax, qword [0x0400dbc9] 	      6790	ops.c	FUNCTION_80	IF_2
0x400dbc9	          0x488b00	                    mov rax, qword [rax]	      6790	ops.c	FUNCTION_80	IF_2
0x400dbcc	          0x4885c0	                           test rax, rax	      6790	ops.c	FUNCTION_80	IF_2
0x400dbcf	            0x7437	                            je 0x400dc08	      6790	ops.c	FUNCTION_80	IF_2
0x400dbd1	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6792	ops.c	FUNCTION_80	IF_2	IF_3
0x400dbd6	            0x7423	                            je 0x400dbfb	      6792	ops.c	FUNCTION_80	IF_2	IF_3
0x400dbd8	    0x488b05000000	            mov rax, qword [0x0400dbdf] 	      6792	ops.c	FUNCTION_80	IF_2	IF_3
0x400dbdf	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6792	ops.c	FUNCTION_80	IF_2	IF_3
0x400dbe3	            0x3c02	                               cmp al, 2	      6792	ops.c	FUNCTION_80	IF_2	IF_3
0x400dbe5	            0x7514	                           jne 0x400dbfb	      6792	ops.c	FUNCTION_80	IF_2	IF_3
0x400dbe7	    0x488b05000000	            mov rax, qword [0x0400dbee] 	      6793	ops.c	FUNCTION_80	IF_2	IF_3
0x400dbee	          0x8b4014	            mov eax, dword [rax + 0x14] 	      6793	ops.c	FUNCTION_80	IF_2	IF_3
0x400dbf1	          0x4863d0	                         movsxd rdx, eax	      6793	ops.c	FUNCTION_80	IF_2	IF_3
0x400dbf4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6793	ops.c	FUNCTION_80	IF_2	IF_3
0x400dbf8	          0x488910	                    mov qword [rax], rdx	      6793	ops.c	FUNCTION_80	IF_2	IF_3
0x400dbfb	    0x488b05000000	            mov rax, qword [0x0400dc02] 	      6794	ops.c	FUNCTION_80	IF_2
0x400dc02	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6794	ops.c	FUNCTION_80	IF_2
0x400dc06	            0xeb05	                           jmp 0x400dc0d	      6794	ops.c	FUNCTION_80	IF_2
0x400dc08	      0xb8ffffffff	                     mov eax, 0xffffffff	      6796	ops.c	FUNCTION_80
0x400dc0d	              0xc9	                                   leave	      6797	ops.c	FUNCTION_80
0x400dc0e	              0xc3	                                     ret	      6797	ops.c	FUNCTION_80
get_register_name	ELSE,5:DO,0:IF,7:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,0	28
0x4008aa3	              0x55	                                push rbp	      4209	ops.c	FUNCTION_51
0x4008aa4	          0x4889e5	                            mov rbp, rsp	      4209	ops.c	FUNCTION_51
0x4008aa7	          0x897dfc	                mov dword [rbp - 4], edi	      4209	ops.c	FUNCTION_51
0x4008aaa	        0x837dfcff	 cmp dword [rbp - 4], 0xffffffffffffffff	      4210	ops.c	FUNCTION_51	IF_1
0x4008aae	            0x7507	                           jne 0x4008ab7	      4210	ops.c	FUNCTION_51	IF_1
0x4008ab0	      0xb822000000	                           mov eax, 0x22	      4211	ops.c	FUNCTION_51	IF_1
0x4008ab5	            0xeb3b	                           jmp 0x4008af2	      4211	ops.c	FUNCTION_51	IF_1
0x4008ab7	        0x837dfc09	                  cmp dword [rbp - 4], 9	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4008abb	            0x7f08	                            jg 0x4008ac5	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4008abd	          0x8b45fc	                mov eax, dword [rbp - 4]	      4213	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4008ac0	          0x83c030	                           add eax, 0x30	      4213	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4008ac3	            0xeb2d	                           jmp 0x4008af2	      4213	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4008ac5	        0x837dfc24	               cmp dword [rbp - 4], 0x24	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4008ac9	            0x7507	                           jne 0x4008ad2	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4008acb	      0xb82d000000	                           mov eax, 0x2d	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4008ad0	            0xeb20	                           jmp 0x4008af2	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4008ad2	        0x837dfc25	               cmp dword [rbp - 4], 0x25	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4008ad6	            0x7507	                           jne 0x4008adf	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4008ad8	      0xb82a000000	                           mov eax, 0x2a	      4218	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4008add	            0xeb13	                           jmp 0x4008af2	      4218	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4008adf	        0x837dfc26	               cmp dword [rbp - 4], 0x26	      4219	ops.c	FUNCTION_51	ELSE_4	IF_5
0x4008ae3	            0x7507	                           jne 0x4008aec	      4219	ops.c	FUNCTION_51	ELSE_4	IF_5
0x4008ae5	      0xb82b000000	                           mov eax, 0x2b	      4220	ops.c	FUNCTION_51	ELSE_4	IF_5
0x4008aea	            0xeb06	                           jmp 0x4008af2	      4220	ops.c	FUNCTION_51	ELSE_4	IF_5
0x4008aec	          0x8b45fc	                mov eax, dword [rbp - 4]	      4235	ops.c	FUNCTION_51	ELSE_5
0x4008aef	          0x83c057	                           add eax, 0x57	      4235	ops.c	FUNCTION_51	ELSE_5
0x4008af2	              0x5d	                                 pop rbp	      4238	ops.c	FUNCTION_51
0x4008af3	              0xc3	                                     ret	      4238	ops.c	FUNCTION_51
write_viminfo_registers	ELSE,2:DO,0:IF,15:functions,0:WHILE,0:FOR,4:SWITCH,1:CALL,20	312
0x400ce7a	              0x55	                                push rbp	      6312	ops.c	FUNCTION_72
0x400ce7b	          0x4889e5	                            mov rbp, rsp	      6312	ops.c	FUNCTION_72
0x400ce7e	              0x53	                                push rbx	      6312	ops.c	FUNCTION_72
0x400ce7f	        0x4883ec58	                           sub rsp, 0x58	      6312	ops.c	FUNCTION_72
0x400ce83	        0x48897da8	             mov qword [rbp - 0x58], rdi	      6312	ops.c	FUNCTION_72
0x400ce87	      0xbf00000000	                              mov edi, 0	      6322	ops.c	FUNCTION_72	CALL_2
0x400ce8c	      0xe800000000	                          call 0x400ce91	      6322	ops.c	FUNCTION_72	CALL_2
0x400ce91	          0x4889c2	                            mov rdx, rax	      6322	ops.c	FUNCTION_72	CALL_2
0x400ce94	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6322	ops.c	FUNCTION_72	CALL_2
0x400ce98	          0x4889c6	                            mov rsi, rax	      6322	ops.c	FUNCTION_72	CALL_2
0x400ce9b	          0x4889d7	                            mov rdi, rdx	      6322	ops.c	FUNCTION_72	CALL_2
0x400ce9e	      0xe800000000	                          call 0x400cea3	      6322	ops.c	FUNCTION_72	CALL_2
0x400cea3	      0xbf3c000000	                           mov edi, 0x3c	      6325	ops.c	FUNCTION_72	CALL_3
0x400cea8	      0xe800000000	                          call 0x400cead	      6325	ops.c	FUNCTION_72	CALL_3
0x400cead	          0x8945c8	             mov dword [rbp - 0x38], eax	      6325	ops.c	FUNCTION_72	CALL_3
0x400ceb0	        0x837dc800	               cmp dword [rbp - 0x38], 0	      6326	ops.c	FUNCTION_72	IF_1
0x400ceb4	            0x790d	                           jns 0x400cec3	      6326	ops.c	FUNCTION_72	IF_1
0x400ceb6	      0xbf22000000	                           mov edi, 0x22	      6327	ops.c	FUNCTION_72	CALL_4
0x400cebb	      0xe800000000	                          call 0x400cec0	      6327	ops.c	FUNCTION_72	CALL_4
0x400cec0	          0x8945c8	             mov dword [rbp - 0x38], eax	      6327	ops.c	FUNCTION_72	CALL_4
0x400cec3	        0x837dc800	               cmp dword [rbp - 0x38], 0	      6328	ops.c	FUNCTION_72	IF_2
0x400cec7	     0xf841e040000	                            je 0x400d2eb	      6328	ops.c	FUNCTION_72	IF_2
0x400cecd	      0xbf73000000	                           mov edi, 0x73	      6330	ops.c	FUNCTION_72	CALL_5
0x400ced2	      0xe800000000	                          call 0x400ced7	      6330	ops.c	FUNCTION_72	CALL_5
0x400ced7	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6330	ops.c	FUNCTION_72	CALL_5
0x400ceda	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6331	ops.c	FUNCTION_72	IF_3
0x400cede	     0xf840a040000	                            je 0x400d2ee	      6331	ops.c	FUNCTION_72	IF_3
0x400cee4	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6334	ops.c	FUNCTION_72	FOR_1
0x400ceeb	      0xe9ef030000	                           jmp 0x400d2df	      6334	ops.c	FUNCTION_72	FOR_1
0x400cef0	        0x837dbc25	           cmp dword [rbp - 0x44], 0x25 	      6338	ops.c	FUNCTION_72	FOR_1	IF_4
0x400cef4	     0xf84d4030000	                            je 0x400d2ce	      6338	ops.c	FUNCTION_72	FOR_1	IF_4
0x400cefa	        0x837dbc26	           cmp dword [rbp - 0x44], 0x26 	      6338	ops.c	FUNCTION_72	FOR_1	IF_4
0x400cefe	     0xf84ca030000	                            je 0x400d2ce	      6338	ops.c	FUNCTION_72	FOR_1	IF_4
0x400cf04	        0x837dbc27	           cmp dword [rbp - 0x44], 0x27 	      6343	ops.c	FUNCTION_72	FOR_1	IF_5
0x400cf08	     0xf84c3030000	                            je 0x400d2d1	      6343	ops.c	FUNCTION_72	FOR_1	IF_5
0x400cf0e	    0x488b05000000	            mov rax, qword [0x0400cf15] 	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf15	          0x4885c0	                           test rax, rax	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf18	            0x747c	                            je 0x400cf96	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf1a	    0x488b05000000	            mov rax, qword [0x0400cf21] 	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf21	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf24	          0x4863d2	                         movsxd rdx, edx	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf27	        0x48c1e205	                              shl rdx, 5	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf2b	          0x4801d0	                            add rax, rdx	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf2e	          0x488b00	                    mov rax, qword [rax]	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf31	          0x4885c0	                           test rax, rax	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf34	            0x7460	                            je 0x400cf96	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf36	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf39	            0x4898	                                    cdqe	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf3b	        0x48c1e005	                              shl rax, 5	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf3f	    0x480500000000	                              add rax, 0	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf45	          0x488b00	                    mov rax, qword [rax]	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf48	          0x4885c0	                           test rax, rax	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf4b	            0x742f	                            je 0x400cf7c	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf4d	    0x488b05000000	            mov rax, qword [0x0400cf54] 	      6351	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf54	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6351	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf57	          0x4863d2	                         movsxd rdx, edx	      6351	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf5a	        0x48c1e205	                              shl rdx, 5	      6351	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf5e	          0x4801d0	                            add rax, rdx	      6351	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf61	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6351	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf65	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6351	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf68	            0x4898	                                    cdqe	      6351	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf6a	        0x48c1e005	                              shl rax, 5	      6351	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf6e	    0x480500000000	                              add rax, 0	      6351	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf74	          0x488b00	                    mov rax, qword [rax]	      6351	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf77	          0x4839c2	                            cmp rdx, rax	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf7a	            0x7e1a	                           jle 0x400cf96	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf7c	    0x488b05000000	            mov rax, qword [0x0400cf83] 	      6352	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf83	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6352	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf86	          0x4863d2	                         movsxd rdx, edx	      6352	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf89	        0x48c1e205	                              shl rdx, 5	      6352	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf8d	          0x4801d0	                            add rax, rdx	      6352	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf90	        0x488945e8	             mov qword [rbp - 0x18], rax	      6352	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf94	            0xeb2e	                           jmp 0x400cfc4	      6352	ops.c	FUNCTION_72	FOR_1	IF_6
0x400cf96	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x400cf99	            0x4898	                                    cdqe	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x400cf9b	        0x48c1e005	                              shl rax, 5	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x400cf9f	    0x480500000000	                              add rax, 0	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x400cfa5	          0x488b00	                    mov rax, qword [rax]	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x400cfa8	          0x4885c0	                           test rax, rax	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x400cfab	     0xf8423030000	                            je 0x400d2d4	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x400cfb1	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6356	ops.c	FUNCTION_72	FOR_1	ELSE_2
0x400cfb4	            0x4898	                                    cdqe	      6356	ops.c	FUNCTION_72	FOR_1	ELSE_2
0x400cfb6	        0x48c1e005	                              shl rax, 5	      6356	ops.c	FUNCTION_72	FOR_1	ELSE_2
0x400cfba	    0x480500000000	                              add rax, 0	      6356	ops.c	FUNCTION_72	FOR_1	ELSE_2
0x400cfc0	        0x488945e8	             mov qword [rbp - 0x18], rax	      6356	ops.c	FUNCTION_72	FOR_1	ELSE_2
0x400cfc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6359	ops.c	FUNCTION_72	FOR_1
0x400cfc8	        0x488b4008	                mov rax, qword [rax + 8]	      6359	ops.c	FUNCTION_72	FOR_1
0x400cfcc	          0x8945c4	             mov dword [rbp - 0x3c], eax	      6359	ops.c	FUNCTION_72	FOR_1
0x400cfcf	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      6360	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cfd3	     0xf84fe020000	                            je 0x400d2d7	      6360	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cfd9	        0x837dc401	               cmp dword [rbp - 0x3c], 1	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cfdd	            0x7521	                           jne 0x400d000	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cfdf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cfe3	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cfe7	            0x84c0	                             test al, al	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cfe9	            0x7515	                           jne 0x400d000	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cfeb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cfef	          0x488b00	                    mov rax, qword [rax]	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cff2	          0x488b00	                    mov rax, qword [rax]	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cff5	           0xfb600	                   movzx eax, byte [rax]	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cff8	            0x84c0	                             test al, al	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x400cffa	     0xf84d7020000	                            je 0x400d2d7	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x400d000	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x400d004	            0x7e57	                           jle 0x400d05d	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x400d006	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6368	ops.c	FUNCTION_72	FOR_1	IF_9
0x400d00e	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x400d015	            0xeb2b	                           jmp 0x400d042	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x400d017	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400d01b	          0x488b00	                    mov rax, qword [rax]	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400d01e	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400d021	          0x4863d2	                         movsxd rdx, edx	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400d024	        0x48c1e203	                              shl rdx, 3	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400d028	          0x4801d0	                            add rax, rdx	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400d02b	          0x488b00	                    mov rax, qword [rax]	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400d02e	          0x4889c7	                            mov rdi, rax	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400d031	      0xe800000000	                          call 0x400d036	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400d036	        0x4883c001	                              add rax, 1	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400d03a	        0x480145e0	            add qword [rbp - 0x20], rax 	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x400d03e	        0x8345c001	               add dword [rbp - 0x40], 1	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x400d042	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x400d045	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x400d048	            0x7ccd	                            jl 0x400d017	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x400d04a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x400d04d	            0x4898	                                    cdqe	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x400d04f	        0x48c1e00a	                            shl rax, 0xa	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x400d053	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x400d057	     0xf8c7d020000	                            jl 0x400d2da	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x400d05d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d061	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d065	           0xfb6c0	                           movzx eax, al	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d068	          0x83f801	                              cmp eax, 1	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d06b	            0x740b	                            je 0x400d078	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d06d	          0x83f802	                              cmp eax, 2	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d070	            0x741a	                            je 0x400d08c	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d072	            0x85c0	                           test eax, eax	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d074	            0x740c	                            je 0x400d082	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d076	            0xeb1e	                           jmp 0x400d096	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d078	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      6378	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d080	            0xeb5d	                           jmp 0x400d0df	      6379	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d082	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      6381	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d08a	            0xeb53	                           jmp 0x400d0df	      6382	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d08c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      6384	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d094	            0xeb49	                           jmp 0x400d0df	      6385	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d096	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6388	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d09a	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6388	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d09e	           0xfb6d8	                           movzx ebx, al	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400d0a1	      0xbf00000000	                              mov edi, 0	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400d0a6	      0xe800000000	                          call 0x400d0ab	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400d0ab	          0x4889c1	                            mov rcx, rax	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400d0ae	    0x488b05000000	            mov rax, qword [0x0400d0b5] 	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400d0b5	            0x89da	                            mov edx, ebx	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400d0b7	          0x4889ce	                            mov rsi, rcx	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400d0ba	          0x4889c7	                            mov rdi, rax	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400d0bd	      0xb800000000	                              mov eax, 0	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400d0c2	      0xe800000000	                          call 0x400d0c7	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400d0c7	    0x488b05000000	            mov rax, qword [0x0400d0ce] 	      6389	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_9
0x400d0ce	          0x4889c7	                            mov rdi, rax	      6389	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_9
0x400d0d1	      0xe800000000	                          call 0x400d0d6	      6389	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_9
0x400d0d6	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      6390	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d0de	              0x90	                                     nop	      6391	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x400d0df	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x400d0e2	            0x4898	                                    cdqe	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x400d0e4	        0x48c1e005	                              shl rax, 5	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x400d0e8	    0x488d90000000	                          lea rdx, [rax]	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x400d0ef	    0x488b05000000	            mov rax, qword [0x0400d0f6] 	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x400d0f6	          0x4839c2	                            cmp rdx, rax	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x400d0f9	            0x7511	                           jne 0x400d10c	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x400d0fb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6394	ops.c	FUNCTION_72	FOR_1	CALL_10
0x400d0ff	          0x4889c6	                            mov rsi, rax	      6394	ops.c	FUNCTION_72	FOR_1	CALL_10
0x400d102	      0xbf22000000	                           mov edi, 0x22	      6394	ops.c	FUNCTION_72	FOR_1	CALL_10
0x400d107	      0xe800000000	                          call 0x400d10c	      6394	ops.c	FUNCTION_72	FOR_1	CALL_10
0x400d10c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6395	ops.c	FUNCTION_72	FOR_1	CALL_11
0x400d10f	            0x89c7	                            mov edi, eax	      6395	ops.c	FUNCTION_72	FOR_1	CALL_11
0x400d111	      0xe800000000	                          call 0x400d116	      6395	ops.c	FUNCTION_72	FOR_1	CALL_11
0x400d116	          0x8845bb	               mov byte [rbp - 0x45], al	      6395	ops.c	FUNCTION_72	FOR_1	CALL_11
0x400d119	         0xfb655bb	            movzx edx, byte [rbp - 0x45]	      6396	ops.c	FUNCTION_72	FOR_1	CALL_12
0x400d11d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6396	ops.c	FUNCTION_72	FOR_1	CALL_12
0x400d121	      0xbe00000000	                              mov esi, 0	      6396	ops.c	FUNCTION_72	FOR_1	CALL_12
0x400d126	          0x4889c7	                            mov rdi, rax	      6396	ops.c	FUNCTION_72	FOR_1	CALL_12
0x400d129	      0xb800000000	                              mov eax, 0	      6396	ops.c	FUNCTION_72	FOR_1	CALL_12
0x400d12e	      0xe800000000	                          call 0x400d133	      6396	ops.c	FUNCTION_72	FOR_1	CALL_12
0x400d133	         0xfb655bb	            movzx edx, byte [rbp - 0x45]	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x400d137	    0x8b0500000000	            mov eax, dword [0x0400d13d] 	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x400d13d	            0x39c2	                            cmp edx, eax	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x400d13f	            0x7511	                           jne 0x400d152	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x400d141	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6398	ops.c	FUNCTION_72	FOR_1	CALL_13
0x400d145	          0x4889c6	                            mov rsi, rax	      6398	ops.c	FUNCTION_72	FOR_1	CALL_13
0x400d148	      0xbf40000000	                           mov edi, 0x40	      6398	ops.c	FUNCTION_72	FOR_1	CALL_13
0x400d14d	      0xe800000000	                          call 0x400d152	      6398	ops.c	FUNCTION_72	FOR_1	CALL_13
0x400d152	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6399	ops.c	FUNCTION_72	FOR_1	CALL_14
0x400d156	          0x8b4814	            mov ecx, dword [rax + 0x14] 	      6399	ops.c	FUNCTION_72	FOR_1	CALL_14
0x400d159	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6399	ops.c	FUNCTION_72	FOR_1	CALL_14
0x400d15d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6399	ops.c	FUNCTION_72	FOR_1	CALL_14
0x400d161	      0xbe00000000	                              mov esi, 0	      6399	ops.c	FUNCTION_72	FOR_1	CALL_14
0x400d166	          0x4889c7	                            mov rdi, rax	      6399	ops.c	FUNCTION_72	FOR_1	CALL_14
0x400d169	      0xb800000000	                              mov eax, 0	      6399	ops.c	FUNCTION_72	FOR_1	CALL_14
0x400d16e	      0xe800000000	                          call 0x400d173	      6399	ops.c	FUNCTION_72	FOR_1	CALL_14
0x400d173	        0x837dc800	               cmp dword [rbp - 0x38], 0	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x400d177	            0x7e0e	                           jle 0x400d187	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x400d179	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x400d17c	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x400d17f	            0x7e06	                           jle 0x400d187	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x400d181	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6403	ops.c	FUNCTION_72	FOR_1	IF_13
0x400d184	          0x8945c4	             mov dword [rbp - 0x3c], eax	      6403	ops.c	FUNCTION_72	FOR_1	IF_13
0x400d187	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x400d18e	            0xeb3b	                           jmp 0x400d1cb	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x400d190	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_15
0x400d194	          0x4889c6	                            mov rsi, rax	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_15
0x400d197	      0xbf09000000	                              mov edi, 9	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_15
0x400d19c	      0xe800000000	                          call 0x400d1a1	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_15
0x400d1a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400d1a5	          0x488b00	                    mov rax, qword [rax]	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400d1a8	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400d1ab	          0x4863d2	                         movsxd rdx, edx	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400d1ae	        0x48c1e203	                              shl rdx, 3	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400d1b2	          0x4801d0	                            add rax, rdx	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400d1b5	          0x488b10	                    mov rdx, qword [rax]	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400d1b8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400d1bc	          0x4889d6	                            mov rsi, rdx	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400d1bf	          0x4889c7	                            mov rdi, rax	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400d1c2	      0xe800000000	                          call 0x400d1c7	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0x400d1c7	        0x8345c001	               add dword [rbp - 0x40], 1	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x400d1cb	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x400d1ce	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x400d1d1	            0x7cbd	                            jl 0x400d190	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x400d1d3	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      6411	ops.c	FUNCTION_72	FOR_1
0x400d1da	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6420	ops.c	FUNCTION_72	FOR_1	IF_14
0x400d1dd	            0x4898	                                    cdqe	      6420	ops.c	FUNCTION_72	FOR_1	IF_14
0x400d1df	        0x48c1e005	                              shl rax, 5	      6420	ops.c	FUNCTION_72	FOR_1	IF_14
0x400d1e3	    0x488d90000000	                          lea rdx, [rax]	      6420	ops.c	FUNCTION_72	FOR_1	IF_14
0x400d1ea	    0x488b05000000	            mov rax, qword [0x0400d1f1] 	      6420	ops.c	FUNCTION_72	FOR_1	IF_14
0x400d1f1	          0x4839c2	                            cmp rdx, rax	      6420	ops.c	FUNCTION_72	FOR_1	IF_14
0x400d1f4	            0x7504	                           jne 0x400d1fa	      6420	ops.c	FUNCTION_72	FOR_1	IF_14
0x400d1f6	        0x834dcc01	                or dword [rbp - 0x34], 1	      6421	ops.c	FUNCTION_72	FOR_1	IF_14
0x400d1fa	         0xfb655bb	            movzx edx, byte [rbp - 0x45]	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x400d1fe	    0x8b0500000000	            mov eax, dword [0x0400d204] 	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x400d204	            0x39c2	                            cmp edx, eax	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x400d206	            0x7504	                           jne 0x400d20c	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x400d208	        0x834dcc02	                or dword [rbp - 0x34], 2	      6423	ops.c	FUNCTION_72	FOR_1	IF_15
0x400d20c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6426	ops.c	FUNCTION_72	FOR_1
0x400d210	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      6426	ops.c	FUNCTION_72	FOR_1
0x400d214	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6425	ops.c	FUNCTION_72	FOR_1
0x400d218	          0x8b4814	            mov ecx, dword [rax + 0x14] 	      6425	ops.c	FUNCTION_72	FOR_1
0x400d21b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6425	ops.c	FUNCTION_72	FOR_1
0x400d21f	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6425	ops.c	FUNCTION_72	FOR_1
0x400d223	        0x440fb6c0	                           movzx r8d, al	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d227	          0x8b7dbc	             mov edi, dword [rbp - 0x44]	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d22a	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d22d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d231	        0x4883ec08	                              sub rsp, 8	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d235	              0x56	                                push rsi	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d236	              0x51	                                push rcx	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d237	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d23a	              0x51	                                push rcx	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d23b	          0x4589c1	                            mov r9d, r8d	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d23e	          0x4189f8	                            mov r8d, edi	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d241	            0x89d1	                            mov ecx, edx	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d243	      0xba03000000	                              mov edx, 3	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d248	      0xbe00000000	                              mov esi, 0	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d24d	          0x4889c7	                            mov rdi, rax	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d250	      0xb800000000	                              mov eax, 0	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d255	      0xe800000000	                          call 0x400d25a	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d25a	        0x4883c420	                           add rsp, 0x20	      6424	ops.c	FUNCTION_72	FOR_1	CALL_17
0x400d25e	    0xc745d0b90100	          mov dword [rbp - 0x30], 0x1b9 	      6428	ops.c	FUNCTION_72	FOR_1
0x400d265	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x400d26c	            0xeb45	                           jmp 0x400d2b3	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x400d26e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_18
0x400d272	          0x4889c6	                            mov rsi, rax	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_18
0x400d275	      0xbf2c000000	                           mov edi, 0x2c	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_18
0x400d27a	      0xe800000000	                          call 0x400d27f	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_18
0x400d27f	        0x836dd001	               sub dword [rbp - 0x30], 1	      6432	ops.c	FUNCTION_72	FOR_1	FOR_4
0x400d283	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d287	          0x488b00	                    mov rax, qword [rax]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d28a	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d28d	          0x4863d2	                         movsxd rdx, edx	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d290	        0x48c1e203	                              shl rdx, 3	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d294	          0x4801d0	                            add rax, rdx	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d297	          0x488b08	                    mov rcx, qword [rax]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d29a	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d29d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d2a1	          0x4889ce	                            mov rsi, rcx	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d2a4	          0x4889c7	                            mov rdi, rax	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d2a7	      0xe800000000	                          call 0x400d2ac	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d2ac	          0x8945d0	             mov dword [rbp - 0x30], eax	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0x400d2af	        0x8345c001	               add dword [rbp - 0x40], 1	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x400d2b3	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x400d2b6	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x400d2b9	            0x7cb3	                            jl 0x400d26e	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x400d2bb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6436	ops.c	FUNCTION_72	FOR_1	CALL_20
0x400d2bf	          0x4889c6	                            mov rsi, rax	      6436	ops.c	FUNCTION_72	FOR_1	CALL_20
0x400d2c2	      0xbf0a000000	                            mov edi, 0xa	      6436	ops.c	FUNCTION_72	FOR_1	CALL_20
0x400d2c7	      0xe800000000	                          call 0x400d2cc	      6436	ops.c	FUNCTION_72	FOR_1	CALL_20
0x400d2cc	            0xeb0d	                           jmp 0x400d2db	      6436	ops.c	FUNCTION_72	FOR_1	CALL_20
0x400d2ce	              0x90	                                     nop	      6339	ops.c	FUNCTION_72	FOR_1	IF_4
0x400d2cf	            0xeb0a	                           jmp 0x400d2db	      6339	ops.c	FUNCTION_72	FOR_1	IF_4
0x400d2d1	              0x90	                                     nop	      6344	ops.c	FUNCTION_72	FOR_1	IF_5
0x400d2d2	            0xeb07	                           jmp 0x400d2db	      6344	ops.c	FUNCTION_72	FOR_1	IF_5
0x400d2d4	              0x90	                                     nop	      6354	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x400d2d5	            0xeb04	                           jmp 0x400d2db	      6354	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x400d2d7	              0x90	                                     nop	      6363	ops.c	FUNCTION_72	FOR_1	IF_8
0x400d2d8	            0xeb01	                           jmp 0x400d2db	      6363	ops.c	FUNCTION_72	FOR_1	IF_8
0x400d2da	              0x90	                                     nop	      6372	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x400d2db	        0x8345bc01	               add dword [rbp - 0x44], 1	      6334	ops.c	FUNCTION_72	FOR_1
0x400d2df	        0x837dbc27	           cmp dword [rbp - 0x44], 0x27 	      6334	ops.c	FUNCTION_72	FOR_1
0x400d2e3	     0xf8e07fcffff	                           jle 0x400cef0	      6334	ops.c	FUNCTION_72	FOR_1
0x400d2e9	            0xeb04	                           jmp 0x400d2ef	      6334	ops.c	FUNCTION_72	FOR_1
0x400d2eb	              0x90	                                     nop	      6329	ops.c	FUNCTION_72	IF_2
0x400d2ec	            0xeb01	                           jmp 0x400d2ef	      6329	ops.c	FUNCTION_72	IF_2
0x400d2ee	              0x90	                                     nop	      6332	ops.c	FUNCTION_72	IF_3
0x400d2ef	        0x488b5df8	                mov rbx, qword [rbp - 8]	      6439	ops.c	FUNCTION_72
0x400d2f3	              0xc9	                                   leave	      6439	ops.c	FUNCTION_72
0x400d2f4	              0xc3	                                     ret	      6439	ops.c	FUNCTION_72
get_spec_reg	ELSE,0:DO,0:IF,7:functions,0:WHILE,0:FOR,0:SWITCH,1:CALL,16	163
0x4002409	              0x55	                                push rbp	      1512	ops.c	FUNCTION_28
0x400240a	          0x4889e5	                            mov rbp, rsp	      1512	ops.c	FUNCTION_28
0x400240d	        0x4883ec30	                           sub rsp, 0x30	      1512	ops.c	FUNCTION_28
0x4002411	          0x897dec	             mov dword [rbp - 0x14], edi	      1512	ops.c	FUNCTION_28
0x4002414	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1512	ops.c	FUNCTION_28
0x4002418	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1512	ops.c	FUNCTION_28
0x400241c	          0x894de8	             mov dword [rbp - 0x18], ecx	      1512	ops.c	FUNCTION_28
0x400241f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1515	ops.c	FUNCTION_28
0x4002423	    0x48c700000000	                      mov qword [rax], 0	      1515	ops.c	FUNCTION_28
0x400242a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1516	ops.c	FUNCTION_28
0x400242e	    0xc70000000000	                      mov dword [rax], 0	      1516	ops.c	FUNCTION_28
0x4002434	        0x837dec5f	           cmp dword [rbp - 0x14], 0x5f 	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4002438	     0xf874c020000	                            ja 0x400268a	      1517	ops.c	FUNCTION_28	SWITCH_1
0x400243e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4002441	    0x488b04c50000	                  mov rax, qword [rax*8]	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4002449	            0xffe0	                                 jmp rax	      1517	ops.c	FUNCTION_28	SWITCH_1
0x400244b	        0x837de800	               cmp dword [rbp - 0x18], 0	      1520	ops.c	FUNCTION_28	SWITCH_1	IF_1
0x400244f	            0x7405	                            je 0x4002456	      1520	ops.c	FUNCTION_28	SWITCH_1	IF_1
0x4002451	      0xe800000000	                          call 0x4002456	      1521	ops.c	FUNCTION_28	SWITCH_1	CALL_1
0x4002456	    0x488b05000000	            mov rax, qword [0x0400245d] 	      1522	ops.c	FUNCTION_28	SWITCH_1
0x400245d	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      1522	ops.c	FUNCTION_28	SWITCH_1
0x4002464	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1522	ops.c	FUNCTION_28	SWITCH_1
0x4002468	          0x488910	                    mov qword [rax], rdx	      1522	ops.c	FUNCTION_28	SWITCH_1
0x400246b	      0xb801000000	                              mov eax, 1	      1523	ops.c	FUNCTION_28	SWITCH_1
0x4002470	      0xe91a020000	                           jmp 0x400268f	      1523	ops.c	FUNCTION_28	SWITCH_1
0x4002475	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x4002478	            0x89c7	                            mov edi, eax	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x400247a	      0xe800000000	                          call 0x400247f	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x400247f	          0x4889c2	                            mov rdx, rax	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x4002482	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x4002486	          0x488910	                    mov qword [rax], rdx	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x4002489	      0xb801000000	                              mov eax, 1	      1527	ops.c	FUNCTION_28	SWITCH_1
0x400248e	      0xe9fc010000	                           jmp 0x400268f	      1527	ops.c	FUNCTION_28	SWITCH_1
0x4002493	      0xe800000000	                          call 0x4002498	      1531	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x4002498	          0x4889c2	                            mov rdx, rax	      1531	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x400249b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1531	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x400249f	          0x488910	                    mov qword [rax], rdx	      1531	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x40024a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1532	ops.c	FUNCTION_28	SWITCH_1
0x40024a6	    0xc70001000000	                      mov dword [rax], 1	      1532	ops.c	FUNCTION_28	SWITCH_1
0x40024ac	      0xb801000000	                              mov eax, 1	      1533	ops.c	FUNCTION_28	SWITCH_1
0x40024b1	      0xe9d9010000	                           jmp 0x400268f	      1533	ops.c	FUNCTION_28	SWITCH_1
0x40024b6	    0x488b05000000	            mov rax, qword [0x040024bd] 	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x40024bd	          0x4885c0	                           test rax, rax	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x40024c0	            0x7518	                           jne 0x40024da	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x40024c2	        0x837de800	               cmp dword [rbp - 0x18], 0	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x40024c6	            0x7412	                            je 0x40024da	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x40024c8	      0xbf00000000	                              mov edi, 0	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40024cd	      0xe800000000	                          call 0x40024d2	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40024d2	          0x4889c7	                            mov rdi, rax	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40024d5	      0xe800000000	                          call 0x40024da	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40024da	    0x488b15000000	            mov rdx, qword [0x040024e1] 	      1539	ops.c	FUNCTION_28	SWITCH_1
0x40024e1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1539	ops.c	FUNCTION_28	SWITCH_1
0x40024e5	          0x488910	                    mov qword [rax], rdx	      1539	ops.c	FUNCTION_28	SWITCH_1
0x40024e8	      0xb801000000	                              mov eax, 1	      1540	ops.c	FUNCTION_28	SWITCH_1
0x40024ed	      0xe99d010000	                           jmp 0x400268f	      1540	ops.c	FUNCTION_28	SWITCH_1
0x40024f2	      0xe800000000	                          call 0x40024f7	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x40024f7	          0x4885c0	                           test rax, rax	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x40024fa	            0x7518	                           jne 0x4002514	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x40024fc	        0x837de800	               cmp dword [rbp - 0x18], 0	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x4002500	            0x7412	                            je 0x4002514	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x4002502	      0xbf00000000	                              mov edi, 0	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4002507	      0xe800000000	                          call 0x400250c	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x400250c	          0x4889c7	                            mov rdi, rax	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x400250f	      0xe800000000	                          call 0x4002514	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4002514	      0xe800000000	                          call 0x4002519	      1545	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x4002519	          0x4889c2	                            mov rdx, rax	      1545	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x400251c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1545	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x4002520	          0x488910	                    mov qword [rax], rdx	      1545	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x4002523	      0xb801000000	                              mov eax, 1	      1546	ops.c	FUNCTION_28	SWITCH_1
0x4002528	      0xe962010000	                           jmp 0x400268f	      1546	ops.c	FUNCTION_28	SWITCH_1
0x400252d	      0xe800000000	                          call 0x4002532	      1549	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x4002532	          0x4889c2	                            mov rdx, rax	      1549	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x4002535	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1549	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x4002539	          0x488910	                    mov qword [rax], rdx	      1549	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x400253c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1550	ops.c	FUNCTION_28	SWITCH_1
0x4002540	    0xc70001000000	                      mov dword [rax], 1	      1550	ops.c	FUNCTION_28	SWITCH_1
0x4002546	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x400254a	          0x488b00	                    mov rax, qword [rax]	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x400254d	          0x4885c0	                           test rax, rax	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x4002550	            0x7518	                           jne 0x400256a	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x4002552	        0x837de800	               cmp dword [rbp - 0x18], 0	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x4002556	            0x7412	                            je 0x400256a	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x4002558	      0xbf00000000	                              mov edi, 0	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x400255d	      0xe800000000	                          call 0x4002562	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002562	          0x4889c7	                            mov rdi, rax	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x4002565	      0xe800000000	                          call 0x400256a	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x400256a	      0xb801000000	                              mov eax, 1	      1553	ops.c	FUNCTION_28	SWITCH_1
0x400256f	      0xe91b010000	                           jmp 0x400268f	      1553	ops.c	FUNCTION_28	SWITCH_1
0x4002574	        0x837de800	               cmp dword [rbp - 0x18], 0	      1558	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x4002578	            0x750a	                           jne 0x4002584	      1558	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x400257a	      0xb800000000	                              mov eax, 0	      1559	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x400257f	      0xe90b010000	                           jmp 0x400268f	      1559	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x4002584	        0x837dec10	           cmp dword [rbp - 0x14], 0x10 	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002588	            0x7507	                           jne 0x4002591	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x400258a	      0xb807000000	                              mov eax, 7	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x400258f	            0xeb05	                           jmp 0x4002596	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002591	      0xb805000000	                              mov eax, 5	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002596	      0xba00000000	                              mov edx, 0	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x400259b	      0xbe01000000	                              mov esi, 1	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x40025a0	            0x89c7	                            mov edi, eax	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x40025a2	      0xe800000000	                          call 0x40025a7	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x40025a7	          0x4889c2	                            mov rdx, rax	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x40025aa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x40025ae	          0x488910	                    mov qword [rax], rdx	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x40025b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1562	ops.c	FUNCTION_28	SWITCH_1
0x40025b5	    0xc70001000000	                      mov dword [rax], 1	      1562	ops.c	FUNCTION_28	SWITCH_1
0x40025bb	      0xb801000000	                              mov eax, 1	      1563	ops.c	FUNCTION_28	SWITCH_1
0x40025c0	      0xe9ca000000	                           jmp 0x400268f	      1563	ops.c	FUNCTION_28	SWITCH_1
0x40025c5	        0x837de800	               cmp dword [rbp - 0x18], 0	      1568	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x40025c9	            0x750a	                           jne 0x40025d5	      1568	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x40025cb	      0xb800000000	                              mov eax, 0	      1569	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x40025d0	      0xe9ba000000	                           jmp 0x400268f	      1569	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x40025d5	        0x837dec17	           cmp dword [rbp - 0x14], 0x17 	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40025d9	            0x7507	                           jne 0x40025e2	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40025db	      0xba03000000	                              mov edx, 3	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40025e0	            0xeb05	                           jmp 0x40025e7	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40025e2	      0xba02000000	                              mov edx, 2	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40025e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40025eb	            0x89d6	                            mov esi, edx	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40025ed	          0x4889c7	                            mov rdi, rax	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40025f0	      0xe800000000	                          call 0x40025f5	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40025f5	          0x8945fc	                mov dword [rbp - 4], eax	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40025f8	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x40025fc	            0x7419	                            je 0x4002617	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x40025fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002602	          0x488b00	                    mov rax, qword [rax]	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002605	          0x8b55fc	                mov edx, dword [rbp - 4]	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002608	            0x89d6	                            mov esi, edx	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x400260a	          0x4889c7	                            mov rdi, rax	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x400260d	      0xe800000000	                          call 0x4002612	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002612	          0x4889c2	                            mov rdx, rax	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002615	            0xeb05	                           jmp 0x400261c	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002617	      0xba00000000	                              mov edx, 0	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x400261c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002620	          0x488910	                    mov qword [rax], rdx	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4002623	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1573	ops.c	FUNCTION_28	SWITCH_1
0x4002627	    0xc70001000000	                      mov dword [rax], 1	      1573	ops.c	FUNCTION_28	SWITCH_1
0x400262d	      0xb801000000	                              mov eax, 1	      1574	ops.c	FUNCTION_28	SWITCH_1
0x4002632	            0xeb5b	                           jmp 0x400268f	      1574	ops.c	FUNCTION_28	SWITCH_1
0x4002634	        0x837de800	               cmp dword [rbp - 0x18], 0	      1577	ops.c	FUNCTION_28	SWITCH_1	IF_7
0x4002638	            0x7507	                           jne 0x4002641	      1577	ops.c	FUNCTION_28	SWITCH_1	IF_7
0x400263a	      0xb800000000	                              mov eax, 0	      1578	ops.c	FUNCTION_28	SWITCH_1	IF_7
0x400263f	            0xeb4e	                           jmp 0x400268f	      1578	ops.c	FUNCTION_28	SWITCH_1	IF_7
0x4002641	    0x488b05000000	            mov rax, qword [0x04002648] 	      1581	ops.c	FUNCTION_28	SWITCH_1
0x4002648	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x400264c	    0x488b05000000	            mov rax, qword [0x04002653] 	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4002653	        0x488b4008	                mov rax, qword [rax + 8]	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4002657	      0xba00000000	                              mov edx, 0	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x400265c	          0x4889ce	                            mov rsi, rcx	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x400265f	          0x4889c7	                            mov rdi, rax	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4002662	      0xe800000000	                          call 0x4002667	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4002667	          0x4889c2	                            mov rdx, rax	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x400266a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x400266e	          0x488910	                    mov qword [rax], rdx	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4002671	      0xb801000000	                              mov eax, 1	      1582	ops.c	FUNCTION_28	SWITCH_1
0x4002676	            0xeb17	                           jmp 0x400268f	      1582	ops.c	FUNCTION_28	SWITCH_1
0x4002678	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1585	ops.c	FUNCTION_28	SWITCH_1
0x400267c	    0x48c700000000	                      mov qword [rax], 0	      1585	ops.c	FUNCTION_28	SWITCH_1
0x4002683	      0xb801000000	                              mov eax, 1	      1586	ops.c	FUNCTION_28	SWITCH_1
0x4002688	            0xeb05	                           jmp 0x400268f	      1586	ops.c	FUNCTION_28	SWITCH_1
0x400268a	      0xb800000000	                              mov eax, 0	      1589	ops.c	FUNCTION_28
0x400268f	              0xc9	                                   leave	      1590	ops.c	FUNCTION_28
0x4002690	              0xc3	                                     ret	      1590	ops.c	FUNCTION_28
get_op_char	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,0	13
0x400011d	              0x55	                                push rbp	       213	ops.c	FUNCTION_3
0x400011e	          0x4889e5	                            mov rbp, rsp	       213	ops.c	FUNCTION_3
0x4000121	          0x897dfc	                mov dword [rbp - 4], edi	       213	ops.c	FUNCTION_3
0x4000124	          0x8b45fc	                mov eax, dword [rbp - 4]	       214	ops.c	FUNCTION_3
0x4000127	          0x4863d0	                         movsxd rdx, eax	       214	ops.c	FUNCTION_3
0x400012a	          0x4889d0	                            mov rax, rdx	       214	ops.c	FUNCTION_3
0x400012d	          0x4801c0	                            add rax, rax	       214	ops.c	FUNCTION_3
0x4000130	          0x4801d0	                            add rax, rdx	       214	ops.c	FUNCTION_3
0x4000133	    0x480500000000	                              add rax, 0	       214	ops.c	FUNCTION_3
0x4000139	           0xfb600	                   movzx eax, byte [rax]	       214	ops.c	FUNCTION_3
0x400013c	           0xfbec0	                           movsx eax, al	       214	ops.c	FUNCTION_3
0x400013f	              0x5d	                                 pop rbp	       215	ops.c	FUNCTION_3
0x4000140	              0xc3	                                     ret	       215	ops.c	FUNCTION_3
get_reg_contents	ELSE,0:DO,0:IF,16:functions,0:WHILE,0:FOR,3:SWITCH,0:CALL,18	221
0x400dc80	              0x55	                                push rbp	      6838	ops.c	FUNCTION_82
0x400dc81	          0x4889e5	                            mov rbp, rsp	      6838	ops.c	FUNCTION_82
0x400dc84	        0x4883ec40	                           sub rsp, 0x40	      6838	ops.c	FUNCTION_82
0x400dc88	          0x897dcc	             mov dword [rbp - 0x34], edi	      6838	ops.c	FUNCTION_82
0x400dc8b	          0x8975c8	             mov dword [rbp - 0x38], esi	      6838	ops.c	FUNCTION_82
0x400dc8e	    0x64488b042528	                mov rax, qword fs:[0x28]	      6838	ops.c	FUNCTION_82
0x400dc97	        0x488945f8	                mov qword [rbp - 8], rax	      6838	ops.c	FUNCTION_82
0x400dc9b	            0x31c0	                            xor eax, eax	      6838	ops.c	FUNCTION_82
0x400dc9d	        0x837dcc3d	           cmp dword [rbp - 0x34], 0x3d 	      6845	ops.c	FUNCTION_82	IF_1
0x400dca1	            0x7552	                           jne 0x400dcf5	      6845	ops.c	FUNCTION_82	IF_1
0x400dca3	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6847	ops.c	FUNCTION_82	IF_1	IF_2
0x400dca6	          0x83e001	                              and eax, 1	      6847	ops.c	FUNCTION_82	IF_1	IF_2
0x400dca9	            0x85c0	                           test eax, eax	      6847	ops.c	FUNCTION_82	IF_1	IF_2
0x400dcab	            0x740a	                            je 0x400dcb7	      6847	ops.c	FUNCTION_82	IF_1	IF_2
0x400dcad	      0xb800000000	                              mov eax, 0	      6848	ops.c	FUNCTION_82	IF_1	IF_2
0x400dcb2	      0xe915030000	                           jmp 0x400dfcc	      6848	ops.c	FUNCTION_82	IF_1	IF_2
0x400dcb7	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6849	ops.c	FUNCTION_82	IF_1	IF_3
0x400dcba	          0x83e002	                              and eax, 2	      6849	ops.c	FUNCTION_82	IF_1	IF_3
0x400dcbd	            0x85c0	                           test eax, eax	      6849	ops.c	FUNCTION_82	IF_1	IF_3
0x400dcbf	            0x741a	                            je 0x400dcdb	      6849	ops.c	FUNCTION_82	IF_1	IF_3
0x400dcc1	      0xe800000000	                          call 0x400dcc6	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400dcc6	          0x4889c2	                            mov rdx, rax	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400dcc9	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400dccc	            0x89c6	                            mov esi, eax	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400dcce	          0x4889d7	                            mov rdi, rdx	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400dcd1	      0xe839ffffff	           call sym.getreg_wrap_one_line	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400dcd6	      0xe9f1020000	                           jmp 0x400dfcc	      6850	ops.c	FUNCTION_82	IF_1	CALL_2
0x400dcdb	      0xe800000000	                          call 0x400dce0	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400dce0	          0x4889c2	                            mov rdx, rax	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400dce3	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400dce6	            0x89c6	                            mov esi, eax	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400dce8	          0x4889d7	                            mov rdi, rdx	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400dceb	      0xe81fffffff	           call sym.getreg_wrap_one_line	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400dcf0	      0xe9d7020000	                           jmp 0x400dfcc	      6851	ops.c	FUNCTION_82	IF_1	CALL_4
0x400dcf5	        0x837dcc40	           cmp dword [rbp - 0x34], 0x40 	      6854	ops.c	FUNCTION_82	IF_4
0x400dcf9	            0x7507	                           jne 0x400dd02	      6854	ops.c	FUNCTION_82	IF_4
0x400dcfb	    0xc745cc220000	           mov dword [rbp - 0x34], 0x22 	      6855	ops.c	FUNCTION_82	IF_4
0x400dd02	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400dd06	            0x741d	                            je 0x400dd25	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400dd08	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400dd0b	      0xbe00000000	                              mov esi, 0	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400dd10	            0x89c7	                            mov edi, eax	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400dd12	      0xe800000000	                          call 0x400dd17	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400dd17	            0x85c0	                           test eax, eax	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400dd19	            0x750a	                           jne 0x400dd25	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400dd1b	      0xb800000000	                              mov eax, 0	      6859	ops.c	FUNCTION_82	IF_5
0x400dd20	      0xe9a7020000	                           jmp 0x400dfcc	      6859	ops.c	FUNCTION_82	IF_5
0x400dd25	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6862	ops.c	FUNCTION_82	CALL_6
0x400dd28	            0x89c7	                            mov edi, eax	      6862	ops.c	FUNCTION_82	CALL_6
0x400dd2a	      0xe800000000	                          call 0x400dd2f	      6862	ops.c	FUNCTION_82	CALL_6
0x400dd2f	          0x8945cc	             mov dword [rbp - 0x34], eax	      6862	ops.c	FUNCTION_82	CALL_6
0x400dd32	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400dd36	        0x488d75d8	                   lea rsi, [rbp - 0x28]	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400dd3a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400dd3d	      0xb900000000	                              mov ecx, 0	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400dd42	            0x89c7	                            mov edi, eax	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400dd44	      0xe800000000	                          call 0x400dd49	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400dd49	            0x85c0	                           test eax, eax	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400dd4b	            0x7451	                            je 0x400dd9e	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400dd4d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400dd51	          0x4885c0	                           test rax, rax	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400dd54	            0x750a	                           jne 0x400dd60	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400dd56	      0xb800000000	                              mov eax, 0	      6868	ops.c	FUNCTION_82	IF_6	IF_7
0x400dd5b	      0xe96c020000	                           jmp 0x400dfcc	      6868	ops.c	FUNCTION_82	IF_6	IF_7
0x400dd60	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6869	ops.c	FUNCTION_82	IF_6	IF_8
0x400dd63	            0x85c0	                           test eax, eax	      6869	ops.c	FUNCTION_82	IF_6	IF_8
0x400dd65	            0x7416	                            je 0x400dd7d	      6869	ops.c	FUNCTION_82	IF_6	IF_8
0x400dd67	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6870	ops.c	FUNCTION_82	IF_6	CALL_8
0x400dd6b	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      6870	ops.c	FUNCTION_82	IF_6	CALL_8
0x400dd6e	            0x89d6	                            mov esi, edx	      6870	ops.c	FUNCTION_82	IF_6	CALL_8
0x400dd70	          0x4889c7	                            mov rdi, rax	      6870	ops.c	FUNCTION_82	IF_6	CALL_8
0x400dd73	      0xe897feffff	           call sym.getreg_wrap_one_line	      6870	ops.c	FUNCTION_82	IF_6	CALL_8
0x400dd78	      0xe94f020000	                           jmp 0x400dfcc	      6870	ops.c	FUNCTION_82	IF_6	CALL_8
0x400dd7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400dd81	          0x4889c7	                            mov rdi, rax	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400dd84	      0xe800000000	                          call 0x400dd89	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400dd89	          0x4889c2	                            mov rdx, rax	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400dd8c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400dd8f	            0x89c6	                            mov esi, eax	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400dd91	          0x4889d7	                            mov rdi, rdx	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400dd94	      0xe876feffff	           call sym.getreg_wrap_one_line	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400dd99	      0xe92e020000	                           jmp 0x400dfcc	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400dd9e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6874	ops.c	FUNCTION_82	CALL_11
0x400dda1	      0xbe00000000	                              mov esi, 0	      6874	ops.c	FUNCTION_82	CALL_11
0x400dda6	            0x89c7	                            mov edi, eax	      6874	ops.c	FUNCTION_82	CALL_11
0x400dda8	      0xe800000000	                          call 0x400ddad	      6874	ops.c	FUNCTION_82	CALL_11
0x400ddad	    0x488b05000000	            mov rax, qword [0x0400ddb4] 	      6875	ops.c	FUNCTION_82	IF_9
0x400ddb4	          0x488b00	                    mov rax, qword [rax]	      6875	ops.c	FUNCTION_82	IF_9
0x400ddb7	          0x4885c0	                           test rax, rax	      6875	ops.c	FUNCTION_82	IF_9
0x400ddba	            0x750a	                           jne 0x400ddc6	      6875	ops.c	FUNCTION_82	IF_9
0x400ddbc	      0xb800000000	                              mov eax, 0	      6876	ops.c	FUNCTION_82	IF_9
0x400ddc1	      0xe906020000	                           jmp 0x400dfcc	      6876	ops.c	FUNCTION_82	IF_9
0x400ddc6	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6878	ops.c	FUNCTION_82	IF_10
0x400ddc9	          0x83e004	                              and eax, 4	      6878	ops.c	FUNCTION_82	IF_10
0x400ddcc	            0x85c0	                           test eax, eax	      6878	ops.c	FUNCTION_82	IF_10
0x400ddce	     0xf849d000000	                            je 0x400de71	      6878	ops.c	FUNCTION_82	IF_10
0x400ddd4	      0xe800000000	                          call 0x400ddd9	      6880	ops.c	FUNCTION_82	IF_10	CALL_12
0x400ddd9	        0x488945f0	             mov qword [rbp - 0x10], rax	      6880	ops.c	FUNCTION_82	IF_10	CALL_12
0x400dddd	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      6881	ops.c	FUNCTION_82	IF_10
0x400dde4	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6883	ops.c	FUNCTION_82	IF_10	IF_11
0x400dde9	            0x750a	                           jne 0x400ddf5	      6883	ops.c	FUNCTION_82	IF_10	IF_11
0x400ddeb	      0xb800000000	                              mov eax, 0	      6884	ops.c	FUNCTION_82	IF_10	IF_11
0x400ddf0	      0xe9d7010000	                           jmp 0x400dfcc	      6884	ops.c	FUNCTION_82	IF_10	IF_11
0x400ddf5	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400ddfd	            0xeb3c	                           jmp 0x400de3b	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400ddff	    0x488b05000000	            mov rax, qword [0x0400de06] 	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de06	          0x488b00	                    mov rax, qword [rax]	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de09	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de0d	        0x48c1e203	                              shl rdx, 3	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de11	          0x4801d0	                            add rax, rdx	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de14	          0x488b08	                    mov rcx, qword [rax]	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de17	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de1b	      0xbaffffffff	                     mov edx, 0xffffffff	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de20	          0x4889ce	                            mov rsi, rcx	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de23	          0x4889c7	                            mov rdi, rax	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de26	      0xe800000000	                          call 0x400de2b	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de2b	            0x85c0	                           test eax, eax	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de2d	            0x7507	                           jne 0x400de36	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400de2f	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400de36	      0x488345e001	               add qword [rbp - 0x20], 1	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400de3b	    0x488b05000000	            mov rax, qword [0x0400de42] 	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400de42	        0x488b4008	                mov rax, qword [rax + 8]	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400de46	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400de4a	            0x7fb3	                            jg 0x400ddff	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400de4c	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6888	ops.c	FUNCTION_82	IF_10	IF_13
0x400de50	            0x7416	                            je 0x400de68	      6888	ops.c	FUNCTION_82	IF_10	IF_13
0x400de52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6890	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400de56	          0x4889c7	                            mov rdi, rax	      6890	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400de59	      0xe800000000	                          call 0x400de5e	      6890	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400de5e	      0xb800000000	                              mov eax, 0	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400de63	      0xe964010000	                           jmp 0x400dfcc	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400de68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6893	ops.c	FUNCTION_82	IF_10
0x400de6c	      0xe95b010000	                           jmp 0x400dfcc	      6893	ops.c	FUNCTION_82	IF_10
0x400de71	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      6899	ops.c	FUNCTION_82
0x400de79	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6900	ops.c	FUNCTION_82	FOR_2
0x400de81	            0xeb52	                           jmp 0x400ded5	      6900	ops.c	FUNCTION_82	FOR_2
0x400de83	    0x488b05000000	            mov rax, qword [0x0400de8a] 	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400de8a	          0x488b00	                    mov rax, qword [rax]	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400de8d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400de91	        0x48c1e203	                              shl rdx, 3	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400de95	          0x4801d0	                            add rax, rdx	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400de98	          0x488b00	                    mov rax, qword [rax]	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400de9b	          0x4889c7	                            mov rdi, rax	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400de9e	      0xe800000000	                          call 0x400dea3	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400dea3	        0x480145e8	            add qword [rbp - 0x18], rax 	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400dea7	    0x488b05000000	            mov rax, qword [0x0400deae] 	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400deae	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400deb2	            0x3c01	                               cmp al, 1	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400deb4	            0x7415	                            je 0x400decb	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400deb6	    0x488b05000000	            mov rax, qword [0x0400debd] 	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400debd	        0x488b4008	                mov rax, qword [rax + 8]	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400dec1	        0x4883e801	                              sub rax, 1	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400dec5	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400dec9	            0x7e05	                           jle 0x400ded0	      6907	ops.c	FUNCTION_82	FOR_2	IF_14
0x400decb	      0x488345e801	               add qword [rbp - 0x18], 1	      6908	ops.c	FUNCTION_82	FOR_2	IF_14
0x400ded0	      0x488345e001	               add qword [rbp - 0x20], 1	      6900	ops.c	FUNCTION_82	FOR_2
0x400ded5	    0x488b05000000	            mov rax, qword [0x0400dedc] 	      6900	ops.c	FUNCTION_82	FOR_2
0x400dedc	        0x488b4008	                mov rax, qword [rax + 8]	      6900	ops.c	FUNCTION_82	FOR_2
0x400dee0	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6900	ops.c	FUNCTION_82	FOR_2
0x400dee4	            0x7f9d	                            jg 0x400de83	      6900	ops.c	FUNCTION_82	FOR_2
0x400dee6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6911	ops.c	FUNCTION_82	CALL_16
0x400deea	        0x4883c001	                              add rax, 1	      6911	ops.c	FUNCTION_82	CALL_16
0x400deee	      0xbe01000000	                              mov esi, 1	      6911	ops.c	FUNCTION_82	CALL_16
0x400def3	          0x4889c7	                            mov rdi, rax	      6911	ops.c	FUNCTION_82	CALL_16
0x400def6	      0xe800000000	                          call 0x400defb	      6911	ops.c	FUNCTION_82	CALL_16
0x400defb	        0x488945d8	             mov qword [rbp - 0x28], rax	      6911	ops.c	FUNCTION_82	CALL_16
0x400deff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6916	ops.c	FUNCTION_82	IF_15
0x400df03	          0x4885c0	                           test rax, rax	      6916	ops.c	FUNCTION_82	IF_15
0x400df06	     0xf84bc000000	                            je 0x400dfc8	      6916	ops.c	FUNCTION_82	IF_15
0x400df0c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      6918	ops.c	FUNCTION_82	IF_15
0x400df14	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400df1c	      0xe984000000	                           jmp 0x400dfa5	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400df21	    0x488b05000000	            mov rax, qword [0x0400df28] 	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df28	          0x488b00	                    mov rax, qword [rax]	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df2b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df2f	        0x48c1e203	                              shl rdx, 3	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df33	          0x4801d0	                            add rax, rdx	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df36	          0x488b00	                    mov rax, qword [rax]	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df39	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df3d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df41	          0x4801ca	                            add rdx, rcx	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df44	          0x4889c6	                            mov rsi, rax	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df47	          0x4889d7	                            mov rdi, rdx	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df4a	      0xe800000000	                          call 0x400df4f	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400df4f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400df53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400df57	          0x4801d0	                            add rax, rdx	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400df5a	          0x4889c7	                            mov rdi, rax	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400df5d	      0xe800000000	                          call 0x400df62	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400df62	        0x480145e8	            add qword [rbp - 0x18], rax 	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400df66	    0x488b05000000	            mov rax, qword [0x0400df6d] 	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df6d	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df71	            0x3c01	                               cmp al, 1	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df73	            0x7415	                            je 0x400df8a	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df75	    0x488b05000000	            mov rax, qword [0x0400df7c] 	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df7c	        0x488b4008	                mov rax, qword [rax + 8]	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df80	        0x4883e801	                              sub rax, 1	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df84	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df88	            0x7e16	                           jle 0x400dfa0	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df8a	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df92	        0x488d5001	                      lea rdx, [rax + 1]	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df96	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df9a	          0x4801c8	                            add rax, rcx	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400df9d	          0xc6000a	                     mov byte [rax], 0xa	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400dfa0	      0x488345e001	               add qword [rbp - 0x20], 1	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400dfa5	    0x488b05000000	            mov rax, qword [0x0400dfac] 	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400dfac	        0x488b4008	                mov rax, qword [rax + 8]	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400dfb0	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400dfb4	     0xf8f67ffffff	                            jg 0x400df21	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400dfba	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6931	ops.c	FUNCTION_82	IF_15
0x400dfbe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6931	ops.c	FUNCTION_82	IF_15
0x400dfc2	          0x4801d0	                            add rax, rdx	      6931	ops.c	FUNCTION_82	IF_15
0x400dfc5	          0xc60000	                       mov byte [rax], 0	      6931	ops.c	FUNCTION_82	IF_15
0x400dfc8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6934	ops.c	FUNCTION_82
0x400dfcc	        0x488b4df8	                mov rcx, qword [rbp - 8]	      6935	ops.c	FUNCTION_82
0x400dfd0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6935	ops.c	FUNCTION_82
0x400dfd9	            0x7405	                            je 0x400dfe0	      6935	ops.c	FUNCTION_82
0x400dfdb	      0xe800000000	                          call 0x400dfe0	      6935	ops.c	FUNCTION_82
0x400dfe0	              0xc9	                                   leave	      6935	ops.c	FUNCTION_82
0x400dfe1	              0xc3	                                     ret	      6935	ops.c	FUNCTION_82
format_lines	ELSE,8:DO,0:IF,25:functions,0:WHILE,1:FOR,1:SWITCH,0:CALL,34	408
0x4009f0a	              0x55	                                push rbp	      4960	ops.c	FUNCTION_60
0x4009f0b	          0x4889e5	                            mov rbp, rsp	      4960	ops.c	FUNCTION_60
0x4009f0e	    0x4881ec900000	                           sub rsp, 0x90	      4960	ops.c	FUNCTION_60
0x4009f15	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      4960	ops.c	FUNCTION_60
0x4009f1c	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	      4960	ops.c	FUNCTION_60
0x4009f22	    0x64488b042528	                mov rax, qword fs:[0x28]	      4960	ops.c	FUNCTION_60
0x4009f2b	        0x488945f8	                mov qword [rbp - 8], rax	      4960	ops.c	FUNCTION_60
0x4009f2f	            0x31c0	                            xor eax, eax	      4960	ops.c	FUNCTION_60
0x4009f31	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      4965	ops.c	FUNCTION_60
0x4009f38	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      4966	ops.c	FUNCTION_60
0x4009f3f	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      4968	ops.c	FUNCTION_60
0x4009f46	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4970	ops.c	FUNCTION_60
0x4009f4e	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      4973	ops.c	FUNCTION_60
0x4009f55	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      4975	ops.c	FUNCTION_60
0x4009f5c	    0xc745b0ffffff	     mov dword [rbp - 0x50], 0xffffffff 	      4976	ops.c	FUNCTION_60
0x4009f63	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      4981	ops.c	FUNCTION_60
0x4009f6a	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      4984	ops.c	FUNCTION_60
0x4009f71	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      4985	ops.c	FUNCTION_60
0x4009f78	    0x8b0500000000	            mov eax, dword [0x04009f7e] 	      4986	ops.c	FUNCTION_60
0x4009f7e	          0x8945c0	             mov dword [rbp - 0x40], eax	      4986	ops.c	FUNCTION_60
0x4009f81	      0xbf01000000	                              mov edi, 1	      4989	ops.c	FUNCTION_60	CALL_1
0x4009f86	      0xe800000000	                          call 0x4009f8b	      4989	ops.c	FUNCTION_60	CALL_1
0x4009f8b	            0x89c2	                            mov edx, eax	      4989	ops.c	FUNCTION_60	CALL_1
0x4009f8d	            0x89d0	                            mov eax, edx	      4989	ops.c	FUNCTION_60	CALL_1
0x4009f8f	             0x1c0	                            add eax, eax	      4989	ops.c	FUNCTION_60	CALL_1
0x4009f91	             0x1d0	                            add eax, edx	      4989	ops.c	FUNCTION_60	CALL_1
0x4009f93	          0x8945c4	             mov dword [rbp - 0x3c], eax	      4989	ops.c	FUNCTION_60	CALL_1
0x4009f96	      0xbf71000000	                           mov edi, 0x71	      4993	ops.c	FUNCTION_60	CALL_2
0x4009f9b	      0xe800000000	                          call 0x4009fa0	      4993	ops.c	FUNCTION_60	CALL_2
0x4009fa0	          0x8945c8	             mov dword [rbp - 0x38], eax	      4993	ops.c	FUNCTION_60	CALL_2
0x4009fa3	      0xbf32000000	                           mov edi, 0x32	      4995	ops.c	FUNCTION_60	CALL_3
0x4009fa8	      0xe800000000	                          call 0x4009fad	      4995	ops.c	FUNCTION_60	CALL_3
0x4009fad	          0x8945cc	             mov dword [rbp - 0x34], eax	      4995	ops.c	FUNCTION_60	CALL_3
0x4009fb0	      0xbf6e000000	                           mov edi, 0x6e	      4996	ops.c	FUNCTION_60	CALL_4
0x4009fb5	      0xe800000000	                          call 0x4009fba	      4996	ops.c	FUNCTION_60	CALL_4
0x4009fba	          0x8945d0	             mov dword [rbp - 0x30], eax	      4996	ops.c	FUNCTION_60	CALL_4
0x4009fbd	      0xbf77000000	                           mov edi, 0x77	      4997	ops.c	FUNCTION_60	CALL_5
0x4009fc2	      0xe800000000	                          call 0x4009fc7	      4997	ops.c	FUNCTION_60	CALL_5
0x4009fc7	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4997	ops.c	FUNCTION_60	CALL_5
0x4009fca	    0x488b05000000	            mov rax, qword [0x04009fd1] 	      5002	ops.c	FUNCTION_60	IF_1
0x4009fd1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5002	ops.c	FUNCTION_60	IF_1
0x4009fd5	        0x4883f801	                              cmp rax, 1	      5002	ops.c	FUNCTION_60	IF_1
0x4009fd9	            0x7e27	                           jle 0x400a002	      5002	ops.c	FUNCTION_60	IF_1
0x4009fdb	    0x488b05000000	            mov rax, qword [0x04009fe2] 	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4009fe2	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4009fe6	        0x488d78ff	                      lea rdi, [rax - 1]	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4009fea	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4009fed	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4009ff1	        0x488d458c	                   lea rax, [rbp - 0x74]	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4009ff5	          0x4889c6	                            mov rsi, rax	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4009ff8	      0xe804060000	                  call sym.fmt_check_par	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4009ffd	          0x894594	             mov dword [rbp - 0x6c], eax	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x400a000	            0xeb07	                           jmp 0x400a009	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x400a002	    0xc74594010000	               mov dword [rbp - 0x6c], 1	      5009	ops.c	FUNCTION_60	ELSE_1
0x400a009	    0x488b05000000	            mov rax, qword [0x0400a010] 	      5010	ops.c	FUNCTION_60	CALL_7
0x400a010	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5010	ops.c	FUNCTION_60	CALL_7
0x400a014	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      5010	ops.c	FUNCTION_60	CALL_7
0x400a017	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      5010	ops.c	FUNCTION_60	CALL_7
0x400a01b	        0x488d7590	                   lea rsi, [rbp - 0x70]	      5010	ops.c	FUNCTION_60	CALL_7
0x400a01f	          0x4889c7	                            mov rdi, rax	      5010	ops.c	FUNCTION_60	CALL_7
0x400a022	      0xe8da050000	                  call sym.fmt_check_par	      5010	ops.c	FUNCTION_60	CALL_7
0x400a027	          0x894598	             mov dword [rbp - 0x68], eax	      5010	ops.c	FUNCTION_60	CALL_7
0x400a02a	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5015	ops.c	FUNCTION_60
0x400a02e	            0x7506	                           jne 0x400a036	      5015	ops.c	FUNCTION_60
0x400a030	        0x837d9800	               cmp dword [rbp - 0x68], 0	      5015	ops.c	FUNCTION_60
0x400a034	            0x7407	                            je 0x400a03d	      5015	ops.c	FUNCTION_60
0x400a036	      0xb801000000	                              mov eax, 1	      5015	ops.c	FUNCTION_60
0x400a03b	            0xeb05	                           jmp 0x400a042	      5015	ops.c	FUNCTION_60
0x400a03d	      0xb800000000	                              mov eax, 0	      5015	ops.c	FUNCTION_60
0x400a042	          0x89459c	             mov dword [rbp - 0x64], eax	      5015	ops.c	FUNCTION_60
0x400a045	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      5016	ops.c	FUNCTION_60	IF_2
0x400a049	            0x7528	                           jne 0x400a073	      5016	ops.c	FUNCTION_60	IF_2
0x400a04b	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      5016	ops.c	FUNCTION_60	IF_2
0x400a04f	            0x7422	                            je 0x400a073	      5016	ops.c	FUNCTION_60	IF_2
0x400a051	    0x488b05000000	            mov rax, qword [0x0400a058] 	      5017	ops.c	FUNCTION_60	CALL_8
0x400a058	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5017	ops.c	FUNCTION_60	CALL_8
0x400a05c	        0x4883e801	                              sub rax, 1	      5017	ops.c	FUNCTION_60	CALL_8
0x400a060	          0x4889c7	                            mov rdi, rax	      5017	ops.c	FUNCTION_60	CALL_8
0x400a063	      0xe824050000	                  call sym.ends_in_white	      5017	ops.c	FUNCTION_60	CALL_8
0x400a068	            0x85c0	                           test eax, eax	      5017	ops.c	FUNCTION_60	CALL_8
0x400a06a	           0xf94c0	                                 sete al	      5017	ops.c	FUNCTION_60	CALL_8
0x400a06d	           0xfb6c0	                           movzx eax, al	      5017	ops.c	FUNCTION_60	CALL_8
0x400a070	          0x89459c	             mov dword [rbp - 0x64], eax	      5017	ops.c	FUNCTION_60	CALL_8
0x400a073	    0x488b05000000	            mov rax, qword [0x0400a07a] 	      5019	ops.c	FUNCTION_60
0x400a07a	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5019	ops.c	FUNCTION_60
0x400a07e	        0x4883ea01	                              sub rdx, 1	      5019	ops.c	FUNCTION_60
0x400a082	        0x48895038	             mov qword [rax + 0x38], rdx	      5019	ops.c	FUNCTION_60
0x400a086	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5020	ops.c	FUNCTION_60	FOR_1
0x400a08d	        0x488945f0	             mov qword [rbp - 0x10], rax	      5020	ops.c	FUNCTION_60	FOR_1
0x400a091	      0xe9c4040000	                           jmp 0x400a55a	      5020	ops.c	FUNCTION_60	FOR_1
0x400a096	        0x837dac00	               cmp dword [rbp - 0x54], 0	      5025	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a09a	            0x742d	                            je 0x400a0c9	      5025	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a09c	    0x488b05000000	            mov rax, qword [0x0400a0a3] 	      5027	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0a3	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5027	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0a7	        0x4883c201	                              add rdx, 1	      5027	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0ab	        0x48895038	             mov qword [rax + 0x38], rdx	      5027	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0af	          0x8b459c	             mov eax, dword [rbp - 0x64]	      5028	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0b2	          0x8945a0	             mov dword [rbp - 0x60], eax	      5028	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0b5	          0x8b4598	             mov eax, dword [rbp - 0x68]	      5029	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0b8	          0x894594	             mov dword [rbp - 0x6c], eax	      5029	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0bb	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5031	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0be	          0x89458c	             mov dword [rbp - 0x74], eax	      5031	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0c5	        0x488945e0	             mov qword [rbp - 0x20], rax	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x400a0c9	      0x48837df001	               cmp qword [rbp - 0x10], 1	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a0ce	            0x741a	                            je 0x400a0ea	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a0d0	    0x488b05000000	            mov rax, qword [0x0400a0d7] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a0d7	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a0db	    0x488b05000000	            mov rax, qword [0x0400a0e2] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a0e2	          0x488b00	                    mov rax, qword [rax]	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a0e5	          0x4839c2	                            cmp rdx, rax	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a0e8	            0x7518	                           jne 0x400a102	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a0ea	    0xc74598010000	               mov dword [rbp - 0x68], 1	      5041	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a0f1	    0xc74590000000	               mov dword [rbp - 0x70], 0	      5043	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a0f8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      5044	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a100	            0xeb4d	                           jmp 0x400a14f	      5044	ops.c	FUNCTION_60	FOR_1	IF_4
0x400a102	    0x488b05000000	            mov rax, qword [0x0400a109] 	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x400a109	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x400a10d	        0x488d7801	                      lea rdi, [rax + 1]	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x400a111	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x400a114	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x400a118	        0x488d4590	                   lea rax, [rbp - 0x70]	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x400a11c	          0x4889c6	                            mov rsi, rax	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x400a11f	      0xe8dd040000	                  call sym.fmt_check_par	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x400a124	          0x894598	             mov dword [rbp - 0x68], eax	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x400a127	        0x837dd000	               cmp dword [rbp - 0x30], 0	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x400a12b	            0x7422	                            je 0x400a14f	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x400a12d	    0x488b05000000	            mov rax, qword [0x0400a134] 	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x400a134	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x400a138	        0x4883c001	                              add rax, 1	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x400a13c	          0x4889c7	                            mov rdi, rax	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x400a13f	      0xe800000000	                          call 0x400a144	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x400a144	            0x85c0	                           test eax, eax	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x400a146	           0xf9fc0	                                 setg al	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x400a149	           0xfb6c0	                           movzx eax, al	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x400a14c	          0x8945a4	             mov dword [rbp - 0x5c], eax	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x400a14f	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      5058	ops.c	FUNCTION_60	FOR_1
0x400a156	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5059	ops.c	FUNCTION_60	FOR_1
0x400a15a	            0x750c	                           jne 0x400a168	      5059	ops.c	FUNCTION_60	FOR_1
0x400a15c	        0x837d9800	               cmp dword [rbp - 0x68], 0	      5059	ops.c	FUNCTION_60	FOR_1
0x400a160	            0x7506	                           jne 0x400a168	      5059	ops.c	FUNCTION_60	FOR_1
0x400a162	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5059	ops.c	FUNCTION_60	FOR_1
0x400a166	            0x7407	                            je 0x400a16f	      5059	ops.c	FUNCTION_60	FOR_1
0x400a168	      0xb801000000	                              mov eax, 1	      5059	ops.c	FUNCTION_60	FOR_1
0x400a16d	            0xeb05	                           jmp 0x400a174	      5059	ops.c	FUNCTION_60	FOR_1
0x400a16f	      0xb800000000	                              mov eax, 0	      5059	ops.c	FUNCTION_60	FOR_1
0x400a174	          0x89459c	             mov dword [rbp - 0x64], eax	      5059	ops.c	FUNCTION_60	FOR_1
0x400a177	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x400a17b	            0x7524	                           jne 0x400a1a1	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x400a17d	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x400a181	            0x741e	                            je 0x400a1a1	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x400a183	    0x488b05000000	            mov rax, qword [0x0400a18a] 	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400a18a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400a18e	          0x4889c7	                            mov rdi, rax	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400a191	      0xe8f6030000	                  call sym.ends_in_white	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400a196	            0x85c0	                           test eax, eax	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400a198	           0xf94c0	                                 sete al	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400a19b	           0xfb6c0	                           movzx eax, al	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400a19e	          0x89459c	             mov dword [rbp - 0x64], eax	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x400a1a1	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x400a1a5	            0x7413	                            je 0x400a1ba	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x400a1a7	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5068	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0x400a1af	     0xf899b030000	                           jns 0x400a550	      5068	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0x400a1b5	      0xe9bb030000	                           jmp 0x400a575	      5069	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0x400a1ba	        0x837db400	               cmp dword [rbp - 0x4c], 0	      5077	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1be	     0xf84de000000	                            je 0x400a2a2	      5077	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1c4	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      5078	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1c8	            0x750a	                           jne 0x400a1d4	      5078	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1ca	        0x837dd000	               cmp dword [rbp - 0x30], 0	      5078	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1ce	     0xf84ce000000	                            je 0x400a2a2	      5078	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1d4	        0x837da000	               cmp dword [rbp - 0x60], 0	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1d8	     0xf84c4000000	                            je 0x400a2a2	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1de	    0x488b05000000	            mov rax, qword [0x0400a1e5] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1e5	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1e9	    0x488b05000000	            mov rax, qword [0x0400a1f0] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1f0	          0x488b00	                    mov rax, qword [rax]	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1f3	          0x4839c2	                            cmp rdx, rax	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1f6	     0xf8da6000000	                           jge 0x400a2a2	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x400a1fc	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400a200	            0x7457	                            je 0x400a259	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400a202	    0x488b05000000	            mov rax, qword [0x0400a209] 	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400a209	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400a20d	        0x4883c001	                              add rax, 1	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400a211	          0x4889c7	                            mov rdi, rax	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400a214	      0xe800000000	                          call 0x400a219	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400a219	           0xfb600	                   movzx eax, byte [rax]	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400a21c	            0x84c0	                             test al, al	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400a21e	            0x7439	                            je 0x400a259	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400a220	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400a223	            0x85c0	                           test eax, eax	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400a225	            0x7523	                           jne 0x400a24a	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400a227	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400a22a	            0x85c0	                           test eax, eax	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400a22c	            0x751c	                           jne 0x400a24a	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400a22e	    0x488b05000000	            mov rax, qword [0x0400a235] 	      5090	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11	CALL_13
0x400a235	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5090	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11	CALL_13
0x400a239	        0x4883c001	                              add rax, 1	      5090	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11	CALL_13
0x400a23d	          0x4889c7	                            mov rdi, rax	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400a240	      0xe800000000	                          call 0x400a245	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400a245	          0x8945b0	             mov dword [rbp - 0x50], eax	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400a248	            0xeb58	                           jmp 0x400a2a2	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400a24a	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5095	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x400a24d	          0x8945b0	             mov dword [rbp - 0x50], eax	      5095	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x400a250	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x400a257	            0xeb49	                           jmp 0x400a2a2	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400a259	        0x837dd000	               cmp dword [rbp - 0x30], 0	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x400a25d	            0x7443	                            je 0x400a2a2	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x400a25f	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400a262	            0x85c0	                           test eax, eax	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400a264	            0x751f	                           jne 0x400a285	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400a266	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400a269	            0x85c0	                           test eax, eax	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400a26b	            0x7518	                           jne 0x400a285	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400a26d	    0x488b05000000	            mov rax, qword [0x0400a274] 	      5108	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13	CALL_14
0x400a274	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5108	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13	CALL_14
0x400a278	          0x4889c7	                            mov rdi, rax	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400a27b	      0xe800000000	                          call 0x400a280	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400a280	          0x8945b0	             mov dword [rbp - 0x50], eax	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400a283	            0xeb1d	                           jmp 0x400a2a2	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400a285	    0x488b05000000	            mov rax, qword [0x0400a28c] 	      5115	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6	CALL_15
0x400a28c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5115	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6	CALL_15
0x400a290	          0x4889c7	                            mov rdi, rax	      5114	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x400a293	      0xe800000000	                          call 0x400a298	      5114	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x400a298	          0x8945b0	             mov dword [rbp - 0x50], eax	      5114	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x400a29b	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      5116	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x400a2a2	    0x488b05000000	            mov rax, qword [0x0400a2a9] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x400a2a9	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x400a2ad	    0x488b05000000	            mov rax, qword [0x0400a2b4] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x400a2b4	          0x488b00	                    mov rax, qword [rax]	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x400a2b7	          0x4839c2	                            cmp rdx, rax	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x400a2ba	            0x7d28	                           jge 0x400a2e4	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x400a2bc	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400a2c0	          0x8b4d90	             mov ecx, dword [rbp - 0x70]	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400a2c3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400a2c7	          0x8b758c	             mov esi, dword [rbp - 0x74]	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400a2ca	    0x488b05000000	            mov rax, qword [0x0400a2d1] 	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400a2d1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400a2d5	          0x4989f8	                             mov r8, rdi	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400a2d8	          0x4889c7	                            mov rdi, rax	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400a2db	      0xe875f6ffff	                    call sym.same_leader	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400a2e0	            0x85c0	                           test eax, eax	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400a2e2	            0x7507	                           jne 0x400a2eb	      5127	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0x400a2e4	    0xc7459c010000	               mov dword [rbp - 0x64], 1	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x400a2eb	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a2ef	            0x750a	                           jne 0x400a2fb	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a2f1	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a2f5	     0xf8403010000	                            je 0x400a3fe	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a2fb	        0x837db800	               cmp dword [rbp - 0x48], 0	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0x400a2ff	            0x7411	                            je 0x400a312	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0x400a301	      0xe800000000	                          call 0x400a306	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x400a306	      0xbe01000000	                              mov esi, 1	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x400a30b	            0x89c7	                            mov edi, eax	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x400a30d	      0xe800000000	                          call 0x400a312	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x400a312	    0xc70500000000	               mov dword [0x0400a31c], 1	      5146	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a31c	      0xbfffffff7f	                     mov edi, 0x7fffffff	      5147	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_19
0x400a321	      0xe800000000	                          call 0x400a326	      5147	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_19
0x400a326	            0xeb05	                           jmp 0x400a32d	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400a328	      0xe800000000	                          call 0x400a32d	      5149	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_22
0x400a32d	    0x488b05000000	            mov rax, qword [0x0400a334] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400a334	          0x8b4040	            mov eax, dword [rax + 0x40] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400a337	            0x85c0	                           test eax, eax	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400a339	            0x7410	                            je 0x400a34b	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400a33b	      0xe800000000	                          call 0x400a340	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400a340	            0x89c7	                            mov edi, eax	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400a342	      0xe800000000	                          call 0x400a347	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400a347	            0x85c0	                           test eax, eax	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400a349	            0x75dd	                           jne 0x400a328	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400a34b	    0xc70500000000	           mov dword [0x0400a355], 0x10 	      5152	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a355	    0x8b0500000000	            mov eax, dword [0x0400a35b] 	      5153	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a35b	          0x8945d8	             mov dword [rbp - 0x28], eax	      5153	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a35e	    0xc70500000000	               mov dword [0x0400a368], 0	      5154	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a368	        0x837dc800	               cmp dword [rbp - 0x38], 0	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a36c	            0x7407	                            je 0x400a375	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a36e	      0xba03000000	                              mov edx, 3	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a373	            0xeb05	                           jmp 0x400a37a	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a375	      0xba01000000	                              mov edx, 1	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a37a	        0x837dc800	               cmp dword [rbp - 0x38], 0	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a37e	            0x740d	                            je 0x400a38d	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a380	        0x837da800	               cmp dword [rbp - 0x58], 0	      5158	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a384	            0x7407	                            je 0x400a38d	      5158	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a386	      0xb810000000	                           mov eax, 0x10	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a38b	            0xeb05	                           jmp 0x400a392	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a38d	      0xb800000000	                              mov eax, 0	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a392	             0x1d0	                            add eax, edx	      5158	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a394	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a39b	            0x7407	                            je 0x400a3a4	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a39d	      0xba08000000	                              mov edx, 8	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a3a2	            0xeb05	                           jmp 0x400a3a9	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a3a4	      0xba00000000	                              mov edx, 0	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a3a9	          0x8d0c10	                    lea ecx, [rax + rdx]	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x400a3ac	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x400a3af	            0x89c2	                            mov edx, eax	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x400a3b1	            0x89ce	                            mov esi, ecx	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x400a3b3	      0xbf00000000	                              mov edi, 0	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x400a3b8	      0xe800000000	                          call 0x400a3bd	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x400a3bd	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a3c0	    0x890500000000	            mov dword [0x0400a3c6], eax 	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a3c6	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      5163	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a3c9	    0x890500000000	            mov dword [0x0400a3cf], eax 	      5163	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a3cf	    0xc745b0ffffff	     mov dword [rbp - 0x50], 0xffffffff 	      5164	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a3d6	          0x8b459c	             mov eax, dword [rbp - 0x64]	      5166	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a3d9	          0x8945b8	             mov dword [rbp - 0x48], eax	      5166	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a3dc	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x400a3e0	            0x7415	                            je 0x400a3f7	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x400a3e2	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x400a3ea	     0xf8881010000	                            js 0x400a571	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x400a3f0	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      5173	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x400a3f7	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      5175	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400a3fe	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      5182	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a402	     0xf8548010000	                           jne 0x400a550	      5182	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a408	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a40f	    0x488b05000000	            mov rax, qword [0x0400a416] 	      5185	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a416	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5185	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a41a	        0x4883c201	                              add rdx, 1	      5185	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a41e	        0x48895038	             mov qword [rax + 0x38], rdx	      5185	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a422	    0x488b05000000	            mov rax, qword [0x0400a429] 	      5186	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a429	    0xc74040000000	               mov dword [rax + 0x40], 0	      5186	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a430	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x400a438	            0x790d	                           jns 0x400a447	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x400a43a	      0xe800000000	                          call 0x400a43f	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x400a43f	            0x85c0	                           test eax, eax	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x400a441	     0xf842d010000	                            je 0x400a574	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x400a447	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5190	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x400a44a	            0x85c0	                           test eax, eax	      5190	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x400a44c	            0x7e41	                           jle 0x400a48f	      5190	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x400a44e	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x400a451	            0x4898	                                    cdqe	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x400a453	      0xba00000000	                              mov edx, 0	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x400a458	      0xbe00000000	                              mov esi, 0	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x400a45d	          0x4889c7	                            mov rdi, rax	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x400a460	      0xe800000000	                          call 0x400a465	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x400a465	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5194	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x400a468	            0xf7d8	                                 neg eax	      5194	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x400a46a	          0x4863d0	                         movsxd rdx, eax	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x400a46d	    0x488b05000000	            mov rax, qword [0x0400a474] 	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x400a474	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x400a478	          0x4889d1	                            mov rcx, rdx	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x400a47b	      0xba00000000	                              mov edx, 0	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x400a480	      0xbe00000000	                              mov esi, 0	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x400a485	          0x4889c7	                            mov rdi, rax	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x400a488	      0xe800000000	                          call 0x400a48d	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x400a48d	            0xeb53	                           jmp 0x400a4e2	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x400a48f	        0x837db000	               cmp dword [rbp - 0x50], 0	      5197	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0x400a493	            0x7e4d	                           jle 0x400a4e2	      5197	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0x400a495	      0xe800000000	                          call 0x400a49a	      5199	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	CALL_27
0x400a49a	          0x8945dc	             mov dword [rbp - 0x24], eax	      5199	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	CALL_27
0x400a49d	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5201	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0x400a4a1	            0x7e3f	                           jle 0x400a4e2	      5201	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0x400a4a3	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x400a4a6	            0x4898	                                    cdqe	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x400a4a8	      0xba00000000	                              mov edx, 0	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x400a4ad	      0xbe00000000	                              mov esi, 0	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x400a4b2	          0x4889c7	                            mov rdi, rax	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x400a4b5	      0xe800000000	                          call 0x400a4ba	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x400a4ba	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5205	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0x400a4bd	            0xf7d8	                                 neg eax	      5205	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0x400a4bf	          0x4863d0	                         movsxd rdx, eax	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400a4c2	    0x488b05000000	            mov rax, qword [0x0400a4c9] 	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400a4c9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400a4cd	          0x4889d1	                            mov rcx, rdx	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400a4d0	      0xba00000000	                              mov edx, 0	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400a4d5	      0xbe00000000	                              mov esi, 0	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400a4da	          0x4889c7	                            mov rdi, rax	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400a4dd	      0xe800000000	                          call 0x400a4e2	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400a4e2	    0x488b05000000	            mov rax, qword [0x0400a4e9] 	      5208	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a4e9	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5208	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a4ed	        0x4883ea01	                              sub rdx, 1	      5208	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a4f1	        0x48895038	             mov qword [rax + 0x38], rdx	      5208	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a4f5	    0x41b800000000	                              mov r8d, 0	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x400a4fb	      0xb900000000	                              mov ecx, 0	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x400a500	      0xba00000000	                              mov edx, 0	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x400a505	      0xbe01000000	                              mov esi, 1	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x400a50a	      0xbf02000000	                              mov edi, 2	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x400a50f	      0xe800000000	                          call 0x400a514	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x400a514	            0x85c0	                           test eax, eax	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x400a516	            0x7507	                           jne 0x400a51f	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x400a518	      0xe800000000	                          call 0x400a51d	      5211	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_31
0x400a51d	            0xeb56	                           jmp 0x400a575	      5212	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24
0x400a51f	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      5214	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x400a526	      0xe800000000	                          call 0x400a52b	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x400a52b	          0x4889c7	                            mov rdi, rax	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x400a52e	      0xe800000000	                          call 0x400a533	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x400a533	          0x4889c2	                            mov rdx, rax	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x400a536	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x400a539	            0x4898	                                    cdqe	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x400a53b	          0x4839c2	                            cmp rdx, rax	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x400a53e	            0x7609	                           jbe 0x400a549	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x400a540	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      5217	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25
0x400a547	            0xeb07	                           jmp 0x400a550	      5217	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25
0x400a549	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      5219	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_8
0x400a550	      0xe800000000	                          call 0x400a555	      5222	ops.c	FUNCTION_60	FOR_1	CALL_34
0x400a555	      0x48836df001	               sub qword [rbp - 0x10], 1	      5020	ops.c	FUNCTION_60	FOR_1
0x400a55a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x400a55f	            0x7414	                            je 0x400a575	      5020	ops.c	FUNCTION_60	FOR_1
0x400a561	    0x8b0500000000	            mov eax, dword [0x0400a567] 	      5020	ops.c	FUNCTION_60	FOR_1
0x400a567	            0x85c0	                           test eax, eax	      5020	ops.c	FUNCTION_60	FOR_1
0x400a569	     0xf8427fbffff	                            je 0x400a096	      5020	ops.c	FUNCTION_60	FOR_1
0x400a56f	            0xeb04	                           jmp 0x400a575	      5224	ops.c	FUNCTION_60
0x400a571	              0x90	                                     nop	      5172	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x400a572	            0xeb01	                           jmp 0x400a575	      5172	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x400a574	              0x90	                                     nop	      5188	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20
0x400a575	              0x90	                                     nop	      5224	ops.c	FUNCTION_60
0x400a576	        0x488b45f8	                mov rax, qword [rbp - 8]	      5224	ops.c	FUNCTION_60
0x400a57a	    0x644833042528	                xor rax, qword fs:[0x28]	      5224	ops.c	FUNCTION_60
0x400a583	            0x7405	                            je 0x400a58a	      5224	ops.c	FUNCTION_60
0x400a585	      0xe800000000	                          call 0x400a58a	      5224	ops.c	FUNCTION_60
0x400a58a	              0xc9	                                   leave	      5224	ops.c	FUNCTION_60
0x400a58b	              0xc3	                                     ret	      5224	ops.c	FUNCTION_60
fex_format	ELSE,0:DO,0:IF,3:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,8	54
0x4009e33	              0x55	                                push rbp	      4915	ops.c	FUNCTION_59
0x4009e34	          0x4889e5	                            mov rbp, rsp	      4915	ops.c	FUNCTION_59
0x4009e37	        0x4883ec30	                           sub rsp, 0x30	      4915	ops.c	FUNCTION_59
0x4009e3b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4915	ops.c	FUNCTION_59
0x4009e3f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4915	ops.c	FUNCTION_59
0x4009e43	          0x8955dc	             mov dword [rbp - 0x24], edx	      4915	ops.c	FUNCTION_59
0x4009e46	      0xbe04000000	                              mov esi, 4	      4916	ops.c	FUNCTION_59	CALL_1
0x4009e4b	      0xbf00000000	                              mov edi, 0	      4916	ops.c	FUNCTION_59	CALL_1
0x4009e50	      0xe800000000	                          call 0x4009e55	      4916	ops.c	FUNCTION_59	CALL_1
0x4009e55	          0x8945f0	             mov dword [rbp - 0x10], eax	      4916	ops.c	FUNCTION_59	CALL_1
0x4009e58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4925	ops.c	FUNCTION_59	CALL_2
0x4009e5c	          0x4889c6	                            mov rsi, rax	      4925	ops.c	FUNCTION_59	CALL_2
0x4009e5f	      0xbf09000000	                              mov edi, 9	      4925	ops.c	FUNCTION_59	CALL_2
0x4009e64	      0xe800000000	                          call 0x4009e69	      4925	ops.c	FUNCTION_59	CALL_2
0x4009e69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4926	ops.c	FUNCTION_59	CALL_3
0x4009e6d	          0x4889c6	                            mov rsi, rax	      4926	ops.c	FUNCTION_59	CALL_3
0x4009e70	      0xbf00000000	                              mov edi, 0	      4926	ops.c	FUNCTION_59	CALL_3
0x4009e75	      0xe800000000	                          call 0x4009e7a	      4926	ops.c	FUNCTION_59	CALL_3
0x4009e7a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4927	ops.c	FUNCTION_59	CALL_4
0x4009e7d	            0x89c7	                            mov edi, eax	      4927	ops.c	FUNCTION_59	CALL_4
0x4009e7f	      0xe800000000	                          call 0x4009e84	      4927	ops.c	FUNCTION_59	CALL_4
0x4009e84	    0x488b05000000	            mov rax, qword [0x04009e8b] 	      4930	ops.c	FUNCTION_59	CALL_5
0x4009e8b	    0x488b80001500	          mov rax, qword [rax + 0x1500] 	      4930	ops.c	FUNCTION_59	CALL_5
0x4009e92	          0x4889c7	                            mov rdi, rax	      4930	ops.c	FUNCTION_59	CALL_5
0x4009e95	      0xe800000000	                          call 0x4009e9a	      4930	ops.c	FUNCTION_59	CALL_5
0x4009e9a	        0x488945f8	                mov qword [rbp - 8], rax	      4930	ops.c	FUNCTION_59	CALL_5
0x4009e9e	      0x48837df800	                  cmp qword [rbp - 8], 0	      4931	ops.c	FUNCTION_59	IF_1
0x4009ea3	            0x7507	                           jne 0x4009eac	      4931	ops.c	FUNCTION_59	IF_1
0x4009ea5	      0xb800000000	                              mov eax, 0	      4932	ops.c	FUNCTION_59	IF_1
0x4009eaa	            0xeb5c	                           jmp 0x4009f08	      4932	ops.c	FUNCTION_59	IF_1
0x4009eac	        0x837df000	               cmp dword [rbp - 0x10], 0	      4937	ops.c	FUNCTION_59	IF_2
0x4009eb0	            0x740f	                            je 0x4009ec1	      4937	ops.c	FUNCTION_59	IF_2
0x4009eb2	    0x8b0500000000	            mov eax, dword [0x04009eb8] 	      4938	ops.c	FUNCTION_59	IF_2
0x4009eb8	          0x83c001	                              add eax, 1	      4938	ops.c	FUNCTION_59	IF_2
0x4009ebb	    0x890500000000	            mov dword [0x04009ec1], eax 	      4938	ops.c	FUNCTION_59	IF_2
0x4009ec1	        0x488b45f8	                mov rax, qword [rbp - 8]	      4939	ops.c	FUNCTION_59	CALL_6
0x4009ec5	          0x4889c7	                            mov rdi, rax	      4939	ops.c	FUNCTION_59	CALL_6
0x4009ec8	      0xe800000000	                          call 0x4009ecd	      4939	ops.c	FUNCTION_59	CALL_6
0x4009ecd	          0x8945f4	              mov dword [rbp - 0xc], eax	      4939	ops.c	FUNCTION_59	CALL_6
0x4009ed0	        0x837df000	               cmp dword [rbp - 0x10], 0	      4940	ops.c	FUNCTION_59	IF_3
0x4009ed4	            0x740f	                            je 0x4009ee5	      4940	ops.c	FUNCTION_59	IF_3
0x4009ed6	    0x8b0500000000	            mov eax, dword [0x04009edc] 	      4941	ops.c	FUNCTION_59	IF_3
0x4009edc	          0x83e801	                              sub eax, 1	      4941	ops.c	FUNCTION_59	IF_3
0x4009edf	    0x890500000000	            mov dword [0x04009ee5], eax 	      4941	ops.c	FUNCTION_59	IF_3
0x4009ee5	      0xbaffffffff	                     mov edx, 0xffffffff	      4943	ops.c	FUNCTION_59	CALL_7
0x4009eea	      0xbe00000000	                              mov esi, 0	      4943	ops.c	FUNCTION_59	CALL_7
0x4009eef	      0xbf31000000	                           mov edi, 0x31	      4943	ops.c	FUNCTION_59	CALL_7
0x4009ef4	      0xe800000000	                          call 0x4009ef9	      4943	ops.c	FUNCTION_59	CALL_7
0x4009ef9	        0x488b45f8	                mov rax, qword [rbp - 8]	      4944	ops.c	FUNCTION_59	CALL_8
0x4009efd	          0x4889c7	                            mov rdi, rax	      4944	ops.c	FUNCTION_59	CALL_8
0x4009f00	      0xe800000000	                          call 0x4009f05	      4944	ops.c	FUNCTION_59	CALL_8
0x4009f05	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4946	ops.c	FUNCTION_59
0x4009f08	              0xc9	                                   leave	      4947	ops.c	FUNCTION_59
0x4009f09	              0xc3	                                     ret	      4947	ops.c	FUNCTION_59
skip_comment	ELSE,0:DO,0:IF,7:functions,0:WHILE,2:FOR,0:SWITCH,0:CALL,2	92
0x4009028	              0x55	                                push rbp	      4453	ops.c	FUNCTION_54
0x4009029	          0x4889e5	                            mov rbp, rsp	      4453	ops.c	FUNCTION_54
0x400902c	        0x4883ec40	                           sub rsp, 0x40	      4453	ops.c	FUNCTION_54
0x4009030	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4453	ops.c	FUNCTION_54
0x4009034	          0x8975d4	             mov dword [rbp - 0x2c], esi	      4453	ops.c	FUNCTION_54
0x4009037	          0x8955d0	             mov dword [rbp - 0x30], edx	      4453	ops.c	FUNCTION_54
0x400903a	        0x48894dc8	             mov qword [rbp - 0x38], rcx	      4453	ops.c	FUNCTION_54
0x400903e	    0x64488b042528	                mov rax, qword fs:[0x28]	      4453	ops.c	FUNCTION_54
0x4009047	        0x488945f8	                mov qword [rbp - 8], rax	      4453	ops.c	FUNCTION_54
0x400904b	            0x31c0	                            xor eax, eax	      4453	ops.c	FUNCTION_54
0x400904d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4454	ops.c	FUNCTION_54
0x4009055	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      4456	ops.c	FUNCTION_54	CALL_1
0x4009059	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4456	ops.c	FUNCTION_54	CALL_1
0x400905d	          0x4889d6	                            mov rsi, rdx	      4456	ops.c	FUNCTION_54	CALL_1
0x4009060	          0x4889c7	                            mov rdi, rax	      4456	ops.c	FUNCTION_54	CALL_1
0x4009063	      0xe800000000	                          call 0x4009068	      4456	ops.c	FUNCTION_54	CALL_1
0x4009068	          0x8945e8	             mov dword [rbp - 0x18], eax	      4456	ops.c	FUNCTION_54	CALL_1
0x400906b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4458	ops.c	FUNCTION_54
0x400906f	    0xc70000000000	                      mov dword [rax], 0	      4458	ops.c	FUNCTION_54
0x4009075	        0x837de8ff	cmp dword [rbp - 0x18], 0xffffffffffffffff	      4459	ops.c	FUNCTION_54	IF_1
0x4009079	            0x7444	                            je 0x40090bf	      4459	ops.c	FUNCTION_54	IF_1
0x400907b	            0xeb22	                           jmp 0x400909f	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x400907d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4009081	           0xfb600	                   movzx eax, byte [rax]	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4009084	            0x3c65	                            cmp al, 0x65	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4009086	            0x7422	                            je 0x40090aa	      4466	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4009088	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4467	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x400908c	           0xfb600	                   movzx eax, byte [rax]	      4467	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x400908f	            0x3c3a	                            cmp al, 0x3a	      4467	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4009091	            0x7417	                            je 0x40090aa	      4467	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x4009093	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4469	ops.c	FUNCTION_54	IF_1	WHILE_1
0x4009097	        0x4883c001	                              add rax, 1	      4469	ops.c	FUNCTION_54	IF_1	WHILE_1
0x400909b	        0x488945f0	             mov qword [rbp - 0x10], rax	      4469	ops.c	FUNCTION_54	IF_1	WHILE_1
0x400909f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x40090a3	           0xfb600	                   movzx eax, byte [rax]	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x40090a6	            0x84c0	                             test al, al	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x40090a8	            0x75d3	                           jne 0x400907d	      4464	ops.c	FUNCTION_54	IF_1	WHILE_1
0x40090aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4471	ops.c	FUNCTION_54	IF_1	IF_3
0x40090ae	           0xfb600	                   movzx eax, byte [rax]	      4471	ops.c	FUNCTION_54	IF_1	IF_3
0x40090b1	            0x3c65	                            cmp al, 0x65	      4471	ops.c	FUNCTION_54	IF_1	IF_3
0x40090b3	            0x740a	                            je 0x40090bf	      4471	ops.c	FUNCTION_54	IF_1	IF_3
0x40090b5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4472	ops.c	FUNCTION_54	IF_1	IF_3
0x40090b9	    0xc70001000000	                      mov dword [rax], 1	      4472	ops.c	FUNCTION_54	IF_1	IF_3
0x40090bf	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4475	ops.c	FUNCTION_54	IF_4
0x40090c3	            0x7506	                           jne 0x40090cb	      4475	ops.c	FUNCTION_54	IF_4
0x40090c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4476	ops.c	FUNCTION_54	IF_4
0x40090c9	            0xeb79	                           jmp 0x4009144	      4476	ops.c	FUNCTION_54	IF_4
0x40090cb	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4478	ops.c	FUNCTION_54	CALL_2
0x40090ce	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4478	ops.c	FUNCTION_54	CALL_2
0x40090d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4478	ops.c	FUNCTION_54	CALL_2
0x40090d6	            0x89d1	                            mov ecx, edx	      4478	ops.c	FUNCTION_54	CALL_2
0x40090d8	      0xba00000000	                              mov edx, 0	      4478	ops.c	FUNCTION_54	CALL_2
0x40090dd	          0x4889c7	                            mov rdi, rax	      4478	ops.c	FUNCTION_54	CALL_2
0x40090e0	      0xe800000000	                          call 0x40090e5	      4478	ops.c	FUNCTION_54	CALL_2
0x40090e5	          0x8945ec	             mov dword [rbp - 0x14], eax	      4478	ops.c	FUNCTION_54	CALL_2
0x40090e8	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4480	ops.c	FUNCTION_54	IF_5
0x40090ec	            0x7528	                           jne 0x4009116	      4480	ops.c	FUNCTION_54	IF_5
0x40090ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4481	ops.c	FUNCTION_54	IF_5
0x40090f2	            0xeb50	                           jmp 0x4009144	      4481	ops.c	FUNCTION_54	IF_5
0x40090f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x40090f8	           0xfb600	                   movzx eax, byte [rax]	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x40090fb	            0x3c65	                            cmp al, 0x65	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x40090fd	            0x7422	                            je 0x4009121	      4490	ops.c	FUNCTION_54	WHILE_2	IF_6
0x40090ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4491	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4009103	           0xfb600	                   movzx eax, byte [rax]	      4491	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4009106	            0x3c3a	                            cmp al, 0x3a	      4491	ops.c	FUNCTION_54	WHILE_2	IF_6
0x4009108	            0x7417	                            je 0x4009121	      4491	ops.c	FUNCTION_54	WHILE_2	IF_6
0x400910a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4495	ops.c	FUNCTION_54	WHILE_2
0x400910e	        0x4883c001	                              add rax, 1	      4495	ops.c	FUNCTION_54	WHILE_2
0x4009112	        0x488945f0	             mov qword [rbp - 0x10], rax	      4495	ops.c	FUNCTION_54	WHILE_2
0x4009116	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4488	ops.c	FUNCTION_54	WHILE_2
0x400911a	           0xfb600	                   movzx eax, byte [rax]	      4488	ops.c	FUNCTION_54	WHILE_2
0x400911d	            0x84c0	                             test al, al	      4488	ops.c	FUNCTION_54	WHILE_2
0x400911f	            0x75d3	                           jne 0x40090f4	      4488	ops.c	FUNCTION_54	WHILE_2
0x4009121	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4502	ops.c	FUNCTION_54	IF_7
0x4009125	           0xfb600	                   movzx eax, byte [rax]	      4502	ops.c	FUNCTION_54	IF_7
0x4009128	            0x3c3a	                            cmp al, 0x3a	      4502	ops.c	FUNCTION_54	IF_7
0x400912a	            0x740b	                            je 0x4009137	      4502	ops.c	FUNCTION_54	IF_7
0x400912c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4502	ops.c	FUNCTION_54	IF_7
0x4009130	           0xfb600	                   movzx eax, byte [rax]	      4502	ops.c	FUNCTION_54	IF_7
0x4009133	            0x84c0	                             test al, al	      4502	ops.c	FUNCTION_54	IF_7
0x4009135	            0x7509	                           jne 0x4009140	      4502	ops.c	FUNCTION_54	IF_7
0x4009137	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4503	ops.c	FUNCTION_54	IF_7
0x400913a	            0x4898	                                    cdqe	      4503	ops.c	FUNCTION_54	IF_7
0x400913c	        0x480145d8	            add qword [rbp - 0x28], rax 	      4503	ops.c	FUNCTION_54	IF_7
0x4009140	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4505	ops.c	FUNCTION_54
0x4009144	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4506	ops.c	FUNCTION_54
0x4009148	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4506	ops.c	FUNCTION_54
0x4009151	            0x7405	                            je 0x4009158	      4506	ops.c	FUNCTION_54
0x4009153	      0xe800000000	                          call 0x4009158	      4506	ops.c	FUNCTION_54
0x4009158	              0xc9	                                   leave	      4506	ops.c	FUNCTION_54
0x4009159	              0xc3	                                     ret	      4506	ops.c	FUNCTION_54
ex_display	ELSE,2:DO,0:IF,15:functions,0:WHILE,0:FOR,3:SWITCH,0:CALL,41	293
0x4008af4	              0x55	                                push rbp	      4245	ops.c	FUNCTION_52
0x4008af5	          0x4889e5	                            mov rbp, rsp	      4245	ops.c	FUNCTION_52
0x4008af8	        0x4883ec60	                           sub rsp, 0x60	      4245	ops.c	FUNCTION_52
0x4008afc	        0x48897da8	             mov qword [rbp - 0x58], rdi	      4245	ops.c	FUNCTION_52
0x4008b00	    0x64488b042528	                mov rax, qword fs:[0x28]	      4245	ops.c	FUNCTION_52
0x4008b09	        0x488945f8	                mov qword [rbp - 8], rax	      4245	ops.c	FUNCTION_52
0x4008b0d	            0x31c0	                            xor eax, eax	      4245	ops.c	FUNCTION_52
0x4008b0f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4252	ops.c	FUNCTION_52
0x4008b13	          0x488b00	                    mov rax, qword [rax]	      4252	ops.c	FUNCTION_52
0x4008b16	        0x488945f0	             mov qword [rbp - 0x10], rax	      4252	ops.c	FUNCTION_52
0x4008b1a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4259	ops.c	FUNCTION_52	IF_1
0x4008b1f	            0x7413	                            je 0x4008b34	      4259	ops.c	FUNCTION_52	IF_1
0x4008b21	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4259	ops.c	FUNCTION_52	IF_1
0x4008b25	           0xfb600	                   movzx eax, byte [rax]	      4259	ops.c	FUNCTION_52	IF_1
0x4008b28	            0x84c0	                             test al, al	      4259	ops.c	FUNCTION_52	IF_1
0x4008b2a	            0x7508	                           jne 0x4008b34	      4259	ops.c	FUNCTION_52	IF_1
0x4008b2c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4260	ops.c	FUNCTION_52	IF_1
0x4008b34	    0x8b0500000000	            mov eax, dword [0x04008b3a] 	      4261	ops.c	FUNCTION_52	CALL_1
0x4008b3a	          0x8945c0	             mov dword [rbp - 0x40], eax	      4261	ops.c	FUNCTION_52	CALL_1
0x4008b3d	      0xbf00000000	                              mov edi, 0	      4264	ops.c	FUNCTION_52	CALL_3
0x4008b42	      0xe800000000	                          call 0x4008b47	      4264	ops.c	FUNCTION_52	CALL_3
0x4008b47	          0x4889c7	                            mov rdi, rax	      4264	ops.c	FUNCTION_52	CALL_3
0x4008b4a	      0xe800000000	                          call 0x4008b4f	      4264	ops.c	FUNCTION_52	CALL_3
0x4008b4f	    0xc745b8ffffff	     mov dword [rbp - 0x48], 0xffffffff 	      4265	ops.c	FUNCTION_52	FOR_1
0x4008b56	      0xe9e5010000	                           jmp 0x4008d40	      4265	ops.c	FUNCTION_52	FOR_1
0x4008b5b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      4267	ops.c	FUNCTION_52	FOR_1	CALL_4
0x4008b5e	            0x89c7	                            mov edi, eax	      4267	ops.c	FUNCTION_52	FOR_1	CALL_4
0x4008b60	      0xe800000000	                          call 0x4008b65	      4267	ops.c	FUNCTION_52	FOR_1	CALL_4
0x4008b65	          0x8945b4	             mov dword [rbp - 0x4c], eax	      4267	ops.c	FUNCTION_52	FOR_1	CALL_4
0x4008b68	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4008b6d	            0x741a	                            je 0x4008b89	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4008b6f	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4008b72	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4008b76	            0x89d6	                            mov esi, edx	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4008b78	          0x4889c7	                            mov rdi, rax	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4008b7b	      0xe800000000	                          call 0x4008b80	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4008b80	          0x4885c0	                           test rax, rax	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4008b83	     0xf84af010000	                            je 0x4008d38	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4008b89	        0x488d45b4	                   lea rax, [rbp - 0x4c]	      4280	ops.c	FUNCTION_52	FOR_1	CALL_7
0x4008b8d	          0x4889c7	                            mov rdi, rax	      4280	ops.c	FUNCTION_52	FOR_1	CALL_7
0x4008b90	      0xe800000000	                          call 0x4008b95	      4280	ops.c	FUNCTION_52	FOR_1	CALL_7
0x4008b95	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4281	ops.c	FUNCTION_52	FOR_1	CALL_8
0x4008b98	            0x89c7	                            mov edi, eax	      4281	ops.c	FUNCTION_52	FOR_1	CALL_8
0x4008b9a	      0xe800000000	                          call 0x4008b9f	      4281	ops.c	FUNCTION_52	FOR_1	CALL_8
0x4008b9f	        0x837db8ff	cmp dword [rbp - 0x48], 0xffffffffffffffff	      4284	ops.c	FUNCTION_52	FOR_1	IF_3
0x4008ba3	            0x7523	                           jne 0x4008bc8	      4284	ops.c	FUNCTION_52	FOR_1	IF_3
0x4008ba5	    0x488b05000000	            mov rax, qword [0x04008bac] 	      4286	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x4008bac	          0x4885c0	                           test rax, rax	      4286	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x4008baf	            0x740d	                            je 0x4008bbe	      4286	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x4008bb1	    0x488b05000000	            mov rax, qword [0x04008bb8] 	      4287	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x4008bb8	        0x488945e8	             mov qword [rbp - 0x18], rax	      4287	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x4008bbc	            0xeb1d	                           jmp 0x4008bdb	      4287	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x4008bbe	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4289	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x4008bc6	            0xeb13	                           jmp 0x4008bdb	      4289	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x4008bc8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      4292	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x4008bcb	            0x4898	                                    cdqe	      4292	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x4008bcd	        0x48c1e005	                              shl rax, 5	      4292	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x4008bd1	    0x480500000000	                              add rax, 0	      4292	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x4008bd7	        0x488945e8	             mov qword [rbp - 0x18], rax	      4292	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x4008bdb	    0x8b0500000000	            mov eax, dword [0x04008be1] 	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4008be1	            0x89c7	                            mov edi, eax	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4008be3	      0xe800000000	                          call 0x4008be8	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4008be8	            0x89c2	                            mov edx, eax	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4008bea	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4008bed	            0x39c2	                            cmp edx, eax	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4008bef	     0xf8446010000	                            je 0x4008d3b	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4008bf5	    0x8b0500000000	            mov eax, dword [0x04008bfb] 	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x4008bfb	          0x83f822	                           cmp eax, 0x22	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x4008bfe	            0x7511	                           jne 0x4008c11	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x4008c00	    0x488b05000000	            mov rax, qword [0x04008c07] 	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x4008c07	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x4008c0b	     0xf842a010000	                            je 0x4008d3b	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x4008c11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4301	ops.c	FUNCTION_52	FOR_1	IF_6
0x4008c15	          0x488b00	                    mov rax, qword [rax]	      4301	ops.c	FUNCTION_52	FOR_1	IF_6
0x4008c18	          0x4885c0	                           test rax, rax	      4301	ops.c	FUNCTION_52	FOR_1	IF_6
0x4008c1b	     0xf8410010000	                            je 0x4008d31	      4301	ops.c	FUNCTION_52	FOR_1	IF_6
0x4008c21	      0xbf0a000000	                            mov edi, 0xa	      4303	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_10
0x4008c26	      0xe800000000	                          call 0x4008c2b	      4303	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_10
0x4008c2b	      0xbf22000000	                           mov edi, 0x22	      4304	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_11
0x4008c30	      0xe800000000	                          call 0x4008c35	      4304	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_11
0x4008c35	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4305	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x4008c38	            0x89c7	                            mov edi, eax	      4305	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x4008c3a	      0xe800000000	                          call 0x4008c3f	      4305	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x4008c3f	      0xbf00000000	                              mov edi, 0	      4306	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_13
0x4008c44	      0xe800000000	                          call 0x4008c49	      4306	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_13
0x4008c49	    0x488b05000000	            mov rax, qword [0x04008c50] 	      4308	ops.c	FUNCTION_52	FOR_1	IF_6
0x4008c50	          0x83e806	                              sub eax, 6	      4308	ops.c	FUNCTION_52	FOR_1	IF_6
0x4008c53	          0x8945bc	             mov dword [rbp - 0x44], eax	      4308	ops.c	FUNCTION_52	FOR_1	IF_6
0x4008c56	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4008c5e	      0xe990000000	                           jmp 0x4008cf3	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4008c63	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4311	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x4008c68	            0x7413	                            je 0x4008c7d	      4311	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x4008c6a	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x4008c6d	            0x89c6	                            mov esi, eax	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x4008c6f	      0xbf00000000	                              mov edi, 0	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x4008c74	      0xe800000000	                          call 0x4008c79	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x4008c79	        0x836dbc02	               sub dword [rbp - 0x44], 2	      4314	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x4008c7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008c81	          0x488b00	                    mov rax, qword [rax]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008c84	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008c88	        0x48c1e203	                              shl rdx, 3	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008c8c	          0x4801d0	                            add rax, rdx	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008c8f	          0x488b00	                    mov rax, qword [rax]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008c92	        0x488945e0	             mov qword [rbp - 0x20], rax	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008c96	            0xeb36	                           jmp 0x4008cce	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008c98	    0x488b05000000	            mov rax, qword [0x04008c9f] 	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4008c9f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4008ca3	          0x4889d7	                            mov rdi, rdx	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4008ca6	            0xffd0	                                call rax	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4008ca8	          0x8945c4	             mov dword [rbp - 0x3c], eax	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4008cab	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x4008cae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x4008cb2	            0x89d6	                            mov esi, edx	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x4008cb4	          0x4889c7	                            mov rdi, rax	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x4008cb7	      0xe800000000	                          call 0x4008cbc	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x4008cbc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4323	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4008cbf	            0x4898	                                    cdqe	      4323	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4008cc1	        0x4883e801	                              sub rax, 1	      4323	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4008cc5	        0x480145e0	            add qword [rbp - 0x20], rax 	      4323	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4008cc9	      0x488345e001	               add qword [rbp - 0x20], 1	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008cce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008cd2	           0xfb600	                   movzx eax, byte [rax]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008cd5	            0x84c0	                             test al, al	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008cd7	            0x7415	                            je 0x4008cee	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008cd9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008cdd	          0x4889c7	                            mov rdi, rax	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008ce0	      0xe800000000	                          call 0x4008ce5	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008ce5	          0x2945bc	             sub dword [rbp - 0x44], eax	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008ce8	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008cec	            0x79aa	                           jns 0x4008c98	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4008cee	      0x488345d801	               add qword [rbp - 0x28], 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4008cf3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4008cf7	        0x488b4008	                mov rax, qword [rax + 8]	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4008cfb	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4008cff	            0x7e0a	                           jle 0x4008d0b	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4008d01	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4008d05	     0xf8f58ffffff	                            jg 0x4008c63	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4008d0b	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x4008d0f	            0x7e1b	                           jle 0x4008d2c	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x4008d11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x4008d15	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x4008d19	            0x3c01	                               cmp al, 1	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x4008d1b	            0x750f	                           jne 0x4008d2c	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x4008d1d	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x4008d20	            0x89c6	                            mov esi, eax	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x4008d22	      0xbf00000000	                              mov edi, 0	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x4008d27	      0xe800000000	                          call 0x4008d2c	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x4008d2c	      0xe800000000	                          call 0x4008d31	      4329	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_18
0x4008d31	      0xe800000000	                          call 0x4008d36	      4331	ops.c	FUNCTION_52	FOR_1	CALL_19
0x4008d36	            0xeb04	                           jmp 0x4008d3c	      4331	ops.c	FUNCTION_52	FOR_1	CALL_19
0x4008d38	              0x90	                                     nop	      4274	ops.c	FUNCTION_52	FOR_1	IF_2
0x4008d39	            0xeb01	                           jmp 0x4008d3c	      4274	ops.c	FUNCTION_52	FOR_1	IF_2
0x4008d3b	              0x90	                                     nop	      4297	ops.c	FUNCTION_52	FOR_1	IF_5
0x4008d3c	        0x8345b801	               add dword [rbp - 0x48], 1	      4265	ops.c	FUNCTION_52	FOR_1
0x4008d40	        0x837db827	           cmp dword [rbp - 0x48], 0x27 	      4265	ops.c	FUNCTION_52	FOR_1
0x4008d44	            0x7f0e	                            jg 0x4008d54	      4265	ops.c	FUNCTION_52	FOR_1
0x4008d46	    0x8b0500000000	            mov eax, dword [0x04008d4c] 	      4265	ops.c	FUNCTION_52	FOR_1
0x4008d4c	            0x85c0	                           test eax, eax	      4265	ops.c	FUNCTION_52	FOR_1
0x4008d4e	     0xf8407feffff	                            je 0x4008b5b	      4265	ops.c	FUNCTION_52	FOR_1
0x4008d54	      0xe800000000	                          call 0x4008d59	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x4008d59	        0x488945e0	             mov qword [rbp - 0x20], rax	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x4008d5d	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x4008d62	            0x7442	                            je 0x4008da6	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x4008d64	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4008d69	            0x7416	                            je 0x4008d81	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4008d6b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4008d6f	      0xbe2e000000	                           mov esi, 0x2e	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4008d74	          0x4889c7	                            mov rdi, rax	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4008d77	      0xe800000000	                          call 0x4008d7c	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4008d7c	          0x4885c0	                           test rax, rax	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4008d7f	            0x7425	                            je 0x4008da6	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4008d81	    0x8b0500000000	            mov eax, dword [0x04008d87] 	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4008d87	            0x85c0	                           test eax, eax	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4008d89	            0x751b	                           jne 0x4008da6	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x4008d8b	      0xbf00000000	                              mov edi, 0	      4340	ops.c	FUNCTION_52	IF_9	CALL_22
0x4008d90	      0xe800000000	                          call 0x4008d95	      4340	ops.c	FUNCTION_52	IF_9	CALL_22
0x4008d95	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4341	ops.c	FUNCTION_52	IF_9	CALL_23
0x4008d99	      0xbe01000000	                              mov esi, 1	      4341	ops.c	FUNCTION_52	IF_9	CALL_23
0x4008d9e	          0x4889c7	                            mov rdi, rax	      4341	ops.c	FUNCTION_52	IF_9	CALL_23
0x4008da1	      0xe8c0010000	                        call sym.dis_msg	      4341	ops.c	FUNCTION_52	IF_9	CALL_23
0x4008da6	    0x488b05000000	            mov rax, qword [0x04008dad] 	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4008dad	          0x4885c0	                           test rax, rax	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4008db0	            0x7445	                            je 0x4008df7	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4008db2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4008db7	            0x7416	                            je 0x4008dcf	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4008db9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4008dbd	      0xbe3a000000	                           mov esi, 0x3a	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4008dc2	          0x4889c7	                            mov rdi, rax	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4008dc5	      0xe800000000	                          call 0x4008dca	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4008dca	          0x4885c0	                           test rax, rax	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4008dcd	            0x7428	                            je 0x4008df7	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4008dcf	    0x8b0500000000	            mov eax, dword [0x04008dd5] 	      4348	ops.c	FUNCTION_52	IF_10
0x4008dd5	            0x85c0	                           test eax, eax	      4348	ops.c	FUNCTION_52	IF_10
0x4008dd7	            0x751e	                           jne 0x4008df7	      4348	ops.c	FUNCTION_52	IF_10
0x4008dd9	      0xbf00000000	                              mov edi, 0	      4350	ops.c	FUNCTION_52	IF_10	CALL_25
0x4008dde	      0xe800000000	                          call 0x4008de3	      4350	ops.c	FUNCTION_52	IF_10	CALL_25
0x4008de3	    0x488b05000000	            mov rax, qword [0x04008dea] 	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x4008dea	      0xbe00000000	                              mov esi, 0	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x4008def	          0x4889c7	                            mov rdi, rax	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x4008df2	      0xe86f010000	                        call sym.dis_msg	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x4008df7	    0x488b05000000	            mov rax, qword [0x04008dfe] 	      4357	ops.c	FUNCTION_52	IF_11
0x4008dfe	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4357	ops.c	FUNCTION_52	IF_11
0x4008e05	          0x4885c0	                           test rax, rax	      4357	ops.c	FUNCTION_52	IF_11
0x4008e08	            0x744c	                            je 0x4008e56	      4357	ops.c	FUNCTION_52	IF_11
0x4008e0a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4008e0f	            0x7416	                            je 0x4008e27	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4008e11	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4008e15	      0xbe25000000	                           mov esi, 0x25	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4008e1a	          0x4889c7	                            mov rdi, rax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4008e1d	      0xe800000000	                          call 0x4008e22	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4008e22	          0x4885c0	                           test rax, rax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4008e25	            0x742f	                            je 0x4008e56	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4008e27	    0x8b0500000000	            mov eax, dword [0x04008e2d] 	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4008e2d	            0x85c0	                           test eax, eax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4008e2f	            0x7525	                           jne 0x4008e56	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4008e31	      0xbf00000000	                              mov edi, 0	      4360	ops.c	FUNCTION_52	IF_11	CALL_28
0x4008e36	      0xe800000000	                          call 0x4008e3b	      4360	ops.c	FUNCTION_52	IF_11	CALL_28
0x4008e3b	    0x488b05000000	            mov rax, qword [0x04008e42] 	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x4008e42	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x4008e49	      0xbe00000000	                              mov esi, 0	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x4008e4e	          0x4889c7	                            mov rdi, rax	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x4008e51	      0xe810010000	                        call sym.dis_msg	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x4008e56	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4008e5b	            0x7416	                            je 0x4008e73	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4008e5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4008e61	      0xbe25000000	                           mov esi, 0x25	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4008e66	          0x4889c7	                            mov rdi, rax	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4008e69	      0xe800000000	                          call 0x4008e6e	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4008e6e	          0x4885c0	                           test rax, rax	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4008e71	            0x743e	                            je 0x4008eb1	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4008e73	    0x8b0500000000	            mov eax, dword [0x04008e79] 	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4008e79	            0x85c0	                           test eax, eax	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4008e7b	            0x7534	                           jne 0x4008eb1	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4008e7d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4008e81	        0x488d45c8	                   lea rax, [rbp - 0x38]	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4008e85	          0x4889c6	                            mov rsi, rax	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4008e88	      0xbf00000000	                              mov edi, 0	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4008e8d	      0xe800000000	                          call 0x4008e92	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4008e92	            0x85c0	                           test eax, eax	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4008e94	            0x741b	                            je 0x4008eb1	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4008e96	      0xbf00000000	                              mov edi, 0	      4374	ops.c	FUNCTION_52	IF_12	IF_13	CALL_32
0x4008e9b	      0xe800000000	                          call 0x4008ea0	      4374	ops.c	FUNCTION_52	IF_12	IF_13	CALL_32
0x4008ea0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x4008ea4	      0xbe00000000	                              mov esi, 0	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x4008ea9	          0x4889c7	                            mov rdi, rax	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x4008eac	      0xe8b5000000	                        call sym.dis_msg	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x4008eb1	      0xe800000000	                          call 0x4008eb6	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x4008eb6	          0x4885c0	                           test rax, rax	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x4008eb9	            0x7443	                            je 0x4008efe	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x4008ebb	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4008ec0	            0x7416	                            je 0x4008ed8	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4008ec2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4008ec6	      0xbe2f000000	                           mov esi, 0x2f	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4008ecb	          0x4889c7	                            mov rdi, rax	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4008ece	      0xe800000000	                          call 0x4008ed3	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4008ed3	          0x4885c0	                           test rax, rax	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4008ed6	            0x7426	                            je 0x4008efe	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4008ed8	    0x8b0500000000	            mov eax, dword [0x04008ede] 	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4008ede	            0x85c0	                           test eax, eax	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4008ee0	            0x751c	                           jne 0x4008efe	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4008ee2	      0xbf00000000	                              mov edi, 0	      4385	ops.c	FUNCTION_52	IF_14	CALL_36
0x4008ee7	      0xe800000000	                          call 0x4008eec	      4385	ops.c	FUNCTION_52	IF_14	CALL_36
0x4008eec	      0xe800000000	                          call 0x4008ef1	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x4008ef1	      0xbe00000000	                              mov esi, 0	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x4008ef6	          0x4889c7	                            mov rdi, rax	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x4008ef9	      0xe868000000	                        call sym.dis_msg	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x4008efe	    0x488b05000000	            mov rax, qword [0x04008f05] 	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4008f05	          0x4885c0	                           test rax, rax	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4008f08	            0x7445	                            je 0x4008f4f	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4008f0a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4008f0f	            0x7416	                            je 0x4008f27	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4008f11	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4008f15	      0xbe3d000000	                           mov esi, 0x3d	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4008f1a	          0x4889c7	                            mov rdi, rax	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4008f1d	      0xe800000000	                          call 0x4008f22	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4008f22	          0x4885c0	                           test rax, rax	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4008f25	            0x7428	                            je 0x4008f4f	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4008f27	    0x8b0500000000	            mov eax, dword [0x04008f2d] 	      4394	ops.c	FUNCTION_52	IF_15
0x4008f2d	            0x85c0	                           test eax, eax	      4394	ops.c	FUNCTION_52	IF_15
0x4008f2f	            0x751e	                           jne 0x4008f4f	      4394	ops.c	FUNCTION_52	IF_15
0x4008f31	      0xbf00000000	                              mov edi, 0	      4396	ops.c	FUNCTION_52	IF_15	CALL_40
0x4008f36	      0xe800000000	                          call 0x4008f3b	      4396	ops.c	FUNCTION_52	IF_15	CALL_40
0x4008f3b	    0x488b05000000	            mov rax, qword [0x04008f42] 	      4397	ops.c	FUNCTION_52	IF_15	CALL_41
0x4008f42	      0xbe00000000	                              mov esi, 0	      4397	ops.c	FUNCTION_52	IF_15	CALL_41
0x4008f47	          0x4889c7	                            mov rdi, rax	      4397	ops.c	FUNCTION_52	IF_15	CALL_41
0x4008f4a	      0xe817000000	                        call sym.dis_msg	      4397	ops.c	FUNCTION_52	IF_15	CALL_41
0x4008f4f	              0x90	                                     nop	      4400	ops.c	FUNCTION_52
0x4008f50	        0x488b45f8	                mov rax, qword [rbp - 8]	      4400	ops.c	FUNCTION_52
0x4008f54	    0x644833042528	                xor rax, qword fs:[0x28]	      4400	ops.c	FUNCTION_52
0x4008f5d	            0x7405	                            je 0x4008f64	      4400	ops.c	FUNCTION_52
0x4008f5f	      0xe800000000	                          call 0x4008f64	      4400	ops.c	FUNCTION_52
0x4008f64	              0xc9	                                   leave	      4400	ops.c	FUNCTION_52
0x4008f65	              0xc3	                                     ret	      4400	ops.c	FUNCTION_52
shift_line	ELSE,4:DO,0:IF,7:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,4	77
0x40004ab	              0x55	                                push rbp	       330	ops.c	FUNCTION_6
0x40004ac	          0x4889e5	                            mov rbp, rsp	       330	ops.c	FUNCTION_6
0x40004af	        0x4883ec20	                           sub rsp, 0x20	       330	ops.c	FUNCTION_6
0x40004b3	          0x897dec	             mov dword [rbp - 0x14], edi	       330	ops.c	FUNCTION_6
0x40004b6	          0x8975e8	             mov dword [rbp - 0x18], esi	       330	ops.c	FUNCTION_6
0x40004b9	          0x8955e4	             mov dword [rbp - 0x1c], edx	       330	ops.c	FUNCTION_6
0x40004bc	          0x894de0	             mov dword [rbp - 0x20], ecx	       330	ops.c	FUNCTION_6
0x40004bf	    0x488b05000000	            mov rax, qword [0x040004c6] 	       333	ops.c	FUNCTION_6	CALL_1
0x40004c6	          0x4889c7	                            mov rdi, rax	       333	ops.c	FUNCTION_6	CALL_1
0x40004c9	      0xe800000000	                          call 0x40004ce	       333	ops.c	FUNCTION_6	CALL_1
0x40004ce	          0x8945f8	                mov dword [rbp - 8], eax	       333	ops.c	FUNCTION_6	CALL_1
0x40004d1	      0xe800000000	                          call 0x40004d6	       335	ops.c	FUNCTION_6	CALL_2
0x40004d6	          0x8945f0	             mov dword [rbp - 0x10], eax	       335	ops.c	FUNCTION_6	CALL_2
0x40004d9	        0x837de800	               cmp dword [rbp - 0x18], 0	       337	ops.c	FUNCTION_6	IF_1
0x40004dd	            0x7451	                            je 0x4000530	       337	ops.c	FUNCTION_6	IF_1
0x40004df	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       339	ops.c	FUNCTION_6	IF_1
0x40004e2	              0x99	                                     cdq	       339	ops.c	FUNCTION_6	IF_1
0x40004e3	          0xf77df8	                    idiv dword [rbp - 8]	       339	ops.c	FUNCTION_6	IF_1
0x40004e6	          0x8945f4	              mov dword [rbp - 0xc], eax	       339	ops.c	FUNCTION_6	IF_1
0x40004e9	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       340	ops.c	FUNCTION_6	IF_1
0x40004ec	              0x99	                                     cdq	       340	ops.c	FUNCTION_6	IF_1
0x40004ed	          0xf77df8	                    idiv dword [rbp - 8]	       340	ops.c	FUNCTION_6	IF_1
0x40004f0	          0x8955fc	                mov dword [rbp - 4], edx	       340	ops.c	FUNCTION_6	IF_1
0x40004f3	        0x837dfc00	                  cmp dword [rbp - 4], 0	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x40004f7	            0x740a	                            je 0x4000503	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x40004f9	        0x837dec00	               cmp dword [rbp - 0x14], 0	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x40004fd	            0x7404	                            je 0x4000503	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x40004ff	        0x836de401	               sub dword [rbp - 0x1c], 1	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x4000503	        0x837dec00	               cmp dword [rbp - 0x14], 0	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4000507	            0x7415	                            je 0x400051e	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4000509	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       345	ops.c	FUNCTION_6	IF_1	IF_3
0x400050c	          0x2945f4	              sub dword [rbp - 0xc], eax	       345	ops.c	FUNCTION_6	IF_1	IF_3
0x400050f	        0x837df400	                cmp dword [rbp - 0xc], 0	       346	ops.c	FUNCTION_6	IF_1	IF_3	IF_4
0x4000513	            0x790f	                           jns 0x4000524	       346	ops.c	FUNCTION_6	IF_1	IF_3	IF_4
0x4000515	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       347	ops.c	FUNCTION_6	IF_1	IF_3	IF_4
0x400051c	            0xeb06	                           jmp 0x4000524	       347	ops.c	FUNCTION_6	IF_1	IF_3	IF_4
0x400051e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       350	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4000521	           0x145f4	              add dword [rbp - 0xc], eax	       350	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4000524	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4000527	         0xfaf45f8	               imul eax, dword [rbp - 8]	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x400052b	          0x8945f0	             mov dword [rbp - 0x10], eax	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x400052e	            0xeb29	                           jmp 0x4000559	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4000530	        0x837dec00	               cmp dword [rbp - 0x14], 0	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4000534	            0x7419	                            je 0x400054f	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4000536	          0x8b45f8	                mov eax, dword [rbp - 8]	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4000539	         0xfaf45e4	            imul eax, dword [rbp - 0x1c]	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x400053d	          0x2945f0	             sub dword [rbp - 0x10], eax	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4000540	        0x837df000	               cmp dword [rbp - 0x10], 0	       358	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5	IF_6
0x4000544	            0x7913	                           jns 0x4000559	       358	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5	IF_6
0x4000546	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       359	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5	IF_6
0x400054d	            0xeb0a	                           jmp 0x4000559	       359	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5	IF_6
0x400054f	          0x8b45f8	                mov eax, dword [rbp - 8]	       362	ops.c	FUNCTION_6	ELSE_2	ELSE_3
0x4000552	         0xfaf45e4	            imul eax, dword [rbp - 0x1c]	       362	ops.c	FUNCTION_6	ELSE_2	ELSE_3
0x4000556	           0x145f0	             add dword [rbp - 0x10], eax	       362	ops.c	FUNCTION_6	ELSE_2	ELSE_3
0x4000559	    0x8b0500000000	            mov eax, dword [0x0400055f] 	       367	ops.c	FUNCTION_6	IF_7
0x400055f	      0x2580000000	                           and eax, 0x80	       367	ops.c	FUNCTION_6	IF_7
0x4000564	            0x85c0	                           test eax, eax	       367	ops.c	FUNCTION_6	IF_7
0x4000566	            0x7421	                            je 0x4000589	       367	ops.c	FUNCTION_6	IF_7
0x4000568	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       368	ops.c	FUNCTION_6	CALL_3
0x400056b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       368	ops.c	FUNCTION_6	CALL_3
0x400056e	          0x4189d0	                            mov r8d, edx	       368	ops.c	FUNCTION_6	CALL_3
0x4000571	      0xb900000000	                              mov ecx, 0	       368	ops.c	FUNCTION_6	CALL_3
0x4000576	      0xba00000000	                              mov edx, 0	       368	ops.c	FUNCTION_6	CALL_3
0x400057b	            0x89c6	                            mov esi, eax	       368	ops.c	FUNCTION_6	CALL_3
0x400057d	      0xbf01000000	                              mov edi, 1	       368	ops.c	FUNCTION_6	CALL_3
0x4000582	      0xe800000000	                          call 0x4000587	       368	ops.c	FUNCTION_6	CALL_3
0x4000587	            0xeb16	                           jmp 0x400059f	       372	ops.c	FUNCTION_6
0x4000589	        0x837de000	               cmp dword [rbp - 0x20], 0	       371	ops.c	FUNCTION_6	CALL_4
0x400058d	           0xf95c0	                                setne al	       371	ops.c	FUNCTION_6	CALL_4
0x4000590	           0xfb6d0	                           movzx edx, al	       371	ops.c	FUNCTION_6	CALL_4
0x4000593	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       371	ops.c	FUNCTION_6	CALL_4
0x4000596	            0x89d6	                            mov esi, edx	       371	ops.c	FUNCTION_6	CALL_4
0x4000598	            0x89c7	                            mov edi, eax	       371	ops.c	FUNCTION_6	CALL_4
0x400059a	      0xe800000000	                          call 0x400059f	       371	ops.c	FUNCTION_6	CALL_4
0x400059f	              0x90	                                     nop	       372	ops.c	FUNCTION_6
0x40005a0	              0xc9	                                   leave	       372	ops.c	FUNCTION_6
0x40005a1	              0xc3	                                     ret	       372	ops.c	FUNCTION_6
op_reindent	ELSE,3:DO,0:IF,10:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,15	185
0x4001041	              0x55	                                push rbp	       702	ops.c	FUNCTION_9
0x4001042	          0x4889e5	                            mov rbp, rsp	       702	ops.c	FUNCTION_9
0x4001045	        0x4883ec40	                           sub rsp, 0x40	       702	ops.c	FUNCTION_9
0x4001049	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       702	ops.c	FUNCTION_9
0x400104d	        0x488975c0	             mov qword [rbp - 0x40], rsi	       702	ops.c	FUNCTION_9
0x4001051	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       706	ops.c	FUNCTION_9
0x4001059	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       707	ops.c	FUNCTION_9
0x4001061	    0x488b05000000	            mov rax, qword [0x04001068] 	       708	ops.c	FUNCTION_9
0x4001068	        0x488b4038	            mov rax, qword [rax + 0x38] 	       708	ops.c	FUNCTION_9
0x400106c	        0x488945f0	             mov qword [rbp - 0x10], rax	       708	ops.c	FUNCTION_9
0x4001070	    0x488b05000000	            mov rax, qword [0x04001077] 	       711	ops.c	FUNCTION_9	IF_1
0x4001077	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	       711	ops.c	FUNCTION_9	IF_1
0x400107d	            0x85c0	                           test eax, eax	       711	ops.c	FUNCTION_9	IF_1
0x400107f	            0x7517	                           jne 0x4001098	       711	ops.c	FUNCTION_9	IF_1
0x4001081	      0xbf00000000	                              mov edi, 0	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4001086	      0xe800000000	                          call 0x400108b	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x400108b	          0x4889c7	                            mov rdi, rax	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x400108e	      0xe800000000	                          call 0x4001093	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4001093	      0xe99a020000	                           jmp 0x4001332	       714	ops.c	FUNCTION_9	IF_1
0x4001098	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       717	ops.c	FUNCTION_9	FOR_1
0x400109c	        0x488b4050	            mov rax, qword [rax + 0x50] 	       717	ops.c	FUNCTION_9	FOR_1
0x40010a0	        0x488945d8	             mov qword [rbp - 0x28], rax	       717	ops.c	FUNCTION_9	FOR_1
0x40010a4	      0xe955010000	                           jmp 0x40011fe	       717	ops.c	FUNCTION_9	FOR_1
0x40010a9	      0x48837dd801	               cmp qword [rbp - 0x28], 1	       722	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010ae	     0xf8e93000000	                           jle 0x4001147	       722	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010b4	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010b8	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010c2	          0x4889c8	                            mov rax, rcx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010c5	          0x48f7ea	                                imul rdx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010c8	        0x488d040a	                    lea rax, [rdx + rcx]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010cc	        0x48c1f805	                              sar rax, 5	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010d0	          0x4889c2	                            mov rdx, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010d3	          0x4889c8	                            mov rax, rcx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010d6	        0x48c1f83f	                           sar rax, 0x3f	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010da	          0x4829c2	                            sub rdx, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010dd	          0x4889d0	                            mov rax, rdx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010e0	        0x48c1e002	                              shl rax, 2	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010e4	          0x4801d0	                            add rax, rdx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010e7	    0x488d14850000	                        lea rdx, [rax*4]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010ef	          0x4801d0	                            add rax, rdx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010f2	          0x4801c0	                            add rax, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010f5	          0x4829c1	                            sub rcx, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010f8	          0x4889ca	                            mov rdx, rcx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010fb	          0x4885d2	                           test rdx, rdx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x40010fe	            0x7412	                            je 0x4001112	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001100	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001104	        0x488b4050	            mov rax, qword [rax + 0x50] 	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001108	        0x4883e801	                              sub rax, 1	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x400110c	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001110	            0x7535	                           jne 0x4001147	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001112	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001116	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x400111a	    0x488b05000000	            mov rax, qword [0x04001121] 	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001121	          0x4839c2	                            cmp rdx, rax	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001124	            0x7e21	                           jle 0x4001147	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x4001126	      0xbf00000000	                              mov edi, 0	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x400112b	      0xe800000000	                          call 0x4001130	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001130	          0x4889c2	                            mov rdx, rax	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001133	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001137	          0x4889c6	                            mov rsi, rax	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x400113a	          0x4889d7	                            mov rdi, rdx	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x400113d	      0xb800000000	                              mov eax, 0	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001142	      0xe800000000	                          call 0x4001147	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4001147	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x400114b	        0x488b4050	            mov rax, qword [rax + 0x50] 	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x400114f	        0x4883e801	                              sub rax, 1	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001153	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001157	            0x7518	                           jne 0x4001171	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001159	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x400115d	        0x488b4050	            mov rax, qword [rax + 0x50] 	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001161	        0x4883f801	                              cmp rax, 1	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001165	            0x740a	                            je 0x4001171	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001167	    0x48817dc00000	               cmp qword [rbp - 0x40], 0	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x400116f	            0x746c	                            je 0x40011dd	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4001171	      0xe800000000	                          call 0x4001176	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x4001176	          0x4889c7	                            mov rdi, rax	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x4001179	      0xe800000000	                          call 0x400117e	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x400117e	        0x488945f8	                mov qword [rbp - 8], rax	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x4001182	        0x488b45f8	                mov rax, qword [rbp - 8]	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4001186	           0xfb600	                   movzx eax, byte [rax]	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4001189	            0x84c0	                             test al, al	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x400118b	            0x7509	                           jne 0x4001196	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x400118d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       738	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4001194	            0xeb09	                           jmp 0x400119f	       738	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4001196	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x400119a	            0xffd0	                                call rax	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x400119c	          0x8945d4	             mov dword [rbp - 0x2c], eax	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x400119f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40011a3	            0x7838	                            js 0x40011dd	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40011a5	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40011a8	      0xbe04000000	                              mov esi, 4	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40011ad	            0x89c7	                            mov edi, eax	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40011af	      0xe800000000	                          call 0x40011b4	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40011b4	            0x85c0	                           test eax, eax	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40011b6	            0x7425	                            je 0x40011dd	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x40011b8	      0x48837de000	               cmp qword [rbp - 0x20], 0	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40011bd	            0x750f	                           jne 0x40011ce	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40011bf	    0x488b05000000	            mov rax, qword [0x040011c6] 	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40011c6	        0x488b4038	            mov rax, qword [rax + 0x38] 	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40011ca	        0x488945e0	             mov qword [rbp - 0x20], rax	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x40011ce	    0x488b05000000	            mov rax, qword [0x040011d5] 	       747	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5
0x40011d5	        0x488b4038	            mov rax, qword [rax + 0x38] 	       747	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5
0x40011d9	        0x488945e8	             mov qword [rbp - 0x18], rax	       747	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5
0x40011dd	    0x488b05000000	            mov rax, qword [0x040011e4] 	       750	ops.c	FUNCTION_9	FOR_1
0x40011e4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       750	ops.c	FUNCTION_9	FOR_1
0x40011e8	        0x4883c201	                              add rdx, 1	       750	ops.c	FUNCTION_9	FOR_1
0x40011ec	        0x48895038	             mov qword [rax + 0x38], rdx	       750	ops.c	FUNCTION_9	FOR_1
0x40011f0	    0x488b05000000	            mov rax, qword [0x040011f7] 	       751	ops.c	FUNCTION_9	FOR_1
0x40011f7	    0xc74040000000	               mov dword [rax + 0x40], 0	       751	ops.c	FUNCTION_9	FOR_1
0x40011fe	      0x48836dd801	               sub qword [rbp - 0x28], 1	       717	ops.c	FUNCTION_9	FOR_1
0x4001203	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       717	ops.c	FUNCTION_9	FOR_1
0x4001208	            0x780e	                            js 0x4001218	       717	ops.c	FUNCTION_9	FOR_1
0x400120a	    0x8b0500000000	            mov eax, dword [0x04001210] 	       717	ops.c	FUNCTION_9	FOR_1
0x4001210	            0x85c0	                           test eax, eax	       717	ops.c	FUNCTION_9	FOR_1
0x4001212	     0xf8491feffff	                            je 0x40010a9	       717	ops.c	FUNCTION_9	FOR_1
0x4001218	    0x488b05000000	            mov rax, qword [0x0400121f] 	       755	ops.c	FUNCTION_9
0x400121f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       755	ops.c	FUNCTION_9
0x4001223	        0x48895038	             mov qword [rax + 0x38], rdx	       755	ops.c	FUNCTION_9
0x4001227	      0xbf06000000	                              mov edi, 6	       756	ops.c	FUNCTION_9	CALL_9
0x400122c	      0xe800000000	                          call 0x4001231	       756	ops.c	FUNCTION_9	CALL_9
0x4001231	      0x48837de800	               cmp qword [rbp - 0x18], 0	       761	ops.c	FUNCTION_9	IF_7
0x4001236	            0x743c	                            je 0x4001274	       761	ops.c	FUNCTION_9	IF_7
0x4001238	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       763	ops.c	FUNCTION_9	IF_7
0x400123c	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       763	ops.c	FUNCTION_9	IF_7
0x400123f	            0x85c0	                           test eax, eax	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4001241	            0x7411	                            je 0x4001254	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4001243	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       763	ops.c	FUNCTION_9	IF_7
0x4001247	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       763	ops.c	FUNCTION_9	IF_7
0x400124b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400124f	          0x4801d0	                            add rax, rdx	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4001252	            0xeb08	                           jmp 0x400125c	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4001254	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4001258	        0x4883c001	                              add rax, 1	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400125c	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4001260	      0xb900000000	                              mov ecx, 0	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4001265	          0x4889c2	                            mov rdx, rax	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4001268	      0xbe00000000	                              mov esi, 0	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x400126d	      0xe800000000	                          call 0x4001272	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4001272	            0xeb15	                           jmp 0x4001289	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4001274	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4001278	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x400127b	            0x85c0	                           test eax, eax	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x400127d	            0x740a	                            je 0x4001289	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x400127f	      0xbf14000000	                           mov edi, 0x14	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4001284	      0xe800000000	                          call 0x4001289	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4001289	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       768	ops.c	FUNCTION_9	IF_9
0x400128d	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       768	ops.c	FUNCTION_9	IF_9
0x4001291	    0x488b05000000	            mov rax, qword [0x04001298] 	       768	ops.c	FUNCTION_9	IF_9
0x4001298	          0x4839c2	                            cmp rdx, rax	       768	ops.c	FUNCTION_9	IF_9
0x400129b	            0x7e53	                           jle 0x40012f0	       768	ops.c	FUNCTION_9	IF_9
0x400129d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       770	ops.c	FUNCTION_9	IF_9
0x40012a1	        0x488b4050	            mov rax, qword [rax + 0x50] 	       770	ops.c	FUNCTION_9	IF_9
0x40012a5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       770	ops.c	FUNCTION_9	IF_9
0x40012a9	        0x4883c201	                              add rdx, 1	       770	ops.c	FUNCTION_9	IF_9
0x40012ad	          0x4829d0	                            sub rax, rdx	       770	ops.c	FUNCTION_9	IF_9
0x40012b0	        0x488945d8	             mov qword [rbp - 0x28], rax	       770	ops.c	FUNCTION_9	IF_9
0x40012b4	      0x48837dd801	               cmp qword [rbp - 0x28], 1	       771	ops.c	FUNCTION_9	IF_9	IF_10
0x40012b9	            0x7514	                           jne 0x40012cf	       771	ops.c	FUNCTION_9	IF_9	IF_10
0x40012bb	      0xbf00000000	                              mov edi, 0	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x40012c0	      0xe800000000	                          call 0x40012c5	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x40012c5	          0x4889c7	                            mov rdi, rax	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x40012c8	      0xe800000000	                          call 0x40012cd	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x40012cd	            0xeb21	                           jmp 0x40012f0	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x40012cf	      0xbf00000000	                              mov edi, 0	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x40012d4	      0xe800000000	                          call 0x40012d9	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x40012d9	          0x4889c2	                            mov rdx, rax	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x40012dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x40012e0	          0x4889c6	                            mov rsi, rax	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x40012e3	          0x4889d7	                            mov rdi, rdx	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x40012e6	      0xb800000000	                              mov eax, 0	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x40012eb	      0xe800000000	                          call 0x40012f0	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x40012f0	    0x488b0d000000	            mov rcx, qword [0x040012f7] 	       777	ops.c	FUNCTION_9
0x40012f7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       777	ops.c	FUNCTION_9
0x40012fb	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       777	ops.c	FUNCTION_9
0x40012ff	        0x488b4020	            mov rax, qword [rax + 0x20] 	       777	ops.c	FUNCTION_9
0x4001303	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	       777	ops.c	FUNCTION_9
0x400130a	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	       777	ops.c	FUNCTION_9
0x4001311	    0x488b0d000000	            mov rcx, qword [0x04001318] 	       778	ops.c	FUNCTION_9
0x4001318	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       778	ops.c	FUNCTION_9
0x400131c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       778	ops.c	FUNCTION_9
0x4001320	        0x488b4030	            mov rax, qword [rax + 0x30] 	       778	ops.c	FUNCTION_9
0x4001324	    0x488981001200	          mov qword [rcx + 0x1200], rax 	       778	ops.c	FUNCTION_9
0x400132b	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	       778	ops.c	FUNCTION_9
0x4001332	              0xc9	                                   leave	       779	ops.c	FUNCTION_9
0x4001333	              0xc3	                                     ret	       779	ops.c	FUNCTION_9
block_prep	ELSE,7:DO,0:IF,14:functions,0:WHILE,2:FOR,0:SWITCH,0:CALL,5	376
0x400a84d	              0x55	                                push rbp	      5364	ops.c	FUNCTION_65
0x400a84e	          0x4889e5	                            mov rbp, rsp	      5364	ops.c	FUNCTION_65
0x400a851	        0x4883ec60	                           sub rsp, 0x60	      5364	ops.c	FUNCTION_65
0x400a855	        0x48897db8	             mov qword [rbp - 0x48], rdi	      5364	ops.c	FUNCTION_65
0x400a859	        0x488975b0	             mov qword [rbp - 0x50], rsi	      5364	ops.c	FUNCTION_65
0x400a85d	        0x488955a8	             mov qword [rbp - 0x58], rdx	      5364	ops.c	FUNCTION_65
0x400a861	          0x894da4	             mov dword [rbp - 0x5c], ecx	      5364	ops.c	FUNCTION_65
0x400a864	    0x64488b042528	                mov rax, qword fs:[0x28]	      5364	ops.c	FUNCTION_65
0x400a86d	        0x488945f8	                mov qword [rbp - 8], rax	      5364	ops.c	FUNCTION_65
0x400a871	            0x31c0	                            xor eax, eax	      5364	ops.c	FUNCTION_65
0x400a873	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      5365	ops.c	FUNCTION_65
0x400a87a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5372	ops.c	FUNCTION_65
0x400a87e	    0xc70000000000	                      mov dword [rax], 0	      5372	ops.c	FUNCTION_65
0x400a884	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5373	ops.c	FUNCTION_65
0x400a888	    0xc74004000000	                  mov dword [rax + 4], 0	      5373	ops.c	FUNCTION_65
0x400a88f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5374	ops.c	FUNCTION_65
0x400a893	    0xc74008000000	                  mov dword [rax + 8], 0	      5374	ops.c	FUNCTION_65
0x400a89a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5375	ops.c	FUNCTION_65
0x400a89e	    0xc7401c000000	               mov dword [rax + 0x1c], 0	      5375	ops.c	FUNCTION_65
0x400a8a5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5376	ops.c	FUNCTION_65
0x400a8a9	    0xc74020000000	               mov dword [rax + 0x20], 0	      5376	ops.c	FUNCTION_65
0x400a8b0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5378	ops.c	FUNCTION_65
0x400a8b4	    0xc74024000000	               mov dword [rax + 0x24], 0	      5378	ops.c	FUNCTION_65
0x400a8bb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5379	ops.c	FUNCTION_65
0x400a8bf	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      5379	ops.c	FUNCTION_65
0x400a8c6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5380	ops.c	FUNCTION_65
0x400a8ca	    0xc74030000000	               mov dword [rax + 0x30], 0	      5380	ops.c	FUNCTION_65
0x400a8d1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5381	ops.c	FUNCTION_65
0x400a8d5	    0xc74034000000	               mov dword [rax + 0x34], 0	      5381	ops.c	FUNCTION_65
0x400a8dc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5382	ops.c	FUNCTION_65
0x400a8e0	    0xc74038000000	               mov dword [rax + 0x38], 0	      5382	ops.c	FUNCTION_65
0x400a8e7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5384	ops.c	FUNCTION_65
0x400a8eb	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      5384	ops.c	FUNCTION_65
0x400a8f2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5386	ops.c	FUNCTION_65	CALL_1
0x400a8f6	          0x4889c7	                            mov rdi, rax	      5386	ops.c	FUNCTION_65	CALL_1
0x400a8f9	      0xe800000000	                          call 0x400a8fe	      5386	ops.c	FUNCTION_65	CALL_1
0x400a8fe	        0x488945f0	             mov qword [rbp - 0x10], rax	      5386	ops.c	FUNCTION_65	CALL_1
0x400a902	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5387	ops.c	FUNCTION_65
0x400a906	        0x488945d8	             mov qword [rbp - 0x28], rax	      5387	ops.c	FUNCTION_65
0x400a90a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5388	ops.c	FUNCTION_65
0x400a90e	        0x488945e0	             mov qword [rbp - 0x20], rax	      5388	ops.c	FUNCTION_65
0x400a912	      0xe9b1000000	                           jmp 0x400a9c8	      5389	ops.c	FUNCTION_65	WHILE_1
0x400a917	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x400a91b	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x400a91e	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x400a922	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x400a926	          0x4889ce	                            mov rsi, rcx	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x400a929	          0x4889c7	                            mov rdi, rax	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x400a92c	      0xe800000000	                          call 0x400a931	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x400a931	          0x8945cc	             mov dword [rbp - 0x34], eax	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x400a934	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5393	ops.c	FUNCTION_65	WHILE_1
0x400a938	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5393	ops.c	FUNCTION_65	WHILE_1
0x400a93b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5393	ops.c	FUNCTION_65	WHILE_1
0x400a93e	             0x1c2	                            add edx, eax	      5393	ops.c	FUNCTION_65	WHILE_1
0x400a940	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5393	ops.c	FUNCTION_65	WHILE_1
0x400a944	          0x89501c	             mov dword [rax + 0x1c], edx	      5393	ops.c	FUNCTION_65	WHILE_1
0x400a947	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400a94b	           0xfb600	                   movzx eax, byte [rax]	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400a94e	            0x3c20	                            cmp al, 0x20	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400a950	            0x740b	                            je 0x400a95d	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400a952	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400a956	           0xfb600	                   movzx eax, byte [rax]	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400a959	            0x3c09	                               cmp al, 9	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400a95b	            0x7526	                           jne 0x400a983	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400a95d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5397	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a961	          0x8b5030	            mov edx, dword [rax + 0x30] 	      5397	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a964	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5397	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a967	             0x1c2	                            add edx, eax	      5397	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a969	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5397	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a96d	          0x895030	             mov dword [rax + 0x30], edx	      5397	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a970	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a974	          0x8b4034	            mov eax, dword [rax + 0x34] 	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a977	          0x8d5001	                      lea edx, [rax + 1]	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a97a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a97e	          0x895034	             mov dword [rax + 0x34], edx	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a981	            0xeb16	                           jmp 0x400a999	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400a983	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5402	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0x400a987	    0xc74030000000	               mov dword [rax + 0x30], 0	      5402	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0x400a98e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5403	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0x400a992	    0xc74034000000	               mov dword [rax + 0x34], 0	      5403	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0x400a999	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5406	ops.c	FUNCTION_65	WHILE_1
0x400a99d	        0x488945e0	             mov qword [rbp - 0x20], rax	      5406	ops.c	FUNCTION_65	WHILE_1
0x400a9a1	    0x8b0500000000	            mov eax, dword [0x0400a9a7] 	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400a9a7	            0x85c0	                           test eax, eax	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400a9a9	            0x7412	                            je 0x400a9bd	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400a9ab	    0x488b05000000	            mov rax, qword [0x0400a9b2] 	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400a9b2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400a9b6	          0x4889d7	                            mov rdi, rdx	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400a9b9	            0xffd0	                                call rax	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400a9bb	            0xeb05	                           jmp 0x400a9c2	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400a9bd	      0xb801000000	                              mov eax, 1	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400a9c2	            0x4898	                                    cdqe	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400a9c4	        0x480145d8	            add qword [rbp - 0x28], rax 	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400a9c8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5389	ops.c	FUNCTION_65	WHILE_1
0x400a9cc	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x400a9cf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5389	ops.c	FUNCTION_65	WHILE_1
0x400a9d3	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x400a9d6	            0x39c2	                            cmp edx, eax	      5389	ops.c	FUNCTION_65	WHILE_1
0x400a9d8	            0x7d0f	                           jge 0x400a9e9	      5389	ops.c	FUNCTION_65	WHILE_1
0x400a9da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5389	ops.c	FUNCTION_65	WHILE_1
0x400a9de	           0xfb600	                   movzx eax, byte [rax]	      5389	ops.c	FUNCTION_65	WHILE_1
0x400a9e1	            0x84c0	                             test al, al	      5389	ops.c	FUNCTION_65	WHILE_1
0x400a9e3	     0xf852effffff	                           jne 0x400a917	      5389	ops.c	FUNCTION_65	WHILE_1
0x400a9e9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5409	ops.c	FUNCTION_65
0x400a9ed	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      5409	ops.c	FUNCTION_65
0x400a9f0	          0x89503c	             mov dword [rax + 0x3c], edx	      5409	ops.c	FUNCTION_65
0x400a9f3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5410	ops.c	FUNCTION_65	IF_2
0x400a9f7	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5410	ops.c	FUNCTION_65	IF_2
0x400a9fa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5410	ops.c	FUNCTION_65	IF_2
0x400a9fe	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5410	ops.c	FUNCTION_65	IF_2
0x400aa01	            0x39c2	                            cmp edx, eax	      5410	ops.c	FUNCTION_65	IF_2
0x400aa03	            0x7d4f	                           jge 0x400aa54	      5410	ops.c	FUNCTION_65	IF_2
0x400aa05	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5412	ops.c	FUNCTION_65	IF_2
0x400aa09	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5412	ops.c	FUNCTION_65	IF_2
0x400aa0c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5412	ops.c	FUNCTION_65	IF_2
0x400aa10	          0x895020	             mov dword [rax + 0x20], edx	      5412	ops.c	FUNCTION_65	IF_2
0x400aa13	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5414	ops.c	FUNCTION_65	IF_2
0x400aa17	    0xc74024010000	               mov dword [rax + 0x24], 1	      5414	ops.c	FUNCTION_65	IF_2
0x400aa1e	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa22	            0x740f	                            je 0x400aa33	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa24	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa28	            0x8b00	                    mov eax, dword [rax]	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa2a	          0x83f812	                           cmp eax, 0x12	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa2d	     0xf85f4020000	                           jne 0x400ad27	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa33	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa37	          0x8b5068	            mov edx, dword [rax + 0x68] 	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa3a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa3e	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa41	            0x29c2	                            sub edx, eax	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa43	            0x89d0	                            mov eax, edx	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa45	          0x8d5001	                      lea edx, [rax + 1]	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa48	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa4c	          0x895004	                mov dword [rax + 4], edx	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa4f	      0xe9d3020000	                           jmp 0x400ad27	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x400aa54	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5423	ops.c	FUNCTION_65	ELSE_2
0x400aa58	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5423	ops.c	FUNCTION_65	ELSE_2
0x400aa5b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5423	ops.c	FUNCTION_65	ELSE_2
0x400aa5f	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5423	ops.c	FUNCTION_65	ELSE_2
0x400aa62	            0x29c2	                            sub edx, eax	      5423	ops.c	FUNCTION_65	ELSE_2
0x400aa64	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5423	ops.c	FUNCTION_65	ELSE_2
0x400aa68	            0x8910	                    mov dword [rax], edx	      5423	ops.c	FUNCTION_65	ELSE_2
0x400aa6a	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa6e	            0x741f	                            je 0x400aa8f	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa70	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa74	            0x8b00	                    mov eax, dword [rax]	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa76	            0x85c0	                           test eax, eax	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa78	            0x7415	                            je 0x400aa8f	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa7a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa7e	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa81	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa85	            0x8b00	                    mov eax, dword [rax]	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa87	            0x29c2	                            sub edx, eax	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa89	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa8d	            0x8910	                    mov dword [rax], edx	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400aa8f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5426	ops.c	FUNCTION_65	ELSE_2
0x400aa93	        0x488945d0	             mov qword [rbp - 0x30], rax	      5426	ops.c	FUNCTION_65	ELSE_2
0x400aa97	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5427	ops.c	FUNCTION_65	ELSE_2
0x400aa9b	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5427	ops.c	FUNCTION_65	ELSE_2
0x400aa9e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5427	ops.c	FUNCTION_65	ELSE_2
0x400aaa2	          0x895020	             mov dword [rax + 0x20], edx	      5427	ops.c	FUNCTION_65	ELSE_2
0x400aaa5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400aaa9	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400aaac	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400aab0	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400aab3	            0x39c2	                            cmp edx, eax	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400aab5	     0xf8ef0000000	                           jle 0x400abab	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400aabb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5431	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400aabf	    0xc7402c010000	               mov dword [rax + 0x2c], 1	      5431	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400aac6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aaca	            0x8b00	                    mov eax, dword [rax]	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aacc	          0x83f811	                           cmp eax, 0x11	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aacf	            0x751b	                           jne 0x400aaec	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aad1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aad5	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aad8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aadc	            0x8b00	                    mov eax, dword [rax]	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aade	            0x29c2	                            sub edx, eax	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aae0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aae4	          0x895004	                mov dword [rax + 4], edx	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aae7	      0xe9ff010000	                           jmp 0x400aceb	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400aaec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5435	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400aaf0	            0x8b00	                    mov eax, dword [rax]	      5435	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400aaf2	          0x83f812	                           cmp eax, 0x12	      5435	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400aaf5	            0x753e	                           jne 0x400ab35	      5435	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400aaf7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400aafb	            0x8b10	                    mov edx, dword [rax]	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400aafd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab01	          0x8b4868	            mov ecx, dword [rax + 0x68] 	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab04	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab08	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab0b	            0x29c1	                            sub ecx, eax	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab0d	            0x89c8	                            mov eax, ecx	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab0f	          0x83c001	                              add eax, 1	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab12	             0x1c2	                            add edx, eax	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab14	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab18	            0x8910	                    mov dword [rax], edx	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab1a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab1e	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab21	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab25	            0x8b00	                    mov eax, dword [rax]	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab27	            0x29c2	                            sub edx, eax	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab29	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab2d	          0x895004	                mov dword [rax + 4], edx	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab30	      0xe9b6010000	                           jmp 0x400aceb	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400ab35	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400ab39	          0x8b5068	            mov edx, dword [rax + 0x68] 	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400ab3c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400ab40	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400ab43	            0x29c2	                            sub edx, eax	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400ab45	            0x89d0	                            mov eax, edx	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400ab47	          0x8d5001	                      lea edx, [rax + 1]	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400ab4a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400ab4e	            0x8910	                    mov dword [rax], edx	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400ab50	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab54	     0xf8491010000	                            je 0x400aceb	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab5a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab5e	            0x8b00	                    mov eax, dword [rax]	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab60	          0x83f804	                              cmp eax, 4	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab63	     0xf8482010000	                            je 0x400aceb	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab69	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5448	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab6d	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      5448	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab70	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5449	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab74	          0x8b481c	            mov ecx, dword [rax + 0x1c] 	      5449	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab77	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5449	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab7b	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5449	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab7e	            0x29c1	                            sub ecx, eax	      5449	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab80	            0x89c8	                            mov eax, ecx	      5449	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab82	            0x29c2	                            sub edx, eax	      5449	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab84	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5448	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab88	            0x8910	                    mov dword [rax], edx	      5448	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab8a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab8e	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab91	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab95	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab98	            0x29c2	                            sub edx, eax	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab9a	            0x89d0	                            mov eax, edx	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab9c	          0x8d50ff	                      lea edx, [rax - 1]	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400ab9f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400aba3	          0x895004	                mov dword [rax + 4], edx	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400aba6	      0xe940010000	                           jmp 0x400aceb	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400abab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5456	ops.c	FUNCTION_65	ELSE_2	ELSE_5
0x400abaf	        0x488945e8	             mov qword [rbp - 0x18], rax	      5456	ops.c	FUNCTION_65	ELSE_2	ELSE_5
0x400abb3	            0xeb38	                           jmp 0x400abed	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abb5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5460	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abb9	        0x488945e8	             mov qword [rbp - 0x18], rax	      5460	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abbd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x400abc1	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x400abc4	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x400abc8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x400abcc	          0x4889ce	                            mov rsi, rcx	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x400abcf	          0x4889c7	                            mov rdi, rax	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x400abd2	      0xe800000000	                          call 0x400abd7	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x400abd7	          0x8945cc	             mov dword [rbp - 0x34], eax	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x400abda	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abde	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abe1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abe4	             0x1c2	                            add edx, eax	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abe6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abea	          0x895020	             mov dword [rax + 0x20], edx	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abed	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abf1	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abf4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abf8	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abfb	            0x39c2	                            cmp edx, eax	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abfd	            0x7f0b	                            jg 0x400ac0a	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400abff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400ac03	           0xfb600	                   movzx eax, byte [rax]	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400ac06	            0x84c0	                             test al, al	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400ac08	            0x75ab	                           jne 0x400abb5	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400ac0a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5464	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac0e	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5464	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac11	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5464	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac15	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5464	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac18	            0x39c2	                            cmp edx, eax	      5464	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac1a	            0x7f6b	                            jg 0x400ac87	      5464	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac1c	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac20	            0x7416	                            je 0x400ac38	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac22	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5466	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac26	            0x8b00	                    mov eax, dword [rax]	      5466	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac28	          0x83f812	                           cmp eax, 0x12	      5466	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac2b	            0x740b	                            je 0x400ac38	      5466	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac2d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac31	            0x8b00	                    mov eax, dword [rax]	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac33	          0x83f810	                           cmp eax, 0x10	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac36	            0x754f	                           jne 0x400ac87	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac38	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5470	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac3c	    0xc74024010000	               mov dword [rax + 0x24], 1	      5470	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400ac43	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac47	            0x8b00	                    mov eax, dword [rax]	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac49	          0x83f812	                           cmp eax, 0x12	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac4c	            0x740a	                            je 0x400ac58	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac4e	    0x8b0500000000	            mov eax, dword [0x0400ac54] 	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac54	            0x85c0	                           test eax, eax	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac56	            0x7422	                            je 0x400ac7a	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac58	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac5c	          0x8b5068	            mov edx, dword [rax + 0x68] 	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac5f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac63	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac66	            0x29c2	                            sub edx, eax	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac68	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5478	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac6c	          0x8b4014	            mov eax, dword [rax + 0x14] 	      5478	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac6f	             0x1c2	                            add edx, eax	      5478	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac71	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac75	          0x895004	                mov dword [rax + 4], edx	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac78	            0xeb71	                           jmp 0x400aceb	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac7a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5480	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	ELSE_6
0x400ac7e	    0xc74004000000	                  mov dword [rax + 4], 0	      5480	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	ELSE_6
0x400ac85	            0xeb64	                           jmp 0x400aceb	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400ac87	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5482	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400ac8b	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5482	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400ac8e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5482	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400ac92	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5482	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400ac95	            0x39c2	                            cmp edx, eax	      5482	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400ac97	            0x7e52	                           jle 0x400aceb	      5482	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400ac99	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400ac9d	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400aca0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400aca4	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400aca7	            0x29c2	                            sub edx, eax	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400aca9	            0x89d0	                            mov eax, edx	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400acab	          0x8d50ff	                      lea edx, [rax - 1]	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400acae	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400acb2	          0x895004	                mov dword [rax + 4], edx	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x400acb5	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400acb9	            0x7530	                           jne 0x400aceb	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400acbb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400acbf	          0x8b4004	                mov eax, dword [rax + 4]	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400acc2	            0x85c0	                           test eax, eax	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400acc4	            0x7425	                            je 0x400aceb	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400acc6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400acca	          0x8b4004	                mov eax, dword [rax + 4]	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400accd	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400acd0	            0x29c2	                            sub edx, eax	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400acd2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400acd6	          0x895004	                mov dword [rax + 4], edx	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x400acd9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x400acdd	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x400ace1	            0x7408	                            je 0x400aceb	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x400ace3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5489	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x400ace7	        0x488945d0	             mov qword [rbp - 0x30], rax	      5489	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x400aceb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5494	ops.c	FUNCTION_65	ELSE_2
0x400acef	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      5494	ops.c	FUNCTION_65	ELSE_2
0x400acf2	          0x895038	             mov dword [rax + 0x38], edx	      5494	ops.c	FUNCTION_65	ELSE_2
0x400acf5	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400acf9	            0x7412	                            je 0x400ad0d	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400acfb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400acff	            0x8b00	                    mov eax, dword [rax]	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400ad01	            0x85c0	                           test eax, eax	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400ad03	            0x7408	                            je 0x400ad0d	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400ad05	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5497	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400ad09	        0x488945d8	             mov qword [rbp - 0x28], rax	      5497	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400ad0d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5498	ops.c	FUNCTION_65	ELSE_2
0x400ad11	          0x4889c2	                            mov rdx, rax	      5498	ops.c	FUNCTION_65	ELSE_2
0x400ad14	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5498	ops.c	FUNCTION_65	ELSE_2
0x400ad18	          0x4829c2	                            sub rdx, rax	      5498	ops.c	FUNCTION_65	ELSE_2
0x400ad1b	          0x4889d0	                            mov rax, rdx	      5498	ops.c	FUNCTION_65	ELSE_2
0x400ad1e	            0x89c2	                            mov edx, eax	      5498	ops.c	FUNCTION_65	ELSE_2
0x400ad20	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5498	ops.c	FUNCTION_65	ELSE_2
0x400ad24	          0x895008	                mov dword [rax + 8], edx	      5498	ops.c	FUNCTION_65	ELSE_2
0x400ad27	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5500	ops.c	FUNCTION_65
0x400ad2b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5500	ops.c	FUNCTION_65
0x400ad2f	          0x4829c2	                            sub rdx, rax	      5500	ops.c	FUNCTION_65
0x400ad32	          0x4889d0	                            mov rax, rdx	      5500	ops.c	FUNCTION_65
0x400ad35	            0x89c2	                            mov edx, eax	      5500	ops.c	FUNCTION_65
0x400ad37	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5500	ops.c	FUNCTION_65
0x400ad3b	          0x895018	             mov dword [rax + 0x18], edx	      5500	ops.c	FUNCTION_65
0x400ad3e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5501	ops.c	FUNCTION_65
0x400ad42	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5501	ops.c	FUNCTION_65
0x400ad46	        0x48895010	             mov qword [rax + 0x10], rdx	      5501	ops.c	FUNCTION_65
0x400ad4a	              0x90	                                     nop	      5502	ops.c	FUNCTION_65
0x400ad4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5502	ops.c	FUNCTION_65
0x400ad4f	    0x644833042528	                xor rax, qword fs:[0x28]	      5502	ops.c	FUNCTION_65
0x400ad58	            0x7405	                            je 0x400ad5f	      5502	ops.c	FUNCTION_65
0x400ad5a	      0xe800000000	                          call 0x400ad5f	      5502	ops.c	FUNCTION_65
0x400ad5f	              0xc9	                                   leave	      5502	ops.c	FUNCTION_65
0x400ad60	              0xc3	                                     ret	      5502	ops.c	FUNCTION_65
op_yank	ELSE,9:DO,0:IF,42:functions,0:WHILE,1:FOR,2:SWITCH,1:CALL,53	738
0x4005bd8	              0x55	                                push rbp	      3058	ops.c	FUNCTION_45
0x4005bd9	          0x4889e5	                            mov rbp, rsp	      3058	ops.c	FUNCTION_45
0x4005bdc	              0x53	                                push rbx	      3058	ops.c	FUNCTION_45
0x4005bdd	    0x4881ec580100	                          sub rsp, 0x158	      3058	ops.c	FUNCTION_45
0x4005be4	    0x4889bda8feff	            mov qword [rbp - 0x158], rdi	      3058	ops.c	FUNCTION_45
0x4005beb	    0x89b5a4feffff	            mov dword [rbp - 0x15c], esi	      3058	ops.c	FUNCTION_45
0x4005bf1	    0x8995a0feffff	            mov dword [rbp - 0x160], edx	      3058	ops.c	FUNCTION_45
0x4005bf7	    0x64488b042528	                mov rax, qword fs:[0x28]	      3058	ops.c	FUNCTION_45
0x4005c00	        0x488945e8	             mov qword [rbp - 0x18], rax	      3058	ops.c	FUNCTION_45
0x4005c04	            0x31c0	                            xor eax, eax	      3058	ops.c	FUNCTION_45
0x4005c06	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3065	ops.c	FUNCTION_45
0x4005c0d	          0x8b4008	                mov eax, dword [rax + 8]	      3065	ops.c	FUNCTION_45
0x4005c10	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      3065	ops.c	FUNCTION_45
0x4005c16	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3066	ops.c	FUNCTION_45
0x4005c1d	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3066	ops.c	FUNCTION_45
0x4005c21	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      3066	ops.c	FUNCTION_45
0x4005c28	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3067	ops.c	FUNCTION_45
0x4005c2f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3067	ops.c	FUNCTION_45
0x4005c33	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      3067	ops.c	FUNCTION_45
0x4005c3a	    0xc785c8feffff	              mov dword [rbp - 0x138], 0	      3072	ops.c	FUNCTION_45
0x4005c44	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4005c4b	          0x8b4004	                mov eax, dword [rax + 4]	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4005c4e	            0x85c0	                           test eax, eax	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4005c50	            0x7429	                            je 0x4005c7b	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4005c52	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4005c59	          0x8b4004	                mov eax, dword [rax + 4]	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4005c5c	      0xbe01000000	                              mov esi, 1	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4005c61	            0x89c7	                            mov edi, eax	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4005c63	      0xe800000000	                          call 0x4005c68	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4005c68	            0x85c0	                           test eax, eax	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4005c6a	            0x750f	                           jne 0x4005c7b	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x4005c6c	      0xe800000000	                          call 0x4005c71	      3078	ops.c	FUNCTION_45	IF_1	CALL_2
0x4005c71	      0xb800000000	                              mov eax, 0	      3079	ops.c	FUNCTION_45	IF_1
0x4005c76	      0xe9e70c0000	                           jmp 0x4006962	      3079	ops.c	FUNCTION_45	IF_1
0x4005c7b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3081	ops.c	FUNCTION_45	IF_2
0x4005c82	          0x8b4004	                mov eax, dword [rax + 4]	      3081	ops.c	FUNCTION_45	IF_2
0x4005c85	          0x83f85f	                           cmp eax, 0x5f	      3081	ops.c	FUNCTION_45	IF_2
0x4005c88	            0x750a	                           jne 0x4005c94	      3081	ops.c	FUNCTION_45	IF_2
0x4005c8a	      0xb801000000	                              mov eax, 1	      3082	ops.c	FUNCTION_45	IF_2
0x4005c8f	      0xe9ce0c0000	                           jmp 0x4006962	      3082	ops.c	FUNCTION_45	IF_2
0x4005c94	    0x8b0500000000	            mov eax, dword [0x04005c9a] 	      3085	ops.c	FUNCTION_45	IF_3
0x4005c9a	            0x85c0	                           test eax, eax	      3085	ops.c	FUNCTION_45	IF_3
0x4005c9c	            0x751f	                           jne 0x4005cbd	      3085	ops.c	FUNCTION_45	IF_3
0x4005c9e	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3085	ops.c	FUNCTION_45	IF_3
0x4005ca5	          0x8b4004	                mov eax, dword [rax + 4]	      3085	ops.c	FUNCTION_45	IF_3
0x4005ca8	          0x83f82a	                           cmp eax, 0x2a	      3085	ops.c	FUNCTION_45	IF_3
0x4005cab	            0x7510	                           jne 0x4005cbd	      3085	ops.c	FUNCTION_45	IF_3
0x4005cad	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3086	ops.c	FUNCTION_45	IF_3
0x4005cb4	    0xc74004000000	                  mov dword [rax + 4], 0	      3086	ops.c	FUNCTION_45	IF_3
0x4005cbb	            0xeb27	                           jmp 0x4005ce4	      3086	ops.c	FUNCTION_45	IF_3
0x4005cbd	    0x8b0500000000	            mov eax, dword [0x04005cc3] 	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x4005cc3	            0x85c0	                           test eax, eax	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x4005cc5	            0x751d	                           jne 0x4005ce4	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x4005cc7	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x4005cce	          0x8b4004	                mov eax, dword [rax + 4]	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x4005cd1	          0x83f82b	                           cmp eax, 0x2b	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x4005cd4	            0x750e	                           jne 0x4005ce4	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x4005cd6	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3088	ops.c	FUNCTION_45	ELSE_1	IF_4
0x4005cdd	    0xc74004000000	                  mov dword [rax + 4], 0	      3088	ops.c	FUNCTION_45	ELSE_1	IF_4
0x4005ce4	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      3091	ops.c	FUNCTION_45	IF_5
0x4005ceb	            0x7516	                           jne 0x4005d03	      3091	ops.c	FUNCTION_45	IF_5
0x4005ced	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3092	ops.c	FUNCTION_45	CALL_3
0x4005cf4	          0x8b4004	                mov eax, dword [rax + 4]	      3092	ops.c	FUNCTION_45	CALL_3
0x4005cf7	      0xbe01000000	                              mov esi, 1	      3092	ops.c	FUNCTION_45	CALL_3
0x4005cfc	            0x89c7	                            mov edi, eax	      3092	ops.c	FUNCTION_45	CALL_3
0x4005cfe	      0xe800000000	                          call 0x4005d03	      3092	ops.c	FUNCTION_45	CALL_3
0x4005d03	    0x488b05000000	            mov rax, qword [0x04005d0a] 	      3094	ops.c	FUNCTION_45
0x4005d0a	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      3094	ops.c	FUNCTION_45
0x4005d11	    0x8b0500000000	            mov eax, dword [0x04005d17] 	      3096	ops.c	FUNCTION_45	IF_6
0x4005d17	            0x85c0	                           test eax, eax	      3096	ops.c	FUNCTION_45	IF_6
0x4005d19	            0x741f	                            je 0x4005d3a	      3096	ops.c	FUNCTION_45	IF_6
0x4005d1b	    0x488b05000000	            mov rax, qword [0x04005d22] 	      3096	ops.c	FUNCTION_45	IF_6
0x4005d22	          0x488b00	                    mov rax, qword [rax]	      3096	ops.c	FUNCTION_45	IF_6
0x4005d25	          0x4885c0	                           test rax, rax	      3096	ops.c	FUNCTION_45	IF_6
0x4005d28	            0x7410	                            je 0x4005d3a	      3096	ops.c	FUNCTION_45	IF_6
0x4005d2a	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      3097	ops.c	FUNCTION_45	IF_6
0x4005d31	    0x488905000000	            mov qword [0x04005d38], rax 	      3097	ops.c	FUNCTION_45	IF_6
0x4005d38	            0xeb05	                           jmp 0x4005d3f	      3097	ops.c	FUNCTION_45	IF_6
0x4005d3a	      0xe87ffeffff	                  call sym.free_yank_all	      3099	ops.c	FUNCTION_45	CALL_4
0x4005d3f	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3105	ops.c	FUNCTION_45	IF_7
0x4005d46	          0x8b4008	                mov eax, dword [rax + 8]	      3105	ops.c	FUNCTION_45	IF_7
0x4005d49	            0x85c0	                           test eax, eax	      3105	ops.c	FUNCTION_45	IF_7
0x4005d4b	            0x7578	                           jne 0x4005dc5	      3105	ops.c	FUNCTION_45	IF_7
0x4005d4d	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3106	ops.c	FUNCTION_45	IF_7
0x4005d54	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3106	ops.c	FUNCTION_45	IF_7
0x4005d57	            0x85c0	                           test eax, eax	      3106	ops.c	FUNCTION_45	IF_7
0x4005d59	            0x756a	                           jne 0x4005dc5	      3106	ops.c	FUNCTION_45	IF_7
0x4005d5b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3107	ops.c	FUNCTION_45	IF_7
0x4005d62	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3107	ops.c	FUNCTION_45	IF_7
0x4005d65	            0x85c0	                           test eax, eax	      3107	ops.c	FUNCTION_45	IF_7
0x4005d67	            0x755c	                           jne 0x4005dc5	      3107	ops.c	FUNCTION_45	IF_7
0x4005d69	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3108	ops.c	FUNCTION_45	IF_7
0x4005d70	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      3108	ops.c	FUNCTION_45	IF_7
0x4005d73	            0x85c0	                           test eax, eax	      3108	ops.c	FUNCTION_45	IF_7
0x4005d75	            0x740e	                            je 0x4005d85	      3108	ops.c	FUNCTION_45	IF_7
0x4005d77	    0x488b05000000	            mov rax, qword [0x04005d7e] 	      3108	ops.c	FUNCTION_45	IF_7
0x4005d7e	           0xfb600	                   movzx eax, byte [rax]	      3108	ops.c	FUNCTION_45	IF_7
0x4005d81	            0x3c6f	                            cmp al, 0x6f	      3108	ops.c	FUNCTION_45	IF_7
0x4005d83	            0x7540	                           jne 0x4005dc5	      3108	ops.c	FUNCTION_45	IF_7
0x4005d85	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3109	ops.c	FUNCTION_45	IF_7
0x4005d8c	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3109	ops.c	FUNCTION_45	IF_7
0x4005d8f	            0x85c0	                           test eax, eax	      3109	ops.c	FUNCTION_45	IF_7
0x4005d91	            0x7532	                           jne 0x4005dc5	      3109	ops.c	FUNCTION_45	IF_7
0x4005d93	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3110	ops.c	FUNCTION_45	IF_7
0x4005d9a	          0x8b4038	            mov eax, dword [rax + 0x38] 	      3110	ops.c	FUNCTION_45	IF_7
0x4005d9d	            0x85c0	                           test eax, eax	      3110	ops.c	FUNCTION_45	IF_7
0x4005d9f	            0x7524	                           jne 0x4005dc5	      3110	ops.c	FUNCTION_45	IF_7
0x4005da1	    0x4883bdf0feff	              cmp qword [rbp - 0x110], 1	      3111	ops.c	FUNCTION_45	IF_7
0x4005da9	            0x7e1a	                           jle 0x4005dc5	      3111	ops.c	FUNCTION_45	IF_7
0x4005dab	    0xc785c4feffff	              mov dword [rbp - 0x13c], 1	      3113	ops.c	FUNCTION_45	IF_7
0x4005db5	    0x4883adf8feff	              sub qword [rbp - 0x108], 1	      3114	ops.c	FUNCTION_45	IF_7
0x4005dbd	    0x4883adf0feff	              sub qword [rbp - 0x110], 1	      3115	ops.c	FUNCTION_45	IF_7
0x4005dc5	    0x488b05000000	            mov rax, qword [0x04005dcc] 	      3118	ops.c	FUNCTION_45
0x4005dcc	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      3118	ops.c	FUNCTION_45
0x4005dd3	        0x48895008	                mov qword [rax + 8], rdx	      3118	ops.c	FUNCTION_45
0x4005dd7	    0x488b05000000	            mov rax, qword [0x04005dde] 	      3119	ops.c	FUNCTION_45
0x4005dde	    0x8b95c4feffff	            mov edx, dword [rbp - 0x13c]	      3119	ops.c	FUNCTION_45
0x4005de4	          0x885010	               mov byte [rax + 0x10], dl	      3119	ops.c	FUNCTION_45
0x4005de7	    0x488b05000000	            mov rax, qword [0x04005dee] 	      3120	ops.c	FUNCTION_45
0x4005dee	    0xc74014000000	               mov dword [rax + 0x14], 0	      3120	ops.c	FUNCTION_45
0x4005df5	    0x488b1d000000	            mov rbx, qword [0x04005dfc] 	      3121	ops.c	FUNCTION_45	CALL_5
0x4005dfc	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      3121	ops.c	FUNCTION_45	CALL_5
0x4005e03	        0x48c1e003	                              shl rax, 3	      3121	ops.c	FUNCTION_45	CALL_5
0x4005e07	      0xbe01000000	                              mov esi, 1	      3121	ops.c	FUNCTION_45	CALL_5
0x4005e0c	          0x4889c7	                            mov rdi, rax	      3121	ops.c	FUNCTION_45	CALL_5
0x4005e0f	      0xe800000000	                          call 0x4005e14	      3121	ops.c	FUNCTION_45	CALL_5
0x4005e14	          0x488903	                    mov qword [rbx], rax	      3121	ops.c	FUNCTION_45	CALL_5
0x4005e17	    0x488b05000000	            mov rax, qword [0x04005e1e] 	      3123	ops.c	FUNCTION_45	IF_8
0x4005e1e	          0x488b00	                    mov rax, qword [rax]	      3123	ops.c	FUNCTION_45	IF_8
0x4005e21	          0x4885c0	                           test rax, rax	      3123	ops.c	FUNCTION_45	IF_8
0x4005e24	            0x7518	                           jne 0x4005e3e	      3123	ops.c	FUNCTION_45	IF_8
0x4005e26	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3125	ops.c	FUNCTION_45	IF_8
0x4005e2d	    0x488905000000	            mov qword [0x04005e34], rax 	      3125	ops.c	FUNCTION_45	IF_8
0x4005e34	      0xb800000000	                              mov eax, 0	      3126	ops.c	FUNCTION_45	IF_8
0x4005e39	      0xe9240b0000	                           jmp 0x4006962	      3126	ops.c	FUNCTION_45	IF_8
0x4005e3e	    0x488b1d000000	            mov rbx, qword [0x04005e45] 	      3129	ops.c	FUNCTION_45	CALL_6
0x4005e45	      0xe800000000	                          call 0x4005e4a	      3129	ops.c	FUNCTION_45	CALL_6
0x4005e4a	        0x48894318	             mov qword [rbx + 0x18], rax	      3129	ops.c	FUNCTION_45	CALL_6
0x4005e4e	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      3132	ops.c	FUNCTION_45
0x4005e59	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3133	ops.c	FUNCTION_45
0x4005e60	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3133	ops.c	FUNCTION_45
0x4005e64	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      3133	ops.c	FUNCTION_45
0x4005e6b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3135	ops.c	FUNCTION_45	IF_9
0x4005e72	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3135	ops.c	FUNCTION_45	IF_9
0x4005e75	            0x85c0	                           test eax, eax	      3135	ops.c	FUNCTION_45	IF_9
0x4005e77	     0xf8435040000	                            je 0x40062b2	      3135	ops.c	FUNCTION_45	IF_9
0x4005e7d	    0x488b05000000	            mov rax, qword [0x04005e84] 	      3138	ops.c	FUNCTION_45	IF_9
0x4005e84	        0xc6401002	                mov byte [rax + 0x10], 2	      3138	ops.c	FUNCTION_45	IF_9
0x4005e88	    0x488b05000000	            mov rax, qword [0x04005e8f] 	      3139	ops.c	FUNCTION_45	IF_9
0x4005e8f	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	      3139	ops.c	FUNCTION_45	IF_9
0x4005e96	          0x8b4a68	            mov ecx, dword [rdx + 0x68] 	      3139	ops.c	FUNCTION_45	IF_9
0x4005e99	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	      3139	ops.c	FUNCTION_45	IF_9
0x4005ea0	          0x8b5264	            mov edx, dword [rdx + 0x64] 	      3139	ops.c	FUNCTION_45	IF_9
0x4005ea3	            0x29d1	                            sub ecx, edx	      3139	ops.c	FUNCTION_45	IF_9
0x4005ea5	            0x89ca	                            mov edx, ecx	      3139	ops.c	FUNCTION_45	IF_9
0x4005ea7	          0x895014	             mov dword [rax + 0x14], edx	      3139	ops.c	FUNCTION_45	IF_9
0x4005eaa	    0x488b05000000	            mov rax, qword [0x04005eb1] 	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x4005eb1	          0x8b4048	            mov eax, dword [rax + 0x48] 	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x4005eb4	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x4005eb9	     0xf85f3030000	                           jne 0x40062b2	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x4005ebf	    0x488b05000000	            mov rax, qword [0x04005ec6] 	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x4005ec6	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x4005ec9	            0x85c0	                           test eax, eax	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x4005ecb	     0xf8ee1030000	                           jle 0x40062b2	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x4005ed1	    0x488b05000000	            mov rax, qword [0x04005ed8] 	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x4005ed8	          0x8b5014	            mov edx, dword [rax + 0x14] 	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x4005edb	          0x83ea01	                              sub edx, 1	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x4005ede	          0x895014	             mov dword [rax + 0x14], edx	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x4005ee1	      0xe9cc030000	                           jmp 0x40062b2	      3145	ops.c	FUNCTION_45	FOR_1
0x4005ee6	    0x488b05000000	            mov rax, qword [0x04005eed] 	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005eed	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005ef1	           0xfb6c0	                           movzx eax, al	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005ef4	          0x83f801	                              cmp eax, 1	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005ef7	            0x745a	                            je 0x4005f53	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005ef9	          0x83f802	                              cmp eax, 2	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005efc	            0x740d	                            je 0x4005f0b	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005efe	            0x85c0	                           test eax, eax	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005f00	     0xf8491000000	                            je 0x4005f97	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005f06	      0xe997030000	                           jmp 0x40062a2	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005f0b	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x4005f12	    0x488db540ffff	                   lea rsi, [rbp - 0xc0]	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x4005f19	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x4005f20	      0xb900000000	                              mov ecx, 0	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x4005f25	          0x4889c7	                            mov rdi, rax	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x4005f28	      0xe820490000	                     call sym.block_prep	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x4005f2d	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4005f34	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4005f3b	          0x4889d6	                            mov rsi, rdx	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4005f3e	          0x4889c7	                            mov rdi, rax	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4005f41	      0xe83a0a0000	                 call sym.yank_copy_line	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4005f46	            0x85c0	                           test eax, eax	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4005f48	     0xf8550030000	                           jne 0x400629e	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x4005f4e	      0xe9e9090000	                           jmp 0x400693c	      3152	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11
0x4005f53	    0x488b05000000	            mov rax, qword [0x04005f5a] 	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4005f5a	          0x488b00	                    mov rax, qword [rax]	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4005f5d	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4005f64	        0x48c1e203	                              shl rdx, 3	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4005f68	        0x488d1c10	                    lea rbx, [rax + rdx]	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4005f6c	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x4005f73	          0x4889c7	                            mov rdi, rax	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x4005f76	      0xe800000000	                          call 0x4005f7b	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x4005f7b	          0x4889c7	                            mov rdi, rax	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x4005f7e	      0xe800000000	                          call 0x4005f83	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x4005f83	          0x488903	                    mov qword [rbx], rax	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4005f86	          0x488b03	                    mov rax, qword [rbx]	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4005f89	          0x4885c0	                           test rax, rax	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4005f8c	     0xf850f030000	                           jne 0x40062a1	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4005f92	      0xe9a5090000	                           jmp 0x400693c	      3158	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x4005f97	    0xc785ccfeffff	              mov dword [rbp - 0x134], 0	      3163	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005fa1	    0xc785d0feffff	     mov dword [rbp - 0x130], 0x7fffffff	      3163	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005fab	    0xc785d4feffff	              mov dword [rbp - 0x12c], 0	      3165	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005fb5	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x4005fbc	          0x4889c7	                            mov rdi, rax	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x4005fbf	      0xe800000000	                          call 0x4005fc4	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x4005fc4	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x4005fcb	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      3169	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005fd5	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      3170	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4005fdf	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3172	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x4005fe6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3172	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x4005fea	    0x483b85e0feff	            cmp rax, qword [rbp - 0x120]	      3172	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x4005ff1	     0xf8596000000	                           jne 0x400608d	      3172	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x4005ff7	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3174	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x4005ffe	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3174	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x4006001	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      3174	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x4006007	    0x8b0500000000	            mov eax, dword [0x0400600d] 	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x400600d	            0x85c0	                           test eax, eax	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x400600f	            0x747c	                            je 0x400608d	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x4006011	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4006018	        0x488d7020	                   lea rsi, [rax + 0x20]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400601c	    0x488b05000000	            mov rax, qword [0x04006023] 	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4006023	    0x488d8dc0feff	                  lea rcx, [rbp - 0x140]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400602a	    0x488d95bcfeff	                  lea rdx, [rbp - 0x144]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4006031	          0x4989c8	                             mov r8, rcx	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4006034	      0xb900000000	                              mov ecx, 0	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4006039	          0x4889c7	                            mov rdi, rax	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400603c	      0xe800000000	                          call 0x4006041	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x4006041	    0x8b95c0feffff	            mov edx, dword [rbp - 0x140]	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4006047	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400604d	            0x39c2	                            cmp edx, eax	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400604f	            0x743c	                            je 0x400608d	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4006051	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4006058	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400605b	            0x85c0	                           test eax, eax	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400605d	            0x7e2e	                           jle 0x400608d	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400605f	    0x8b95c0feffff	            mov edx, dword [rbp - 0x140]	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4006065	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400606b	            0x29c2	                            sub edx, eax	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400606d	            0x89d0	                            mov eax, edx	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400606f	          0x8d5001	                      lea edx, [rax + 1]	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4006072	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3184	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4006079	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3184	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400607c	            0x29c2	                            sub edx, eax	      3184	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400607e	            0x89d0	                            mov eax, edx	      3184	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4006080	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x4006086	    0x8385ccfeffff	              add dword [rbp - 0x134], 1	      3185	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400608d	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x4006094	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x4006098	    0x483b85e0feff	            cmp rax, qword [rbp - 0x120]	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400609f	     0xf8558010000	                           jne 0x40061fd	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x40060a5	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x40060ac	          0x8b4038	            mov eax, dword [rax + 0x38] 	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x40060af	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x40060b5	    0x8b0500000000	            mov eax, dword [0x040060bb] 	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x40060bb	            0x85c0	                           test eax, eax	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x40060bd	     0xf843a010000	                            je 0x40061fd	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x40060c3	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x40060ca	        0x488d7030	                   lea rsi, [rax + 0x30]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x40060ce	    0x488b05000000	            mov rax, qword [0x040060d5] 	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x40060d5	    0x488d8dc0feff	                  lea rcx, [rbp - 0x140]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x40060dc	    0x488d95bcfeff	                  lea rdx, [rbp - 0x144]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x40060e3	          0x4989c8	                             mov r8, rcx	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x40060e6	      0xb900000000	                              mov ecx, 0	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x40060eb	          0x4889c7	                            mov rdi, rax	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x40060ee	      0xe800000000	                          call 0x40060f3	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x40060f3	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x40060f9	          0x4863d0	                         movsxd rdx, eax	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x40060fc	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006103	          0x4801d0	                            add rax, rdx	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006106	           0xfb600	                   movzx eax, byte [rax]	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006109	            0x84c0	                             test al, al	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400610b	            0x7451	                            je 0x400615e	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400610d	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006114	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006117	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400611d	             0x1c2	                            add edx, eax	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400611f	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006125	            0x39c2	                            cmp edx, eax	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006127	     0xf8dd0000000	                           jge 0x40061fd	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400612d	    0x488b05000000	            mov rax, qword [0x04006134] 	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006134	    0x8b95d0feffff	            mov edx, dword [rbp - 0x130]	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400613a	          0x4863ca	                         movsxd rcx, edx	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400613d	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006144	          0x4801d1	                            add rcx, rdx	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006147	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400614e	          0x4889ce	                            mov rsi, rcx	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006151	          0x4889d7	                            mov rdi, rdx	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006154	            0xffd0	                                call rax	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006156	            0x85c0	                           test eax, eax	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x4006158	     0xf859f000000	                           jne 0x40061fd	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400615e	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4006165	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4006169	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4006170	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4006174	          0x4839c2	                            cmp rdx, rax	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4006177	            0x7558	                           jne 0x40061d1	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4006179	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4006180	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4006183	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400618a	          0x8b4038	            mov eax, dword [rax + 0x38] 	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400618d	            0x39c2	                            cmp edx, eax	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400618f	            0x7540	                           jne 0x40061d1	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x4006191	    0xc785d4feffff	              mov dword [rbp - 0x12c], 1	      3211	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400619b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061a2	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061a5	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3213	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061ac	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3213	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061af	            0x29c2	                            sub edx, eax	      3213	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061b1	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3213	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061b8	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3213	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061bb	             0x1d0	                            add eax, edx	      3213	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061bd	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061c3	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      3214	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061c9	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3214	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061cf	            0xeb2c	                           jmp 0x40061fd	      3214	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x40061d1	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x40061d8	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x40061db	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3219	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x40061e2	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3219	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x40061e5	             0x1d0	                            add eax, edx	      3219	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x40061e7	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x40061ed	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3220	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x40061f4	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3220	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x40061f7	    0x2985d0feffff	            sub dword [rbp - 0x130], eax	      3220	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x40061fd	    0x81bdd0feffff	    cmp dword [rbp - 0x130], 0x7fffffff 	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x4006207	            0x7515	                           jne 0x400621e	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x4006209	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x4006210	          0x4889c7	                            mov rdi, rax	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x4006213	      0xe800000000	                          call 0x4006218	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x4006218	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400621e	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x4006224	    0x3b85d0feffff	            cmp eax, dword [rbp - 0x130]	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400622a	            0x7f09	                            jg 0x4006235	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400622c	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3230	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x4006233	            0x740c	                            je 0x4006241	      3230	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x4006235	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      3233	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400623f	            0xeb20	                           jmp 0x4006261	      3233	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x4006241	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x4006247	    0x2b85ccfeffff	            sub eax, dword [rbp - 0x134]	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x400624d	            0x89c2	                            mov edx, eax	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x400624f	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x4006256	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x4006259	             0x1d0	                            add eax, edx	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x400625b	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x4006261	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4006267	          0x4863d0	                         movsxd rdx, eax	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400626a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4006271	          0x4801d0	                            add rax, rdx	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x4006274	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400627b	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x4006282	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x4006289	          0x4889d6	                            mov rsi, rdx	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x400628c	          0x4889c7	                            mov rdi, rax	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x400628f	      0xe8ec060000	                 call sym.yank_copy_line	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x4006294	            0x85c0	                           test eax, eax	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x4006296	     0xf849c060000	                            je 0x4006938	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x400629c	            0xeb04	                           jmp 0x40062a2	      3239	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x400629e	              0x90	                                     nop	      3153	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400629f	            0xeb01	                           jmp 0x40062a2	      3153	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x40062a1	              0x90	                                     nop	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x40062a2	    0x488385e0feff	              add qword [rbp - 0x120], 1	      3145	ops.c	FUNCTION_45	FOR_1
0x40062aa	    0x488385d8feff	              add qword [rbp - 0x128], 1	      3145	ops.c	FUNCTION_45	FOR_1
0x40062b2	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3145	ops.c	FUNCTION_45	FOR_1
0x40062b9	    0x483b85f8feff	            cmp rax, qword [rbp - 0x108]	      3145	ops.c	FUNCTION_45	FOR_1
0x40062c0	     0xf8e20fcffff	                           jle 0x4005ee6	      3145	ops.c	FUNCTION_45	FOR_1
0x40062c6	    0x488b05000000	            mov rax, qword [0x040062cd] 	      3247	ops.c	FUNCTION_45	IF_23
0x40062cd	    0x48398500ffff	           cmp qword [rbp - 0x100], rax 	      3247	ops.c	FUNCTION_45	IF_23
0x40062d4	     0xf8402030000	                            je 0x40065dc	      3247	ops.c	FUNCTION_45	IF_23
0x40062da	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3250	ops.c	FUNCTION_45	IF_23
0x40062e1	        0x488b5008	                mov rdx, qword [rax + 8]	      3250	ops.c	FUNCTION_45	IF_23
0x40062e5	    0x488b05000000	            mov rax, qword [0x040062ec] 	      3250	ops.c	FUNCTION_45	IF_23
0x40062ec	        0x488b4008	                mov rax, qword [rax + 8]	      3250	ops.c	FUNCTION_45	IF_23
0x40062f0	          0x4801d0	                            add rax, rdx	      3250	ops.c	FUNCTION_45	IF_23
0x40062f3	        0x48c1e003	                              shl rax, 3	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x40062f7	      0xbe01000000	                              mov esi, 1	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x40062fc	          0x4889c7	                            mov rdi, rax	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x40062ff	      0xe800000000	                          call 0x4006304	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x4006304	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400630b	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      3251	ops.c	FUNCTION_45	IF_23	IF_24
0x4006313	     0xf8422060000	                            je 0x400693b	      3251	ops.c	FUNCTION_45	IF_23	IF_24
0x4006319	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006324	            0xeb3f	                           jmp 0x4006365	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006326	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400632d	    0x488d14c50000	                        lea rdx, [rax*8]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006335	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400633c	          0x4801c2	                            add rdx, rax	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400633f	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006346	          0x488b00	                    mov rax, qword [rax]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006349	    0x488b8de8feff	            mov rcx, qword [rbp - 0x118]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006350	        0x48c1e103	                              shl rcx, 3	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006354	          0x4801c8	                            add rax, rcx	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006357	          0x488b00	                    mov rax, qword [rax]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400635a	          0x488902	                    mov qword [rdx], rax	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400635d	    0x488385e8feff	              add qword [rbp - 0x118], 1	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006365	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400636c	        0x488b4008	                mov rax, qword [rax + 8]	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006370	    0x483b85e8feff	            cmp rax, qword [rbp - 0x118]	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006377	            0x7fad	                            jg 0x4006326	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x4006379	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3255	ops.c	FUNCTION_45	IF_23	CALL_17
0x4006380	          0x488b00	                    mov rax, qword [rax]	      3255	ops.c	FUNCTION_45	IF_23	CALL_17
0x4006383	          0x4889c7	                            mov rdi, rax	      3255	ops.c	FUNCTION_45	IF_23	CALL_17
0x4006386	      0xe800000000	                          call 0x400638b	      3255	ops.c	FUNCTION_45	IF_23	CALL_17
0x400638b	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3256	ops.c	FUNCTION_45	IF_23
0x4006392	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3256	ops.c	FUNCTION_45	IF_23
0x4006399	          0x488910	                    mov qword [rax], rdx	      3256	ops.c	FUNCTION_45	IF_23
0x400639c	      0xe800000000	                          call 0x40063a1	      3258	ops.c	FUNCTION_45	IF_23	CALL_18
0x40063a1	          0x4889c2	                            mov rdx, rax	      3258	ops.c	FUNCTION_45	IF_23	CALL_18
0x40063a4	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3258	ops.c	FUNCTION_45	IF_23	CALL_18
0x40063ab	        0x48895018	             mov qword [rax + 0x18], rdx	      3258	ops.c	FUNCTION_45	IF_23	CALL_18
0x40063af	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 1	      3261	ops.c	FUNCTION_45	IF_23	IF_25
0x40063b6	            0x750b	                           jne 0x40063c3	      3261	ops.c	FUNCTION_45	IF_23	IF_25
0x40063b8	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3262	ops.c	FUNCTION_45	IF_23	IF_25
0x40063bf	        0xc6401001	                mov byte [rax + 0x10], 1	      3262	ops.c	FUNCTION_45	IF_23	IF_25
0x40063c3	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x40063ca	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x40063ce	            0x84c0	                             test al, al	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x40063d0	     0xf8567010000	                           jne 0x400653d	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x40063d6	    0x488b05000000	            mov rax, qword [0x040063dd] 	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x40063dd	      0xbe3e000000	                           mov esi, 0x3e	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x40063e2	          0x4889c7	                            mov rdi, rax	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x40063e5	      0xe800000000	                          call 0x40063ea	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x40063ea	          0x4885c0	                           test rax, rax	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x40063ed	     0xf854a010000	                           jne 0x400653d	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x40063f3	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x40063fa	          0x488b10	                    mov rdx, qword [rax]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x40063fd	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4006404	        0x488b4008	                mov rax, qword [rax + 8]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4006408	        0x48c1e003	                              shl rax, 3	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400640c	        0x4883e808	                              sub rax, 8	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4006410	          0x4801d0	                            add rax, rdx	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4006413	          0x488b00	                    mov rax, qword [rax]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4006416	          0x4889c7	                            mov rdi, rax	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4006419	      0xe800000000	                          call 0x400641e	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400641e	          0x4889c3	                            mov rbx, rax	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4006421	    0x488b05000000	            mov rax, qword [0x04006428] 	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x4006428	          0x488b00	                    mov rax, qword [rax]	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x400642b	          0x488b00	                    mov rax, qword [rax]	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x400642e	          0x4889c7	                            mov rdi, rax	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x4006431	      0xe800000000	                          call 0x4006436	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x4006436	          0x4801d8	                            add rax, rbx	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x4006439	        0x4883c001	                              add rax, 1	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x400643d	      0xbe01000000	                              mov esi, 1	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4006442	          0x4889c7	                            mov rdi, rax	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4006445	      0xe800000000	                          call 0x400644a	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400644a	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x4006451	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      3270	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x4006459	            0x751b	                           jne 0x4006476	      3270	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400645b	    0x488b05000000	            mov rax, qword [0x04006462] 	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x4006462	        0x488b4008	                mov rax, qword [rax + 8]	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x4006466	        0x4883e801	                              sub rax, 1	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400646a	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x4006471	      0xe9c6040000	                           jmp 0x400693c	      3273	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x4006476	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x400647d	          0x488b00	                    mov rax, qword [rax]	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x4006480	    0x4883ade8feff	              sub qword [rbp - 0x118], 1	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x4006488	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x400648f	        0x48c1e203	                              shl rdx, 3	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x4006493	          0x4801d0	                            add rax, rdx	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x4006496	          0x488b10	                    mov rdx, qword [rax]	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x4006499	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x40064a0	          0x4889d6	                            mov rsi, rdx	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x40064a3	          0x4889c7	                            mov rdi, rax	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x40064a6	      0xe800000000	                          call 0x40064ab	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x40064ab	    0x488b05000000	            mov rax, qword [0x040064b2] 	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x40064b2	          0x488b00	                    mov rax, qword [rax]	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x40064b5	          0x488b10	                    mov rdx, qword [rax]	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x40064b8	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x40064bf	          0x4889d6	                            mov rsi, rdx	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x40064c2	          0x4889c7	                            mov rdi, rax	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x40064c5	      0xe800000000	                          call 0x40064ca	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x40064ca	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x40064d1	          0x488b00	                    mov rax, qword [rax]	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x40064d4	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x40064db	        0x48c1e203	                              shl rdx, 3	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x40064df	          0x4801d0	                            add rax, rdx	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x40064e2	          0x488b00	                    mov rax, qword [rax]	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x40064e5	          0x4889c7	                            mov rdi, rax	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x40064e8	      0xe800000000	                          call 0x40064ed	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x40064ed	    0x488b05000000	            mov rax, qword [0x040064f4] 	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x40064f4	          0x488b00	                    mov rax, qword [rax]	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x40064f7	          0x488b00	                    mov rax, qword [rax]	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x40064fa	          0x4889c7	                            mov rdi, rax	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x40064fd	      0xe800000000	                          call 0x4006502	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x4006502	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x4006509	          0x488b08	                    mov rcx, qword [rax]	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x400650c	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x4006513	        0x488d5001	                      lea rdx, [rax + 1]	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x4006517	    0x488995e8feff	            mov qword [rbp - 0x118], rdx	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x400651e	        0x48c1e003	                              shl rax, 3	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x4006522	        0x488d1401	                    lea rdx, [rcx + rax]	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x4006526	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x400652d	          0x488902	                    mov qword [rdx], rax	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x4006530	    0x48c785d8feff	              mov qword [rbp - 0x128], 1	      3280	ops.c	FUNCTION_45	IF_23	IF_26
0x400653b	            0xeb0b	                           jmp 0x4006548	      3280	ops.c	FUNCTION_45	IF_23	IF_26
0x400653d	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      3283	ops.c	FUNCTION_45	IF_23	ELSE_5
0x4006548	            0xeb4c	                           jmp 0x4006596	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400654a	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4006551	          0x488b08	                    mov rcx, qword [rax]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4006554	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400655b	        0x488d5001	                      lea rdx, [rax + 1]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400655f	    0x488995e8feff	            mov qword [rbp - 0x118], rdx	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4006566	        0x48c1e003	                              shl rax, 3	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400656a	          0x4801c1	                            add rcx, rax	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400656d	    0x488b05000000	            mov rax, qword [0x04006574] 	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4006574	          0x488b30	                    mov rsi, qword [rax]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4006577	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400657e	        0x488d5001	                      lea rdx, [rax + 1]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4006582	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4006589	        0x48c1e003	                              shl rax, 3	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400658d	          0x4801f0	                            add rax, rsi	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4006590	          0x488b00	                    mov rax, qword [rax]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4006593	          0x488901	                    mov qword [rcx], rax	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x4006596	    0x488b05000000	            mov rax, qword [0x0400659d] 	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400659d	        0x488b4008	                mov rax, qword [rax + 8]	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x40065a1	    0x483b85d8feff	            cmp rax, qword [rbp - 0x128]	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x40065a8	            0x7fa0	                            jg 0x400654a	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x40065aa	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3286	ops.c	FUNCTION_45	IF_23
0x40065b1	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      3286	ops.c	FUNCTION_45	IF_23
0x40065b8	        0x48895008	                mov qword [rax + 8], rdx	      3286	ops.c	FUNCTION_45	IF_23
0x40065bc	    0x488b05000000	            mov rax, qword [0x040065c3] 	      3287	ops.c	FUNCTION_45	IF_23	CALL_27
0x40065c3	          0x488b00	                    mov rax, qword [rax]	      3287	ops.c	FUNCTION_45	IF_23	CALL_27
0x40065c6	          0x4889c7	                            mov rdi, rax	      3287	ops.c	FUNCTION_45	IF_23	CALL_27
0x40065c9	      0xe800000000	                          call 0x40065ce	      3287	ops.c	FUNCTION_45	IF_23	CALL_27
0x40065ce	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3288	ops.c	FUNCTION_45	IF_23
0x40065d5	    0x488905000000	            mov qword [0x040065dc], rax 	      3288	ops.c	FUNCTION_45	IF_23
0x40065dc	    0x488b05000000	            mov rax, qword [0x040065e3] 	      3290	ops.c	FUNCTION_45	IF_28
0x40065e3	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      3290	ops.c	FUNCTION_45	IF_28
0x40065e9	            0x85c0	                           test eax, eax	      3290	ops.c	FUNCTION_45	IF_28
0x40065eb	            0x740a	                            je 0x40065f7	      3290	ops.c	FUNCTION_45	IF_28
0x40065ed	      0xbf23000000	                           mov edi, 0x23	      3291	ops.c	FUNCTION_45	CALL_28
0x40065f2	      0xe800000000	                          call 0x40065f7	      3291	ops.c	FUNCTION_45	CALL_28
0x40065f7	    0x83bda0feffff	              cmp dword [rbp - 0x160], 0	      3292	ops.c	FUNCTION_45	IF_29
0x40065fe	     0xf8449010000	                            je 0x400674d	      3292	ops.c	FUNCTION_45	IF_29
0x4006604	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	      3294	ops.c	FUNCTION_45	IF_29	IF_30
0x400660b	            0x7523	                           jne 0x4006630	      3294	ops.c	FUNCTION_45	IF_29	IF_30
0x400660d	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3295	ops.c	FUNCTION_45	IF_29	IF_30
0x4006614	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3295	ops.c	FUNCTION_45	IF_29	IF_30
0x4006617	            0x85c0	                           test eax, eax	      3295	ops.c	FUNCTION_45	IF_29	IF_30
0x4006619	            0x7515	                           jne 0x4006630	      3295	ops.c	FUNCTION_45	IF_29	IF_30
0x400661b	    0x4883bdf0feff	              cmp qword [rbp - 0x110], 1	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x4006623	            0x750b	                           jne 0x4006630	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x4006625	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x4006630	    0x488b05000000	            mov rax, qword [0x04006637] 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x4006637	    0x483985f0feff	           cmp qword [rbp - 0x110], rax 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400663e	     0xf8e09010000	                           jle 0x400674d	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x4006644	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400664b	          0x8b4004	                mov eax, dword [rax + 4]	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400664e	            0x85c0	                           test eax, eax	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x4006650	            0x7506	                           jne 0x4006658	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x4006652	        0xc6458000	                mov byte [rbp - 0x80], 0	      3304	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x4006656	            0xeb2f	                           jmp 0x4006687	      3304	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x4006658	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400665f	          0x8b5804	                mov ebx, dword [rax + 4]	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4006662	      0xbf00000000	                              mov edi, 0	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4006667	      0xe800000000	                          call 0x400666c	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400666c	          0x4889c2	                            mov rdx, rax	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400666f	        0x488d4580	                   lea rax, [rbp - 0x80]	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4006673	            0x89d9	                            mov ecx, ebx	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4006675	      0xbe64000000	                           mov esi, 0x64	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400667a	          0x4889c7	                            mov rdi, rax	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400667d	      0xb800000000	                              mov eax, 0	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4006682	      0xe800000000	                          call 0x4006687	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x4006687	      0xe800000000	                          call 0x400668c	      3310	ops.c	FUNCTION_45	IF_29	IF_31	CALL_31
0x400668c	    0x4883bdf0feff	              cmp qword [rbp - 0x110], 1	      3311	ops.c	FUNCTION_45	IF_29	IF_31	IF_33
0x4006694	            0x7557	                           jne 0x40066ed	      3311	ops.c	FUNCTION_45	IF_29	IF_31	IF_33
0x4006696	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x400669d	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x40066a0	            0x85c0	                           test eax, eax	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x40066a2	            0x7426	                            je 0x40066ca	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x40066a4	      0xbf00000000	                              mov edi, 0	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x40066a9	      0xe800000000	                          call 0x40066ae	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x40066ae	          0x4889c2	                            mov rdx, rax	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x40066b1	        0x488d4580	                   lea rax, [rbp - 0x80]	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x40066b5	          0x4889c6	                            mov rsi, rax	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x40066b8	          0x4889d7	                            mov rdi, rdx	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x40066bb	      0xb800000000	                              mov eax, 0	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x40066c0	      0xe800000000	                          call 0x40066c5	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x40066c5	      0xe983000000	                           jmp 0x400674d	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x40066ca	      0xbf00000000	                              mov edi, 0	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x40066cf	      0xe800000000	                          call 0x40066d4	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x40066d4	          0x4889c2	                            mov rdx, rax	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x40066d7	        0x488d4580	                   lea rax, [rbp - 0x80]	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x40066db	          0x4889c6	                            mov rsi, rax	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x40066de	          0x4889d7	                            mov rdi, rdx	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x40066e1	      0xb800000000	                              mov eax, 0	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x40066e6	      0xe800000000	                          call 0x40066eb	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x40066eb	            0xeb60	                           jmp 0x400674d	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x40066ed	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x40066f4	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x40066f7	            0x85c0	                           test eax, eax	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x40066f9	            0x742a	                            je 0x4006725	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x40066fb	      0xbf00000000	                              mov edi, 0	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4006700	      0xe800000000	                          call 0x4006705	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4006705	          0x4889c1	                            mov rcx, rax	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4006708	        0x488d5580	                   lea rdx, [rbp - 0x80]	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x400670c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4006713	          0x4889c6	                            mov rsi, rax	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4006716	          0x4889cf	                            mov rdi, rcx	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4006719	      0xb800000000	                              mov eax, 0	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x400671e	      0xe800000000	                          call 0x4006723	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4006723	            0xeb28	                           jmp 0x400674d	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x4006725	      0xbf00000000	                              mov edi, 0	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400672a	      0xe800000000	                          call 0x400672f	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400672f	          0x4889c1	                            mov rcx, rax	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4006732	        0x488d5580	                   lea rdx, [rbp - 0x80]	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4006736	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400673d	          0x4889c6	                            mov rsi, rax	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4006740	          0x4889cf	                            mov rdi, rcx	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4006743	      0xb800000000	                              mov eax, 0	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x4006748	      0xe800000000	                          call 0x400674d	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400674d	    0x488b0d000000	            mov rcx, qword [0x04006754] 	      3330	ops.c	FUNCTION_45
0x4006754	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3330	ops.c	FUNCTION_45
0x400675b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3330	ops.c	FUNCTION_45
0x400675f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3330	ops.c	FUNCTION_45
0x4006763	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      3330	ops.c	FUNCTION_45
0x400676a	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      3330	ops.c	FUNCTION_45
0x4006771	    0x488b0d000000	            mov rcx, qword [0x04006778] 	      3331	ops.c	FUNCTION_45
0x4006778	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3331	ops.c	FUNCTION_45
0x400677f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3331	ops.c	FUNCTION_45
0x4006783	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3331	ops.c	FUNCTION_45
0x4006787	    0x488981001200	          mov qword [rcx + 0x1200], rax 	      3331	ops.c	FUNCTION_45
0x400678e	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	      3331	ops.c	FUNCTION_45
0x4006795	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 1	      3332	ops.c	FUNCTION_45	IF_36
0x400679c	            0x7530	                           jne 0x40067ce	      3332	ops.c	FUNCTION_45	IF_36
0x400679e	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3332	ops.c	FUNCTION_45	IF_36
0x40067a5	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3332	ops.c	FUNCTION_45	IF_36
0x40067a8	            0x85c0	                           test eax, eax	      3332	ops.c	FUNCTION_45	IF_36
0x40067aa	            0x7522	                           jne 0x40067ce	      3332	ops.c	FUNCTION_45	IF_36
0x40067ac	    0x488b05000000	            mov rax, qword [0x040067b3] 	      3334	ops.c	FUNCTION_45	IF_36
0x40067b3	    0xc780e8110000	            mov dword [rax + 0x11e8], 0 	      3334	ops.c	FUNCTION_45	IF_36
0x40067bd	    0x488b05000000	            mov rax, qword [0x040067c4] 	      3335	ops.c	FUNCTION_45	IF_36
0x40067c4	    0xc78008120000	   mov dword [rax + 0x1208], 0x7fffffff 	      3335	ops.c	FUNCTION_45	IF_36
0x40067ce	    0x8b0500000000	            mov eax, dword [0x040067d4] 	      3344	ops.c	FUNCTION_45	IF_37
0x40067d4	            0x85c0	                           test eax, eax	      3344	ops.c	FUNCTION_45	IF_37
0x40067d6	            0x746e	                            je 0x4006846	      3344	ops.c	FUNCTION_45	IF_37
0x40067d8	    0x4881bd00ffff	              cmp qword [rbp - 0x100], 0	      3345	ops.c	FUNCTION_45	IF_37
0x40067e3	            0x742c	                            je 0x4006811	      3345	ops.c	FUNCTION_45	IF_37
0x40067e5	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      3346	ops.c	FUNCTION_45	IF_37
0x40067ec	            0x7558	                           jne 0x4006846	      3346	ops.c	FUNCTION_45	IF_37
0x40067ee	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3346	ops.c	FUNCTION_45	IF_37
0x40067f5	          0x8b4004	                mov eax, dword [rax + 4]	      3346	ops.c	FUNCTION_45	IF_37
0x40067f8	            0x85c0	                           test eax, eax	      3346	ops.c	FUNCTION_45	IF_37
0x40067fa	            0x754a	                           jne 0x4006846	      3346	ops.c	FUNCTION_45	IF_37
0x40067fc	    0x8b1500000000	            mov edx, dword [0x04006802] 	      3347	ops.c	FUNCTION_45	IF_37
0x4006802	    0x8b0500000000	            mov eax, dword [0x04006808] 	      3347	ops.c	FUNCTION_45	IF_37
0x4006808	             0x9d0	                             or eax, edx	      3347	ops.c	FUNCTION_45	IF_37
0x400680a	          0x83e001	                              and eax, 1	      3347	ops.c	FUNCTION_45	IF_37
0x400680d	            0x85c0	                           test eax, eax	      3347	ops.c	FUNCTION_45	IF_37
0x400680f	            0x7435	                            je 0x4006846	      3347	ops.c	FUNCTION_45	IF_37
0x4006811	    0x4881bd00ffff	              cmp qword [rbp - 0x100], 0	      3349	ops.c	FUNCTION_45	IF_37	IF_38
0x400681c	            0x740a	                            je 0x4006828	      3349	ops.c	FUNCTION_45	IF_37	IF_38
0x400681e	      0xbf00000000	                              mov edi, 0	      3351	ops.c	FUNCTION_45	IF_37	CALL_40
0x4006823	      0xe845020000	                  call sym.copy_yank_reg	      3351	ops.c	FUNCTION_45	IF_37	CALL_40
0x4006828	      0xbf00000000	                              mov edi, 0	      3353	ops.c	FUNCTION_45	IF_37	CALL_41
0x400682d	      0xe800000000	                          call 0x4006832	      3353	ops.c	FUNCTION_45	IF_37	CALL_41
0x4006832	      0xbf00000000	                              mov edi, 0	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x4006837	      0xe800000000	                          call 0x400683c	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x400683c	    0xc785c8feffff	              mov dword [rbp - 0x138], 1	      3356	ops.c	FUNCTION_45	IF_37
0x4006846	    0x8b0500000000	            mov eax, dword [0x0400684c] 	      3365	ops.c	FUNCTION_45	IF_39
0x400684c	            0x85c0	                           test eax, eax	      3365	ops.c	FUNCTION_45	IF_39
0x400684e	     0xf84b2000000	                            je 0x4006906	      3365	ops.c	FUNCTION_45	IF_39
0x4006854	    0x4881bd00ffff	              cmp qword [rbp - 0x100], 0	      3366	ops.c	FUNCTION_45	IF_39
0x400685f	            0x7434	                            je 0x4006895	      3366	ops.c	FUNCTION_45	IF_39
0x4006861	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      3367	ops.c	FUNCTION_45	IF_39
0x4006868	     0xf8598000000	                           jne 0x4006906	      3367	ops.c	FUNCTION_45	IF_39
0x400686e	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3367	ops.c	FUNCTION_45	IF_39
0x4006875	          0x8b4004	                mov eax, dword [rax + 4]	      3367	ops.c	FUNCTION_45	IF_39
0x4006878	            0x85c0	                           test eax, eax	      3367	ops.c	FUNCTION_45	IF_39
0x400687a	     0xf8586000000	                           jne 0x4006906	      3367	ops.c	FUNCTION_45	IF_39
0x4006880	    0x8b1500000000	            mov edx, dword [0x04006886] 	      3368	ops.c	FUNCTION_45	IF_39
0x4006886	    0x8b0500000000	            mov eax, dword [0x0400688c] 	      3368	ops.c	FUNCTION_45	IF_39
0x400688c	             0x9d0	                             or eax, edx	      3368	ops.c	FUNCTION_45	IF_39
0x400688e	          0x83e002	                              and eax, 2	      3368	ops.c	FUNCTION_45	IF_39
0x4006891	            0x85c0	                           test eax, eax	      3368	ops.c	FUNCTION_45	IF_39
0x4006893	            0x7471	                            je 0x4006906	      3368	ops.c	FUNCTION_45	IF_39
0x4006895	    0x4881bd00ffff	              cmp qword [rbp - 0x100], 0	      3371	ops.c	FUNCTION_45	IF_39	IF_40
0x40068a0	            0x740a	                            je 0x40068ac	      3371	ops.c	FUNCTION_45	IF_39	IF_40
0x40068a2	      0xbf00000000	                              mov edi, 0	      3373	ops.c	FUNCTION_45	IF_39	CALL_43
0x40068a7	      0xe8c1010000	                  call sym.copy_yank_reg	      3373	ops.c	FUNCTION_45	IF_39	CALL_43
0x40068ac	      0xbf00000000	                              mov edi, 0	      3375	ops.c	FUNCTION_45	IF_39	CALL_44
0x40068b1	      0xe800000000	                          call 0x40068b6	      3375	ops.c	FUNCTION_45	IF_39	CALL_44
0x40068b6	      0xbf00000000	                              mov edi, 0	      3376	ops.c	FUNCTION_45	IF_39	CALL_45
0x40068bb	      0xe800000000	                          call 0x40068c0	      3376	ops.c	FUNCTION_45	IF_39	CALL_45
0x40068c0	      0xe800000000	                          call 0x40068c5	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x40068c5	            0x85c0	                           test eax, eax	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x40068c7	            0x753d	                           jne 0x4006906	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x40068c9	      0xe800000000	                          call 0x40068ce	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x40068ce	            0x85c0	                           test eax, eax	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x40068d0	            0x7534	                           jne 0x4006906	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x40068d2	    0x83bdc8feffff	              cmp dword [rbp - 0x138], 0	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x40068d9	            0x752b	                           jne 0x4006906	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x40068db	    0x4881bd00ffff	              cmp qword [rbp - 0x100], 0	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x40068e6	            0x751e	                           jne 0x4006906	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x40068e8	      0xbf00000000	                              mov edi, 0	      3380	ops.c	FUNCTION_45	IF_39	IF_41	CALL_48
0x40068ed	      0xe87b010000	                  call sym.copy_yank_reg	      3380	ops.c	FUNCTION_45	IF_39	IF_41	CALL_48
0x40068f2	      0xbf00000000	                              mov edi, 0	      3381	ops.c	FUNCTION_45	IF_39	IF_41	CALL_49
0x40068f7	      0xe800000000	                          call 0x40068fc	      3381	ops.c	FUNCTION_45	IF_39	IF_41	CALL_49
0x40068fc	      0xbf00000000	                              mov edi, 0	      3382	ops.c	FUNCTION_45	IF_39	IF_41	CALL_50
0x4006901	      0xe800000000	                          call 0x4006906	      3382	ops.c	FUNCTION_45	IF_39	IF_41	CALL_50
0x4006906	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400690d	            0x7522	                           jne 0x4006931	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400690f	      0xe800000000	                          call 0x4006914	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x4006914	            0x85c0	                           test eax, eax	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x4006916	            0x7419	                            je 0x4006931	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x4006918	    0x488b15000000	            mov rdx, qword [0x0400691f] 	      3390	ops.c	FUNCTION_45	CALL_52
0x400691f	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3390	ops.c	FUNCTION_45	CALL_52
0x4006926	          0x4889d6	                            mov rsi, rdx	      3390	ops.c	FUNCTION_45	CALL_52
0x4006929	          0x4889c7	                            mov rdi, rax	      3390	ops.c	FUNCTION_45	CALL_52
0x400692c	      0xe8abbfffff	                call sym.yank_do_autocmd	      3390	ops.c	FUNCTION_45	CALL_52
0x4006931	      0xb801000000	                              mov eax, 1	      3393	ops.c	FUNCTION_45
0x4006936	            0xeb2a	                           jmp 0x4006962	      3393	ops.c	FUNCTION_45
0x4006938	              0x90	                                     nop	      3240	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22
0x4006939	            0xeb01	                           jmp 0x400693c	      3240	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22
0x400693b	              0x90	                                     nop	      3252	ops.c	FUNCTION_45	IF_23	IF_24
0x400693c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      3396	ops.c	FUNCTION_45	CALL_53
0x4006943	        0x4883c001	                              add rax, 1	      3396	ops.c	FUNCTION_45	CALL_53
0x4006947	          0x4889c7	                            mov rdi, rax	      3396	ops.c	FUNCTION_45	CALL_53
0x400694a	      0xe8ecf1ffff	                      call sym.free_yank	      3396	ops.c	FUNCTION_45	CALL_53
0x400694f	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3397	ops.c	FUNCTION_45
0x4006956	    0x488905000000	            mov qword [0x0400695d], rax 	      3397	ops.c	FUNCTION_45
0x400695d	      0xb800000000	                              mov eax, 0	      3398	ops.c	FUNCTION_45
0x4006962	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3399	ops.c	FUNCTION_45
0x4006966	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3399	ops.c	FUNCTION_45
0x400696f	            0x7405	                            je 0x4006976	      3399	ops.c	FUNCTION_45
0x4006971	      0xe800000000	                          call 0x4006976	      3399	ops.c	FUNCTION_45
0x4006976	    0x4881c4580100	                          add rsp, 0x158	      3399	ops.c	FUNCTION_45
0x400697d	              0x5b	                                 pop rbx	      3399	ops.c	FUNCTION_45
0x400697e	              0x5d	                                 pop rbp	      3399	ops.c	FUNCTION_45
0x400697f	              0xc3	                                     ret	      3399	ops.c	FUNCTION_45
free_register	ELSE,0:DO,0:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,2	39
0x4001868	              0x55	                                push rbp	      1055	ops.c	FUNCTION_19
0x4001869	          0x4889e5	                            mov rbp, rsp	      1055	ops.c	FUNCTION_19
0x400186c	        0x4883ec30	                           sub rsp, 0x30	      1055	ops.c	FUNCTION_19
0x4001870	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1055	ops.c	FUNCTION_19
0x4001874	    0x488b05000000	            mov rax, qword [0x0400187b] 	      1058	ops.c	FUNCTION_19
0x400187b	          0x488b10	                    mov rdx, qword [rax]	      1058	ops.c	FUNCTION_19
0x400187e	        0x488955e0	             mov qword [rbp - 0x20], rdx	      1058	ops.c	FUNCTION_19
0x4001882	        0x488b5008	                mov rdx, qword [rax + 8]	      1058	ops.c	FUNCTION_19
0x4001886	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1058	ops.c	FUNCTION_19
0x400188a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1058	ops.c	FUNCTION_19
0x400188e	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1058	ops.c	FUNCTION_19
0x4001892	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1058	ops.c	FUNCTION_19
0x4001896	        0x488945f8	                mov qword [rbp - 8], rax	      1058	ops.c	FUNCTION_19
0x400189a	    0x488b05000000	            mov rax, qword [0x040018a1] 	      1059	ops.c	FUNCTION_19
0x40018a1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1059	ops.c	FUNCTION_19
0x40018a5	          0x488b0a	                    mov rcx, qword [rdx]	      1059	ops.c	FUNCTION_19
0x40018a8	          0x488908	                    mov qword [rax], rcx	      1059	ops.c	FUNCTION_19
0x40018ab	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1059	ops.c	FUNCTION_19
0x40018af	        0x48894808	                mov qword [rax + 8], rcx	      1059	ops.c	FUNCTION_19
0x40018b3	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1059	ops.c	FUNCTION_19
0x40018b7	        0x48894810	             mov qword [rax + 0x10], rcx	      1059	ops.c	FUNCTION_19
0x40018bb	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1059	ops.c	FUNCTION_19
0x40018bf	        0x48895018	             mov qword [rax + 0x18], rdx	      1059	ops.c	FUNCTION_19
0x40018c3	      0xe8f6420000	                  call sym.free_yank_all	      1060	ops.c	FUNCTION_19	CALL_1
0x40018c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1061	ops.c	FUNCTION_19	CALL_2
0x40018cc	          0x4889c7	                            mov rdi, rax	      1061	ops.c	FUNCTION_19	CALL_2
0x40018cf	      0xe800000000	                          call 0x40018d4	      1061	ops.c	FUNCTION_19	CALL_2
0x40018d4	    0x488b05000000	            mov rax, qword [0x040018db] 	      1062	ops.c	FUNCTION_19
0x40018db	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1062	ops.c	FUNCTION_19
0x40018df	          0x488910	                    mov qword [rax], rdx	      1062	ops.c	FUNCTION_19
0x40018e2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1062	ops.c	FUNCTION_19
0x40018e6	        0x48895008	                mov qword [rax + 8], rdx	      1062	ops.c	FUNCTION_19
0x40018ea	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1062	ops.c	FUNCTION_19
0x40018ee	        0x48895010	             mov qword [rax + 0x10], rdx	      1062	ops.c	FUNCTION_19
0x40018f2	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1062	ops.c	FUNCTION_19
0x40018f6	        0x48895018	             mov qword [rax + 0x18], rdx	      1062	ops.c	FUNCTION_19
0x40018fa	              0x90	                                     nop	      1063	ops.c	FUNCTION_19
0x40018fb	              0xc9	                                   leave	      1063	ops.c	FUNCTION_19
0x40018fc	              0xc3	                                     ret	      1063	ops.c	FUNCTION_19
shift_delete_registers	ELSE,0:DO,0:IF,1:functions,0:WHILE,0:FOR,1:SWITCH,0:CALL,1	37
0x400283f	              0x55	                                push rbp	      1664	ops.c	FUNCTION_31
0x4002840	          0x4889e5	                            mov rbp, rsp	      1664	ops.c	FUNCTION_31
0x4002843	        0x4883ec10	                           sub rsp, 0x10	      1664	ops.c	FUNCTION_31
0x4002847	    0x48c705000000	               mov qword [0x04002852], 0	      1667	ops.c	FUNCTION_31
0x4002852	      0xe867330000	                  call sym.free_yank_all	      1668	ops.c	FUNCTION_31	CALL_1
0x4002857	    0xc745fc090000	                  mov dword [rbp - 4], 9	      1669	ops.c	FUNCTION_31	FOR_1
0x400285e	            0xeb45	                           jmp 0x40028a5	      1669	ops.c	FUNCTION_31	FOR_1
0x4002860	          0x8b45fc	                mov eax, dword [rbp - 4]	      1670	ops.c	FUNCTION_31	FOR_1
0x4002863	          0x8d50ff	                      lea edx, [rax - 1]	      1670	ops.c	FUNCTION_31	FOR_1
0x4002866	          0x8b45fc	                mov eax, dword [rbp - 4]	      1670	ops.c	FUNCTION_31	FOR_1
0x4002869	            0x4898	                                    cdqe	      1670	ops.c	FUNCTION_31	FOR_1
0x400286b	        0x48c1e005	                              shl rax, 5	      1670	ops.c	FUNCTION_31	FOR_1
0x400286f	    0x480500000000	                              add rax, 0	      1670	ops.c	FUNCTION_31	FOR_1
0x4002875	          0x4863d2	                         movsxd rdx, edx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002878	        0x48c1e205	                              shl rdx, 5	      1670	ops.c	FUNCTION_31	FOR_1
0x400287c	    0x4881c2000000	                              add rdx, 0	      1670	ops.c	FUNCTION_31	FOR_1
0x4002883	          0x488b0a	                    mov rcx, qword [rdx]	      1670	ops.c	FUNCTION_31	FOR_1
0x4002886	          0x488908	                    mov qword [rax], rcx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002889	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1670	ops.c	FUNCTION_31	FOR_1
0x400288d	        0x48894808	                mov qword [rax + 8], rcx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002891	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1670	ops.c	FUNCTION_31	FOR_1
0x4002895	        0x48894810	             mov qword [rax + 0x10], rcx	      1670	ops.c	FUNCTION_31	FOR_1
0x4002899	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1670	ops.c	FUNCTION_31	FOR_1
0x400289d	        0x48895018	             mov qword [rax + 0x18], rdx	      1670	ops.c	FUNCTION_31	FOR_1
0x40028a1	        0x836dfc01	                  sub dword [rbp - 4], 1	      1669	ops.c	FUNCTION_31	FOR_1
0x40028a5	        0x837dfc01	                  cmp dword [rbp - 4], 1	      1669	ops.c	FUNCTION_31	FOR_1
0x40028a9	            0x7fb5	                            jg 0x4002860	      1669	ops.c	FUNCTION_31	FOR_1
0x40028ab	    0x48c705000000	               mov qword [0x040028b6], 0	      1671	ops.c	FUNCTION_31
0x40028b6	    0x8b0500000000	            mov eax, dword [0x040028bc] 	      1672	ops.c	FUNCTION_31	IF_1
0x40028bc	            0x85c0	                           test eax, eax	      1672	ops.c	FUNCTION_31	IF_1
0x40028be	            0x750e	                           jne 0x40028ce	      1672	ops.c	FUNCTION_31	IF_1
0x40028c0	    0x488b05000000	            mov rax, qword [0x040028c7] 	      1673	ops.c	FUNCTION_31	IF_1
0x40028c7	    0x488905000000	            mov qword [0x040028ce], rax 	      1673	ops.c	FUNCTION_31	IF_1
0x40028ce	    0x48c705000000	               mov qword [0x040028d9], 0	      1674	ops.c	FUNCTION_31
0x40028d9	              0x90	                                     nop	      1675	ops.c	FUNCTION_31
0x40028da	              0xc9	                                   leave	      1675	ops.c	FUNCTION_31
0x40028db	              0xc3	                                     ret	      1675	ops.c	FUNCTION_31
stuffescaped	ELSE,1:DO,0:IF,4:functions,0:WHILE,2:FOR,0:SWITCH,0:CALL,4	75
0x4002318	              0x55	                                push rbp	      1466	ops.c	FUNCTION_27
0x4002319	          0x4889e5	                            mov rbp, rsp	      1466	ops.c	FUNCTION_27
0x400231c	        0x4883ec20	                           sub rsp, 0x20	      1466	ops.c	FUNCTION_27
0x4002320	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1466	ops.c	FUNCTION_27
0x4002324	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1466	ops.c	FUNCTION_27
0x4002327	      0xe9cb000000	                           jmp 0x40023f7	      1470	ops.c	FUNCTION_27	WHILE_1
0x400232c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1475	ops.c	FUNCTION_27	WHILE_1
0x4002330	        0x488945f8	                mov qword [rbp - 8], rax	      1475	ops.c	FUNCTION_27	WHILE_1
0x4002334	            0xeb0c	                           jmp 0x4002342	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002336	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x400233a	        0x4883c001	                              add rax, 1	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x400233e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002342	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002346	           0xfb600	                   movzx eax, byte [rax]	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002349	            0x3c1f	                            cmp al, 0x1f	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x400234b	            0x760b	                           jbe 0x4002358	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x400234d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1478	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002351	           0xfb600	                   movzx eax, byte [rax]	      1478	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002354	            0x3c7e	                            cmp al, 0x7e	      1478	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002356	            0x76de	                           jbe 0x4002336	      1478	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002358	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x400235c	           0xfb600	                   movzx eax, byte [rax]	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x400235f	            0x3c80	                            cmp al, 0x80	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002361	            0x7506	                           jne 0x4002369	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002363	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002367	            0x74cd	                            je 0x4002336	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002369	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1483	ops.c	FUNCTION_27	WHILE_1	IF_1
0x400236d	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1483	ops.c	FUNCTION_27	WHILE_1	IF_1
0x4002371	            0x761d	                           jbe 0x4002390	      1483	ops.c	FUNCTION_27	WHILE_1	IF_1
0x4002373	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4002377	          0x4889c2	                            mov rdx, rax	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x400237a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x400237e	          0x4829c2	                            sub rdx, rax	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4002381	        0x488b45f8	                mov rax, qword [rbp - 8]	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4002385	          0x4889d6	                            mov rsi, rdx	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4002388	          0x4889c7	                            mov rdi, rax	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x400238b	      0xe800000000	                          call 0x4002390	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4002390	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x4002394	           0xfb600	                   movzx eax, byte [rax]	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x4002397	            0x84c0	                             test al, al	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x4002399	            0x745c	                            je 0x40023f7	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x400239b	    0x8b0500000000	            mov eax, dword [0x040023a1] 	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40023a1	            0x85c0	                           test eax, eax	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40023a3	            0x7411	                            je 0x40023b6	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40023a5	        0x488d45e8	                   lea rax, [rbp - 0x18]	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x40023a9	          0x4889c7	                            mov rdi, rax	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x40023ac	      0xe800000000	                          call 0x40023b1	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x40023b1	          0x8945f4	              mov dword [rbp - 0xc], eax	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x40023b4	            0xeb15	                           jmp 0x40023cb	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x40023b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x40023ba	        0x488d5001	                      lea rdx, [rax + 1]	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x40023be	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x40023c2	           0xfb600	                   movzx eax, byte [rax]	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x40023c5	           0xfb6c0	                           movzx eax, al	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x40023c8	          0x8945f4	              mov dword [rbp - 0xc], eax	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x40023cb	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40023cf	            0x741c	                            je 0x40023ed	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40023d1	        0x837df41f	            cmp dword [rbp - 0xc], 0x1f 	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40023d5	            0x7f06	                            jg 0x40023dd	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40023d7	        0x837df409	                cmp dword [rbp - 0xc], 9	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40023db	            0x7506	                           jne 0x40023e3	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40023dd	        0x837df47f	            cmp dword [rbp - 0xc], 0x7f 	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40023e1	            0x750a	                           jne 0x40023ed	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40023e3	      0xbf16000000	                           mov edi, 0x16	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x40023e8	      0xe800000000	                          call 0x40023ed	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x40023ed	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x40023f0	            0x89c7	                            mov edi, eax	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x40023f2	      0xe800000000	                          call 0x40023f7	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x40023f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1470	ops.c	FUNCTION_27	WHILE_1
0x40023fb	           0xfb600	                   movzx eax, byte [rax]	      1470	ops.c	FUNCTION_27	WHILE_1
0x40023fe	            0x84c0	                             test al, al	      1470	ops.c	FUNCTION_27	WHILE_1
0x4002400	     0xf8526ffffff	                           jne 0x400232c	      1470	ops.c	FUNCTION_27	WHILE_1
0x4002406	              0x90	                                     nop	      1500	ops.c	FUNCTION_27
0x4002407	              0xc9	                                   leave	      1500	ops.c	FUNCTION_27
0x4002408	              0xc3	                                     ret	      1500	ops.c	FUNCTION_27
get_yank_register	ELSE,7:DO,0:IF,9:functions,0:WHILE,0:FOR,0:SWITCH,0:CALL,5	79
0x4001503	              0x55	                                push rbp	       908	ops.c	FUNCTION_15
0x4001504	          0x4889e5	                            mov rbp, rsp	       908	ops.c	FUNCTION_15
0x4001507	          0x897dec	             mov dword [rbp - 0x14], edi	       908	ops.c	FUNCTION_15
0x400150a	          0x8975e8	             mov dword [rbp - 0x18], esi	       908	ops.c	FUNCTION_15
0x400150d	    0xc745fc000000	                  mov dword [rbp - 4], 0	       910	ops.c	FUNCTION_15
0x4001514	    0xc70500000000	               mov dword [0x0400151e], 0	       912	ops.c	FUNCTION_15
0x400151e	        0x837dec00	               cmp dword [rbp - 0x14], 0	       913	ops.c	FUNCTION_15	IF_1
0x4001522	            0x7406	                            je 0x400152a	       913	ops.c	FUNCTION_15	IF_1
0x4001524	        0x837dec22	           cmp dword [rbp - 0x14], 0x22 	       913	ops.c	FUNCTION_15	IF_1
0x4001528	            0x7528	                           jne 0x4001552	       913	ops.c	FUNCTION_15	IF_1
0x400152a	        0x837de800	               cmp dword [rbp - 0x18], 0	       913	ops.c	FUNCTION_15	IF_1
0x400152e	            0x7522	                           jne 0x4001552	       913	ops.c	FUNCTION_15	IF_1
0x4001530	    0x488b05000000	            mov rax, qword [0x04001537] 	       913	ops.c	FUNCTION_15	IF_1
0x4001537	          0x4885c0	                           test rax, rax	       913	ops.c	FUNCTION_15	IF_1
0x400153a	            0x7416	                            je 0x4001552	       913	ops.c	FUNCTION_15	IF_1
0x400153c	    0x488b05000000	            mov rax, qword [0x04001543] 	       915	ops.c	FUNCTION_15	IF_1
0x4001543	    0x488905000000	            mov qword [0x0400154a], rax 	       915	ops.c	FUNCTION_15	IF_1
0x400154a	          0x8b45fc	                mov eax, dword [rbp - 4]	       916	ops.c	FUNCTION_15	IF_1
0x400154d	      0xe9e1000000	                           jmp 0x4001633	       916	ops.c	FUNCTION_15	IF_1
0x4001552	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       918	ops.c	FUNCTION_15
0x4001555	          0x8945f8	                mov dword [rbp - 8], eax	       918	ops.c	FUNCTION_15
0x4001558	          0x8b45f8	                mov eax, dword [rbp - 8]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400155b	          0x83e830	                           sub eax, 0x30	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400155e	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4001561	            0x7709	                            ja 0x400156c	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4001563	        0x836df830	               sub dword [rbp - 8], 0x30	       920	ops.c	FUNCTION_15	IF_2
0x4001567	      0xe99a000000	                           jmp 0x4001606	       920	ops.c	FUNCTION_15	IF_2
0x400156c	          0x8b45f8	                mov eax, dword [rbp - 8]	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400156f	          0x83e861	                           sub eax, 0x61	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4001572	          0x83f819	                           cmp eax, 0x19	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4001575	            0x7709	                            ja 0x4001580	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4001577	        0x836df857	               sub dword [rbp - 8], 0x57	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400157b	      0xe986000000	                           jmp 0x4001606	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x4001580	          0x8b45f8	                mov eax, dword [rbp - 8]	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4001583	          0x83e841	                           sub eax, 0x41	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4001586	          0x83f819	                           cmp eax, 0x19	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4001589	            0x7710	                            ja 0x400159b	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400158b	        0x836df837	               sub dword [rbp - 8], 0x37	       925	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x400158f	    0xc70500000000	               mov dword [0x04001599], 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x4001599	            0xeb6b	                           jmp 0x4001606	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400159b	        0x837dec2d	           cmp dword [rbp - 0x14], 0x2d 	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400159f	            0x7509	                           jne 0x40015aa	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x40015a1	    0xc745f8240000	               mov dword [rbp - 8], 0x24	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x40015a8	            0xeb5c	                           jmp 0x4001606	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x40015aa	    0x8b0500000000	            mov eax, dword [0x040015b0] 	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40015b0	            0x85c0	                           test eax, eax	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40015b2	            0x7416	                            je 0x40015ca	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40015b4	        0x837dec2a	           cmp dword [rbp - 0x14], 0x2a 	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40015b8	            0x7510	                           jne 0x40015ca	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40015ba	    0xc745f8250000	               mov dword [rbp - 8], 0x25	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40015c1	    0xc745fc010000	                  mov dword [rbp - 4], 1	       935	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40015c8	            0xeb3c	                           jmp 0x4001606	       935	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40015ca	    0x8b0500000000	            mov eax, dword [0x040015d0] 	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40015d0	            0x85c0	                           test eax, eax	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40015d2	            0x7416	                            je 0x40015ea	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40015d4	        0x837dec2b	           cmp dword [rbp - 0x14], 0x2b 	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40015d8	            0x7510	                           jne 0x40015ea	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40015da	    0xc745f8260000	               mov dword [rbp - 8], 0x26	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40015e1	    0xc745fc010000	                  mov dword [rbp - 4], 1	       941	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40015e8	            0xeb1c	                           jmp 0x4001606	       941	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40015ea	        0x837de800	               cmp dword [rbp - 0x18], 0	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x40015ee	            0x750f	                           jne 0x40015ff	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x40015f0	        0x837dec7e	           cmp dword [rbp - 0x14], 0x7e 	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x40015f4	            0x7509	                           jne 0x40015ff	       945	ops.c	FUNCTION_15	ELSE_6	IF_8
0x40015f6	    0xc745f8270000	               mov dword [rbp - 8], 0x27	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x40015fd	            0xeb07	                           jmp 0x4001606	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x40015ff	    0xc745f8000000	                  mov dword [rbp - 8], 0	       949	ops.c	FUNCTION_15	ELSE_7
0x4001606	          0x8b45f8	                mov eax, dword [rbp - 8]	       950	ops.c	FUNCTION_15
0x4001609	            0x4898	                                    cdqe	       950	ops.c	FUNCTION_15
0x400160b	        0x48c1e005	                              shl rax, 5	       950	ops.c	FUNCTION_15
0x400160f	    0x480500000000	                              add rax, 0	       950	ops.c	FUNCTION_15
0x4001615	    0x488905000000	            mov qword [0x0400161c], rax 	       950	ops.c	FUNCTION_15
0x400161c	        0x837de800	               cmp dword [rbp - 0x18], 0	       951	ops.c	FUNCTION_15	IF_9
0x4001620	            0x740e	                            je 0x4001630	       951	ops.c	FUNCTION_15	IF_9
0x4001622	    0x488b05000000	            mov rax, qword [0x04001629] 	       952	ops.c	FUNCTION_15	IF_9
0x4001629	    0x488905000000	            mov qword [0x04001630], rax 	       952	ops.c	FUNCTION_15	IF_9
0x4001630	          0x8b45fc	                mov eax, dword [rbp - 4]	       953	ops.c	FUNCTION_15
0x4001633	              0x5d	                                 pop rbp	       954	ops.c	FUNCTION_15
0x4001634	              0xc3	                                     ret	       954	ops.c	FUNCTION_15
