crypt_get_key	functions,0:FOR,1:CALL,12:IF,5:DO,0:ELSE,0:WHILE,0:SWITCH,0	87
0x4000a0c	              0x55	                                push rbp	       523	crypt.c	FUNCTION_23
0x4000a0d	          0x4889e5	                            mov rbp, rsp	       523	crypt.c	FUNCTION_23
0x4000a10	        0x4883ec30	                           sub rsp, 0x30	       523	crypt.c	FUNCTION_23
0x4000a14	          0x897ddc	             mov dword [rbp - 0x24], edi	       523	crypt.c	FUNCTION_23
0x4000a17	          0x8975d8	             mov dword [rbp - 0x28], esi	       523	crypt.c	FUNCTION_23
0x4000a1a	    0x48c745f80000	                  mov qword [rbp - 8], 0	       524	crypt.c	FUNCTION_23
0x4000a22	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       527	crypt.c	FUNCTION_23	FOR_1
0x4000a29	    0xc70500000000	               mov dword [0x04000a33], 1	       529	crypt.c	FUNCTION_23	FOR_1
0x4000a33	    0x8b0500000000	            mov eax, dword [0x04000a39] 	       530	crypt.c	FUNCTION_23	FOR_1
0x4000a39	    0x890500000000	            mov dword [0x04000a3f], eax 	       530	crypt.c	FUNCTION_23	FOR_1
0x4000a3f	        0x837dec00	               cmp dword [rbp - 0x14], 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a43	            0x750c	                           jne 0x4000a51	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a45	      0xbf00000000	                              mov edi, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a4a	      0xe800000000	                          call 0x4000a4f	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a4f	            0xeb0a	                           jmp 0x4000a5b	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a51	      0xbf00000000	                              mov edi, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a56	      0xe800000000	                          call 0x4000a5b	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a5b	    0x41b800000000	                              mov r8d, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a61	      0xb900000000	                              mov ecx, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a66	      0xba00000000	                              mov edx, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a6b	          0x4889c6	                            mov rsi, rax	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a6e	      0xbf00000000	                              mov edi, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a73	      0xe800000000	                          call 0x4000a78	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a78	        0x488945f0	             mov qword [rbp - 0x10], rax	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000a7c	    0xc70500000000	               mov dword [0x04000a86], 0	       535	crypt.c	FUNCTION_23	FOR_1
0x4000a86	      0x48837df000	               cmp qword [rbp - 0x10], 0	       537	crypt.c	FUNCTION_23	FOR_1	IF_1
0x4000a8b	     0xf84b7000000	                            je 0x4000b48	       537	crypt.c	FUNCTION_23	FOR_1	IF_1
0x4000a91	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       540	crypt.c	FUNCTION_23	FOR_1	IF_2
0x4000a94	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	       540	crypt.c	FUNCTION_23	FOR_1	IF_2
0x4000a97	     0xf859a000000	                           jne 0x4000b37	       540	crypt.c	FUNCTION_23	FOR_1	IF_2
0x4000a9d	      0x48837df800	                  cmp qword [rbp - 8], 0	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000aa2	            0x7452	                            je 0x4000af6	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000aa4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000aa8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000aac	          0x4889d6	                            mov rsi, rdx	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000aaf	          0x4889c7	                            mov rdi, rax	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000ab2	      0xe800000000	                          call 0x4000ab7	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000ab7	            0x85c0	                           test eax, eax	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000ab9	            0x743b	                            je 0x4000af6	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000abb	      0xbf00000000	                              mov edi, 0	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0x4000ac0	      0xe800000000	                          call 0x4000ac5	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0x4000ac5	          0x4889c7	                            mov rdi, rax	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0x4000ac8	      0xe800000000	                          call 0x4000acd	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0x4000acd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       545	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_7
0x4000ad1	          0x4889c7	                            mov rdi, rax	       545	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_7
0x4000ad4	      0xe800000000	                          call 0x4000ad9	       545	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_7
0x4000ad9	        0x488b45f8	                mov rax, qword [rbp - 8]	       546	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_8
0x4000add	          0x4889c7	                            mov rdi, rax	       546	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_8
0x4000ae0	      0xe800000000	                          call 0x4000ae5	       546	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_8
0x4000ae5	    0x48c745f80000	                  mov qword [rbp - 8], 0	       547	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3
0x4000aed	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	       548	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3
0x4000af4	            0xeb49	                           jmp 0x4000b3f	       549	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3
0x4000af6	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       552	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0x4000afa	            0x744f	                            je 0x4000b4b	       552	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0x4000afc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0x4000b00	      0xb904000000	                              mov ecx, 4	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0x4000b05	          0x4889c2	                            mov rdx, rax	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0x4000b08	      0xbe00000000	                              mov esi, 0	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0x4000b0d	      0xbf00000000	                              mov edi, 0	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0x4000b12	      0xe800000000	                          call 0x4000b17	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0x4000b17	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       555	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_10
0x4000b1b	          0x4889c7	                            mov rdi, rax	       555	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_10
0x4000b1e	      0xe800000000	                          call 0x4000b23	       555	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_10
0x4000b23	    0x488b05000000	            mov rax, qword [0x04000b2a] 	       556	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0x4000b2a	    0x488b80101500	          mov rax, qword [rax + 0x1510] 	       556	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0x4000b31	        0x488945f0	             mov qword [rbp - 0x10], rax	       556	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0x4000b35	            0xeb14	                           jmp 0x4000b4b	       558	crypt.c	FUNCTION_23	FOR_1	IF_2
0x4000b37	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       560	crypt.c	FUNCTION_23	FOR_1
0x4000b3b	        0x488945f8	                mov qword [rbp - 8], rax	       560	crypt.c	FUNCTION_23	FOR_1
0x4000b3f	        0x8345ec01	               add dword [rbp - 0x14], 1	       527	crypt.c	FUNCTION_23	FOR_1
0x4000b43	      0xe9e1feffff	                           jmp 0x4000a29	       561	crypt.c	FUNCTION_23	FOR_1
0x4000b48	              0x90	                                     nop	       538	crypt.c	FUNCTION_23	FOR_1	IF_1
0x4000b49	            0xeb01	                           jmp 0x4000b4c	       538	crypt.c	FUNCTION_23	FOR_1	IF_1
0x4000b4b	              0x90	                                     nop	       558	crypt.c	FUNCTION_23	FOR_1	IF_2
0x4000b4c	    0x8b0500000000	            mov eax, dword [0x04000b52] 	       564	crypt.c	FUNCTION_23	IF_5
0x4000b52	            0x85c0	                           test eax, eax	       564	crypt.c	FUNCTION_23	IF_5
0x4000b54	            0x740a	                            je 0x4000b60	       564	crypt.c	FUNCTION_23	IF_5
0x4000b56	      0xbf0a000000	                            mov edi, 0xa	       565	crypt.c	FUNCTION_23	CALL_11
0x4000b5b	      0xe800000000	                          call 0x4000b60	       565	crypt.c	FUNCTION_23	CALL_11
0x4000b60	    0xc70500000000	               mov dword [0x04000b6a], 0	       566	crypt.c	FUNCTION_23
0x4000b6a	    0xc70500000000	               mov dword [0x04000b74], 0	       567	crypt.c	FUNCTION_23
0x4000b74	        0x488b45f8	                mov rax, qword [rbp - 8]	       569	crypt.c	FUNCTION_23	CALL_12
0x4000b78	          0x4889c7	                            mov rdi, rax	       569	crypt.c	FUNCTION_23	CALL_12
0x4000b7b	      0xe800000000	                          call 0x4000b80	       569	crypt.c	FUNCTION_23	CALL_12
0x4000b80	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       570	crypt.c	FUNCTION_23
0x4000b84	              0xc9	                                   leave	       571	crypt.c	FUNCTION_23
0x4000b85	              0xc3	                                     ret	       571	crypt.c	FUNCTION_23
crypt_self_test	functions,0:FOR,0:CALL,2:IF,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	31
0x4000271	              0x55	                                push rbp	       226	crypt.c	FUNCTION_8
0x4000272	          0x4889e5	                            mov rbp, rsp	       226	crypt.c	FUNCTION_8
0x4000275	        0x4883ec10	                           sub rsp, 0x10	       226	crypt.c	FUNCTION_8
0x4000279	    0x488b05000000	            mov rax, qword [0x04000280] 	       227	crypt.c	FUNCTION_8	CALL_1
0x4000280	          0x4889c7	                            mov rdi, rax	       227	crypt.c	FUNCTION_8	CALL_1
0x4000283	      0xe800000000	                          call 0x4000288	       227	crypt.c	FUNCTION_8	CALL_1
0x4000288	          0x8945fc	                mov dword [rbp - 4], eax	       227	crypt.c	FUNCTION_8	CALL_1
0x400028b	          0x8b45fc	                mov eax, dword [rbp - 4]	       229	crypt.c	FUNCTION_8	IF_1
0x400028e	          0x4863d0	                         movsxd rdx, eax	       229	crypt.c	FUNCTION_8	IF_1
0x4000291	          0x4889d0	                            mov rax, rdx	       229	crypt.c	FUNCTION_8	IF_1
0x4000294	          0x4801c0	                            add rax, rax	       229	crypt.c	FUNCTION_8	IF_1
0x4000297	          0x4801d0	                            add rax, rdx	       229	crypt.c	FUNCTION_8	IF_1
0x400029a	        0x48c1e005	                              shl rax, 5	       229	crypt.c	FUNCTION_8	IF_1
0x400029e	    0x480500000000	                              add rax, 0	       229	crypt.c	FUNCTION_8	IF_1
0x40002a4	          0x488b00	                    mov rax, qword [rax]	       229	crypt.c	FUNCTION_8	IF_1
0x40002a7	          0x4885c0	                           test rax, rax	       229	crypt.c	FUNCTION_8	IF_1
0x40002aa	            0x7507	                           jne 0x40002b3	       229	crypt.c	FUNCTION_8	IF_1
0x40002ac	      0xb801000000	                              mov eax, 1	       230	crypt.c	FUNCTION_8	IF_1
0x40002b1	            0xeb23	                           jmp 0x40002d6	       230	crypt.c	FUNCTION_8	IF_1
0x40002b3	          0x8b45fc	                mov eax, dword [rbp - 4]	       231	crypt.c	FUNCTION_8	CALL_2
0x40002b6	          0x4863d0	                         movsxd rdx, eax	       231	crypt.c	FUNCTION_8	CALL_2
0x40002b9	          0x4889d0	                            mov rax, rdx	       231	crypt.c	FUNCTION_8	CALL_2
0x40002bc	          0x4801c0	                            add rax, rax	       231	crypt.c	FUNCTION_8	CALL_2
0x40002bf	          0x4801d0	                            add rax, rdx	       231	crypt.c	FUNCTION_8	CALL_2
0x40002c2	        0x48c1e005	                              shl rax, 5	       231	crypt.c	FUNCTION_8	CALL_2
0x40002c6	    0x480500000000	                              add rax, 0	       231	crypt.c	FUNCTION_8	CALL_2
0x40002cc	          0x488b10	                    mov rdx, qword [rax]	       231	crypt.c	FUNCTION_8	CALL_2
0x40002cf	      0xb800000000	                              mov eax, 0	       231	crypt.c	FUNCTION_8	CALL_2
0x40002d4	            0xffd2	                                call rdx	       231	crypt.c	FUNCTION_8	CALL_2
0x40002d6	              0xc9	                                   leave	       232	crypt.c	FUNCTION_8
0x40002d7	              0xc3	                                     ret	       232	crypt.c	FUNCTION_8
crypt_create	functions,0:FOR,0:CALL,2:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	33
0x40002d8	              0x55	                                push rbp	       245	crypt.c	FUNCTION_9
0x40002d9	          0x4889e5	                            mov rbp, rsp	       245	crypt.c	FUNCTION_9
0x40002dc	        0x4883ec40	                           sub rsp, 0x40	       245	crypt.c	FUNCTION_9
0x40002e0	          0x897dec	             mov dword [rbp - 0x14], edi	       245	crypt.c	FUNCTION_9
0x40002e3	        0x488975e0	             mov qword [rbp - 0x20], rsi	       245	crypt.c	FUNCTION_9
0x40002e7	        0x488955d8	             mov qword [rbp - 0x28], rdx	       245	crypt.c	FUNCTION_9
0x40002eb	          0x894de8	             mov dword [rbp - 0x18], ecx	       245	crypt.c	FUNCTION_9
0x40002ee	        0x4c8945d0	              mov qword [rbp - 0x30], r8	       245	crypt.c	FUNCTION_9
0x40002f2	        0x44894dcc	             mov dword [rbp - 0x34], r9d	       245	crypt.c	FUNCTION_9
0x40002f6	      0xbf10000000	                           mov edi, 0x10	       246	crypt.c	FUNCTION_9	CALL_1
0x40002fb	      0xe800000000	                          call 0x4000300	       246	crypt.c	FUNCTION_9	CALL_1
0x4000300	        0x488945f8	                mov qword [rbp - 8], rax	       246	crypt.c	FUNCTION_9	CALL_1
0x4000304	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	crypt.c	FUNCTION_9
0x4000308	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       248	crypt.c	FUNCTION_9
0x400030b	            0x8910	                    mov dword [rax], edx	       248	crypt.c	FUNCTION_9
0x400030d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       249	crypt.c	FUNCTION_9	CALL_2
0x4000310	          0x4863d0	                         movsxd rdx, eax	       249	crypt.c	FUNCTION_9	CALL_2
0x4000313	          0x4889d0	                            mov rax, rdx	       249	crypt.c	FUNCTION_9	CALL_2
0x4000316	          0x4801c0	                            add rax, rax	       249	crypt.c	FUNCTION_9	CALL_2
0x4000319	          0x4801d0	                            add rax, rdx	       249	crypt.c	FUNCTION_9	CALL_2
0x400031c	        0x48c1e005	                              shl rax, 5	       249	crypt.c	FUNCTION_9	CALL_2
0x4000320	    0x480500000000	                              add rax, 0	       249	crypt.c	FUNCTION_9	CALL_2
0x4000326	          0x488b00	                    mov rax, qword [rax]	       249	crypt.c	FUNCTION_9	CALL_2
0x4000329	        0x448b4dcc	             mov r9d, dword [rbp - 0x34]	       249	crypt.c	FUNCTION_9	CALL_2
0x400032d	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	       249	crypt.c	FUNCTION_9	CALL_2
0x4000331	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       249	crypt.c	FUNCTION_9	CALL_2
0x4000334	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       249	crypt.c	FUNCTION_9	CALL_2
0x4000338	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       249	crypt.c	FUNCTION_9	CALL_2
0x400033c	        0x488b7df8	                mov rdi, qword [rbp - 8]	       249	crypt.c	FUNCTION_9	CALL_2
0x4000340	            0xffd0	                                call rax	       249	crypt.c	FUNCTION_9	CALL_2
0x4000342	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	crypt.c	FUNCTION_9
0x4000346	              0xc9	                                   leave	       251	crypt.c	FUNCTION_9
0x4000347	              0xc3	                                     ret	       251	crypt.c	FUNCTION_9
crypt_method_nr_from_magic	functions,0:FOR,1:CALL,5:IF,3:DO,0:ELSE,0:WHILE,0:SWITCH,0	52
0x400009a	              0x55	                                push rbp	       153	crypt.c	FUNCTION_2
0x400009b	          0x4889e5	                            mov rbp, rsp	       153	crypt.c	FUNCTION_2
0x400009e	        0x4883ec20	                           sub rsp, 0x20	       153	crypt.c	FUNCTION_2
0x40000a2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       153	crypt.c	FUNCTION_2
0x40000a6	          0x8975e4	             mov dword [rbp - 0x1c], esi	       153	crypt.c	FUNCTION_2
0x40000a9	        0x837de40b	            cmp dword [rbp - 0x1c], 0xb 	       156	crypt.c	FUNCTION_2	IF_1
0x40000ad	            0x7f0a	                            jg 0x40000b9	       156	crypt.c	FUNCTION_2	IF_1
0x40000af	      0xb8ffffffff	                     mov eax, 0xffffffff	       157	crypt.c	FUNCTION_2	IF_1
0x40000b4	      0xe993000000	                           jmp 0x400014c	       157	crypt.c	FUNCTION_2	IF_1
0x40000b9	    0xc745fc000000	                  mov dword [rbp - 4], 0	       159	crypt.c	FUNCTION_2	FOR_1
0x40000c0	            0xeb3d	                           jmp 0x40000ff	       159	crypt.c	FUNCTION_2	FOR_1
0x40000c2	          0x8b45fc	                mov eax, dword [rbp - 4]	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000c5	          0x4863d0	                         movsxd rdx, eax	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000c8	          0x4889d0	                            mov rax, rdx	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000cb	          0x4801c0	                            add rax, rax	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000ce	          0x4801d0	                            add rax, rdx	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000d1	        0x48c1e005	                              shl rax, 5	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000d5	    0x480500000000	                              add rax, 0	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000db	          0x488b08	                    mov rcx, qword [rax]	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000e2	      0xba0c000000	                            mov edx, 0xc	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000e7	          0x4889ce	                            mov rsi, rcx	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000ea	          0x4889c7	                            mov rdi, rax	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000ed	      0xe800000000	                          call 0x40000f2	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000f2	            0x85c0	                           test eax, eax	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000f4	            0x7505	                           jne 0x40000fb	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40000f6	          0x8b45fc	                mov eax, dword [rbp - 4]	       161	crypt.c	FUNCTION_2	FOR_1	IF_2
0x40000f9	            0xeb51	                           jmp 0x400014c	       161	crypt.c	FUNCTION_2	FOR_1	IF_2
0x40000fb	        0x8345fc01	                  add dword [rbp - 4], 1	       159	crypt.c	FUNCTION_2	FOR_1
0x40000ff	        0x837dfc02	                  cmp dword [rbp - 4], 2	       159	crypt.c	FUNCTION_2	FOR_1
0x4000103	            0x7ebd	                           jle 0x40000c2	       159	crypt.c	FUNCTION_2	FOR_1
0x4000105	      0xbf00000000	                              mov edi, 0	       163	crypt.c	FUNCTION_2	CALL_2
0x400010a	      0xe800000000	                          call 0x400010f	       163	crypt.c	FUNCTION_2	CALL_2
0x400010f	          0x8945fc	                mov dword [rbp - 4], eax	       163	crypt.c	FUNCTION_2	CALL_2
0x4000112	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000115	          0x3b45fc	                cmp eax, dword [rbp - 4]	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000118	            0x7c2d	                            jl 0x4000147	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x400011a	          0x8b45fc	                mov eax, dword [rbp - 4]	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x400011d	          0x4863d0	                         movsxd rdx, eax	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000120	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000124	      0xbe00000000	                              mov esi, 0	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000129	          0x4889c7	                            mov rdi, rax	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x400012c	      0xe800000000	                          call 0x4000131	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000131	            0x85c0	                           test eax, eax	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000133	            0x7512	                           jne 0x4000147	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000135	      0xbf00000000	                              mov edi, 0	       165	crypt.c	FUNCTION_2	CALL_5
0x400013a	      0xe800000000	                          call 0x400013f	       165	crypt.c	FUNCTION_2	CALL_5
0x400013f	          0x4889c7	                            mov rdi, rax	       165	crypt.c	FUNCTION_2	CALL_5
0x4000142	      0xe800000000	                          call 0x4000147	       165	crypt.c	FUNCTION_2	CALL_5
0x4000147	      0xb8ffffffff	                     mov eax, 0xffffffff	       167	crypt.c	FUNCTION_2
0x400014c	              0xc9	                                   leave	       168	crypt.c	FUNCTION_2
0x400014d	              0xc3	                                     ret	       168	crypt.c	FUNCTION_2
crypt_whole_undofile	functions,0:FOR,0:CALL,0:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	13
0x40001b2	              0x55	                                push rbp	       194	crypt.c	FUNCTION_5
0x40001b3	          0x4889e5	                            mov rbp, rsp	       194	crypt.c	FUNCTION_5
0x40001b6	          0x897dfc	                mov dword [rbp - 4], edi	       194	crypt.c	FUNCTION_5
0x40001b9	          0x8b45fc	                mov eax, dword [rbp - 4]	       195	crypt.c	FUNCTION_5
0x40001bc	          0x4863d0	                         movsxd rdx, eax	       195	crypt.c	FUNCTION_5
0x40001bf	          0x4889d0	                            mov rax, rdx	       195	crypt.c	FUNCTION_5
0x40001c2	          0x4801c0	                            add rax, rax	       195	crypt.c	FUNCTION_5
0x40001c5	          0x4801d0	                            add rax, rdx	       195	crypt.c	FUNCTION_5
0x40001c8	        0x48c1e005	                              shl rax, 5	       195	crypt.c	FUNCTION_5
0x40001cc	    0x480500000000	                              add rax, 0	       195	crypt.c	FUNCTION_5
0x40001d2	            0x8b00	                    mov eax, dword [rax]	       195	crypt.c	FUNCTION_5
0x40001d4	              0x5d	                                 pop rbp	       196	crypt.c	FUNCTION_5
0x40001d5	              0xc3	                                     ret	       196	crypt.c	FUNCTION_5
crypt_create_from_header	functions,0:FOR,0:CALL,1:IF,2:DO,0:ELSE,0:WHILE,0:SWITCH,0	51
0x4000348	              0x55	                                push rbp	       263	crypt.c	FUNCTION_10
0x4000349	          0x4889e5	                            mov rbp, rsp	       263	crypt.c	FUNCTION_10
0x400034c	        0x4883ec40	                           sub rsp, 0x40	       263	crypt.c	FUNCTION_10
0x4000350	          0x897ddc	             mov dword [rbp - 0x24], edi	       263	crypt.c	FUNCTION_10
0x4000353	        0x488975d0	             mov qword [rbp - 0x30], rsi	       263	crypt.c	FUNCTION_10
0x4000357	        0x488955c8	             mov qword [rbp - 0x38], rdx	       263	crypt.c	FUNCTION_10
0x400035b	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       264	crypt.c	FUNCTION_10
0x4000363	    0x48c745f80000	                  mov qword [rbp - 8], 0	       265	crypt.c	FUNCTION_10
0x400036b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       266	crypt.c	FUNCTION_10
0x400036e	          0x4863d0	                         movsxd rdx, eax	       266	crypt.c	FUNCTION_10
0x4000371	          0x4889d0	                            mov rax, rdx	       266	crypt.c	FUNCTION_10
0x4000374	          0x4801c0	                            add rax, rax	       266	crypt.c	FUNCTION_10
0x4000377	          0x4801d0	                            add rax, rdx	       266	crypt.c	FUNCTION_10
0x400037a	        0x48c1e005	                              shl rax, 5	       266	crypt.c	FUNCTION_10
0x400037e	    0x480500000000	                              add rax, 0	       266	crypt.c	FUNCTION_10
0x4000384	            0x8b00	                    mov eax, dword [rax]	       266	crypt.c	FUNCTION_10
0x4000386	          0x8945e8	             mov dword [rbp - 0x18], eax	       266	crypt.c	FUNCTION_10
0x4000389	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       267	crypt.c	FUNCTION_10
0x400038c	          0x4863d0	                         movsxd rdx, eax	       267	crypt.c	FUNCTION_10
0x400038f	          0x4889d0	                            mov rax, rdx	       267	crypt.c	FUNCTION_10
0x4000392	          0x4801c0	                            add rax, rax	       267	crypt.c	FUNCTION_10
0x4000395	          0x4801d0	                            add rax, rdx	       267	crypt.c	FUNCTION_10
0x4000398	        0x48c1e005	                              shl rax, 5	       267	crypt.c	FUNCTION_10
0x400039c	    0x480500000000	                              add rax, 0	       267	crypt.c	FUNCTION_10
0x40003a2	            0x8b00	                    mov eax, dword [rax]	       267	crypt.c	FUNCTION_10
0x40003a4	          0x8945ec	             mov dword [rbp - 0x14], eax	       267	crypt.c	FUNCTION_10
0x40003a7	        0x837de800	               cmp dword [rbp - 0x18], 0	       269	crypt.c	FUNCTION_10	IF_1
0x40003ab	            0x7e0c	                           jle 0x40003b9	       269	crypt.c	FUNCTION_10	IF_1
0x40003ad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       270	crypt.c	FUNCTION_10	IF_1
0x40003b1	        0x4883c00c	                            add rax, 0xc	       270	crypt.c	FUNCTION_10	IF_1
0x40003b5	        0x488945f0	             mov qword [rbp - 0x10], rax	       270	crypt.c	FUNCTION_10	IF_1
0x40003b9	        0x837dec00	               cmp dword [rbp - 0x14], 0	       271	crypt.c	FUNCTION_10	IF_2
0x40003bd	            0x7e14	                           jle 0x40003d3	       271	crypt.c	FUNCTION_10	IF_2
0x40003bf	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       272	crypt.c	FUNCTION_10	IF_2
0x40003c2	            0x4898	                                    cdqe	       272	crypt.c	FUNCTION_10	IF_2
0x40003c4	        0x488d500c	                    lea rdx, [rax + 0xc]	       272	crypt.c	FUNCTION_10	IF_2
0x40003c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       272	crypt.c	FUNCTION_10	IF_2
0x40003cc	          0x4801d0	                            add rax, rdx	       272	crypt.c	FUNCTION_10	IF_2
0x40003cf	        0x488945f8	                mov qword [rbp - 8], rax	       272	crypt.c	FUNCTION_10	IF_2
0x40003d3	        0x448b45ec	             mov r8d, dword [rbp - 0x14]	       274	crypt.c	FUNCTION_10	CALL_1
0x40003d7	        0x488b7df8	                mov rdi, qword [rbp - 8]	       274	crypt.c	FUNCTION_10	CALL_1
0x40003db	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       274	crypt.c	FUNCTION_10	CALL_1
0x40003de	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       274	crypt.c	FUNCTION_10	CALL_1
0x40003e2	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       274	crypt.c	FUNCTION_10	CALL_1
0x40003e6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       274	crypt.c	FUNCTION_10	CALL_1
0x40003e9	          0x4589c1	                            mov r9d, r8d	       274	crypt.c	FUNCTION_10	CALL_1
0x40003ec	          0x4989f8	                             mov r8, rdi	       274	crypt.c	FUNCTION_10	CALL_1
0x40003ef	            0x89c7	                            mov edi, eax	       274	crypt.c	FUNCTION_10	CALL_1
0x40003f1	      0xe800000000	                          call 0x40003f6	       274	crypt.c	FUNCTION_10	CALL_1
0x40003f6	              0xc9	                                   leave	       275	crypt.c	FUNCTION_10
0x40003f7	              0xc3	                                     ret	       275	crypt.c	FUNCTION_10
crypt_set_cm_option	functions,0:FOR,0:CALL,2:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	25
0x400021a	              0x55	                                push rbp	       215	crypt.c	FUNCTION_7
0x400021b	          0x4889e5	                            mov rbp, rsp	       215	crypt.c	FUNCTION_7
0x400021e	        0x4883ec10	                           sub rsp, 0x10	       215	crypt.c	FUNCTION_7
0x4000222	        0x48897df8	                mov qword [rbp - 8], rdi	       215	crypt.c	FUNCTION_7
0x4000226	          0x8975f4	              mov dword [rbp - 0xc], esi	       215	crypt.c	FUNCTION_7
0x4000229	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	crypt.c	FUNCTION_7	CALL_1
0x400022d	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       216	crypt.c	FUNCTION_7	CALL_1
0x4000234	          0x4889c7	                            mov rdi, rax	       216	crypt.c	FUNCTION_7	CALL_1
0x4000237	      0xe800000000	                          call 0x400023c	       216	crypt.c	FUNCTION_7	CALL_1
0x400023c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       217	crypt.c	FUNCTION_7	CALL_2
0x400023f	          0x4863d0	                         movsxd rdx, eax	       217	crypt.c	FUNCTION_7	CALL_2
0x4000242	          0x4889d0	                            mov rax, rdx	       217	crypt.c	FUNCTION_7	CALL_2
0x4000245	          0x4801c0	                            add rax, rax	       217	crypt.c	FUNCTION_7	CALL_2
0x4000248	          0x4801d0	                            add rax, rdx	       217	crypt.c	FUNCTION_7	CALL_2
0x400024b	        0x48c1e005	                              shl rax, 5	       217	crypt.c	FUNCTION_7	CALL_2
0x400024f	    0x480500000000	                              add rax, 0	       217	crypt.c	FUNCTION_7	CALL_2
0x4000255	          0x488b00	                    mov rax, qword [rax]	       217	crypt.c	FUNCTION_7	CALL_2
0x4000258	          0x4889c7	                            mov rdi, rax	       217	crypt.c	FUNCTION_7	CALL_2
0x400025b	      0xe800000000	                          call 0x4000260	       217	crypt.c	FUNCTION_7	CALL_2
0x4000260	          0x4889c2	                            mov rdx, rax	       217	crypt.c	FUNCTION_7	CALL_2
0x4000263	        0x488b45f8	                mov rax, qword [rbp - 8]	       217	crypt.c	FUNCTION_7	CALL_2
0x4000267	    0x488990481700	          mov qword [rax + 0x1748], rdx 	       217	crypt.c	FUNCTION_7	CALL_2
0x400026e	              0x90	                                     nop	       218	crypt.c	FUNCTION_7
0x400026f	              0xc9	                                   leave	       218	crypt.c	FUNCTION_7
0x4000270	              0xc3	                                     ret	       218	crypt.c	FUNCTION_7
crypt_create_from_file	functions,0:FOR,0:CALL,9:IF,4:DO,0:ELSE,0:WHILE,0:SWITCH,0	82
0x40003f8	              0x55	                                push rbp	       283	crypt.c	FUNCTION_11
0x40003f9	          0x4889e5	                            mov rbp, rsp	       283	crypt.c	FUNCTION_11
0x40003fc	        0x4883ec50	                           sub rsp, 0x50	       283	crypt.c	FUNCTION_11
0x4000400	        0x48897db8	             mov qword [rbp - 0x48], rdi	       283	crypt.c	FUNCTION_11
0x4000404	        0x488975b0	             mov qword [rbp - 0x50], rsi	       283	crypt.c	FUNCTION_11
0x4000408	    0x64488b042528	                mov rax, qword fs:[0x28]	       283	crypt.c	FUNCTION_11
0x4000411	        0x488945f8	                mov qword [rbp - 8], rax	       283	crypt.c	FUNCTION_11
0x4000415	            0x31c0	                            xor eax, eax	       283	crypt.c	FUNCTION_11
0x4000417	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x400041b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x400041f	          0x4889d1	                            mov rcx, rdx	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x4000422	      0xba01000000	                              mov edx, 1	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x4000427	      0xbe0c000000	                            mov esi, 0xc	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x400042c	          0x4889c7	                            mov rdi, rax	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x400042f	      0xe800000000	                          call 0x4000434	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x4000434	        0x4883f801	                              cmp rax, 1	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x4000438	            0x740a	                            je 0x4000444	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x400043a	      0xb800000000	                              mov eax, 0	       291	crypt.c	FUNCTION_11	IF_1
0x400043f	      0xe9d4000000	                           jmp 0x4000518	       291	crypt.c	FUNCTION_11	IF_1
0x4000444	        0x488d45e0	                   lea rax, [rbp - 0x20]	       292	crypt.c	FUNCTION_11	CALL_2
0x4000448	      0xbe0c000000	                            mov esi, 0xc	       292	crypt.c	FUNCTION_11	CALL_2
0x400044d	          0x4889c7	                            mov rdi, rax	       292	crypt.c	FUNCTION_11	CALL_2
0x4000450	      0xe800000000	                          call 0x4000455	       292	crypt.c	FUNCTION_11	CALL_2
0x4000455	          0x8945c8	             mov dword [rbp - 0x38], eax	       292	crypt.c	FUNCTION_11	CALL_2
0x4000458	        0x837dc800	               cmp dword [rbp - 0x38], 0	       293	crypt.c	FUNCTION_11	IF_2
0x400045c	            0x790a	                           jns 0x4000468	       293	crypt.c	FUNCTION_11	IF_2
0x400045e	      0xb800000000	                              mov eax, 0	       294	crypt.c	FUNCTION_11	IF_2
0x4000463	      0xe9b0000000	                           jmp 0x4000518	       294	crypt.c	FUNCTION_11	IF_2
0x4000468	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       296	crypt.c	FUNCTION_11	CALL_3
0x400046b	            0x89c7	                            mov edi, eax	       296	crypt.c	FUNCTION_11	CALL_3
0x400046d	      0xe800000000	                          call 0x4000472	       296	crypt.c	FUNCTION_11	CALL_3
0x4000472	          0x8945cc	             mov dword [rbp - 0x34], eax	       296	crypt.c	FUNCTION_11	CALL_3
0x4000475	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x4000478	            0x89c7	                            mov edi, eax	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x400047a	      0xe800000000	                          call 0x400047f	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x400047f	        0x488945d0	             mov qword [rbp - 0x30], rax	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x4000483	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x4000488	            0x750a	                           jne 0x4000494	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x400048a	      0xb800000000	                              mov eax, 0	       298	crypt.c	FUNCTION_11	IF_3
0x400048f	      0xe984000000	                           jmp 0x4000518	       298	crypt.c	FUNCTION_11	IF_3
0x4000494	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       299	crypt.c	FUNCTION_11	CALL_5
0x4000498	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       299	crypt.c	FUNCTION_11	CALL_5
0x400049c	      0xba0c000000	                            mov edx, 0xc	       299	crypt.c	FUNCTION_11	CALL_5
0x40004a1	          0x4889ce	                            mov rsi, rcx	       299	crypt.c	FUNCTION_11	CALL_5
0x40004a4	          0x4889c7	                            mov rdi, rax	       299	crypt.c	FUNCTION_11	CALL_5
0x40004a7	      0xe800000000	                          call 0x40004ac	       299	crypt.c	FUNCTION_11	CALL_5
0x40004ac	        0x837dcc0c	            cmp dword [rbp - 0x34], 0xc 	       300	crypt.c	FUNCTION_11	IF_4
0x40004b0	            0x7e3d	                           jle 0x40004ef	       300	crypt.c	FUNCTION_11	IF_4
0x40004b2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       302	crypt.c	FUNCTION_11	IF_4
0x40004b5	          0x83e80c	                            sub eax, 0xc	       302	crypt.c	FUNCTION_11	IF_4
0x40004b8	            0x4898	                                    cdqe	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x40004ba	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x40004be	        0x488d7a0c	                    lea rdi, [rdx + 0xc]	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x40004c2	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x40004c6	          0x4889d1	                            mov rcx, rdx	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x40004c9	      0xba01000000	                              mov edx, 1	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x40004ce	          0x4889c6	                            mov rsi, rax	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x40004d1	      0xe800000000	                          call 0x40004d6	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x40004d6	        0x4883f801	                              cmp rax, 1	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x40004da	            0x7413	                            je 0x40004ef	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x40004dc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       304	crypt.c	FUNCTION_11	IF_4	CALL_7
0x40004e0	          0x4889c7	                            mov rdi, rax	       304	crypt.c	FUNCTION_11	IF_4	CALL_7
0x40004e3	      0xe800000000	                          call 0x40004e8	       304	crypt.c	FUNCTION_11	IF_4	CALL_7
0x40004e8	      0xb800000000	                              mov eax, 0	       305	crypt.c	FUNCTION_11	IF_4
0x40004ed	            0xeb29	                           jmp 0x4000518	       305	crypt.c	FUNCTION_11	IF_4
0x40004ef	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       308	crypt.c	FUNCTION_11	CALL_8
0x40004f3	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       308	crypt.c	FUNCTION_11	CALL_8
0x40004f7	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       308	crypt.c	FUNCTION_11	CALL_8
0x40004fa	          0x4889ce	                            mov rsi, rcx	       308	crypt.c	FUNCTION_11	CALL_8
0x40004fd	            0x89c7	                            mov edi, eax	       308	crypt.c	FUNCTION_11	CALL_8
0x40004ff	      0xe800000000	                          call 0x4000504	       308	crypt.c	FUNCTION_11	CALL_8
0x4000504	        0x488945d8	             mov qword [rbp - 0x28], rax	       308	crypt.c	FUNCTION_11	CALL_8
0x4000508	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       309	crypt.c	FUNCTION_11	CALL_9
0x400050c	          0x4889c7	                            mov rdi, rax	       309	crypt.c	FUNCTION_11	CALL_9
0x400050f	      0xe800000000	                          call 0x4000514	       309	crypt.c	FUNCTION_11	CALL_9
0x4000514	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       310	crypt.c	FUNCTION_11
0x4000518	        0x488b4df8	                mov rcx, qword [rbp - 8]	       311	crypt.c	FUNCTION_11
0x400051c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       311	crypt.c	FUNCTION_11
0x4000525	            0x7405	                            je 0x400052c	       311	crypt.c	FUNCTION_11
0x4000527	      0xe800000000	                          call 0x400052c	       311	crypt.c	FUNCTION_11
0x400052c	              0xc9	                                   leave	       311	crypt.c	FUNCTION_11
0x400052d	              0xc3	                                     ret	       311	crypt.c	FUNCTION_11
crypt_encode	functions,0:FOR,0:CALL,1:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	24
0x4000854	              0x55	                                push rbp	       435	crypt.c	FUNCTION_16
0x4000855	          0x4889e5	                            mov rbp, rsp	       435	crypt.c	FUNCTION_16
0x4000858	        0x4883ec20	                           sub rsp, 0x20	       435	crypt.c	FUNCTION_16
0x400085c	        0x48897df8	                mov qword [rbp - 8], rdi	       435	crypt.c	FUNCTION_16
0x4000860	        0x488975f0	             mov qword [rbp - 0x10], rsi	       435	crypt.c	FUNCTION_16
0x4000864	        0x488955e8	             mov qword [rbp - 0x18], rdx	       435	crypt.c	FUNCTION_16
0x4000868	        0x48894de0	             mov qword [rbp - 0x20], rcx	       435	crypt.c	FUNCTION_16
0x400086c	        0x488b45f8	                mov rax, qword [rbp - 8]	       436	crypt.c	FUNCTION_16	CALL_1
0x4000870	            0x8b00	                    mov eax, dword [rax]	       436	crypt.c	FUNCTION_16	CALL_1
0x4000872	          0x4863d0	                         movsxd rdx, eax	       436	crypt.c	FUNCTION_16	CALL_1
0x4000875	          0x4889d0	                            mov rax, rdx	       436	crypt.c	FUNCTION_16	CALL_1
0x4000878	          0x4801c0	                            add rax, rax	       436	crypt.c	FUNCTION_16	CALL_1
0x400087b	          0x4801d0	                            add rax, rdx	       436	crypt.c	FUNCTION_16	CALL_1
0x400087e	        0x48c1e005	                              shl rax, 5	       436	crypt.c	FUNCTION_16	CALL_1
0x4000882	    0x480500000000	                              add rax, 0	       436	crypt.c	FUNCTION_16	CALL_1
0x4000888	          0x488b00	                    mov rax, qword [rax]	       436	crypt.c	FUNCTION_16	CALL_1
0x400088b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       436	crypt.c	FUNCTION_16	CALL_1
0x400088f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       436	crypt.c	FUNCTION_16	CALL_1
0x4000893	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       436	crypt.c	FUNCTION_16	CALL_1
0x4000897	        0x488b7df8	                mov rdi, qword [rbp - 8]	       436	crypt.c	FUNCTION_16	CALL_1
0x400089b	            0xffd0	                                call rax	       436	crypt.c	FUNCTION_16	CALL_1
0x400089d	              0x90	                                     nop	       437	crypt.c	FUNCTION_16
0x400089e	              0xc9	                                   leave	       437	crypt.c	FUNCTION_16
0x400089f	              0xc3	                                     ret	       437	crypt.c	FUNCTION_16
crypt_free_key	functions,0:FOR,1:CALL,1:IF,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	22
0x400097c	              0x55	                                push rbp	       482	crypt.c	FUNCTION_20
0x400097d	          0x4889e5	                            mov rbp, rsp	       482	crypt.c	FUNCTION_20
0x4000980	        0x4883ec20	                           sub rsp, 0x20	       482	crypt.c	FUNCTION_20
0x4000984	        0x48897de8	             mov qword [rbp - 0x18], rdi	       482	crypt.c	FUNCTION_20
0x4000988	      0x48837de800	               cmp qword [rbp - 0x18], 0	       485	crypt.c	FUNCTION_20	IF_1
0x400098d	            0x742d	                            je 0x40009bc	       485	crypt.c	FUNCTION_20	IF_1
0x400098f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000993	        0x488945f8	                mov qword [rbp - 8], rax	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000997	            0xeb0c	                           jmp 0x40009a5	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000999	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	crypt.c	FUNCTION_20	IF_1	FOR_1
0x400099d	          0xc60000	                       mov byte [rax], 0	       488	crypt.c	FUNCTION_20	IF_1	FOR_1
0x40009a0	      0x488345f801	                  add qword [rbp - 8], 1	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x40009a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x40009a9	           0xfb600	                   movzx eax, byte [rax]	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x40009ac	            0x84c0	                             test al, al	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x40009ae	            0x75e9	                           jne 0x4000999	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x40009b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x40009b4	          0x4889c7	                            mov rdi, rax	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x40009b7	      0xe800000000	                          call 0x40009bc	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x40009bc	              0x90	                                     nop	       491	crypt.c	FUNCTION_20
0x40009bd	              0xc9	                                   leave	       491	crypt.c	FUNCTION_20
0x40009be	              0xc3	                                     ret	       491	crypt.c	FUNCTION_20
crypt_append_msg	functions,0:FOR,0:CALL,6:IF,1:DO,0:ELSE,1:WHILE,0:SWITCH,0	57
0x4000b86	              0x55	                                push rbp	       580	crypt.c	FUNCTION_24
0x4000b87	          0x4889e5	                            mov rbp, rsp	       580	crypt.c	FUNCTION_24
0x4000b8a	        0x4883ec10	                           sub rsp, 0x10	       580	crypt.c	FUNCTION_24
0x4000b8e	        0x48897df8	                mov qword [rbp - 8], rdi	       580	crypt.c	FUNCTION_24
0x4000b92	        0x488b45f8	                mov rax, qword [rbp - 8]	       581	crypt.c	FUNCTION_24	IF_1	CALL_1
0x4000b96	          0x4889c7	                            mov rdi, rax	       581	crypt.c	FUNCTION_24	IF_1	CALL_1
0x4000b99	      0xe800000000	                          call 0x4000b9e	       581	crypt.c	FUNCTION_24	IF_1	CALL_1
0x4000b9e	            0x85c0	                           test eax, eax	       581	crypt.c	FUNCTION_24	IF_1	CALL_1
0x4000ba0	            0x7524	                           jne 0x4000bc6	       581	crypt.c	FUNCTION_24	IF_1	CALL_1
0x4000ba2	      0xbf00000000	                              mov edi, 0	       582	crypt.c	FUNCTION_24	CALL_3
0x4000ba7	      0xe800000000	                          call 0x4000bac	       582	crypt.c	FUNCTION_24	CALL_3
0x4000bac	          0x4889c2	                            mov rdx, rax	       582	crypt.c	FUNCTION_24	CALL_3
0x4000baf	    0x488b05000000	            mov rax, qword [0x04000bb6] 	       582	crypt.c	FUNCTION_24	CALL_3
0x4000bb6	          0x4889d6	                            mov rsi, rdx	       582	crypt.c	FUNCTION_24	CALL_3
0x4000bb9	          0x4889c7	                            mov rdi, rax	       582	crypt.c	FUNCTION_24	CALL_3
0x4000bbc	      0xe800000000	                          call 0x4000bc1	       582	crypt.c	FUNCTION_24	CALL_3
0x4000bc1	      0xe998000000	                           jmp 0x4000c5e	       589	crypt.c	FUNCTION_24
0x4000bc6	    0x488b15000000	            mov rdx, qword [0x04000bcd] 	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000bcd	          0x4889d0	                            mov rax, rdx	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000bd0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000bd7	          0x4889c6	                            mov rsi, rax	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000bda	      0xb800000000	                              mov eax, 0	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000bdf	          0x4889f7	                            mov rdi, rsi	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000be2	            0xf2ae	              repne scasb al, byte [rdi]	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000be4	          0x4889c8	                            mov rax, rcx	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000be7	          0x48f7d0	                                 not rax	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000bea	        0x4883e801	                              sub rax, 1	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000bee	          0x4801d0	                            add rax, rdx	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000bf1	      0x66c7005b00	                    mov word [rax], 0x5b	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000bf6	        0x488b45f8	                mov rax, qword [rbp - 8]	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000bfa	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c01	           0xfb600	                   movzx eax, byte [rax]	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c04	            0x84c0	                             test al, al	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c06	            0x740d	                            je 0x4000c15	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c08	        0x488b45f8	                mov rax, qword [rbp - 8]	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c0c	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c13	            0xeb07	                           jmp 0x4000c1c	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c15	    0x488b05000000	            mov rax, qword [0x04000c1c] 	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c1c	    0x488b15000000	            mov rdx, qword [0x04000c23] 	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c23	          0x4889c6	                            mov rsi, rax	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c26	          0x4889d7	                            mov rdi, rdx	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c29	      0xe800000000	                          call 0x4000c2e	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000c2e	    0x488b15000000	            mov rdx, qword [0x04000c35] 	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c35	          0x4889d0	                            mov rax, rdx	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c38	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c3f	          0x4889c6	                            mov rsi, rax	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c42	      0xb800000000	                              mov eax, 0	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c47	          0x4889f7	                            mov rdi, rsi	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c4a	            0xf2ae	              repne scasb al, byte [rdi]	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c4c	          0x4889c8	                            mov rax, rcx	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c4f	          0x48f7d0	                                 not rax	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c52	        0x4883e801	                              sub rax, 1	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c56	          0x4801d0	                            add rax, rdx	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c59	      0x66c7005d00	                    mov word [rax], 0x5d	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000c5e	              0x90	                                     nop	       589	crypt.c	FUNCTION_24
0x4000c5f	              0xc9	                                   leave	       589	crypt.c	FUNCTION_24
0x4000c60	              0xc3	                                     ret	       589	crypt.c	FUNCTION_24
crypt_create_for_writing	functions,0:FOR,0:CALL,6:IF,5:DO,0:ELSE,0:WHILE,0:SWITCH,0	111
0x400052e	              0x55	                                push rbp	       326	crypt.c	FUNCTION_12
0x400052f	          0x4889e5	                            mov rbp, rsp	       326	crypt.c	FUNCTION_12
0x4000532	        0x4883ec50	                           sub rsp, 0x50	       326	crypt.c	FUNCTION_12
0x4000536	          0x897dcc	             mov dword [rbp - 0x34], edi	       326	crypt.c	FUNCTION_12
0x4000539	        0x488975c0	             mov qword [rbp - 0x40], rsi	       326	crypt.c	FUNCTION_12
0x400053d	        0x488955b8	             mov qword [rbp - 0x48], rdx	       326	crypt.c	FUNCTION_12
0x4000541	        0x48894db0	             mov qword [rbp - 0x50], rcx	       326	crypt.c	FUNCTION_12
0x4000545	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       327	crypt.c	FUNCTION_12	CALL_1
0x4000548	            0x89c7	                            mov edi, eax	       327	crypt.c	FUNCTION_12	CALL_1
0x400054a	      0xe800000000	                          call 0x400054f	       327	crypt.c	FUNCTION_12	CALL_1
0x400054f	          0x8945dc	             mov dword [rbp - 0x24], eax	       327	crypt.c	FUNCTION_12	CALL_1
0x4000552	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       328	crypt.c	FUNCTION_12
0x400055a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       329	crypt.c	FUNCTION_12
0x4000562	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       330	crypt.c	FUNCTION_12
0x4000565	          0x4863d0	                         movsxd rdx, eax	       330	crypt.c	FUNCTION_12
0x4000568	          0x4889d0	                            mov rax, rdx	       330	crypt.c	FUNCTION_12
0x400056b	          0x4801c0	                            add rax, rax	       330	crypt.c	FUNCTION_12
0x400056e	          0x4801d0	                            add rax, rdx	       330	crypt.c	FUNCTION_12
0x4000571	        0x48c1e005	                              shl rax, 5	       330	crypt.c	FUNCTION_12
0x4000575	    0x480500000000	                              add rax, 0	       330	crypt.c	FUNCTION_12
0x400057b	            0x8b00	                    mov eax, dword [rax]	       330	crypt.c	FUNCTION_12
0x400057d	          0x8945e0	             mov dword [rbp - 0x20], eax	       330	crypt.c	FUNCTION_12
0x4000580	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       331	crypt.c	FUNCTION_12
0x4000583	          0x4863d0	                         movsxd rdx, eax	       331	crypt.c	FUNCTION_12
0x4000586	          0x4889d0	                            mov rax, rdx	       331	crypt.c	FUNCTION_12
0x4000589	          0x4801c0	                            add rax, rax	       331	crypt.c	FUNCTION_12
0x400058c	          0x4801d0	                            add rax, rdx	       331	crypt.c	FUNCTION_12
0x400058f	        0x48c1e005	                              shl rax, 5	       331	crypt.c	FUNCTION_12
0x4000593	    0x480500000000	                              add rax, 0	       331	crypt.c	FUNCTION_12
0x4000599	            0x8b00	                    mov eax, dword [rax]	       331	crypt.c	FUNCTION_12
0x400059b	          0x8945e4	             mov dword [rbp - 0x1c], eax	       331	crypt.c	FUNCTION_12
0x400059e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       334	crypt.c	FUNCTION_12
0x40005a2	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       334	crypt.c	FUNCTION_12
0x40005a5	            0x8910	                    mov dword [rax], edx	       334	crypt.c	FUNCTION_12
0x40005a7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       335	crypt.c	FUNCTION_12	CALL_2
0x40005aa	            0x89c7	                            mov edi, eax	       335	crypt.c	FUNCTION_12	CALL_2
0x40005ac	      0xe800000000	                          call 0x40005b1	       335	crypt.c	FUNCTION_12	CALL_2
0x40005b1	          0x4889c2	                            mov rdx, rax	       335	crypt.c	FUNCTION_12	CALL_2
0x40005b4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       335	crypt.c	FUNCTION_12	CALL_2
0x40005b8	          0x488910	                    mov qword [rax], rdx	       335	crypt.c	FUNCTION_12	CALL_2
0x40005bb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       336	crypt.c	FUNCTION_12	IF_1
0x40005bf	          0x488b00	                    mov rax, qword [rax]	       336	crypt.c	FUNCTION_12	IF_1
0x40005c2	          0x4885c0	                           test rax, rax	       336	crypt.c	FUNCTION_12	IF_1
0x40005c5	            0x750a	                           jne 0x40005d1	       336	crypt.c	FUNCTION_12	IF_1
0x40005c7	      0xb800000000	                              mov eax, 0	       337	crypt.c	FUNCTION_12	IF_1
0x40005cc	      0xe9e0000000	                           jmp 0x40006b1	       337	crypt.c	FUNCTION_12	IF_1
0x40005d1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       339	crypt.c	FUNCTION_12	CALL_3
0x40005d4	          0x4863d0	                         movsxd rdx, eax	       339	crypt.c	FUNCTION_12	CALL_3
0x40005d7	          0x4889d0	                            mov rax, rdx	       339	crypt.c	FUNCTION_12	CALL_3
0x40005da	          0x4801c0	                            add rax, rax	       339	crypt.c	FUNCTION_12	CALL_3
0x40005dd	          0x4801d0	                            add rax, rdx	       339	crypt.c	FUNCTION_12	CALL_3
0x40005e0	        0x48c1e005	                              shl rax, 5	       339	crypt.c	FUNCTION_12	CALL_3
0x40005e4	    0x480500000000	                              add rax, 0	       339	crypt.c	FUNCTION_12	CALL_3
0x40005ea	          0x488b08	                    mov rcx, qword [rax]	       339	crypt.c	FUNCTION_12	CALL_3
0x40005ed	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       339	crypt.c	FUNCTION_12	CALL_3
0x40005f1	          0x488b00	                    mov rax, qword [rax]	       339	crypt.c	FUNCTION_12	CALL_3
0x40005f4	      0xba0c000000	                            mov edx, 0xc	       339	crypt.c	FUNCTION_12	CALL_3
0x40005f9	          0x4889ce	                            mov rsi, rcx	       339	crypt.c	FUNCTION_12	CALL_3
0x40005fc	          0x4889c7	                            mov rdi, rax	       339	crypt.c	FUNCTION_12	CALL_3
0x40005ff	      0xe800000000	                          call 0x4000604	       339	crypt.c	FUNCTION_12	CALL_3
0x4000604	        0x837de000	               cmp dword [rbp - 0x20], 0	       340	crypt.c	FUNCTION_12	IF_2
0x4000608	            0x7f06	                            jg 0x4000610	       340	crypt.c	FUNCTION_12	IF_2
0x400060a	        0x837de400	               cmp dword [rbp - 0x1c], 0	       340	crypt.c	FUNCTION_12	IF_2
0x400060e	            0x7e49	                           jle 0x4000659	       340	crypt.c	FUNCTION_12	IF_2
0x4000610	        0x837de000	               cmp dword [rbp - 0x20], 0	       342	crypt.c	FUNCTION_12	IF_2	IF_3
0x4000614	            0x7e0f	                           jle 0x4000625	       342	crypt.c	FUNCTION_12	IF_2	IF_3
0x4000616	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       343	crypt.c	FUNCTION_12	IF_2	IF_3
0x400061a	          0x488b00	                    mov rax, qword [rax]	       343	crypt.c	FUNCTION_12	IF_2	IF_3
0x400061d	        0x4883c00c	                            add rax, 0xc	       343	crypt.c	FUNCTION_12	IF_2	IF_3
0x4000621	        0x488945e8	             mov qword [rbp - 0x18], rax	       343	crypt.c	FUNCTION_12	IF_2	IF_3
0x4000625	        0x837de400	               cmp dword [rbp - 0x1c], 0	       344	crypt.c	FUNCTION_12	IF_2	IF_4
0x4000629	            0x7e18	                           jle 0x4000643	       344	crypt.c	FUNCTION_12	IF_2	IF_4
0x400062b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x400062f	          0x488b00	                    mov rax, qword [rax]	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x4000632	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x4000635	          0x4863d2	                         movsxd rdx, edx	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x4000638	        0x4883c20c	                            add rdx, 0xc	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x400063c	          0x4801d0	                            add rax, rdx	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x400063f	        0x488945f0	             mov qword [rbp - 0x10], rax	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x4000643	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x4000646	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x400064a	          0x8b75e0	             mov esi, dword [rbp - 0x20]	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x400064d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x4000651	          0x4889c7	                            mov rdi, rax	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x4000654	      0xe800000000	                          call 0x4000659	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x4000659	        0x448b45e4	             mov r8d, dword [rbp - 0x1c]	       353	crypt.c	FUNCTION_12	CALL_5
0x400065d	        0x488b7df0	             mov rdi, qword [rbp - 0x10]	       353	crypt.c	FUNCTION_12	CALL_5
0x4000661	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	       353	crypt.c	FUNCTION_12	CALL_5
0x4000664	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       353	crypt.c	FUNCTION_12	CALL_5
0x4000668	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       353	crypt.c	FUNCTION_12	CALL_5
0x400066c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       353	crypt.c	FUNCTION_12	CALL_5
0x400066f	          0x4589c1	                            mov r9d, r8d	       353	crypt.c	FUNCTION_12	CALL_5
0x4000672	          0x4989f8	                             mov r8, rdi	       353	crypt.c	FUNCTION_12	CALL_5
0x4000675	            0x89c7	                            mov edi, eax	       353	crypt.c	FUNCTION_12	CALL_5
0x4000677	      0xe800000000	                          call 0x400067c	       353	crypt.c	FUNCTION_12	CALL_5
0x400067c	        0x488945f8	                mov qword [rbp - 8], rax	       353	crypt.c	FUNCTION_12	CALL_5
0x4000680	      0x48837df800	                  cmp qword [rbp - 8], 0	       354	crypt.c	FUNCTION_12	IF_5
0x4000685	            0x7526	                           jne 0x40006ad	       354	crypt.c	FUNCTION_12	IF_5
0x4000687	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       355	crypt.c	FUNCTION_12	CALL_6
0x400068b	          0x488b00	                    mov rax, qword [rax]	       355	crypt.c	FUNCTION_12	CALL_6
0x400068e	          0x4885c0	                           test rax, rax	       355	crypt.c	FUNCTION_12	CALL_6
0x4000691	            0x741a	                            je 0x40006ad	       355	crypt.c	FUNCTION_12	CALL_6
0x4000693	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       355	crypt.c	FUNCTION_12	CALL_6
0x4000697	          0x488b00	                    mov rax, qword [rax]	       355	crypt.c	FUNCTION_12	CALL_6
0x400069a	          0x4889c7	                            mov rdi, rax	       355	crypt.c	FUNCTION_12	CALL_6
0x400069d	      0xe800000000	                          call 0x40006a2	       355	crypt.c	FUNCTION_12	CALL_6
0x40006a2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       355	crypt.c	FUNCTION_12	CALL_6
0x40006a6	    0x48c700000000	                      mov qword [rax], 0	       355	crypt.c	FUNCTION_12	CALL_6
0x40006ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       356	crypt.c	FUNCTION_12
0x40006b1	              0xc9	                                   leave	       357	crypt.c	FUNCTION_12
0x40006b2	              0xc3	                                     ret	       357	crypt.c	FUNCTION_12
crypt_encode_alloc	functions,0:FOR,0:CALL,3:IF,3:DO,0:ELSE,0:WHILE,0:SWITCH,0	55
0x40006de	              0x55	                                push rbp	       380	crypt.c	FUNCTION_14
0x40006df	          0x4889e5	                            mov rbp, rsp	       380	crypt.c	FUNCTION_14
0x40006e2	        0x4883ec30	                           sub rsp, 0x30	       380	crypt.c	FUNCTION_14
0x40006e6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       380	crypt.c	FUNCTION_14
0x40006ea	        0x488975e0	             mov qword [rbp - 0x20], rsi	       380	crypt.c	FUNCTION_14
0x40006ee	        0x488955d8	             mov qword [rbp - 0x28], rdx	       380	crypt.c	FUNCTION_14
0x40006f2	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       380	crypt.c	FUNCTION_14
0x40006f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       381	crypt.c	FUNCTION_14
0x40006fa	            0x8b00	                    mov eax, dword [rax]	       381	crypt.c	FUNCTION_14
0x40006fc	          0x4863d0	                         movsxd rdx, eax	       381	crypt.c	FUNCTION_14
0x40006ff	          0x4889d0	                            mov rax, rdx	       381	crypt.c	FUNCTION_14
0x4000702	          0x4801c0	                            add rax, rax	       381	crypt.c	FUNCTION_14
0x4000705	          0x4801d0	                            add rax, rdx	       381	crypt.c	FUNCTION_14
0x4000708	        0x48c1e005	                              shl rax, 5	       381	crypt.c	FUNCTION_14
0x400070c	    0x480500000000	                              add rax, 0	       381	crypt.c	FUNCTION_14
0x4000712	        0x488945f8	                mov qword [rbp - 8], rax	       381	crypt.c	FUNCTION_14
0x4000716	        0x488b45f8	                mov rax, qword [rbp - 8]	       383	crypt.c	FUNCTION_14	IF_1
0x400071a	        0x488b4040	            mov rax, qword [rax + 0x40] 	       383	crypt.c	FUNCTION_14	IF_1
0x400071e	          0x4885c0	                           test rax, rax	       383	crypt.c	FUNCTION_14	IF_1
0x4000721	            0x741c	                            je 0x400073f	       383	crypt.c	FUNCTION_14	IF_1
0x4000723	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	crypt.c	FUNCTION_14	CALL_1
0x4000727	        0x488b4040	            mov rax, qword [rax + 0x40] 	       385	crypt.c	FUNCTION_14	CALL_1
0x400072b	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       385	crypt.c	FUNCTION_14	CALL_1
0x400072f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       385	crypt.c	FUNCTION_14	CALL_1
0x4000733	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       385	crypt.c	FUNCTION_14	CALL_1
0x4000737	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       385	crypt.c	FUNCTION_14	CALL_1
0x400073b	            0xffd0	                                call rax	       385	crypt.c	FUNCTION_14	CALL_1
0x400073d	            0xeb58	                           jmp 0x4000797	       385	crypt.c	FUNCTION_14	CALL_1
0x400073f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       386	crypt.c	FUNCTION_14	IF_2
0x4000744	            0x7506	                           jne 0x400074c	       386	crypt.c	FUNCTION_14	IF_2
0x4000746	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       388	crypt.c	FUNCTION_14	IF_2
0x400074a	            0xeb4b	                           jmp 0x4000797	       388	crypt.c	FUNCTION_14	IF_2
0x400074c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       390	crypt.c	FUNCTION_14	CALL_2
0x4000750	            0x89c7	                            mov edi, eax	       390	crypt.c	FUNCTION_14	CALL_2
0x4000752	      0xe800000000	                          call 0x4000757	       390	crypt.c	FUNCTION_14	CALL_2
0x4000757	          0x4889c2	                            mov rdx, rax	       390	crypt.c	FUNCTION_14	CALL_2
0x400075a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       390	crypt.c	FUNCTION_14	CALL_2
0x400075e	          0x488910	                    mov qword [rax], rdx	       390	crypt.c	FUNCTION_14	CALL_2
0x4000761	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       391	crypt.c	FUNCTION_14	IF_3
0x4000765	          0x488b00	                    mov rax, qword [rax]	       391	crypt.c	FUNCTION_14	IF_3
0x4000768	          0x4885c0	                           test rax, rax	       391	crypt.c	FUNCTION_14	IF_3
0x400076b	            0x7509	                           jne 0x4000776	       391	crypt.c	FUNCTION_14	IF_3
0x400076d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       392	crypt.c	FUNCTION_14	IF_3
0x4000774	            0xeb21	                           jmp 0x4000797	       392	crypt.c	FUNCTION_14	IF_3
0x4000776	        0x488b45f8	                mov rax, qword [rbp - 8]	       393	crypt.c	FUNCTION_14	CALL_3
0x400077a	        0x488b4030	            mov rax, qword [rax + 0x30] 	       393	crypt.c	FUNCTION_14	CALL_3
0x400077e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       393	crypt.c	FUNCTION_14	CALL_3
0x4000782	          0x488b0a	                    mov rcx, qword [rdx]	       393	crypt.c	FUNCTION_14	CALL_3
0x4000785	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       393	crypt.c	FUNCTION_14	CALL_3
0x4000789	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       393	crypt.c	FUNCTION_14	CALL_3
0x400078d	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       393	crypt.c	FUNCTION_14	CALL_3
0x4000791	            0xffd0	                                call rax	       393	crypt.c	FUNCTION_14	CALL_3
0x4000793	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       394	crypt.c	FUNCTION_14
0x4000797	              0xc9	                                   leave	       395	crypt.c	FUNCTION_14
0x4000798	              0xc3	                                     ret	       395	crypt.c	FUNCTION_14
crypt_encode_inplace	functions,0:FOR,0:CALL,1:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	23
0x40008ec	              0x55	                                push rbp	       460	crypt.c	FUNCTION_18
0x40008ed	          0x4889e5	                            mov rbp, rsp	       460	crypt.c	FUNCTION_18
0x40008f0	        0x4883ec20	                           sub rsp, 0x20	       460	crypt.c	FUNCTION_18
0x40008f4	        0x48897df8	                mov qword [rbp - 8], rdi	       460	crypt.c	FUNCTION_18
0x40008f8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       460	crypt.c	FUNCTION_18
0x40008fc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       460	crypt.c	FUNCTION_18
0x4000900	        0x488b45f8	                mov rax, qword [rbp - 8]	       461	crypt.c	FUNCTION_18	CALL_1
0x4000904	            0x8b00	                    mov eax, dword [rax]	       461	crypt.c	FUNCTION_18	CALL_1
0x4000906	          0x4863d0	                         movsxd rdx, eax	       461	crypt.c	FUNCTION_18	CALL_1
0x4000909	          0x4889d0	                            mov rax, rdx	       461	crypt.c	FUNCTION_18	CALL_1
0x400090c	          0x4801c0	                            add rax, rax	       461	crypt.c	FUNCTION_18	CALL_1
0x400090f	          0x4801d0	                            add rax, rdx	       461	crypt.c	FUNCTION_18	CALL_1
0x4000912	        0x48c1e005	                              shl rax, 5	       461	crypt.c	FUNCTION_18	CALL_1
0x4000916	    0x480500000000	                              add rax, 0	       461	crypt.c	FUNCTION_18	CALL_1
0x400091c	          0x488b00	                    mov rax, qword [rax]	       461	crypt.c	FUNCTION_18	CALL_1
0x400091f	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       461	crypt.c	FUNCTION_18	CALL_1
0x4000923	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       461	crypt.c	FUNCTION_18	CALL_1
0x4000927	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       461	crypt.c	FUNCTION_18	CALL_1
0x400092b	        0x488b7df8	                mov rdi, qword [rbp - 8]	       461	crypt.c	FUNCTION_18	CALL_1
0x400092f	            0xffd0	                                call rax	       461	crypt.c	FUNCTION_18	CALL_1
0x4000931	              0x90	                                     nop	       462	crypt.c	FUNCTION_18
0x4000932	              0xc9	                                   leave	       462	crypt.c	FUNCTION_18
0x4000933	              0xc3	                                     ret	       462	crypt.c	FUNCTION_18
crypt_method_nr_from_name	functions,0:FOR,1:CALL,1:IF,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	28
0x4000040	              0x55	                                push rbp	       137	crypt.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       137	crypt.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	       137	crypt.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       137	crypt.c	FUNCTION_1
0x400004c	    0xc745fc000000	                  mov dword [rbp - 4], 0	       140	crypt.c	FUNCTION_1	FOR_1
0x4000053	            0xeb38	                           jmp 0x400008d	       140	crypt.c	FUNCTION_1	FOR_1
0x4000055	          0x8b45fc	                mov eax, dword [rbp - 4]	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000058	          0x4863d0	                         movsxd rdx, eax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400005b	          0x4889d0	                            mov rax, rdx	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400005e	          0x4801c0	                            add rax, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000061	          0x4801d0	                            add rax, rdx	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000064	        0x48c1e005	                              shl rax, 5	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000068	    0x480500000000	                              add rax, 0	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400006e	          0x488b10	                    mov rdx, qword [rax]	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000071	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000075	          0x4889d6	                            mov rsi, rdx	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000078	          0x4889c7	                            mov rdi, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400007b	      0xe800000000	                          call 0x4000080	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000080	            0x85c0	                           test eax, eax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000082	            0x7505	                           jne 0x4000089	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000084	          0x8b45fc	                mov eax, dword [rbp - 4]	       142	crypt.c	FUNCTION_1	FOR_1	IF_1
0x4000087	            0xeb0f	                           jmp 0x4000098	       142	crypt.c	FUNCTION_1	FOR_1	IF_1
0x4000089	        0x8345fc01	                  add dword [rbp - 4], 1	       140	crypt.c	FUNCTION_1	FOR_1
0x400008d	        0x837dfc02	                  cmp dword [rbp - 4], 2	       140	crypt.c	FUNCTION_1	FOR_1
0x4000091	            0x7ec2	                           jle 0x4000055	       140	crypt.c	FUNCTION_1	FOR_1
0x4000093	      0xb800000000	                              mov eax, 0	       143	crypt.c	FUNCTION_1
0x4000098	              0xc9	                                   leave	       144	crypt.c	FUNCTION_1
0x4000099	              0xc3	                                     ret	       144	crypt.c	FUNCTION_1
crypt_works_inplace	functions,0:FOR,0:CALL,0:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	14
0x400014e	              0x55	                                push rbp	       175	crypt.c	FUNCTION_3
0x400014f	          0x4889e5	                            mov rbp, rsp	       175	crypt.c	FUNCTION_3
0x4000152	        0x48897df8	                mov qword [rbp - 8], rdi	       175	crypt.c	FUNCTION_3
0x4000156	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	crypt.c	FUNCTION_3
0x400015a	            0x8b00	                    mov eax, dword [rax]	       176	crypt.c	FUNCTION_3
0x400015c	          0x4863d0	                         movsxd rdx, eax	       176	crypt.c	FUNCTION_3
0x400015f	          0x4889d0	                            mov rax, rdx	       176	crypt.c	FUNCTION_3
0x4000162	          0x4801c0	                            add rax, rax	       176	crypt.c	FUNCTION_3
0x4000165	          0x4801d0	                            add rax, rdx	       176	crypt.c	FUNCTION_3
0x4000168	        0x48c1e005	                              shl rax, 5	       176	crypt.c	FUNCTION_3
0x400016c	    0x480500000000	                              add rax, 0	       176	crypt.c	FUNCTION_3
0x4000172	            0x8b00	                    mov eax, dword [rax]	       176	crypt.c	FUNCTION_3
0x4000174	              0x5d	                                 pop rbp	       177	crypt.c	FUNCTION_3
0x4000175	              0xc3	                                     ret	       177	crypt.c	FUNCTION_3
crypt_decode_inplace	functions,0:FOR,0:CALL,1:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	23
0x4000934	              0x55	                                push rbp	       472	crypt.c	FUNCTION_19
0x4000935	          0x4889e5	                            mov rbp, rsp	       472	crypt.c	FUNCTION_19
0x4000938	        0x4883ec20	                           sub rsp, 0x20	       472	crypt.c	FUNCTION_19
0x400093c	        0x48897df8	                mov qword [rbp - 8], rdi	       472	crypt.c	FUNCTION_19
0x4000940	        0x488975f0	             mov qword [rbp - 0x10], rsi	       472	crypt.c	FUNCTION_19
0x4000944	        0x488955e8	             mov qword [rbp - 0x18], rdx	       472	crypt.c	FUNCTION_19
0x4000948	        0x488b45f8	                mov rax, qword [rbp - 8]	       473	crypt.c	FUNCTION_19	CALL_1
0x400094c	            0x8b00	                    mov eax, dword [rax]	       473	crypt.c	FUNCTION_19	CALL_1
0x400094e	          0x4863d0	                         movsxd rdx, eax	       473	crypt.c	FUNCTION_19	CALL_1
0x4000951	          0x4889d0	                            mov rax, rdx	       473	crypt.c	FUNCTION_19	CALL_1
0x4000954	          0x4801c0	                            add rax, rax	       473	crypt.c	FUNCTION_19	CALL_1
0x4000957	          0x4801d0	                            add rax, rdx	       473	crypt.c	FUNCTION_19	CALL_1
0x400095a	        0x48c1e005	                              shl rax, 5	       473	crypt.c	FUNCTION_19	CALL_1
0x400095e	    0x480500000000	                              add rax, 0	       473	crypt.c	FUNCTION_19	CALL_1
0x4000964	          0x488b00	                    mov rax, qword [rax]	       473	crypt.c	FUNCTION_19	CALL_1
0x4000967	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       473	crypt.c	FUNCTION_19	CALL_1
0x400096b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       473	crypt.c	FUNCTION_19	CALL_1
0x400096f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       473	crypt.c	FUNCTION_19	CALL_1
0x4000973	        0x488b7df8	                mov rdi, qword [rbp - 8]	       473	crypt.c	FUNCTION_19	CALL_1
0x4000977	            0xffd0	                                call rax	       473	crypt.c	FUNCTION_19	CALL_1
0x4000979	              0x90	                                     nop	       474	crypt.c	FUNCTION_19
0x400097a	              0xc9	                                   leave	       474	crypt.c	FUNCTION_19
0x400097b	              0xc3	                                     ret	       474	crypt.c	FUNCTION_19
crypt_check_current_method	functions,0:FOR,0:CALL,2:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	10
0x40009ef	              0x55	                                push rbp	       508	crypt.c	FUNCTION_22
0x40009f0	          0x4889e5	                            mov rbp, rsp	       508	crypt.c	FUNCTION_22
0x40009f3	    0x488b05000000	            mov rax, qword [0x040009fa] 	       509	crypt.c	FUNCTION_22	CALL_2
0x40009fa	          0x4889c7	                            mov rdi, rax	       509	crypt.c	FUNCTION_22	CALL_2
0x40009fd	      0xe800000000	                          call 0x4000a02	       509	crypt.c	FUNCTION_22	CALL_2
0x4000a02	            0x89c7	                            mov edi, eax	       509	crypt.c	FUNCTION_22	CALL_2
0x4000a04	      0xe800000000	                          call 0x4000a09	       509	crypt.c	FUNCTION_22	CALL_2
0x4000a09	              0x90	                                     nop	       510	crypt.c	FUNCTION_22
0x4000a0a	              0x5d	                                 pop rbp	       510	crypt.c	FUNCTION_22
0x4000a0b	              0xc3	                                     ret	       510	crypt.c	FUNCTION_22
crypt_check_method	functions,0:FOR,0:CALL,2:IF,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	14
0x40009bf	              0x55	                                push rbp	       498	crypt.c	FUNCTION_21
0x40009c0	          0x4889e5	                            mov rbp, rsp	       498	crypt.c	FUNCTION_21
0x40009c3	        0x4883ec10	                           sub rsp, 0x10	       498	crypt.c	FUNCTION_21
0x40009c7	          0x897dfc	                mov dword [rbp - 4], edi	       498	crypt.c	FUNCTION_21
0x40009ca	        0x837dfc01	                  cmp dword [rbp - 4], 1	       499	crypt.c	FUNCTION_21	IF_1
0x40009ce	            0x7f1c	                            jg 0x40009ec	       499	crypt.c	FUNCTION_21	IF_1
0x40009d0	    0xc70500000000	               mov dword [0x040009da], 1	       501	crypt.c	FUNCTION_21	IF_1
0x40009da	      0xbf00000000	                              mov edi, 0	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x40009df	      0xe800000000	                          call 0x40009e4	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x40009e4	          0x4889c7	                            mov rdi, rax	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x40009e7	      0xe800000000	                          call 0x40009ec	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x40009ec	              0x90	                                     nop	       504	crypt.c	FUNCTION_21
0x40009ed	              0xc9	                                   leave	       504	crypt.c	FUNCTION_21
0x40009ee	              0xc3	                                     ret	       504	crypt.c	FUNCTION_21
crypt_decode	functions,0:FOR,0:CALL,1:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	24
0x40008a0	              0x55	                                push rbp	       448	crypt.c	FUNCTION_17
0x40008a1	          0x4889e5	                            mov rbp, rsp	       448	crypt.c	FUNCTION_17
0x40008a4	        0x4883ec20	                           sub rsp, 0x20	       448	crypt.c	FUNCTION_17
0x40008a8	        0x48897df8	                mov qword [rbp - 8], rdi	       448	crypt.c	FUNCTION_17
0x40008ac	        0x488975f0	             mov qword [rbp - 0x10], rsi	       448	crypt.c	FUNCTION_17
0x40008b0	        0x488955e8	             mov qword [rbp - 0x18], rdx	       448	crypt.c	FUNCTION_17
0x40008b4	        0x48894de0	             mov qword [rbp - 0x20], rcx	       448	crypt.c	FUNCTION_17
0x40008b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       449	crypt.c	FUNCTION_17	CALL_1
0x40008bc	            0x8b00	                    mov eax, dword [rax]	       449	crypt.c	FUNCTION_17	CALL_1
0x40008be	          0x4863d0	                         movsxd rdx, eax	       449	crypt.c	FUNCTION_17	CALL_1
0x40008c1	          0x4889d0	                            mov rax, rdx	       449	crypt.c	FUNCTION_17	CALL_1
0x40008c4	          0x4801c0	                            add rax, rax	       449	crypt.c	FUNCTION_17	CALL_1
0x40008c7	          0x4801d0	                            add rax, rdx	       449	crypt.c	FUNCTION_17	CALL_1
0x40008ca	        0x48c1e005	                              shl rax, 5	       449	crypt.c	FUNCTION_17	CALL_1
0x40008ce	    0x480500000000	                              add rax, 0	       449	crypt.c	FUNCTION_17	CALL_1
0x40008d4	          0x488b00	                    mov rax, qword [rax]	       449	crypt.c	FUNCTION_17	CALL_1
0x40008d7	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       449	crypt.c	FUNCTION_17	CALL_1
0x40008db	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       449	crypt.c	FUNCTION_17	CALL_1
0x40008df	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       449	crypt.c	FUNCTION_17	CALL_1
0x40008e3	        0x488b7df8	                mov rdi, qword [rbp - 8]	       449	crypt.c	FUNCTION_17	CALL_1
0x40008e7	            0xffd0	                                call rax	       449	crypt.c	FUNCTION_17	CALL_1
0x40008e9	              0x90	                                     nop	       450	crypt.c	FUNCTION_17
0x40008ea	              0xc9	                                   leave	       450	crypt.c	FUNCTION_17
0x40008eb	              0xc3	                                     ret	       450	crypt.c	FUNCTION_17
crypt_get_header_len	functions,0:FOR,0:CALL,0:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	23
0x40001d6	              0x55	                                push rbp	       203	crypt.c	FUNCTION_6
0x40001d7	          0x4889e5	                            mov rbp, rsp	       203	crypt.c	FUNCTION_6
0x40001da	          0x897dfc	                mov dword [rbp - 4], edi	       203	crypt.c	FUNCTION_6
0x40001dd	          0x8b45fc	                mov eax, dword [rbp - 4]	       205	crypt.c	FUNCTION_6
0x40001e0	          0x4863d0	                         movsxd rdx, eax	       205	crypt.c	FUNCTION_6
0x40001e3	          0x4889d0	                            mov rax, rdx	       205	crypt.c	FUNCTION_6
0x40001e6	          0x4801c0	                            add rax, rax	       205	crypt.c	FUNCTION_6
0x40001e9	          0x4801d0	                            add rax, rdx	       205	crypt.c	FUNCTION_6
0x40001ec	        0x48c1e005	                              shl rax, 5	       205	crypt.c	FUNCTION_6
0x40001f0	    0x480500000000	                              add rax, 0	       205	crypt.c	FUNCTION_6
0x40001f6	            0x8b00	                    mov eax, dword [rax]	       205	crypt.c	FUNCTION_6
0x40001f8	          0x8d480c	                    lea ecx, [rax + 0xc]	       205	crypt.c	FUNCTION_6
0x40001fb	          0x8b45fc	                mov eax, dword [rbp - 4]	       206	crypt.c	FUNCTION_6
0x40001fe	          0x4863d0	                         movsxd rdx, eax	       206	crypt.c	FUNCTION_6
0x4000201	          0x4889d0	                            mov rax, rdx	       206	crypt.c	FUNCTION_6
0x4000204	          0x4801c0	                            add rax, rax	       206	crypt.c	FUNCTION_6
0x4000207	          0x4801d0	                            add rax, rdx	       206	crypt.c	FUNCTION_6
0x400020a	        0x48c1e005	                              shl rax, 5	       206	crypt.c	FUNCTION_6
0x400020e	    0x480500000000	                              add rax, 0	       206	crypt.c	FUNCTION_6
0x4000214	            0x8b00	                    mov eax, dword [rax]	       206	crypt.c	FUNCTION_6
0x4000216	             0x1c8	                            add eax, ecx	       204	crypt.c	FUNCTION_6
0x4000218	              0x5d	                                 pop rbp	       207	crypt.c	FUNCTION_6
0x4000219	              0xc3	                                     ret	       207	crypt.c	FUNCTION_6
crypt_free_state	functions,0:FOR,0:CALL,2:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	14
0x40006b3	              0x55	                                push rbp	       364	crypt.c	FUNCTION_13
0x40006b4	          0x4889e5	                            mov rbp, rsp	       364	crypt.c	FUNCTION_13
0x40006b7	        0x4883ec10	                           sub rsp, 0x10	       364	crypt.c	FUNCTION_13
0x40006bb	        0x48897df8	                mov qword [rbp - 8], rdi	       364	crypt.c	FUNCTION_13
0x40006bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       365	crypt.c	FUNCTION_13	CALL_1
0x40006c3	        0x488b4008	                mov rax, qword [rax + 8]	       365	crypt.c	FUNCTION_13	CALL_1
0x40006c7	          0x4889c7	                            mov rdi, rax	       365	crypt.c	FUNCTION_13	CALL_1
0x40006ca	      0xe800000000	                          call 0x40006cf	       365	crypt.c	FUNCTION_13	CALL_1
0x40006cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       366	crypt.c	FUNCTION_13	CALL_2
0x40006d3	          0x4889c7	                            mov rdi, rax	       366	crypt.c	FUNCTION_13	CALL_2
0x40006d6	      0xe800000000	                          call 0x40006db	       366	crypt.c	FUNCTION_13	CALL_2
0x40006db	              0x90	                                     nop	       367	crypt.c	FUNCTION_13
0x40006dc	              0xc9	                                   leave	       367	crypt.c	FUNCTION_13
0x40006dd	              0xc3	                                     ret	       367	crypt.c	FUNCTION_13
crypt_decode_alloc	functions,0:FOR,0:CALL,3:IF,3:DO,0:ELSE,0:WHILE,0:SWITCH,0	55
0x4000799	              0x55	                                push rbp	       408	crypt.c	FUNCTION_15
0x400079a	          0x4889e5	                            mov rbp, rsp	       408	crypt.c	FUNCTION_15
0x400079d	        0x4883ec30	                           sub rsp, 0x30	       408	crypt.c	FUNCTION_15
0x40007a1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       408	crypt.c	FUNCTION_15
0x40007a5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       408	crypt.c	FUNCTION_15
0x40007a9	        0x488955d8	             mov qword [rbp - 0x28], rdx	       408	crypt.c	FUNCTION_15
0x40007ad	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       408	crypt.c	FUNCTION_15
0x40007b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       409	crypt.c	FUNCTION_15
0x40007b5	            0x8b00	                    mov eax, dword [rax]	       409	crypt.c	FUNCTION_15
0x40007b7	          0x4863d0	                         movsxd rdx, eax	       409	crypt.c	FUNCTION_15
0x40007ba	          0x4889d0	                            mov rax, rdx	       409	crypt.c	FUNCTION_15
0x40007bd	          0x4801c0	                            add rax, rax	       409	crypt.c	FUNCTION_15
0x40007c0	          0x4801d0	                            add rax, rdx	       409	crypt.c	FUNCTION_15
0x40007c3	        0x48c1e005	                              shl rax, 5	       409	crypt.c	FUNCTION_15
0x40007c7	    0x480500000000	                              add rax, 0	       409	crypt.c	FUNCTION_15
0x40007cd	        0x488945f8	                mov qword [rbp - 8], rax	       409	crypt.c	FUNCTION_15
0x40007d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       411	crypt.c	FUNCTION_15	IF_1
0x40007d5	        0x488b4048	            mov rax, qword [rax + 0x48] 	       411	crypt.c	FUNCTION_15	IF_1
0x40007d9	          0x4885c0	                           test rax, rax	       411	crypt.c	FUNCTION_15	IF_1
0x40007dc	            0x741c	                            je 0x40007fa	       411	crypt.c	FUNCTION_15	IF_1
0x40007de	        0x488b45f8	                mov rax, qword [rbp - 8]	       413	crypt.c	FUNCTION_15	CALL_1
0x40007e2	        0x488b4048	            mov rax, qword [rax + 0x48] 	       413	crypt.c	FUNCTION_15	CALL_1
0x40007e6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       413	crypt.c	FUNCTION_15	CALL_1
0x40007ea	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       413	crypt.c	FUNCTION_15	CALL_1
0x40007ee	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       413	crypt.c	FUNCTION_15	CALL_1
0x40007f2	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       413	crypt.c	FUNCTION_15	CALL_1
0x40007f6	            0xffd0	                                call rax	       413	crypt.c	FUNCTION_15	CALL_1
0x40007f8	            0xeb58	                           jmp 0x4000852	       413	crypt.c	FUNCTION_15	CALL_1
0x40007fa	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       415	crypt.c	FUNCTION_15	IF_2
0x40007ff	            0x7506	                           jne 0x4000807	       415	crypt.c	FUNCTION_15	IF_2
0x4000801	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       417	crypt.c	FUNCTION_15	IF_2
0x4000805	            0xeb4b	                           jmp 0x4000852	       417	crypt.c	FUNCTION_15	IF_2
0x4000807	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       419	crypt.c	FUNCTION_15	CALL_2
0x400080b	            0x89c7	                            mov edi, eax	       419	crypt.c	FUNCTION_15	CALL_2
0x400080d	      0xe800000000	                          call 0x4000812	       419	crypt.c	FUNCTION_15	CALL_2
0x4000812	          0x4889c2	                            mov rdx, rax	       419	crypt.c	FUNCTION_15	CALL_2
0x4000815	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       419	crypt.c	FUNCTION_15	CALL_2
0x4000819	          0x488910	                    mov qword [rax], rdx	       419	crypt.c	FUNCTION_15	CALL_2
0x400081c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       420	crypt.c	FUNCTION_15	IF_3
0x4000820	          0x488b00	                    mov rax, qword [rax]	       420	crypt.c	FUNCTION_15	IF_3
0x4000823	          0x4885c0	                           test rax, rax	       420	crypt.c	FUNCTION_15	IF_3
0x4000826	            0x7509	                           jne 0x4000831	       420	crypt.c	FUNCTION_15	IF_3
0x4000828	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       421	crypt.c	FUNCTION_15	IF_3
0x400082f	            0xeb21	                           jmp 0x4000852	       421	crypt.c	FUNCTION_15	IF_3
0x4000831	        0x488b45f8	                mov rax, qword [rbp - 8]	       422	crypt.c	FUNCTION_15	CALL_3
0x4000835	        0x488b4038	            mov rax, qword [rax + 0x38] 	       422	crypt.c	FUNCTION_15	CALL_3
0x4000839	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       422	crypt.c	FUNCTION_15	CALL_3
0x400083d	          0x488b0a	                    mov rcx, qword [rdx]	       422	crypt.c	FUNCTION_15	CALL_3
0x4000840	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       422	crypt.c	FUNCTION_15	CALL_3
0x4000844	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       422	crypt.c	FUNCTION_15	CALL_3
0x4000848	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       422	crypt.c	FUNCTION_15	CALL_3
0x400084c	            0xffd0	                                call rax	       422	crypt.c	FUNCTION_15	CALL_3
0x400084e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       423	crypt.c	FUNCTION_15
0x4000852	              0xc9	                                   leave	       424	crypt.c	FUNCTION_15
0x4000853	              0xc3	                                     ret	       424	crypt.c	FUNCTION_15
crypt_get_method_nr	functions,0:FOR,0:CALL,1:IF,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	17
0x4000176	              0x55	                                push rbp	       184	crypt.c	FUNCTION_4
0x4000177	          0x4889e5	                            mov rbp, rsp	       184	crypt.c	FUNCTION_4
0x400017a	        0x4883ec10	                           sub rsp, 0x10	       184	crypt.c	FUNCTION_4
0x400017e	        0x48897df8	                mov qword [rbp - 8], rdi	       184	crypt.c	FUNCTION_4
0x4000182	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	crypt.c	FUNCTION_4	CALL_1
0x4000186	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       185	crypt.c	FUNCTION_4	CALL_1
0x400018d	           0xfb600	                   movzx eax, byte [rax]	       185	crypt.c	FUNCTION_4	CALL_1
0x4000190	            0x84c0	                             test al, al	       185	crypt.c	FUNCTION_4	CALL_1
0x4000192	            0x740d	                            je 0x40001a1	       185	crypt.c	FUNCTION_4	CALL_1
0x4000194	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	crypt.c	FUNCTION_4	CALL_1
0x4000198	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       185	crypt.c	FUNCTION_4	CALL_1
0x400019f	            0xeb07	                           jmp 0x40001a8	       185	crypt.c	FUNCTION_4	CALL_1
0x40001a1	    0x488b05000000	            mov rax, qword [0x040001a8] 	       185	crypt.c	FUNCTION_4	CALL_1
0x40001a8	          0x4889c7	                            mov rdi, rax	       185	crypt.c	FUNCTION_4	CALL_1
0x40001ab	      0xe800000000	                          call 0x40001b0	       185	crypt.c	FUNCTION_4	CALL_1
0x40001b0	              0xc9	                                   leave	       186	crypt.c	FUNCTION_4
0x40001b1	              0xc3	                                     ret	       186	crypt.c	FUNCTION_4
