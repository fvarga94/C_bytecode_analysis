crypt_zip_encode	functions,0:ELSE,0:DO,0:IF,0:CALL,2:FOR,1:SWITCH,0:WHILE,0	40
0x400010f	        0x4c8b4f08	                 mov r9, qword [rdi + 8]	       123	crypt_zip.c	FUNCTION_3
0x4000113	          0x4885d2	                           test rdx, rdx	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x4000116	            0x747d	                            je 0x4000195	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x4000118	              0x53	                                push rbx	       122	crypt_zip.c	FUNCTION_3
0x4000119	    0x41ba00000000	                             mov r10d, 0	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x400011f	      0x460fb61c16	            movzx r11d, byte [rsi + r10]	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x4000124	        0x458b4108	                 mov r8d, dword [r9 + 8]	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x4000128	          0x4489c7	                            mov edi, r8d	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x400012b	          0x83cf02	                               or edi, 2	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x400012e	          0x418b01	                     mov eax, dword [r9]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000131	          0x4489db	                           mov ebx, r11d	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000134	            0x31c3	                            xor ebx, eax	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000136	           0xfb6db	                           movzx ebx, bl	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000139	          0xc1e808	                              shr eax, 8	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x400013c	    0x33049d000000	                  xor eax, dword [rbx*4]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000143	          0x418901	                     mov dword [r9], eax	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000146	           0xfb6c0	                           movzx eax, al	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000149	        0x41034104	                 add eax, dword [r9 + 4]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x400014d	    0x69c005840808	                imul eax, eax, 0x8088405	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000153	          0x83c001	                              add eax, 1	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000156	        0x41894104	                 mov dword [r9 + 4], eax	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x400015a	          0xc1e818	                           shr eax, 0x18	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x400015d	          0x4431c0	                            xor eax, r8d	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000160	           0xfb6c0	                           movzx eax, al	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000163	        0x41c1e808	                              shr r8d, 8	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000167	    0x443304850000	                  xor r8d, dword [rax*4]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x400016f	        0x45894108	                 mov dword [r9 + 8], r8d	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x4000173	            0x89f8	                            mov eax, edi	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x4000175	          0x83f001	                              xor eax, 1	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x4000178	           0xfb7c0	                           movzx eax, ax	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x400017b	           0xfb7ff	                           movzx edi, di	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x400017e	           0xfaff8	                           imul edi, eax	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x4000181	          0xc1ef08	                              shr edi, 8	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x4000184	          0x4131fb	                           xor r11d, edi	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x4000187	        0x46881c11	              mov byte [rcx + r10], r11b	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x400018b	        0x4983c201	                              add r10, 1	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x400018f	          0x4c39d2	                            cmp rdx, r10	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x4000192	            0x758b	                           jne 0x400011f	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x4000194	              0x5b	                                 pop rbx	       134	crypt_zip.c	FUNCTION_3
0x4000195	            0xf3c3	                                     ret	       134	crypt_zip.c	FUNCTION_3
crypt_zip_init	functions,0:ELSE,0:DO,0:IF,0:CALL,3:FOR,1:SWITCH,0:WHILE,0	59
0x4000040	              0x55	                                push rbp	        95	crypt_zip.c	FUNCTION_2
0x4000041	              0x53	                                push rbx	        95	crypt_zip.c	FUNCTION_2
0x4000042	        0x4883ec08	                              sub rsp, 8	        95	crypt_zip.c	FUNCTION_2
0x4000046	          0x4889fd	                            mov rbp, rdi	        95	crypt_zip.c	FUNCTION_2
0x4000049	          0x4889f3	                            mov rbx, rsi	        95	crypt_zip.c	FUNCTION_2
0x400004c	      0xbf0c000000	                            mov edi, 0xc	        99	crypt_zip.c	FUNCTION_2	CALL_1
0x4000051	      0xe800000000	                          call 0x4000056	        99	crypt_zip.c	FUNCTION_2	CALL_1
0x4000056	        0x48894508	                mov qword [rbp + 8], rax	       100	crypt_zip.c	FUNCTION_2
0x400005a	      0xbf00000000	                              mov edi, 0	        52	crypt_zip.c	FUNCTION_1	IF_1
0x400005f	    0x833d00000000	               cmp dword [0x04000066], 0	        52	crypt_zip.c	FUNCTION_1	IF_1
0x4000066	            0x742a	                            je 0x4000092	        52	crypt_zip.c	FUNCTION_1	IF_1
0x4000068	            0xeb3b	                           jmp 0x40000a5	        52	crypt_zip.c	FUNCTION_1	IF_1
0x400006a	            0x89d6	                            mov esi, edx	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400006c	            0xd1ee	                              shr esi, 1	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400006e	          0x83e201	                              and edx, 1	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000071	    0x69d22083b8ed	               imul edx, edx, 0xedb88320	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000077	            0x31f2	                            xor edx, esi	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x4000079	          0x83e901	                              sub ecx, 1	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400007c	            0x75ec	                           jne 0x400006a	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x400007e	    0x8914bd000000	                  mov dword [rdi*4], edx	        59	crypt_zip.c	FUNCTION_1	FOR_1
0x4000085	        0x4883c701	                              add rdi, 1	        59	crypt_zip.c	FUNCTION_1	FOR_1
0x4000089	    0x4881ff000100	                          cmp rdi, 0x100	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x4000090	            0x7409	                            je 0x400009b	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x4000092	            0x89fa	                            mov edx, edi	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x4000094	      0xb908000000	                              mov ecx, 8	        95	crypt_zip.c	FUNCTION_2
0x4000099	            0xebcf	                           jmp 0x400006a	        95	crypt_zip.c	FUNCTION_2
0x400009b	    0xc70500000000	               mov dword [0x040000a5], 1	        61	crypt_zip.c	FUNCTION_1
0x40000a5	    0xc70078563412	            mov dword [rax], 0x12345678 	       103	crypt_zip.c	FUNCTION_2
0x40000ab	    0xc74004896745	        mov dword [rax + 4], 0x23456789 	       104	crypt_zip.c	FUNCTION_2
0x40000b2	    0xc74008907856	        mov dword [rax + 8], 0x34567890 	       105	crypt_zip.c	FUNCTION_2
0x40000b9	           0xfb60b	                   movzx ecx, byte [rbx]	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40000bc	            0x84c9	                             test cl, cl	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40000be	            0x7448	                            je 0x4000108	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x40000c0	            0x8b10	                    mov edx, dword [rax]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000c2	            0x31d1	                            xor ecx, edx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000c4	           0xfb6c9	                           movzx ecx, cl	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000c7	          0xc1ea08	                              shr edx, 8	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000ca	    0x33148d000000	                  xor edx, dword [rcx*4]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000d1	            0x8910	                    mov dword [rax], edx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000d3	           0xfb6d2	                           movzx edx, dl	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000d6	           0x35004	                add edx, dword [rax + 4]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000d9	    0x69d205840808	                imul edx, edx, 0x8088405	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000df	          0x83c201	                              add edx, 1	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000e2	          0x895004	                mov dword [rax + 4], edx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000e5	          0x8b4808	                mov ecx, dword [rax + 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000e8	          0xc1ea18	                           shr edx, 0x18	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000eb	            0x31ca	                            xor edx, ecx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000ed	           0xfb6d2	                           movzx edx, dl	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000f0	          0xc1e908	                              shr ecx, 8	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000f3	    0x330c95000000	                  xor ecx, dword [rdx*4]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000fa	          0x894808	                mov dword [rax + 8], ecx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x40000fd	        0x4883c301	                              add rbx, 1	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x4000101	           0xfb60b	                   movzx ecx, byte [rbx]	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x4000104	            0x84c9	                             test cl, cl	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x4000106	            0x75b8	                           jne 0x40000c0	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x4000108	        0x4883c408	                              add rsp, 8	       110	crypt_zip.c	FUNCTION_2
0x400010c	              0x5b	                                 pop rbx	       110	crypt_zip.c	FUNCTION_2
0x400010d	              0x5d	                                 pop rbp	       110	crypt_zip.c	FUNCTION_2
0x400010e	              0xc3	                                     ret	       110	crypt_zip.c	FUNCTION_2
crypt_zip_decode	functions,0:ELSE,0:DO,0:IF,0:CALL,1:FOR,1:SWITCH,0:WHILE,0	37
0x4000197	        0x488b7f08	                mov rdi, qword [rdi + 8]	       146	crypt_zip.c	FUNCTION_4
0x400019b	          0x4885d2	                           test rdx, rdx	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x400019e	            0x747c	                            je 0x400021c	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x40001a0	    0x41b800000000	                              mov r8d, 0	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x40001a6	      0x440fb74f08	               movzx r9d, word [rdi + 8]	       152	crypt_zip.c	FUNCTION_4	FOR_1
0x40001ab	        0x4183c902	                               or r9d, 2	       152	crypt_zip.c	FUNCTION_4	FOR_1
0x40001af	          0x448b17	                   mov r10d, dword [rdi]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001b2	          0x4489c8	                            mov eax, r9d	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001b5	          0x83f001	                              xor eax, 1	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001b8	           0xfb7c0	                           movzx eax, ax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001bb	        0x450fb7c9	                          movzx r9d, r9w	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001bf	        0x410fafc1	                           imul eax, r9d	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001c3	          0xc1e808	                              shr eax, 8	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001c6	        0x42320406	                 xor al, byte [rsi + r8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001ca	        0x42880401	                 mov byte [rcx + r8], al	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001ce	          0x4431d0	                           xor eax, r10d	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001d1	        0x440fb6c8	                           movzx r9d, al	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001d5	            0x8b07	                    mov eax, dword [rdi]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001d7	          0xc1e808	                              shr eax, 8	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001da	    0x4233048d0000	                   xor eax, dword [r9*4]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001e2	            0x8907	                    mov dword [rdi], eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001e4	           0xfb6c0	                           movzx eax, al	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001e7	           0x34704	                add eax, dword [rdi + 4]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001ea	    0x69c005840808	                imul eax, eax, 0x8088405	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001f0	          0x83c001	                              add eax, 1	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001f3	          0x894704	                mov dword [rdi + 4], eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001f6	        0x448b4f08	                mov r9d, dword [rdi + 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001fa	          0xc1e818	                           shr eax, 0x18	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x40001fd	          0x4431c8	                            xor eax, r9d	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000200	           0xfb6c0	                           movzx eax, al	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000203	        0x41c1e908	                              shr r9d, 8	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000207	    0x44330c850000	                  xor r9d, dword [rax*4]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x400020f	        0x44894f08	                mov dword [rdi + 8], r9d	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x4000213	        0x4983c001	                               add r8, 1	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x4000217	          0x4c39c2	                             cmp rdx, r8	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x400021a	            0x758a	                           jne 0x40001a6	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x400021c	            0xf3c3	                                     ret	       150	crypt_zip.c	FUNCTION_4	FOR_1
