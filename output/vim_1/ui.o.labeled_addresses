is_clipboard_needs_update	ELSE,0:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,0	5
0x4000c1e	              0x55	                                push rbp	       633	ui.c	FUNCTION_20
0x4000c1f	          0x4889e5	                            mov rbp, rsp	       633	ui.c	FUNCTION_20
0x4000c22	    0x8b0500000000	            mov eax, dword [0x04000c28] 	       634	ui.c	FUNCTION_20
0x4000c28	              0x5d	                                 pop rbp	       635	ui.c	FUNCTION_20
0x4000c29	              0xc3	                                     ret	       635	ui.c	FUNCTION_20
ui_char_avail	ELSE,0:FOR,0:functions,0:CALL,4:DO,0:WHILE,0:SWITCH,0:IF,2	16
0x400057e	              0x55	                                push rbp	       260	ui.c	FUNCTION_5
0x400057f	          0x4889e5	                            mov rbp, rsp	       260	ui.c	FUNCTION_5
0x4000582	    0x8b0500000000	            mov eax, dword [0x04000588] 	       262	ui.c	FUNCTION_5	IF_1
0x4000588	            0x85c0	                           test eax, eax	       262	ui.c	FUNCTION_5	IF_1
0x400058a	            0x740c	                            je 0x4000598	       262	ui.c	FUNCTION_5	IF_1
0x400058c	      0xe800000000	                          call 0x4000591	       264	ui.c	FUNCTION_5	IF_1	CALL_1
0x4000591	      0xe800000000	                          call 0x4000596	       265	ui.c	FUNCTION_5	IF_1	CALL_2
0x4000596	            0xeb15	                           jmp 0x40005ad	       265	ui.c	FUNCTION_5	IF_1	CALL_2
0x4000598	      0xe800000000	                          call 0x400059d	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x400059d	            0x85c0	                           test eax, eax	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x400059f	            0x7407	                            je 0x40005a8	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x40005a1	      0xb800000000	                              mov eax, 0	       271	ui.c	FUNCTION_5	IF_2
0x40005a6	            0xeb05	                           jmp 0x40005ad	       271	ui.c	FUNCTION_5	IF_2
0x40005a8	      0xe800000000	                          call 0x40005ad	       273	ui.c	FUNCTION_5	CALL_4
0x40005ad	              0x5d	                                 pop rbp	       277	ui.c	FUNCTION_5
0x40005ae	              0xc3	                                     ret	       277	ui.c	FUNCTION_5
clip_x11_request_selection	ELSE,0:FOR,1:functions,0:CALL,11:DO,0:WHILE,1:SWITCH,1:IF,5	125
0x400332e	              0x55	                                push rbp	      2246	ui.c	FUNCTION_66
0x400332f	          0x4889e5	                            mov rbp, rsp	      2246	ui.c	FUNCTION_66
0x4003332	    0x4881ec100100	                          sub rsp, 0x110	      2246	ui.c	FUNCTION_66
0x4003339	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	      2246	ui.c	FUNCTION_66
0x4003340	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	      2246	ui.c	FUNCTION_66
0x4003347	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	      2246	ui.c	FUNCTION_66
0x400334e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	ui.c	FUNCTION_66
0x4003357	        0x488945f8	                mov qword [rbp - 8], rax	      2246	ui.c	FUNCTION_66
0x400335b	            0x31c0	                            xor eax, eax	      2246	ui.c	FUNCTION_66
0x400335d	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      2252	ui.c	FUNCTION_66
0x4003367	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      2254	ui.c	FUNCTION_66	FOR_1
0x4003371	      0xe9da010000	                           jmp 0x4003550	      2254	ui.c	FUNCTION_66	FOR_1
0x4003376	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 4	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400337d	            0x7760	                            ja 0x40033df	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400337f	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003385	    0x488b04c50000	                  mov rax, qword [rax*8]	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400338d	            0xffe0	                                 jmp rax	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400338f	    0x488b05000000	            mov rax, qword [0x04003396] 	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4003396	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400339d	            0xeb4b	                           jmp 0x40033ea	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400339f	    0x488b05000000	            mov rax, qword [0x040033a6] 	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033a6	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033ad	            0xeb3b	                           jmp 0x40033ea	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033af	    0x488b05000000	            mov rax, qword [0x040033b6] 	      2269	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033b6	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2269	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033bd	            0xeb2b	                           jmp 0x40033ea	      2269	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033bf	    0x488b05000000	            mov rax, qword [0x040033c6] 	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033c6	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033cd	            0xeb1b	                           jmp 0x40033ea	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033cf	    0x488b05000000	            mov rax, qword [0x040033d6] 	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033d6	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033dd	            0xeb0b	                           jmp 0x40033ea	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033df	    0x48c78520ffff	           mov qword [rbp - 0xe0], 0x1f 	      2273	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40033ea	    0x488b05000000	            mov rax, qword [0x040033f1] 	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x40033f1	    0x48398520ffff	            cmp qword [rbp - 0xe0], rax 	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x40033f8	            0x750e	                           jne 0x4003408	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x40033fa	    0x8b0500000000	            mov eax, dword [0x04003400] 	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4003400	            0x85c0	                           test eax, eax	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4003402	     0xf8440010000	                            je 0x4003548	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4003408	    0xc70500000000	               mov dword [0x04003412], 2	      2285	ui.c	FUNCTION_66	FOR_1
0x4003412	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4003419	        0x488b7050	            mov rsi, qword [rax + 0x50] 	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x400341d	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4003424	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x400342b	    0x41b900000000	                              mov r9d, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4003431	    0x41b800000000	                              mov r8d, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4003437	      0xb900000000	                              mov ecx, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x400343c	          0x4889c7	                            mov rdi, rax	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x400343f	      0xe800000000	                          call 0x4003444	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4003444	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x400344b	          0x4889c7	                            mov rdi, rax	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x400344e	      0xe800000000	                          call 0x4003453	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x4003453	      0xbf00000000	                              mov edi, 0	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x4003458	      0xe800000000	                          call 0x400345d	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x400345d	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x4003464	      0xe9ba000000	                           jmp 0x4003523	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4003469	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4003470	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4003477	      0xbe1c000000	                           mov esi, 0x1c	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x400347c	          0x4889c7	                            mov rdi, rax	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x400347f	      0xe800000000	                          call 0x4003484	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4003484	            0x85c0	                           test eax, eax	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4003486	            0x753e	                           jne 0x40034c6	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4003488	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x400348f	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x4003496	      0xbe1f000000	                           mov esi, 0x1f	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x400349b	          0x4889c7	                            mov rdi, rax	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x400349e	      0xe800000000	                          call 0x40034a3	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x40034a3	            0x85c0	                           test eax, eax	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x40034a5	            0x751f	                           jne 0x40034c6	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x40034a7	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40034ae	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40034b5	      0xbe1e000000	                           mov esi, 0x1e	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40034ba	          0x4889c7	                            mov rdi, rax	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40034bd	      0xe800000000	                          call 0x40034c2	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40034c2	            0x85c0	                           test eax, eax	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40034c4	            0x7411	                            je 0x40034d7	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x40034c6	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x40034cd	          0x4889c7	                            mov rdi, rax	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x40034d0	      0xe800000000	                          call 0x40034d5	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x40034d5	            0xeb4c	                           jmp 0x4003523	      2312	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2
0x40034d7	      0xbf00000000	                              mov edi, 0	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x40034dc	      0xe800000000	                          call 0x40034e1	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x40034e1	          0x4889c2	                            mov rdx, rax	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x40034e4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x40034eb	        0x4883c002	                              add rax, 2	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x40034ef	          0x4839c2	                            cmp rdx, rax	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x40034f2	            0x7e0c	                           jle 0x4003500	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x40034f4	    0xc7851cffffff	               mov dword [rbp - 0xe4], 1	      2322	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3
0x40034fe	            0xeb32	                           jmp 0x4003532	      2323	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3
0x4003500	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x4003507	      0xbe00000000	                              mov esi, 0	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x400350c	          0x4889c7	                            mov rdi, rax	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x400350f	      0xe800000000	                          call 0x4003514	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x4003514	      0xbe01000000	                              mov esi, 1	      2330	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_10
0x4003519	      0xbf01000000	                              mov edi, 1	      2330	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_10
0x400351e	      0xe800000000	                          call 0x4003523	      2330	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_10
0x4003523	    0x8b0500000000	            mov eax, dword [0x04003529] 	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4003529	          0x83f802	                              cmp eax, 2	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x400352c	     0xf8437ffffff	                            je 0x4003469	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4003532	    0x8b0500000000	            mov eax, dword [0x04003538] 	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x4003538	          0x83f801	                              cmp eax, 1	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x400353b	            0x743e	                            je 0x400357b	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x400353d	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2338	ui.c	FUNCTION_66	FOR_1	IF_5
0x4003544	            0x7519	                           jne 0x400355f	      2338	ui.c	FUNCTION_66	FOR_1	IF_5
0x4003546	            0xeb01	                           jmp 0x4003549	      2338	ui.c	FUNCTION_66	FOR_1	IF_5
0x4003548	              0x90	                                     nop	      2283	ui.c	FUNCTION_66	FOR_1	IF_1
0x4003549	    0x838518ffffff	               add dword [rbp - 0xe8], 1	      2260	ui.c	FUNCTION_66	FOR_1
0x4003550	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 5	      2254	ui.c	FUNCTION_66	FOR_1
0x4003557	     0xf8e19feffff	                           jle 0x4003376	      2254	ui.c	FUNCTION_66	FOR_1
0x400355d	            0xeb01	                           jmp 0x4003560	      2254	ui.c	FUNCTION_66	FOR_1
0x400355f	              0x90	                                     nop	      2339	ui.c	FUNCTION_66	FOR_1	IF_5
0x4003560	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      2343	ui.c	FUNCTION_66	CALL_11
0x4003567	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2343	ui.c	FUNCTION_66	CALL_11
0x400356e	          0x4889d6	                            mov rsi, rdx	      2343	ui.c	FUNCTION_66	CALL_11
0x4003571	          0x4889c7	                            mov rdi, rax	      2343	ui.c	FUNCTION_66	CALL_11
0x4003574	      0xe800000000	                          call 0x4003579	      2343	ui.c	FUNCTION_66	CALL_11
0x4003579	            0xeb01	                           jmp 0x400357c	      2343	ui.c	FUNCTION_66	CALL_11
0x400357b	              0x90	                                     nop	      2334	ui.c	FUNCTION_66	FOR_1	IF_4
0x400357c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2344	ui.c	FUNCTION_66
0x4003580	    0x644833042528	                xor rax, qword fs:[0x28]	      2344	ui.c	FUNCTION_66
0x4003589	            0x7405	                            je 0x4003590	      2344	ui.c	FUNCTION_66
0x400358b	      0xe800000000	                          call 0x4003590	      2344	ui.c	FUNCTION_66
0x4003590	              0xc9	                                   leave	      2344	ui.c	FUNCTION_66
0x4003591	              0xc3	                                     ret	      2344	ui.c	FUNCTION_66
ui_inchar	ELSE,1:FOR,0:functions,0:CALL,14:DO,0:WHILE,0:SWITCH,0:IF,11	150
0x400022b	              0x55	                                push rbp	       121	ui.c	FUNCTION_3
0x400022c	          0x4889e5	                            mov rbp, rsp	       121	ui.c	FUNCTION_3
0x400022f	              0x53	                                push rbx	       121	ui.c	FUNCTION_3
0x4000230	        0x4883ec38	                           sub rsp, 0x38	       121	ui.c	FUNCTION_3
0x4000234	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       121	ui.c	FUNCTION_3
0x4000238	          0x8975d4	             mov dword [rbp - 0x2c], esi	       121	ui.c	FUNCTION_3
0x400023b	        0x488955c8	             mov qword [rbp - 0x38], rdx	       121	ui.c	FUNCTION_3
0x400023f	          0x894dd0	             mov dword [rbp - 0x30], ecx	       121	ui.c	FUNCTION_3
0x4000242	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       122	ui.c	FUNCTION_3
0x4000249	    0x488b05000000	            mov rax, qword [0x04000250] 	       128	ui.c	FUNCTION_3	IF_1
0x4000250	          0x4885c0	                           test rax, rax	       128	ui.c	FUNCTION_3	IF_1
0x4000253	     0xf84b0000000	                            je 0x4000309	       128	ui.c	FUNCTION_3	IF_1
0x4000259	    0x8b1500000000	            mov edx, dword [0x0400025f] 	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x400025f	    0x8b0500000000	            mov eax, dword [0x04000265] 	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4000265	            0x29c2	                            sub edx, eax	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4000267	            0x89d0	                            mov eax, edx	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4000269	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x400026c	            0x7f5b	                            jg 0x40002c9	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x400026e	    0x8b0500000000	            mov eax, dword [0x04000274] 	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x4000274	          0x4863d0	                         movsxd rdx, eax	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x4000277	    0x488b0d000000	            mov rcx, qword [0x0400027e] 	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x400027e	    0x8b0500000000	            mov eax, dword [0x04000284] 	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x4000284	            0x4898	                                    cdqe	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x4000286	          0x4801c1	                            add rcx, rax	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x4000289	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x400028d	          0x4889ce	                            mov rsi, rcx	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x4000290	          0x4889c7	                            mov rdi, rax	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x4000293	      0xe800000000	                          call 0x4000298	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x4000298	    0x488b05000000	            mov rax, qword [0x0400029f] 	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x400029f	          0x4885c0	                           test rax, rax	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40002a2	            0x741a	                            je 0x40002be	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40002a4	    0x488b05000000	            mov rax, qword [0x040002ab] 	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40002ab	          0x4889c7	                            mov rdi, rax	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40002ae	      0xe800000000	                          call 0x40002b3	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40002b3	    0x48c705000000	               mov qword [0x040002be], 0	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40002be	    0x8b0500000000	            mov eax, dword [0x040002c4] 	       134	ui.c	FUNCTION_3	IF_1	IF_2
0x40002c4	      0xe9b4010000	                           jmp 0x400047d	       134	ui.c	FUNCTION_3	IF_1	IF_2
0x40002c9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x40002cc	          0x4863d0	                         movsxd rdx, eax	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x40002cf	    0x488b0d000000	            mov rcx, qword [0x040002d6] 	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x40002d6	    0x8b0500000000	            mov eax, dword [0x040002dc] 	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x40002dc	            0x4898	                                    cdqe	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x40002de	          0x4801c1	                            add rcx, rax	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x40002e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x40002e5	          0x4889ce	                            mov rsi, rcx	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x40002e8	          0x4889c7	                            mov rdi, rax	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x40002eb	      0xe800000000	                          call 0x40002f0	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x40002f0	    0x8b1500000000	            mov edx, dword [0x040002f6] 	       137	ui.c	FUNCTION_3	IF_1
0x40002f6	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       137	ui.c	FUNCTION_3	IF_1
0x40002f9	             0x1d0	                            add eax, edx	       137	ui.c	FUNCTION_3	IF_1
0x40002fb	    0x890500000000	            mov dword [0x04000301], eax 	       137	ui.c	FUNCTION_3	IF_1
0x4000301	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       138	ui.c	FUNCTION_3	IF_1
0x4000304	      0xe974010000	                           jmp 0x400047d	       138	ui.c	FUNCTION_3	IF_1
0x4000309	    0x8b0500000000	            mov eax, dword [0x0400030f] 	       143	ui.c	FUNCTION_3	IF_3
0x400030f	          0x83f801	                              cmp eax, 1	       143	ui.c	FUNCTION_3	IF_3
0x4000312	            0x750c	                           jne 0x4000320	       143	ui.c	FUNCTION_3	IF_3
0x4000314	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       143	ui.c	FUNCTION_3	IF_3
0x4000319	            0x7405	                            je 0x4000320	       143	ui.c	FUNCTION_3	IF_3
0x400031b	      0xe800000000	                          call 0x4000320	       144	ui.c	FUNCTION_3	CALL_4
0x4000320	      0xe800000000	                          call 0x4000325	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4000325	            0x85c0	                           test eax, eax	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4000327	     0xf8492000000	                            je 0x40003bf	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x400032d	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4000332	            0x7807	                            js 0x400033b	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4000334	      0x48837dc809	               cmp qword [rbp - 0x38], 9	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4000339	            0x7e06	                           jle 0x4000341	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x400033b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x400033f	            0xeb05	                           jmp 0x4000346	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4000341	      0xb80a000000	                            mov eax, 0xa	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4000346	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4000349	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x400034c	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4000350	            0x89d1	                            mov ecx, edx	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4000352	          0x4889c2	                            mov rdx, rax	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4000355	      0xe800000000	                          call 0x400035a	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x400035a	          0x8945ec	             mov dword [rbp - 0x14], eax	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x400035d	        0x837dec00	               cmp dword [rbp - 0x14], 0	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4000361	     0xf8ffc000000	                            jg 0x4000463	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4000367	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x400036a	            0x89c7	                            mov edi, eax	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x400036c	      0xe800000000	                          call 0x4000371	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4000371	            0x85c0	                           test eax, eax	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4000373	     0xf85ea000000	                           jne 0x4000463	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4000379	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x400037e	     0xf89df000000	                           jns 0x4000463	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4000384	      0x48837dc8ff	cmp qword [rbp - 0x38], 0xffffffffffffffff	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4000389	            0x7521	                           jne 0x40003ac	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x400038b	    0x8b0500000000	            mov eax, dword [0x04000391] 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4000391	          0x83c001	                              add eax, 1	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4000394	    0x890500000000	            mov dword [0x0400039a], eax 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x400039a	    0x8b0500000000	            mov eax, dword [0x040003a0] 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x40003a0	      0x3de8030000	                          cmp eax, 0x3e8	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x40003a5	            0x7505	                           jne 0x40003ac	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x40003a7	      0xe800000000	                          call 0x40003ac	       163	ui.c	FUNCTION_3	IF_4	CALL_8
0x40003ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       164	ui.c	FUNCTION_3	IF_4
0x40003b0	          0xc6000d	                     mov byte [rax], 0xd	       164	ui.c	FUNCTION_3	IF_4
0x40003b3	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       165	ui.c	FUNCTION_3	IF_4
0x40003ba	      0xe9a4000000	                           jmp 0x4000463	       166	ui.c	FUNCTION_3	IF_4
0x40003bf	      0x48837dc8ff	cmp qword [rbp - 0x38], 0xffffffffffffffff	       171	ui.c	FUNCTION_3	IF_7
0x40003c4	            0x7407	                            je 0x40003cd	       171	ui.c	FUNCTION_3	IF_7
0x40003c6	      0x48837dc864	           cmp qword [rbp - 0x38], 0x64 	       171	ui.c	FUNCTION_3	IF_7
0x40003cb	            0x7e36	                           jle 0x4000403	       171	ui.c	FUNCTION_3	IF_7
0x40003cd	      0xbffeffffff	                     mov edi, 0xfffffffe	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x40003d2	      0xe800000000	                          call 0x40003d7	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x40003d7	    0x488b05000000	            mov rax, qword [0x040003de] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x40003de	    0x8b90401c0000	          mov edx, dword [rax + 0x1c40] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x40003e4	    0x8b0500000000	            mov eax, dword [0x040003ea] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x40003ea	            0x89d3	                            mov ebx, edx	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x40003ec	             0x9c3	                             or ebx, eax	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x40003ee	      0xe800000000	                          call 0x40003f3	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x40003f3	            0x21d8	                            and eax, ebx	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x40003f5	            0x85c0	                           test eax, eax	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x40003f7	            0x740a	                            je 0x4000403	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x40003f9	    0xc70500000000	               mov dword [0x04000403], 0	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4000403	    0x8b0500000000	            mov eax, dword [0x04000409] 	       183	ui.c	FUNCTION_3	IF_9
0x4000409	            0x85c0	                           test eax, eax	       183	ui.c	FUNCTION_3	IF_9
0x400040b	            0x741b	                            je 0x4000428	       183	ui.c	FUNCTION_3	IF_9
0x400040d	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       184	ui.c	FUNCTION_3	CALL_11
0x4000410	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       184	ui.c	FUNCTION_3	CALL_11
0x4000414	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	       184	ui.c	FUNCTION_3	CALL_11
0x4000417	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       184	ui.c	FUNCTION_3	CALL_11
0x400041b	          0x4889c7	                            mov rdi, rax	       184	ui.c	FUNCTION_3	CALL_11
0x400041e	      0xe800000000	                          call 0x4000423	       184	ui.c	FUNCTION_3	CALL_11
0x4000423	          0x8945ec	             mov dword [rbp - 0x14], eax	       184	ui.c	FUNCTION_3	CALL_11
0x4000426	            0xeb19	                           jmp 0x4000441	       184	ui.c	FUNCTION_3	CALL_11
0x4000428	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       190	ui.c	FUNCTION_3	CALL_12
0x400042b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       190	ui.c	FUNCTION_3	CALL_12
0x400042f	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	       190	ui.c	FUNCTION_3	CALL_12
0x4000432	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       190	ui.c	FUNCTION_3	CALL_12
0x4000436	          0x4889c7	                            mov rdi, rax	       190	ui.c	FUNCTION_3	CALL_12
0x4000439	      0xe800000000	                          call 0x400043e	       190	ui.c	FUNCTION_3	CALL_12
0x400043e	          0x8945ec	             mov dword [rbp - 0x14], eax	       190	ui.c	FUNCTION_3	CALL_12
0x4000441	      0x48837dc8ff	cmp qword [rbp - 0x38], 0xffffffffffffffff	       193	ui.c	FUNCTION_3	IF_10
0x4000446	            0x7407	                            je 0x400044f	       193	ui.c	FUNCTION_3	IF_10
0x4000448	      0x48837dc864	           cmp qword [rbp - 0x38], 0x64 	       193	ui.c	FUNCTION_3	IF_10
0x400044d	            0x7e0a	                           jle 0x4000459	       193	ui.c	FUNCTION_3	IF_10
0x400044f	      0xbfffffffff	                     mov edi, 0xffffffff	       195	ui.c	FUNCTION_3	CALL_13
0x4000454	      0xe800000000	                          call 0x4000459	       195	ui.c	FUNCTION_3	CALL_13
0x4000459	    0xc70500000000	               mov dword [0x04000463], 1	       197	ui.c	FUNCTION_3
0x4000463	    0x8b0500000000	            mov eax, dword [0x04000469] 	       203	ui.c	FUNCTION_3	IF_11
0x4000469	          0x83f801	                              cmp eax, 1	       203	ui.c	FUNCTION_3	IF_11
0x400046c	            0x750c	                           jne 0x400047a	       203	ui.c	FUNCTION_3	IF_11
0x400046e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       203	ui.c	FUNCTION_3	IF_11
0x4000473	            0x7405	                            je 0x400047a	       203	ui.c	FUNCTION_3	IF_11
0x4000475	      0xe800000000	                          call 0x400047a	       204	ui.c	FUNCTION_3	CALL_14
0x400047a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       206	ui.c	FUNCTION_3
0x400047d	        0x4883c438	                           add rsp, 0x38	       207	ui.c	FUNCTION_3
0x4000481	              0x5b	                                 pop rbx	       207	ui.c	FUNCTION_3
0x4000482	              0x5d	                                 pop rbp	       207	ui.c	FUNCTION_3
0x4000483	              0xc3	                                     ret	       207	ui.c	FUNCTION_3
clip_invert_area	ELSE,2:FOR,0:functions,0:CALL,5:DO,0:WHILE,0:SWITCH,0:IF,7	99
0x40019ab	              0x55	                                push rbp	      1130	ui.c	ELSE_4	FUNCTION_33
0x40019ac	          0x4889e5	                            mov rbp, rsp	      1130	ui.c	ELSE_4	FUNCTION_33
0x40019af	        0x4883ec30	                           sub rsp, 0x30	      1130	ui.c	ELSE_4	FUNCTION_33
0x40019b3	          0x897dec	             mov dword [rbp - 0x14], edi	      1130	ui.c	ELSE_4	FUNCTION_33
0x40019b6	          0x8975e8	             mov dword [rbp - 0x18], esi	      1130	ui.c	ELSE_4	FUNCTION_33
0x40019b9	          0x8955e4	             mov dword [rbp - 0x1c], edx	      1130	ui.c	ELSE_4	FUNCTION_33
0x40019bc	          0x894de0	             mov dword [rbp - 0x20], ecx	      1130	ui.c	ELSE_4	FUNCTION_33
0x40019bf	        0x448945dc	             mov dword [rbp - 0x24], r8d	      1130	ui.c	ELSE_4	FUNCTION_33
0x40019c3	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1131	ui.c	ELSE_4	FUNCTION_33
0x40019ca	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      1133	ui.c	ELSE_4	FUNCTION_33	IF_1
0x40019ce	            0x7507	                           jne 0x40019d7	      1133	ui.c	ELSE_4	FUNCTION_33	IF_1
0x40019d0	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      1134	ui.c	ELSE_4	FUNCTION_33	IF_1
0x40019d7	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x40019da	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x40019dd	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x40019e0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x40019e3	            0x89c7	                            mov edi, eax	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x40019e5	      0xe897f4ffff	               call sym.clip_compare_pos	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x40019ea	            0x85c0	                           test eax, eax	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x40019ec	            0x7e26	                           jle 0x4001a14	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x40019ee	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1141	ui.c	ELSE_4	FUNCTION_33	IF_2
0x40019f1	          0x8945f8	                mov dword [rbp - 8], eax	      1141	ui.c	ELSE_4	FUNCTION_33	IF_2
0x40019f4	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1142	ui.c	ELSE_4	FUNCTION_33	IF_2
0x40019f7	          0x8945fc	                mov dword [rbp - 4], eax	      1142	ui.c	ELSE_4	FUNCTION_33	IF_2
0x40019fa	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1143	ui.c	ELSE_4	FUNCTION_33	IF_2
0x40019fd	          0x8945ec	             mov dword [rbp - 0x14], eax	      1143	ui.c	ELSE_4	FUNCTION_33	IF_2
0x4001a00	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1144	ui.c	ELSE_4	FUNCTION_33	IF_2
0x4001a03	          0x8945e8	             mov dword [rbp - 0x18], eax	      1144	ui.c	ELSE_4	FUNCTION_33	IF_2
0x4001a06	          0x8b45f8	                mov eax, dword [rbp - 8]	      1145	ui.c	ELSE_4	FUNCTION_33	IF_2
0x4001a09	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1145	ui.c	ELSE_4	FUNCTION_33	IF_2
0x4001a0c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1146	ui.c	ELSE_4	FUNCTION_33	IF_2
0x4001a0f	          0x8945e0	             mov dword [rbp - 0x20], eax	      1146	ui.c	ELSE_4	FUNCTION_33	IF_2
0x4001a12	            0xeb0d	                           jmp 0x4001a21	      1146	ui.c	ELSE_4	FUNCTION_33	IF_2
0x4001a14	        0x837ddc03	               cmp dword [rbp - 0x24], 3	      1148	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x4001a18	            0x7507	                           jne 0x4001a21	      1148	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x4001a1a	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      1149	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x4001a21	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1152	ui.c	ELSE_4	FUNCTION_33	IF_4
0x4001a24	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1152	ui.c	ELSE_4	FUNCTION_33	IF_4
0x4001a27	            0x7527	                           jne 0x4001a50	      1152	ui.c	ELSE_4	FUNCTION_33	IF_4
0x4001a29	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4001a2c	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4001a2f	            0x89c2	                            mov edx, eax	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4001a31	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4001a34	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4001a37	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4001a3a	          0x4189c8	                            mov r8d, ecx	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4001a3d	            0x89d1	                            mov ecx, edx	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4001a3f	      0xba01000000	                              mov edx, 1	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4001a44	            0x89c7	                            mov edi, eax	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4001a46	      0xe8a1000000	          call sym.clip_invert_rectangle	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4001a4b	      0xe999000000	                           jmp 0x4001ae9	      1177	ui.c	ELSE_4	FUNCTION_33
0x4001a50	        0x837de800	               cmp dword [rbp - 0x18], 0	      1159	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x4001a54	            0x7e2a	                           jle 0x4001a80	      1159	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x4001a56	    0x488b05000000	            mov rax, qword [0x04001a5d] 	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x4001a5d	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x4001a60	            0x89c2	                            mov edx, eax	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x4001a62	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x4001a65	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x4001a68	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x4001a6b	          0x4189c8	                            mov r8d, ecx	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x4001a6e	            0x89d1	                            mov ecx, edx	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x4001a70	      0xba01000000	                              mov edx, 1	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x4001a75	            0x89c7	                            mov edi, eax	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x4001a77	      0xe870000000	          call sym.clip_invert_rectangle	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x4001a7c	        0x8345ec01	               add dword [rbp - 0x14], 1	      1162	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x4001a80	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x4001a83	            0x4898	                                    cdqe	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x4001a85	    0x488b15000000	            mov rdx, qword [0x04001a8c] 	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x4001a8c	        0x4883ea01	                              sub rdx, 1	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x4001a90	          0x4839d0	                            cmp rax, rdx	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x4001a93	            0x7d23	                           jge 0x4001ab8	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x4001a95	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4001a98	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4001a9b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4001a9e	          0x4189c8	                            mov r8d, ecx	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4001aa1	            0x89d1	                            mov ecx, edx	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4001aa3	      0xba01000000	                              mov edx, 1	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4001aa8	      0xbe00000000	                              mov esi, 0	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4001aad	            0x89c7	                            mov edi, eax	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4001aaf	      0xe838000000	          call sym.clip_invert_rectangle	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4001ab4	        0x836de401	               sub dword [rbp - 0x1c], 1	      1169	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x4001ab8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1173	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7
0x4001abb	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1173	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7
0x4001abe	            0x7c29	                            jl 0x4001ae9	      1173	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7
0x4001ac0	    0x488b05000000	            mov rax, qword [0x04001ac7] 	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001ac7	            0x89c6	                            mov esi, eax	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001ac9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001acc	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001acf	          0x8d5001	                      lea edx, [rax + 1]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001ad2	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001ad5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001ad8	          0x4189c8	                            mov r8d, ecx	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001adb	            0x89f1	                            mov ecx, esi	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001add	      0xbe00000000	                              mov esi, 0	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001ae2	            0x89c7	                            mov edi, eax	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001ae4	      0xe803000000	          call sym.clip_invert_rectangle	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4001ae9	              0x90	                                     nop	      1177	ui.c	ELSE_4	FUNCTION_33
0x4001aea	              0xc9	                                   leave	      1177	ui.c	ELSE_4	FUNCTION_33
0x4001aeb	              0xc3	                                     ret	      1177	ui.c	ELSE_4	FUNCTION_33
x11_setup_selection	ELSE,0:FOR,0:functions,0:CALL,1:DO,0:WHILE,0:SWITCH,0:IF,0	14
0x4002f79	              0x55	                                push rbp	      2123	ui.c	ELSE_1	FUNCTION_64
0x4002f7a	          0x4889e5	                            mov rbp, rsp	      2123	ui.c	ELSE_1	FUNCTION_64
0x4002f7d	        0x4883ec10	                           sub rsp, 0x10	      2123	ui.c	ELSE_1	FUNCTION_64
0x4002f81	        0x48897df8	                mov qword [rbp - 8], rdi	      2123	ui.c	ELSE_1	FUNCTION_64
0x4002f85	        0x488b45f8	                mov rax, qword [rbp - 8]	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002f89	    0x41b800000000	                              mov r8d, 0	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002f8f	      0xb900000000	                              mov ecx, 0	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002f94	      0xba00000000	                              mov edx, 0	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002f99	      0xbe00004000	                       mov esi, 0x400000	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002f9e	          0x4889c7	                            mov rdi, rax	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002fa1	      0xe800000000	                          call 0x4002fa6	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002fa6	              0x90	                                     nop	      2126	ui.c	ELSE_1	FUNCTION_64
0x4002fa7	              0xc9	                                   leave	      2126	ui.c	ELSE_1	FUNCTION_64
0x4002fa8	              0xc3	                                     ret	      2126	ui.c	ELSE_1	FUNCTION_64
get_fpos_of_mouse	ELSE,0:FOR,0:functions,0:CALL,3:DO,0:WHILE,0:SWITCH,0:IF,7	86
0x4004f2d	              0x55	                                push rbp	      3213	ui.c	FUNCTION_78
0x4004f2e	          0x4889e5	                            mov rbp, rsp	      3213	ui.c	FUNCTION_78
0x4004f31	        0x4883ec30	                           sub rsp, 0x30	      3213	ui.c	FUNCTION_78
0x4004f35	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3213	ui.c	FUNCTION_78
0x4004f39	    0x64488b042528	                mov rax, qword fs:[0x28]	      3213	ui.c	FUNCTION_78
0x4004f42	        0x488945f8	                mov qword [rbp - 8], rax	      3213	ui.c	FUNCTION_78
0x4004f46	            0x31c0	                            xor eax, eax	      3213	ui.c	FUNCTION_78
0x4004f48	    0x8b0500000000	            mov eax, dword [0x04004f4e] 	      3215	ui.c	FUNCTION_78
0x4004f4e	          0x8945e8	             mov dword [rbp - 0x18], eax	      3215	ui.c	FUNCTION_78
0x4004f51	    0x8b0500000000	            mov eax, dword [0x04004f57] 	      3216	ui.c	FUNCTION_78
0x4004f57	          0x8945ec	             mov dword [rbp - 0x14], eax	      3216	ui.c	FUNCTION_78
0x4004f5a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3218	ui.c	FUNCTION_78	IF_1
0x4004f5d	            0x85c0	                           test eax, eax	      3218	ui.c	FUNCTION_78	IF_1
0x4004f5f	            0x7807	                            js 0x4004f68	      3218	ui.c	FUNCTION_78	IF_1
0x4004f61	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3218	ui.c	FUNCTION_78	IF_1
0x4004f64	            0x85c0	                           test eax, eax	      3218	ui.c	FUNCTION_78	IF_1
0x4004f66	            0x790a	                           jns 0x4004f72	      3218	ui.c	FUNCTION_78	IF_1
0x4004f68	      0xb800000000	                              mov eax, 0	      3219	ui.c	FUNCTION_78	IF_1
0x4004f6d	      0xe9e6000000	                           jmp 0x4005058	      3219	ui.c	FUNCTION_78	IF_1
0x4004f72	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      3222	ui.c	FUNCTION_78	CALL_1
0x4004f76	        0x488d45e8	                   lea rax, [rbp - 0x18]	      3222	ui.c	FUNCTION_78	CALL_1
0x4004f7a	          0x4889d6	                            mov rsi, rdx	      3222	ui.c	FUNCTION_78	CALL_1
0x4004f7d	          0x4889c7	                            mov rdi, rax	      3222	ui.c	FUNCTION_78	CALL_1
0x4004f80	      0xe800000000	                          call 0x4004f85	      3222	ui.c	FUNCTION_78	CALL_1
0x4004f85	        0x488945f0	             mov qword [rbp - 0x10], rax	      3222	ui.c	FUNCTION_78	CALL_1
0x4004f89	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3223	ui.c	FUNCTION_78	IF_2
0x4004f8e	            0x750a	                           jne 0x4004f9a	      3223	ui.c	FUNCTION_78	IF_2
0x4004f90	      0xb800000000	                              mov eax, 0	      3224	ui.c	FUNCTION_78	IF_2
0x4004f95	      0xe9be000000	                           jmp 0x4005058	      3224	ui.c	FUNCTION_78	IF_2
0x4004f9a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3228	ui.c	FUNCTION_78	IF_3
0x4004f9e	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      3228	ui.c	FUNCTION_78	IF_3
0x4004fa4	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3228	ui.c	FUNCTION_78	IF_3
0x4004fa7	            0x39c2	                            cmp edx, eax	      3228	ui.c	FUNCTION_78	IF_3
0x4004fa9	            0x7f0a	                            jg 0x4004fb5	      3228	ui.c	FUNCTION_78	IF_3
0x4004fab	      0xb802000000	                              mov eax, 2	      3229	ui.c	FUNCTION_78	IF_3
0x4004fb0	      0xe9a3000000	                           jmp 0x4005058	      3229	ui.c	FUNCTION_78	IF_3
0x4004fb5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3230	ui.c	FUNCTION_78	IF_4
0x4004fb9	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      3230	ui.c	FUNCTION_78	IF_4
0x4004fbf	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3230	ui.c	FUNCTION_78	IF_4
0x4004fc2	            0x39c2	                            cmp edx, eax	      3230	ui.c	FUNCTION_78	IF_4
0x4004fc4	            0x7f0a	                            jg 0x4004fd0	      3230	ui.c	FUNCTION_78	IF_4
0x4004fc6	      0xb804000000	                              mov eax, 4	      3231	ui.c	FUNCTION_78	IF_4
0x4004fcb	      0xe988000000	                           jmp 0x4005058	      3231	ui.c	FUNCTION_78	IF_4
0x4004fd0	    0x488b05000000	            mov rax, qword [0x04004fd7] 	      3233	ui.c	FUNCTION_78	IF_5
0x4004fd7	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      3233	ui.c	FUNCTION_78	IF_5
0x4004fdb	            0x7407	                            je 0x4004fe4	      3233	ui.c	FUNCTION_78	IF_5
0x4004fdd	      0xb800000000	                              mov eax, 0	      3234	ui.c	FUNCTION_78	IF_5
0x4004fe2	            0xeb74	                           jmp 0x4005058	      3234	ui.c	FUNCTION_78	IF_5
0x4004fe4	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4004fe8	    0x488b05000000	            mov rax, qword [0x04004fef] 	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4004fef	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4004ff3	        0x488d75e8	                   lea rsi, [rbp - 0x18]	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4004ff7	          0x4889c7	                            mov rdi, rax	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4004ffa	      0xe800000000	                          call 0x4004fff	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4004fff	            0x85c0	                           test eax, eax	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4005001	            0x7407	                            je 0x400500a	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4005003	      0xb802000000	                              mov eax, 2	      3238	ui.c	FUNCTION_78	IF_6
0x4005008	            0xeb4e	                           jmp 0x4005058	      3238	ui.c	FUNCTION_78	IF_6
0x400500a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3240	ui.c	FUNCTION_78	CALL_3
0x400500d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3240	ui.c	FUNCTION_78	CALL_3
0x4005011	          0x488b08	                    mov rcx, qword [rax]	      3240	ui.c	FUNCTION_78	CALL_3
0x4005014	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3240	ui.c	FUNCTION_78	CALL_3
0x4005018	          0x4889ce	                            mov rsi, rcx	      3240	ui.c	FUNCTION_78	CALL_3
0x400501b	          0x4889c7	                            mov rdi, rax	      3240	ui.c	FUNCTION_78	CALL_3
0x400501e	      0xe800000000	                          call 0x4005023	      3240	ui.c	FUNCTION_78	CALL_3
0x4005023	            0x89c2	                            mov edx, eax	      3240	ui.c	FUNCTION_78	CALL_3
0x4005025	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3240	ui.c	FUNCTION_78	CALL_3
0x4005029	          0x895008	                mov dword [rax + 8], edx	      3240	ui.c	FUNCTION_78	CALL_3
0x400502c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3242	ui.c	FUNCTION_78	IF_7
0x4005030	          0x8b4008	                mov eax, dword [rax + 8]	      3242	ui.c	FUNCTION_78	IF_7
0x4005033	            0x85c0	                           test eax, eax	      3242	ui.c	FUNCTION_78	IF_7
0x4005035	            0x7e11	                           jle 0x4005048	      3242	ui.c	FUNCTION_78	IF_7
0x4005037	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3243	ui.c	FUNCTION_78	IF_7
0x400503b	          0x8b4008	                mov eax, dword [rax + 8]	      3243	ui.c	FUNCTION_78	IF_7
0x400503e	          0x8d50ff	                      lea edx, [rax - 1]	      3243	ui.c	FUNCTION_78	IF_7
0x4005041	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3243	ui.c	FUNCTION_78	IF_7
0x4005045	          0x895008	                mov dword [rax + 8], edx	      3243	ui.c	FUNCTION_78	IF_7
0x4005048	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3245	ui.c	FUNCTION_78
0x400504c	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3245	ui.c	FUNCTION_78
0x4005053	      0xb801000000	                              mov eax, 1	      3247	ui.c	FUNCTION_78
0x4005058	        0x488b7df8	                mov rdi, qword [rbp - 8]	      3248	ui.c	FUNCTION_78
0x400505c	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3248	ui.c	FUNCTION_78
0x4005065	            0x7405	                            je 0x400506c	      3248	ui.c	FUNCTION_78
0x4005067	      0xe800000000	                          call 0x400506c	      3248	ui.c	FUNCTION_78
0x400506c	              0xc9	                                   leave	      3248	ui.c	FUNCTION_78
0x400506d	              0xc3	                                     ret	      3248	ui.c	FUNCTION_78
ui_breakcheck_force	ELSE,1:FOR,0:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0:IF,1	22
0x40006e5	              0x55	                                push rbp	       405	ui.c	FUNCTION_13
0x40006e6	          0x4889e5	                            mov rbp, rsp	       405	ui.c	FUNCTION_13
0x40006e9	        0x4883ec20	                           sub rsp, 0x20	       405	ui.c	FUNCTION_13
0x40006ed	          0x897dec	             mov dword [rbp - 0x14], edi	       405	ui.c	FUNCTION_13
0x40006f0	    0x8b0500000000	            mov eax, dword [0x040006f6] 	       406	ui.c	FUNCTION_13
0x40006f6	          0x8945fc	                mov dword [rbp - 4], eax	       406	ui.c	FUNCTION_13
0x40006f9	    0x8b0500000000	            mov eax, dword [0x040006ff] 	       409	ui.c	FUNCTION_13
0x40006ff	          0x83c001	                              add eax, 1	       409	ui.c	FUNCTION_13
0x4000702	    0x890500000000	            mov dword [0x04000708], eax 	       409	ui.c	FUNCTION_13
0x4000708	    0x8b0500000000	            mov eax, dword [0x0400070e] 	       412	ui.c	FUNCTION_13	IF_1
0x400070e	            0x85c0	                           test eax, eax	       412	ui.c	FUNCTION_13	IF_1
0x4000710	            0x7407	                            je 0x4000719	       412	ui.c	FUNCTION_13	IF_1
0x4000712	      0xe800000000	                          call 0x4000717	       413	ui.c	FUNCTION_13	CALL_1
0x4000717	            0xeb0a	                           jmp 0x4000723	       413	ui.c	FUNCTION_13	CALL_1
0x4000719	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       416	ui.c	FUNCTION_13	CALL_2
0x400071c	            0x89c7	                            mov edi, eax	       416	ui.c	FUNCTION_13	CALL_2
0x400071e	      0xe800000000	                          call 0x4000723	       416	ui.c	FUNCTION_13	CALL_2
0x4000723	          0x8b45fc	                mov eax, dword [rbp - 4]	       418	ui.c	FUNCTION_13
0x4000726	    0x890500000000	            mov dword [0x0400072c], eax 	       418	ui.c	FUNCTION_13
0x400072c	              0x90	                                     nop	       419	ui.c	FUNCTION_13
0x400072d	              0xc9	                                   leave	       419	ui.c	FUNCTION_13
0x400072e	              0xc3	                                     ret	       419	ui.c	FUNCTION_13
ui_wait_for_chars_or_timer	ELSE,0:FOR,0:functions,0:CALL,3:DO,0:WHILE,1:SWITCH,0:IF,6	70
0x4000484	              0x55	                                push rbp	       221	ui.c	FUNCTION_4
0x4000485	          0x4889e5	                            mov rbp, rsp	       221	ui.c	FUNCTION_4
0x4000488	        0x4883ec30	                           sub rsp, 0x30	       221	ui.c	FUNCTION_4
0x400048c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       221	ui.c	FUNCTION_4
0x4000490	        0x488975e0	             mov qword [rbp - 0x20], rsi	       221	ui.c	FUNCTION_4
0x4000494	        0x488955d8	             mov qword [rbp - 0x28], rdx	       221	ui.c	FUNCTION_4
0x4000498	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       221	ui.c	FUNCTION_4
0x400049b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       223	ui.c	FUNCTION_4
0x400049f	        0x488945f8	                mov qword [rbp - 8], rax	       223	ui.c	FUNCTION_4
0x40004a3	    0x8b0500000000	            mov eax, dword [0x040004a9] 	       224	ui.c	FUNCTION_4
0x40004a9	          0x8945f4	              mov dword [rbp - 0xc], eax	       224	ui.c	FUNCTION_4
0x40004ac	      0x48837de800	               cmp qword [rbp - 0x18], 0	       227	ui.c	FUNCTION_4	IF_1
0x40004b1	     0xf88aa000000	                            js 0x4000561	       227	ui.c	FUNCTION_4	IF_1
0x40004b7	      0x48837de809	               cmp qword [rbp - 0x18], 9	       227	ui.c	FUNCTION_4	IF_1
0x40004bc	     0xf8f9f000000	                            jg 0x4000561	       227	ui.c	FUNCTION_4	IF_1
0x40004c2	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       228	ui.c	FUNCTION_4	CALL_1
0x40004c5	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       228	ui.c	FUNCTION_4	CALL_1
0x40004c9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       228	ui.c	FUNCTION_4	CALL_1
0x40004cd	      0xbe00000000	                              mov esi, 0	       228	ui.c	FUNCTION_4	CALL_1
0x40004d2	          0x4889cf	                            mov rdi, rcx	       228	ui.c	FUNCTION_4	CALL_1
0x40004d5	            0xffd0	                                call rax	       228	ui.c	FUNCTION_4	CALL_1
0x40004d7	      0xe9a0000000	                           jmp 0x400057c	       228	ui.c	FUNCTION_4	CALL_1
0x40004dc	      0xe800000000	                          call 0x40004e1	       234	ui.c	FUNCTION_4	WHILE_1	CALL_2
0x40004e1	          0x8945f0	             mov dword [rbp - 0x10], eax	       234	ui.c	FUNCTION_4	WHILE_1	CALL_2
0x40004e4	    0x8b0500000000	            mov eax, dword [0x040004ea] 	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x40004ea	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x40004ed	            0x740a	                            je 0x40004f9	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x40004ef	      0xb800000000	                              mov eax, 0	       238	ui.c	FUNCTION_4	WHILE_1	IF_2
0x40004f4	      0xe983000000	                           jmp 0x400057c	       238	ui.c	FUNCTION_4	WHILE_1	IF_2
0x40004f9	        0x837df000	               cmp dword [rbp - 0x10], 0	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x40004fd	            0x7e12	                           jle 0x4000511	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x40004ff	      0x48837de800	               cmp qword [rbp - 0x18], 0	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000504	            0x7e12	                           jle 0x4000518	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000506	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000509	            0x4898	                                    cdqe	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x400050b	        0x483b45f8	                cmp rax, qword [rbp - 8]	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x400050f	            0x7e07	                           jle 0x4000518	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000511	        0x488b45f8	                mov rax, qword [rbp - 8]	       241	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000515	          0x8945f0	             mov dword [rbp - 0x10], eax	       241	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000518	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x400051b	          0x4863c8	                         movsxd rcx, eax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x400051e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000521	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000525	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000529	          0x4889cf	                            mov rdi, rcx	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x400052c	            0xffd0	                                call rax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x400052e	            0x85c0	                           test eax, eax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000530	            0x7407	                            je 0x4000539	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000532	      0xb801000000	                              mov eax, 1	       243	ui.c	FUNCTION_4	WHILE_1	IF_4
0x4000537	            0xeb43	                           jmp 0x400057c	       243	ui.c	FUNCTION_4	WHILE_1	IF_4
0x4000539	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x400053e	            0x7411	                            je 0x4000551	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000540	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000544	            0x8b00	                    mov eax, dword [rax]	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000546	            0x85c0	                           test eax, eax	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000548	            0x7407	                            je 0x4000551	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x400054a	      0xb800000000	                              mov eax, 0	       247	ui.c	FUNCTION_4	WHILE_1	IF_5
0x400054f	            0xeb2b	                           jmp 0x400057c	       247	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000551	      0x48837de800	               cmp qword [rbp - 0x18], 0	       248	ui.c	FUNCTION_4	WHILE_1	IF_6
0x4000556	            0x7e09	                           jle 0x4000561	       248	ui.c	FUNCTION_4	WHILE_1	IF_6
0x4000558	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x400055b	            0x4898	                                    cdqe	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x400055d	        0x482945f8	                sub qword [rbp - 8], rax	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x4000561	      0x48837de800	               cmp qword [rbp - 0x18], 0	       230	ui.c	FUNCTION_4	WHILE_1
0x4000566	     0xf8870ffffff	                            js 0x40004dc	       230	ui.c	FUNCTION_4	WHILE_1
0x400056c	      0x48837df800	                  cmp qword [rbp - 8], 0	       230	ui.c	FUNCTION_4	WHILE_1
0x4000571	     0xf8f65ffffff	                            jg 0x40004dc	       230	ui.c	FUNCTION_4	WHILE_1
0x4000577	      0xb800000000	                              mov eax, 0	       251	ui.c	FUNCTION_4
0x400057c	              0xc9	                                   leave	       252	ui.c	FUNCTION_4
0x400057d	              0xc3	                                     ret	       252	ui.c	FUNCTION_4
ui_inchar_undo	ELSE,1:FOR,0:functions,0:CALL,5:DO,0:WHILE,0:SWITCH,0:IF,3	69
0x4000123	              0x55	                                push rbp	        77	ui.c	FUNCTION_2
0x4000124	          0x4889e5	                            mov rbp, rsp	        77	ui.c	FUNCTION_2
0x4000127	        0x4883ec20	                           sub rsp, 0x20	        77	ui.c	FUNCTION_2
0x400012b	        0x48897de8	             mov qword [rbp - 0x18], rdi	        77	ui.c	FUNCTION_2
0x400012f	          0x8975e4	             mov dword [rbp - 0x1c], esi	        77	ui.c	FUNCTION_2
0x4000132	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        81	ui.c	FUNCTION_2
0x4000135	          0x8945f4	              mov dword [rbp - 0xc], eax	        81	ui.c	FUNCTION_2
0x4000138	    0x488b05000000	            mov rax, qword [0x0400013f] 	        82	ui.c	FUNCTION_2	IF_1
0x400013f	          0x4885c0	                           test rax, rax	        82	ui.c	FUNCTION_2	IF_1
0x4000142	            0x7413	                            je 0x4000157	        82	ui.c	FUNCTION_2	IF_1
0x4000144	    0x8b1500000000	            mov edx, dword [0x0400014a] 	        83	ui.c	FUNCTION_2	IF_1
0x400014a	    0x8b0500000000	            mov eax, dword [0x04000150] 	        83	ui.c	FUNCTION_2	IF_1
0x4000150	            0x29c2	                            sub edx, eax	        83	ui.c	FUNCTION_2	IF_1
0x4000152	            0x89d0	                            mov eax, edx	        83	ui.c	FUNCTION_2	IF_1
0x4000154	           0x145f4	              add dword [rbp - 0xc], eax	        83	ui.c	FUNCTION_2	IF_1
0x4000157	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        84	ui.c	FUNCTION_2	CALL_1
0x400015a	            0x89c7	                            mov edi, eax	        84	ui.c	FUNCTION_2	CALL_1
0x400015c	      0xe800000000	                          call 0x4000161	        84	ui.c	FUNCTION_2	CALL_1
0x4000161	        0x488945f8	                mov qword [rbp - 8], rax	        84	ui.c	FUNCTION_2	CALL_1
0x4000165	      0x48837df800	                  cmp qword [rbp - 8], 0	        85	ui.c	FUNCTION_2	IF_2
0x400016a	     0xf84b8000000	                            je 0x4000228	        85	ui.c	FUNCTION_2	IF_2
0x4000170	    0x488b05000000	            mov rax, qword [0x04000177] 	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x4000177	          0x4885c0	                           test rax, rax	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x400017a	            0x7475	                            je 0x40001f1	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x400017c	    0x8b1500000000	            mov edx, dword [0x04000182] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000182	    0x8b0500000000	            mov eax, dword [0x04000188] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000188	            0x29c2	                            sub edx, eax	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x400018a	            0x89d0	                            mov eax, edx	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x400018c	          0x4863d0	                         movsxd rdx, eax	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x400018f	    0x488b0d000000	            mov rcx, qword [0x04000196] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000196	    0x8b0500000000	            mov eax, dword [0x0400019c] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x400019c	            0x4898	                                    cdqe	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x400019e	          0x4801c1	                            add rcx, rax	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40001a1	        0x488b45f8	                mov rax, qword [rbp - 8]	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40001a5	          0x4889ce	                            mov rsi, rcx	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40001a8	          0x4889c7	                            mov rdi, rax	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40001ab	      0xe800000000	                          call 0x40001b0	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40001b0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001b3	          0x4863d0	                         movsxd rdx, eax	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001b6	    0x8b0500000000	            mov eax, dword [0x040001bc] 	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001bc	          0x4863c8	                         movsxd rcx, eax	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001bf	    0x8b0500000000	            mov eax, dword [0x040001c5] 	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001c5	            0x4898	                                    cdqe	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001c7	          0x4829c1	                            sub rcx, rax	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001ca	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001ce	          0x4801c1	                            add rcx, rax	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001d5	          0x4889c6	                            mov rsi, rax	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001d8	          0x4889cf	                            mov rdi, rcx	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001db	      0xe800000000	                          call 0x40001e0	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40001e0	    0x488b05000000	            mov rax, qword [0x040001e7] 	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40001e7	          0x4889c7	                            mov rdi, rax	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40001ea	      0xe800000000	                          call 0x40001ef	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40001ef	            0xeb19	                           jmp 0x400020a	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40001f1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x40001f4	          0x4863d0	                         movsxd rdx, eax	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x40001f7	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x40001fb	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x40001ff	          0x4889ce	                            mov rsi, rcx	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x4000202	          0x4889c7	                            mov rdi, rax	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x4000205	      0xe800000000	                          call 0x400020a	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x400020a	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	ui.c	FUNCTION_2	IF_2
0x400020e	    0x488905000000	            mov qword [0x04000215], rax 	        95	ui.c	FUNCTION_2	IF_2
0x4000215	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        96	ui.c	FUNCTION_2	IF_2
0x4000218	    0x890500000000	            mov dword [0x0400021e], eax 	        96	ui.c	FUNCTION_2	IF_2
0x400021e	    0xc70500000000	               mov dword [0x04000228], 0	        97	ui.c	FUNCTION_2	IF_2
0x4000228	              0x90	                                     nop	        99	ui.c	FUNCTION_2
0x4000229	              0xc9	                                   leave	        99	ui.c	FUNCTION_2
0x400022a	              0xc3	                                     ret	        99	ui.c	FUNCTION_2
mouse_find_win	ELSE,1:FOR,3:functions,0:CALL,1:DO,0:WHILE,0:SWITCH,0:IF,5	100
0x4004ddc	              0x55	                                push rbp	      3162	ui.c	FUNCTION_77
0x4004ddd	          0x4889e5	                            mov rbp, rsp	      3162	ui.c	FUNCTION_77
0x4004de0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3162	ui.c	FUNCTION_77
0x4004de4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3162	ui.c	FUNCTION_77
0x4004de8	    0x488b05000000	            mov rax, qword [0x04004def] 	      3166	ui.c	FUNCTION_77
0x4004def	        0x488945f0	             mov qword [rbp - 0x10], rax	      3166	ui.c	FUNCTION_77
0x4004df3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3167	ui.c	FUNCTION_77
0x4004df7	            0x8b10	                    mov edx, dword [rax]	      3167	ui.c	FUNCTION_77
0x4004df9	    0x488b05000000	            mov rax, qword [0x04004e00] 	      3167	ui.c	FUNCTION_77
0x4004e00	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      3167	ui.c	FUNCTION_77
0x4004e06	            0x29c2	                            sub edx, eax	      3167	ui.c	FUNCTION_77
0x4004e08	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3167	ui.c	FUNCTION_77
0x4004e0c	            0x8910	                    mov dword [rax], edx	      3167	ui.c	FUNCTION_77
0x4004e0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4004e12	           0xfb600	                   movzx eax, byte [rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4004e15	            0x84c0	                             test al, al	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4004e17	     0xf84bc000000	                            je 0x4004ed9	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4004e1d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x4004e21	           0xfb600	                   movzx eax, byte [rax]	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x4004e24	            0x3c01	                               cmp al, 1	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x4004e26	            0x7553	                           jne 0x4004e7b	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x4004e28	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e2c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e30	        0x488945f0	             mov qword [rbp - 0x10], rax	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e34	            0xeb36	                           jmp 0x4004e6c	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e36	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4004e3a	            0x8b10	                    mov edx, dword [rax]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4004e3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4004e40	          0x8b4004	                mov eax, dword [rax + 4]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4004e43	            0x39c2	                            cmp edx, eax	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4004e45	     0xf8c82000000	                            jl 0x4004ecd	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4004e4b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e4f	            0x8b10	                    mov edx, dword [rax]	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e51	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e55	          0x8b4004	                mov eax, dword [rax + 4]	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e58	            0x29c2	                            sub edx, eax	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e5a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e5e	            0x8910	                    mov dword [rax], edx	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e64	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e68	        0x488945f0	             mov qword [rbp - 0x10], rax	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e70	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e74	          0x4885c0	                           test rax, rax	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e77	            0x75bd	                           jne 0x4004e36	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e79	            0xeb93	                           jmp 0x4004e0e	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4004e7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004e7f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004e83	        0x488945f0	             mov qword [rbp - 0x10], rax	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004e87	            0xeb32	                           jmp 0x4004ebb	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004e89	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4004e8d	            0x8b10	                    mov edx, dword [rax]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4004e8f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4004e93	          0x8b400c	              mov eax, dword [rax + 0xc]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4004e96	            0x39c2	                            cmp edx, eax	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4004e98	            0x7c39	                            jl 0x4004ed3	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4004e9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004e9e	            0x8b10	                    mov edx, dword [rax]	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004ea0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004ea4	          0x8b400c	              mov eax, dword [rax + 0xc]	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004ea7	            0x29c2	                            sub edx, eax	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004ea9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004ead	            0x8910	                    mov dword [rax], edx	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004eaf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004eb3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004eb7	        0x488945f0	             mov qword [rbp - 0x10], rax	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004ebb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004ebf	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004ec3	          0x4885c0	                           test rax, rax	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004ec6	            0x75c1	                           jne 0x4004e89	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004ec8	      0xe941ffffff	                           jmp 0x4004e0e	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4004ecd	              0x90	                                     nop	      3177	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4004ece	      0xe93bffffff	                           jmp 0x4004e0e	      3177	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4004ed3	              0x90	                                     nop	      3186	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4004ed4	      0xe935ffffff	                           jmp 0x4004e0e	      3190	ui.c	FUNCTION_77	FOR_1
0x4004ed9	              0x90	                                     nop	      3171	ui.c	FUNCTION_77	FOR_1	IF_1
0x4004eda	    0x488b05000000	            mov rax, qword [0x04004ee1] 	      3193	ui.c	FUNCTION_77	CALL_1
0x4004ee1	        0x488945f8	                mov qword [rbp - 8], rax	      3193	ui.c	FUNCTION_77	CALL_1
0x4004ee5	            0xeb38	                           jmp 0x4004f1f	      3193	ui.c	FUNCTION_77	CALL_1
0x4004ee7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3194	ui.c	FUNCTION_77	IF_5
0x4004eeb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3194	ui.c	FUNCTION_77	IF_5
0x4004eef	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3194	ui.c	FUNCTION_77	IF_5
0x4004ef3	            0x751e	                           jne 0x4004f13	      3194	ui.c	FUNCTION_77	IF_5
0x4004ef5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3197	ui.c	FUNCTION_77	IF_5
0x4004ef9	            0x8b10	                    mov edx, dword [rax]	      3197	ui.c	FUNCTION_77	IF_5
0x4004efb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3197	ui.c	FUNCTION_77	IF_5
0x4004eff	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      3197	ui.c	FUNCTION_77	IF_5
0x4004f05	            0x29c2	                            sub edx, eax	      3197	ui.c	FUNCTION_77	IF_5
0x4004f07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3197	ui.c	FUNCTION_77	IF_5
0x4004f0b	            0x8910	                    mov dword [rax], edx	      3197	ui.c	FUNCTION_77	IF_5
0x4004f0d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3199	ui.c	FUNCTION_77	IF_5
0x4004f11	            0xeb18	                           jmp 0x4004f2b	      3199	ui.c	FUNCTION_77	IF_5
0x4004f13	        0x488b45f8	                mov rax, qword [rbp - 8]	      3193	ui.c	FUNCTION_77	CALL_1
0x4004f17	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3193	ui.c	FUNCTION_77	CALL_1
0x4004f1b	        0x488945f8	                mov qword [rbp - 8], rax	      3193	ui.c	FUNCTION_77	CALL_1
0x4004f1f	      0x48837df800	                  cmp qword [rbp - 8], 0	      3193	ui.c	FUNCTION_77	CALL_1
0x4004f24	            0x75c1	                           jne 0x4004ee7	      3193	ui.c	FUNCTION_77	CALL_1
0x4004f26	      0xb800000000	                              mov eax, 0	      3201	ui.c	FUNCTION_77
0x4004f2b	              0x5d	                                 pop rbp	      3202	ui.c	FUNCTION_77
0x4004f2c	              0xc3	                                     ret	      3202	ui.c	FUNCTION_77
clip_start_selection	ELSE,1:FOR,0:functions,0:CALL,10:DO,0:WHILE,0:SWITCH,1:IF,4	162
0x4000ed4	              0x55	                                push rbp	       785	ui.c	FUNCTION_27
0x4000ed5	          0x4889e5	                            mov rbp, rsp	       785	ui.c	FUNCTION_27
0x4000ed8	        0x4883ec20	                           sub rsp, 0x20	       785	ui.c	FUNCTION_27
0x4000edc	          0x897dec	             mov dword [rbp - 0x14], edi	       785	ui.c	FUNCTION_27
0x4000edf	          0x8975e8	             mov dword [rbp - 0x18], esi	       785	ui.c	FUNCTION_27
0x4000ee2	          0x8955e4	             mov dword [rbp - 0x1c], edx	       785	ui.c	FUNCTION_27
0x4000ee5	    0x48c745f80000	                  mov qword [rbp - 8], 0	       786	ui.c	FUNCTION_27
0x4000eed	        0x488b45f8	                mov rax, qword [rbp - 8]	       788	ui.c	FUNCTION_27	IF_1
0x4000ef1	         0xfb74048	           movzx eax, word [rax + 0x48] 	       788	ui.c	FUNCTION_27	IF_1
0x4000ef5	        0x6683f802	                               cmp ax, 2	       788	ui.c	FUNCTION_27	IF_1
0x4000ef9	            0x750c	                           jne 0x4000f07	       788	ui.c	FUNCTION_27	IF_1
0x4000efb	        0x488b45f8	                mov rax, qword [rbp - 8]	       789	ui.c	FUNCTION_27	CALL_1
0x4000eff	          0x4889c7	                            mov rdi, rax	       789	ui.c	FUNCTION_27	CALL_1
0x4000f02	      0xe800000000	                          call 0x4000f07	       789	ui.c	FUNCTION_27	CALL_1
0x4000f07	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       791	ui.c	FUNCTION_27	CALL_2
0x4000f0a	            0x89c7	                            mov edi, eax	       791	ui.c	FUNCTION_27	CALL_2
0x4000f0c	      0xe800000000	                          call 0x4000f11	       791	ui.c	FUNCTION_27	CALL_2
0x4000f11	          0x8945e8	             mov dword [rbp - 0x18], eax	       791	ui.c	FUNCTION_27	CALL_2
0x4000f14	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       792	ui.c	FUNCTION_27	CALL_3
0x4000f17	            0x89c7	                            mov edi, eax	       792	ui.c	FUNCTION_27	CALL_3
0x4000f19	      0xe800000000	                          call 0x4000f1e	       792	ui.c	FUNCTION_27	CALL_3
0x4000f1e	          0x8945ec	             mov dword [rbp - 0x14], eax	       792	ui.c	FUNCTION_27	CALL_3
0x4000f21	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       794	ui.c	FUNCTION_27	CALL_4
0x4000f24	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       794	ui.c	FUNCTION_27	CALL_4
0x4000f27	            0x89d6	                            mov esi, edx	       794	ui.c	FUNCTION_27	CALL_4
0x4000f29	            0x89c7	                            mov edi, eax	       794	ui.c	FUNCTION_27	CALL_4
0x4000f2b	      0xe800000000	                          call 0x4000f30	       794	ui.c	FUNCTION_27	CALL_4
0x4000f30	          0x8945ec	             mov dword [rbp - 0x14], eax	       794	ui.c	FUNCTION_27	CALL_4
0x4000f33	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       797	ui.c	FUNCTION_27
0x4000f36	          0x4863d0	                         movsxd rdx, eax	       797	ui.c	FUNCTION_27
0x4000f39	        0x488b45f8	                mov rax, qword [rbp - 8]	       797	ui.c	FUNCTION_27
0x4000f3d	        0x48895008	                mov qword [rax + 8], rdx	       797	ui.c	FUNCTION_27
0x4000f41	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	ui.c	FUNCTION_27
0x4000f45	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       798	ui.c	FUNCTION_27
0x4000f48	          0x895010	             mov dword [rax + 0x10], edx	       798	ui.c	FUNCTION_27
0x4000f4b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       799	ui.c	FUNCTION_27
0x4000f4f	        0x488b45f8	                mov rax, qword [rbp - 8]	       799	ui.c	FUNCTION_27
0x4000f53	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       799	ui.c	FUNCTION_27
0x4000f57	        0x488b4008	                mov rax, qword [rax + 8]	       799	ui.c	FUNCTION_27
0x4000f5b	        0x48894118	             mov qword [rcx + 0x18], rax	       799	ui.c	FUNCTION_27
0x4000f5f	        0x48895120	             mov qword [rcx + 0x20], rdx	       799	ui.c	FUNCTION_27
0x4000f63	        0x488b45f8	                mov rax, qword [rbp - 8]	       800	ui.c	FUNCTION_27
0x4000f67	        0x488b4008	                mov rax, qword [rax + 8]	       800	ui.c	FUNCTION_27
0x4000f6b	            0x89c2	                            mov edx, eax	       800	ui.c	FUNCTION_27
0x4000f6d	        0x488b45f8	                mov rax, qword [rbp - 8]	       800	ui.c	FUNCTION_27
0x4000f71	        0x6689502c	               mov word [rax + 0x2c], dx	       800	ui.c	FUNCTION_27
0x4000f75	        0x488b45f8	                mov rax, qword [rbp - 8]	       801	ui.c	FUNCTION_27
0x4000f79	    0x66c740480100	                mov word [rax + 0x48], 1	       801	ui.c	FUNCTION_27
0x4000f7f	        0x837de400	               cmp dword [rbp - 0x1c], 0	       803	ui.c	FUNCTION_27	IF_2
0x4000f83	            0x742d	                            je 0x4000fb2	       803	ui.c	FUNCTION_27	IF_2
0x4000f85	        0x488b45f8	                mov rax, qword [rbp - 8]	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4000f89	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4000f8d	          0x8d5001	                      lea edx, [rax + 1]	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4000f90	        0x488b45f8	                mov rax, qword [rbp - 8]	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4000f94	        0x6689504a	               mov word [rax + 0x4a], dx	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4000f98	        0x488b45f8	                mov rax, qword [rbp - 8]	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4000f9c	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4000fa0	        0x6683f802	                               cmp ax, 2	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4000fa4	            0x7616	                           jbe 0x4000fbc	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4000fa6	        0x488b45f8	                mov rax, qword [rbp - 8]	       806	ui.c	FUNCTION_27	IF_2	IF_3
0x4000faa	    0x66c7404a0000	                mov word [rax + 0x4a], 0	       806	ui.c	FUNCTION_27	IF_2	IF_3
0x4000fb0	            0xeb0a	                           jmp 0x4000fbc	       806	ui.c	FUNCTION_27	IF_2	IF_3
0x4000fb2	        0x488b45f8	                mov rax, qword [rbp - 8]	       809	ui.c	FUNCTION_27	ELSE_1
0x4000fb6	    0x66c7404a0000	                mov word [rax + 0x4a], 0	       809	ui.c	FUNCTION_27	ELSE_1
0x4000fbc	    0x8b0500000000	            mov eax, dword [0x04000fc2] 	       813	ui.c	FUNCTION_27	IF_4
0x4000fc2	            0x85c0	                           test eax, eax	       813	ui.c	FUNCTION_27	IF_4
0x4000fc4	            0x7405	                            je 0x4000fcb	       813	ui.c	FUNCTION_27	IF_4
0x4000fc6	      0xe800000000	                          call 0x4000fcb	       814	ui.c	FUNCTION_27	CALL_5
0x4000fcb	        0x488b45f8	                mov rax, qword [rbp - 8]	       817	ui.c	FUNCTION_27	SWITCH_1
0x4000fcf	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       817	ui.c	FUNCTION_27	SWITCH_1
0x4000fd3	           0xfb7c0	                           movzx eax, ax	       817	ui.c	FUNCTION_27	SWITCH_1
0x4000fd6	          0x83f801	                              cmp eax, 1	       817	ui.c	FUNCTION_27	SWITCH_1
0x4000fd9	            0x7440	                            je 0x400101b	       817	ui.c	FUNCTION_27	SWITCH_1
0x4000fdb	          0x83f802	                              cmp eax, 2	       817	ui.c	FUNCTION_27	SWITCH_1
0x4000fde	     0xf84d7000000	                            je 0x40010bb	       817	ui.c	FUNCTION_27	SWITCH_1
0x4000fe4	            0x85c0	                           test eax, eax	       817	ui.c	FUNCTION_27	SWITCH_1
0x4000fe6	     0xf8518010000	                           jne 0x4001104	       817	ui.c	FUNCTION_27	SWITCH_1
0x4000fec	        0x488b45f8	                mov rax, qword [rbp - 8]	       820	ui.c	FUNCTION_27	SWITCH_1
0x4000ff0	          0x8b4010	            mov eax, dword [rax + 0x10] 	       820	ui.c	FUNCTION_27	SWITCH_1
0x4000ff3	            0x89c2	                            mov edx, eax	       820	ui.c	FUNCTION_27	SWITCH_1
0x4000ff5	        0x488b45f8	                mov rax, qword [rbp - 8]	       820	ui.c	FUNCTION_27	SWITCH_1
0x4000ff9	        0x6689502e	               mov word [rax + 0x2e], dx	       820	ui.c	FUNCTION_27	SWITCH_1
0x4000ffd	        0x488b45f8	                mov rax, qword [rbp - 8]	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x4001001	        0x488b4008	                mov rax, qword [rax + 8]	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x4001005	            0x89c7	                            mov edi, eax	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x4001007	      0xe871130000	              call sym.clip_get_line_end	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x400100c	            0x89c2	                            mov edx, eax	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x400100e	        0x488b45f8	                mov rax, qword [rbp - 8]	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x4001012	        0x66895034	               mov word [rax + 0x34], dx	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x4001016	      0xe9e9000000	                           jmp 0x4001104	       822	ui.c	FUNCTION_27	SWITCH_1
0x400101b	        0x488b45f8	                mov rax, qword [rbp - 8]	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x400101f	          0x8b5010	            mov edx, dword [rax + 0x10] 	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x4001022	        0x488b45f8	                mov rax, qword [rbp - 8]	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x4001026	        0x488b4008	                mov rax, qword [rax + 8]	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x400102a	            0x89c1	                            mov ecx, eax	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x400102c	        0x488b45f8	                mov rax, qword [rbp - 8]	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x4001030	            0x89ce	                            mov esi, ecx	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x4001032	          0x4889c7	                            mov rdi, rax	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x4001035	      0xe8e5100000	       call sym.clip_get_word_boundaries	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x400103a	        0x488b45f8	                mov rax, qword [rbp - 8]	       826	ui.c	FUNCTION_27	SWITCH_1
0x400103e	         0xfb75032	           movzx edx, word [rax + 0x32] 	       826	ui.c	FUNCTION_27	SWITCH_1
0x4001042	        0x488b45f8	                mov rax, qword [rbp - 8]	       826	ui.c	FUNCTION_27	SWITCH_1
0x4001046	        0x6689502e	               mov word [rax + 0x2e], dx	       826	ui.c	FUNCTION_27	SWITCH_1
0x400104a	        0x488b45f8	                mov rax, qword [rbp - 8]	       827	ui.c	FUNCTION_27	SWITCH_1
0x400104e	         0xfb75034	           movzx edx, word [rax + 0x34] 	       827	ui.c	FUNCTION_27	SWITCH_1
0x4001052	        0x488b45f8	                mov rax, qword [rbp - 8]	       827	ui.c	FUNCTION_27	SWITCH_1
0x4001056	        0x66895030	               mov word [rax + 0x30], dx	       827	ui.c	FUNCTION_27	SWITCH_1
0x400105a	        0x488b45f8	                mov rax, qword [rbp - 8]	       830	ui.c	FUNCTION_27	SWITCH_1
0x400105e	         0xfb74034	           movzx eax, word [rax + 0x34] 	       830	ui.c	FUNCTION_27	SWITCH_1
0x4001062	           0xfb7d0	                           movzx edx, ax	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4001065	        0x488b45f8	                mov rax, qword [rbp - 8]	       830	ui.c	FUNCTION_27	SWITCH_1
0x4001069	        0x488b4018	            mov rax, qword [rax + 0x18] 	       830	ui.c	FUNCTION_27	SWITCH_1
0x400106d	            0x89c6	                            mov esi, eax	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x400106f	        0x488b45f8	                mov rax, qword [rbp - 8]	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4001073	         0xfb74032	           movzx eax, word [rax + 0x32] 	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4001077	           0xfb7c0	                           movzx eax, ax	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x400107a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x400107e	        0x488b4908	                mov rcx, qword [rcx + 8]	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4001082	            0x89cf	                            mov edi, ecx	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4001084	    0x41b802000000	                              mov r8d, 2	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x400108a	            0x89d1	                            mov ecx, edx	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x400108c	            0x89f2	                            mov edx, esi	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x400108e	            0x89c6	                            mov esi, eax	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4001090	      0xe816090000	               call sym.clip_invert_area	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4001095	        0x488b45f8	                mov rax, qword [rbp - 8]	       831	ui.c	FUNCTION_27	SWITCH_1
0x4001099	         0xfb74032	           movzx eax, word [rax + 0x32] 	       831	ui.c	FUNCTION_27	SWITCH_1
0x400109d	           0xfb7d0	                           movzx edx, ax	       831	ui.c	FUNCTION_27	SWITCH_1
0x40010a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       831	ui.c	FUNCTION_27	SWITCH_1
0x40010a4	          0x895010	             mov dword [rax + 0x10], edx	       831	ui.c	FUNCTION_27	SWITCH_1
0x40010a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       832	ui.c	FUNCTION_27	SWITCH_1
0x40010ab	         0xfb74034	           movzx eax, word [rax + 0x34] 	       832	ui.c	FUNCTION_27	SWITCH_1
0x40010af	           0xfb7d0	                           movzx edx, ax	       832	ui.c	FUNCTION_27	SWITCH_1
0x40010b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       832	ui.c	FUNCTION_27	SWITCH_1
0x40010b6	          0x895020	             mov dword [rax + 0x20], edx	       832	ui.c	FUNCTION_27	SWITCH_1
0x40010b9	            0xeb49	                           jmp 0x4001104	       833	ui.c	FUNCTION_27	SWITCH_1
0x40010bb	    0x488b05000000	            mov rax, qword [0x040010c2] 	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40010c2	            0x89c1	                            mov ecx, eax	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40010c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40010c8	        0x488b4008	                mov rax, qword [rax + 8]	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40010cc	            0x89c2	                            mov edx, eax	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40010ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40010d2	        0x488b4008	                mov rax, qword [rax + 8]	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40010d6	    0x41b802000000	                              mov r8d, 2	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40010dc	      0xbe00000000	                              mov esi, 0	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40010e1	            0x89c7	                            mov edi, eax	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40010e3	      0xe8c3080000	               call sym.clip_invert_area	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40010e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       838	ui.c	FUNCTION_27	SWITCH_1
0x40010ec	    0xc74010000000	               mov dword [rax + 0x10], 0	       838	ui.c	FUNCTION_27	SWITCH_1
0x40010f3	    0x488b05000000	            mov rax, qword [0x040010fa] 	       839	ui.c	FUNCTION_27	SWITCH_1
0x40010fa	            0x89c2	                            mov edx, eax	       839	ui.c	FUNCTION_27	SWITCH_1
0x40010fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       839	ui.c	FUNCTION_27	SWITCH_1
0x4001100	          0x895020	             mov dword [rax + 0x20], edx	       839	ui.c	FUNCTION_27	SWITCH_1
0x4001103	              0x90	                                     nop	       840	ui.c	FUNCTION_27	SWITCH_1
0x4001104	        0x488b4df8	                mov rcx, qword [rbp - 8]	       843	ui.c	FUNCTION_27
0x4001108	        0x488b45f8	                mov rax, qword [rbp - 8]	       843	ui.c	FUNCTION_27
0x400110c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       843	ui.c	FUNCTION_27
0x4001110	        0x488b4008	                mov rax, qword [rax + 8]	       843	ui.c	FUNCTION_27
0x4001114	        0x48894138	             mov qword [rcx + 0x38], rax	       843	ui.c	FUNCTION_27
0x4001118	        0x48895140	             mov qword [rcx + 0x40], rdx	       843	ui.c	FUNCTION_27
0x400111c	              0x90	                                     nop	       848	ui.c	FUNCTION_27
0x400111d	              0xc9	                                   leave	       848	ui.c	FUNCTION_27
0x400111e	              0xc3	                                     ret	       848	ui.c	FUNCTION_27
clip_get_word_boundaries	ELSE,3:FOR,2:functions,0:CALL,3:DO,0:WHILE,0:SWITCH,0:IF,7	184
0x400211f	              0x55	                                push rbp	      1389	ui.c	FUNCTION_36
0x4002120	          0x4889e5	                            mov rbp, rsp	      1389	ui.c	FUNCTION_36
0x4002123	        0x4883ec30	                           sub rsp, 0x30	      1389	ui.c	FUNCTION_36
0x4002127	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1389	ui.c	FUNCTION_36
0x400212b	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1389	ui.c	FUNCTION_36
0x400212e	          0x8955d0	             mov dword [rbp - 0x30], edx	      1389	ui.c	FUNCTION_36
0x4002131	    0x8b0500000000	            mov eax, dword [0x04002137] 	      1397	ui.c	FUNCTION_36	IF_1
0x4002137	          0x3945d4	            cmp dword [rbp - 0x2c], eax 	      1397	ui.c	FUNCTION_36	IF_1
0x400213a	     0xf8d3a020000	                           jge 0x400237a	      1397	ui.c	FUNCTION_36	IF_1
0x4002140	    0x8b0500000000	            mov eax, dword [0x04002146] 	      1397	ui.c	FUNCTION_36	IF_1
0x4002146	          0x3945d0	            cmp dword [rbp - 0x30], eax 	      1397	ui.c	FUNCTION_36	IF_1
0x4002149	     0xf8d2b020000	                           jge 0x400237a	      1397	ui.c	FUNCTION_36	IF_1
0x400214f	    0x488b05000000	            mov rax, qword [0x04002156] 	      1397	ui.c	FUNCTION_36	IF_1
0x4002156	          0x4885c0	                           test rax, rax	      1397	ui.c	FUNCTION_36	IF_1
0x4002159	     0xf841b020000	                            je 0x400237a	      1397	ui.c	FUNCTION_36	IF_1
0x400215f	    0x488b05000000	            mov rax, qword [0x04002166] 	      1400	ui.c	FUNCTION_36
0x4002166	    0x488b15000000	            mov rdx, qword [0x0400216d] 	      1400	ui.c	FUNCTION_36
0x400216d	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      1400	ui.c	FUNCTION_36
0x4002170	          0x4863c9	                         movsxd rcx, ecx	      1400	ui.c	FUNCTION_36
0x4002173	        0x48c1e102	                              shl rcx, 2	      1400	ui.c	FUNCTION_36
0x4002177	          0x4801ca	                            add rdx, rcx	      1400	ui.c	FUNCTION_36
0x400217a	            0x8b12	                    mov edx, dword [rdx]	      1400	ui.c	FUNCTION_36
0x400217c	            0x89d2	                            mov edx, edx	      1400	ui.c	FUNCTION_36
0x400217e	          0x4801d0	                            add rax, rdx	      1400	ui.c	FUNCTION_36
0x4002181	        0x488945f8	                mov qword [rbp - 8], rax	      1400	ui.c	FUNCTION_36
0x4002185	    0x8b0500000000	            mov eax, dword [0x0400218b] 	      1403	ui.c	FUNCTION_36	IF_2
0x400218b	            0x85c0	                           test eax, eax	      1403	ui.c	FUNCTION_36	IF_2
0x400218d	            0x7421	                            je 0x40021b0	      1403	ui.c	FUNCTION_36	IF_2
0x400218f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1404	ui.c	FUNCTION_36	CALL_1
0x4002192	          0x4863d0	                         movsxd rdx, eax	      1404	ui.c	FUNCTION_36	CALL_1
0x4002195	        0x488b45f8	                mov rax, qword [rbp - 8]	      1404	ui.c	FUNCTION_36	CALL_1
0x4002199	          0x4801c2	                            add rdx, rax	      1404	ui.c	FUNCTION_36	CALL_1
0x400219c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1404	ui.c	FUNCTION_36	CALL_1
0x40021a0	          0x4889d6	                            mov rsi, rdx	      1404	ui.c	FUNCTION_36	CALL_1
0x40021a3	          0x4889c7	                            mov rdi, rax	      1404	ui.c	FUNCTION_36	CALL_1
0x40021a6	      0xe800000000	                          call 0x40021ab	      1404	ui.c	FUNCTION_36	CALL_1
0x40021ab	          0x2945d0	             sub dword [rbp - 0x30], eax	      1404	ui.c	FUNCTION_36	CALL_1
0x40021ae	            0xeb22	                           jmp 0x40021d2	      1404	ui.c	FUNCTION_36	CALL_1
0x40021b0	    0x8b0500000000	            mov eax, dword [0x040021b6] 	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x40021b6	            0x85c0	                           test eax, eax	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x40021b8	            0x7418	                            je 0x40021d2	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x40021ba	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x40021bd	          0x4863d0	                         movsxd rdx, eax	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x40021c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x40021c4	          0x4801d0	                            add rax, rdx	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x40021c7	           0xfb600	                   movzx eax, byte [rax]	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x40021ca	            0x84c0	                             test al, al	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x40021cc	            0x7504	                           jne 0x40021d2	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x40021ce	        0x836dd001	               sub dword [rbp - 0x30], 1	      1406	ui.c	FUNCTION_36	ELSE_1	IF_3
0x40021d2	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1408	ui.c	FUNCTION_36
0x40021d5	          0x4863d0	                         movsxd rdx, eax	      1408	ui.c	FUNCTION_36
0x40021d8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1408	ui.c	FUNCTION_36
0x40021dc	          0x4801d0	                            add rax, rdx	      1408	ui.c	FUNCTION_36
0x40021df	           0xfb600	                   movzx eax, byte [rax]	      1408	ui.c	FUNCTION_36
0x40021e2	            0x3c20	                            cmp al, 0x20	      1408	ui.c	FUNCTION_36
0x40021e4	            0x761c	                           jbe 0x4002202	      1408	ui.c	FUNCTION_36
0x40021e6	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1408	ui.c	FUNCTION_36
0x40021e9	          0x4863d0	                         movsxd rdx, eax	      1408	ui.c	FUNCTION_36
0x40021ec	        0x488b45f8	                mov rax, qword [rbp - 8]	      1408	ui.c	FUNCTION_36
0x40021f0	          0x4801d0	                            add rax, rdx	      1408	ui.c	FUNCTION_36
0x40021f3	           0xfb600	                   movzx eax, byte [rax]	      1408	ui.c	FUNCTION_36
0x40021f6	           0xfb6c0	                           movzx eax, al	      1408	ui.c	FUNCTION_36
0x40021f9	            0x89c7	                            mov edi, eax	      1408	ui.c	FUNCTION_36
0x40021fb	      0xe800000000	                          call 0x4002200	      1408	ui.c	FUNCTION_36
0x4002200	            0xeb05	                           jmp 0x4002207	      1408	ui.c	FUNCTION_36
0x4002202	      0xb820000000	                           mov eax, 0x20	      1408	ui.c	FUNCTION_36
0x4002207	          0x8945f0	             mov dword [rbp - 0x10], eax	      1408	ui.c	FUNCTION_36
0x400220a	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1410	ui.c	FUNCTION_36
0x400220d	          0x8945ec	             mov dword [rbp - 0x14], eax	      1410	ui.c	FUNCTION_36
0x4002210	      0xe99f000000	                           jmp 0x40022b4	      1411	ui.c	FUNCTION_36	FOR_1
0x4002215	    0x8b0500000000	            mov eax, dword [0x0400221b] 	      1413	ui.c	FUNCTION_36	FOR_1	IF_4
0x400221b	            0x85c0	                           test eax, eax	      1413	ui.c	FUNCTION_36	FOR_1	IF_4
0x400221d	            0x7430	                            je 0x400224f	      1413	ui.c	FUNCTION_36	FOR_1	IF_4
0x400221f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4002222	            0x4898	                                    cdqe	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4002224	        0x488d50ff	                      lea rdx, [rax - 1]	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4002228	        0x488b45f8	                mov rax, qword [rbp - 8]	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x400222c	          0x4801c2	                            add rdx, rax	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x400222f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4002233	          0x4889d6	                            mov rsi, rdx	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4002236	          0x4889c7	                            mov rdi, rax	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4002239	      0xe800000000	                          call 0x400223e	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x400223e	          0x8945f4	              mov dword [rbp - 0xc], eax	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4002241	        0x837df400	                cmp dword [rbp - 0xc], 0	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4002245	            0x7e08	                           jle 0x400224f	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4002247	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1415	ui.c	FUNCTION_36	FOR_1	IF_4
0x400224a	          0x2945ec	             sub dword [rbp - 0x14], eax	      1415	ui.c	FUNCTION_36	FOR_1	IF_4
0x400224d	            0xeb61	                           jmp 0x40022b0	      1415	ui.c	FUNCTION_36	FOR_1	IF_4
0x400224f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002252	            0x4898	                                    cdqe	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002254	        0x488d50ff	                      lea rdx, [rax - 1]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002258	        0x488b45f8	                mov rax, qword [rbp - 8]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400225c	          0x4801d0	                            add rax, rdx	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400225f	           0xfb600	                   movzx eax, byte [rax]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002262	            0x3c20	                            cmp al, 0x20	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002264	            0x761f	                           jbe 0x4002285	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002266	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002269	            0x4898	                                    cdqe	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400226b	        0x488d50ff	                      lea rdx, [rax - 1]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400226f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002273	          0x4801d0	                            add rax, rdx	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002276	           0xfb600	                   movzx eax, byte [rax]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002279	           0xfb6c0	                           movzx eax, al	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400227c	            0x89c7	                            mov edi, eax	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400227e	      0xe800000000	                          call 0x4002283	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002283	            0xeb05	                           jmp 0x400228a	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002285	      0xb820000000	                           mov eax, 0x20	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400228a	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400228d	            0x7421	                            je 0x40022b0	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400228f	    0x8b0500000000	            mov eax, dword [0x04002295] 	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002295	            0x85c0	                           test eax, eax	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002297	            0x7425	                            je 0x40022be	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4002299	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400229c	            0x4898	                                    cdqe	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400229e	        0x488d50ff	                      lea rdx, [rax - 1]	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x40022a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x40022a6	          0x4801d0	                            add rax, rdx	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x40022a9	           0xfb600	                   movzx eax, byte [rax]	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x40022ac	            0x84c0	                             test al, al	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x40022ae	            0x750e	                           jne 0x40022be	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x40022b0	        0x836dec01	               sub dword [rbp - 0x14], 1	      1411	ui.c	FUNCTION_36	FOR_1
0x40022b4	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1411	ui.c	FUNCTION_36	FOR_1
0x40022b8	     0xf8f57ffffff	                            jg 0x4002215	      1411	ui.c	FUNCTION_36	FOR_1
0x40022be	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1424	ui.c	FUNCTION_36
0x40022c1	            0x89c2	                            mov edx, eax	      1424	ui.c	FUNCTION_36
0x40022c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1424	ui.c	FUNCTION_36
0x40022c7	        0x66895032	               mov word [rax + 0x32], dx	      1424	ui.c	FUNCTION_36
0x40022cb	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1426	ui.c	FUNCTION_36
0x40022ce	          0x8945ec	             mov dword [rbp - 0x14], eax	      1426	ui.c	FUNCTION_36
0x40022d1	      0xe986000000	                           jmp 0x400235c	      1427	ui.c	FUNCTION_36	FOR_2
0x40022d6	    0x8b0500000000	            mov eax, dword [0x040022dc] 	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40022dc	            0x85c0	                           test eax, eax	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40022de	            0x7420	                            je 0x4002300	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40022e0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40022e3	          0x4863d0	                         movsxd rdx, eax	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40022e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40022ea	          0x4801d0	                            add rax, rdx	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40022ed	          0x4889c7	                            mov rdi, rax	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40022f0	      0xe800000000	                          call 0x40022f5	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40022f5	          0x83f802	                              cmp eax, 2	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40022f8	            0x7506	                           jne 0x4002300	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40022fa	        0x8345ec01	               add dword [rbp - 0x14], 1	      1430	ui.c	FUNCTION_36	FOR_2	IF_6
0x40022fe	            0xeb58	                           jmp 0x4002358	      1430	ui.c	FUNCTION_36	FOR_2	IF_6
0x4002300	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002303	          0x4863d0	                         movsxd rdx, eax	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002306	        0x488b45f8	                mov rax, qword [rbp - 8]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x400230a	          0x4801d0	                            add rax, rdx	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x400230d	           0xfb600	                   movzx eax, byte [rax]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002310	            0x3c20	                            cmp al, 0x20	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002312	            0x761c	                           jbe 0x4002330	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002314	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002317	          0x4863d0	                         movsxd rdx, eax	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x400231a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x400231e	          0x4801d0	                            add rax, rdx	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002321	           0xfb600	                   movzx eax, byte [rax]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002324	           0xfb6c0	                           movzx eax, al	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002327	            0x89c7	                            mov edi, eax	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002329	      0xe800000000	                          call 0x400232e	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x400232e	            0xeb05	                           jmp 0x4002335	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002330	      0xb820000000	                           mov eax, 0x20	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002335	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002338	            0x741e	                            je 0x4002358	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x400233a	    0x8b0500000000	            mov eax, dword [0x04002340] 	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002340	            0x85c0	                           test eax, eax	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002342	            0x7427	                            je 0x400236b	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002344	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002347	          0x4863d0	                         movsxd rdx, eax	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x400234a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x400234e	          0x4801d0	                            add rax, rdx	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002351	           0xfb600	                   movzx eax, byte [rax]	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002354	            0x84c0	                             test al, al	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002356	            0x7513	                           jne 0x400236b	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4002358	        0x8345ec01	               add dword [rbp - 0x14], 1	      1427	ui.c	FUNCTION_36	FOR_2
0x400235c	    0x8b0500000000	            mov eax, dword [0x04002362] 	      1427	ui.c	FUNCTION_36	FOR_2
0x4002362	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      1427	ui.c	FUNCTION_36	FOR_2
0x4002365	     0xf8c6bffffff	                            jl 0x40022d6	      1427	ui.c	FUNCTION_36	FOR_2
0x400236b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1439	ui.c	FUNCTION_36
0x400236e	            0x89c2	                            mov edx, eax	      1439	ui.c	FUNCTION_36
0x4002370	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1439	ui.c	FUNCTION_36
0x4002374	        0x66895034	               mov word [rax + 0x34], dx	      1439	ui.c	FUNCTION_36
0x4002378	            0xeb01	                           jmp 0x400237b	      1439	ui.c	FUNCTION_36
0x400237a	              0x90	                                     nop	      1398	ui.c	FUNCTION_36	IF_1
0x400237b	              0xc9	                                   leave	      1440	ui.c	FUNCTION_36
0x400237c	              0xc3	                                     ret	      1440	ui.c	FUNCTION_36
start_global_changes	ELSE,0:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,2	20
0x4000bc7	              0x55	                                push rbp	       614	ui.c	FUNCTION_19
0x4000bc8	          0x4889e5	                            mov rbp, rsp	       614	ui.c	FUNCTION_19
0x4000bcb	    0x8b0500000000	            mov eax, dword [0x04000bd1] 	       615	ui.c	FUNCTION_19	IF_1
0x4000bd1	          0x83c001	                              add eax, 1	       615	ui.c	FUNCTION_19	IF_1
0x4000bd4	    0x890500000000	            mov dword [0x04000bda], eax 	       615	ui.c	FUNCTION_19	IF_1
0x4000bda	    0x8b0500000000	            mov eax, dword [0x04000be0] 	       615	ui.c	FUNCTION_19	IF_1
0x4000be0	          0x83f801	                              cmp eax, 1	       615	ui.c	FUNCTION_19	IF_1
0x4000be3	            0x7f36	                            jg 0x4000c1b	       615	ui.c	FUNCTION_19	IF_1
0x4000be5	    0x8b0500000000	            mov eax, dword [0x04000beb] 	       617	ui.c	FUNCTION_19
0x4000beb	    0x890500000000	            mov dword [0x04000bf1], eax 	       617	ui.c	FUNCTION_19
0x4000bf1	    0xc70500000000	               mov dword [0x04000bfb], 0	       618	ui.c	FUNCTION_19
0x4000bfb	    0x8b0500000000	            mov eax, dword [0x04000c01] 	       620	ui.c	FUNCTION_19	IF_2
0x4000c01	            0x85c0	                           test eax, eax	       620	ui.c	FUNCTION_19	IF_2
0x4000c03	            0x7417	                            je 0x4000c1c	       620	ui.c	FUNCTION_19	IF_2
0x4000c05	    0xc70500000000	               mov dword [0x04000c0f], 0	       622	ui.c	FUNCTION_19	IF_2
0x4000c0f	    0xc70500000000	               mov dword [0x04000c19], 0	       623	ui.c	FUNCTION_19	IF_2
0x4000c19	            0xeb01	                           jmp 0x4000c1c	       623	ui.c	FUNCTION_19	IF_2
0x4000c1b	              0x90	                                     nop	       616	ui.c	FUNCTION_19	IF_1
0x4000c1c	              0x5d	                                 pop rbp	       625	ui.c	FUNCTION_19
0x4000c1d	              0xc3	                                     ret	       625	ui.c	FUNCTION_19
get_input_buf	ELSE,0:FOR,0:functions,0:CALL,4:DO,0:WHILE,0:SWITCH,0:IF,2	33
0x400263d	              0x55	                                push rbp	      1652	ui.c	FUNCTION_48
0x400263e	          0x4889e5	                            mov rbp, rsp	      1652	ui.c	FUNCTION_48
0x4002641	        0x4883ec10	                           sub rsp, 0x10	      1652	ui.c	FUNCTION_48
0x4002645	      0xbf18000000	                           mov edi, 0x18	      1656	ui.c	FUNCTION_48	CALL_1
0x400264a	      0xe800000000	                          call 0x400264f	      1656	ui.c	FUNCTION_48	CALL_1
0x400264f	        0x488945f8	                mov qword [rbp - 8], rax	      1656	ui.c	FUNCTION_48	CALL_1
0x4002653	      0x48837df800	                  cmp qword [rbp - 8], 0	      1657	ui.c	FUNCTION_48	IF_1
0x4002658	            0x7452	                            je 0x40026ac	      1657	ui.c	FUNCTION_48	IF_1
0x400265a	    0x8b0500000000	            mov eax, dword [0x04002660] 	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4002660	          0x83c001	                              add eax, 1	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4002663	            0x89c7	                            mov edi, eax	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4002665	      0xe800000000	                          call 0x400266a	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x400266a	          0x4889c2	                            mov rdx, rax	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x400266d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4002671	        0x48895010	             mov qword [rax + 0x10], rdx	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4002675	        0x488b45f8	                mov rax, qword [rbp - 8]	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x4002679	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x400267d	          0x4885c0	                           test rax, rax	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x4002680	            0x741e	                            je 0x40026a0	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x4002682	    0x8b0500000000	            mov eax, dword [0x04002688] 	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x4002688	          0x4863d0	                         movsxd rdx, eax	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x400268b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x400268f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x4002693	      0xbe00000000	                              mov esi, 0	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x4002698	          0x4889c7	                            mov rdi, rax	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x400269b	      0xe800000000	                          call 0x40026a0	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x40026a0	    0x8b1500000000	            mov edx, dword [0x040026a6] 	      1663	ui.c	FUNCTION_48	IF_1
0x40026a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1663	ui.c	FUNCTION_48	IF_1
0x40026aa	            0x8910	                    mov dword [rax], edx	      1663	ui.c	FUNCTION_48	IF_1
0x40026ac	      0xe800000000	                          call 0x40026b1	      1665	ui.c	FUNCTION_48	CALL_4
0x40026b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1666	ui.c	FUNCTION_48
0x40026b5	              0xc9	                                   leave	      1667	ui.c	FUNCTION_48
0x40026b6	              0xc3	                                     ret	      1667	ui.c	FUNCTION_48
clip_may_redraw_selection	ELSE,0:FOR,0:functions,0:CALL,1:DO,0:WHILE,0:SWITCH,0:IF,4	58
0x400178b	              0x55	                                push rbp	      1040	ui.c	FUNCTION_29
0x400178c	          0x4889e5	                            mov rbp, rsp	      1040	ui.c	FUNCTION_29
0x400178f	        0x4883ec20	                           sub rsp, 0x20	      1040	ui.c	FUNCTION_29
0x4001793	          0x897dec	             mov dword [rbp - 0x14], edi	      1040	ui.c	FUNCTION_29
0x4001796	          0x8975e8	             mov dword [rbp - 0x18], esi	      1040	ui.c	FUNCTION_29
0x4001799	          0x8955e4	             mov dword [rbp - 0x1c], edx	      1040	ui.c	FUNCTION_29
0x400179c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1041	ui.c	FUNCTION_29
0x400179f	          0x8945f8	                mov dword [rbp - 8], eax	      1041	ui.c	FUNCTION_29
0x40017a2	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1042	ui.c	FUNCTION_29
0x40017a5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1042	ui.c	FUNCTION_29
0x40017a8	             0x1d0	                            add eax, edx	      1042	ui.c	FUNCTION_29
0x40017aa	          0x8945fc	                mov dword [rbp - 4], eax	      1042	ui.c	FUNCTION_29
0x40017ad	     0xfb705000000	           movzx eax, word [0x040017b4] 	      1044	ui.c	FUNCTION_29	IF_1
0x40017b4	          0x6685c0	                             test ax, ax	      1044	ui.c	FUNCTION_29	IF_1
0x40017b7	     0xf8491000000	                            je 0x400184e	      1044	ui.c	FUNCTION_29	IF_1
0x40017bd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1045	ui.c	FUNCTION_29	IF_1
0x40017c0	          0x4863d0	                         movsxd rdx, eax	      1045	ui.c	FUNCTION_29	IF_1
0x40017c3	    0x488b05000000	            mov rax, qword [0x040017ca] 	      1045	ui.c	FUNCTION_29	IF_1
0x40017ca	          0x4839c2	                            cmp rdx, rax	      1045	ui.c	FUNCTION_29	IF_1
0x40017cd	            0x7c7f	                            jl 0x400184e	      1045	ui.c	FUNCTION_29	IF_1
0x40017cf	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1046	ui.c	FUNCTION_29	IF_1
0x40017d2	          0x4863d0	                         movsxd rdx, eax	      1046	ui.c	FUNCTION_29	IF_1
0x40017d5	    0x488b05000000	            mov rax, qword [0x040017dc] 	      1046	ui.c	FUNCTION_29	IF_1
0x40017dc	          0x4839c2	                            cmp rdx, rax	      1046	ui.c	FUNCTION_29	IF_1
0x40017df	            0x7f6d	                            jg 0x400184e	      1046	ui.c	FUNCTION_29	IF_1
0x40017e1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40017e4	          0x4863d0	                         movsxd rdx, eax	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40017e7	    0x488b05000000	            mov rax, qword [0x040017ee] 	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40017ee	          0x4839c2	                            cmp rdx, rax	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40017f1	            0x7514	                           jne 0x4001807	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40017f3	    0x8b0500000000	            mov eax, dword [0x040017f9] 	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40017f9	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40017fc	            0x7e09	                           jle 0x4001807	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40017fe	    0x8b0500000000	            mov eax, dword [0x04001804] 	      1049	ui.c	FUNCTION_29	IF_1	IF_2
0x4001804	          0x8945f8	                mov dword [rbp - 8], eax	      1049	ui.c	FUNCTION_29	IF_1	IF_2
0x4001807	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x400180a	          0x4863d0	                         movsxd rdx, eax	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x400180d	    0x488b05000000	            mov rax, qword [0x04001814] 	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x4001814	          0x4839c2	                            cmp rdx, rax	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x4001817	            0x7514	                           jne 0x400182d	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x4001819	    0x8b0500000000	            mov eax, dword [0x0400181f] 	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x400181f	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x4001822	            0x7d09	                           jge 0x400182d	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x4001824	    0x8b0500000000	            mov eax, dword [0x0400182a] 	      1051	ui.c	FUNCTION_29	IF_1	IF_3
0x400182a	          0x8945fc	                mov dword [rbp - 4], eax	      1051	ui.c	FUNCTION_29	IF_1	IF_3
0x400182d	          0x8b45fc	                mov eax, dword [rbp - 4]	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x4001830	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x4001833	            0x7e19	                           jle 0x400184e	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x4001835	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x4001838	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x400183b	          0x8b75f8	                mov esi, dword [rbp - 8]	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x400183e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x4001841	    0x41b800000000	                              mov r8d, 0	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x4001847	            0x89c7	                            mov edi, eax	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x4001849	      0xe85d010000	               call sym.clip_invert_area	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x400184e	              0x90	                                     nop	      1055	ui.c	FUNCTION_29
0x400184f	              0xc9	                                   leave	      1055	ui.c	FUNCTION_29
0x4001850	              0xc3	                                     ret	      1055	ui.c	FUNCTION_29
clip_may_clear_selection	ELSE,0:FOR,0:functions,0:CALL,1:DO,0:WHILE,0:SWITCH,0:IF,1	23
0x40018ac	              0x55	                                push rbp	      1078	ui.c	FUNCTION_31
0x40018ad	          0x4889e5	                            mov rbp, rsp	      1078	ui.c	FUNCTION_31
0x40018b0	        0x4883ec10	                           sub rsp, 0x10	      1078	ui.c	FUNCTION_31
0x40018b4	          0x897dfc	                mov dword [rbp - 4], edi	      1078	ui.c	FUNCTION_31
0x40018b7	          0x8975f8	                mov dword [rbp - 8], esi	      1078	ui.c	FUNCTION_31
0x40018ba	     0xfb705000000	           movzx eax, word [0x040018c1] 	      1079	ui.c	FUNCTION_31	IF_1
0x40018c1	        0x6683f802	                               cmp ax, 2	      1079	ui.c	FUNCTION_31	IF_1
0x40018c5	            0x752e	                           jne 0x40018f5	      1079	ui.c	FUNCTION_31	IF_1
0x40018c7	          0x8b45f8	                mov eax, dword [rbp - 8]	      1080	ui.c	FUNCTION_31	IF_1
0x40018ca	          0x4863d0	                         movsxd rdx, eax	      1080	ui.c	FUNCTION_31	IF_1
0x40018cd	    0x488b05000000	            mov rax, qword [0x040018d4] 	      1080	ui.c	FUNCTION_31	IF_1
0x40018d4	          0x4839c2	                            cmp rdx, rax	      1080	ui.c	FUNCTION_31	IF_1
0x40018d7	            0x7c1c	                            jl 0x40018f5	      1080	ui.c	FUNCTION_31	IF_1
0x40018d9	          0x8b45fc	                mov eax, dword [rbp - 4]	      1081	ui.c	FUNCTION_31	IF_1
0x40018dc	          0x4863d0	                         movsxd rdx, eax	      1081	ui.c	FUNCTION_31	IF_1
0x40018df	    0x488b05000000	            mov rax, qword [0x040018e6] 	      1081	ui.c	FUNCTION_31	IF_1
0x40018e6	          0x4839c2	                            cmp rdx, rax	      1081	ui.c	FUNCTION_31	IF_1
0x40018e9	            0x7f0a	                            jg 0x40018f5	      1081	ui.c	FUNCTION_31	IF_1
0x40018eb	      0xbf00000000	                              mov edi, 0	      1082	ui.c	FUNCTION_31	CALL_1
0x40018f0	      0xe800000000	                          call 0x40018f5	      1082	ui.c	FUNCTION_31	CALL_1
0x40018f5	              0x90	                                     nop	      1083	ui.c	FUNCTION_31
0x40018f6	              0xc9	                                   leave	      1083	ui.c	FUNCTION_31
0x40018f7	              0xc3	                                     ret	      1083	ui.c	FUNCTION_31
clip_gen_owner_exists	ELSE,1:FOR,0:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0:IF,1	16
0x40025d4	              0x55	                                push rbp	      1563	ui.c	FUNCTION_43
0x40025d5	          0x4889e5	                            mov rbp, rsp	      1563	ui.c	FUNCTION_43
0x40025d8	        0x4883ec10	                           sub rsp, 0x10	      1563	ui.c	FUNCTION_43
0x40025dc	        0x48897df8	                mov qword [rbp - 8], rdi	      1563	ui.c	FUNCTION_43
0x40025e0	    0x8b0500000000	            mov eax, dword [0x040025e6] 	      1566	ui.c	FUNCTION_43	IF_1
0x40025e6	            0x85c0	                           test eax, eax	      1566	ui.c	FUNCTION_43	IF_1
0x40025e8	            0x740e	                            je 0x40025f8	      1566	ui.c	FUNCTION_43	IF_1
0x40025ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      1567	ui.c	FUNCTION_43	CALL_1
0x40025ee	          0x4889c7	                            mov rdi, rax	      1567	ui.c	FUNCTION_43	CALL_1
0x40025f1	      0xe800000000	                          call 0x40025f6	      1567	ui.c	FUNCTION_43	CALL_1
0x40025f6	            0xeb0c	                           jmp 0x4002604	      1567	ui.c	FUNCTION_43	CALL_1
0x40025f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1570	ui.c	FUNCTION_43	CALL_2
0x40025fc	          0x4889c7	                            mov rdi, rax	      1570	ui.c	FUNCTION_43	CALL_2
0x40025ff	      0xe800000000	                          call 0x4002604	      1570	ui.c	FUNCTION_43	CALL_2
0x4002604	              0xc9	                                   leave	      1574	ui.c	FUNCTION_43
0x4002605	              0xc3	                                     ret	      1574	ui.c	FUNCTION_43
clip_clear_selection	ELSE,0:FOR,0:functions,0:CALL,1:DO,0:WHILE,0:SWITCH,0:IF,1	29
0x4001851	              0x55	                                push rbp	      1063	ui.c	FUNCTION_30
0x4001852	          0x4889e5	                            mov rbp, rsp	      1063	ui.c	FUNCTION_30
0x4001855	        0x4883ec10	                           sub rsp, 0x10	      1063	ui.c	FUNCTION_30
0x4001859	        0x48897df8	                mov qword [rbp - 8], rdi	      1063	ui.c	FUNCTION_30
0x400185d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1065	ui.c	FUNCTION_30	IF_1
0x4001861	         0xfb74048	           movzx eax, word [rax + 0x48] 	      1065	ui.c	FUNCTION_30	IF_1
0x4001865	          0x6685c0	                             test ax, ax	      1065	ui.c	FUNCTION_30	IF_1
0x4001868	            0x743f	                            je 0x40018a9	      1065	ui.c	FUNCTION_30	IF_1
0x400186a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1068	ui.c	FUNCTION_30	CALL_1
0x400186e	          0x8b5020	            mov edx, dword [rax + 0x20] 	      1068	ui.c	FUNCTION_30	CALL_1
0x4001871	        0x488b45f8	                mov rax, qword [rbp - 8]	      1068	ui.c	FUNCTION_30	CALL_1
0x4001875	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1068	ui.c	FUNCTION_30	CALL_1
0x4001879	            0x89c6	                            mov esi, eax	      1068	ui.c	FUNCTION_30	CALL_1
0x400187b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1068	ui.c	FUNCTION_30	CALL_1
0x400187f	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1068	ui.c	FUNCTION_30	CALL_1
0x4001882	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1068	ui.c	FUNCTION_30	CALL_1
0x4001886	        0x488b4908	                mov rcx, qword [rcx + 8]	      1068	ui.c	FUNCTION_30	CALL_1
0x400188a	            0x89cf	                            mov edi, ecx	      1068	ui.c	FUNCTION_30	CALL_1
0x400188c	    0x41b801000000	                              mov r8d, 1	      1068	ui.c	FUNCTION_30	CALL_1
0x4001892	            0x89d1	                            mov ecx, edx	      1068	ui.c	FUNCTION_30	CALL_1
0x4001894	            0x89f2	                            mov edx, esi	      1068	ui.c	FUNCTION_30	CALL_1
0x4001896	            0x89c6	                            mov esi, eax	      1068	ui.c	FUNCTION_30	CALL_1
0x4001898	      0xe80e010000	               call sym.clip_invert_area	      1068	ui.c	FUNCTION_30	CALL_1
0x400189d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1070	ui.c	FUNCTION_30
0x40018a1	    0x66c740480000	                mov word [rax + 0x48], 0	      1070	ui.c	FUNCTION_30
0x40018a7	            0xeb01	                           jmp 0x40018aa	      1070	ui.c	FUNCTION_30
0x40018a9	              0x90	                                     nop	      1066	ui.c	FUNCTION_30	IF_1
0x40018aa	              0xc9	                                   leave	      1071	ui.c	FUNCTION_30
0x40018ab	              0xc3	                                     ret	      1071	ui.c	FUNCTION_30
clip_copy_selection	ELSE,0:FOR,0:functions,0:CALL,5:DO,0:WHILE,0:SWITCH,0:IF,2	37
0x4000b50	              0x55	                                push rbp	       588	ui.c	FUNCTION_18
0x4000b51	          0x4889e5	                            mov rbp, rsp	       588	ui.c	FUNCTION_18
0x4000b54	        0x4883ec10	                           sub rsp, 0x10	       588	ui.c	FUNCTION_18
0x4000b58	        0x48897df8	                mov qword [rbp - 8], rdi	       588	ui.c	FUNCTION_18
0x4000b5c	    0x8b0500000000	            mov eax, dword [0x04000b62] 	       589	ui.c	FUNCTION_18	IF_1
0x4000b62	            0x85c0	                           test eax, eax	       589	ui.c	FUNCTION_18	IF_1
0x4000b64	            0x745e	                            je 0x4000bc4	       589	ui.c	FUNCTION_18	IF_1
0x4000b66	    0x8b0500000000	            mov eax, dword [0x04000b6c] 	       589	ui.c	FUNCTION_18	IF_1
0x4000b6c	          0x83e001	                              and eax, 1	       589	ui.c	FUNCTION_18	IF_1
0x4000b6f	            0x85c0	                           test eax, eax	       589	ui.c	FUNCTION_18	IF_1
0x4000b71	            0x7451	                            je 0x4000bc4	       589	ui.c	FUNCTION_18	IF_1
0x4000b73	        0x488b45f8	                mov rax, qword [rbp - 8]	       589	ui.c	FUNCTION_18	IF_1
0x4000b77	            0x8b00	                    mov eax, dword [rax]	       589	ui.c	FUNCTION_18	IF_1
0x4000b79	            0x85c0	                           test eax, eax	       589	ui.c	FUNCTION_18	IF_1
0x4000b7b	            0x7447	                            je 0x4000bc4	       589	ui.c	FUNCTION_18	IF_1
0x4000b7d	        0x488b45f8	                mov rax, qword [rbp - 8]	       591	ui.c	FUNCTION_18	IF_1	CALL_1
0x4000b81	          0x4889c7	                            mov rdi, rax	       591	ui.c	FUNCTION_18	IF_1	CALL_1
0x4000b84	      0xe800000000	                          call 0x4000b89	       591	ui.c	FUNCTION_18	IF_1	CALL_1
0x4000b89	        0x488b45f8	                mov rax, qword [rbp - 8]	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0x4000b8d	          0x4889c7	                            mov rdi, rax	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0x4000b90	      0xe800000000	                          call 0x4000b95	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0x4000b95	        0x488b45f8	                mov rax, qword [rbp - 8]	       593	ui.c	FUNCTION_18	IF_1	CALL_3
0x4000b99	          0x4889c7	                            mov rdi, rax	       593	ui.c	FUNCTION_18	IF_1	CALL_3
0x4000b9c	      0xe800000000	                          call 0x4000ba1	       593	ui.c	FUNCTION_18	IF_1	CALL_3
0x4000ba1	        0x488b45f8	                mov rax, qword [rbp - 8]	       594	ui.c	FUNCTION_18	IF_1	IF_2
0x4000ba5	          0x8b4004	                mov eax, dword [rax + 4]	       594	ui.c	FUNCTION_18	IF_1	IF_2
0x4000ba8	            0x85c0	                           test eax, eax	       594	ui.c	FUNCTION_18	IF_1	IF_2
0x4000baa	            0x740c	                            je 0x4000bb8	       594	ui.c	FUNCTION_18	IF_1	IF_2
0x4000bac	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x4000bb0	          0x4889c7	                            mov rdi, rax	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x4000bb3	      0xe800000000	                          call 0x4000bb8	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x4000bb8	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	ui.c	FUNCTION_18	IF_1	CALL_5
0x4000bbc	          0x4889c7	                            mov rdi, rax	       596	ui.c	FUNCTION_18	IF_1	CALL_5
0x4000bbf	      0xe800000000	                          call 0x4000bc4	       596	ui.c	FUNCTION_18	IF_1	CALL_5
0x4000bc4	              0x90	                                     nop	       598	ui.c	FUNCTION_18
0x4000bc5	              0xc9	                                   leave	       598	ui.c	FUNCTION_18
0x4000bc6	              0xc3	                                     ret	       598	ui.c	FUNCTION_18
trash_input_buf	ELSE,0:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,0	6
0x4002811	              0x55	                                push rbp	      1762	ui.c	FUNCTION_53
0x4002812	          0x4889e5	                            mov rbp, rsp	      1762	ui.c	FUNCTION_53
0x4002815	    0xc70500000000	               mov dword [0x0400281f], 0	      1763	ui.c	FUNCTION_53
0x400281f	              0x90	                                     nop	      1764	ui.c	FUNCTION_53
0x4002820	              0x5d	                                 pop rbp	      1764	ui.c	FUNCTION_53
0x4002821	              0xc3	                                     ret	      1764	ui.c	FUNCTION_53
clip_update_selection	ELSE,1:FOR,0:functions,0:CALL,8:DO,0:WHILE,0:SWITCH,0:IF,4	139
0x40007a2	              0x55	                                push rbp	       477	ui.c	FUNCTION_15
0x40007a3	          0x4889e5	                            mov rbp, rsp	       477	ui.c	FUNCTION_15
0x40007a6	              0x53	                                push rbx	       477	ui.c	FUNCTION_15
0x40007a7	        0x4883ec38	                           sub rsp, 0x38	       477	ui.c	FUNCTION_15
0x40007ab	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       477	ui.c	FUNCTION_15
0x40007af	    0x8b0500000000	            mov eax, dword [0x040007b5] 	       481	ui.c	FUNCTION_15	IF_1
0x40007b5	            0x85c0	                           test eax, eax	       481	ui.c	FUNCTION_15	IF_1
0x40007b7	     0xf85e6010000	                           jne 0x40009a3	       481	ui.c	FUNCTION_15	IF_1
0x40007bd	    0x8b0500000000	            mov eax, dword [0x040007c3] 	       481	ui.c	FUNCTION_15	IF_1
0x40007c3	            0x85c0	                           test eax, eax	       481	ui.c	FUNCTION_15	IF_1
0x40007c5	     0xf84d8010000	                            je 0x40009a3	       481	ui.c	FUNCTION_15	IF_1
0x40007cb	    0x8b0500000000	            mov eax, dword [0x040007d1] 	       481	ui.c	FUNCTION_15	IF_1
0x40007d1	          0x83e001	                              and eax, 1	       481	ui.c	FUNCTION_15	IF_1
0x40007d4	            0x85c0	                           test eax, eax	       481	ui.c	FUNCTION_15	IF_1
0x40007d6	     0xf84c7010000	                            je 0x40009a3	       481	ui.c	FUNCTION_15	IF_1
0x40007dc	    0x488b15000000	            mov rdx, qword [0x040007e3] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x40007e3	    0x488b05000000	            mov rax, qword [0x040007ea] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x40007ea	        0x488b4038	            mov rax, qword [rax + 0x38] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x40007ee	          0x4839c2	                            cmp rdx, rax	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x40007f1	            0x741a	                            je 0x400080d	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x40007f3	    0x488b15000000	            mov rdx, qword [0x040007fa] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x40007fa	    0x488b05000000	            mov rax, qword [0x04000801] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000801	        0x488b4038	            mov rax, qword [rax + 0x38] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000805	          0x4839c2	                            cmp rdx, rax	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000808	           0xf9cc0	                                 setl al	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400080b	            0xeb40	                           jmp 0x400084d	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400080d	    0x8b1500000000	            mov edx, dword [0x04000813] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000813	    0x488b05000000	            mov rax, qword [0x0400081a] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400081a	          0x8b4040	            mov eax, dword [rax + 0x40] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400081d	            0x39c2	                            cmp edx, eax	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400081f	            0x7417	                            je 0x4000838	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000821	    0x8b1500000000	            mov edx, dword [0x04000827] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000827	    0x488b05000000	            mov rax, qword [0x0400082e] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400082e	          0x8b4040	            mov eax, dword [rax + 0x40] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000831	            0x39c2	                            cmp edx, eax	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000833	           0xf9cc0	                                 setl al	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000836	            0xeb15	                           jmp 0x400084d	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000838	    0x8b1500000000	            mov edx, dword [0x0400083e] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400083e	    0x488b05000000	            mov rax, qword [0x04000845] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000845	          0x8b4044	            mov eax, dword [rax + 0x44] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000848	            0x39c2	                            cmp edx, eax	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400084a	           0xf9cc0	                                 setl al	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400084d	            0x84c0	                             test al, al	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400084f	            0x7455	                            je 0x40008a6	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000851	    0x488b05000000	            mov rax, qword [0x04000858] 	       485	ui.c	FUNCTION_15	IF_1	IF_2
0x4000858	    0x488b15000000	            mov rdx, qword [0x0400085f] 	       485	ui.c	FUNCTION_15	IF_1	IF_2
0x400085f	        0x488945d0	             mov qword [rbp - 0x30], rax	       485	ui.c	FUNCTION_15	IF_1	IF_2
0x4000863	        0x488955d8	             mov qword [rbp - 0x28], rdx	       485	ui.c	FUNCTION_15	IF_1	IF_2
0x4000867	    0x488b05000000	            mov rax, qword [0x0400086e] 	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x400086e	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x4000872	        0x488b4038	            mov rax, qword [rax + 0x38] 	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x4000876	        0x488945e0	             mov qword [rbp - 0x20], rax	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x400087a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x400087e	    0x8b0500000000	            mov eax, dword [0x04000884] 	       488	ui.c	FUNCTION_15	IF_1	IF_2	IF_3
0x4000884	            0x85c0	                           test eax, eax	       488	ui.c	FUNCTION_15	IF_1	IF_2	IF_3
0x4000886	            0x744b	                            je 0x40008d3	       488	ui.c	FUNCTION_15	IF_1	IF_2	IF_3
0x4000888	    0x488b1d000000	            mov rbx, qword [0x0400088f] 	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400088f	      0xe800000000	                          call 0x4000894	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000894	          0x4889c7	                            mov rdi, rax	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000897	            0xffd3	                                call rbx	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000899	          0x8d50ff	                      lea edx, [rax - 1]	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400089c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400089f	             0x1d0	                            add eax, edx	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x40008a1	          0x8945e8	             mov dword [rbp - 0x18], eax	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x40008a4	            0xeb2d	                           jmp 0x40008d3	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x40008a6	    0x488b05000000	            mov rax, qword [0x040008ad] 	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40008ad	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40008b1	        0x488b4038	            mov rax, qword [rax + 0x38] 	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40008b5	        0x488945d0	             mov qword [rbp - 0x30], rax	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40008b9	        0x488955d8	             mov qword [rbp - 0x28], rdx	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40008bd	    0x488b05000000	            mov rax, qword [0x040008c4] 	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40008c4	    0x488b15000000	            mov rdx, qword [0x040008cb] 	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40008cb	        0x488945e0	             mov qword [rbp - 0x20], rax	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40008cf	        0x488955e8	             mov qword [rbp - 0x18], rdx	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40008d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008d7	        0x488b5008	                mov rdx, qword [rax + 8]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008df	          0x4839c2	                            cmp rdx, rax	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008e2	            0x755a	                           jne 0x400093e	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008e8	          0x8b5010	            mov edx, dword [rax + 0x10] 	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008eb	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008ee	            0x39c2	                            cmp edx, eax	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008f0	            0x754c	                           jne 0x400093e	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008f2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008f6	          0x8b5014	            mov edx, dword [rax + 0x14] 	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008f9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008fc	            0x39c2	                            cmp edx, eax	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40008fe	            0x753e	                           jne 0x400093e	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x4000900	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4000904	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4000908	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400090c	          0x4839c2	                            cmp rdx, rax	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400090f	            0x752d	                           jne 0x400093e	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4000911	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4000915	          0x8b5020	            mov edx, dword [rax + 0x20] 	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4000918	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400091b	            0x39c2	                            cmp edx, eax	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400091d	            0x751f	                           jne 0x400093e	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400091f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4000923	          0x8b5024	            mov edx, dword [rax + 0x24] 	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4000926	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4000929	            0x39c2	                            cmp edx, eax	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400092b	            0x7511	                           jne 0x400093e	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400092d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x4000931	          0x8b5028	            mov edx, dword [rax + 0x28] 	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x4000934	    0x8b0500000000	            mov eax, dword [0x0400093a] 	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x400093a	            0x39c2	                            cmp edx, eax	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x400093c	            0x7465	                            je 0x40009a3	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x400093e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       501	ui.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4000942	          0x4889c7	                            mov rdi, rax	       501	ui.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4000945	      0xe800000000	                          call 0x400094a	       501	ui.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x400094a	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x400094e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x4000952	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x4000956	        0x48894108	                mov qword [rcx + 8], rax	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x400095a	        0x48895110	             mov qword [rcx + 0x10], rdx	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x400095e	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x4000962	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x4000966	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x400096a	        0x48894118	             mov qword [rcx + 0x18], rax	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x400096e	        0x48895120	             mov qword [rcx + 0x20], rdx	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x4000972	    0x8b1500000000	            mov edx, dword [0x04000978] 	       504	ui.c	FUNCTION_15	IF_1	IF_4
0x4000978	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       504	ui.c	FUNCTION_15	IF_1	IF_4
0x400097c	          0x895028	             mov dword [rax + 0x28], edx	       504	ui.c	FUNCTION_15	IF_1	IF_4
0x400097f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       505	ui.c	FUNCTION_15	IF_1	IF_4	CALL_6
0x4000983	          0x4889c7	                            mov rdi, rax	       505	ui.c	FUNCTION_15	IF_1	IF_4	CALL_6
0x4000986	      0xe800000000	                          call 0x400098b	       505	ui.c	FUNCTION_15	IF_1	IF_4	CALL_6
0x400098b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       506	ui.c	FUNCTION_15	IF_1	IF_4	CALL_7
0x400098f	          0x4889c7	                            mov rdi, rax	       506	ui.c	FUNCTION_15	IF_1	IF_4	CALL_7
0x4000992	      0xe800000000	                          call 0x4000997	       506	ui.c	FUNCTION_15	IF_1	IF_4	CALL_7
0x4000997	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       507	ui.c	FUNCTION_15	IF_1	IF_4	CALL_8
0x400099b	          0x4889c7	                            mov rdi, rax	       507	ui.c	FUNCTION_15	IF_1	IF_4	CALL_8
0x400099e	      0xe800000000	                          call 0x40009a3	       507	ui.c	FUNCTION_15	IF_1	IF_4	CALL_8
0x40009a3	              0x90	                                     nop	       510	ui.c	FUNCTION_15
0x40009a4	        0x4883c438	                           add rsp, 0x38	       510	ui.c	FUNCTION_15
0x40009a8	              0x5b	                                 pop rbx	       510	ui.c	FUNCTION_15
0x40009a9	              0x5d	                                 pop rbp	       510	ui.c	FUNCTION_15
0x40009aa	              0xc3	                                     ret	       510	ui.c	FUNCTION_15
clip_x11_request_selection_cb	ELSE,4:FOR,0:functions,0:CALL,12:DO,0:WHILE,0:SWITCH,0:IF,10	211
0x4002fa9	              0x55	                                push rbp	      2137	ui.c	FUNCTION_65
0x4002faa	          0x4889e5	                            mov rbp, rsp	      2137	ui.c	FUNCTION_65
0x4002fad	    0x4881ecb00000	                           sub rsp, 0xb0	      2137	ui.c	FUNCTION_65
0x4002fb4	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2137	ui.c	FUNCTION_65
0x4002fb8	        0x48897580	             mov qword [rbp - 0x80], rsi	      2137	ui.c	FUNCTION_65
0x4002fbc	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      2137	ui.c	FUNCTION_65
0x4002fc3	    0x48898d70ffff	             mov qword [rbp - 0x90], rcx	      2137	ui.c	FUNCTION_65
0x4002fca	    0x4c898568ffff	              mov qword [rbp - 0x98], r8	      2137	ui.c	FUNCTION_65
0x4002fd1	    0x4c898d60ffff	              mov qword [rbp - 0xa0], r9	      2137	ui.c	FUNCTION_65
0x4002fd8	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2137	ui.c	FUNCTION_65
0x4002fdc	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2137	ui.c	FUNCTION_65
0x4002fe3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2137	ui.c	FUNCTION_65
0x4002fec	        0x488945f8	                mov qword [rbp - 8], rax	      2137	ui.c	FUNCTION_65
0x4002ff0	            0x31c0	                            xor eax, eax	      2137	ui.c	FUNCTION_65
0x4002ff2	    0xc74598ff0000	           mov dword [rbp - 0x68], 0xff 	      2138	ui.c	FUNCTION_65
0x4002ff9	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2141	ui.c	FUNCTION_65
0x4003001	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2144	ui.c	FUNCTION_65
0x4003009	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2147	ui.c	FUNCTION_65	IF_1
0x4003010	          0x488b10	                    mov rdx, qword [rax]	      2147	ui.c	FUNCTION_65	IF_1
0x4003013	    0x488b05000000	            mov rax, qword [0x0400301a] 	      2147	ui.c	FUNCTION_65	IF_1
0x400301a	          0x4839c2	                            cmp rdx, rax	      2147	ui.c	FUNCTION_65	IF_1
0x400301d	            0x750a	                           jne 0x4003029	      2147	ui.c	FUNCTION_65	IF_1
0x400301f	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2148	ui.c	FUNCTION_65	IF_1
0x4003027	            0xeb08	                           jmp 0x4003031	      2148	ui.c	FUNCTION_65	IF_1
0x4003029	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2150	ui.c	FUNCTION_65	ELSE_1
0x4003031	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4003039	            0x740f	                            je 0x400304a	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x400303b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4003042	          0x488b00	                    mov rax, qword [rax]	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4003045	          0x4885c0	                           test rax, rax	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4003048	            0x751b	                           jne 0x4003065	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x400304a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x400304e	          0x4889c7	                            mov rdi, rax	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x4003051	      0xe800000000	                          call 0x4003056	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x4003056	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2155	ui.c	FUNCTION_65	ELSE_1	IF_2
0x400305a	    0xc70000000000	                      mov dword [rax], 0	      2155	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4003060	      0xe9b3020000	                           jmp 0x4003318	      2156	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4003065	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2158	ui.c	FUNCTION_65
0x400306c	        0x488945b0	             mov qword [rbp - 0x50], rax	      2158	ui.c	FUNCTION_65
0x4003070	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2159	ui.c	FUNCTION_65
0x4003077	          0x488b00	                    mov rax, qword [rax]	      2159	ui.c	FUNCTION_65
0x400307a	        0x488945a8	             mov qword [rbp - 0x58], rax	      2159	ui.c	FUNCTION_65
0x400307e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2160	ui.c	FUNCTION_65	IF_3
0x4003085	          0x488b10	                    mov rdx, qword [rax]	      2160	ui.c	FUNCTION_65	IF_3
0x4003088	    0x488b05000000	            mov rax, qword [0x0400308f] 	      2160	ui.c	FUNCTION_65	IF_3
0x400308f	          0x4839c2	                            cmp rdx, rax	      2160	ui.c	FUNCTION_65	IF_3
0x4003092	            0x751f	                           jne 0x40030b3	      2160	ui.c	FUNCTION_65	IF_3
0x4003094	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2162	ui.c	FUNCTION_65	IF_3
0x4003098	        0x488d5001	                      lea rdx, [rax + 1]	      2162	ui.c	FUNCTION_65	IF_3
0x400309c	        0x488955b0	             mov qword [rbp - 0x50], rdx	      2162	ui.c	FUNCTION_65	IF_3
0x40030a0	           0xfb600	                   movzx eax, byte [rax]	      2162	ui.c	FUNCTION_65	IF_3
0x40030a3	           0xfb6c0	                           movzx eax, al	      2162	ui.c	FUNCTION_65	IF_3
0x40030a6	          0x894598	             mov dword [rbp - 0x68], eax	      2162	ui.c	FUNCTION_65	IF_3
0x40030a9	      0x48836da801	               sub qword [rbp - 0x58], 1	      2163	ui.c	FUNCTION_65	IF_3
0x40030ae	      0xe915020000	                           jmp 0x40032c8	      2163	ui.c	FUNCTION_65	IF_3
0x40030b3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030ba	          0x488b10	                    mov rdx, qword [rax]	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030bd	    0x488b05000000	            mov rax, qword [0x040030c4] 	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030c4	          0x4839c2	                            cmp rdx, rax	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030c7	     0xf85c9000000	                           jne 0x4003196	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030cd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030d1	        0x488d5001	                      lea rdx, [rax + 1]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030d5	        0x488955b0	             mov qword [rbp - 0x50], rdx	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030d9	           0xfb600	                   movzx eax, byte [rax]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030dc	           0xfb6c0	                           movzx eax, al	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030df	          0x894598	             mov dword [rbp - 0x68], eax	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030e2	      0x48836da801	               sub qword [rbp - 0x58], 1	      2174	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030e7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2176	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030eb	        0x488945c8	             mov qword [rbp - 0x38], rax	      2176	ui.c	FUNCTION_65	ELSE_2	IF_4
0x40030ef	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x40030f3	          0x4889c7	                            mov rdi, rax	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x40030f6	      0xe800000000	                          call 0x40030fb	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x40030fb	        0x4883c001	                              add rax, 1	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x40030ff	        0x480145b0	            add qword [rbp - 0x50], rax 	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x4003103	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4003107	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x400310b	          0x4829c2	                            sub rdx, rax	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x400310e	          0x4889d0	                            mov rax, rdx	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4003111	        0x482945a8	             sub qword [rbp - 0x58], rax	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4003115	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      2182	ui.c	FUNCTION_65	ELSE_2	IF_4
0x400311c	    0x488b15000000	            mov rdx, qword [0x04003123] 	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4003123	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4003127	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x400312b	          0x4889ce	                            mov rsi, rcx	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x400312e	          0x4889c7	                            mov rdi, rax	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4003131	      0xe800000000	                          call 0x4003136	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4003136	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4003139	            0x85c0	                           test eax, eax	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x400313b	     0xf8487010000	                            je 0x40032c8	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4003141	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2186	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4003145	          0x894594	             mov dword [rbp - 0x6c], eax	      2186	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4003148	        0x488d5594	                   lea rdx, [rbp - 0x6c]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x400314c	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x4003150	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x4003154	          0x4889ce	                            mov rsi, rcx	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x4003157	          0x4889c7	                            mov rdi, rax	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x400315a	      0xe800000000	                          call 0x400315f	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x400315f	        0x488945c0	             mov qword [rbp - 0x40], rax	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x4003163	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2188	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4003166	            0x4898	                                    cdqe	      2188	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4003168	        0x488945a8	             mov qword [rbp - 0x58], rax	      2188	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x400316c	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2189	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	IF_6
0x4003171	            0x7408	                            je 0x400317b	      2189	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	IF_6
0x4003173	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2190	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	IF_6
0x4003177	        0x488945b0	             mov qword [rbp - 0x50], rax	      2190	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	IF_6
0x400317b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x400317f	      0xba00000000	                              mov edx, 0	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x4003184	      0xbe00000000	                              mov esi, 0	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x4003189	          0x4889c7	                            mov rdi, rax	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x400318c	      0xe800000000	                          call 0x4003191	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x4003191	      0xe932010000	                           jmp 0x40032c8	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x4003196	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400319d	          0x488b10	                    mov rdx, qword [rax]	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031a0	    0x488b05000000	            mov rax, qword [0x040031a7] 	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031a7	          0x4839c2	                            cmp rdx, rax	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031aa	            0x743e	                            je 0x40031ea	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031ac	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031b3	          0x488b10	                    mov rdx, qword [rax]	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031b6	    0x488b05000000	            mov rax, qword [0x040031bd] 	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031bd	          0x4839c2	                            cmp rdx, rax	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031c0	            0x7428	                            je 0x40031ea	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031c2	    0x8b0500000000	            mov eax, dword [0x040031c8] 	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031c8	            0x85c0	                           test eax, eax	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031ca	     0xf84f8000000	                            je 0x40032c8	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031d0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2204	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031d7	          0x488b10	                    mov rdx, qword [rax]	      2204	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031da	    0x488b05000000	            mov rax, qword [0x040031e1] 	      2204	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031e1	          0x4839c2	                            cmp rdx, rax	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031e4	     0xf85de000000	                           jne 0x40032c8	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031ea	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      2207	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031f1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2210	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031f8	        0x488945d0	             mov qword [rbp - 0x30], rax	      2210	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40031fc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4003203	          0x488b00	                    mov rax, qword [rax]	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4003206	        0x488945d8	             mov qword [rbp - 0x28], rax	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400320a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4003211	            0x8b00	                    mov eax, dword [rax]	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4003213	          0x8945e0	             mov dword [rbp - 0x20], eax	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4003216	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2213	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400321a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2213	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400321e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x4003225	          0x488b10	                    mov rdx, qword [rax]	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x4003228	    0x488b05000000	            mov rax, qword [0x0400322f] 	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x400322f	          0x4839c2	                            cmp rdx, rax	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x4003232	            0x7531	                           jne 0x4003265	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x4003234	    0x8b0500000000	            mov eax, dword [0x0400323a] 	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400323a	            0x85c0	                           test eax, eax	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400323c	            0x7407	                            je 0x4003245	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400323e	      0xe800000000	                          call 0x4003243	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4003243	            0xeb07	                           jmp 0x400324c	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4003245	    0x488b05000000	            mov rax, qword [0x0400324c] 	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400324c	        0x488d4d94	                   lea rcx, [rbp - 0x6c]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4003250	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4003254	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4003258	          0x4889c7	                            mov rdi, rax	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400325b	      0xe800000000	                          call 0x4003260	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4003260	          0x89459c	             mov dword [rbp - 0x64], eax	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4003263	            0xeb2f	                           jmp 0x4003294	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4003265	    0x8b0500000000	            mov eax, dword [0x0400326b] 	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x400326b	            0x85c0	                           test eax, eax	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x400326d	            0x7407	                            je 0x4003276	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x400326f	      0xe800000000	                          call 0x4003274	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4003274	            0xeb07	                           jmp 0x400327d	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4003276	    0x488b05000000	            mov rax, qword [0x0400327d] 	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x400327d	        0x488d4d94	                   lea rcx, [rbp - 0x6c]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4003281	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4003285	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4003289	          0x4889c7	                            mov rdi, rax	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x400328c	      0xe800000000	                          call 0x4003291	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4003291	          0x89459c	             mov dword [rbp - 0x64], eax	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4003294	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x4003298	            0x7507	                           jne 0x40032a1	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x400329a	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x400329d	            0x85c0	                           test eax, eax	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x400329f	            0x7f0c	                            jg 0x40032ad	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40032a1	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40032a5	    0xc70000000000	                      mov dword [rax], 0	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40032ab	            0xeb6b	                           jmp 0x4003318	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40032ad	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40032b1	          0x488b00	                    mov rax, qword [rax]	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40032b4	        0x488945b0	             mov qword [rbp - 0x50], rax	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40032b8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x40032bc	          0x4889c7	                            mov rdi, rax	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x40032bf	      0xe800000000	                          call 0x40032c4	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x40032c4	        0x488945a8	             mov qword [rbp - 0x58], rax	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x40032c8	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2230	ui.c	FUNCTION_65	CALL_9
0x40032cc	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2230	ui.c	FUNCTION_65	CALL_9
0x40032d0	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      2230	ui.c	FUNCTION_65	CALL_9
0x40032d4	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2230	ui.c	FUNCTION_65	CALL_9
0x40032d7	            0x89c7	                            mov edi, eax	      2230	ui.c	FUNCTION_65	CALL_9
0x40032d9	      0xe800000000	                          call 0x40032de	      2230	ui.c	FUNCTION_65	CALL_9
0x40032de	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2232	ui.c	FUNCTION_65	IF_10
0x40032e2	          0x4885c0	                           test rax, rax	      2232	ui.c	FUNCTION_65	IF_10
0x40032e5	            0x740c	                            je 0x40032f3	      2232	ui.c	FUNCTION_65	IF_10
0x40032e7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2233	ui.c	FUNCTION_65	CALL_10
0x40032eb	          0x4889c7	                            mov rdi, rax	      2233	ui.c	FUNCTION_65	CALL_10
0x40032ee	      0xe800000000	                          call 0x40032f3	      2233	ui.c	FUNCTION_65	CALL_10
0x40032f3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2235	ui.c	FUNCTION_65	CALL_11
0x40032f7	          0x4889c7	                            mov rdi, rax	      2235	ui.c	FUNCTION_65	CALL_11
0x40032fa	      0xe800000000	                          call 0x40032ff	      2235	ui.c	FUNCTION_65	CALL_11
0x40032ff	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2237	ui.c	FUNCTION_65	CALL_12
0x4003306	          0x4889c7	                            mov rdi, rax	      2237	ui.c	FUNCTION_65	CALL_12
0x4003309	      0xe800000000	                          call 0x400330e	      2237	ui.c	FUNCTION_65	CALL_12
0x400330e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2238	ui.c	FUNCTION_65
0x4003312	    0xc70001000000	                      mov dword [rax], 1	      2238	ui.c	FUNCTION_65
0x4003318	        0x488b45f8	                mov rax, qword [rbp - 8]	      2239	ui.c	FUNCTION_65
0x400331c	    0x644833042528	                xor rax, qword fs:[0x28]	      2239	ui.c	FUNCTION_65
0x4003325	            0x7405	                            je 0x400332c	      2239	ui.c	FUNCTION_65
0x4003327	      0xe800000000	                          call 0x400332c	      2239	ui.c	FUNCTION_65
0x400332c	              0xc9	                                   leave	      2239	ui.c	FUNCTION_65
0x400332d	              0xc3	                                     ret	      2239	ui.c	FUNCTION_65
x11_setup_atoms	ELSE,0:FOR,0:functions,0:CALL,8:DO,0:WHILE,0:SWITCH,0:IF,0	56
0x4002cf1	              0x55	                                push rbp	      2048	ui.c	FUNCTION_62
0x4002cf2	          0x4889e5	                            mov rbp, rsp	      2048	ui.c	FUNCTION_62
0x4002cf5	        0x4883ec10	                           sub rsp, 0x10	      2048	ui.c	FUNCTION_62
0x4002cf9	        0x48897df8	                mov qword [rbp - 8], rdi	      2048	ui.c	FUNCTION_62
0x4002cfd	        0x488b45f8	                mov rax, qword [rbp - 8]	      2049	ui.c	FUNCTION_62	CALL_1
0x4002d01	      0xba00000000	                              mov edx, 0	      2049	ui.c	FUNCTION_62	CALL_1
0x4002d06	      0xbe00000000	                              mov esi, 0	      2049	ui.c	FUNCTION_62	CALL_1
0x4002d0b	          0x4889c7	                            mov rdi, rax	      2049	ui.c	FUNCTION_62	CALL_1
0x4002d0e	      0xe800000000	                          call 0x4002d13	      2049	ui.c	FUNCTION_62	CALL_1
0x4002d13	    0x488905000000	            mov qword [0x04002d1a], rax 	      2049	ui.c	FUNCTION_62	CALL_1
0x4002d1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2051	ui.c	FUNCTION_62	CALL_2
0x4002d1e	      0xba00000000	                              mov edx, 0	      2051	ui.c	FUNCTION_62	CALL_2
0x4002d23	      0xbe00000000	                              mov esi, 0	      2051	ui.c	FUNCTION_62	CALL_2
0x4002d28	          0x4889c7	                            mov rdi, rax	      2051	ui.c	FUNCTION_62	CALL_2
0x4002d2b	      0xe800000000	                          call 0x4002d30	      2051	ui.c	FUNCTION_62	CALL_2
0x4002d30	    0x488905000000	            mov qword [0x04002d37], rax 	      2051	ui.c	FUNCTION_62	CALL_2
0x4002d37	        0x488b45f8	                mov rax, qword [rbp - 8]	      2052	ui.c	FUNCTION_62	CALL_3
0x4002d3b	      0xba00000000	                              mov edx, 0	      2052	ui.c	FUNCTION_62	CALL_3
0x4002d40	      0xbe00000000	                              mov esi, 0	      2052	ui.c	FUNCTION_62	CALL_3
0x4002d45	          0x4889c7	                            mov rdi, rax	      2052	ui.c	FUNCTION_62	CALL_3
0x4002d48	      0xe800000000	                          call 0x4002d4d	      2052	ui.c	FUNCTION_62	CALL_3
0x4002d4d	    0x488905000000	            mov qword [0x04002d54], rax 	      2052	ui.c	FUNCTION_62	CALL_3
0x4002d54	        0x488b45f8	                mov rax, qword [rbp - 8]	      2054	ui.c	FUNCTION_62	CALL_4
0x4002d58	      0xba00000000	                              mov edx, 0	      2054	ui.c	FUNCTION_62	CALL_4
0x4002d5d	      0xbe00000000	                              mov esi, 0	      2054	ui.c	FUNCTION_62	CALL_4
0x4002d62	          0x4889c7	                            mov rdi, rax	      2054	ui.c	FUNCTION_62	CALL_4
0x4002d65	      0xe800000000	                          call 0x4002d6a	      2054	ui.c	FUNCTION_62	CALL_4
0x4002d6a	    0x488905000000	            mov qword [0x04002d71], rax 	      2054	ui.c	FUNCTION_62	CALL_4
0x4002d71	        0x488b45f8	                mov rax, qword [rbp - 8]	      2055	ui.c	FUNCTION_62	CALL_5
0x4002d75	      0xba00000000	                              mov edx, 0	      2055	ui.c	FUNCTION_62	CALL_5
0x4002d7a	      0xbe00000000	                              mov esi, 0	      2055	ui.c	FUNCTION_62	CALL_5
0x4002d7f	          0x4889c7	                            mov rdi, rax	      2055	ui.c	FUNCTION_62	CALL_5
0x4002d82	      0xe800000000	                          call 0x4002d87	      2055	ui.c	FUNCTION_62	CALL_5
0x4002d87	    0x488905000000	            mov qword [0x04002d8e], rax 	      2055	ui.c	FUNCTION_62	CALL_5
0x4002d8e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2056	ui.c	FUNCTION_62	CALL_6
0x4002d92	      0xba00000000	                              mov edx, 0	      2056	ui.c	FUNCTION_62	CALL_6
0x4002d97	      0xbe00000000	                              mov esi, 0	      2056	ui.c	FUNCTION_62	CALL_6
0x4002d9c	          0x4889c7	                            mov rdi, rax	      2056	ui.c	FUNCTION_62	CALL_6
0x4002d9f	      0xe800000000	                          call 0x4002da4	      2056	ui.c	FUNCTION_62	CALL_6
0x4002da4	    0x488905000000	            mov qword [0x04002dab], rax 	      2056	ui.c	FUNCTION_62	CALL_6
0x4002dab	    0x48c705000000	               mov qword [0x04002db6], 1	      2057	ui.c	FUNCTION_62
0x4002db6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2058	ui.c	FUNCTION_62	CALL_7
0x4002dba	      0xba00000000	                              mov edx, 0	      2058	ui.c	FUNCTION_62	CALL_7
0x4002dbf	      0xbe00000000	                              mov esi, 0	      2058	ui.c	FUNCTION_62	CALL_7
0x4002dc4	          0x4889c7	                            mov rdi, rax	      2058	ui.c	FUNCTION_62	CALL_7
0x4002dc7	      0xe800000000	                          call 0x4002dcc	      2058	ui.c	FUNCTION_62	CALL_7
0x4002dcc	    0x488905000000	            mov qword [0x04002dd3], rax 	      2058	ui.c	FUNCTION_62	CALL_7
0x4002dd3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2059	ui.c	FUNCTION_62	CALL_8
0x4002dd7	      0xba00000000	                              mov edx, 0	      2059	ui.c	FUNCTION_62	CALL_8
0x4002ddc	      0xbe00000000	                              mov esi, 0	      2059	ui.c	FUNCTION_62	CALL_8
0x4002de1	          0x4889c7	                            mov rdi, rax	      2059	ui.c	FUNCTION_62	CALL_8
0x4002de4	      0xe800000000	                          call 0x4002de9	      2059	ui.c	FUNCTION_62	CALL_8
0x4002de9	    0x488905000000	            mov qword [0x04002df0], rax 	      2059	ui.c	FUNCTION_62	CALL_8
0x4002df0	              0x90	                                     nop	      2060	ui.c	FUNCTION_62
0x4002df1	              0xc9	                                   leave	      2060	ui.c	FUNCTION_62
0x4002df2	              0xc3	                                     ret	      2060	ui.c	FUNCTION_62
open_app_context	ELSE,0:FOR,0:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0:IF,1	11
0x4002ccd	              0x55	                                push rbp	      2028	ui.c	FUNCTION_61
0x4002cce	          0x4889e5	                            mov rbp, rsp	      2028	ui.c	FUNCTION_61
0x4002cd1	    0x488b05000000	            mov rax, qword [0x04002cd8] 	      2029	ui.c	FUNCTION_61	IF_1
0x4002cd8	          0x4885c0	                           test rax, rax	      2029	ui.c	FUNCTION_61	IF_1
0x4002cdb	            0x7511	                           jne 0x4002cee	      2029	ui.c	FUNCTION_61	IF_1
0x4002cdd	      0xe800000000	                          call 0x4002ce2	      2031	ui.c	FUNCTION_61	IF_1	CALL_1
0x4002ce2	      0xe800000000	                          call 0x4002ce7	      2032	ui.c	FUNCTION_61	IF_1	CALL_2
0x4002ce7	    0x488905000000	            mov qword [0x04002cee], rax 	      2032	ui.c	FUNCTION_61	IF_1	CALL_2
0x4002cee	              0x90	                                     nop	      2034	ui.c	FUNCTION_61
0x4002cef	              0x5d	                                 pop rbp	      2034	ui.c	FUNCTION_61
0x4002cf0	              0xc3	                                     ret	      2034	ui.c	FUNCTION_61
vim_is_input_buf_full	ELSE,0:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,0	8
0x4002606	              0x55	                                push rbp	      1620	ui.c	FUNCTION_44
0x4002607	          0x4889e5	                            mov rbp, rsp	      1620	ui.c	FUNCTION_44
0x400260a	    0x8b0500000000	            mov eax, dword [0x04002610] 	      1621	ui.c	FUNCTION_44
0x4002610	      0x3dff0f0000	                          cmp eax, 0xfff	      1621	ui.c	FUNCTION_44
0x4002615	           0xf9fc0	                                 setg al	      1621	ui.c	FUNCTION_44
0x4002618	           0xfb6c0	                           movzx eax, al	      1621	ui.c	FUNCTION_44
0x400261b	              0x5d	                                 pop rbp	      1622	ui.c	FUNCTION_44
0x400261c	              0xc3	                                     ret	      1622	ui.c	FUNCTION_44
set_input_buf	ELSE,0:FOR,0:functions,0:CALL,3:DO,0:WHILE,0:SWITCH,0:IF,2	33
0x40026b7	              0x55	                                push rbp	      1675	ui.c	FUNCTION_49
0x40026b8	          0x4889e5	                            mov rbp, rsp	      1675	ui.c	FUNCTION_49
0x40026bb	        0x4883ec20	                           sub rsp, 0x20	      1675	ui.c	FUNCTION_49
0x40026bf	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1675	ui.c	FUNCTION_49
0x40026c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1676	ui.c	FUNCTION_49
0x40026c7	        0x488945f8	                mov qword [rbp - 8], rax	      1676	ui.c	FUNCTION_49
0x40026cb	      0x48837df800	                  cmp qword [rbp - 8], 0	      1678	ui.c	FUNCTION_49	IF_1
0x40026d0	            0x7453	                            je 0x4002725	      1678	ui.c	FUNCTION_49	IF_1
0x40026d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x40026d6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x40026da	          0x4885c0	                           test rax, rax	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x40026dd	            0x743a	                            je 0x4002719	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x40026df	        0x488b45f8	                mov rax, qword [rbp - 8]	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x40026e3	            0x8b00	                    mov eax, dword [rax]	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x40026e5	          0x4863d0	                         movsxd rdx, eax	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x40026e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x40026ec	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x40026f0	          0x4889c6	                            mov rsi, rax	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x40026f3	      0xbf00000000	                              mov edi, 0	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x40026f8	      0xe800000000	                          call 0x40026fd	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x40026fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x4002701	            0x8b00	                    mov eax, dword [rax]	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x4002703	    0x890500000000	            mov dword [0x04002709], eax 	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x4002709	        0x488b45f8	                mov rax, qword [rbp - 8]	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x400270d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4002711	          0x4889c7	                            mov rdi, rax	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4002714	      0xe800000000	                          call 0x4002719	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4002719	        0x488b45f8	                mov rax, qword [rbp - 8]	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x400271d	          0x4889c7	                            mov rdi, rax	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x4002720	      0xe800000000	                          call 0x4002725	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x4002725	              0x90	                                     nop	      1688	ui.c	FUNCTION_49
0x4002726	              0xc9	                                   leave	      1688	ui.c	FUNCTION_49
0x4002727	              0xc3	                                     ret	      1688	ui.c	FUNCTION_49
clip_gen_lose_selection	ELSE,1:FOR,0:functions,0:CALL,3:DO,0:WHILE,0:SWITCH,0:IF,1	17
0x40024f8	              0x55	                                push rbp	      1507	ui.c	FUNCTION_40
0x40024f9	          0x4889e5	                            mov rbp, rsp	      1507	ui.c	FUNCTION_40
0x40024fc	        0x4883ec10	                           sub rsp, 0x10	      1507	ui.c	FUNCTION_40
0x4002500	        0x48897df8	                mov qword [rbp - 8], rdi	      1507	ui.c	FUNCTION_40
0x4002504	    0x8b0500000000	            mov eax, dword [0x0400250a] 	      1510	ui.c	FUNCTION_40	IF_1
0x400250a	            0x85c0	                           test eax, eax	      1510	ui.c	FUNCTION_40	IF_1
0x400250c	            0x740e	                            je 0x400251c	      1510	ui.c	FUNCTION_40	IF_1
0x400250e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1511	ui.c	FUNCTION_40	CALL_1
0x4002512	          0x4889c7	                            mov rdi, rax	      1511	ui.c	FUNCTION_40	CALL_1
0x4002515	      0xe800000000	                          call 0x400251a	      1511	ui.c	FUNCTION_40	CALL_1
0x400251a	            0xeb0c	                           jmp 0x4002528	      1518	ui.c	FUNCTION_40
0x400251c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1514	ui.c	FUNCTION_40	CALL_2
0x4002520	          0x4889c7	                            mov rdi, rax	      1514	ui.c	FUNCTION_40	CALL_2
0x4002523	      0xe800000000	                          call 0x4002528	      1514	ui.c	FUNCTION_40	CALL_2
0x4002528	              0x90	                                     nop	      1518	ui.c	FUNCTION_40
0x4002529	              0xc9	                                   leave	      1518	ui.c	FUNCTION_40
0x400252a	              0xc3	                                     ret	      1518	ui.c	FUNCTION_40
clip_gen_set_selection	ELSE,1:FOR,0:functions,0:CALL,3:DO,0:WHILE,0:SWITCH,0:IF,3	33
0x400252b	              0x55	                                push rbp	      1522	ui.c	FUNCTION_41
0x400252c	          0x4889e5	                            mov rbp, rsp	      1522	ui.c	FUNCTION_41
0x400252f	        0x4883ec10	                           sub rsp, 0x10	      1522	ui.c	FUNCTION_41
0x4002533	        0x48897df8	                mov qword [rbp - 8], rdi	      1522	ui.c	FUNCTION_41
0x4002537	    0x8b0500000000	            mov eax, dword [0x0400253d] 	      1523	ui.c	FUNCTION_41	IF_1
0x400253d	            0x85c0	                           test eax, eax	      1523	ui.c	FUNCTION_41	IF_1
0x400253f	            0x753a	                           jne 0x400257b	      1523	ui.c	FUNCTION_41	IF_1
0x4002541	    0x48817df80000	                  cmp qword [rbp - 8], 0	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002549	            0x750d	                           jne 0x4002558	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x400254b	    0x8b0500000000	            mov eax, dword [0x04002551] 	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002551	          0x83e002	                              and eax, 2	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002554	            0x85c0	                           test eax, eax	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002556	            0x7517	                           jne 0x400256f	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002558	    0x48817df80000	                  cmp qword [rbp - 8], 0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4002560	            0x7519	                           jne 0x400257b	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4002562	    0x8b0500000000	            mov eax, dword [0x04002568] 	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4002568	          0x83e001	                              and eax, 1	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x400256b	            0x85c0	                           test eax, eax	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x400256d	            0x740c	                            je 0x400257b	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x400256f	    0xc70500000000	               mov dword [0x04002579], 1	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x4002579	            0xeb24	                           jmp 0x400259f	      1531	ui.c	FUNCTION_41	IF_1	IF_2
0x400257b	    0x8b0500000000	            mov eax, dword [0x04002581] 	      1536	ui.c	FUNCTION_41	IF_3
0x4002581	            0x85c0	                           test eax, eax	      1536	ui.c	FUNCTION_41	IF_3
0x4002583	            0x740e	                            je 0x4002593	      1536	ui.c	FUNCTION_41	IF_3
0x4002585	        0x488b45f8	                mov rax, qword [rbp - 8]	      1537	ui.c	FUNCTION_41	CALL_1
0x4002589	          0x4889c7	                            mov rdi, rax	      1537	ui.c	FUNCTION_41	CALL_1
0x400258c	      0xe800000000	                          call 0x4002591	      1537	ui.c	FUNCTION_41	CALL_1
0x4002591	            0xeb0c	                           jmp 0x400259f	      1537	ui.c	FUNCTION_41	CALL_1
0x4002593	        0x488b45f8	                mov rax, qword [rbp - 8]	      1540	ui.c	FUNCTION_41	CALL_2
0x4002597	          0x4889c7	                            mov rdi, rax	      1540	ui.c	FUNCTION_41	CALL_2
0x400259a	      0xe800000000	                          call 0x400259f	      1540	ui.c	FUNCTION_41	CALL_2
0x400259f	              0xc9	                                   leave	      1544	ui.c	FUNCTION_41
0x40025a0	              0xc3	                                     ret	      1544	ui.c	FUNCTION_41
clip_gen_own_selection	ELSE,1:FOR,0:functions,0:CALL,3:DO,0:WHILE,0:SWITCH,0:IF,1	16
0x40024c6	              0x55	                                push rbp	      1492	ui.c	FUNCTION_39
0x40024c7	          0x4889e5	                            mov rbp, rsp	      1492	ui.c	FUNCTION_39
0x40024ca	        0x4883ec10	                           sub rsp, 0x10	      1492	ui.c	FUNCTION_39
0x40024ce	        0x48897df8	                mov qword [rbp - 8], rdi	      1492	ui.c	FUNCTION_39
0x40024d2	    0x8b0500000000	            mov eax, dword [0x040024d8] 	      1495	ui.c	FUNCTION_39	IF_1
0x40024d8	            0x85c0	                           test eax, eax	      1495	ui.c	FUNCTION_39	IF_1
0x40024da	            0x740e	                            je 0x40024ea	      1495	ui.c	FUNCTION_39	IF_1
0x40024dc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1496	ui.c	FUNCTION_39	CALL_1
0x40024e0	          0x4889c7	                            mov rdi, rax	      1496	ui.c	FUNCTION_39	CALL_1
0x40024e3	      0xe800000000	                          call 0x40024e8	      1496	ui.c	FUNCTION_39	CALL_1
0x40024e8	            0xeb0c	                           jmp 0x40024f6	      1496	ui.c	FUNCTION_39	CALL_1
0x40024ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      1499	ui.c	FUNCTION_39	CALL_2
0x40024ee	          0x4889c7	                            mov rdi, rax	      1499	ui.c	FUNCTION_39	CALL_2
0x40024f1	      0xe800000000	                          call 0x40024f6	      1499	ui.c	FUNCTION_39	CALL_2
0x40024f6	              0xc9	                                   leave	      1503	ui.c	FUNCTION_39
0x40024f7	              0xc3	                                     ret	      1503	ui.c	FUNCTION_39
clip_own_selection	ELSE,0:FOR,0:functions,0:CALL,9:DO,0:WHILE,0:SWITCH,0:IF,4	55
0x40009ab	              0x55	                                push rbp	       514	ui.c	FUNCTION_16
0x40009ac	          0x4889e5	                            mov rbp, rsp	       514	ui.c	FUNCTION_16
0x40009af	        0x4883ec20	                           sub rsp, 0x20	       514	ui.c	FUNCTION_16
0x40009b3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       514	ui.c	FUNCTION_16
0x40009b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       522	ui.c	FUNCTION_16	IF_1
0x40009bb	            0x8b00	                    mov eax, dword [rax]	       522	ui.c	FUNCTION_16	IF_1
0x40009bd	            0x85c0	                           test eax, eax	       522	ui.c	FUNCTION_16	IF_1
0x40009bf	     0xf849f000000	                            je 0x4000a64	       522	ui.c	FUNCTION_16	IF_1
0x40009c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       524	ui.c	FUNCTION_16	IF_1
0x40009c9	          0x8b4004	                mov eax, dword [rax + 4]	       524	ui.c	FUNCTION_16	IF_1
0x40009cc	          0x8945fc	                mov dword [rbp - 4], eax	       524	ui.c	FUNCTION_16	IF_1
0x40009cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40009d3	          0x4889c7	                            mov rdi, rax	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40009d6	      0xe800000000	                          call 0x40009db	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40009db	          0x83f801	                              cmp eax, 1	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40009de	           0xf94c0	                                 sete al	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40009e1	           0xfb6d0	                           movzx edx, al	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40009e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40009e8	          0x895004	                mov dword [rax + 4], edx	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40009eb	        0x837dfc00	                  cmp dword [rbp - 4], 0	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x40009ef	            0x7573	                           jne 0x4000a64	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x40009f1	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x40009f9	            0x740a	                            je 0x4000a05	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x40009fb	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x4000a03	            0x755f	                           jne 0x4000a64	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x4000a05	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4000a09	          0x8b4004	                mov eax, dword [rax + 4]	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4000a0c	            0x85c0	                           test eax, eax	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4000a0e	            0x7454	                            je 0x4000a64	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4000a10	      0xe800000000	                          call 0x4000a15	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4000a15	          0x83f802	                              cmp eax, 2	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4000a18	            0x740c	                            je 0x4000a26	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4000a1a	      0xe800000000	                          call 0x4000a1f	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4000a1f	      0x3d00100000	                         cmp eax, 0x1000	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4000a24	            0x753e	                           jne 0x4000a64	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4000a26	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4000a2e	            0x750c	                           jne 0x4000a3c	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4000a30	      0xe800000000	                          call 0x4000a35	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4000a35	            0x85c0	                           test eax, eax	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4000a37	           0xf95c0	                                setne al	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4000a3a	            0xeb0a	                           jmp 0x4000a46	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4000a3c	      0xe800000000	                          call 0x4000a41	       536	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_5
0x4000a41	            0x85c0	                           test eax, eax	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4000a43	           0xf95c0	                                setne al	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4000a46	            0x84c0	                             test al, al	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4000a48	            0x741a	                            je 0x4000a64	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4000a4a	    0x8b1500000000	            mov edx, dword [0x04000a50] 	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x4000a50	    0x8b0500000000	            mov eax, dword [0x04000a56] 	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x4000a56	            0x39c2	                            cmp edx, eax	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x4000a58	            0x740a	                            je 0x4000a64	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x4000a5a	      0xbf19000000	                           mov edi, 0x19	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x4000a5f	      0xe800000000	                          call 0x4000a64	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x4000a64	              0x90	                                     nop	       546	ui.c	FUNCTION_16
0x4000a65	              0xc9	                                   leave	       546	ui.c	FUNCTION_16
0x4000a66	              0xc3	                                     ret	       546	ui.c	FUNCTION_16
clip_x11_timestamp_cb	ELSE,1:FOR,0:functions,0:CALL,3:DO,0:WHILE,0:SWITCH,0:IF,6	102
0x4002df3	              0x55	                                push rbp	      2081	ui.c	FUNCTION_63
0x4002df4	          0x4889e5	                            mov rbp, rsp	      2081	ui.c	FUNCTION_63
0x4002df7	        0x4883ec60	                           sub rsp, 0x60	      2081	ui.c	FUNCTION_63
0x4002dfb	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2081	ui.c	FUNCTION_63
0x4002dff	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2081	ui.c	FUNCTION_63
0x4002e03	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2081	ui.c	FUNCTION_63
0x4002e07	        0x48894da0	             mov qword [rbp - 0x60], rcx	      2081	ui.c	FUNCTION_63
0x4002e0b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2081	ui.c	FUNCTION_63
0x4002e14	        0x488945f8	                mov qword [rbp - 8], rax	      2081	ui.c	FUNCTION_63
0x4002e18	            0x31c0	                            xor eax, eax	      2081	ui.c	FUNCTION_63
0x4002e1a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2085	ui.c	FUNCTION_63
0x4002e22	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2086	ui.c	FUNCTION_63
0x4002e26	        0x488945f0	             mov qword [rbp - 0x10], rax	      2086	ui.c	FUNCTION_63
0x4002e2a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2090	ui.c	FUNCTION_63	IF_1
0x4002e2e	            0x8b00	                    mov eax, dword [rax]	      2090	ui.c	FUNCTION_63	IF_1
0x4002e30	          0x83f81c	                           cmp eax, 0x1c	      2090	ui.c	FUNCTION_63	IF_1
0x4002e33	     0xf8523010000	                           jne 0x4002f5c	      2090	ui.c	FUNCTION_63	IF_1
0x4002e39	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2090	ui.c	FUNCTION_63	IF_1
0x4002e3d	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2090	ui.c	FUNCTION_63	IF_1
0x4002e40	            0x85c0	                           test eax, eax	      2090	ui.c	FUNCTION_63	IF_1
0x4002e42	     0xf8514010000	                           jne 0x4002f5c	      2090	ui.c	FUNCTION_63	IF_1
0x4002e48	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2091	ui.c	FUNCTION_63	IF_1
0x4002e4c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2091	ui.c	FUNCTION_63	IF_1
0x4002e50	    0x488b05000000	            mov rax, qword [0x04002e57] 	      2091	ui.c	FUNCTION_63	IF_1
0x4002e57	          0x4839c2	                            cmp rdx, rax	      2091	ui.c	FUNCTION_63	IF_1
0x4002e5a	            0x7418	                            je 0x4002e74	      2091	ui.c	FUNCTION_63	IF_1
0x4002e5c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2092	ui.c	FUNCTION_63	IF_1
0x4002e60	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2092	ui.c	FUNCTION_63	IF_1
0x4002e64	    0x488b05000000	            mov rax, qword [0x04002e6b] 	      2092	ui.c	FUNCTION_63	IF_1
0x4002e6b	          0x4839c2	                            cmp rdx, rax	      2092	ui.c	FUNCTION_63	IF_1
0x4002e6e	     0xf85e8000000	                           jne 0x4002f5c	      2092	ui.c	FUNCTION_63	IF_1
0x4002e74	    0x488b0d000000	            mov rcx, qword [0x04002e7b] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002e7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002e7f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002e83	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002e87	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002e8b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002e8f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002e93	        0x488d7de8	                   lea rdi, [rbp - 0x18]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002e97	              0x57	                                push rdi	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002e98	        0x488d7de0	                   lea rdi, [rbp - 0x20]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002e9c	              0x57	                                push rdi	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002e9d	        0x488d7dd8	                   lea rdi, [rbp - 0x28]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002ea1	              0x57	                                push rdi	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002ea2	        0x488d7dcc	                   lea rdi, [rbp - 0x34]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002ea6	              0x57	                                push rdi	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002ea7	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002eab	              0x57	                                push rdi	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002eac	              0x51	                                push rcx	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002ead	    0x41b900000000	                              mov r9d, 0	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002eb3	    0x41b800000000	                              mov r8d, 0	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002eb9	      0xb900000000	                              mov ecx, 0	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002ebe	          0x4889c7	                            mov rdi, rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002ec1	      0xe800000000	                          call 0x4002ec6	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002ec6	        0x4883c430	                           add rsp, 0x30	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002eca	            0x85c0	                           test eax, eax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002ecc	     0xf858d000000	                           jne 0x4002f5f	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4002ed2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2100	ui.c	FUNCTION_63	IF_3
0x4002ed6	          0x4885c0	                           test rax, rax	      2100	ui.c	FUNCTION_63	IF_3
0x4002ed9	            0x740c	                            je 0x4002ee7	      2100	ui.c	FUNCTION_63	IF_3
0x4002edb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2101	ui.c	FUNCTION_63	CALL_2
0x4002edf	          0x4889c7	                            mov rdi, rax	      2101	ui.c	FUNCTION_63	CALL_2
0x4002ee2	      0xe800000000	                          call 0x4002ee7	      2101	ui.c	FUNCTION_63	CALL_2
0x4002ee7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2104	ui.c	FUNCTION_63	IF_4
0x4002eeb	    0x488b05000000	            mov rax, qword [0x04002ef2] 	      2104	ui.c	FUNCTION_63	IF_4
0x4002ef2	          0x4839c2	                            cmp rdx, rax	      2104	ui.c	FUNCTION_63	IF_4
0x4002ef5	            0x756b	                           jne 0x4002f62	      2104	ui.c	FUNCTION_63	IF_4
0x4002ef7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2104	ui.c	FUNCTION_63	IF_4
0x4002efa	          0x83f820	                           cmp eax, 0x20	      2104	ui.c	FUNCTION_63	IF_4
0x4002efd	            0x7563	                           jne 0x4002f62	      2104	ui.c	FUNCTION_63	IF_4
0x4002eff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f03	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f07	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f0b	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f0f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f13	    0x41b900000000	                              mov r9d, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f19	    0x41b800000000	                              mov r8d, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f1f	      0xb900000000	                              mov ecx, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f24	          0x4889c7	                            mov rdi, rax	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f27	      0xe800000000	                          call 0x4002f2c	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f2c	            0x3c01	                               cmp al, 1	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f2e	            0x7533	                           jne 0x4002f63	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4002f30	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x4002f34	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x4002f38	    0x488b05000000	            mov rax, qword [0x04002f3f] 	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x4002f3f	          0x4839c2	                            cmp rdx, rax	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x4002f42	            0x750c	                           jne 0x4002f50	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x4002f44	    0xc70500000000	               mov dword [0x04002f4e], 1	      2115	ui.c	FUNCTION_63	IF_5	IF_6
0x4002f4e	            0xeb13	                           jmp 0x4002f63	      2115	ui.c	FUNCTION_63	IF_5	IF_6
0x4002f50	    0xc70500000000	               mov dword [0x04002f5a], 1	      2117	ui.c	FUNCTION_63	IF_5	ELSE_1
0x4002f5a	            0xeb07	                           jmp 0x4002f63	      2117	ui.c	FUNCTION_63	IF_5	ELSE_1
0x4002f5c	              0x90	                                     nop	      2093	ui.c	FUNCTION_63	IF_1
0x4002f5d	            0xeb04	                           jmp 0x4002f63	      2093	ui.c	FUNCTION_63	IF_1
0x4002f5f	              0x90	                                     nop	      2098	ui.c	FUNCTION_63	IF_2
0x4002f60	            0xeb01	                           jmp 0x4002f63	      2098	ui.c	FUNCTION_63	IF_2
0x4002f62	              0x90	                                     nop	      2105	ui.c	FUNCTION_63	IF_4
0x4002f63	        0x488b45f8	                mov rax, qword [rbp - 8]	      2119	ui.c	FUNCTION_63	ELSE_1
0x4002f67	    0x644833042528	                xor rax, qword fs:[0x28]	      2119	ui.c	FUNCTION_63	ELSE_1
0x4002f70	            0x7405	                            je 0x4002f77	      2119	ui.c	FUNCTION_63	ELSE_1
0x4002f72	      0xe800000000	                          call 0x4002f77	      2119	ui.c	FUNCTION_63	ELSE_1
0x4002f77	              0xc9	                                   leave	      2119	ui.c	FUNCTION_63	ELSE_1
0x4002f78	              0xc3	                                     ret	      2119	ui.c	FUNCTION_63	ELSE_1
ui_set_shellsize	ELSE,1:FOR,0:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0:IF,1	17
0x4000670	              0x55	                                push rbp	       366	ui.c	FUNCTION_10
0x4000671	          0x4889e5	                            mov rbp, rsp	       366	ui.c	FUNCTION_10
0x4000674	        0x4883ec10	                           sub rsp, 0x10	       366	ui.c	FUNCTION_10
0x4000678	          0x897dfc	                mov dword [rbp - 4], edi	       366	ui.c	FUNCTION_10
0x400067b	    0x8b0500000000	            mov eax, dword [0x04000681] 	       368	ui.c	FUNCTION_10	IF_1
0x4000681	            0x85c0	                           test eax, eax	       368	ui.c	FUNCTION_10	IF_1
0x4000683	            0x7416	                            je 0x400069b	       368	ui.c	FUNCTION_10	IF_1
0x4000685	          0x8b45fc	                mov eax, dword [rbp - 4]	       369	ui.c	FUNCTION_10	CALL_1
0x4000688	      0xba0f000000	                            mov edx, 0xf	       369	ui.c	FUNCTION_10	CALL_1
0x400068d	      0xbe01000000	                              mov esi, 1	       369	ui.c	FUNCTION_10	CALL_1
0x4000692	            0x89c7	                            mov edi, eax	       369	ui.c	FUNCTION_10	CALL_1
0x4000694	      0xe800000000	                          call 0x4000699	       369	ui.c	FUNCTION_10	CALL_1
0x4000699	            0xeb05	                           jmp 0x40006a0	       373	ui.c	FUNCTION_10
0x400069b	      0xe800000000	                          call 0x40006a0	       372	ui.c	FUNCTION_10	CALL_2
0x40006a0	              0x90	                                     nop	       373	ui.c	FUNCTION_10
0x40006a1	              0xc9	                                   leave	       373	ui.c	FUNCTION_10
0x40006a2	              0xc3	                                     ret	       373	ui.c	FUNCTION_10
clip_isautosel_plus	ELSE,0:FOR,0:functions,0:CALL,1:DO,0:WHILE,0:SWITCH,0:IF,0	16
0x4000d32	              0x55	                                push rbp	       702	ui.c	FUNCTION_24
0x4000d33	          0x4889e5	                            mov rbp, rsp	       702	ui.c	FUNCTION_24
0x4000d36	    0x8b0500000000	            mov eax, dword [0x04000d3c] 	       705	ui.c	FUNCTION_24	CALL_1
0x4000d3c	            0x85c0	                           test eax, eax	       705	ui.c	FUNCTION_24	CALL_1
0x4000d3e	            0x741f	                            je 0x4000d5f	       705	ui.c	FUNCTION_24	CALL_1
0x4000d40	    0x488b05000000	            mov rax, qword [0x04000d47] 	       705	ui.c	FUNCTION_24	CALL_1
0x4000d47	      0xbe50000000	                           mov esi, 0x50	       705	ui.c	FUNCTION_24	CALL_1
0x4000d4c	          0x4889c7	                            mov rdi, rax	       705	ui.c	FUNCTION_24	CALL_1
0x4000d4f	      0xe800000000	                          call 0x4000d54	       705	ui.c	FUNCTION_24	CALL_1
0x4000d54	          0x4885c0	                           test rax, rax	       705	ui.c	FUNCTION_24	CALL_1
0x4000d57	           0xf95c0	                                setne al	       705	ui.c	FUNCTION_24	CALL_1
0x4000d5a	           0xfb6c0	                           movzx eax, al	       705	ui.c	FUNCTION_24	CALL_1
0x4000d5d	            0xeb06	                           jmp 0x4000d65	       703	ui.c	FUNCTION_24
0x4000d5f	    0x8b0500000000	            mov eax, dword [0x04000d65] 	       705	ui.c	FUNCTION_24	CALL_1
0x4000d65	              0x5d	                                 pop rbp	       708	ui.c	FUNCTION_24
0x4000d66	              0xc3	                                     ret	       708	ui.c	FUNCTION_24
clip_lose_selection	ELSE,0:FOR,0:functions,0:CALL,13:DO,0:WHILE,0:SWITCH,0:IF,4	61
0x4000a67	              0x55	                                push rbp	       550	ui.c	FUNCTION_17
0x4000a68	          0x4889e5	                            mov rbp, rsp	       550	ui.c	FUNCTION_17
0x4000a6b	        0x4883ec20	                           sub rsp, 0x20	       550	ui.c	FUNCTION_17
0x4000a6f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       550	ui.c	FUNCTION_17
0x4000a73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       552	ui.c	FUNCTION_17
0x4000a77	          0x8b4004	                mov eax, dword [rax + 4]	       552	ui.c	FUNCTION_17
0x4000a7a	          0x8945fc	                mov dword [rbp - 4], eax	       552	ui.c	FUNCTION_17
0x4000a7d	    0xc745f8000000	                  mov dword [rbp - 8], 0	       554	ui.c	FUNCTION_17
0x4000a84	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       556	ui.c	FUNCTION_17	IF_1
0x4000a8c	            0x740a	                            je 0x4000a98	       556	ui.c	FUNCTION_17	IF_1
0x4000a8e	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       556	ui.c	FUNCTION_17	IF_1
0x4000a96	            0x7507	                           jne 0x4000a9f	       556	ui.c	FUNCTION_17	IF_1
0x4000a98	    0xc745f8010000	                  mov dword [rbp - 8], 1	       557	ui.c	FUNCTION_17	IF_1
0x4000a9f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       559	ui.c	FUNCTION_17	CALL_1
0x4000aa3	          0x4889c7	                            mov rdi, rax	       559	ui.c	FUNCTION_17	CALL_1
0x4000aa6	      0xe800000000	                          call 0x4000aab	       559	ui.c	FUNCTION_17	CALL_1
0x4000aab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       560	ui.c	FUNCTION_17
0x4000aaf	    0xc74004000000	                  mov dword [rax + 4], 0	       560	ui.c	FUNCTION_17
0x4000ab6	        0x837df800	                  cmp dword [rbp - 8], 0	       561	ui.c	FUNCTION_17	IF_2
0x4000aba	            0x740c	                            je 0x4000ac8	       561	ui.c	FUNCTION_17	IF_2
0x4000abc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	ui.c	FUNCTION_17	CALL_2
0x4000ac0	          0x4889c7	                            mov rdi, rax	       562	ui.c	FUNCTION_17	CALL_2
0x4000ac3	      0xe800000000	                          call 0x4000ac8	       562	ui.c	FUNCTION_17	CALL_2
0x4000ac8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       563	ui.c	FUNCTION_17	CALL_3
0x4000acc	          0x4889c7	                            mov rdi, rax	       563	ui.c	FUNCTION_17	CALL_3
0x4000acf	      0xe800000000	                          call 0x4000ad4	       563	ui.c	FUNCTION_17	CALL_3
0x4000ad4	        0x837df800	                  cmp dword [rbp - 8], 0	       565	ui.c	FUNCTION_17	IF_3
0x4000ad8	            0x7473	                            je 0x4000b4d	       565	ui.c	FUNCTION_17	IF_3
0x4000ada	        0x837dfc00	                  cmp dword [rbp - 4], 0	       570	ui.c	FUNCTION_17	IF_3	IF_4
0x4000ade	            0x746d	                            je 0x4000b4d	       570	ui.c	FUNCTION_17	IF_3	IF_4
0x4000ae0	      0xe800000000	                          call 0x4000ae5	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x4000ae5	          0x83f802	                              cmp eax, 2	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x4000ae8	            0x740c	                            je 0x4000af6	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x4000aea	      0xe800000000	                          call 0x4000aef	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4000aef	      0x3d00100000	                         cmp eax, 0x1000	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4000af4	            0x7557	                           jne 0x4000b4d	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4000af6	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4000afe	            0x750c	                           jne 0x4000b0c	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4000b00	      0xe800000000	                          call 0x4000b05	       574	ui.c	FUNCTION_17	IF_3	IF_4	CALL_7
0x4000b05	            0x85c0	                           test eax, eax	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4000b07	           0xf95c0	                                setne al	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4000b0a	            0xeb0a	                           jmp 0x4000b16	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4000b0c	      0xe800000000	                          call 0x4000b11	       574	ui.c	FUNCTION_17	IF_3	IF_4	CALL_7
0x4000b11	            0x85c0	                           test eax, eax	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4000b13	           0xf95c0	                                setne al	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4000b16	            0x84c0	                             test al, al	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4000b18	            0x7433	                            je 0x4000b4d	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4000b1a	    0x8b1500000000	            mov edx, dword [0x04000b20] 	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0x4000b20	    0x8b0500000000	            mov eax, dword [0x04000b26] 	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0x4000b26	            0x39c2	                            cmp edx, eax	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0x4000b28	            0x7423	                            je 0x4000b4d	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0x4000b2a	      0xbf19000000	                           mov edi, 0x19	       577	ui.c	FUNCTION_17	IF_3	IF_4	CALL_10
0x4000b2f	      0xe800000000	                          call 0x4000b34	       577	ui.c	FUNCTION_17	IF_3	IF_4	CALL_10
0x4000b34	      0xe800000000	                          call 0x4000b39	       578	ui.c	FUNCTION_17	IF_3	IF_4	CALL_11
0x4000b39	      0xe800000000	                          call 0x4000b3e	       579	ui.c	FUNCTION_17	IF_3	IF_4	CALL_12
0x4000b3e	      0xbe00000000	                              mov esi, 0	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0x4000b43	      0xbf01000000	                              mov edi, 1	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0x4000b48	      0xe800000000	                          call 0x4000b4d	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0x4000b4d	              0x90	                                     nop	       584	ui.c	FUNCTION_17
0x4000b4e	              0xc9	                                   leave	       584	ui.c	FUNCTION_17
0x4000b4f	              0xc3	                                     ret	       584	ui.c	FUNCTION_17
clip_get_line_end	ELSE,0:FOR,1:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,2	37
0x400237d	              0x55	                                push rbp	      1448	ui.c	FUNCTION_37
0x400237e	          0x4889e5	                            mov rbp, rsp	      1448	ui.c	FUNCTION_37
0x4002381	          0x897dec	             mov dword [rbp - 0x14], edi	      1448	ui.c	FUNCTION_37
0x4002384	    0x8b0500000000	            mov eax, dword [0x0400238a] 	      1451	ui.c	FUNCTION_37	IF_1
0x400238a	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      1451	ui.c	FUNCTION_37	IF_1
0x400238d	            0x7d0c	                           jge 0x400239b	      1451	ui.c	FUNCTION_37	IF_1
0x400238f	    0x488b05000000	            mov rax, qword [0x04002396] 	      1451	ui.c	FUNCTION_37	IF_1
0x4002396	          0x4885c0	                           test rax, rax	      1451	ui.c	FUNCTION_37	IF_1
0x4002399	            0x7507	                           jne 0x40023a2	      1451	ui.c	FUNCTION_37	IF_1
0x400239b	      0xb800000000	                              mov eax, 0	      1452	ui.c	FUNCTION_37	IF_1
0x40023a0	            0xeb4c	                           jmp 0x40023ee	      1452	ui.c	FUNCTION_37	IF_1
0x40023a2	    0x8b0500000000	            mov eax, dword [0x040023a8] 	      1453	ui.c	FUNCTION_37	FOR_1
0x40023a8	          0x8945fc	                mov dword [rbp - 4], eax	      1453	ui.c	FUNCTION_37	FOR_1
0x40023ab	            0xeb35	                           jmp 0x40023e2	      1453	ui.c	FUNCTION_37	FOR_1
0x40023ad	    0x488b05000000	            mov rax, qword [0x040023b4] 	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023b4	    0x488b15000000	            mov rdx, qword [0x040023bb] 	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023bb	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023be	          0x4863c9	                         movsxd rcx, ecx	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023c1	        0x48c1e102	                              shl rcx, 2	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023c5	          0x4801ca	                            add rdx, rcx	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023c8	            0x8b0a	                    mov ecx, dword [rdx]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023ca	          0x8b55fc	                mov edx, dword [rbp - 4]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023cd	             0x1ca	                            add edx, ecx	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023cf	          0x83ea01	                              sub edx, 1	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023d2	            0x89d2	                            mov edx, edx	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023d4	          0x4801d0	                            add rax, rdx	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023d7	           0xfb600	                   movzx eax, byte [rax]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023da	            0x3c20	                            cmp al, 0x20	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023dc	            0x750c	                           jne 0x40023ea	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023de	        0x836dfc01	                  sub dword [rbp - 4], 1	      1453	ui.c	FUNCTION_37	FOR_1
0x40023e2	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1453	ui.c	FUNCTION_37	FOR_1
0x40023e6	            0x7fc5	                            jg 0x40023ad	      1453	ui.c	FUNCTION_37	FOR_1
0x40023e8	            0xeb01	                           jmp 0x40023eb	      1453	ui.c	FUNCTION_37	FOR_1
0x40023ea	              0x90	                                     nop	      1455	ui.c	FUNCTION_37	FOR_1	IF_2
0x40023eb	          0x8b45fc	                mov eax, dword [rbp - 4]	      1456	ui.c	FUNCTION_37
0x40023ee	              0x5d	                                 pop rbp	      1457	ui.c	FUNCTION_37
0x40023ef	              0xc3	                                     ret	      1457	ui.c	FUNCTION_37
clip_x11_lose_selection	ELSE,0:FOR,0:functions,0:CALL,3:DO,0:WHILE,0:SWITCH,0:IF,0	20
0x4003c18	              0x55	                                push rbp	      2501	ui.c	FUNCTION_69
0x4003c19	          0x4889e5	                            mov rbp, rsp	      2501	ui.c	FUNCTION_69
0x4003c1c	        0x4883ec10	                           sub rsp, 0x10	      2501	ui.c	FUNCTION_69
0x4003c20	        0x48897df8	                mov qword [rbp - 8], rdi	      2501	ui.c	FUNCTION_69
0x4003c24	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2501	ui.c	FUNCTION_69
0x4003c28	        0x488b45f8	                mov rax, qword [rbp - 8]	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c2c	          0x4889c7	                            mov rdi, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c2f	      0xe800000000	                          call 0x4003c34	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c34	          0x4889c7	                            mov rdi, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c37	      0xe800000000	                          call 0x4003c3c	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c3c	          0x4889c2	                            mov rdx, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c3f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c43	        0x488b4850	            mov rcx, qword [rax + 0x50] 	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c47	        0x488b45f8	                mov rax, qword [rbp - 8]	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c4b	          0x4889ce	                            mov rsi, rcx	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c4e	          0x4889c7	                            mov rdi, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c51	      0xe800000000	                          call 0x4003c56	      2502	ui.c	FUNCTION_69	CALL_1
0x4003c56	              0x90	                                     nop	      2504	ui.c	FUNCTION_69
0x4003c57	              0xc9	                                   leave	      2504	ui.c	FUNCTION_69
0x4003c58	              0xc3	                                     ret	      2504	ui.c	FUNCTION_69
ui_cursor_shape	ELSE,0:FOR,0:functions,0:CALL,1:DO,0:WHILE,0:SWITCH,0:IF,0	7
0x4002c5e	              0x55	                                push rbp	      1980	ui.c	FUNCTION_58
0x4002c5f	          0x4889e5	                            mov rbp, rsp	      1980	ui.c	FUNCTION_58
0x4002c62	      0xbf00000000	                              mov edi, 0	      1981	ui.c	FUNCTION_58	CALL_1
0x4002c67	      0xe800000000	                          call 0x4002c6c	      1981	ui.c	FUNCTION_58	CALL_1
0x4002c6c	              0x90	                                     nop	      1982	ui.c	FUNCTION_58
0x4002c6d	              0x5d	                                 pop rbp	      1982	ui.c	FUNCTION_58
0x4002c6e	              0xc3	                                     ret	      1982	ui.c	FUNCTION_58
clip_copy_modeless_selection	ELSE,9:FOR,4:functions,0:CALL,15:DO,0:WHILE,0:SWITCH,0:IF,24	433
0x4001b3f	              0x55	                                push rbp	      1206	ui.c	FUNCTION_35
0x4001b40	          0x4889e5	                            mov rbp, rsp	      1206	ui.c	FUNCTION_35
0x4001b43	        0x4883ec60	                           sub rsp, 0x60	      1206	ui.c	FUNCTION_35
0x4001b47	          0x897dac	             mov dword [rbp - 0x54], edi	      1206	ui.c	FUNCTION_35
0x4001b4a	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1213	ui.c	FUNCTION_35
0x4001b51	    0x488b05000000	            mov rax, qword [0x04001b58] 	      1218	ui.c	FUNCTION_35
0x4001b58	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1218	ui.c	FUNCTION_35
0x4001b5b	    0x8b0500000000	            mov eax, dword [0x04001b61] 	      1219	ui.c	FUNCTION_35
0x4001b61	          0x8945c8	             mov dword [rbp - 0x38], eax	      1219	ui.c	FUNCTION_35
0x4001b64	    0x488b05000000	            mov rax, qword [0x04001b6b] 	      1220	ui.c	FUNCTION_35
0x4001b6b	          0x8945cc	             mov dword [rbp - 0x34], eax	      1220	ui.c	FUNCTION_35
0x4001b6e	    0x8b0500000000	            mov eax, dword [0x04001b74] 	      1221	ui.c	FUNCTION_35
0x4001b74	          0x8945d0	             mov dword [rbp - 0x30], eax	      1221	ui.c	FUNCTION_35
0x4001b77	    0x488b05000000	            mov rax, qword [0x04001b7e] 	      1224	ui.c	FUNCTION_35	IF_1
0x4001b7e	          0x4885c0	                           test rax, rax	      1224	ui.c	FUNCTION_35	IF_1
0x4001b81	     0xf8492050000	                            je 0x4002119	      1224	ui.c	FUNCTION_35	IF_1
0x4001b87	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1230	ui.c	FUNCTION_35	IF_2
0x4001b8a	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1230	ui.c	FUNCTION_35	IF_2
0x4001b8d	            0x7e26	                           jle 0x4001bb5	      1230	ui.c	FUNCTION_35	IF_2
0x4001b8f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1232	ui.c	FUNCTION_35	IF_2
0x4001b92	          0x8945b0	             mov dword [rbp - 0x50], eax	      1232	ui.c	FUNCTION_35	IF_2
0x4001b95	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1232	ui.c	FUNCTION_35	IF_2
0x4001b98	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1232	ui.c	FUNCTION_35	IF_2
0x4001b9b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1232	ui.c	FUNCTION_35	IF_2
0x4001b9e	          0x8945cc	             mov dword [rbp - 0x34], eax	      1232	ui.c	FUNCTION_35	IF_2
0x4001ba1	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1233	ui.c	FUNCTION_35	IF_2
0x4001ba4	          0x8945b0	             mov dword [rbp - 0x50], eax	      1233	ui.c	FUNCTION_35	IF_2
0x4001ba7	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1233	ui.c	FUNCTION_35	IF_2
0x4001baa	          0x8945c8	             mov dword [rbp - 0x38], eax	      1233	ui.c	FUNCTION_35	IF_2
0x4001bad	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1233	ui.c	FUNCTION_35	IF_2
0x4001bb0	          0x8945d0	             mov dword [rbp - 0x30], eax	      1233	ui.c	FUNCTION_35	IF_2
0x4001bb3	            0xeb22	                           jmp 0x4001bd7	      1233	ui.c	FUNCTION_35	IF_2
0x4001bb5	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bb8	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bbb	            0x751a	                           jne 0x4001bd7	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bbd	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bc0	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bc3	            0x7e12	                           jle 0x4001bd7	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bc5	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bc8	          0x8945b0	             mov dword [rbp - 0x50], eax	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bcb	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bce	          0x8945c8	             mov dword [rbp - 0x38], eax	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bd1	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bd4	          0x8945d0	             mov dword [rbp - 0x30], eax	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4001bd7	    0x488b05000000	            mov rax, qword [0x04001bde] 	      1241	ui.c	FUNCTION_35
0x4001bde	    0x488b15000000	            mov rdx, qword [0x04001be5] 	      1241	ui.c	FUNCTION_35
0x4001be5	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      1241	ui.c	FUNCTION_35
0x4001be8	          0x4863c9	                         movsxd rcx, ecx	      1241	ui.c	FUNCTION_35
0x4001beb	        0x48c1e102	                              shl rcx, 2	      1241	ui.c	FUNCTION_35
0x4001bef	          0x4801ca	                            add rdx, rcx	      1241	ui.c	FUNCTION_35
0x4001bf2	            0x8b12	                    mov edx, dword [rdx]	      1241	ui.c	FUNCTION_35
0x4001bf4	            0x89d2	                            mov edx, edx	      1241	ui.c	FUNCTION_35
0x4001bf6	          0x4801d0	                            add rax, rdx	      1241	ui.c	FUNCTION_35
0x4001bf9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1241	ui.c	FUNCTION_35
0x4001bfd	    0x8b0500000000	            mov eax, dword [0x04001c03] 	      1242	ui.c	FUNCTION_35	IF_4
0x4001c03	            0x85c0	                           test eax, eax	      1242	ui.c	FUNCTION_35	IF_4
0x4001c05	            0x7425	                            je 0x4001c2c	      1242	ui.c	FUNCTION_35	IF_4
0x4001c07	    0x488b05000000	            mov rax, qword [0x04001c0e] 	      1243	ui.c	FUNCTION_35	IF_4
0x4001c0e	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1243	ui.c	FUNCTION_35	IF_4
0x4001c11	          0x4863ca	                         movsxd rcx, edx	      1243	ui.c	FUNCTION_35	IF_4
0x4001c14	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1243	ui.c	FUNCTION_35	IF_4
0x4001c18	          0x4801d1	                            add rcx, rdx	      1243	ui.c	FUNCTION_35	IF_4
0x4001c1b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1243	ui.c	FUNCTION_35	IF_4
0x4001c1f	          0x4889ce	                            mov rsi, rcx	      1243	ui.c	FUNCTION_35	IF_4
0x4001c22	          0x4889d7	                            mov rdi, rdx	      1243	ui.c	FUNCTION_35	IF_4
0x4001c25	            0xffd0	                                call rax	      1243	ui.c	FUNCTION_35	IF_4
0x4001c27	          0x2945c8	             sub dword [rbp - 0x38], eax	      1243	ui.c	FUNCTION_35	IF_4
0x4001c2a	            0xeb22	                           jmp 0x4001c4e	      1243	ui.c	FUNCTION_35	IF_4
0x4001c2c	    0x8b0500000000	            mov eax, dword [0x04001c32] 	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001c32	            0x85c0	                           test eax, eax	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001c34	            0x7418	                            je 0x4001c4e	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001c36	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001c39	          0x4863d0	                         movsxd rdx, eax	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001c3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001c40	          0x4801d0	                            add rax, rdx	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001c43	           0xfb600	                   movzx eax, byte [rax]	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001c46	            0x84c0	                             test al, al	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001c48	            0x7504	                           jne 0x4001c4e	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001c4a	        0x836dc801	               sub dword [rbp - 0x38], 1	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001c4e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1249	ui.c	FUNCTION_35
0x4001c51	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	      1249	ui.c	FUNCTION_35
0x4001c54	          0x83c001	                              add eax, 1	      1249	ui.c	FUNCTION_35
0x4001c57	            0x89c2	                            mov edx, eax	      1249	ui.c	FUNCTION_35
0x4001c59	    0x488b05000000	            mov rax, qword [0x04001c60] 	      1249	ui.c	FUNCTION_35
0x4001c60	           0xfafc2	                           imul eax, edx	      1249	ui.c	FUNCTION_35
0x4001c63	          0x83c001	                              add eax, 1	      1249	ui.c	FUNCTION_35
0x4001c66	          0x8945c0	             mov dword [rbp - 0x40], eax	      1249	ui.c	FUNCTION_35
0x4001c69	    0x8b0500000000	            mov eax, dword [0x04001c6f] 	      1251	ui.c	FUNCTION_35	IF_6
0x4001c6f	            0x85c0	                           test eax, eax	      1251	ui.c	FUNCTION_35	IF_6
0x4001c71	            0x7405	                            je 0x4001c78	      1251	ui.c	FUNCTION_35	IF_6
0x4001c73	          0xd165c0	               shl dword [rbp - 0x40], 1	      1252	ui.c	FUNCTION_35	IF_6
0x4001c76	            0xeb1c	                           jmp 0x4001c94	      1252	ui.c	FUNCTION_35	IF_6
0x4001c78	    0x8b0500000000	            mov eax, dword [0x04001c7e] 	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001c7e	            0x85c0	                           test eax, eax	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001c80	            0x7412	                            je 0x4001c94	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001c82	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001c85	            0x89d0	                            mov eax, edx	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001c87	          0xc1e002	                              shl eax, 2	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001c8a	             0x1d0	                            add eax, edx	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001c8c	          0xc1e002	                              shl eax, 2	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001c8f	             0x1d0	                            add eax, edx	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001c91	          0x8945c0	             mov dword [rbp - 0x40], eax	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001c94	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1256	ui.c	FUNCTION_35	CALL_1
0x4001c97	            0x4898	                                    cdqe	      1256	ui.c	FUNCTION_35	CALL_1
0x4001c99	      0xbe01000000	                              mov esi, 1	      1256	ui.c	FUNCTION_35	CALL_1
0x4001c9e	          0x4889c7	                            mov rdi, rax	      1256	ui.c	FUNCTION_35	CALL_1
0x4001ca1	      0xe800000000	                          call 0x4001ca6	      1256	ui.c	FUNCTION_35	CALL_1
0x4001ca6	        0x488945f8	                mov qword [rbp - 8], rax	      1256	ui.c	FUNCTION_35	CALL_1
0x4001caa	      0x48837df800	                  cmp qword [rbp - 8], 0	      1257	ui.c	FUNCTION_35	IF_8
0x4001caf	     0xf8467040000	                            je 0x400211c	      1257	ui.c	FUNCTION_35	IF_8
0x4001cb5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1261	ui.c	FUNCTION_35	FOR_1
0x4001cb9	        0x488945e8	             mov qword [rbp - 0x18], rax	      1261	ui.c	FUNCTION_35	FOR_1
0x4001cbd	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1261	ui.c	FUNCTION_35	FOR_1
0x4001cc0	          0x8945b0	             mov dword [rbp - 0x50], eax	      1261	ui.c	FUNCTION_35	FOR_1
0x4001cc3	      0xe99e030000	                           jmp 0x4002066	      1261	ui.c	FUNCTION_35	FOR_1
0x4001cc8	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1263	ui.c	FUNCTION_35	FOR_1	IF_9
0x4001ccb	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      1263	ui.c	FUNCTION_35	FOR_1	IF_9
0x4001cce	            0x7508	                           jne 0x4001cd8	      1263	ui.c	FUNCTION_35	FOR_1	IF_9
0x4001cd0	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1264	ui.c	FUNCTION_35	FOR_1	IF_9
0x4001cd3	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1264	ui.c	FUNCTION_35	FOR_1	IF_9
0x4001cd6	            0xeb07	                           jmp 0x4001cdf	      1264	ui.c	FUNCTION_35	FOR_1	IF_9
0x4001cd8	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4001cdf	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x4001ce2	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x4001ce5	            0x7508	                           jne 0x4001cef	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x4001ce7	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x4001cea	          0x8945b8	             mov dword [rbp - 0x48], eax	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x4001ced	            0xeb0a	                           jmp 0x4001cf9	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x4001cef	    0x488b05000000	            mov rax, qword [0x04001cf6] 	      1271	ui.c	FUNCTION_35	FOR_1	ELSE_5
0x4001cf6	          0x8945b8	             mov dword [rbp - 0x48], eax	      1271	ui.c	FUNCTION_35	FOR_1	ELSE_5
0x4001cf9	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1273	ui.c	FUNCTION_35	FOR_1	CALL_2
0x4001cfc	            0x89c7	                            mov edi, eax	      1273	ui.c	FUNCTION_35	FOR_1	CALL_2
0x4001cfe	      0xe87a060000	              call sym.clip_get_line_end	      1273	ui.c	FUNCTION_35	FOR_1	CALL_2
0x4001d03	          0x8945e0	             mov dword [rbp - 0x20], eax	      1273	ui.c	FUNCTION_35	FOR_1	CALL_2
0x4001d06	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d09	          0x4863d0	                         movsxd rdx, eax	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d0c	    0x488b05000000	            mov rax, qword [0x04001d13] 	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d13	          0x4839c2	                            cmp rdx, rax	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d16	            0x7c33	                            jl 0x4001d4b	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d18	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d1b	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d1e	            0x7c08	                            jl 0x4001d28	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d20	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d23	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d26	            0x7e23	                           jle 0x4001d4b	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d28	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1279	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d2b	          0x8945b8	             mov dword [rbp - 0x48], eax	      1279	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001d2e	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1280	ui.c	FUNCTION_35	FOR_1	IF_11	IF_12
0x4001d31	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      1280	ui.c	FUNCTION_35	FOR_1	IF_11	IF_12
0x4001d34	            0x7d06	                           jge 0x4001d3c	      1280	ui.c	FUNCTION_35	FOR_1	IF_11	IF_12
0x4001d36	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1281	ui.c	FUNCTION_35	FOR_1	IF_11	IF_12
0x4001d39	          0x8945b8	             mov dword [rbp - 0x48], eax	      1281	ui.c	FUNCTION_35	FOR_1	IF_11	IF_12
0x4001d3c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1284	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4001d3f	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1284	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4001d42	            0x7507	                           jne 0x4001d4b	      1284	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4001d44	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4001d4b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d4e	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d51	            0x7e2a	                           jle 0x4001d7d	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d53	    0x488b05000000	            mov rax, qword [0x04001d5a] 	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d5a	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d5d	          0x4863d2	                         movsxd rdx, edx	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d60	        0x4883ea01	                              sub rdx, 1	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d64	          0x4801d0	                            add rax, rdx	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d67	           0xfb600	                   movzx eax, byte [rax]	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d6a	            0x84c0	                             test al, al	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d6c	            0x750f	                           jne 0x4001d7d	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d72	        0x488d5001	                      lea rdx, [rax + 1]	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d76	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d7a	          0xc6000a	                     mov byte [rax], 0xa	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001d7d	    0x8b0500000000	            mov eax, dword [0x04001d83] 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001d83	          0x3945b0	            cmp dword [rbp - 0x50], eax 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001d86	     0xf8dd6020000	                           jge 0x4002062	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001d8c	    0x8b0500000000	            mov eax, dword [0x04001d92] 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001d92	          0x3945b8	            cmp dword [rbp - 0x48], eax 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001d95	     0xf8fc7020000	                            jg 0x4002062	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001d9b	    0x8b0500000000	            mov eax, dword [0x04001da1] 	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001da1	            0x85c0	                           test eax, eax	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001da3	     0xf8410010000	                            je 0x4001eb9	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001da9	    0x488b05000000	            mov rax, qword [0x04001db0] 	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001db0	    0x488b15000000	            mov rdx, qword [0x04001db7] 	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001db7	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001dba	          0x4863c9	                         movsxd rcx, ecx	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001dbd	        0x48c1e102	                              shl rcx, 2	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001dc1	          0x4801ca	                            add rdx, rcx	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001dc4	            0x8b12	                    mov edx, dword [rdx]	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001dc6	            0x89d2	                            mov edx, edx	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001dc8	          0x4801d0	                            add rax, rdx	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001dcb	        0x488945f0	             mov qword [rbp - 0x10], rax	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001dcf	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001dd2	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001dd5	      0xe9ce000000	                           jmp 0x4001ea8	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001dda	    0x8b0500000000	            mov eax, dword [0x04001de0] 	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001de0	      0x3dcc260000	                         cmp eax, 0x26cc	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001de5	            0x755d	                           jne 0x4001e44	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001de7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001dea	          0x4863d0	                         movsxd rdx, eax	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001ded	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001df1	          0x4801d0	                            add rax, rdx	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001df4	           0xfb600	                   movzx eax, byte [rax]	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001df7	            0x3c8e	                            cmp al, 0x8e	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001df9	            0x7549	                           jne 0x4001e44	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001dfb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1304	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001dff	        0x488d5001	                      lea rdx, [rax + 1]	      1304	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e03	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1304	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e07	          0xc6008e	                    mov byte [rax], 0x8e	      1304	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e0e	        0x488d5001	                      lea rdx, [rax + 1]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e12	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e16	    0x488b15000000	            mov rdx, qword [0x04001e1d] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e1d	    0x488b0d000000	            mov rcx, qword [0x04001e24] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e24	          0x8b75b0	             mov esi, dword [rbp - 0x50]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e27	          0x4863f6	                         movsxd rsi, esi	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e2a	        0x48c1e602	                              shl rsi, 2	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e2e	          0x4801f1	                            add rcx, rsi	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e31	            0x8b31	                    mov esi, dword [rcx]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e33	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e36	             0x1f1	                            add ecx, esi	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e38	            0x89c9	                            mov ecx, ecx	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e3a	          0x4801ca	                            add rdx, rcx	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e3d	           0xfb612	                   movzx edx, byte [rdx]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e40	            0x8810	                      mov byte [rax], dl	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e42	            0xeb60	                           jmp 0x4001ea4	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4001e44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4001e48	        0x488d5001	                      lea rdx, [rax + 1]	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4001e4c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4001e50	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4001e53	          0x4863ca	                         movsxd rcx, edx	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4001e56	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4001e5a	          0x4801ca	                            add rdx, rcx	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4001e5d	           0xfb612	                   movzx edx, byte [rdx]	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4001e60	            0x8810	                      mov byte [rax], dl	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4001e62	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001e65	          0x4863d0	                         movsxd rdx, eax	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001e68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001e6c	          0x4801d0	                            add rax, rdx	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001e6f	           0xfb600	                   movzx eax, byte [rax]	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001e72	           0xfb6c0	                           movzx eax, al	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001e75	            0x4898	                                    cdqe	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001e77	     0xfb680000000	                   movzx eax, byte [rax]	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001e7e	            0x3c02	                               cmp al, 2	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001e80	            0x7522	                           jne 0x4001ea4	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4001e82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001e86	        0x488d5001	                      lea rdx, [rax + 1]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001e8a	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001e8e	        0x8345d401	               add dword [rbp - 0x2c], 1	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001e92	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001e95	          0x4863ca	                         movsxd rcx, edx	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001e98	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001e9c	          0x4801ca	                            add rdx, rcx	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001e9f	           0xfb612	                   movzx edx, byte [rdx]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001ea2	            0x8810	                      mov byte [rax], dl	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001ea4	        0x8345d401	               add dword [rbp - 0x2c], 1	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001ea8	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001eab	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001eae	     0xf8c26ffffff	                            jl 0x4001dda	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001eb4	      0xe9a9010000	                           jmp 0x4002062	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001eb9	    0x8b0500000000	            mov eax, dword [0x04001ebf] 	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001ebf	            0x85c0	                           test eax, eax	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001ec1	     0xf844c010000	                            je 0x4002013	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001ec7	    0x488b05000000	            mov rax, qword [0x04001ece] 	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001ece	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001ed1	          0x4863d2	                         movsxd rdx, edx	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001ed4	        0x48c1e202	                              shl rdx, 2	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001ed8	          0x4801d0	                            add rax, rdx	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001edb	            0x8b00	                    mov eax, dword [rax]	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001edd	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001ee0	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4001ee3	          0x8945d8	             mov dword [rbp - 0x28], eax	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4001ee6	      0xe91a010000	                           jmp 0x4002005	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4001eeb	    0x488b05000000	            mov rax, qword [0x04001ef2] 	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001ef2	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001ef5	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001ef8	             0x1ca	                            add edx, ecx	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001efa	          0x4863d2	                         movsxd rdx, edx	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001efd	        0x48c1e202	                              shl rdx, 2	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f01	          0x4801d0	                            add rax, rdx	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f04	            0x8b00	                    mov eax, dword [rax]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f06	            0x85c0	                           test eax, eax	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f08	            0x752b	                           jne 0x4001f35	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f0e	        0x488d5001	                      lea rdx, [rax + 1]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f12	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f16	    0x488b0d000000	            mov rcx, qword [0x04001f1d] 	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f1d	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f20	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f23	             0x1f2	                            add edx, esi	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f25	          0x4863d2	                         movsxd rdx, edx	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f28	          0x4801ca	                            add rdx, rcx	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f2b	           0xfb612	                   movzx edx, byte [rdx]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f2e	            0x8810	                      mov byte [rax], dl	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f30	      0xe9a8000000	                           jmp 0x4001fdd	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001f35	    0x488b05000000	            mov rax, qword [0x04001f3c] 	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f3c	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f3f	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f42	             0x1ca	                            add edx, ecx	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f44	          0x4863d2	                         movsxd rdx, edx	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f47	        0x48c1e202	                              shl rdx, 2	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f4b	          0x4801d0	                            add rax, rdx	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f4e	            0x8b00	                    mov eax, dword [rax]	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f50	            0x89c2	                            mov edx, eax	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f56	          0x4889c6	                            mov rsi, rax	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f59	            0x89d7	                            mov edi, edx	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f5b	      0xe800000000	                          call 0x4001f60	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f60	            0x4898	                                    cdqe	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f62	        0x480145e8	            add qword [rbp - 0x18], rax 	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001f66	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4001f6d	            0xeb60	                           jmp 0x4001fcf	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4001f6f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f72	            0x4898	                                    cdqe	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f74	    0x488b04c50000	                  mov rax, qword [rax*8]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f7c	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f7f	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f82	             0x1ca	                            add edx, ecx	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f84	          0x4863d2	                         movsxd rdx, edx	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f87	        0x48c1e202	                              shl rdx, 2	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f8b	          0x4801d0	                            add rax, rdx	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f8e	            0x8b00	                    mov eax, dword [rax]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f90	            0x85c0	                           test eax, eax	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f92	            0x7448	                            je 0x4001fdc	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001f94	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001f97	            0x4898	                                    cdqe	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001f99	    0x488b04c50000	                  mov rax, qword [rax*8]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fa1	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fa4	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fa7	             0x1ca	                            add edx, ecx	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fa9	          0x4863d2	                         movsxd rdx, edx	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fac	        0x48c1e202	                              shl rdx, 2	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fb0	          0x4801d0	                            add rax, rdx	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fb3	            0x8b00	                    mov eax, dword [rax]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fb5	            0x89c2	                            mov edx, eax	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fbb	          0x4889c6	                            mov rsi, rax	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fbe	            0x89d7	                            mov edi, edx	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fc0	      0xe800000000	                          call 0x4001fc5	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fc5	            0x4898	                                    cdqe	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fc7	        0x480145e8	            add qword [rbp - 0x18], rax 	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4001fcb	        0x8345dc01	               add dword [rbp - 0x24], 1	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4001fcf	    0x8b0500000000	            mov eax, dword [0x04001fd5] 	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4001fd5	          0x3945dc	            cmp dword [rbp - 0x24], eax 	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4001fd8	            0x7c95	                            jl 0x4001f6f	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4001fda	            0xeb01	                           jmp 0x4001fdd	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4001fdc	              0x90	                                     nop	      1334	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001fdd	    0x488b05000000	            mov rax, qword [0x04001fe4] 	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4001fe4	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4001fe7	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4001fea	             0x1ca	                            add edx, ecx	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4001fec	          0x4863d2	                         movsxd rdx, edx	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4001fef	        0x4883c201	                              add rdx, 1	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4001ff3	          0x4801d0	                            add rax, rdx	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4001ff6	           0xfb600	                   movzx eax, byte [rax]	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4001ff9	            0x84c0	                             test al, al	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4001ffb	            0x7504	                           jne 0x4002001	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4001ffd	        0x8345d801	               add dword [rbp - 0x28], 1	      1341	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4002001	        0x8345d801	               add dword [rbp - 0x28], 1	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002005	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002008	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x400200b	     0xf8cdafeffff	                            jl 0x4001eeb	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002011	            0xeb4f	                           jmp 0x4002062	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002013	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002016	          0x2b45b4	             sub eax, dword [rbp - 0x4c]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002019	          0x4863d0	                         movsxd rdx, eax	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x400201c	    0x488b05000000	            mov rax, qword [0x04002023] 	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002023	    0x488b0d000000	            mov rcx, qword [0x0400202a] 	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x400202a	          0x8b75b0	             mov esi, dword [rbp - 0x50]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x400202d	          0x4863f6	                         movsxd rsi, esi	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002030	        0x48c1e602	                              shl rsi, 2	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002034	          0x4801f1	                            add rcx, rsi	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002037	            0x8b09	                    mov ecx, dword [rcx]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002039	            0x89ce	                            mov esi, ecx	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x400203b	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x400203e	          0x4863c9	                         movsxd rcx, ecx	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002041	          0x4801f1	                            add rcx, rsi	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002044	          0x4801c1	                            add rcx, rax	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002047	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x400204b	          0x4889ce	                            mov rsi, rcx	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x400204e	          0x4889c7	                            mov rdi, rax	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002051	      0xe800000000	                          call 0x4002056	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002056	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1349	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9
0x4002059	          0x2b45b4	             sub eax, dword [rbp - 0x4c]	      1349	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9
0x400205c	            0x4898	                                    cdqe	      1349	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9
0x400205e	        0x480145e8	            add qword [rbp - 0x18], rax 	      1349	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9
0x4002062	        0x8345b001	               add dword [rbp - 0x50], 1	      1261	ui.c	FUNCTION_35	FOR_1
0x4002066	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1261	ui.c	FUNCTION_35	FOR_1
0x4002069	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1261	ui.c	FUNCTION_35	FOR_1
0x400206c	     0xf8e56fcffff	                           jle 0x4001cc8	      1261	ui.c	FUNCTION_35	FOR_1
0x4002072	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1355	ui.c	FUNCTION_35	IF_23
0x4002076	            0x740f	                            je 0x4002087	      1355	ui.c	FUNCTION_35	IF_23
0x4002078	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1356	ui.c	FUNCTION_35	IF_23
0x400207c	        0x488d5001	                      lea rdx, [rax + 1]	      1356	ui.c	FUNCTION_35	IF_23
0x4002080	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1356	ui.c	FUNCTION_35	IF_23
0x4002084	          0xc6000a	                     mov byte [rax], 0xa	      1356	ui.c	FUNCTION_35	IF_23
0x4002087	      0xbf00000000	                              mov edi, 0	      1359	ui.c	FUNCTION_35	CALL_7
0x400208c	      0xe800000000	                          call 0x4002091	      1359	ui.c	FUNCTION_35	CALL_7
0x4002091	      0xbf00000000	                              mov edi, 0	      1360	ui.c	FUNCTION_35	CALL_8
0x4002096	      0xe800000000	                          call 0x400209b	      1360	ui.c	FUNCTION_35	CALL_8
0x400209b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1363	ui.c	FUNCTION_35	CALL_9
0x400209f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1363	ui.c	FUNCTION_35	CALL_9
0x40020a3	          0x4829c2	                            sub rdx, rax	      1363	ui.c	FUNCTION_35	CALL_9
0x40020a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1363	ui.c	FUNCTION_35	CALL_9
0x40020aa	      0xb900000000	                              mov ecx, 0	      1363	ui.c	FUNCTION_35	CALL_9
0x40020af	          0x4889c6	                            mov rsi, rax	      1363	ui.c	FUNCTION_35	CALL_9
0x40020b2	      0xbf00000000	                              mov edi, 0	      1363	ui.c	FUNCTION_35	CALL_9
0x40020b7	      0xe800000000	                          call 0x40020bc	      1363	ui.c	FUNCTION_35	CALL_9
0x40020bc	      0xbf00000000	                              mov edi, 0	      1366	ui.c	FUNCTION_35	CALL_10
0x40020c1	      0xe800000000	                          call 0x40020c6	      1366	ui.c	FUNCTION_35	CALL_10
0x40020c6	        0x837dac00	               cmp dword [rbp - 0x54], 0	      1369	ui.c	FUNCTION_35	IF_24
0x40020ca	            0x743f	                            je 0x400210b	      1369	ui.c	FUNCTION_35	IF_24
0x40020cc	      0xbf00000000	                              mov edi, 0	      1372	ui.c	FUNCTION_35	IF_24	CALL_11
0x40020d1	      0xe800000000	                          call 0x40020d6	      1372	ui.c	FUNCTION_35	IF_24	CALL_11
0x40020d6	      0xbf00000000	                              mov edi, 0	      1373	ui.c	FUNCTION_35	IF_24	CALL_12
0x40020db	      0xe800000000	                          call 0x40020e0	      1373	ui.c	FUNCTION_35	IF_24	CALL_12
0x40020e0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x40020e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x40020e8	          0x4829c2	                            sub rdx, rax	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x40020eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x40020ef	      0xb900000000	                              mov ecx, 0	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x40020f4	          0x4889c6	                            mov rsi, rax	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x40020f7	      0xbf00000000	                              mov edi, 0	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x40020fc	      0xe800000000	                          call 0x4002101	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4002101	      0xbf00000000	                              mov edi, 0	      1375	ui.c	FUNCTION_35	IF_24	CALL_14
0x4002106	      0xe800000000	                          call 0x400210b	      1375	ui.c	FUNCTION_35	IF_24	CALL_14
0x400210b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1378	ui.c	FUNCTION_35	CALL_15
0x400210f	          0x4889c7	                            mov rdi, rax	      1378	ui.c	FUNCTION_35	CALL_15
0x4002112	      0xe800000000	                          call 0x4002117	      1378	ui.c	FUNCTION_35	CALL_15
0x4002117	            0xeb04	                           jmp 0x400211d	      1378	ui.c	FUNCTION_35	CALL_15
0x4002119	              0x90	                                     nop	      1225	ui.c	FUNCTION_35	IF_1
0x400211a	            0xeb01	                           jmp 0x400211d	      1225	ui.c	FUNCTION_35	IF_1
0x400211c	              0x90	                                     nop	      1258	ui.c	FUNCTION_35	IF_8
0x400211d	              0xc9	                                   leave	      1379	ui.c	FUNCTION_35
0x400211e	              0xc3	                                     ret	      1379	ui.c	FUNCTION_35
ui_suspend	ELSE,0:FOR,0:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0:IF,1	10
0x40005f8	              0x55	                                push rbp	       301	ui.c	FUNCTION_7
0x40005f9	          0x4889e5	                            mov rbp, rsp	       301	ui.c	FUNCTION_7
0x40005fc	    0x8b0500000000	            mov eax, dword [0x04000602] 	       303	ui.c	FUNCTION_7	IF_1
0x4000602	            0x85c0	                           test eax, eax	       303	ui.c	FUNCTION_7	IF_1
0x4000604	            0x7407	                            je 0x400060d	       303	ui.c	FUNCTION_7	IF_1
0x4000606	      0xe800000000	                          call 0x400060b	       305	ui.c	FUNCTION_7	IF_1	CALL_1
0x400060b	            0xeb05	                           jmp 0x4000612	       306	ui.c	FUNCTION_7	IF_1
0x400060d	      0xe800000000	                          call 0x4000612	       309	ui.c	FUNCTION_7	CALL_2
0x4000612	              0x5d	                                 pop rbp	       310	ui.c	FUNCTION_7
0x4000613	              0xc3	                                     ret	       310	ui.c	FUNCTION_7
mouse_comp_pos	ELSE,2:FOR,0:functions,0:CALL,9:DO,0:WHILE,1:SWITCH,0:IF,9	164
0x4004b83	              0x55	                                push rbp	      3077	ui.c	FUNCTION_76
0x4004b84	          0x4889e5	                            mov rbp, rsp	      3077	ui.c	FUNCTION_76
0x4004b87	              0x53	                                push rbx	      3077	ui.c	FUNCTION_76
0x4004b88	        0x4883ec58	                           sub rsp, 0x58	      3077	ui.c	FUNCTION_76
0x4004b8c	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3077	ui.c	FUNCTION_76
0x4004b90	        0x488975b0	             mov qword [rbp - 0x50], rsi	      3077	ui.c	FUNCTION_76
0x4004b94	        0x488955a8	             mov qword [rbp - 0x58], rdx	      3077	ui.c	FUNCTION_76
0x4004b98	        0x48894da0	             mov qword [rbp - 0x60], rcx	      3077	ui.c	FUNCTION_76
0x4004b9c	    0x64488b042528	                mov rax, qword fs:[0x28]	      3077	ui.c	FUNCTION_76
0x4004ba5	        0x488945e8	             mov qword [rbp - 0x18], rax	      3077	ui.c	FUNCTION_76
0x4004ba9	            0x31c0	                            xor eax, eax	      3077	ui.c	FUNCTION_76
0x4004bab	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3078	ui.c	FUNCTION_76
0x4004baf	            0x8b00	                    mov eax, dword [rax]	      3078	ui.c	FUNCTION_76
0x4004bb1	          0x8945cc	             mov dword [rbp - 0x34], eax	      3078	ui.c	FUNCTION_76
0x4004bb4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3079	ui.c	FUNCTION_76
0x4004bb8	            0x8b00	                    mov eax, dword [rax]	      3079	ui.c	FUNCTION_76
0x4004bba	          0x8945d0	             mov dword [rbp - 0x30], eax	      3079	ui.c	FUNCTION_76
0x4004bbd	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      3081	ui.c	FUNCTION_76
0x4004bc4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3086	ui.c	FUNCTION_76	IF_1
0x4004bc8	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      3086	ui.c	FUNCTION_76	IF_1
0x4004bce	            0x85c0	                           test eax, eax	      3086	ui.c	FUNCTION_76	IF_1
0x4004bd0	            0x7413	                            je 0x4004be5	      3086	ui.c	FUNCTION_76	IF_1
0x4004bd2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3087	ui.c	FUNCTION_76	IF_1
0x4004bd6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      3087	ui.c	FUNCTION_76	IF_1
0x4004bdc	          0x83e801	                              sub eax, 1	      3087	ui.c	FUNCTION_76	IF_1
0x4004bdf	          0x2b45cc	             sub eax, dword [rbp - 0x34]	      3087	ui.c	FUNCTION_76	IF_1
0x4004be2	          0x8945cc	             mov dword [rbp - 0x34], eax	      3087	ui.c	FUNCTION_76	IF_1
0x4004be5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3090	ui.c	FUNCTION_76
0x4004be9	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3090	ui.c	FUNCTION_76
0x4004bed	        0x488945e0	             mov qword [rbp - 0x20], rax	      3090	ui.c	FUNCTION_76
0x4004bf1	      0xe905010000	                           jmp 0x4004cfb	      3092	ui.c	FUNCTION_76	WHILE_1
0x4004bf6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x4004bfa	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x4004c00	            0x85c0	                           test eax, eax	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x4004c02	            0x747d	                            je 0x4004c81	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x4004c04	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4004c08	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4004c0c	    0x41b900000000	                              mov r9d, 0	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4004c12	    0x41b801000000	                              mov r8d, 1	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4004c18	      0xb900000000	                              mov ecx, 0	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4004c1d	      0xba00000000	                              mov edx, 0	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4004c22	          0x4889c7	                            mov rdi, rax	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4004c25	      0xe800000000	                          call 0x4004c2a	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4004c2a	            0x85c0	                           test eax, eax	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4004c2c	            0x7553	                           jne 0x4004c81	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4004c2e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4004c32	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4004c36	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4004c3a	          0x4839c2	                            cmp rdx, rax	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4004c3d	            0x750f	                           jne 0x4004c4e	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4004c3f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4004c43	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4004c49	          0x2945d0	             sub dword [rbp - 0x30], eax	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4004c4c	            0xeb16	                           jmp 0x4004c64	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4004c4e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4004c52	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4004c56	          0x4889d6	                            mov rsi, rdx	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4004c59	          0x4889c7	                            mov rdi, rax	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4004c5c	      0xe800000000	                          call 0x4004c61	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4004c61	          0x2945d0	             sub dword [rbp - 0x30], eax	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4004c64	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4004c68	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4004c6c	      0xba01000000	                              mov edx, 1	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4004c71	          0x4889ce	                            mov rsi, rcx	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4004c74	          0x4889c7	                            mov rdi, rax	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4004c77	      0xe800000000	                          call 0x4004c7c	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4004c7c	          0x8945d8	             mov dword [rbp - 0x28], eax	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4004c7f	            0xeb1b	                           jmp 0x4004c9c	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4004c81	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4004c85	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4004c89	      0xba01000000	                              mov edx, 1	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4004c8e	          0x4889ce	                            mov rsi, rcx	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4004c91	          0x4889c7	                            mov rdi, rax	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4004c94	      0xe800000000	                          call 0x4004c99	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4004c99	          0x8945d8	             mov dword [rbp - 0x28], eax	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4004c9c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4004c9f	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4004ca2	            0x7f63	                            jg 0x4004d07	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4004ca4	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4004ca8	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4004cac	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4004cb0	    0x41b900000000	                              mov r9d, 0	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4004cb6	    0x41b801000000	                              mov r8d, 1	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4004cbc	          0x4889d1	                            mov rcx, rdx	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4004cbf	      0xba00000000	                              mov edx, 0	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4004cc4	          0x4889c7	                            mov rdi, rax	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4004cc7	      0xe800000000	                          call 0x4004ccc	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4004ccc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4004cd0	        0x488b4008	                mov rax, qword [rax + 8]	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4004cd4	          0x488b10	                    mov rdx, qword [rax]	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4004cd7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4004cdb	          0x4839c2	                            cmp rdx, rax	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4004cde	            0x7509	                           jne 0x4004ce9	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4004ce0	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      3118	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4004ce7	            0xeb1f	                           jmp 0x4004d08	      3119	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4004ce9	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3121	ui.c	FUNCTION_76	WHILE_1
0x4004cec	          0x2945d0	             sub dword [rbp - 0x30], eax	      3121	ui.c	FUNCTION_76	WHILE_1
0x4004cef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3122	ui.c	FUNCTION_76	WHILE_1
0x4004cf3	        0x4883c001	                              add rax, 1	      3122	ui.c	FUNCTION_76	WHILE_1
0x4004cf7	        0x488945e0	             mov qword [rbp - 0x20], rax	      3122	ui.c	FUNCTION_76	WHILE_1
0x4004cfb	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3092	ui.c	FUNCTION_76	WHILE_1
0x4004cff	     0xf8ff1feffff	                            jg 0x4004bf6	      3092	ui.c	FUNCTION_76	WHILE_1
0x4004d05	            0xeb01	                           jmp 0x4004d08	      3092	ui.c	FUNCTION_76	WHILE_1
0x4004d07	              0x90	                                     nop	      3112	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4004d08	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3125	ui.c	FUNCTION_76	IF_6
0x4004d0c	            0x7550	                           jne 0x4004d5e	      3125	ui.c	FUNCTION_76	IF_6
0x4004d0e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4004d12	          0x4889c7	                            mov rdi, rax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4004d15	      0xe800000000	                          call 0x4004d1a	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4004d1a	            0x89c3	                            mov ebx, eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4004d1c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4004d20	          0x4889c7	                            mov rdi, rax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4004d23	      0xe800000000	                          call 0x4004d28	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4004d28	            0x29c3	                            sub ebx, eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4004d2a	            0x89d8	                            mov eax, ebx	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4004d2c	          0x8945dc	             mov dword [rbp - 0x24], eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4004d2f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3129	ui.c	FUNCTION_76	IF_6	IF_7
0x4004d32	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      3129	ui.c	FUNCTION_76	IF_6	IF_7
0x4004d35	            0x7d06	                           jge 0x4004d3d	      3129	ui.c	FUNCTION_76	IF_6	IF_7
0x4004d37	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3130	ui.c	FUNCTION_76	IF_6	IF_7
0x4004d3a	          0x8945cc	             mov dword [rbp - 0x34], eax	      3130	ui.c	FUNCTION_76	IF_6	IF_7
0x4004d3d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3131	ui.c	FUNCTION_76	IF_6
0x4004d41	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      3131	ui.c	FUNCTION_76	IF_6
0x4004d47	          0x2b45dc	             sub eax, dword [rbp - 0x24]	      3131	ui.c	FUNCTION_76	IF_6
0x4004d4a	         0xfaf45d0	            imul eax, dword [rbp - 0x30]	      3131	ui.c	FUNCTION_76	IF_6
0x4004d4e	           0x145cc	             add dword [rbp - 0x34], eax	      3131	ui.c	FUNCTION_76	IF_6
0x4004d51	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3133	ui.c	FUNCTION_76	IF_6
0x4004d55	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      3133	ui.c	FUNCTION_76	IF_6
0x4004d5b	           0x145cc	             add dword [rbp - 0x34], eax	      3133	ui.c	FUNCTION_76	IF_6
0x4004d5e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3136	ui.c	FUNCTION_76	IF_8
0x4004d62	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      3136	ui.c	FUNCTION_76	IF_8
0x4004d68	            0x85c0	                           test eax, eax	      3136	ui.c	FUNCTION_76	IF_8
0x4004d6a	            0x750d	                           jne 0x4004d79	      3136	ui.c	FUNCTION_76	IF_8
0x4004d6c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3137	ui.c	FUNCTION_76	IF_8
0x4004d70	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      3137	ui.c	FUNCTION_76	IF_8
0x4004d76	           0x145cc	             add dword [rbp - 0x34], eax	      3137	ui.c	FUNCTION_76	IF_8
0x4004d79	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3140	ui.c	FUNCTION_76	CALL_8
0x4004d7d	          0x4889c7	                            mov rdi, rax	      3140	ui.c	FUNCTION_76	CALL_8
0x4004d80	      0xe800000000	                          call 0x4004d85	      3140	ui.c	FUNCTION_76	CALL_8
0x4004d85	          0x2945cc	             sub dword [rbp - 0x34], eax	      3140	ui.c	FUNCTION_76	CALL_8
0x4004d88	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      3141	ui.c	FUNCTION_76	IF_9
0x4004d8c	            0x7913	                           jns 0x4004da1	      3141	ui.c	FUNCTION_76	IF_9
0x4004d8e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x4004d92	          0x4889c7	                            mov rdi, rax	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x4004d95	      0xe800000000	                          call 0x4004d9a	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x4004d9a	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      3146	ui.c	FUNCTION_76	IF_9
0x4004da1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3149	ui.c	FUNCTION_76
0x4004da5	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3149	ui.c	FUNCTION_76
0x4004da8	            0x8910	                    mov dword [rax], edx	      3149	ui.c	FUNCTION_76
0x4004daa	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3150	ui.c	FUNCTION_76
0x4004dae	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      3150	ui.c	FUNCTION_76
0x4004db1	            0x8910	                    mov dword [rax], edx	      3150	ui.c	FUNCTION_76
0x4004db3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3151	ui.c	FUNCTION_76
0x4004db7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3151	ui.c	FUNCTION_76
0x4004dbb	          0x488910	                    mov qword [rax], rdx	      3151	ui.c	FUNCTION_76
0x4004dbe	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3152	ui.c	FUNCTION_76
0x4004dc1	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3153	ui.c	FUNCTION_76
0x4004dc5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3153	ui.c	FUNCTION_76
0x4004dce	            0x7405	                            je 0x4004dd5	      3153	ui.c	FUNCTION_76
0x4004dd0	      0xe800000000	                          call 0x4004dd5	      3153	ui.c	FUNCTION_76
0x4004dd5	        0x4883c458	                           add rsp, 0x58	      3153	ui.c	FUNCTION_76
0x4004dd9	              0x5b	                                 pop rbx	      3153	ui.c	FUNCTION_76
0x4004dda	              0x5d	                                 pop rbp	      3153	ui.c	FUNCTION_76
0x4004ddb	              0xc3	                                     ret	      3153	ui.c	FUNCTION_76
clip_update_modeless_selection	ELSE,0:FOR,0:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0:IF,2	67
0x40023f0	              0x55	                                push rbp	      1470	ui.c	FUNCTION_38
0x40023f1	          0x4889e5	                            mov rbp, rsp	      1470	ui.c	FUNCTION_38
0x40023f4	        0x4883ec20	                           sub rsp, 0x20	      1470	ui.c	FUNCTION_38
0x40023f8	        0x48897df8	                mov qword [rbp - 8], rdi	      1470	ui.c	FUNCTION_38
0x40023fc	          0x8975f4	              mov dword [rbp - 0xc], esi	      1470	ui.c	FUNCTION_38
0x40023ff	          0x8955f0	             mov dword [rbp - 0x10], edx	      1470	ui.c	FUNCTION_38
0x4002402	          0x894dec	             mov dword [rbp - 0x14], ecx	      1470	ui.c	FUNCTION_38
0x4002405	        0x448945e8	             mov dword [rbp - 0x18], r8d	      1470	ui.c	FUNCTION_38
0x4002409	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1472	ui.c	FUNCTION_38	IF_1
0x400240c	          0x4863d0	                         movsxd rdx, eax	      1472	ui.c	FUNCTION_38	IF_1
0x400240f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1472	ui.c	FUNCTION_38	IF_1
0x4002413	        0x488b4008	                mov rax, qword [rax + 8]	      1472	ui.c	FUNCTION_38	IF_1
0x4002417	          0x4839c2	                            cmp rdx, rax	      1472	ui.c	FUNCTION_38	IF_1
0x400241a	            0x750c	                           jne 0x4002428	      1472	ui.c	FUNCTION_38	IF_1
0x400241c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1472	ui.c	FUNCTION_38	IF_1
0x4002420	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1472	ui.c	FUNCTION_38	IF_1
0x4002423	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1472	ui.c	FUNCTION_38	IF_1
0x4002426	            0x7440	                            je 0x4002468	      1472	ui.c	FUNCTION_38	IF_1
0x4002428	        0x488b45f8	                mov rax, qword [rbp - 8]	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x400242c	          0x8b5010	            mov edx, dword [rax + 0x10] 	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x400242f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x4002433	        0x488b4008	                mov rax, qword [rax + 8]	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x4002437	            0x89c7	                            mov edi, eax	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x4002439	          0x8b75f0	             mov esi, dword [rbp - 0x10]	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x400243c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x400243f	    0x41b803000000	                              mov r8d, 3	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x4002445	            0x89d1	                            mov ecx, edx	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x4002447	            0x89fa	                            mov edx, edi	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x4002449	            0x89c7	                            mov edi, eax	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x400244b	      0xe85bf5ffff	               call sym.clip_invert_area	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x4002450	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1476	ui.c	FUNCTION_38	IF_1
0x4002453	          0x4863d0	                         movsxd rdx, eax	      1476	ui.c	FUNCTION_38	IF_1
0x4002456	        0x488b45f8	                mov rax, qword [rbp - 8]	      1476	ui.c	FUNCTION_38	IF_1
0x400245a	        0x48895008	                mov qword [rax + 8], rdx	      1476	ui.c	FUNCTION_38	IF_1
0x400245e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1477	ui.c	FUNCTION_38	IF_1
0x4002462	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1477	ui.c	FUNCTION_38	IF_1
0x4002465	          0x895010	             mov dword [rax + 0x10], edx	      1477	ui.c	FUNCTION_38	IF_1
0x4002468	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1481	ui.c	FUNCTION_38	IF_2
0x400246b	          0x4863d0	                         movsxd rdx, eax	      1481	ui.c	FUNCTION_38	IF_2
0x400246e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1481	ui.c	FUNCTION_38	IF_2
0x4002472	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1481	ui.c	FUNCTION_38	IF_2
0x4002476	          0x4839c2	                            cmp rdx, rax	      1481	ui.c	FUNCTION_38	IF_2
0x4002479	            0x750c	                           jne 0x4002487	      1481	ui.c	FUNCTION_38	IF_2
0x400247b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1481	ui.c	FUNCTION_38	IF_2
0x400247f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1481	ui.c	FUNCTION_38	IF_2
0x4002482	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      1481	ui.c	FUNCTION_38	IF_2
0x4002485	            0x743c	                            je 0x40024c3	      1481	ui.c	FUNCTION_38	IF_2
0x4002487	        0x488b45f8	                mov rax, qword [rbp - 8]	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x400248b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x400248e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x4002492	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x4002496	            0x89d7	                            mov edi, edx	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x4002498	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x400249b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x400249e	    0x41b803000000	                              mov r8d, 3	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x40024a4	            0x89c6	                            mov esi, eax	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x40024a6	      0xe800f5ffff	               call sym.clip_invert_area	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x40024ab	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1485	ui.c	FUNCTION_38	IF_2
0x40024ae	          0x4863d0	                         movsxd rdx, eax	      1485	ui.c	FUNCTION_38	IF_2
0x40024b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1485	ui.c	FUNCTION_38	IF_2
0x40024b5	        0x48895018	             mov qword [rax + 0x18], rdx	      1485	ui.c	FUNCTION_38	IF_2
0x40024b9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1486	ui.c	FUNCTION_38	IF_2
0x40024bd	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1486	ui.c	FUNCTION_38	IF_2
0x40024c0	          0x895020	             mov dword [rax + 0x20], edx	      1486	ui.c	FUNCTION_38	IF_2
0x40024c3	              0x90	                                     nop	      1488	ui.c	FUNCTION_38
0x40024c4	              0xc9	                                   leave	      1488	ui.c	FUNCTION_38
0x40024c5	              0xc3	                                     ret	      1488	ui.c	FUNCTION_38
clip_x11_convert_selection_cb	ELSE,5:FOR,0:functions,0:CALL,15:DO,0:WHILE,0:SWITCH,0:IF,14	359
0x4003592	              0x55	                                push rbp	      2355	ui.c	FUNCTION_67
0x4003593	          0x4889e5	                            mov rbp, rsp	      2355	ui.c	FUNCTION_67
0x4003596	              0x53	                                push rbx	      2355	ui.c	FUNCTION_67
0x4003597	    0x4881eca80000	                           sub rsp, 0xa8	      2355	ui.c	FUNCTION_67
0x400359e	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2355	ui.c	FUNCTION_67
0x40035a2	        0x48897580	             mov qword [rbp - 0x80], rsi	      2355	ui.c	FUNCTION_67
0x40035a6	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      2355	ui.c	FUNCTION_67
0x40035ad	    0x48898d70ffff	             mov qword [rbp - 0x90], rcx	      2355	ui.c	FUNCTION_67
0x40035b4	    0x4c898568ffff	              mov qword [rbp - 0x98], r8	      2355	ui.c	FUNCTION_67
0x40035bb	    0x4c898d60ffff	              mov qword [rbp - 0xa0], r9	      2355	ui.c	FUNCTION_67
0x40035c2	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2355	ui.c	FUNCTION_67
0x40035c6	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2355	ui.c	FUNCTION_67
0x40035cd	    0x64488b042528	                mov rax, qword fs:[0x28]	      2355	ui.c	FUNCTION_67
0x40035d6	        0x488945e8	             mov qword [rbp - 0x18], rax	      2355	ui.c	FUNCTION_67
0x40035da	            0x31c0	                            xor eax, eax	      2355	ui.c	FUNCTION_67
0x40035dc	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2363	ui.c	FUNCTION_67	IF_1
0x40035e0	          0x488b10	                    mov rdx, qword [rax]	      2363	ui.c	FUNCTION_67	IF_1
0x40035e3	    0x488b05000000	            mov rax, qword [0x040035ea] 	      2363	ui.c	FUNCTION_67	IF_1
0x40035ea	          0x4839c2	                            cmp rdx, rax	      2363	ui.c	FUNCTION_67	IF_1
0x40035ed	            0x750a	                           jne 0x40035f9	      2363	ui.c	FUNCTION_67	IF_1
0x40035ef	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2364	ui.c	FUNCTION_67	IF_1
0x40035f7	            0xeb08	                           jmp 0x4003601	      2364	ui.c	FUNCTION_67	IF_1
0x40035f9	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2366	ui.c	FUNCTION_67	ELSE_1
0x4003601	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2368	ui.c	FUNCTION_67	IF_2
0x4003605	          0x8b4004	                mov eax, dword [rax + 4]	      2368	ui.c	FUNCTION_67	IF_2
0x4003608	            0x85c0	                           test eax, eax	      2368	ui.c	FUNCTION_67	IF_2
0x400360a	            0x750a	                           jne 0x4003616	      2368	ui.c	FUNCTION_67	IF_2
0x400360c	      0xb800000000	                              mov eax, 0	      2369	ui.c	FUNCTION_67	IF_2
0x4003611	      0xe9a8050000	                           jmp 0x4003bbe	      2369	ui.c	FUNCTION_67	IF_2
0x4003616	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2372	ui.c	FUNCTION_67	IF_3
0x400361d	          0x488b10	                    mov rdx, qword [rax]	      2372	ui.c	FUNCTION_67	IF_3
0x4003620	    0x488b05000000	            mov rax, qword [0x04003627] 	      2372	ui.c	FUNCTION_67	IF_3
0x4003627	          0x4839c2	                            cmp rdx, rax	      2372	ui.c	FUNCTION_67	IF_3
0x400362a	     0xf8507010000	                           jne 0x4003737	      2372	ui.c	FUNCTION_67	IF_3
0x4003630	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2376	ui.c	FUNCTION_67	IF_3
0x4003637	    0x48c700000000	                      mov qword [rax], 0	      2376	ui.c	FUNCTION_67	IF_3
0x400363e	    0xc74598000000	               mov dword [rbp - 0x68], 0	      2377	ui.c	FUNCTION_67	IF_3
0x4003645	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2378	ui.c	FUNCTION_67	IF_3
0x4003648	          0x8d5001	                      lea edx, [rax + 1]	      2378	ui.c	FUNCTION_67	IF_3
0x400364b	          0x895598	             mov dword [rbp - 0x68], edx	      2378	ui.c	FUNCTION_67	IF_3
0x400364e	    0x488b15000000	            mov rdx, qword [0x04003655] 	      2378	ui.c	FUNCTION_67	IF_3
0x4003655	            0x4898	                                    cdqe	      2378	ui.c	FUNCTION_67	IF_3
0x4003657	    0x488914c50000	                  mov qword [rax*8], rdx	      2378	ui.c	FUNCTION_67	IF_3
0x400365f	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2380	ui.c	FUNCTION_67	IF_3
0x4003662	          0x8d5001	                      lea edx, [rax + 1]	      2380	ui.c	FUNCTION_67	IF_3
0x4003665	          0x895598	             mov dword [rbp - 0x68], edx	      2380	ui.c	FUNCTION_67	IF_3
0x4003668	    0x488b15000000	            mov rdx, qword [0x0400366f] 	      2380	ui.c	FUNCTION_67	IF_3
0x400366f	            0x4898	                                    cdqe	      2380	ui.c	FUNCTION_67	IF_3
0x4003671	    0x488914c50000	                  mov qword [rax*8], rdx	      2380	ui.c	FUNCTION_67	IF_3
0x4003679	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2382	ui.c	FUNCTION_67	IF_3
0x400367c	          0x8d5001	                      lea edx, [rax + 1]	      2382	ui.c	FUNCTION_67	IF_3
0x400367f	          0x895598	             mov dword [rbp - 0x68], edx	      2382	ui.c	FUNCTION_67	IF_3
0x4003682	    0x488b15000000	            mov rdx, qword [0x04003689] 	      2382	ui.c	FUNCTION_67	IF_3
0x4003689	            0x4898	                                    cdqe	      2382	ui.c	FUNCTION_67	IF_3
0x400368b	    0x488914c50000	                  mov qword [rax*8], rdx	      2382	ui.c	FUNCTION_67	IF_3
0x4003693	    0x8b0500000000	            mov eax, dword [0x04003699] 	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x4003699	            0x85c0	                           test eax, eax	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x400369b	            0x741a	                            je 0x40036b7	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x400369d	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40036a0	          0x8d5001	                      lea edx, [rax + 1]	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40036a3	          0x895598	             mov dword [rbp - 0x68], edx	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40036a6	    0x488b15000000	            mov rdx, qword [0x040036ad] 	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40036ad	            0x4898	                                    cdqe	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40036af	    0x488914c50000	                  mov qword [rax*8], rdx	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40036b7	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2387	ui.c	FUNCTION_67	IF_3
0x40036ba	          0x8d5001	                      lea edx, [rax + 1]	      2387	ui.c	FUNCTION_67	IF_3
0x40036bd	          0x895598	             mov dword [rbp - 0x68], edx	      2387	ui.c	FUNCTION_67	IF_3
0x40036c0	            0x4898	                                    cdqe	      2387	ui.c	FUNCTION_67	IF_3
0x40036c2	    0x48c704c50000	                 mov qword [rax*8], 0x1f	      2387	ui.c	FUNCTION_67	IF_3
0x40036ce	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2388	ui.c	FUNCTION_67	IF_3
0x40036d1	          0x8d5001	                      lea edx, [rax + 1]	      2388	ui.c	FUNCTION_67	IF_3
0x40036d4	          0x895598	             mov dword [rbp - 0x68], edx	      2388	ui.c	FUNCTION_67	IF_3
0x40036d7	    0x488b15000000	            mov rdx, qword [0x040036de] 	      2388	ui.c	FUNCTION_67	IF_3
0x40036de	            0x4898	                                    cdqe	      2388	ui.c	FUNCTION_67	IF_3
0x40036e0	    0x488914c50000	                  mov qword [rax*8], rdx	      2388	ui.c	FUNCTION_67	IF_3
0x40036e8	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2389	ui.c	FUNCTION_67	IF_3
0x40036eb	          0x8d5001	                      lea edx, [rax + 1]	      2389	ui.c	FUNCTION_67	IF_3
0x40036ee	          0x895598	             mov dword [rbp - 0x68], edx	      2389	ui.c	FUNCTION_67	IF_3
0x40036f1	    0x488b15000000	            mov rdx, qword [0x040036f8] 	      2389	ui.c	FUNCTION_67	IF_3
0x40036f8	            0x4898	                                    cdqe	      2389	ui.c	FUNCTION_67	IF_3
0x40036fa	    0x488914c50000	                  mov qword [rax*8], rdx	      2389	ui.c	FUNCTION_67	IF_3
0x4003702	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2391	ui.c	FUNCTION_67	IF_3
0x4003709	    0x48c700040000	                      mov qword [rax], 4	      2391	ui.c	FUNCTION_67	IF_3
0x4003710	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2394	ui.c	FUNCTION_67	IF_3
0x4003717	    0xc70020000000	                   mov dword [rax], 0x20	      2394	ui.c	FUNCTION_67	IF_3
0x400371d	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2395	ui.c	FUNCTION_67	IF_3
0x4003720	          0x4863d0	                         movsxd rdx, eax	      2395	ui.c	FUNCTION_67	IF_3
0x4003723	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2395	ui.c	FUNCTION_67	IF_3
0x400372a	          0x488910	                    mov qword [rax], rdx	      2395	ui.c	FUNCTION_67	IF_3
0x400372d	      0xb801000000	                              mov eax, 1	      2396	ui.c	FUNCTION_67	IF_3
0x4003732	      0xe987040000	                           jmp 0x4003bbe	      2396	ui.c	FUNCTION_67	IF_3
0x4003737	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2399	ui.c	FUNCTION_67	IF_5
0x400373e	          0x488b00	                    mov rax, qword [rax]	      2399	ui.c	FUNCTION_67	IF_5
0x4003741	        0x4883f81f	                           cmp rax, 0x1f	      2399	ui.c	FUNCTION_67	IF_5
0x4003745	     0xf8482000000	                            je 0x40037cd	      2399	ui.c	FUNCTION_67	IF_5
0x400374b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2401	ui.c	FUNCTION_67	IF_5
0x4003752	          0x488b10	                    mov rdx, qword [rax]	      2401	ui.c	FUNCTION_67	IF_5
0x4003755	    0x488b05000000	            mov rax, qword [0x0400375c] 	      2401	ui.c	FUNCTION_67	IF_5
0x400375c	          0x4839c2	                            cmp rdx, rax	      2401	ui.c	FUNCTION_67	IF_5
0x400375f	            0x746c	                            je 0x40037cd	      2401	ui.c	FUNCTION_67	IF_5
0x4003761	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2402	ui.c	FUNCTION_67	IF_5
0x4003768	          0x488b10	                    mov rdx, qword [rax]	      2402	ui.c	FUNCTION_67	IF_5
0x400376b	    0x488b05000000	            mov rax, qword [0x04003772] 	      2402	ui.c	FUNCTION_67	IF_5
0x4003772	          0x4839c2	                            cmp rdx, rax	      2402	ui.c	FUNCTION_67	IF_5
0x4003775	            0x750a	                           jne 0x4003781	      2402	ui.c	FUNCTION_67	IF_5
0x4003777	    0x8b0500000000	            mov eax, dword [0x0400377d] 	      2402	ui.c	FUNCTION_67	IF_5
0x400377d	            0x85c0	                           test eax, eax	      2402	ui.c	FUNCTION_67	IF_5
0x400377f	            0x754c	                           jne 0x40037cd	      2402	ui.c	FUNCTION_67	IF_5
0x4003781	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2404	ui.c	FUNCTION_67	IF_5
0x4003788	          0x488b10	                    mov rdx, qword [rax]	      2404	ui.c	FUNCTION_67	IF_5
0x400378b	    0x488b05000000	            mov rax, qword [0x04003792] 	      2404	ui.c	FUNCTION_67	IF_5
0x4003792	          0x4839c2	                            cmp rdx, rax	      2404	ui.c	FUNCTION_67	IF_5
0x4003795	            0x7436	                            je 0x40037cd	      2404	ui.c	FUNCTION_67	IF_5
0x4003797	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2405	ui.c	FUNCTION_67	IF_5
0x400379e	          0x488b10	                    mov rdx, qword [rax]	      2405	ui.c	FUNCTION_67	IF_5
0x40037a1	    0x488b05000000	            mov rax, qword [0x040037a8] 	      2405	ui.c	FUNCTION_67	IF_5
0x40037a8	          0x4839c2	                            cmp rdx, rax	      2405	ui.c	FUNCTION_67	IF_5
0x40037ab	            0x7420	                            je 0x40037cd	      2405	ui.c	FUNCTION_67	IF_5
0x40037ad	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2406	ui.c	FUNCTION_67	IF_5
0x40037b4	          0x488b10	                    mov rdx, qword [rax]	      2406	ui.c	FUNCTION_67	IF_5
0x40037b7	    0x488b05000000	            mov rax, qword [0x040037be] 	      2406	ui.c	FUNCTION_67	IF_5
0x40037be	          0x4839c2	                            cmp rdx, rax	      2406	ui.c	FUNCTION_67	IF_5
0x40037c1	            0x740a	                            je 0x40037cd	      2406	ui.c	FUNCTION_67	IF_5
0x40037c3	      0xb800000000	                              mov eax, 0	      2407	ui.c	FUNCTION_67	IF_5
0x40037c8	      0xe9f1030000	                           jmp 0x4003bbe	      2407	ui.c	FUNCTION_67	IF_5
0x40037cd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2409	ui.c	FUNCTION_67	CALL_1
0x40037d1	          0x4889c7	                            mov rdi, rax	      2409	ui.c	FUNCTION_67	CALL_1
0x40037d4	      0xe800000000	                          call 0x40037d9	      2409	ui.c	FUNCTION_67	CALL_1
0x40037d9	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2410	ui.c	FUNCTION_67	CALL_2
0x40037dd	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      2410	ui.c	FUNCTION_67	CALL_2
0x40037e4	        0x488d45a8	                   lea rax, [rbp - 0x58]	      2410	ui.c	FUNCTION_67	CALL_2
0x40037e8	          0x4889ce	                            mov rsi, rcx	      2410	ui.c	FUNCTION_67	CALL_2
0x40037eb	          0x4889c7	                            mov rdi, rax	      2410	ui.c	FUNCTION_67	CALL_2
0x40037ee	      0xe800000000	                          call 0x40037f3	      2410	ui.c	FUNCTION_67	CALL_2
0x40037f3	          0x89459c	             mov dword [rbp - 0x64], eax	      2410	ui.c	FUNCTION_67	CALL_2
0x40037f6	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2411	ui.c	FUNCTION_67	IF_6
0x40037fa	            0x790a	                           jns 0x4003806	      2411	ui.c	FUNCTION_67	IF_6
0x40037fc	      0xb800000000	                              mov eax, 0	      2412	ui.c	FUNCTION_67	IF_6
0x4003801	      0xe9b8030000	                           jmp 0x4003bbe	      2412	ui.c	FUNCTION_67	IF_6
0x4003806	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2415	ui.c	FUNCTION_67	IF_7
0x400380d	          0x488b10	                    mov rdx, qword [rax]	      2415	ui.c	FUNCTION_67	IF_7
0x4003810	    0x488b05000000	            mov rax, qword [0x04003817] 	      2415	ui.c	FUNCTION_67	IF_7
0x4003817	          0x4839c2	                            cmp rdx, rax	      2415	ui.c	FUNCTION_67	IF_7
0x400381a	            0x7518	                           jne 0x4003834	      2415	ui.c	FUNCTION_67	IF_7
0x400381c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2416	ui.c	FUNCTION_67	IF_7
0x4003823	          0x488b00	                    mov rax, qword [rax]	      2416	ui.c	FUNCTION_67	IF_7
0x4003826	        0x488d5001	                      lea rdx, [rax + 1]	      2416	ui.c	FUNCTION_67	IF_7
0x400382a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2416	ui.c	FUNCTION_67	IF_7
0x4003831	          0x488910	                    mov qword [rax], rdx	      2416	ui.c	FUNCTION_67	IF_7
0x4003834	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2420	ui.c	FUNCTION_67	IF_8
0x400383b	          0x488b10	                    mov rdx, qword [rax]	      2420	ui.c	FUNCTION_67	IF_8
0x400383e	    0x488b05000000	            mov rax, qword [0x04003845] 	      2420	ui.c	FUNCTION_67	IF_8
0x4003845	          0x4839c2	                            cmp rdx, rax	      2420	ui.c	FUNCTION_67	IF_8
0x4003848	            0x752a	                           jne 0x4003874	      2420	ui.c	FUNCTION_67	IF_8
0x400384a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2421	ui.c	FUNCTION_67	CALL_3
0x4003851	          0x488b18	                    mov rbx, qword [rax]	      2421	ui.c	FUNCTION_67	CALL_3
0x4003854	    0x488b05000000	            mov rax, qword [0x0400385b] 	      2421	ui.c	FUNCTION_67	CALL_3
0x400385b	          0x4889c7	                            mov rdi, rax	      2421	ui.c	FUNCTION_67	CALL_3
0x400385e	      0xe800000000	                          call 0x4003863	      2421	ui.c	FUNCTION_67	CALL_3
0x4003863	          0x4801d8	                            add rax, rbx	      2421	ui.c	FUNCTION_67	CALL_3
0x4003866	        0x488d5002	                      lea rdx, [rax + 2]	      2421	ui.c	FUNCTION_67	CALL_3
0x400386a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2421	ui.c	FUNCTION_67	CALL_3
0x4003871	          0x488910	                    mov qword [rax], rdx	      2421	ui.c	FUNCTION_67	CALL_3
0x4003874	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2424	ui.c	FUNCTION_67	IF_9
0x400387b	          0x488b10	                    mov rdx, qword [rax]	      2424	ui.c	FUNCTION_67	IF_9
0x400387e	    0x488b05000000	            mov rax, qword [0x04003885] 	      2424	ui.c	FUNCTION_67	IF_9
0x4003885	          0x4839c2	                            cmp rdx, rax	      2424	ui.c	FUNCTION_67	IF_9
0x4003888	            0x771c	                            ja 0x40038a6	      2424	ui.c	FUNCTION_67	IF_9
0x400388a	    0x488b05000000	            mov rax, qword [0x04003891] 	      2424	ui.c	FUNCTION_67	IF_9
0x4003891	          0x48d1e8	                              shr rax, 1	      2424	ui.c	FUNCTION_67	IF_9
0x4003894	          0x4889c2	                            mov rdx, rax	      2424	ui.c	FUNCTION_67	IF_9
0x4003897	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2424	ui.c	FUNCTION_67	IF_9
0x400389e	          0x488b00	                    mov rax, qword [rax]	      2424	ui.c	FUNCTION_67	IF_9
0x40038a1	          0x4839c2	                            cmp rdx, rax	      2424	ui.c	FUNCTION_67	IF_9
0x40038a4	            0x722d	                            jb 0x40038d3	      2424	ui.c	FUNCTION_67	IF_9
0x40038a6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2425	ui.c	FUNCTION_67	CALL_4
0x40038ad	          0x488b00	                    mov rax, qword [rax]	      2425	ui.c	FUNCTION_67	CALL_4
0x40038b0	          0x8d5001	                      lea edx, [rax + 1]	      2425	ui.c	FUNCTION_67	CALL_4
0x40038b3	    0x488b05000000	            mov rax, qword [0x040038ba] 	      2425	ui.c	FUNCTION_67	CALL_4
0x40038ba	            0x89d6	                            mov esi, edx	      2425	ui.c	FUNCTION_67	CALL_4
0x40038bc	          0x4889c7	                            mov rdi, rax	      2425	ui.c	FUNCTION_67	CALL_4
0x40038bf	      0xe800000000	                          call 0x40038c4	      2425	ui.c	FUNCTION_67	CALL_4
0x40038c4	          0x4889c2	                            mov rdx, rax	      2425	ui.c	FUNCTION_67	CALL_4
0x40038c7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2425	ui.c	FUNCTION_67	CALL_4
0x40038ce	          0x488910	                    mov qword [rax], rdx	      2425	ui.c	FUNCTION_67	CALL_4
0x40038d1	            0xeb11	                           jmp 0x40038e4	      2425	ui.c	FUNCTION_67	CALL_4
0x40038d3	    0x488b15000000	            mov rdx, qword [0x040038da] 	      2427	ui.c	FUNCTION_67	ELSE_2
0x40038da	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2427	ui.c	FUNCTION_67	ELSE_2
0x40038e1	          0x488910	                    mov qword [rax], rdx	      2427	ui.c	FUNCTION_67	ELSE_2
0x40038e4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40038eb	          0x488b00	                    mov rax, qword [rax]	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40038ee	          0x4885c0	                           test rax, rax	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40038f1	            0x7516	                           jne 0x4003909	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40038f3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x40038f7	          0x4889c7	                            mov rdi, rax	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x40038fa	      0xe800000000	                          call 0x40038ff	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x40038ff	      0xb800000000	                              mov eax, 0	      2431	ui.c	FUNCTION_67	ELSE_2	IF_10
0x4003904	      0xe9b5020000	                           jmp 0x4003bbe	      2431	ui.c	FUNCTION_67	ELSE_2	IF_10
0x4003909	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2433	ui.c	FUNCTION_67
0x4003910	          0x488b00	                    mov rax, qword [rax]	      2433	ui.c	FUNCTION_67
0x4003913	    0x488905000000	            mov qword [0x0400391a], rax 	      2433	ui.c	FUNCTION_67
0x400391a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2434	ui.c	FUNCTION_67
0x4003921	          0x488b00	                    mov rax, qword [rax]	      2434	ui.c	FUNCTION_67
0x4003924	    0x488905000000	            mov qword [0x0400392b], rax 	      2434	ui.c	FUNCTION_67
0x400392b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2436	ui.c	FUNCTION_67	IF_11
0x4003932	          0x488b00	                    mov rax, qword [rax]	      2436	ui.c	FUNCTION_67	IF_11
0x4003935	        0x4883f81f	                           cmp rax, 0x1f	      2436	ui.c	FUNCTION_67	IF_11
0x4003939	            0x7420	                            je 0x400395b	      2436	ui.c	FUNCTION_67	IF_11
0x400393b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2438	ui.c	FUNCTION_67	IF_11
0x4003942	          0x488b10	                    mov rdx, qword [rax]	      2438	ui.c	FUNCTION_67	IF_11
0x4003945	    0x488b05000000	            mov rax, qword [0x0400394c] 	      2438	ui.c	FUNCTION_67	IF_11
0x400394c	          0x4839c2	                            cmp rdx, rax	      2438	ui.c	FUNCTION_67	IF_11
0x400394f	            0x7543	                           jne 0x4003994	      2438	ui.c	FUNCTION_67	IF_11
0x4003951	    0x8b0500000000	            mov eax, dword [0x04003957] 	      2438	ui.c	FUNCTION_67	IF_11
0x4003957	            0x85c0	                           test eax, eax	      2438	ui.c	FUNCTION_67	IF_11
0x4003959	            0x7439	                            je 0x4003994	      2438	ui.c	FUNCTION_67	IF_11
0x400395b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x4003962	          0x488b10	                    mov rdx, qword [rax]	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x4003965	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x4003969	    0x488b05000000	            mov rax, qword [0x04003970] 	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x4003970	          0x4889ce	                            mov rsi, rcx	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x4003973	          0x4889c7	                            mov rdi, rax	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x4003976	      0xe800000000	                          call 0x400397b	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x400397b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2443	ui.c	FUNCTION_67	IF_11
0x4003982	          0x488b10	                    mov rdx, qword [rax]	      2443	ui.c	FUNCTION_67	IF_11
0x4003985	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2443	ui.c	FUNCTION_67	IF_11
0x400398c	          0x488910	                    mov qword [rax], rdx	      2443	ui.c	FUNCTION_67	IF_11
0x400398f	      0xe90c020000	                           jmp 0x4003ba0	      2443	ui.c	FUNCTION_67	IF_11
0x4003994	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400399b	          0x488b10	                    mov rdx, qword [rax]	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400399e	    0x488b05000000	            mov rax, qword [0x040039a5] 	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039a5	          0x4839c2	                            cmp rdx, rax	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039a8	            0x741a	                            je 0x40039c4	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039aa	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039b1	          0x488b10	                    mov rdx, qword [rax]	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039b4	    0x488b05000000	            mov rax, qword [0x040039bb] 	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039bb	          0x4839c2	                            cmp rdx, rax	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039be	     0xf85f3000000	                           jne 0x4003ab7	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039c4	    0x488b05000000	            mov rax, qword [0x040039cb] 	      2448	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039cb	        0x488945b0	             mov qword [rbp - 0x50], rax	      2448	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039cf	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x40039d6	          0x488b10	                    mov rdx, qword [rax]	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x40039d9	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x40039dd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x40039e1	          0x4889ce	                            mov rsi, rcx	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x40039e4	          0x4889c7	                            mov rdi, rax	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x40039e7	      0xe800000000	                          call 0x40039ec	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x40039ec	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039f0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039f7	          0x488b00	                    mov rax, qword [rax]	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039fa	          0x4801d0	                            add rax, rdx	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40039fd	          0xc60000	                       mov byte [rax], 0	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a00	    0x8b0500000000	            mov eax, dword [0x04003a06] 	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a06	            0x85c0	                           test eax, eax	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a08	            0x7407	                            je 0x4003a11	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a0a	      0xe800000000	                          call 0x4003a0f	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a0f	            0xeb07	                           jmp 0x4003a18	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a11	    0x488b05000000	            mov rax, qword [0x04003a18] 	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a18	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a1c	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a20	          0x4989d0	                             mov r8, rdx	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a23	      0xb901000000	                              mov ecx, 1	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a28	      0xba01000000	                              mov edx, 1	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a2d	          0x4889c7	                            mov rdi, rax	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a30	      0xe800000000	                          call 0x4003a35	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a35	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4003a38	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2456	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x4003a3c	            0x7416	                            je 0x4003a54	      2456	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x4003a3e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2458	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13	CALL_9
0x4003a42	          0x4889c7	                            mov rdi, rax	      2458	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13	CALL_9
0x4003a45	      0xe800000000	                          call 0x4003a4a	      2458	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13	CALL_9
0x4003a4a	      0xb800000000	                              mov eax, 0	      2459	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x4003a4f	      0xe96a010000	                           jmp 0x4003bbe	      2459	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x4003a54	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a58	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a5f	          0x488910	                    mov qword [rax], rdx	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a62	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a66	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a6d	          0x488910	                    mov qword [rax], rdx	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a70	    0x488b15000000	            mov rdx, qword [0x04003a77] 	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a77	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a7e	          0x488910	                    mov qword [rax], rdx	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a81	    0x488b05000000	            mov rax, qword [0x04003a88] 	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x4003a88	          0x4889c7	                            mov rdi, rax	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x4003a8b	      0xe800000000	                          call 0x4003a90	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x4003a90	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a97	          0x488b00	                    mov rax, qword [rax]	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003a9a	    0x488905000000	            mov qword [0x04003aa1], rax 	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003aa1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003aa8	          0x488b00	                    mov rax, qword [rax]	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003aab	    0x488905000000	            mov qword [0x04003ab2], rax 	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003ab2	      0xe9e9000000	                           jmp 0x4003ba0	      2446	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4003ab7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003abe	          0x488b10	                    mov rdx, qword [rax]	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003ac1	    0x488b05000000	            mov rax, qword [0x04003ac8] 	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003ac8	          0x4839c2	                            cmp rdx, rax	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003acb	     0xf858a000000	                           jne 0x4003b5b	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003ad1	    0x488b05000000	            mov rax, qword [0x04003ad8] 	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x4003ad8	          0x4889c7	                            mov rdi, rax	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x4003adb	      0xe800000000	                          call 0x4003ae0	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x4003ae0	          0x8945a0	             mov dword [rbp - 0x60], eax	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x4003ae3	    0x488b05000000	            mov rax, qword [0x04003aea] 	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003aea	          0x8b559c	             mov edx, dword [rbp - 0x64]	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003aed	            0x8810	                      mov byte [rax], dl	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003aef	    0x488b05000000	            mov rax, qword [0x04003af6] 	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x4003af6	    0x488b15000000	            mov rdx, qword [0x04003afd] 	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x4003afd	        0x4883c201	                              add rdx, 1	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x4003b01	          0x4889c6	                            mov rsi, rax	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x4003b04	          0x4889d7	                            mov rdi, rdx	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x4003b07	      0xe800000000	                          call 0x4003b0c	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x4003b0c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b13	          0x488b10	                    mov rdx, qword [rax]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b16	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b19	            0x4898	                                    cdqe	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b1b	          0x4829c2	                            sub rdx, rax	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b1e	          0x4889d0	                            mov rax, rdx	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b21	        0x488d50fe	                      lea rdx, [rax - 2]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b25	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b29	    0x488b0d000000	            mov rcx, qword [0x04003b30] 	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b30	          0x8b75a0	             mov esi, dword [rbp - 0x60]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b33	          0x4863f6	                         movsxd rsi, esi	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b36	        0x4883c602	                              add rsi, 2	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b3a	          0x4801f1	                            add rcx, rsi	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b3d	          0x4889c6	                            mov rsi, rax	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b40	          0x4889cf	                            mov rdi, rcx	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b43	      0xe800000000	                          call 0x4003b48	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4003b48	    0x488b15000000	            mov rdx, qword [0x04003b4f] 	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003b4f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003b56	          0x488910	                    mov qword [rax], rdx	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003b59	            0xeb45	                           jmp 0x4003ba0	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4003b5b	    0x488b05000000	            mov rax, qword [0x04003b62] 	      2481	ui.c	FUNCTION_67	ELSE_5
0x4003b62	          0x8b559c	             mov edx, dword [rbp - 0x64]	      2481	ui.c	FUNCTION_67	ELSE_5
0x4003b65	            0x8810	                      mov byte [rax], dl	      2481	ui.c	FUNCTION_67	ELSE_5
0x4003b67	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x4003b6e	          0x488b00	                    mov rax, qword [rax]	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x4003b71	        0x488d50ff	                      lea rdx, [rax - 1]	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x4003b75	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x4003b79	    0x488b0d000000	            mov rcx, qword [0x04003b80] 	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x4003b80	        0x4883c101	                              add rcx, 1	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x4003b84	          0x4889c6	                            mov rsi, rax	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x4003b87	          0x4889cf	                            mov rdi, rcx	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x4003b8a	      0xe800000000	                          call 0x4003b8f	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x4003b8f	    0x488b15000000	            mov rdx, qword [0x04003b96] 	      2483	ui.c	FUNCTION_67	ELSE_5
0x4003b96	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2483	ui.c	FUNCTION_67	ELSE_5
0x4003b9d	          0x488910	                    mov qword [rax], rdx	      2483	ui.c	FUNCTION_67	ELSE_5
0x4003ba0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2485	ui.c	FUNCTION_67
0x4003ba7	    0xc70008000000	                      mov dword [rax], 8	      2485	ui.c	FUNCTION_67
0x4003bad	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2486	ui.c	FUNCTION_67	CALL_15
0x4003bb1	          0x4889c7	                            mov rdi, rax	      2486	ui.c	FUNCTION_67	CALL_15
0x4003bb4	      0xe800000000	                          call 0x4003bb9	      2486	ui.c	FUNCTION_67	CALL_15
0x4003bb9	      0xb801000000	                              mov eax, 1	      2487	ui.c	FUNCTION_67
0x4003bbe	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2488	ui.c	FUNCTION_67
0x4003bc2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2488	ui.c	FUNCTION_67
0x4003bcb	            0x7405	                            je 0x4003bd2	      2488	ui.c	FUNCTION_67
0x4003bcd	      0xe800000000	                          call 0x4003bd2	      2488	ui.c	FUNCTION_67
0x4003bd2	    0x4881c4a80000	                           add rsp, 0xa8	      2488	ui.c	FUNCTION_67
0x4003bd9	              0x5b	                                 pop rbx	      2488	ui.c	FUNCTION_67
0x4003bda	              0x5d	                                 pop rbp	      2488	ui.c	FUNCTION_67
0x4003bdb	              0xc3	                                     ret	      2488	ui.c	FUNCTION_67
ui_cursor_shape_forced	ELSE,1:FOR,0:functions,0:CALL,4:DO,0:WHILE,0:SWITCH,0:IF,1	16
0x4002c30	              0x55	                                push rbp	      1961	ui.c	FUNCTION_57
0x4002c31	          0x4889e5	                            mov rbp, rsp	      1961	ui.c	FUNCTION_57
0x4002c34	        0x4883ec10	                           sub rsp, 0x10	      1961	ui.c	FUNCTION_57
0x4002c38	          0x897dfc	                mov dword [rbp - 4], edi	      1961	ui.c	FUNCTION_57
0x4002c3b	    0x8b0500000000	            mov eax, dword [0x04002c41] 	      1963	ui.c	FUNCTION_57	IF_1
0x4002c41	            0x85c0	                           test eax, eax	      1963	ui.c	FUNCTION_57	IF_1
0x4002c43	            0x7407	                            je 0x4002c4c	      1963	ui.c	FUNCTION_57	IF_1
0x4002c45	      0xe800000000	                          call 0x4002c4a	      1964	ui.c	FUNCTION_57	CALL_1
0x4002c4a	            0xeb0a	                           jmp 0x4002c56	      1964	ui.c	FUNCTION_57	CALL_1
0x4002c4c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1967	ui.c	FUNCTION_57	CALL_2
0x4002c4f	            0x89c7	                            mov edi, eax	      1967	ui.c	FUNCTION_57	CALL_2
0x4002c51	      0xe800000000	                          call 0x4002c56	      1967	ui.c	FUNCTION_57	CALL_2
0x4002c56	      0xe800000000	                          call 0x4002c5b	      1974	ui.c	FUNCTION_57	CALL_4
0x4002c5b	              0x90	                                     nop	      1976	ui.c	FUNCTION_57
0x4002c5c	              0xc9	                                   leave	      1976	ui.c	FUNCTION_57
0x4002c5d	              0xc3	                                     ret	      1976	ui.c	FUNCTION_57
clip_x11_owner_exists	ELSE,0:FOR,0:functions,0:CALL,1:DO,0:WHILE,0:SWITCH,0:IF,0	23
0x4003d5b	              0x55	                                push rbp	      2551	ui.c	FUNCTION_73
0x4003d5c	          0x4889e5	                            mov rbp, rsp	      2551	ui.c	FUNCTION_73
0x4003d5f	              0x53	                                push rbx	      2551	ui.c	FUNCTION_73
0x4003d60	        0x4883ec18	                           sub rsp, 0x18	      2551	ui.c	FUNCTION_73
0x4003d64	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2551	ui.c	FUNCTION_73
0x4003d68	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d6c	        0x488b5850	            mov rbx, qword [rax + 0x50] 	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d70	    0x8b0500000000	            mov eax, dword [0x04003d76] 	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d76	            0x85c0	                           test eax, eax	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d78	            0x7407	                            je 0x4003d81	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d7a	      0xe800000000	                          call 0x4003d7f	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d7f	            0xeb07	                           jmp 0x4003d88	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d81	    0x488b05000000	            mov rax, qword [0x04003d88] 	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d88	          0x4889de	                            mov rsi, rbx	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d8b	          0x4889c7	                            mov rdi, rax	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d8e	      0xe800000000	                          call 0x4003d93	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d93	          0x4885c0	                           test rax, rax	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d96	           0xf95c0	                                setne al	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d99	           0xfb6c0	                           movzx eax, al	      2552	ui.c	FUNCTION_73	CALL_1
0x4003d9c	        0x4883c418	                           add rsp, 0x18	      2553	ui.c	FUNCTION_73
0x4003da0	              0x5b	                                 pop rbx	      2553	ui.c	FUNCTION_73
0x4003da1	              0x5d	                                 pop rbp	      2553	ui.c	FUNCTION_73
0x4003da2	              0xc3	                                     ret	      2553	ui.c	FUNCTION_73
clip_x11_set_selection	ELSE,0:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,0	6
0x4003d50	              0x55	                                push rbp	      2546	ui.c	FUNCTION_72
0x4003d51	          0x4889e5	                            mov rbp, rsp	      2546	ui.c	FUNCTION_72
0x4003d54	        0x48897df8	                mov qword [rbp - 8], rdi	      2546	ui.c	FUNCTION_72
0x4003d58	              0x90	                                     nop	      2547	ui.c	FUNCTION_72
0x4003d59	              0x5d	                                 pop rbp	      2547	ui.c	FUNCTION_72
0x4003d5a	              0xc3	                                     ret	      2547	ui.c	FUNCTION_72
clip_process_selection	ELSE,6:FOR,0:functions,0:CALL,28:DO,0:WHILE,0:SWITCH,1:IF,20	473
0x400111f	              0x55	                                push rbp	       859	ui.c	FUNCTION_28
0x4001120	          0x4889e5	                            mov rbp, rsp	       859	ui.c	FUNCTION_28
0x4001123	        0x4883ec20	                           sub rsp, 0x20	       859	ui.c	FUNCTION_28
0x4001127	          0x897dec	             mov dword [rbp - 0x14], edi	       859	ui.c	FUNCTION_28
0x400112a	          0x8975e8	             mov dword [rbp - 0x18], esi	       859	ui.c	FUNCTION_28
0x400112d	          0x8955e4	             mov dword [rbp - 0x1c], edx	       859	ui.c	FUNCTION_28
0x4001130	          0x894de0	             mov dword [rbp - 0x20], ecx	       859	ui.c	FUNCTION_28
0x4001133	    0x48c745f80000	                  mov qword [rbp - 8], 0	       860	ui.c	FUNCTION_28
0x400113b	    0xc745f0010000	               mov dword [rbp - 0x10], 1	       862	ui.c	FUNCTION_28
0x4001142	        0x837dec03	               cmp dword [rbp - 0x14], 3	       864	ui.c	FUNCTION_28	IF_1
0x4001146	     0xf85b9000000	                           jne 0x4001205	       864	ui.c	FUNCTION_28	IF_1
0x400114c	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4001150	        0x488b5008	                mov rdx, qword [rax + 8]	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4001154	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4001158	        0x488b4018	            mov rax, qword [rax + 0x18] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x400115c	          0x4839c2	                            cmp rdx, rax	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x400115f	            0x753a	                           jne 0x400119b	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4001161	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4001165	          0x8b5010	            mov edx, dword [rax + 0x10] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4001168	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x400116c	          0x8b4020	            mov eax, dword [rax + 0x20] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x400116f	            0x39c2	                            cmp edx, eax	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4001171	            0x7528	                           jne 0x400119b	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4001173	    0x8b0500000000	            mov eax, dword [0x04001179] 	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x4001179	            0x85c0	                           test eax, eax	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x400117b	            0x740f	                            je 0x400118c	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x400117d	      0xbe00000000	                              mov esi, 0	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x4001182	      0xbf00000000	                              mov edi, 0	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x4001187	      0xe800000000	                          call 0x400118c	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x400118c	        0x488b45f8	                mov rax, qword [rbp - 8]	       873	ui.c	FUNCTION_28	IF_1	IF_2
0x4001190	    0x66c740480000	                mov word [rax + 0x48], 0	       873	ui.c	FUNCTION_28	IF_1	IF_2
0x4001196	      0xe9ee050000	                           jmp 0x4001789	       874	ui.c	FUNCTION_28	IF_1	IF_2
0x400119b	      0xe800000000	                          call 0x40011a0	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x40011a0	            0x85c0	                           test eax, eax	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x40011a2	            0x752f	                           jne 0x40011d3	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x40011a4	    0x8b0500000000	            mov eax, dword [0x040011aa] 	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x40011aa	            0x85c0	                           test eax, eax	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x40011ac	            0x741b	                            je 0x40011c9	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x40011ae	    0x488b05000000	            mov rax, qword [0x040011b5] 	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x40011b5	      0xbe41000000	                           mov esi, 0x41	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x40011ba	          0x4889c7	                            mov rdi, rax	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x40011bd	      0xe800000000	                          call 0x40011c2	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x40011c2	          0x4885c0	                           test rax, rax	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x40011c5	            0x750c	                           jne 0x40011d3	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x40011c7	            0xeb14	                           jmp 0x40011dd	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x40011c9	    0x8b0500000000	            mov eax, dword [0x040011cf] 	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x40011cf	            0x85c0	                           test eax, eax	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x40011d1	            0x740a	                            je 0x40011dd	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x40011d3	      0xbf00000000	                              mov edi, 0	       887	ui.c	FUNCTION_28	IF_1	CALL_5
0x40011d8	      0xe800000000	                          call 0x40011dd	       887	ui.c	FUNCTION_28	IF_1	CALL_5
0x40011dd	    0x8b0500000000	            mov eax, dword [0x040011e3] 	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x40011e3	            0x85c0	                           test eax, eax	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x40011e5	            0x740f	                            je 0x40011f6	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x40011e7	      0xbe00000000	                              mov esi, 0	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x40011ec	      0xbf00000000	                              mov edi, 0	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x40011f1	      0xe800000000	                          call 0x40011f6	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x40011f6	        0x488b45f8	                mov rax, qword [rbp - 8]	       893	ui.c	FUNCTION_28	IF_1
0x40011fa	    0x66c740480200	                mov word [rax + 0x48], 2	       893	ui.c	FUNCTION_28	IF_1
0x4001200	      0xe984050000	                           jmp 0x4001789	       894	ui.c	FUNCTION_28	IF_1
0x4001205	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       897	ui.c	FUNCTION_28	CALL_7
0x4001208	            0x89c7	                            mov edi, eax	       897	ui.c	FUNCTION_28	CALL_7
0x400120a	      0xe800000000	                          call 0x400120f	       897	ui.c	FUNCTION_28	CALL_7
0x400120f	          0x8945e4	             mov dword [rbp - 0x1c], eax	       897	ui.c	FUNCTION_28	CALL_7
0x4001212	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       898	ui.c	FUNCTION_28	CALL_8
0x4001215	            0x89c7	                            mov edi, eax	       898	ui.c	FUNCTION_28	CALL_8
0x4001217	      0xe800000000	                          call 0x400121c	       898	ui.c	FUNCTION_28	CALL_8
0x400121c	          0x8945e8	             mov dword [rbp - 0x18], eax	       898	ui.c	FUNCTION_28	CALL_8
0x400121f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       900	ui.c	FUNCTION_28	CALL_9
0x4001222	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       900	ui.c	FUNCTION_28	CALL_9
0x4001225	            0x89d6	                            mov esi, edx	       900	ui.c	FUNCTION_28	CALL_9
0x4001227	            0x89c7	                            mov edi, eax	       900	ui.c	FUNCTION_28	CALL_9
0x4001229	      0xe800000000	                          call 0x400122e	       900	ui.c	FUNCTION_28	CALL_9
0x400122e	          0x8945e8	             mov dword [rbp - 0x18], eax	       900	ui.c	FUNCTION_28	CALL_9
0x4001231	        0x488b45f8	                mov rax, qword [rbp - 8]	       903	ui.c	FUNCTION_28	IF_6
0x4001235	          0x8b4040	            mov eax, dword [rax + 0x40] 	       903	ui.c	FUNCTION_28	IF_6
0x4001238	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       903	ui.c	FUNCTION_28	IF_6
0x400123b	            0x751d	                           jne 0x400125a	       903	ui.c	FUNCTION_28	IF_6
0x400123d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       903	ui.c	FUNCTION_28	IF_6
0x4001240	          0x4863d0	                         movsxd rdx, eax	       903	ui.c	FUNCTION_28	IF_6
0x4001243	        0x488b45f8	                mov rax, qword [rbp - 8]	       903	ui.c	FUNCTION_28	IF_6
0x4001247	        0x488b4038	            mov rax, qword [rax + 0x38] 	       903	ui.c	FUNCTION_28	IF_6
0x400124b	          0x4839c2	                            cmp rdx, rax	       903	ui.c	FUNCTION_28	IF_6
0x400124e	            0x750a	                           jne 0x400125a	       903	ui.c	FUNCTION_28	IF_6
0x4001250	        0x837de000	               cmp dword [rbp - 0x20], 0	       903	ui.c	FUNCTION_28	IF_6
0x4001254	     0xf8428050000	                            je 0x4001782	       903	ui.c	FUNCTION_28	IF_6
0x400125a	        0x488b45f8	                mov rax, qword [rbp - 8]	       910	ui.c	FUNCTION_28	IF_7
0x400125e	         0xfb74048	           movzx eax, word [rax + 0x48] 	       910	ui.c	FUNCTION_28	IF_7
0x4001262	        0x6683f802	                               cmp ax, 2	       910	ui.c	FUNCTION_28	IF_7
0x4001266	     0xf8569010000	                           jne 0x40013d5	       910	ui.c	FUNCTION_28	IF_7
0x400126c	        0x837dec02	               cmp dword [rbp - 0x14], 2	       910	ui.c	FUNCTION_28	IF_7
0x4001270	     0xf855f010000	                           jne 0x40013d5	       910	ui.c	FUNCTION_28	IF_7
0x4001276	        0x488b45f8	                mov rax, qword [rbp - 8]	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x400127a	          0x8b5010	            mov edx, dword [rax + 0x10] 	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x400127d	        0x488b45f8	                mov rax, qword [rbp - 8]	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x4001281	        0x488b4008	                mov rax, qword [rax + 8]	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x4001285	            0x89c7	                            mov edi, eax	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x4001287	          0x8b75e8	             mov esi, dword [rbp - 0x18]	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x400128a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x400128d	            0x89d1	                            mov ecx, edx	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x400128f	            0x89fa	                            mov edx, edi	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x4001291	            0x89c7	                            mov edi, eax	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x4001293	      0xe8e9fbffff	               call sym.clip_compare_pos	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x4001298	            0x85c0	                           test eax, eax	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x400129a	     0xf88ac000000	                            js 0x400134c	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40012a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40012a4	          0x8b5020	            mov edx, dword [rax + 0x20] 	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40012a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       919	ui.c	FUNCTION_28	IF_7	IF_8
0x40012ab	        0x488b4018	            mov rax, qword [rax + 0x18] 	       919	ui.c	FUNCTION_28	IF_7	IF_8
0x40012af	            0x89c7	                            mov edi, eax	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40012b1	          0x8b75e8	             mov esi, dword [rbp - 0x18]	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40012b4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40012b7	            0x89d1	                            mov ecx, edx	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40012b9	            0x89fa	                            mov edx, edi	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40012bb	            0x89c7	                            mov edi, eax	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40012bd	      0xe8bffbffff	               call sym.clip_compare_pos	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40012c2	            0x85c0	                           test eax, eax	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40012c4	     0xf89b9000000	                           jns 0x4001383	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40012ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x40012ce	        0x488b5008	                mov rdx, qword [rax + 8]	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x40012d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x40012d6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x40012da	          0x4839c2	                            cmp rdx, rax	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x40012dd	            0x751e	                           jne 0x40012fd	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x40012df	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x40012e3	          0x8b4020	            mov eax, dword [rax + 0x20] 	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x40012e6	          0x2b45e8	             sub eax, dword [rbp - 0x18]	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x40012e9	            0x89c2	                            mov edx, eax	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x40012eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x40012ef	          0x8b4010	            mov eax, dword [rax + 0x10] 	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x40012f2	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x40012f5	            0x29c1	                            sub ecx, eax	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x40012f7	            0x89c8	                            mov eax, ecx	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x40012f9	            0x39c2	                            cmp edx, eax	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x40012fb	            0x7f4f	                            jg 0x400134c	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x40012fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4001301	        0x488b4018	            mov rax, qword [rax + 0x18] 	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4001305	            0x89c2	                            mov edx, eax	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4001307	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x400130a	            0x29c2	                            sub edx, eax	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x400130c	        0x488b45f8	                mov rax, qword [rbp - 8]	       923	ui.c	FUNCTION_28	IF_7	IF_8
0x4001310	        0x488b4008	                mov rax, qword [rax + 8]	       923	ui.c	FUNCTION_28	IF_7	IF_8
0x4001314	            0x89c1	                            mov ecx, eax	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4001316	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4001319	            0x29c1	                            sub ecx, eax	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x400131b	            0x89c8	                            mov eax, ecx	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x400131d	             0x1d0	                            add eax, edx	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x400131f	          0x8945f4	              mov dword [rbp - 0xc], eax	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4001322	        0x837df400	                cmp dword [rbp - 0xc], 0	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4001326	            0x7f24	                            jg 0x400134c	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4001328	        0x837df400	                cmp dword [rbp - 0xc], 0	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x400132c	            0x7555	                           jne 0x4001383	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x400132e	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4001332	          0x8b5010	            mov edx, dword [rax + 0x10] 	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4001335	        0x488b45f8	                mov rax, qword [rbp - 8]	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x4001339	          0x8b4020	            mov eax, dword [rax + 0x20] 	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x400133c	             0x1d0	                            add eax, edx	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x400133e	            0x89c2	                            mov edx, eax	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x4001340	          0xc1ea1f	                           shr edx, 0x1f	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x4001343	             0x1d0	                            add eax, edx	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x4001345	            0xd1f8	                              sar eax, 1	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x4001347	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x400134a	            0x7e37	                           jle 0x4001383	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x400134c	        0x488b45f8	                mov rax, qword [rbp - 8]	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x4001350	        0x488b4018	            mov rax, qword [rax + 0x18] 	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x4001354	            0x89c2	                            mov edx, eax	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x4001356	        0x488b45f8	                mov rax, qword [rbp - 8]	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x400135a	        0x6689502c	               mov word [rax + 0x2c], dx	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x400135e	        0x488b45f8	                mov rax, qword [rbp - 8]	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x4001362	          0x8b4020	            mov eax, dword [rax + 0x20] 	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x4001365	          0x8d50ff	                      lea edx, [rax - 1]	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x4001368	        0x488b45f8	                mov rax, qword [rbp - 8]	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x400136c	        0x6689502e	               mov word [rax + 0x2e], dx	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x4001370	        0x488b45f8	                mov rax, qword [rbp - 8]	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x4001374	          0x8b4020	            mov eax, dword [rax + 0x20] 	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x4001377	            0x89c2	                            mov edx, eax	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x4001379	        0x488b45f8	                mov rax, qword [rbp - 8]	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x400137d	        0x66895030	               mov word [rax + 0x30], dx	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x4001381	            0xeb34	                           jmp 0x40013b7	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x4001383	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4001387	        0x488b4008	                mov rax, qword [rax + 8]	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x400138b	            0x89c2	                            mov edx, eax	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x400138d	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4001391	        0x6689502c	               mov word [rax + 0x2c], dx	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4001395	        0x488b45f8	                mov rax, qword [rbp - 8]	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4001399	          0x8b4010	            mov eax, dword [rax + 0x10] 	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x400139c	            0x89c2	                            mov edx, eax	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x400139e	        0x488b45f8	                mov rax, qword [rbp - 8]	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x40013a2	        0x6689502e	               mov word [rax + 0x2e], dx	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x40013a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x40013aa	          0x8b4010	            mov eax, dword [rax + 0x10] 	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x40013ad	            0x89c2	                            mov edx, eax	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x40013af	        0x488b45f8	                mov rax, qword [rbp - 8]	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x40013b3	        0x66895030	               mov word [rax + 0x30], dx	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x40013b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x40013bb	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x40013bf	        0x6683f801	                               cmp ax, 1	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x40013c3	            0x7510	                           jne 0x40013d5	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x40013c5	        0x837de000	               cmp dword [rbp - 0x20], 0	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x40013c9	            0x750a	                           jne 0x40013d5	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x40013cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       938	ui.c	FUNCTION_28	IF_7	IF_9
0x40013cf	    0x66c7404a0000	                mov word [rax + 0x4a], 0	       938	ui.c	FUNCTION_28	IF_7	IF_9
0x40013d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       942	ui.c	FUNCTION_28
0x40013d9	    0x66c740480100	                mov word [rax + 0x48], 1	       942	ui.c	FUNCTION_28
0x40013df	        0x837de000	               cmp dword [rbp - 0x20], 0	       948	ui.c	FUNCTION_28	IF_10
0x40013e3	            0x742b	                            je 0x4001410	       948	ui.c	FUNCTION_28	IF_10
0x40013e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       948	ui.c	FUNCTION_28	IF_10
0x40013e9	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       948	ui.c	FUNCTION_28	IF_10
0x40013ed	          0x8d5001	                      lea edx, [rax + 1]	       948	ui.c	FUNCTION_28	IF_10
0x40013f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       948	ui.c	FUNCTION_28	IF_10
0x40013f4	        0x6689504a	               mov word [rax + 0x4a], dx	       948	ui.c	FUNCTION_28	IF_10
0x40013f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       948	ui.c	FUNCTION_28	IF_10
0x40013fc	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       948	ui.c	FUNCTION_28	IF_10
0x4001400	        0x6683f802	                               cmp ax, 2	       948	ui.c	FUNCTION_28	IF_10
0x4001404	            0x760a	                           jbe 0x4001410	       948	ui.c	FUNCTION_28	IF_10
0x4001406	        0x488b45f8	                mov rax, qword [rbp - 8]	       949	ui.c	FUNCTION_28	IF_10
0x400140a	    0x66c7404a0000	                mov word [rax + 0x4a], 0	       949	ui.c	FUNCTION_28	IF_10
0x4001410	        0x488b45f8	                mov rax, qword [rbp - 8]	       951	ui.c	FUNCTION_28	SWITCH_1
0x4001414	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       951	ui.c	FUNCTION_28	SWITCH_1
0x4001418	           0xfb7c0	                           movzx eax, ax	       951	ui.c	FUNCTION_28	SWITCH_1
0x400141b	          0x83f801	                              cmp eax, 1	       951	ui.c	FUNCTION_28	SWITCH_1
0x400141e	     0xf84bb010000	                            je 0x40015df	       951	ui.c	FUNCTION_28	SWITCH_1
0x4001424	          0x83f802	                              cmp eax, 2	       951	ui.c	FUNCTION_28	SWITCH_1
0x4001427	     0xf849a020000	                            je 0x40016c7	       951	ui.c	FUNCTION_28	SWITCH_1
0x400142d	            0x85c0	                           test eax, eax	       951	ui.c	FUNCTION_28	SWITCH_1
0x400142f	     0xf8533030000	                           jne 0x4001768	       951	ui.c	FUNCTION_28	SWITCH_1
0x4001435	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x4001438	          0x4863d0	                         movsxd rdx, eax	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x400143b	        0x488b45f8	                mov rax, qword [rbp - 8]	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x400143f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x4001443	          0x4839c2	                            cmp rdx, rax	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x4001446	            0x7414	                            je 0x400145c	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x4001448	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x400144b	            0x89c7	                            mov edi, eax	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x400144d	      0xe82b0f0000	              call sym.clip_get_line_end	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x4001452	            0x89c2	                            mov edx, eax	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x4001454	        0x488b45f8	                mov rax, qword [rbp - 8]	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x4001458	        0x66895034	               mov word [rax + 0x34], dx	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x400145c	        0x488b45f8	                mov rax, qword [rbp - 8]	       960	ui.c	FUNCTION_28	SWITCH_1	IF_12
0x4001460	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       960	ui.c	FUNCTION_28	SWITCH_1	IF_12
0x4001464	           0xfb7c8	                           movzx ecx, ax	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4001467	        0x488b45f8	                mov rax, qword [rbp - 8]	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x400146b	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x400146f	           0xfb7d0	                           movzx edx, ax	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4001472	          0x8b75e8	             mov esi, dword [rbp - 0x18]	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4001475	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4001478	            0x89c7	                            mov edi, eax	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x400147a	      0xe802faffff	               call sym.clip_compare_pos	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x400147f	            0x85c0	                           test eax, eax	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4001481	     0xf88a0000000	                            js 0x4001527	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4001487	        0x488b45f8	                mov rax, qword [rbp - 8]	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x400148b	         0xfb74034	           movzx eax, word [rax + 0x34] 	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x400148f	           0xfb7c0	                           movzx eax, ax	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x4001492	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x4001495	            0x7f36	                            jg 0x40014cd	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x4001497	    0x488b05000000	            mov rax, qword [0x0400149e] 	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x400149e	            0x89c7	                            mov edi, eax	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40014a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       964	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x40014a4	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       964	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x40014a8	           0xfb7d0	                           movzx edx, ax	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40014ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40014af	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40014b3	           0xfb7f0	                           movzx esi, ax	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40014b6	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40014b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40014bd	          0x4189f8	                            mov r8d, edi	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40014c0	          0x4889c7	                            mov rdi, rax	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40014c3	      0xe8280f0000	 call sym.clip_update_modeless_selection	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x40014c8	      0xe99b020000	                           jmp 0x4001768	       989	ui.c	FUNCTION_28	SWITCH_1
0x40014cd	    0x8b0500000000	            mov eax, dword [0x040014d3] 	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x40014d3	            0x85c0	                           test eax, eax	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x40014d5	            0x741a	                            je 0x40014f1	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x40014d7	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x40014da	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x40014dd	            0x89d6	                            mov esi, edx	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x40014df	            0x89c7	                            mov edi, eax	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x40014e1	      0xe800000000	                          call 0x40014e6	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x40014e6	            0x85c0	                           test eax, eax	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x40014e8	            0x7407	                            je 0x40014f1	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x40014ea	    0xc745f0020000	               mov dword [rbp - 0x10], 2	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x40014f1	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x40014f4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x40014f7	          0x8d3c02	                    lea edi, [rdx + rax]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x40014fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       972	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2
0x40014fe	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       972	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2
0x4001502	           0xfb7d0	                           movzx edx, ax	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4001505	        0x488b45f8	                mov rax, qword [rbp - 8]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4001509	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x400150d	           0xfb7f0	                           movzx esi, ax	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4001510	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4001513	        0x488b45f8	                mov rax, qword [rbp - 8]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4001517	          0x4189f8	                            mov r8d, edi	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x400151a	          0x4889c7	                            mov rdi, rax	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x400151d	      0xe8ce0e0000	 call sym.clip_update_modeless_selection	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4001522	      0xe941020000	                           jmp 0x4001768	       989	ui.c	FUNCTION_28	SWITCH_1
0x4001527	    0x8b0500000000	            mov eax, dword [0x0400152d] 	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x400152d	            0x85c0	                           test eax, eax	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x400152f	            0x742a	                            je 0x400155b	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x4001531	        0x488b45f8	                mov rax, qword [rbp - 8]	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4001535	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4001539	           0xfb7d0	                           movzx edx, ax	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x400153c	        0x488b45f8	                mov rax, qword [rbp - 8]	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4001540	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4001544	           0xfb7c0	                           movzx eax, ax	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4001547	            0x89d6	                            mov esi, edx	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4001549	            0x89c7	                            mov edi, eax	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x400154b	      0xe800000000	                          call 0x4001550	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4001550	            0x85c0	                           test eax, eax	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4001552	            0x7407	                            je 0x400155b	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4001554	    0xc745f0020000	               mov dword [rbp - 0x10], 2	       980	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x400155b	        0x488b45f8	                mov rax, qword [rbp - 8]	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x400155f	         0xfb74034	           movzx eax, word [rax + 0x34] 	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x4001563	           0xfb7c0	                           movzx eax, ax	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x4001566	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x4001569	            0x7f3e	                            jg 0x40015a9	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x400156b	        0x488b45f8	                mov rax, qword [rbp - 8]	       984	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x400156f	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       984	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x4001573	           0xfb7d0	                           movzx edx, ax	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x4001576	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x4001579	          0x8d3c02	                    lea edi, [rdx + rax]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x400157c	        0x488b45f8	                mov rax, qword [rbp - 8]	       984	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x4001580	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       984	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x4001584	           0xfb7c8	                           movzx ecx, ax	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x4001587	        0x488b45f8	                mov rax, qword [rbp - 8]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x400158b	         0xfb74034	           movzx eax, word [rax + 0x34] 	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x400158f	           0xfb7d0	                           movzx edx, ax	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x4001592	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x4001595	        0x488b45f8	                mov rax, qword [rbp - 8]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x4001599	          0x4189f8	                            mov r8d, edi	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x400159c	          0x4889c7	                            mov rdi, rax	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x400159f	      0xe84c0e0000	 call sym.clip_update_modeless_selection	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40015a4	      0xe9bf010000	                           jmp 0x4001768	       989	ui.c	FUNCTION_28	SWITCH_1
0x40015a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       987	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4
0x40015ad	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       987	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4
0x40015b1	           0xfb7d0	                           movzx edx, ax	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x40015b4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x40015b7	          0x8d3c02	                    lea edi, [rdx + rax]	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x40015ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       987	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4
0x40015be	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       987	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4
0x40015c2	           0xfb7c8	                           movzx ecx, ax	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x40015c5	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x40015c8	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x40015cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x40015cf	          0x4189f8	                            mov r8d, edi	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x40015d2	          0x4889c7	                            mov rdi, rax	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x40015d5	      0xe8160e0000	 call sym.clip_update_modeless_selection	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x40015da	      0xe989010000	                           jmp 0x4001768	       989	ui.c	FUNCTION_28	SWITCH_1
0x40015df	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40015e2	          0x4863d0	                         movsxd rdx, eax	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40015e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40015e9	        0x488b4038	            mov rax, qword [rax + 0x38] 	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40015ed	          0x4839c2	                            cmp rdx, rax	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40015f0	            0x752a	                           jne 0x400161c	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40015f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40015f6	         0xfb74032	           movzx eax, word [rax + 0x32] 	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40015fa	           0xfb7c0	                           movzx eax, ax	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x40015fd	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4001600	            0x7f1a	                            jg 0x400161c	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4001602	        0x488b45f8	                mov rax, qword [rbp - 8]	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4001606	         0xfb74034	           movzx eax, word [rax + 0x34] 	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x400160a	           0xfb7c0	                           movzx eax, ax	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x400160d	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4001610	            0x7e0a	                           jle 0x400161c	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4001612	        0x837de000	               cmp dword [rbp - 0x20], 0	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4001616	     0xf8469010000	                            je 0x4001785	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x400161c	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x400161f	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x4001622	        0x488b45f8	                mov rax, qword [rbp - 8]	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x4001626	            0x89ce	                            mov esi, ecx	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x4001628	          0x4889c7	                            mov rdi, rax	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x400162b	      0xe8ef0a0000	       call sym.clip_get_word_boundaries	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x4001630	        0x488b45f8	                mov rax, qword [rbp - 8]	      1002	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x4001634	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	      1002	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x4001638	           0xfb7c8	                           movzx ecx, ax	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x400163b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x400163f	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4001643	           0xfb7d0	                           movzx edx, ax	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4001646	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4001649	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x400164c	            0x89c7	                            mov edi, eax	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x400164e	      0xe82ef8ffff	               call sym.clip_compare_pos	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4001653	            0x85c0	                           test eax, eax	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4001655	            0x7838	                            js 0x400168f	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4001657	        0x488b45f8	                mov rax, qword [rbp - 8]	      1004	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x400165b	         0xfb74034	           movzx eax, word [rax + 0x34] 	      1004	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x400165f	           0xfb7f8	                           movzx edi, ax	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4001662	        0x488b45f8	                mov rax, qword [rbp - 8]	      1004	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x4001666	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	      1004	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x400166a	           0xfb7d0	                           movzx edx, ax	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x400166d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4001671	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4001675	           0xfb7f0	                           movzx esi, ax	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4001678	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x400167b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x400167f	          0x4189f8	                            mov r8d, edi	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4001682	          0x4889c7	                            mov rdi, rax	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4001685	      0xe8660d0000	 call sym.clip_update_modeless_selection	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x400168a	      0xe9d9000000	                           jmp 0x4001768	      1008	ui.c	FUNCTION_28	SWITCH_1
0x400168f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1007	ui.c	FUNCTION_28	SWITCH_1	ELSE_5
0x4001693	         0xfb74030	           movzx eax, word [rax + 0x30] 	      1007	ui.c	FUNCTION_28	SWITCH_1	ELSE_5
0x4001697	           0xfb7f8	                           movzx edi, ax	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x400169a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1007	ui.c	FUNCTION_28	SWITCH_1	ELSE_5
0x400169e	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1007	ui.c	FUNCTION_28	SWITCH_1	ELSE_5
0x40016a2	           0xfb7c8	                           movzx ecx, ax	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40016a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40016a9	         0xfb74032	           movzx eax, word [rax + 0x32] 	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40016ad	           0xfb7d0	                           movzx edx, ax	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40016b0	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40016b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40016b7	          0x4189f8	                            mov r8d, edi	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40016ba	          0x4889c7	                            mov rdi, rax	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40016bd	      0xe82e0d0000	 call sym.clip_update_modeless_selection	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40016c2	      0xe9a1000000	                           jmp 0x4001768	      1008	ui.c	FUNCTION_28	SWITCH_1
0x40016c7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40016ca	          0x4863d0	                         movsxd rdx, eax	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40016cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40016d1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40016d5	          0x4839c2	                            cmp rdx, rax	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40016d8	            0x750a	                           jne 0x40016e4	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40016da	        0x837de000	               cmp dword [rbp - 0x20], 0	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40016de	     0xf84a4000000	                            je 0x4001788	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40016e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1015	ui.c	FUNCTION_28	SWITCH_1	IF_20
0x40016e8	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	      1015	ui.c	FUNCTION_28	SWITCH_1	IF_20
0x40016ec	           0xfb7c8	                           movzx ecx, ax	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40016ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40016f3	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40016f7	           0xfb7d0	                           movzx edx, ax	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40016fa	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40016fd	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x4001700	            0x89c7	                            mov edi, eax	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x4001702	      0xe87af7ffff	               call sym.clip_compare_pos	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x4001707	            0x85c0	                           test eax, eax	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x4001709	            0x782f	                            js 0x400173a	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x400170b	    0x488b05000000	            mov rax, qword [0x04001712] 	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4001712	            0x89c1	                            mov ecx, eax	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4001714	        0x488b45f8	                mov rax, qword [rbp - 8]	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4001718	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x400171c	           0xfb7f0	                           movzx esi, ax	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x400171f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4001722	        0x488b45f8	                mov rax, qword [rbp - 8]	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4001726	          0x4189c8	                            mov r8d, ecx	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4001729	            0x89d1	                            mov ecx, edx	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x400172b	      0xba00000000	                              mov edx, 0	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4001730	          0x4889c7	                            mov rdi, rax	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4001733	      0xe8b80c0000	 call sym.clip_update_modeless_selection	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4001738	            0xeb2d	                           jmp 0x4001767	      1021	ui.c	FUNCTION_28	SWITCH_1
0x400173a	    0x488b05000000	            mov rax, qword [0x04001741] 	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4001741	            0x89c1	                            mov ecx, eax	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4001743	        0x488b45f8	                mov rax, qword [rbp - 8]	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4001747	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x400174b	           0xfb7d0	                           movzx edx, ax	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x400174e	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4001751	        0x488b45f8	                mov rax, qword [rbp - 8]	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4001755	          0x4189c8	                            mov r8d, ecx	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4001758	            0x89d1	                            mov ecx, edx	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x400175a	      0xba00000000	                              mov edx, 0	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x400175f	          0x4889c7	                            mov rdi, rax	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4001762	      0xe8890c0000	 call sym.clip_update_modeless_selection	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4001767	              0x90	                                     nop	      1021	ui.c	FUNCTION_28	SWITCH_1
0x4001768	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1024	ui.c	FUNCTION_28
0x400176b	          0x4863d0	                         movsxd rdx, eax	      1024	ui.c	FUNCTION_28
0x400176e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1024	ui.c	FUNCTION_28
0x4001772	        0x48895038	             mov qword [rax + 0x38], rdx	      1024	ui.c	FUNCTION_28
0x4001776	        0x488b45f8	                mov rax, qword [rbp - 8]	      1025	ui.c	FUNCTION_28
0x400177a	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1025	ui.c	FUNCTION_28
0x400177d	          0x895040	             mov dword [rax + 0x40], edx	      1025	ui.c	FUNCTION_28
0x4001780	            0xeb07	                           jmp 0x4001789	      1025	ui.c	FUNCTION_28
0x4001782	              0x90	                                     nop	       904	ui.c	FUNCTION_28	IF_6
0x4001783	            0xeb04	                           jmp 0x4001789	       904	ui.c	FUNCTION_28	IF_6
0x4001785	              0x90	                                     nop	       995	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4001786	            0xeb01	                           jmp 0x4001789	       995	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4001788	              0x90	                                     nop	      1012	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x4001789	              0xc9	                                   leave	      1031	ui.c	FUNCTION_28
0x400178a	              0xc3	                                     ret	      1031	ui.c	FUNCTION_28
im_save_status	ELSE,1:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,3	36
0x4005292	              0x55	                                push rbp	      3350	ui.c	FUNCTION_81
0x4005293	          0x4889e5	                            mov rbp, rsp	      3350	ui.c	FUNCTION_81
0x4005296	        0x48897df8	                mov qword [rbp - 8], rdi	      3350	ui.c	FUNCTION_81
0x400529a	    0x8b0500000000	            mov eax, dword [0x040052a0] 	      3358	ui.c	FUNCTION_81	IF_1
0x40052a0	            0x85c0	                           test eax, eax	      3358	ui.c	FUNCTION_81	IF_1
0x40052a2	            0x7563	                           jne 0x4005307	      3358	ui.c	FUNCTION_81	IF_1
0x40052a4	    0x8b0500000000	            mov eax, dword [0x040052aa] 	      3358	ui.c	FUNCTION_81	IF_1
0x40052aa	            0x85c0	                           test eax, eax	      3358	ui.c	FUNCTION_81	IF_1
0x40052ac	            0x7459	                            je 0x4005307	      3358	ui.c	FUNCTION_81	IF_1
0x40052ae	    0x8b0500000000	            mov eax, dword [0x040052b4] 	      3358	ui.c	FUNCTION_81	IF_1
0x40052b4	            0x85c0	                           test eax, eax	      3358	ui.c	FUNCTION_81	IF_1
0x40052b6	            0x754f	                           jne 0x4005307	      3358	ui.c	FUNCTION_81	IF_1
0x40052b8	    0x488b05000000	            mov rax, qword [0x040052bf] 	      3360	ui.c	FUNCTION_81	IF_1
0x40052bf	          0x4885c0	                           test rax, rax	      3360	ui.c	FUNCTION_81	IF_1
0x40052c2	            0x7443	                            je 0x4005307	      3360	ui.c	FUNCTION_81	IF_1
0x40052c4	    0x8b0500000000	            mov eax, dword [0x040052ca] 	      3363	ui.c	FUNCTION_81	IF_1
0x40052ca	            0x85c0	                           test eax, eax	      3363	ui.c	FUNCTION_81	IF_1
0x40052cc	            0x740a	                            je 0x40052d8	      3363	ui.c	FUNCTION_81	IF_1
0x40052ce	    0x8b0500000000	            mov eax, dword [0x040052d4] 	      3363	ui.c	FUNCTION_81	IF_1
0x40052d4	            0x85c0	                           test eax, eax	      3363	ui.c	FUNCTION_81	IF_1
0x40052d6	            0x742f	                            je 0x4005307	      3363	ui.c	FUNCTION_81	IF_1
0x40052d8	    0x8b0500000000	            mov eax, dword [0x040052de] 	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x40052de	            0x85c0	                           test eax, eax	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x40052e0	            0x740d	                            je 0x40052ef	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x40052e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x40052e6	    0x48c700020000	                      mov qword [rax], 2	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x40052ed	            0xeb18	                           jmp 0x4005307	      3373	ui.c	FUNCTION_81
0x40052ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40052f3	          0x488b00	                    mov rax, qword [rax]	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40052f6	        0x4883f802	                              cmp rax, 2	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40052fa	            0x750b	                           jne 0x4005307	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40052fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3371	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x4005300	    0x48c700000000	                      mov qword [rax], 0	      3371	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x4005307	              0x90	                                     nop	      3373	ui.c	FUNCTION_81
0x4005308	              0x5d	                                 pop rbp	      3373	ui.c	FUNCTION_81
0x4005309	              0xc3	                                     ret	      3373	ui.c	FUNCTION_81
clip_init	ELSE,0:FOR,1:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,1	27
0x400072f	              0x55	                                push rbp	       448	ui.c	FUNCTION_14
0x4000730	          0x4889e5	                            mov rbp, rsp	       448	ui.c	FUNCTION_14
0x4000733	          0x897dec	             mov dword [rbp - 0x14], edi	       448	ui.c	FUNCTION_14
0x4000736	    0x48c745f80000	                  mov qword [rbp - 8], 0	       451	ui.c	FUNCTION_14
0x400073e	        0x488b45f8	                mov rax, qword [rbp - 8]	       454	ui.c	FUNCTION_14	FOR_1
0x4000742	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       454	ui.c	FUNCTION_14	FOR_1
0x4000745	            0x8910	                    mov dword [rax], edx	       454	ui.c	FUNCTION_14	FOR_1
0x4000747	        0x488b45f8	                mov rax, qword [rbp - 8]	       455	ui.c	FUNCTION_14	FOR_1
0x400074b	    0xc74004000000	                  mov dword [rax + 4], 0	       455	ui.c	FUNCTION_14	FOR_1
0x4000752	        0x488b45f8	                mov rax, qword [rbp - 8]	       456	ui.c	FUNCTION_14	FOR_1
0x4000756	    0x48c740080000	                  mov qword [rax + 8], 0	       456	ui.c	FUNCTION_14	FOR_1
0x400075e	        0x488b45f8	                mov rax, qword [rbp - 8]	       457	ui.c	FUNCTION_14	FOR_1
0x4000762	    0xc74010000000	               mov dword [rax + 0x10], 0	       457	ui.c	FUNCTION_14	FOR_1
0x4000769	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	ui.c	FUNCTION_14	FOR_1
0x400076d	    0x48c740180000	               mov qword [rax + 0x18], 0	       458	ui.c	FUNCTION_14	FOR_1
0x4000775	        0x488b45f8	                mov rax, qword [rbp - 8]	       459	ui.c	FUNCTION_14	FOR_1
0x4000779	    0xc74020000000	               mov dword [rax + 0x20], 0	       459	ui.c	FUNCTION_14	FOR_1
0x4000780	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	ui.c	FUNCTION_14	FOR_1
0x4000784	    0x66c740480000	                mov word [rax + 0x48], 0	       460	ui.c	FUNCTION_14	FOR_1
0x400078a	    0x48817df80000	                  cmp qword [rbp - 8], 0	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x4000792	            0x740a	                            je 0x400079e	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x4000794	    0x48c745f80000	                  mov qword [rbp - 8], 0	       464	ui.c	FUNCTION_14	FOR_1
0x400079c	            0xeba0	                           jmp 0x400073e	       465	ui.c	FUNCTION_14	FOR_1
0x400079e	              0x90	                                     nop	       463	ui.c	FUNCTION_14	FOR_1	IF_1
0x400079f	              0x90	                                     nop	       466	ui.c	FUNCTION_14
0x40007a0	              0x5d	                                 pop rbp	       466	ui.c	FUNCTION_14
0x40007a1	              0xc3	                                     ret	       466	ui.c	FUNCTION_14
read_from_input_buf	ELSE,0:FOR,0:functions,0:CALL,3:DO,0:WHILE,0:SWITCH,0:IF,3	42
0x4002822	              0x55	                                push rbp	      1772	ui.c	FUNCTION_54
0x4002823	          0x4889e5	                            mov rbp, rsp	      1772	ui.c	FUNCTION_54
0x4002826	        0x4883ec10	                           sub rsp, 0x10	      1772	ui.c	FUNCTION_54
0x400282a	        0x48897df8	                mov qword [rbp - 8], rdi	      1772	ui.c	FUNCTION_54
0x400282e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1772	ui.c	FUNCTION_54
0x4002832	    0x8b0500000000	            mov eax, dword [0x04002838] 	      1773	ui.c	FUNCTION_54	IF_1
0x4002838	            0x85c0	                           test eax, eax	      1773	ui.c	FUNCTION_54	IF_1
0x400283a	            0x750a	                           jne 0x4002846	      1773	ui.c	FUNCTION_54	IF_1
0x400283c	      0xbf01000000	                              mov edi, 1	      1774	ui.c	FUNCTION_54	CALL_1
0x4002841	      0xe800000000	                          call 0x4002846	      1774	ui.c	FUNCTION_54	CALL_1
0x4002846	    0x8b0500000000	            mov eax, dword [0x0400284c] 	      1775	ui.c	FUNCTION_54	IF_2
0x400284c	            0x4898	                                    cdqe	      1775	ui.c	FUNCTION_54	IF_2
0x400284e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1775	ui.c	FUNCTION_54	IF_2
0x4002852	            0x7d0c	                           jge 0x4002860	      1775	ui.c	FUNCTION_54	IF_2
0x4002854	    0x8b0500000000	            mov eax, dword [0x0400285a] 	      1776	ui.c	FUNCTION_54	IF_2
0x400285a	            0x4898	                                    cdqe	      1776	ui.c	FUNCTION_54	IF_2
0x400285c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1776	ui.c	FUNCTION_54	IF_2
0x4002860	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1777	ui.c	FUNCTION_54	CALL_2
0x4002864	        0x488b45f8	                mov rax, qword [rbp - 8]	      1777	ui.c	FUNCTION_54	CALL_2
0x4002868	      0xbe00000000	                              mov esi, 0	      1777	ui.c	FUNCTION_54	CALL_2
0x400286d	          0x4889c7	                            mov rdi, rax	      1777	ui.c	FUNCTION_54	CALL_2
0x4002870	      0xe800000000	                          call 0x4002875	      1777	ui.c	FUNCTION_54	CALL_2
0x4002875	    0x8b0500000000	            mov eax, dword [0x0400287b] 	      1778	ui.c	FUNCTION_54
0x400287b	            0x89c2	                            mov edx, eax	      1778	ui.c	FUNCTION_54
0x400287d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1778	ui.c	FUNCTION_54
0x4002881	            0x29c2	                            sub edx, eax	      1778	ui.c	FUNCTION_54
0x4002883	            0x89d0	                            mov eax, edx	      1778	ui.c	FUNCTION_54
0x4002885	    0x890500000000	            mov dword [0x0400288b], eax 	      1778	ui.c	FUNCTION_54
0x400288b	    0x8b0500000000	            mov eax, dword [0x04002891] 	      1779	ui.c	FUNCTION_54	IF_3
0x4002891	            0x85c0	                           test eax, eax	      1779	ui.c	FUNCTION_54	IF_3
0x4002893	            0x7423	                            je 0x40028b8	      1779	ui.c	FUNCTION_54	IF_3
0x4002895	    0x8b0500000000	            mov eax, dword [0x0400289b] 	      1780	ui.c	FUNCTION_54	CALL_3
0x400289b	            0x4898	                                    cdqe	      1780	ui.c	FUNCTION_54	CALL_3
0x400289d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1780	ui.c	FUNCTION_54	CALL_3
0x40028a1	    0x488d8a000000	                          lea rcx, [rdx]	      1780	ui.c	FUNCTION_54	CALL_3
0x40028a8	          0x4889c2	                            mov rdx, rax	      1780	ui.c	FUNCTION_54	CALL_3
0x40028ab	          0x4889ce	                            mov rsi, rcx	      1780	ui.c	FUNCTION_54	CALL_3
0x40028ae	      0xbf00000000	                              mov edi, 0	      1780	ui.c	FUNCTION_54	CALL_3
0x40028b3	      0xe800000000	                          call 0x40028b8	      1780	ui.c	FUNCTION_54	CALL_3
0x40028b8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1781	ui.c	FUNCTION_54
0x40028bc	              0xc9	                                   leave	      1782	ui.c	FUNCTION_54
0x40028bd	              0xc3	                                     ret	      1782	ui.c	FUNCTION_54
check_row	ELSE,0:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,2	16
0x4002c9e	              0x55	                                push rbp	      2005	ui.c	FUNCTION_60
0x4002c9f	          0x4889e5	                            mov rbp, rsp	      2005	ui.c	FUNCTION_60
0x4002ca2	          0x897dfc	                mov dword [rbp - 4], edi	      2005	ui.c	FUNCTION_60
0x4002ca5	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2006	ui.c	FUNCTION_60	IF_1
0x4002ca9	            0x7907	                           jns 0x4002cb2	      2006	ui.c	FUNCTION_60	IF_1
0x4002cab	      0xb800000000	                              mov eax, 0	      2007	ui.c	FUNCTION_60	IF_1
0x4002cb0	            0xeb19	                           jmp 0x4002ccb	      2007	ui.c	FUNCTION_60	IF_1
0x4002cb2	    0x8b0500000000	            mov eax, dword [0x04002cb8] 	      2008	ui.c	FUNCTION_60	IF_2
0x4002cb8	          0x3945fc	                cmp dword [rbp - 4], eax	      2008	ui.c	FUNCTION_60	IF_2
0x4002cbb	            0x7c0b	                            jl 0x4002cc8	      2008	ui.c	FUNCTION_60	IF_2
0x4002cbd	    0x8b0500000000	            mov eax, dword [0x04002cc3] 	      2009	ui.c	FUNCTION_60	IF_2
0x4002cc3	          0x83e801	                              sub eax, 1	      2009	ui.c	FUNCTION_60	IF_2
0x4002cc6	            0xeb03	                           jmp 0x4002ccb	      2009	ui.c	FUNCTION_60	IF_2
0x4002cc8	          0x8b45fc	                mov eax, dword [rbp - 4]	      2010	ui.c	FUNCTION_60
0x4002ccb	              0x5d	                                 pop rbp	      2011	ui.c	FUNCTION_60
0x4002ccc	              0xc3	                                     ret	      2011	ui.c	FUNCTION_60
clip_auto_select	ELSE,0:FOR,0:functions,0:CALL,4:DO,0:WHILE,0:SWITCH,0:IF,2	15
0x4000cd0	              0x55	                                push rbp	       675	ui.c	FUNCTION_22
0x4000cd1	          0x4889e5	                            mov rbp, rsp	       675	ui.c	FUNCTION_22
0x4000cd4	      0xe800000000	                          call 0x4000cd9	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4000cd9	            0x85c0	                           test eax, eax	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4000cdb	            0x740a	                            je 0x4000ce7	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4000cdd	      0xbf00000000	                              mov edi, 0	       677	ui.c	FUNCTION_22	CALL_2
0x4000ce2	      0xe869feffff	            call sym.clip_copy_selection	       677	ui.c	FUNCTION_22	CALL_2
0x4000ce7	      0xe800000000	                          call 0x4000cec	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0x4000cec	            0x85c0	                           test eax, eax	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0x4000cee	            0x740a	                            je 0x4000cfa	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0x4000cf0	      0xbf00000000	                              mov edi, 0	       679	ui.c	FUNCTION_22	CALL_4
0x4000cf5	      0xe856feffff	            call sym.clip_copy_selection	       679	ui.c	FUNCTION_22	CALL_4
0x4000cfa	              0x90	                                     nop	       680	ui.c	FUNCTION_22
0x4000cfb	              0x5d	                                 pop rbp	       680	ui.c	FUNCTION_22
0x4000cfc	              0xc3	                                     ret	       680	ui.c	FUNCTION_22
clip_compare_pos	ELSE,0:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,4	29
0x4000e81	              0x55	                                push rbp	       772	ui.c	FUNCTION_26
0x4000e82	          0x4889e5	                            mov rbp, rsp	       772	ui.c	FUNCTION_26
0x4000e85	          0x897dfc	                mov dword [rbp - 4], edi	       772	ui.c	FUNCTION_26
0x4000e88	          0x8975f8	                mov dword [rbp - 8], esi	       772	ui.c	FUNCTION_26
0x4000e8b	          0x8955f4	              mov dword [rbp - 0xc], edx	       772	ui.c	FUNCTION_26
0x4000e8e	          0x894df0	             mov dword [rbp - 0x10], ecx	       772	ui.c	FUNCTION_26
0x4000e91	          0x8b45fc	                mov eax, dword [rbp - 4]	       773	ui.c	FUNCTION_26	IF_1
0x4000e94	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       773	ui.c	FUNCTION_26	IF_1
0x4000e97	            0x7e07	                           jle 0x4000ea0	       773	ui.c	FUNCTION_26	IF_1
0x4000e99	      0xb801000000	                              mov eax, 1	       773	ui.c	FUNCTION_26	IF_1
0x4000e9e	            0xeb32	                           jmp 0x4000ed2	       773	ui.c	FUNCTION_26	IF_1
0x4000ea0	          0x8b45fc	                mov eax, dword [rbp - 4]	       774	ui.c	FUNCTION_26	IF_2
0x4000ea3	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       774	ui.c	FUNCTION_26	IF_2
0x4000ea6	            0x7d07	                           jge 0x4000eaf	       774	ui.c	FUNCTION_26	IF_2
0x4000ea8	      0xb8ffffffff	                     mov eax, 0xffffffff	       774	ui.c	FUNCTION_26	IF_2
0x4000ead	            0xeb23	                           jmp 0x4000ed2	       774	ui.c	FUNCTION_26	IF_2
0x4000eaf	          0x8b45f8	                mov eax, dword [rbp - 8]	       775	ui.c	FUNCTION_26	IF_3
0x4000eb2	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       775	ui.c	FUNCTION_26	IF_3
0x4000eb5	            0x7e07	                           jle 0x4000ebe	       775	ui.c	FUNCTION_26	IF_3
0x4000eb7	      0xb801000000	                              mov eax, 1	       775	ui.c	FUNCTION_26	IF_3
0x4000ebc	            0xeb14	                           jmp 0x4000ed2	       775	ui.c	FUNCTION_26	IF_3
0x4000ebe	          0x8b45f8	                mov eax, dword [rbp - 8]	       776	ui.c	FUNCTION_26	IF_4
0x4000ec1	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       776	ui.c	FUNCTION_26	IF_4
0x4000ec4	            0x7d07	                           jge 0x4000ecd	       776	ui.c	FUNCTION_26	IF_4
0x4000ec6	      0xb8ffffffff	                     mov eax, 0xffffffff	       776	ui.c	FUNCTION_26	IF_4
0x4000ecb	            0xeb05	                           jmp 0x4000ed2	       776	ui.c	FUNCTION_26	IF_4
0x4000ecd	      0xb800000000	                              mov eax, 0	       777	ui.c	FUNCTION_26
0x4000ed2	              0x5d	                                 pop rbp	       778	ui.c	FUNCTION_26
0x4000ed3	              0xc3	                                     ret	       778	ui.c	FUNCTION_26
jump_to_mouse	ELSE,18:FOR,2:functions,0:CALL,33:DO,0:WHILE,0:SWITCH,0:IF,57	759
0x4003efb	              0x55	                                push rbp	      2641	ui.c	FUNCTION_75
0x4003efc	          0x4889e5	                            mov rbp, rsp	      2641	ui.c	FUNCTION_75
0x4003eff	              0x53	                                push rbx	      2641	ui.c	FUNCTION_75
0x4003f00	        0x4883ec68	                           sub rsp, 0x68	      2641	ui.c	FUNCTION_75
0x4003f04	          0x897d9c	             mov dword [rbp - 0x64], edi	      2641	ui.c	FUNCTION_75
0x4003f07	        0x48897590	             mov qword [rbp - 0x70], rsi	      2641	ui.c	FUNCTION_75
0x4003f0b	          0x895598	             mov dword [rbp - 0x68], edx	      2641	ui.c	FUNCTION_75
0x4003f0e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2641	ui.c	FUNCTION_75
0x4003f17	        0x488945e8	             mov qword [rbp - 0x18], rax	      2641	ui.c	FUNCTION_75
0x4003f1b	            0x31c0	                            xor eax, eax	      2641	ui.c	FUNCTION_75
0x4003f1d	    0x8b0500000000	            mov eax, dword [0x04003f23] 	      2656	ui.c	FUNCTION_75
0x4003f23	          0x8945ac	             mov dword [rbp - 0x54], eax	      2656	ui.c	FUNCTION_75
0x4003f26	    0x8b0500000000	            mov eax, dword [0x04003f2c] 	      2657	ui.c	FUNCTION_75
0x4003f2c	          0x8945b0	             mov dword [rbp - 0x50], eax	      2657	ui.c	FUNCTION_75
0x4003f2f	    0xc70500000000	               mov dword [0x04003f39], 0	      2662	ui.c	FUNCTION_75
0x4003f39	    0xc70500000000	               mov dword [0x04003f43], 0	      2663	ui.c	FUNCTION_75
0x4003f43	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2665	ui.c	FUNCTION_75	IF_1
0x4003f46	          0x83e020	                           and eax, 0x20	      2665	ui.c	FUNCTION_75	IF_1
0x4003f49	            0x85c0	                           test eax, eax	      2665	ui.c	FUNCTION_75	IF_1
0x4003f4b	            0x742f	                            je 0x4003f7c	      2665	ui.c	FUNCTION_75	IF_1
0x4003f4d	    0x488b05000000	            mov rax, qword [0x04003f54] 	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x4003f54	          0x4885c0	                           test rax, rax	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x4003f57	            0x740e	                            je 0x4003f67	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x4003f59	    0x8b0500000000	            mov eax, dword [0x04003f5f] 	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x4003f5f	            0x85c0	                           test eax, eax	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x4003f61	            0x7504	                           jne 0x4003f67	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x4003f63	        0x83659cfa	      and dword [rbp - 0x64], 0xfffffffa	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x4003f67	    0x48c705000000	               mov qword [0x04003f72], 0	      2671	ui.c	FUNCTION_75	IF_1
0x4003f72	    0xc70500000000	               mov dword [0x04003f7c], 0	      2672	ui.c	FUNCTION_75	IF_1
0x4003f7c	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2675	ui.c	FUNCTION_75	IF_3
0x4003f7f	          0x83e004	                              and eax, 4	      2675	ui.c	FUNCTION_75	IF_3
0x4003f82	            0x85c0	                           test eax, eax	      2675	ui.c	FUNCTION_75	IF_3
0x4003f84	     0xf8402010000	                            je 0x400408c	      2675	ui.c	FUNCTION_75	IF_3
0x4003f8a	    0x8b1500000000	            mov edx, dword [0x04003f90] 	      2676	ui.c	FUNCTION_75	IF_3
0x4003f90	    0x8b0500000000	            mov eax, dword [0x04003f96] 	      2676	ui.c	FUNCTION_75	IF_3
0x4003f96	            0x39c2	                            cmp edx, eax	      2676	ui.c	FUNCTION_75	IF_3
0x4003f98	     0xf85ee000000	                           jne 0x400408c	      2676	ui.c	FUNCTION_75	IF_3
0x4003f9e	    0x8b1500000000	            mov edx, dword [0x04003fa4] 	      2677	ui.c	FUNCTION_75	IF_3
0x4003fa4	    0x8b0500000000	            mov eax, dword [0x04003faa] 	      2677	ui.c	FUNCTION_75	IF_3
0x4003faa	            0x39c2	                            cmp edx, eax	      2677	ui.c	FUNCTION_75	IF_3
0x4003fac	     0xf85da000000	                           jne 0x400408c	      2677	ui.c	FUNCTION_75	IF_3
0x4003fb2	            0xeb01	                           jmp 0x4003fb5	      2677	ui.c	FUNCTION_75	IF_3
0x4003fb4	              0x90	                                     nop	      2718	ui.c	FUNCTION_75	IF_11
0x4003fb5	    0x8b0500000000	            mov eax, dword [0x04003fbb] 	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x4003fbb	            0x85c0	                           test eax, eax	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x4003fbd	            0x740a	                            je 0x4003fc9	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x4003fbf	      0xb802000000	                              mov eax, 2	      2683	ui.c	FUNCTION_75	IF_3	IF_4
0x4003fc4	      0xe99f0b0000	                           jmp 0x4004b68	      2683	ui.c	FUNCTION_75	IF_3	IF_4
0x4003fc9	    0x8b0500000000	            mov eax, dword [0x04003fcf] 	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x4003fcf	            0x85c0	                           test eax, eax	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x4003fd1	            0x740a	                            je 0x4003fdd	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x4003fd3	      0xb804000000	                              mov eax, 4	      2685	ui.c	FUNCTION_75	IF_3	IF_5
0x4003fd8	      0xe98b0b0000	                           jmp 0x4004b68	      2685	ui.c	FUNCTION_75	IF_3	IF_5
0x4003fdd	    0x8b0500000000	            mov eax, dword [0x04003fe3] 	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x4003fe3	            0x85c0	                           test eax, eax	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x4003fe5	            0x745a	                            je 0x4004041	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x4003fe7	    0x8b0500000000	            mov eax, dword [0x04003fed] 	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003fed	          0x83e060	                           and eax, 0x60	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003ff0	            0x85c0	                           test eax, eax	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003ff2	            0x7443	                            je 0x4004037	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003ff4	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003ff7	          0x83e020	                           and eax, 0x20	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003ffa	            0x85c0	                           test eax, eax	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003ffc	            0x7539	                           jne 0x4004037	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4003ffe	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x4004002	        0x488d45ac	                   lea rax, [rbp - 0x54]	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x4004006	          0x4889d6	                            mov rsi, rdx	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x4004009	          0x4889c7	                            mov rdi, rax	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x400400c	      0xe800000000	                          call 0x4004011	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x4004011	        0x488945c8	             mov qword [rbp - 0x38], rax	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x4004015	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2694	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x400401a	            0x750a	                           jne 0x4004026	      2694	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x400401c	      0xb800000000	                              mov eax, 0	      2695	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x4004021	      0xe9420b0000	                           jmp 0x4004b68	      2695	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x4004026	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x4004029	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x400402d	            0x89d6	                            mov esi, edx	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x400402f	          0x4889c7	                            mov rdi, rax	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x4004032	      0xe800000000	                          call 0x4004037	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x4004037	      0xb808080000	                          mov eax, 0x808	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x400403c	      0xe9270b0000	                           jmp 0x4004b68	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x4004041	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x4004044	          0x83e010	                           and eax, 0x10	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x4004047	            0x85c0	                           test eax, eax	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x4004049	            0x740f	                            je 0x400405a	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x400404b	      0xe800000000	                          call 0x4004050	      2703	ui.c	FUNCTION_75	IF_3	IF_9	CALL_3
0x4004050	      0xbf14000000	                           mov edi, 0x14	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x4004055	      0xe800000000	                          call 0x400405a	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x400405a	    0x8b0500000000	            mov eax, dword [0x04004060] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4004060	            0x85c0	                           test eax, eax	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4004062	            0x741e	                            je 0x4004082	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4004064	    0x488b05000000	            mov rax, qword [0x0400406b] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x400406b	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4004071	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4004074	            0x39c2	                            cmp edx, eax	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4004076	            0x7e0a	                           jle 0x4004082	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4004078	      0xb808000000	                              mov eax, 8	      2709	ui.c	FUNCTION_75	IF_3	IF_10
0x400407d	      0xe9e60a0000	                           jmp 0x4004b68	      2709	ui.c	FUNCTION_75	IF_3	IF_10
0x4004082	      0xb801000000	                              mov eax, 1	      2711	ui.c	FUNCTION_75	IF_3
0x4004087	      0xe9dc0a0000	                           jmp 0x4004b68	      2711	ui.c	FUNCTION_75	IF_3
0x400408c	    0x8b0500000000	            mov eax, dword [0x04004092] 	      2714	ui.c	FUNCTION_75
0x4004092	    0x890500000000	            mov dword [0x04004098], eax 	      2714	ui.c	FUNCTION_75
0x4004098	    0x8b0500000000	            mov eax, dword [0x0400409e] 	      2715	ui.c	FUNCTION_75
0x400409e	    0x890500000000	            mov dword [0x040040a4], eax 	      2715	ui.c	FUNCTION_75
0x40040a4	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2717	ui.c	FUNCTION_75	IF_11
0x40040a7	          0x83e008	                              and eax, 8	      2717	ui.c	FUNCTION_75	IF_11
0x40040aa	            0x85c0	                           test eax, eax	      2717	ui.c	FUNCTION_75	IF_11
0x40040ac	     0xf8502ffffff	                           jne 0x4003fb4	      2717	ui.c	FUNCTION_75	IF_11
0x40040b2	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2723	ui.c	FUNCTION_75	IF_12
0x40040b5	            0x85c0	                           test eax, eax	      2723	ui.c	FUNCTION_75	IF_12
0x40040b7	            0x7869	                            js 0x4004122	      2723	ui.c	FUNCTION_75	IF_12
0x40040b9	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2723	ui.c	FUNCTION_75	IF_12
0x40040bc	          0x4863d0	                         movsxd rdx, eax	      2723	ui.c	FUNCTION_75	IF_12
0x40040bf	    0x488b05000000	            mov rax, qword [0x040040c6] 	      2723	ui.c	FUNCTION_75	IF_12
0x40040c6	          0x4839c2	                            cmp rdx, rax	      2723	ui.c	FUNCTION_75	IF_12
0x40040c9	            0x7d57	                           jge 0x4004122	      2723	ui.c	FUNCTION_75	IF_12
0x40040cb	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2723	ui.c	FUNCTION_75	IF_12
0x40040ce	            0x85c0	                           test eax, eax	      2723	ui.c	FUNCTION_75	IF_12
0x40040d0	            0x7850	                            js 0x4004122	      2723	ui.c	FUNCTION_75	IF_12
0x40040d2	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2723	ui.c	FUNCTION_75	IF_12
0x40040d5	          0x4863d0	                         movsxd rdx, eax	      2723	ui.c	FUNCTION_75	IF_12
0x40040d8	    0x488b05000000	            mov rax, qword [0x040040df] 	      2723	ui.c	FUNCTION_75	IF_12
0x40040df	          0x4839c2	                            cmp rdx, rax	      2723	ui.c	FUNCTION_75	IF_12
0x40040e2	            0x7f3e	                            jg 0x4004122	      2723	ui.c	FUNCTION_75	IF_12
0x40040e4	    0x488b05000000	            mov rax, qword [0x040040eb] 	      2724	ui.c	FUNCTION_75	IF_12
0x40040eb	          0x4885c0	                           test rax, rax	      2724	ui.c	FUNCTION_75	IF_12
0x40040ee	            0x7432	                            je 0x4004122	      2724	ui.c	FUNCTION_75	IF_12
0x40040f0	    0x488b05000000	            mov rax, qword [0x040040f7] 	      2725	ui.c	FUNCTION_75	IF_12
0x40040f7	    0x488b15000000	            mov rdx, qword [0x040040fe] 	      2725	ui.c	FUNCTION_75	IF_12
0x40040fe	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      2725	ui.c	FUNCTION_75	IF_12
0x4004101	          0x4863c9	                         movsxd rcx, ecx	      2725	ui.c	FUNCTION_75	IF_12
0x4004104	        0x48c1e102	                              shl rcx, 2	      2725	ui.c	FUNCTION_75	IF_12
0x4004108	          0x4801ca	                            add rdx, rcx	      2725	ui.c	FUNCTION_75	IF_12
0x400410b	            0x8b12	                    mov edx, dword [rdx]	      2725	ui.c	FUNCTION_75	IF_12
0x400410d	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      2725	ui.c	FUNCTION_75	IF_12
0x4004110	             0x1ca	                            add edx, ecx	      2725	ui.c	FUNCTION_75	IF_12
0x4004112	            0x89d2	                            mov edx, edx	      2725	ui.c	FUNCTION_75	IF_12
0x4004114	          0x4801d0	                            add rax, rdx	      2725	ui.c	FUNCTION_75	IF_12
0x4004117	           0xfb600	                   movzx eax, byte [rax]	      2725	ui.c	FUNCTION_75	IF_12
0x400411a	           0xfb6c0	                           movzx eax, al	      2725	ui.c	FUNCTION_75	IF_12
0x400411d	          0x8945bc	             mov dword [rbp - 0x44], eax	      2725	ui.c	FUNCTION_75	IF_12
0x4004120	            0xeb07	                           jmp 0x4004129	      2725	ui.c	FUNCTION_75	IF_12
0x4004122	    0xc745bc200000	           mov dword [rbp - 0x44], 0x20 	      2727	ui.c	FUNCTION_75	ELSE_1
0x4004129	    0x488b05000000	            mov rax, qword [0x04004130] 	      2730	ui.c	FUNCTION_75	ELSE_1
0x4004130	        0x488945c0	             mov qword [rbp - 0x40], rax	      2730	ui.c	FUNCTION_75	ELSE_1
0x4004134	    0x488b05000000	            mov rax, qword [0x0400413b] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x400413b	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x400413f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4004143	        0x488945d0	             mov qword [rbp - 0x30], rax	      2731	ui.c	FUNCTION_75	ELSE_1
0x4004147	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2731	ui.c	FUNCTION_75	ELSE_1
0x400414b	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x400414e	          0x83e001	                              and eax, 1	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4004151	            0x85c0	                           test eax, eax	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4004153	     0xf8533030000	                           jne 0x400448c	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4004159	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x400415c	            0x85c0	                           test eax, eax	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x400415e	            0x7807	                            js 0x4004167	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4004160	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4004163	            0x85c0	                           test eax, eax	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4004165	            0x790a	                           jns 0x4004171	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4004167	      0xb800000000	                              mov eax, 0	      2736	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x400416c	      0xe9f7090000	                           jmp 0x4004b68	      2736	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4004171	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4004175	        0x488d45ac	                   lea rax, [rbp - 0x54]	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4004179	          0x4889d6	                            mov rsi, rdx	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x400417c	          0x4889c7	                            mov rdi, rax	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x400417f	      0xe800000000	                          call 0x4004184	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4004184	        0x488945c8	             mov qword [rbp - 0x38], rax	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4004188	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2740	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x400418d	            0x750a	                           jne 0x4004199	      2740	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x400418f	      0xb800000000	                              mov eax, 0	      2741	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x4004194	      0xe9cf090000	                           jmp 0x4004b68	      2741	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x4004199	    0x48c705000000	               mov qword [0x040041a4], 0	      2742	ui.c	FUNCTION_75	ELSE_1	IF_13
0x40041a4	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x40041a7	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x40041aa	            0x7525	                           jne 0x40041d1	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x40041ac	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x40041af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x40041b3	            0x89d6	                            mov esi, edx	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x40041b5	          0x4889c7	                            mov rdi, rax	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x40041b8	      0xe800000000	                          call 0x40041bd	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x40041bd	    0xc70500000000	               mov dword [0x040041c7], 1	      2750	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x40041c7	      0xb808080000	                          mov eax, 0x808	      2751	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x40041cc	      0xe997090000	                           jmp 0x4004b68	      2751	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x40041d1	    0xc70500000000	               mov dword [0x040041db], 0	      2753	ui.c	FUNCTION_75	ELSE_1	IF_13
0x40041db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40041df	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40041e5	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40041e8	            0x39c2	                            cmp edx, eax	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40041ea	            0x7f27	                            jg 0x4004213	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40041ec	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40041ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40041f3	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40041f9	            0x29c2	                            sub edx, eax	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40041fb	            0x89d0	                            mov eax, edx	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40041fd	          0x83c001	                              add eax, 1	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4004200	    0x890500000000	            mov dword [0x04004206], eax 	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4004206	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x400420a	    0x488905000000	            mov qword [0x04004211], rax 	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4004211	            0xeb0a	                           jmp 0x400421d	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4004213	    0xc70500000000	               mov dword [0x0400421d], 0	      2765	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2
0x400421d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4004221	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4004227	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x400422a	            0x39c2	                            cmp edx, eax	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x400422c	            0x7f27	                            jg 0x4004255	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x400422e	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4004231	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4004235	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x400423b	            0x29c2	                            sub edx, eax	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x400423d	            0x89d0	                            mov eax, edx	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x400423f	          0x83c001	                              add eax, 1	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4004242	    0x890500000000	            mov dword [0x04004248], eax 	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4004248	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x400424c	    0x488905000000	            mov qword [0x04004253], rax 	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4004253	            0xeb0a	                           jmp 0x400425f	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4004255	    0xc70500000000	               mov dword [0x0400425f], 0	      2772	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3
0x400425f	    0x8b0500000000	            mov eax, dword [0x04004265] 	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4004265	            0x85c0	                           test eax, eax	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4004267	            0x7430	                            je 0x4004299	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4004269	    0x8b0500000000	            mov eax, dword [0x0400426f] 	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x400426f	            0x85c0	                           test eax, eax	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4004271	            0x7426	                            je 0x4004299	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4004273	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4004277	          0x4889c7	                            mov rdi, rax	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x400427a	      0xe800000000	                          call 0x400427f	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x400427f	            0x85c0	                           test eax, eax	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4004281	            0x740c	                            je 0x400428f	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4004283	    0xc70500000000	               mov dword [0x0400428d], 0	      2779	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20
0x400428d	            0xeb0a	                           jmp 0x4004299	      2779	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20
0x400428f	    0xc70500000000	               mov dword [0x04004299], 0	      2781	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	ELSE_4
0x4004299	    0x8b0500000000	            mov eax, dword [0x0400429f] 	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400429f	            0x85c0	                           test eax, eax	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042a1	     0xf84c8000000	                            je 0x400436f	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042ab	        0x488b5008	                mov rdx, qword [rax + 8]	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042af	    0x488b05000000	            mov rax, qword [0x040042b6] 	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042b6	        0x488b4008	                mov rax, qword [rax + 8]	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042ba	          0x4839c2	                            cmp rdx, rax	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042bd	     0xf859d000000	                           jne 0x4004360	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042c3	    0x8b0500000000	            mov eax, dword [0x040042c9] 	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042c9	            0x85c0	                           test eax, eax	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042cb	     0xf859e000000	                           jne 0x400436f	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042d1	    0x8b0500000000	            mov eax, dword [0x040042d7] 	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042d7	            0x85c0	                           test eax, eax	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042d9	     0xf8590000000	                           jne 0x400436f	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042e3	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042e9	            0x85c0	                           test eax, eax	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042eb	            0x742b	                            je 0x4004318	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042ed	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042f0	          0x4863d0	                         movsxd rdx, eax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042f3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042f7	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40042fd	          0x4863c8	                         movsxd rcx, eax	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004300	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004304	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400430b	          0x4829c1	                            sub rcx, rax	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400430e	          0x4889c8	                            mov rax, rcx	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004311	          0x4839c2	                            cmp rdx, rax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004314	            0x7c40	                            jl 0x4004356	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004316	            0xeb57	                           jmp 0x400436f	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004318	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400431b	          0x4863d0	                         movsxd rdx, eax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400431e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2794	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004322	    0x488b88c80100	           mov rcx, qword [rax + 0x1c8] 	      2794	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004329	    0x8b0500000000	            mov eax, dword [0x0400432f] 	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400432f	            0x85c0	                           test eax, eax	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004331	            0x750d	                           jne 0x4004340	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004333	    0x488b05000000	            mov rax, qword [0x0400433a] 	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400433a	        0x483945c8	            cmp qword [rbp - 0x38], rax 	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400433e	            0x7407	                            je 0x4004347	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004340	      0xb801000000	                              mov eax, 1	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004345	            0xeb05	                           jmp 0x400434c	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004347	      0xb800000000	                              mov eax, 0	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400434c	            0x4898	                                    cdqe	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400434e	          0x4801c8	                            add rax, rcx	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004351	          0x4839c2	                            cmp rdx, rax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004354	            0x7c19	                            jl 0x400436f	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004356	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004359	          0x83e010	                           and eax, 0x10	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400435c	            0x85c0	                           test eax, eax	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400435e	            0x740f	                            je 0x400436f	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4004360	      0xe800000000	                          call 0x4004365	      2802	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_8
0x4004365	      0xbf14000000	                           mov edi, 0x14	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x400436a	      0xe800000000	                          call 0x400436f	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x400436f	    0x8b0500000000	            mov eax, dword [0x04004375] 	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4004375	            0x85c0	                           test eax, eax	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4004377	            0x7435	                            je 0x40043ae	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4004379	    0x488b05000000	            mov rax, qword [0x04004380] 	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4004380	        0x483945c8	            cmp qword [rbp - 0x38], rax 	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4004384	            0x7428	                            je 0x40043ae	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4004386	    0xc70500000000	               mov dword [0x04004390], 0	      2810	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4004390	    0x8b0500000000	            mov eax, dword [0x04004396] 	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x4004396	            0x85c0	                           test eax, eax	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x4004398	            0x740a	                            je 0x40043a4	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x400439a	      0xb802000000	                              mov eax, 2	      2813	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x400439f	      0xe9c4070000	                           jmp 0x4004b68	      2813	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x40043a4	      0xb808000000	                              mov eax, 8	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x40043a9	      0xe9ba070000	                           jmp 0x4004b68	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x40043ae	    0x488b05000000	            mov rax, qword [0x040043b5] 	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x40043b5	          0x4885c0	                           test rax, rax	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x40043b8	            0x740a	                            je 0x40043c4	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x40043ba	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x40043bd	          0x83e020	                           and eax, 0x20	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x40043c0	            0x85c0	                           test eax, eax	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x40043c2	            0x7411	                            je 0x40043d5	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x40043c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x40043c8	      0xbe01000000	                              mov esi, 1	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x40043cd	          0x4889c7	                            mov rdi, rax	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x40043d0	      0xe800000000	                          call 0x40043d5	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x40043d5	    0x488b05000000	            mov rax, qword [0x040043dc] 	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x40043dc	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x40043e0	            0x7414	                            je 0x40043f6	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x40043e2	    0x488b05000000	            mov rax, qword [0x040043e9] 	      2832	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_11
0x40043e9	          0x4889c7	                            mov rdi, rax	      2832	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_11
0x40043ec	      0xe800000000	                          call 0x40043f1	      2832	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_11
0x40043f1	      0xe800000000	                          call 0x40043f6	      2836	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_12
0x40043f6	    0x8b0500000000	            mov eax, dword [0x040043fc] 	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x40043fc	            0x85c0	                           test eax, eax	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x40043fe	            0x7421	                            je 0x4004421	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4004400	    0x488b05000000	            mov rax, qword [0x04004407] 	      2842	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x4004407	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      2842	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x400440b	            0x750a	                           jne 0x4004417	      2842	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x400440d	      0xb802000000	                              mov eax, 2	      2843	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x4004412	      0xe951070000	                           jmp 0x4004b68	      2843	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x4004417	      0xb802010000	                          mov eax, 0x102	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x400441c	      0xe947070000	                           jmp 0x4004b68	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x4004421	    0x8b0500000000	            mov eax, dword [0x04004427] 	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4004427	            0x85c0	                           test eax, eax	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4004429	            0x7421	                            je 0x400444c	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x400442b	    0x488b05000000	            mov rax, qword [0x04004432] 	      2850	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x4004432	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      2850	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x4004436	            0x750a	                           jne 0x4004442	      2850	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x4004438	      0xb804000000	                              mov eax, 4	      2851	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x400443d	      0xe926070000	                           jmp 0x4004b68	      2851	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x4004442	      0xb804010000	                          mov eax, 0x104	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x4004447	      0xe91c070000	                           jmp 0x4004b68	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x400444c	    0x488b05000000	            mov rax, qword [0x04004453] 	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4004453	    0x488b15000000	            mov rdx, qword [0x0400445a] 	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x400445a	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x400445e	        0x48895038	             mov qword [rax + 0x38], rdx	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4004462	    0x488b05000000	            mov rax, qword [0x04004469] 	      2859	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4004469	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2859	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x400446d	    0x488905000000	            mov qword [0x04004474], rax 	      2859	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4004474	    0x488b05000000	            mov rax, qword [0x0400447b] 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x400447b	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4004481	    0x890500000000	            mov dword [0x04004487], eax 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4004487	      0xe90b050000	                           jmp 0x4004997	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x400448c	    0x8b0500000000	            mov eax, dword [0x04004492] 	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4004492	            0x85c0	                           test eax, eax	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4004494	            0x7472	                            je 0x4004508	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4004496	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x400449a	            0x756c	                           jne 0x4004508	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x400449c	    0x488b05000000	            mov rax, qword [0x040044a3] 	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044a3	          0x4885c0	                           test rax, rax	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044a6	            0x7456	                            je 0x40044fe	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044a8	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044ab	    0x488b05000000	            mov rax, qword [0x040044b2] 	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044b2	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044b8	            0x29c2	                            sub edx, eax	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044ba	    0x488b05000000	            mov rax, qword [0x040044c1] 	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044c1	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044c7	            0x29c2	                            sub edx, eax	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044c9	            0x89d0	                            mov eax, edx	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044cb	          0x8d5001	                      lea edx, [rax + 1]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044ce	    0x8b0500000000	            mov eax, dword [0x040044d4] 	      2871	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044d4	            0x29c2	                            sub edx, eax	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044d6	            0x89d0	                            mov eax, edx	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044d8	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044db	    0x488b05000000	            mov rax, qword [0x040044e2] 	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x40044e2	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x40044e5	            0x89d6	                            mov esi, edx	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x40044e7	          0x4889c7	                            mov rdi, rax	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x40044ea	      0xe800000000	                          call 0x40044ef	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x40044ef	    0x8b0500000000	            mov eax, dword [0x040044f5] 	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044f5	           0xb45b4	              or eax, dword [rbp - 0x4c]	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044f8	    0x890500000000	            mov dword [0x040044fe], eax 	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40044fe	      0xb802000000	                              mov eax, 2	      2875	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4004503	      0xe960060000	                           jmp 0x4004b68	      2875	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4004508	    0x8b0500000000	            mov eax, dword [0x0400450e] 	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x400450e	            0x85c0	                           test eax, eax	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4004510	            0x7472	                            je 0x4004584	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4004512	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4004516	            0x756c	                           jne 0x4004584	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4004518	    0x488b05000000	            mov rax, qword [0x0400451f] 	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400451f	          0x4885c0	                           test rax, rax	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004522	            0x7456	                            je 0x400457a	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004524	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004527	    0x488b05000000	            mov rax, qword [0x0400452e] 	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400452e	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004534	            0x29c2	                            sub edx, eax	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004536	    0x488b05000000	            mov rax, qword [0x0400453d] 	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400453d	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004543	            0x29c2	                            sub edx, eax	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004545	            0x89d0	                            mov eax, edx	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004547	          0x8d5001	                      lea edx, [rax + 1]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400454a	    0x8b0500000000	            mov eax, dword [0x04004550] 	      2883	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004550	            0x29c2	                            sub edx, eax	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004552	            0x89d0	                            mov eax, edx	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004554	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004557	    0x488b05000000	            mov rax, qword [0x0400455e] 	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x400455e	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x4004561	            0x89d6	                            mov esi, edx	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x4004563	          0x4889c7	                            mov rdi, rax	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x4004566	      0xe800000000	                          call 0x400456b	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x400456b	    0x8b0500000000	            mov eax, dword [0x04004571] 	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004571	           0xb45b4	              or eax, dword [rbp - 0x4c]	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4004574	    0x890500000000	            mov dword [0x0400457a], eax 	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400457a	      0xb804000000	                              mov eax, 4	      2887	ui.c	FUNCTION_75	ELSE_8	IF_32
0x400457f	      0xe9e4050000	                           jmp 0x4004b68	      2887	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4004584	    0x8b0500000000	            mov eax, dword [0x0400458a] 	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x400458a	            0x85c0	                           test eax, eax	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x400458c	            0x740a	                            je 0x4004598	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x400458e	      0xb808080000	                          mov eax, 0x808	      2893	ui.c	FUNCTION_75	ELSE_9	IF_34
0x4004593	      0xe9d0050000	                           jmp 0x4004b68	      2893	ui.c	FUNCTION_75	ELSE_9	IF_34
0x4004598	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x400459b	          0x83e010	                           and eax, 0x10	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x400459e	            0x85c0	                           test eax, eax	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x40045a0	            0x740f	                            je 0x40045b1	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x40045a2	      0xe800000000	                          call 0x40045a7	      2901	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_15
0x40045a7	      0xbf14000000	                           mov edi, 0x14	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x40045ac	      0xe800000000	                          call 0x40045b1	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x40045b1	    0x8b0500000000	            mov eax, dword [0x040045b7] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40045b7	            0x85c0	                           test eax, eax	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40045b9	            0x741e	                            je 0x40045d9	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40045bb	    0x488b05000000	            mov rax, qword [0x040045c2] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40045c2	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40045c8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40045cb	            0x39c2	                            cmp edx, eax	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40045cd	            0x7e0a	                           jle 0x40045d9	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40045cf	      0xb808000000	                              mov eax, 8	      2908	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40045d4	      0xe98f050000	                           jmp 0x4004b68	      2908	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40045d9	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x40045dc	    0x488b05000000	            mov rax, qword [0x040045e3] 	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x40045e3	    0x8b889c000000	            mov ecx, dword [rax + 0x9c] 	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x40045e9	    0x488b05000000	            mov rax, qword [0x040045f0] 	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x40045f0	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x40045f6	             0x1c8	                            add eax, ecx	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x40045f8	            0x29c2	                            sub edx, eax	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x40045fa	            0x89d0	                            mov eax, edx	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x40045fc	          0x8945ac	             mov dword [rbp - 0x54], eax	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x40045ff	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2912	ui.c	FUNCTION_75	ELSE_10
0x4004602	    0x488b05000000	            mov rax, qword [0x04004609] 	      2912	ui.c	FUNCTION_75	ELSE_10
0x4004609	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      2912	ui.c	FUNCTION_75	ELSE_10
0x400460f	            0x29c2	                            sub edx, eax	      2912	ui.c	FUNCTION_75	ELSE_10
0x4004611	            0x89d0	                            mov eax, edx	      2912	ui.c	FUNCTION_75	ELSE_10
0x4004613	          0x8945b0	             mov dword [rbp - 0x50], eax	      2912	ui.c	FUNCTION_75	ELSE_10
0x4004616	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004619	            0x85c0	                           test eax, eax	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x400461b	     0xf896b010000	                           jns 0x400478c	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004621	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      2920	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004628	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x400462f	      0xe9f9000000	                           jmp 0x400472d	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x4004634	    0x488b05000000	            mov rax, qword [0x0400463b] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x400463b	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4004641	    0x488b05000000	            mov rax, qword [0x04004648] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4004648	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x400464c	    0x488b05000000	            mov rax, qword [0x04004653] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4004653	          0x4889d6	                            mov rsi, rdx	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4004656	          0x4889c7	                            mov rdi, rax	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4004659	      0xe800000000	                          call 0x400465e	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x400465e	            0x39c3	                            cmp ebx, eax	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4004660	            0x7d06	                           jge 0x4004668	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4004662	        0x8345b401	               add dword [rbp - 0x4c], 1	      2925	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38
0x4004666	            0xeb1a	                           jmp 0x4004682	      2925	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38
0x4004668	    0x488b05000000	            mov rax, qword [0x0400466f] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x400466f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4004673	        0x4883e801	                              sub rax, 1	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4004677	          0x4889c7	                            mov rdi, rax	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x400467a	      0xe800000000	                          call 0x400467f	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x400467f	           0x145b4	             add dword [rbp - 0x4c], eax	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4004682	        0x837db800	               cmp dword [rbp - 0x48], 0	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4004686	            0x750e	                           jne 0x4004696	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4004688	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x400468b	            0xf7d8	                                 neg eax	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x400468d	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4004690	     0xf8cae000000	                            jl 0x4004744	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4004696	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      2931	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x400469d	    0x488b05000000	            mov rax, qword [0x040046a4] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40046a4	        0x488d4878	                   lea rcx, [rax + 0x78]	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40046a8	    0x488b05000000	            mov rax, qword [0x040046af] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40046af	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40046b3	      0xba00000000	                              mov edx, 0	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40046b8	          0x4889ce	                            mov rsi, rcx	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40046bb	          0x4889c7	                            mov rdi, rax	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40046be	      0xe800000000	                          call 0x40046c3	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x40046c3	    0x488b05000000	            mov rax, qword [0x040046ca] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40046ca	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40046d0	    0x488b05000000	            mov rax, qword [0x040046d7] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40046d7	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40046db	    0x488b05000000	            mov rax, qword [0x040046e2] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40046e2	          0x4889d6	                            mov rsi, rdx	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40046e5	          0x4889c7	                            mov rdi, rax	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40046e8	      0xe800000000	                          call 0x40046ed	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40046ed	            0x39c3	                            cmp ebx, eax	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40046ef	            0x7d18	                           jge 0x4004709	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40046f1	    0x488b05000000	            mov rax, qword [0x040046f8] 	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x40046f8	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x40046fe	          0x83c201	                              add edx, 1	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x4004701	    0x899084000000	             mov dword [rax + 0x84], edx	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x4004707	            0xeb24	                           jmp 0x400472d	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x4004709	    0x488b05000000	            mov rax, qword [0x04004710] 	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4004710	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4004714	        0x4883ea01	                              sub rdx, 1	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4004718	        0x48895078	             mov qword [rax + 0x78], rdx	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x400471c	    0x488b05000000	            mov rax, qword [0x04004723] 	      2943	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4004723	    0xc78084000000	               mov dword [rax + 0x84], 0	      2943	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x400472d	    0x488b05000000	            mov rax, qword [0x04004734] 	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x4004734	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x4004738	        0x4883f801	                              cmp rax, 1	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x400473c	     0xf8ff2feffff	                            jg 0x4004634	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x4004742	            0xeb01	                           jmp 0x4004745	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x4004744	              0x90	                                     nop	      2930	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4004745	    0x488b05000000	            mov rax, qword [0x0400474c] 	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x400474c	      0xbe00000000	                              mov esi, 0	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4004751	          0x4889c7	                            mov rdi, rax	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4004754	      0xe800000000	                          call 0x4004759	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4004759	    0x488b05000000	            mov rax, qword [0x04004760] 	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004760	    0x488b15000000	            mov rdx, qword [0x04004767] 	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004767	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x400476d	          0x83e28e	                     and edx, 0xffffff8e	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004770	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004776	      0xbf0a000000	                            mov edi, 0xa	      2952	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_23
0x400477b	      0xe800000000	                          call 0x4004780	      2952	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_23
0x4004780	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4004787	      0xe90b020000	                           jmp 0x4004997	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x400478c	    0x488b05000000	            mov rax, qword [0x04004793] 	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004793	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004799	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400479c	            0x39c2	                            cmp edx, eax	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400479e	     0xf8f8c010000	                            jg 0x4004930	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x40047a4	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      2957	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x40047ab	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x40047b2	      0xe905010000	                           jmp 0x40048bc	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x40047b7	    0x488b05000000	            mov rax, qword [0x040047be] 	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x40047be	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x40047c4	            0x85c0	                           test eax, eax	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x40047c6	            0x7e06	                           jle 0x40047ce	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x40047c8	        0x8345b401	               add dword [rbp - 0x4c], 1	      2962	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x40047cc	            0xeb16	                           jmp 0x40047e4	      2962	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x40047ce	    0x488b05000000	            mov rax, qword [0x040047d5] 	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x40047d5	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x40047d9	          0x4889c7	                            mov rdi, rax	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x40047dc	      0xe800000000	                          call 0x40047e1	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x40047e1	           0x145b4	             add dword [rbp - 0x4c], eax	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x40047e4	        0x837db800	               cmp dword [rbp - 0x48], 0	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x40047e8	            0x7520	                           jne 0x400480a	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x40047ea	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x40047ed	    0x488b05000000	            mov rax, qword [0x040047f4] 	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x40047f4	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x40047fa	            0x29c2	                            sub edx, eax	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x40047fc	            0x89d0	                            mov eax, edx	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x40047fe	          0x83c001	                              add eax, 1	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4004801	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4004804	     0xf8cd2000000	                            jl 0x40048dc	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x400480a	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      2968	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4004811	    0x488b05000000	            mov rax, qword [0x04004818] 	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4004818	        0x488d5078	                   lea rdx, [rax + 0x78]	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x400481c	    0x488b05000000	            mov rax, qword [0x04004823] 	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4004823	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4004827	      0xbe00000000	                              mov esi, 0	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x400482c	          0x4889c7	                            mov rdi, rax	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x400482f	      0xe800000000	                          call 0x4004834	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4004834	            0x85c0	                           test eax, eax	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4004836	            0x741e	                            je 0x4004856	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4004838	    0x488b05000000	            mov rax, qword [0x0400483f] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x400483f	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4004843	    0x488b05000000	            mov rax, qword [0x0400484a] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x400484a	          0x488b00	                    mov rax, qword [rax]	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x400484d	          0x4839c2	                            cmp rdx, rax	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4004850	     0xf8489000000	                            je 0x40048df	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4004856	    0x488b05000000	            mov rax, qword [0x0400485d] 	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x400485d	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4004863	            0x85c0	                           test eax, eax	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4004865	            0x7e18	                           jle 0x400487f	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4004867	    0x488b05000000	            mov rax, qword [0x0400486e] 	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x400486e	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4004874	          0x83ea01	                              sub edx, 1	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4004877	    0x899084000000	             mov dword [rax + 0x84], edx	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x400487d	            0xeb3d	                           jmp 0x40048bc	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x400487f	    0x488b05000000	            mov rax, qword [0x04004886] 	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4004886	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x400488a	        0x4883c201	                              add rdx, 1	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x400488e	        0x48895078	             mov qword [rax + 0x78], rdx	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4004892	    0x488b1d000000	            mov rbx, qword [0x04004899] 	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4004899	    0x488b05000000	            mov rax, qword [0x040048a0] 	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x40048a0	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x40048a4	    0x488b05000000	            mov rax, qword [0x040048ab] 	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x40048ab	          0x4889d6	                            mov rsi, rdx	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x40048ae	          0x4889c7	                            mov rdi, rax	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x40048b1	      0xe800000000	                          call 0x40048b6	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x40048b6	    0x898384000000	             mov dword [rbx + 0x84], eax	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40048bc	    0x488b05000000	            mov rax, qword [0x040048c3] 	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x40048c3	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x40048c7	    0x488b05000000	            mov rax, qword [0x040048ce] 	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x40048ce	          0x488b00	                    mov rax, qword [rax]	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x40048d1	          0x4839c2	                            cmp rdx, rax	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x40048d4	     0xf8cddfeffff	                            jl 0x40047b7	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x40048da	            0xeb04	                           jmp 0x40048e0	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x40048dc	              0x90	                                     nop	      2967	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x40048dd	            0xeb01	                           jmp 0x40048e0	      2967	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x40048df	              0x90	                                     nop	      2972	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x40048e0	    0x488b05000000	            mov rax, qword [0x040048e7] 	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x40048e7	      0xbe00000000	                              mov esi, 0	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x40048ec	          0x4889c7	                            mov rdi, rax	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x40048ef	      0xe800000000	                          call 0x40048f4	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x40048f4	      0xbf0a000000	                            mov edi, 0xa	      2990	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_28
0x40048f9	      0xe800000000	                          call 0x40048fe	      2990	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_28
0x40048fe	    0x488b05000000	            mov rax, qword [0x04004905] 	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004905	    0x488b15000000	            mov rdx, qword [0x0400490c] 	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400490c	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004912	          0x83e28e	                     and edx, 0xffffff8e	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004915	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400491b	    0x488b05000000	            mov rax, qword [0x04004922] 	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004922	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004928	          0x83e801	                              sub eax, 1	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400492b	          0x8945ac	             mov dword [rbp - 0x54], eax	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400492e	            0xeb67	                           jmp 0x4004997	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4004930	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x4004933	            0x85c0	                           test eax, eax	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x4004935	            0x7560	                           jne 0x4004997	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x4004937	    0x8b0500000000	            mov eax, dword [0x0400493d] 	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400493d	            0x85c0	                           test eax, eax	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400493f	            0x7e56	                           jle 0x4004997	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004941	    0x488b05000000	            mov rax, qword [0x04004948] 	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004948	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400494c	    0x488b05000000	            mov rax, qword [0x04004953] 	      3002	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004953	        0x488b4008	                mov rax, qword [rax + 8]	      3002	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004957	          0x488b00	                    mov rax, qword [rax]	      3002	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400495a	          0x4839c2	                            cmp rdx, rax	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400495d	            0x7538	                           jne 0x4004997	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400495f	    0x488b05000000	            mov rax, qword [0x04004966] 	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004966	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400496a	    0x488b05000000	            mov rax, qword [0x04004971] 	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004971	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004975	          0x4839c2	                            cmp rdx, rax	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004978	            0x751d	                           jne 0x4004997	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400497a	    0x488b05000000	            mov rax, qword [0x04004981] 	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004981	    0x488b15000000	            mov rdx, qword [0x04004988] 	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004988	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400498e	          0x80e27f	                            and dl, 0x7f	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004991	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4004997	    0x488b05000000	            mov rax, qword [0x0400499e] 	      3012	ui.c	FUNCTION_75	IF_48
0x400499e	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      3012	ui.c	FUNCTION_75	IF_48
0x40049a4	            0x85c0	                           test eax, eax	      3012	ui.c	FUNCTION_75	IF_48
0x40049a6	            0x7432	                            je 0x40049da	      3012	ui.c	FUNCTION_75	IF_48
0x40049a8	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3012	ui.c	FUNCTION_75	IF_48
0x40049ab	          0x4863d0	                         movsxd rdx, eax	      3012	ui.c	FUNCTION_75	IF_48
0x40049ae	    0x488b05000000	            mov rax, qword [0x040049b5] 	      3012	ui.c	FUNCTION_75	IF_48
0x40049b5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      3012	ui.c	FUNCTION_75	IF_48
0x40049bb	          0x4863c8	                         movsxd rcx, eax	      3012	ui.c	FUNCTION_75	IF_48
0x40049be	    0x488b05000000	            mov rax, qword [0x040049c5] 	      3012	ui.c	FUNCTION_75	IF_48
0x40049c5	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      3012	ui.c	FUNCTION_75	IF_48
0x40049cc	          0x4829c1	                            sub rcx, rax	      3012	ui.c	FUNCTION_75	IF_48
0x40049cf	          0x4889c8	                            mov rax, rcx	      3012	ui.c	FUNCTION_75	IF_48
0x40049d2	          0x4839c2	                            cmp rdx, rax	      3012	ui.c	FUNCTION_75	IF_48
0x40049d5	           0xf9cc0	                                 setl al	      3012	ui.c	FUNCTION_75	IF_48
0x40049d8	            0xeb2d	                           jmp 0x4004a07	      3012	ui.c	FUNCTION_75	IF_48
0x40049da	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3012	ui.c	FUNCTION_75	IF_48
0x40049dd	          0x4863d0	                         movsxd rdx, eax	      3012	ui.c	FUNCTION_75	IF_48
0x40049e0	    0x488b05000000	            mov rax, qword [0x040049e7] 	      3014	ui.c	FUNCTION_75	IF_48
0x40049e7	    0x488b88c80100	           mov rcx, qword [rax + 0x1c8] 	      3014	ui.c	FUNCTION_75	IF_48
0x40049ee	    0x8b0500000000	            mov eax, dword [0x040049f4] 	      3016	ui.c	FUNCTION_75	IF_48
0x40049f4	            0x85c0	                           test eax, eax	      3016	ui.c	FUNCTION_75	IF_48
0x40049f6	           0xf95c0	                                setne al	      3016	ui.c	FUNCTION_75	IF_48
0x40049f9	           0xfb6c0	                           movzx eax, al	      3016	ui.c	FUNCTION_75	IF_48
0x40049fc	            0x4898	                                    cdqe	      3016	ui.c	FUNCTION_75	IF_48
0x40049fe	          0x4801c8	                            add rax, rcx	      3016	ui.c	FUNCTION_75	IF_48
0x4004a01	          0x4839c2	                            cmp rdx, rax	      3012	ui.c	FUNCTION_75	IF_48
0x4004a04	           0xf9dc0	                                setge al	      3012	ui.c	FUNCTION_75	IF_48
0x4004a07	            0x84c0	                             test al, al	      3010	ui.c	FUNCTION_75	IF_48
0x4004a09	            0x7407	                            je 0x4004a12	      3010	ui.c	FUNCTION_75	IF_48
0x4004a0b	    0xc745bc200000	           mov dword [rbp - 0x44], 0x20 	      3019	ui.c	FUNCTION_75	IF_48
0x4004a12	    0x488b05000000	            mov rax, qword [0x04004a19] 	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004a19	        0x488d4838	                   lea rcx, [rax + 0x38]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004a1d	    0x488b05000000	            mov rax, qword [0x04004a24] 	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004a24	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004a28	        0x488d75ac	                   lea rsi, [rbp - 0x54]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004a2c	          0x4889c7	                            mov rdi, rax	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004a2f	      0xe800000000	                          call 0x4004a34	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004a34	            0x85c0	                           test eax, eax	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004a36	            0x740a	                            je 0x4004a42	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4004a38	    0xc70500000000	               mov dword [0x04004a42], 1	      3024	ui.c	FUNCTION_75	IF_49
0x4004a42	          0x8b459c	             mov eax, dword [rbp - 0x64]	      3027	ui.c	FUNCTION_75	IF_50
0x4004a45	          0x83e002	                              and eax, 2	      3027	ui.c	FUNCTION_75	IF_50
0x4004a48	            0x85c0	                           test eax, eax	      3027	ui.c	FUNCTION_75	IF_50
0x4004a4a	            0x7466	                            je 0x4004ab2	      3027	ui.c	FUNCTION_75	IF_50
0x4004a4c	    0x8b0500000000	            mov eax, dword [0x04004a52] 	      3027	ui.c	FUNCTION_75	IF_50
0x4004a52	            0x85c0	                           test eax, eax	      3027	ui.c	FUNCTION_75	IF_50
0x4004a54	            0x755c	                           jne 0x4004ab2	      3027	ui.c	FUNCTION_75	IF_50
0x4004a56	      0xe800000000	                          call 0x4004a5b	      3029	ui.c	FUNCTION_75	IF_50	CALL_30
0x4004a5b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3030	ui.c	FUNCTION_75	IF_50
0x4004a5f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3030	ui.c	FUNCTION_75	IF_50
0x4004a63	    0x488905000000	            mov qword [0x04004a6a], rax 	      3030	ui.c	FUNCTION_75	IF_50
0x4004a6a	    0x488915000000	            mov qword [0x04004a71], rdx 	      3030	ui.c	FUNCTION_75	IF_50
0x4004a71	    0xc70500000000	               mov dword [0x04004a7b], 1	      3031	ui.c	FUNCTION_75	IF_50
0x4004a7b	    0xc70500000000	               mov dword [0x04004a85], 1	      3032	ui.c	FUNCTION_75	IF_50
0x4004a85	      0xbf6f000000	                           mov edi, 0x6f	      3034	ui.c	FUNCTION_75	IF_50	CALL_31
0x4004a8a	      0xe800000000	                          call 0x4004a8f	      3034	ui.c	FUNCTION_75	IF_50	CALL_31
0x4004a8f	      0xe800000000	                          call 0x4004a94	      3035	ui.c	FUNCTION_75	IF_50	CALL_32
0x4004a94	    0x8b0500000000	            mov eax, dword [0x04004a9a] 	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4004a9a	            0x85c0	                           test eax, eax	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4004a9c	            0x7414	                            je 0x4004ab2	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4004a9e	    0x8b0500000000	            mov eax, dword [0x04004aa4] 	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4004aa4	            0x85c0	                           test eax, eax	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4004aa6	            0x750a	                           jne 0x4004ab2	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4004aa8	    0xc70500000000	               mov dword [0x04004ab2], 1	      3037	ui.c	FUNCTION_75	IF_50	IF_51
0x4004ab2	    0x488b05000000	            mov rax, qword [0x04004ab9] 	      3040	ui.c	FUNCTION_75
0x4004ab9	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      3040	ui.c	FUNCTION_75
0x4004abc	          0x895048	             mov dword [rax + 0x48], edx	      3040	ui.c	FUNCTION_75
0x4004abf	    0x488b05000000	            mov rax, qword [0x04004ac6] 	      3041	ui.c	FUNCTION_75
0x4004ac6	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      3041	ui.c	FUNCTION_75
0x4004acd	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4004ad0	            0x89c7	                            mov edi, eax	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4004ad2	      0xe800000000	                          call 0x4004ad7	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4004ad7	            0x85c0	                           test eax, eax	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4004ad9	            0x751d	                           jne 0x4004af8	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4004adb	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3044	ui.c	FUNCTION_75	IF_52	IF_53
0x4004ae0	            0x740a	                            je 0x4004aec	      3044	ui.c	FUNCTION_75	IF_52	IF_53
0x4004ae2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3045	ui.c	FUNCTION_75	IF_52	IF_53
0x4004ae6	    0xc70001000000	                      mov dword [rax], 1	      3045	ui.c	FUNCTION_75	IF_52	IF_53
0x4004aec	    0xc70500000000	               mov dword [0x04004af6], 1	      3046	ui.c	FUNCTION_75	IF_52
0x4004af6	            0xeb11	                           jmp 0x4004b09	      3046	ui.c	FUNCTION_75	IF_52
0x4004af8	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3048	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4004afd	            0x740a	                            je 0x4004b09	      3048	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4004aff	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3049	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4004b03	    0xc70000000000	                      mov dword [rax], 0	      3049	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4004b09	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      3051	ui.c	FUNCTION_75
0x4004b10	    0x488b05000000	            mov rax, qword [0x04004b17] 	      3052	ui.c	FUNCTION_75	IF_55
0x4004b17	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      3052	ui.c	FUNCTION_75	IF_55
0x4004b1b	            0x7525	                           jne 0x4004b42	      3052	ui.c	FUNCTION_75	IF_55
0x4004b1d	    0x488b05000000	            mov rax, qword [0x04004b24] 	      3052	ui.c	FUNCTION_75	IF_55
0x4004b24	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3052	ui.c	FUNCTION_75	IF_55
0x4004b28	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3052	ui.c	FUNCTION_75	IF_55
0x4004b2c	          0x4839c2	                            cmp rdx, rax	      3052	ui.c	FUNCTION_75	IF_55
0x4004b2f	            0x7511	                           jne 0x4004b42	      3052	ui.c	FUNCTION_75	IF_55
0x4004b31	    0x488b05000000	            mov rax, qword [0x04004b38] 	      3053	ui.c	FUNCTION_75	IF_55
0x4004b38	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3053	ui.c	FUNCTION_75	IF_55
0x4004b3b	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3053	ui.c	FUNCTION_75	IF_55
0x4004b3e	            0x39c2	                            cmp edx, eax	      3053	ui.c	FUNCTION_75	IF_55
0x4004b40	            0x7407	                            je 0x4004b49	      3053	ui.c	FUNCTION_75	IF_55
0x4004b42	    0x814db4000100	            or dword [rbp - 0x4c], 0x100	      3054	ui.c	FUNCTION_75	IF_55
0x4004b49	        0x837dbc2b	           cmp dword [rbp - 0x44], 0x2b 	      3057	ui.c	FUNCTION_75	IF_56
0x4004b4d	            0x7509	                           jne 0x4004b58	      3057	ui.c	FUNCTION_75	IF_56
0x4004b4f	    0x814db4000400	            or dword [rbp - 0x4c], 0x400	      3058	ui.c	FUNCTION_75	IF_56
0x4004b56	            0xeb0d	                           jmp 0x4004b65	      3058	ui.c	FUNCTION_75	IF_56
0x4004b58	        0x837dbc20	           cmp dword [rbp - 0x44], 0x20 	      3059	ui.c	FUNCTION_75	ELSE_18	IF_57
0x4004b5c	            0x7407	                            je 0x4004b65	      3059	ui.c	FUNCTION_75	ELSE_18	IF_57
0x4004b5e	    0x814db4000200	            or dword [rbp - 0x4c], 0x200	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x4004b65	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3063	ui.c	FUNCTION_75
0x4004b68	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3064	ui.c	FUNCTION_75
0x4004b6c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3064	ui.c	FUNCTION_75
0x4004b75	            0x7405	                            je 0x4004b7c	      3064	ui.c	FUNCTION_75
0x4004b77	      0xe800000000	                          call 0x4004b7c	      3064	ui.c	FUNCTION_75
0x4004b7c	        0x4883c468	                           add rsp, 0x68	      3064	ui.c	FUNCTION_75
0x4004b80	              0x5b	                                 pop rbx	      3064	ui.c	FUNCTION_75
0x4004b81	              0x5d	                                 pop rbp	      3064	ui.c	FUNCTION_75
0x4004b82	              0xc3	                                     ret	      3064	ui.c	FUNCTION_75
clip_x11_notify_cb	ELSE,0:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,0	8
0x4003c59	              0x55	                                push rbp	      2508	ui.c	FUNCTION_70
0x4003c5a	          0x4889e5	                            mov rbp, rsp	      2508	ui.c	FUNCTION_70
0x4003c5d	        0x48897df8	                mov qword [rbp - 8], rdi	      2508	ui.c	FUNCTION_70
0x4003c61	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2508	ui.c	FUNCTION_70
0x4003c65	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2508	ui.c	FUNCTION_70
0x4003c69	              0x90	                                     nop	      2510	ui.c	FUNCTION_70
0x4003c6a	              0x5d	                                 pop rbp	      2510	ui.c	FUNCTION_70
0x4003c6b	              0xc3	                                     ret	      2510	ui.c	FUNCTION_70
fill_input_buf	ELSE,4:FOR,1:functions,0:CALL,18:DO,0:WHILE,2:SWITCH,0:IF,13	201
0x40028be	              0x55	                                push rbp	      1786	ui.c	FUNCTION_55
0x40028bf	          0x4889e5	                            mov rbp, rsp	      1786	ui.c	FUNCTION_55
0x40028c2	        0x4883ec30	                           sub rsp, 0x30	      1786	ui.c	FUNCTION_55
0x40028c6	          0x897ddc	             mov dword [rbp - 0x24], edi	      1786	ui.c	FUNCTION_55
0x40028c9	    0x8b0500000000	            mov eax, dword [0x040028cf] 	      1799	ui.c	FUNCTION_55	IF_1
0x40028cf	            0x85c0	                           test eax, eax	      1799	ui.c	FUNCTION_55	IF_1
0x40028d1	            0x7413	                            je 0x40028e6	      1799	ui.c	FUNCTION_55	IF_1
0x40028d3	      0xe800000000	                          call 0x40028d8	      1803	ui.c	FUNCTION_55	IF_1	CALL_1
0x40028d8	            0x85c0	                           test eax, eax	      1803	ui.c	FUNCTION_55	IF_1	CALL_1
0x40028da	            0x750a	                           jne 0x40028e6	      1803	ui.c	FUNCTION_55	IF_1	CALL_1
0x40028dc	      0xe800000000	                          call 0x40028e1	      1807	ui.c	FUNCTION_55	IF_1	CALL_2
0x40028e1	      0xe909030000	                           jmp 0x4002bef	      1808	ui.c	FUNCTION_55	IF_1
0x40028e6	      0xe800000000	                          call 0x40028eb	      1812	ui.c	FUNCTION_55	IF_2	CALL_3
0x40028eb	            0x85c0	                           test eax, eax	      1812	ui.c	FUNCTION_55	IF_2	CALL_3
0x40028ed	     0xf85f8020000	                           jne 0x4002beb	      1812	ui.c	FUNCTION_55	IF_2	CALL_3
0x40028f3	    0x488b05000000	            mov rax, qword [0x040028fa] 	      1832	ui.c	FUNCTION_55	IF_3
0x40028fa	          0x4885c0	                           test rax, rax	      1832	ui.c	FUNCTION_55	IF_3
0x40028fd	     0xf84db000000	                            je 0x40029de	      1832	ui.c	FUNCTION_55	IF_3
0x4002903	    0x8b0500000000	            mov eax, dword [0x04002909] 	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x4002909	      0xba00100000	                         mov edx, 0x1000	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x400290e	            0x29c2	                            sub edx, eax	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x4002910	    0x8b0500000000	            mov eax, dword [0x04002916] 	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x4002916	            0x39c2	                            cmp edx, eax	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x4002918	            0x7d14	                           jge 0x400292e	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x400291a	    0x8b0500000000	            mov eax, dword [0x04002920] 	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x4002920	      0xba00100000	                         mov edx, 0x1000	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x4002925	            0x29c2	                            sub edx, eax	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x4002927	            0x89d0	                            mov eax, edx	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x4002929	          0x8945f0	             mov dword [rbp - 0x10], eax	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x400292c	            0xeb09	                           jmp 0x4002937	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x400292e	    0x8b0500000000	            mov eax, dword [0x04002934] 	      1839	ui.c	FUNCTION_55	IF_3	ELSE_1
0x4002934	          0x8945f0	             mov dword [rbp - 0x10], eax	      1839	ui.c	FUNCTION_55	IF_3	ELSE_1
0x4002937	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x400293a	          0x4863d0	                         movsxd rdx, eax	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x400293d	    0x488b05000000	            mov rax, qword [0x04002944] 	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x4002944	    0x8b0d00000000	            mov ecx, dword [0x0400294a] 	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x400294a	          0x4863c9	                         movsxd rcx, ecx	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x400294d	    0x4881c1000000	                              add rcx, 0	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x4002954	          0x4889c6	                            mov rsi, rax	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x4002957	          0x4889cf	                            mov rdi, rcx	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x400295a	      0xe800000000	                          call 0x400295f	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x400295f	    0x8b0500000000	            mov eax, dword [0x04002965] 	      1841	ui.c	FUNCTION_55	IF_3	IF_5
0x4002965	          0x3945f0	            cmp dword [rbp - 0x10], eax 	      1841	ui.c	FUNCTION_55	IF_3	IF_5
0x4002968	            0x7528	                           jne 0x4002992	      1841	ui.c	FUNCTION_55	IF_3	IF_5
0x400296a	    0x488b05000000	            mov rax, qword [0x04002971] 	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x4002971	          0x4885c0	                           test rax, rax	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x4002974	            0x7455	                            je 0x40029cb	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x4002976	    0x488b05000000	            mov rax, qword [0x0400297d] 	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x400297d	          0x4889c7	                            mov rdi, rax	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x4002980	      0xe800000000	                          call 0x4002985	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x4002985	    0x48c705000000	               mov qword [0x04002990], 0	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x4002990	            0xeb39	                           jmp 0x40029cb	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x4002992	    0x8b0500000000	            mov eax, dword [0x04002998] 	      1845	ui.c	FUNCTION_55	IF_3	ELSE_2
0x4002998	          0x2b45f0	             sub eax, dword [rbp - 0x10]	      1845	ui.c	FUNCTION_55	IF_3	ELSE_2
0x400299b	    0x890500000000	            mov dword [0x040029a1], eax 	      1845	ui.c	FUNCTION_55	IF_3	ELSE_2
0x40029a1	    0x8b0500000000	            mov eax, dword [0x040029a7] 	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x40029a7	          0x4863d0	                         movsxd rdx, eax	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x40029aa	    0x488b0d000000	            mov rcx, qword [0x040029b1] 	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x40029b1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x40029b4	            0x4898	                                    cdqe	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x40029b6	          0x4801c1	                            add rcx, rax	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x40029b9	    0x488b05000000	            mov rax, qword [0x040029c0] 	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x40029c0	          0x4889ce	                            mov rsi, rcx	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x40029c3	          0x4889c7	                            mov rdi, rax	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x40029c6	      0xe800000000	                          call 0x40029cb	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x40029cb	    0x8b1500000000	            mov edx, dword [0x040029d1] 	      1848	ui.c	FUNCTION_55	IF_3
0x40029d1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1848	ui.c	FUNCTION_55	IF_3
0x40029d4	             0x1d0	                            add eax, edx	      1848	ui.c	FUNCTION_55	IF_3
0x40029d6	    0x890500000000	            mov dword [0x040029dc], eax 	      1848	ui.c	FUNCTION_55	IF_3
0x40029dc	            0xeb07	                           jmp 0x40029e5	      1848	ui.c	FUNCTION_55	IF_3
0x40029de	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1851	ui.c	FUNCTION_55	ELSE_3
0x40029e5	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1854	ui.c	FUNCTION_55	ELSE_3
0x40029ec	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1855	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x40029f3	      0xe9be000000	                           jmp 0x4002ab6	      1855	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x40029f8	    0x8b0500000000	            mov eax, dword [0x040029fe] 	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x40029fe	      0xba00100000	                         mov edx, 0x1000	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x4002a03	            0x29c2	                            sub edx, eax	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x4002a05	            0x89d0	                            mov eax, edx	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x4002a07	    0x8b3500000000	            mov esi, dword [0x04002a0d] 	      1859	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x4002a0d	              0x99	                                     cdq	      1859	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x4002a0e	            0xf7fe	                                idiv esi	      1859	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x4002a10	            0x4898	                                    cdqe	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x4002a12	        0x488945f8	                mov qword [rbp - 8], rax	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x4002a16	    0x8b0500000000	            mov eax, dword [0x04002a1c] 	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x4002a1c	            0x4898	                                    cdqe	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x4002a1e	    0x488d88000000	                          lea rcx, [rax]	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x4002a25	    0x8b0500000000	            mov eax, dword [0x04002a2b] 	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x4002a2b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x4002a2f	          0x4889ce	                            mov rsi, rcx	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x4002a32	            0x89c7	                            mov edi, eax	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x4002a34	      0xe800000000	                          call 0x4002a39	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x4002a39	          0x8945e8	             mov dword [rbp - 0x18], eax	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x4002a3c	        0x837de800	               cmp dword [rbp - 0x18], 0	      1868	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_6
0x4002a40	            0x7f7e	                            jg 0x4002ac0	      1868	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_6
0x4002a42	    0x8b0500000000	            mov eax, dword [0x04002a48] 	      1868	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_6
0x4002a48	            0x85c0	                           test eax, eax	      1868	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_6
0x4002a4a	            0x7574	                           jne 0x4002ac0	      1868	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_6
0x4002a4c	    0x8b0500000000	            mov eax, dword [0x04002a52] 	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x4002a52	            0x85c0	                           test eax, eax	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x4002a54	            0x7552	                           jne 0x4002aa8	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x4002a56	    0x8b0500000000	            mov eax, dword [0x04002a5c] 	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x4002a5c	            0x89c7	                            mov edi, eax	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x4002a5e	      0xe800000000	                          call 0x4002a63	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x4002a63	            0x85c0	                           test eax, eax	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x4002a65	            0x7541	                           jne 0x4002aa8	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x4002a67	    0x8b0500000000	            mov eax, dword [0x04002a6d] 	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x4002a6d	            0x85c0	                           test eax, eax	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x4002a6f	            0x7537	                           jne 0x4002aa8	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x4002a71	    0x8b0500000000	            mov eax, dword [0x04002a77] 	      1876	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7
0x4002a77	          0x8945f4	              mov dword [rbp - 0xc], eax	      1876	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7
0x4002a7a	      0xbf00000000	                              mov edi, 0	      1881	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_12
0x4002a7f	      0xe800000000	                          call 0x4002a84	      1881	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_12
0x4002a84	      0xbf00000000	                              mov edi, 0	      1884	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_13
0x4002a89	      0xe800000000	                          call 0x4002a8e	      1884	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_13
0x4002a8e	      0xbf02000000	                              mov edi, 2	      1885	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_14
0x4002a93	      0xe800000000	                          call 0x4002a98	      1885	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_14
0x4002a98	    0x890500000000	            mov dword [0x04002a9e], eax 	      1885	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_14
0x4002a9e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1889	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_15
0x4002aa1	            0x89c7	                            mov edi, eax	      1889	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_15
0x4002aa3	      0xe800000000	                          call 0x4002aa8	      1889	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_15
0x4002aa8	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1891	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_8
0x4002aac	     0xf843c010000	                            je 0x4002bee	      1891	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_8
0x4002ab2	        0x8345ec01	               add dword [rbp - 0x14], 1	      1855	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x4002ab6	        0x837dec63	           cmp dword [rbp - 0x14], 0x63 	      1855	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x4002aba	     0xf8e38ffffff	                           jle 0x40029f8	      1855	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x4002ac0	        0x837de800	               cmp dword [rbp - 0x18], 0	      1895	ui.c	FUNCTION_55	IF_9
0x4002ac4	            0x7f0f	                            jg 0x4002ad5	      1895	ui.c	FUNCTION_55	IF_9
0x4002ac6	    0x8b0500000000	            mov eax, dword [0x04002acc] 	      1895	ui.c	FUNCTION_55	IF_9
0x4002acc	            0x85c0	                           test eax, eax	      1895	ui.c	FUNCTION_55	IF_9
0x4002ace	            0x7505	                           jne 0x4002ad5	      1895	ui.c	FUNCTION_55	IF_9
0x4002ad0	      0xe800000000	                          call 0x4002ad5	      1896	ui.c	FUNCTION_55	CALL_16
0x4002ad5	        0x837de800	               cmp dword [rbp - 0x18], 0	      1897	ui.c	FUNCTION_55	IF_10
0x4002ad9	            0x7e0a	                           jle 0x4002ae5	      1897	ui.c	FUNCTION_55	IF_10
0x4002adb	    0xc70500000000	               mov dword [0x04002ae5], 1	      1898	ui.c	FUNCTION_55	IF_10
0x4002ae5	    0x8b0500000000	            mov eax, dword [0x04002aeb] 	      1899	ui.c	FUNCTION_55	IF_11
0x4002aeb	            0x85c0	                           test eax, eax	      1899	ui.c	FUNCTION_55	IF_11
0x4002aed	            0x7416	                            je 0x4002b05	      1899	ui.c	FUNCTION_55	IF_11
0x4002aef	    0xc60500000000	                mov byte [0x04002af6], 3	      1902	ui.c	FUNCTION_55	IF_11
0x4002af6	    0xc70500000000	               mov dword [0x04002b00], 1	      1903	ui.c	FUNCTION_55	IF_11
0x4002b00	      0xe9ea000000	                           jmp 0x4002bef	      1903	ui.c	FUNCTION_55	IF_11
0x4002b05	    0x8b0500000000	            mov eax, dword [0x04002b0b] 	      1916	ui.c	FUNCTION_55	ELSE_4	IF_12
0x4002b0b	            0x85c0	                           test eax, eax	      1916	ui.c	FUNCTION_55	ELSE_4	IF_12
0x4002b0d	     0xf84c9000000	                            je 0x4002bdc	      1916	ui.c	FUNCTION_55	ELSE_4	IF_12
0x4002b13	    0x8b0500000000	            mov eax, dword [0x04002b19] 	      1918	ui.c	FUNCTION_55	ELSE_4	IF_12
0x4002b19	          0x2b45f0	             sub eax, dword [rbp - 0x10]	      1918	ui.c	FUNCTION_55	ELSE_4	IF_12
0x4002b1c	    0x890500000000	            mov dword [0x04002b22], eax 	      1918	ui.c	FUNCTION_55	ELSE_4	IF_12
0x4002b22	    0x488b05000000	            mov rax, qword [0x04002b29] 	      1921	ui.c	FUNCTION_55	ELSE_4	IF_12
0x4002b29	          0x4885c0	                           test rax, rax	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b2c	            0x7507	                           jne 0x4002b35	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b2e	      0xbf00000000	                              mov edi, 0	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b33	            0xeb05	                           jmp 0x4002b3a	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b35	      0xbf00000000	                              mov edi, 0	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b3a	    0x8b0500000000	            mov eax, dword [0x04002b40] 	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b40	      0xba00100000	                         mov edx, 0x1000	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b45	            0x29c2	                            sub edx, eax	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b47	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b4a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b4d	          0x8d3401	                    lea esi, [rcx + rax]	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b50	    0x8b0500000000	            mov eax, dword [0x04002b56] 	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b56	            0x4898	                                    cdqe	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b58	    0x480500000000	                              add rax, 0	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b5e	    0x41b800000000	                              mov r8d, 0	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b64	          0x4889f9	                            mov rcx, rdi	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b67	          0x4889c7	                            mov rdi, rax	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b6a	      0xe800000000	                          call 0x4002b6f	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b6f	          0x8945e8	             mov dword [rbp - 0x18], eax	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x4002b72	            0xeb68	                           jmp 0x4002bdc	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x4002b74	    0x8b0500000000	            mov eax, dword [0x04002b7a] 	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x4002b7a	            0x4898	                                    cdqe	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x4002b7c	     0xfb680000000	                   movzx eax, byte [rax]	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x4002b83	            0x3c03	                               cmp al, 3	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x4002b85	            0x7546	                           jne 0x4002bcd	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x4002b87	    0x8b0500000000	            mov eax, dword [0x04002b8d] 	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x4002b8d	            0x85c0	                           test eax, eax	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x4002b8f	            0x743c	                            je 0x4002bcd	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x4002b91	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x4002b94	          0x83c001	                              add eax, 1	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x4002b97	            0x4898	                                    cdqe	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x4002b99	    0x8b1500000000	            mov edx, dword [0x04002b9f] 	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x4002b9f	          0x4863d2	                         movsxd rdx, edx	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x4002ba2	    0x488d8a000000	                          lea rcx, [rdx]	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x4002ba9	          0x4889c2	                            mov rdx, rax	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x4002bac	          0x4889ce	                            mov rsi, rcx	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x4002baf	      0xbf00000000	                              mov edi, 0	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x4002bb4	      0xe800000000	                          call 0x4002bb9	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x4002bb9	    0xc70500000000	               mov dword [0x04002bc3], 0	      1933	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x4002bc3	    0xc70500000000	               mov dword [0x04002bcd], 1	      1934	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x4002bcd	    0x8b0500000000	            mov eax, dword [0x04002bd3] 	      1936	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x4002bd3	          0x83c001	                              add eax, 1	      1936	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x4002bd6	    0x890500000000	            mov dword [0x04002bdc], eax 	      1936	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x4002bdc	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x4002bdf	          0x8d50ff	                      lea edx, [rax - 1]	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x4002be2	          0x8955e8	             mov dword [rbp - 0x18], edx	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x4002be5	            0x85c0	                           test eax, eax	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x4002be7	            0x7f8b	                            jg 0x4002b74	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x4002be9	            0xeb04	                           jmp 0x4002bef	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x4002beb	              0x90	                                     nop	      1813	ui.c	FUNCTION_55	IF_2
0x4002bec	            0xeb01	                           jmp 0x4002bef	      1813	ui.c	FUNCTION_55	IF_2
0x4002bee	              0x90	                                     nop	      1892	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_8
0x4002bef	              0xc9	                                   leave	      1940	ui.c	FUNCTION_55
0x4002bf0	              0xc3	                                     ret	      1940	ui.c	FUNCTION_55
check_col	ELSE,0:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,2	16
0x4002c6f	              0x55	                                push rbp	      1992	ui.c	FUNCTION_59
0x4002c70	          0x4889e5	                            mov rbp, rsp	      1992	ui.c	FUNCTION_59
0x4002c73	          0x897dfc	                mov dword [rbp - 4], edi	      1992	ui.c	FUNCTION_59
0x4002c76	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1993	ui.c	FUNCTION_59	IF_1
0x4002c7a	            0x7907	                           jns 0x4002c83	      1993	ui.c	FUNCTION_59	IF_1
0x4002c7c	      0xb800000000	                              mov eax, 0	      1994	ui.c	FUNCTION_59	IF_1
0x4002c81	            0xeb19	                           jmp 0x4002c9c	      1994	ui.c	FUNCTION_59	IF_1
0x4002c83	    0x8b0500000000	            mov eax, dword [0x04002c89] 	      1995	ui.c	FUNCTION_59	IF_2
0x4002c89	          0x3945fc	                cmp dword [rbp - 4], eax	      1995	ui.c	FUNCTION_59	IF_2
0x4002c8c	            0x7c0b	                            jl 0x4002c99	      1995	ui.c	FUNCTION_59	IF_2
0x4002c8e	    0x8b0500000000	            mov eax, dword [0x04002c94] 	      1996	ui.c	FUNCTION_59	IF_2
0x4002c94	          0x83e801	                              sub eax, 1	      1996	ui.c	FUNCTION_59	IF_2
0x4002c97	            0xeb03	                           jmp 0x4002c9c	      1996	ui.c	FUNCTION_59	IF_2
0x4002c99	          0x8b45fc	                mov eax, dword [rbp - 4]	      1997	ui.c	FUNCTION_59
0x4002c9c	              0x5d	                                 pop rbp	      1998	ui.c	FUNCTION_59
0x4002c9d	              0xc3	                                     ret	      1998	ui.c	FUNCTION_59
vcol2col	ELSE,0:FOR,0:functions,0:CALL,3:DO,0:WHILE,1:SWITCH,0:IF,0	50
0x400506e	              0x55	                                push rbp	      3261	ui.c	FUNCTION_79
0x400506f	          0x4889e5	                            mov rbp, rsp	      3261	ui.c	FUNCTION_79
0x4005072	        0x4883ec40	                           sub rsp, 0x40	      3261	ui.c	FUNCTION_79
0x4005076	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3261	ui.c	FUNCTION_79
0x400507a	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3261	ui.c	FUNCTION_79
0x400507e	          0x8955cc	             mov dword [rbp - 0x34], edx	      3261	ui.c	FUNCTION_79
0x4005081	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3263	ui.c	FUNCTION_79
0x4005088	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3267	ui.c	FUNCTION_79	CALL_1
0x400508c	        0x488b4008	                mov rax, qword [rax + 8]	      3267	ui.c	FUNCTION_79	CALL_1
0x4005090	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      3267	ui.c	FUNCTION_79	CALL_1
0x4005094	      0xba00000000	                              mov edx, 0	      3267	ui.c	FUNCTION_79	CALL_1
0x4005099	          0x4889ce	                            mov rsi, rcx	      3267	ui.c	FUNCTION_79	CALL_1
0x400509c	          0x4889c7	                            mov rdi, rax	      3267	ui.c	FUNCTION_79	CALL_1
0x400509f	      0xe800000000	                          call 0x40050a4	      3267	ui.c	FUNCTION_79	CALL_1
0x40050a4	        0x488945f0	             mov qword [rbp - 0x10], rax	      3267	ui.c	FUNCTION_79	CALL_1
0x40050a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3267	ui.c	FUNCTION_79	CALL_1
0x40050ac	        0x488945f8	                mov qword [rbp - 8], rax	      3267	ui.c	FUNCTION_79	CALL_1
0x40050b0	            0xeb47	                           jmp 0x40050f9	      3268	ui.c	FUNCTION_79	WHILE_1
0x40050b2	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40050b5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40050b9	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40050bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40050c1	    0x41b800000000	                              mov r8d, 0	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40050c7	          0x4889c7	                            mov rdi, rax	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40050ca	      0xe800000000	                          call 0x40050cf	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40050cf	           0x145ec	             add dword [rbp - 0x14], eax	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40050d2	    0x8b0500000000	            mov eax, dword [0x040050d8] 	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40050d8	            0x85c0	                           test eax, eax	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40050da	            0x7412	                            je 0x40050ee	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40050dc	    0x488b05000000	            mov rax, qword [0x040050e3] 	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40050e3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40050e7	          0x4889d7	                            mov rdi, rdx	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40050ea	            0xffd0	                                call rax	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40050ec	            0xeb05	                           jmp 0x40050f3	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40050ee	      0xb801000000	                              mov eax, 1	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40050f3	            0x4898	                                    cdqe	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40050f5	        0x480145f0	            add qword [rbp - 0x10], rax 	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40050f9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3268	ui.c	FUNCTION_79	WHILE_1
0x40050fc	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      3268	ui.c	FUNCTION_79	WHILE_1
0x40050ff	            0x7d0b	                           jge 0x400510c	      3268	ui.c	FUNCTION_79	WHILE_1
0x4005101	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3268	ui.c	FUNCTION_79	WHILE_1
0x4005105	           0xfb600	                   movzx eax, byte [rax]	      3268	ui.c	FUNCTION_79	WHILE_1
0x4005108	            0x84c0	                             test al, al	      3268	ui.c	FUNCTION_79	WHILE_1
0x400510a	            0x75a6	                           jne 0x40050b2	      3268	ui.c	FUNCTION_79	WHILE_1
0x400510c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3273	ui.c	FUNCTION_79
0x4005110	        0x488b45f8	                mov rax, qword [rbp - 8]	      3273	ui.c	FUNCTION_79
0x4005114	          0x4829c2	                            sub rdx, rax	      3273	ui.c	FUNCTION_79
0x4005117	          0x4889d0	                            mov rax, rdx	      3273	ui.c	FUNCTION_79
0x400511a	              0xc9	                                   leave	      3274	ui.c	FUNCTION_79
0x400511b	              0xc3	                                     ret	      3274	ui.c	FUNCTION_79
ui_new_shellsize	ELSE,1:FOR,0:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0:IF,2	17
0x40006a3	              0x55	                                push rbp	       381	ui.c	FUNCTION_11
0x40006a4	          0x4889e5	                            mov rbp, rsp	       381	ui.c	FUNCTION_11
0x40006a7	    0x8b0500000000	            mov eax, dword [0x040006ad] 	       382	ui.c	FUNCTION_11	IF_1
0x40006ad	            0x85c0	                           test eax, eax	       382	ui.c	FUNCTION_11	IF_1
0x40006af	            0x7420	                            je 0x40006d1	       382	ui.c	FUNCTION_11	IF_1
0x40006b1	    0x8b0500000000	            mov eax, dword [0x040006b7] 	       382	ui.c	FUNCTION_11	IF_1
0x40006b7	            0x85c0	                           test eax, eax	       382	ui.c	FUNCTION_11	IF_1
0x40006b9	            0x7516	                           jne 0x40006d1	       382	ui.c	FUNCTION_11	IF_1
0x40006bb	    0x8b0500000000	            mov eax, dword [0x040006c1] 	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x40006c1	            0x85c0	                           test eax, eax	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x40006c3	            0x7407	                            je 0x40006cc	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x40006c5	      0xe800000000	                          call 0x40006ca	       386	ui.c	FUNCTION_11	IF_1	CALL_1
0x40006ca	            0xeb05	                           jmp 0x40006d1	       391	ui.c	FUNCTION_11
0x40006cc	      0xe800000000	                          call 0x40006d1	       389	ui.c	FUNCTION_11	IF_1	CALL_2
0x40006d1	              0x90	                                     nop	       391	ui.c	FUNCTION_11
0x40006d2	              0x5d	                                 pop rbp	       391	ui.c	FUNCTION_11
0x40006d3	              0xc3	                                     ret	       391	ui.c	FUNCTION_11
clip_scroll_selection	ELSE,4:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,5	49
0x40018f8	              0x55	                                push rbp	      1092	ui.c	FUNCTION_32
0x40018f9	          0x4889e5	                            mov rbp, rsp	      1092	ui.c	FUNCTION_32
0x40018fc	          0x897dec	             mov dword [rbp - 0x14], edi	      1092	ui.c	FUNCTION_32
0x40018ff	     0xfb705000000	           movzx eax, word [0x04001906] 	      1095	ui.c	FUNCTION_32	IF_1
0x4001906	          0x6685c0	                             test ax, ax	      1095	ui.c	FUNCTION_32	IF_1
0x4001909	     0xf8499000000	                            je 0x40019a8	      1095	ui.c	FUNCTION_32	IF_1
0x400190f	    0x488b05000000	            mov rax, qword [0x04001916] 	      1098	ui.c	FUNCTION_32
0x4001916	            0x89c2	                            mov edx, eax	      1098	ui.c	FUNCTION_32
0x4001918	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1098	ui.c	FUNCTION_32
0x400191b	            0x29c2	                            sub edx, eax	      1098	ui.c	FUNCTION_32
0x400191d	            0x89d0	                            mov eax, edx	      1098	ui.c	FUNCTION_32
0x400191f	          0x8945fc	                mov dword [rbp - 4], eax	      1098	ui.c	FUNCTION_32
0x4001922	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1099	ui.c	FUNCTION_32	IF_2
0x4001926	            0x7f0d	                            jg 0x4001935	      1099	ui.c	FUNCTION_32	IF_2
0x4001928	    0x48c705000000	               mov qword [0x04001933], 0	      1100	ui.c	FUNCTION_32	IF_2
0x4001933	            0xeb22	                           jmp 0x4001957	      1100	ui.c	FUNCTION_32	IF_2
0x4001935	    0x8b0500000000	            mov eax, dword [0x0400193b] 	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x400193b	          0x3945fc	                cmp dword [rbp - 4], eax	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x400193e	            0x7c0b	                            jl 0x400194b	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x4001940	    0x66c705000000	                mov word [0x04001949], 0	      1102	ui.c	FUNCTION_32	ELSE_1	IF_3
0x4001949	            0xeb0c	                           jmp 0x4001957	      1102	ui.c	FUNCTION_32	ELSE_1	IF_3
0x400194b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1104	ui.c	FUNCTION_32	ELSE_2
0x400194e	            0x4898	                                    cdqe	      1104	ui.c	FUNCTION_32	ELSE_2
0x4001950	    0x488905000000	            mov qword [0x04001957], rax 	      1104	ui.c	FUNCTION_32	ELSE_2
0x4001957	    0x488b05000000	            mov rax, qword [0x0400195e] 	      1106	ui.c	FUNCTION_32
0x400195e	            0x89c2	                            mov edx, eax	      1106	ui.c	FUNCTION_32
0x4001960	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1106	ui.c	FUNCTION_32
0x4001963	            0x29c2	                            sub edx, eax	      1106	ui.c	FUNCTION_32
0x4001965	            0x89d0	                            mov eax, edx	      1106	ui.c	FUNCTION_32
0x4001967	          0x8945fc	                mov dword [rbp - 4], eax	      1106	ui.c	FUNCTION_32
0x400196a	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1107	ui.c	FUNCTION_32	IF_4
0x400196e	            0x790b	                           jns 0x400197b	      1107	ui.c	FUNCTION_32	IF_4
0x4001970	    0x66c705000000	                mov word [0x04001979], 0	      1108	ui.c	FUNCTION_32	IF_4
0x4001979	            0xeb2e	                           jmp 0x40019a9	      1108	ui.c	FUNCTION_32	IF_4
0x400197b	    0x8b0500000000	            mov eax, dword [0x04001981] 	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4001981	          0x3945fc	                cmp dword [rbp - 4], eax	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4001984	            0x7c14	                            jl 0x400199a	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4001986	    0x8b0500000000	            mov eax, dword [0x0400198c] 	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x400198c	          0x83e801	                              sub eax, 1	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x400198f	            0x4898	                                    cdqe	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4001991	    0x488905000000	            mov qword [0x04001998], rax 	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4001998	            0xeb0f	                           jmp 0x40019a9	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x400199a	          0x8b45fc	                mov eax, dword [rbp - 4]	      1112	ui.c	FUNCTION_32	ELSE_4
0x400199d	            0x4898	                                    cdqe	      1112	ui.c	FUNCTION_32	ELSE_4
0x400199f	    0x488905000000	            mov qword [0x040019a6], rax 	      1112	ui.c	FUNCTION_32	ELSE_4
0x40019a6	            0xeb01	                           jmp 0x40019a9	      1112	ui.c	FUNCTION_32	ELSE_4
0x40019a8	              0x90	                                     nop	      1096	ui.c	FUNCTION_32	IF_1
0x40019a9	              0x5d	                                 pop rbp	      1113	ui.c	FUNCTION_32	ELSE_4
0x40019aa	              0xc3	                                     ret	      1113	ui.c	FUNCTION_32	ELSE_4
vim_is_input_buf_empty	ELSE,0:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,0	8
0x400261d	              0x55	                                push rbp	      1626	ui.c	FUNCTION_45
0x400261e	          0x4889e5	                            mov rbp, rsp	      1626	ui.c	FUNCTION_45
0x4002621	    0x8b0500000000	            mov eax, dword [0x04002627] 	      1627	ui.c	FUNCTION_45
0x4002627	            0x85c0	                           test eax, eax	      1627	ui.c	FUNCTION_45
0x4002629	           0xf94c0	                                 sete al	      1627	ui.c	FUNCTION_45
0x400262c	           0xfb6c0	                           movzx eax, al	      1627	ui.c	FUNCTION_45
0x400262f	              0x5d	                                 pop rbp	      1628	ui.c	FUNCTION_45
0x4002630	              0xc3	                                     ret	      1628	ui.c	FUNCTION_45
yank_cut_buffer0	ELSE,0:FOR,0:functions,0:CALL,12:DO,0:WHILE,0:SWITCH,0:IF,6	84
0x4003da3	              0x55	                                push rbp	      2563	ui.c	FUNCTION_74
0x4003da4	          0x4889e5	                            mov rbp, rsp	      2563	ui.c	FUNCTION_74
0x4003da7	        0x4883ec50	                           sub rsp, 0x50	      2563	ui.c	FUNCTION_74
0x4003dab	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2563	ui.c	FUNCTION_74
0x4003daf	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2563	ui.c	FUNCTION_74
0x4003db3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2563	ui.c	FUNCTION_74
0x4003dbc	        0x488945f8	                mov qword [rbp - 8], rax	      2563	ui.c	FUNCTION_74
0x4003dc0	            0x31c0	                            xor eax, eax	      2563	ui.c	FUNCTION_74
0x4003dc2	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      2564	ui.c	FUNCTION_74
0x4003dc9	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      2565	ui.c	FUNCTION_74	CALL_1
0x4003dcd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2565	ui.c	FUNCTION_74	CALL_1
0x4003dd1	      0xba00000000	                              mov edx, 0	      2565	ui.c	FUNCTION_74	CALL_1
0x4003dd6	          0x4889ce	                            mov rsi, rcx	      2565	ui.c	FUNCTION_74	CALL_1
0x4003dd9	          0x4889c7	                            mov rdi, rax	      2565	ui.c	FUNCTION_74	CALL_1
0x4003ddc	      0xe800000000	                          call 0x4003de1	      2565	ui.c	FUNCTION_74	CALL_1
0x4003de1	        0x488945d0	             mov qword [rbp - 0x30], rax	      2565	ui.c	FUNCTION_74	CALL_1
0x4003de5	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2567	ui.c	FUNCTION_74	IF_1
0x4003de8	            0x85c0	                           test eax, eax	      2567	ui.c	FUNCTION_74	IF_1
0x4003dea	     0xf8ef4000000	                           jle 0x4003ee4	      2567	ui.c	FUNCTION_74	IF_1
0x4003df0	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2570	ui.c	FUNCTION_74	IF_1
0x4003df7	    0x8b0500000000	            mov eax, dword [0x04003dfd] 	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x4003dfd	            0x85c0	                           test eax, eax	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x4003dff	     0xf848a000000	                            je 0x4003e8f	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x4003e05	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      2581	ui.c	FUNCTION_74	IF_1	IF_2
0x4003e0c	    0x488b15000000	            mov rdx, qword [0x04003e13] 	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003e13	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003e17	      0xbe00000000	                              mov esi, 0	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003e1c	          0x4889c7	                            mov rdi, rax	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003e1f	      0xe800000000	                          call 0x4003e24	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003e24	          0x83f801	                              cmp eax, 1	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003e27	            0x7566	                           jne 0x4003e8f	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4003e29	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4003e2d	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4003e31	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4003e35	          0x4889ce	                            mov rsi, rcx	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4003e38	          0x4889c7	                            mov rdi, rax	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4003e3b	      0xe800000000	                          call 0x4003e40	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4003e40	        0x488945d8	             mov qword [rbp - 0x28], rax	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4003e44	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2585	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x4003e49	            0x742e	                            je 0x4003e79	      2585	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x4003e4b	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4003e4e	          0x4863d0	                         movsxd rdx, eax	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4003e51	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4003e55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4003e59	          0x4889c6	                            mov rsi, rax	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4003e5c	      0xbf00000000	                              mov edi, 0	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4003e61	      0xe800000000	                          call 0x4003e66	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4003e66	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4003e6a	          0x4889c7	                            mov rdi, rax	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4003e6d	      0xe800000000	                          call 0x4003e72	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4003e72	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      2589	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x4003e79	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4003e7d	      0xba00000000	                              mov edx, 0	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4003e82	      0xbe00000000	                              mov esi, 0	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4003e87	          0x4889c7	                            mov rdi, rax	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4003e8a	      0xe800000000	                          call 0x4003e8f	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4003e8f	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2594	ui.c	FUNCTION_74	IF_1	IF_5
0x4003e93	            0x751b	                           jne 0x4003eb0	      2594	ui.c	FUNCTION_74	IF_1	IF_5
0x4003e95	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4003e98	          0x4863d0	                         movsxd rdx, eax	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4003e9b	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4003e9f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4003ea3	          0x4889c6	                            mov rsi, rax	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4003ea6	      0xbf00000000	                              mov edi, 0	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4003eab	      0xe800000000	                          call 0x4003eb0	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4003eb0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x4003eb4	          0x4889c7	                            mov rdi, rax	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x4003eb7	      0xe800000000	                          call 0x4003ebc	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x4003ebc	    0x488b05000000	            mov rax, qword [0x04003ec3] 	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x4003ec3	          0x4885c0	                           test rax, rax	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x4003ec6	            0x7e1c	                           jle 0x4003ee4	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x4003ec8	      0xe800000000	                          call 0x4003ecd	      2600	ui.c	FUNCTION_74	IF_1	IF_6	CALL_9
0x4003ecd	      0xbf00000000	                              mov edi, 0	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4003ed2	      0xe800000000	                          call 0x4003ed7	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4003ed7	          0x4889c7	                            mov rdi, rax	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4003eda	      0xe800000000	                          call 0x4003edf	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4003edf	      0xe800000000	                          call 0x4003ee4	      2602	ui.c	FUNCTION_74	IF_1	IF_6	CALL_12
0x4003ee4	              0x90	                                     nop	      2605	ui.c	FUNCTION_74
0x4003ee5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2605	ui.c	FUNCTION_74
0x4003ee9	    0x644833042528	                xor rax, qword fs:[0x28]	      2605	ui.c	FUNCTION_74
0x4003ef2	            0x7405	                            je 0x4003ef9	      2605	ui.c	FUNCTION_74
0x4003ef4	      0xe800000000	                          call 0x4003ef9	      2605	ui.c	FUNCTION_74
0x4003ef9	              0xc9	                                   leave	      2605	ui.c	FUNCTION_74
0x4003efa	              0xc3	                                     ret	      2605	ui.c	FUNCTION_74
add_to_input_buf_csi	ELSE,0:FOR,1:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0:IF,1	41
0x4002780	              0x55	                                push rbp	      1716	ui.c	FUNCTION_51
0x4002781	          0x4889e5	                            mov rbp, rsp	      1716	ui.c	FUNCTION_51
0x4002784	        0x4883ec30	                           sub rsp, 0x30	      1716	ui.c	FUNCTION_51
0x4002788	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1716	ui.c	FUNCTION_51
0x400278c	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1716	ui.c	FUNCTION_51
0x400278f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1716	ui.c	FUNCTION_51
0x4002798	        0x488945f8	                mov qword [rbp - 8], rax	      1716	ui.c	FUNCTION_51
0x400279c	            0x31c0	                            xor eax, eax	      1716	ui.c	FUNCTION_51
0x400279e	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1720	ui.c	FUNCTION_51	FOR_1
0x40027a5	            0xeb4b	                           jmp 0x40027f2	      1720	ui.c	FUNCTION_51	FOR_1
0x40027a7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x40027aa	          0x4863d0	                         movsxd rdx, eax	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x40027ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x40027b1	          0x4801d0	                            add rax, rdx	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x40027b4	      0xbe01000000	                              mov esi, 1	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x40027b9	          0x4889c7	                            mov rdi, rax	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x40027bc	      0xe800000000	                          call 0x40027c1	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x40027c1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x40027c4	          0x4863d0	                         movsxd rdx, eax	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x40027c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x40027cb	          0x4801d0	                            add rax, rdx	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x40027ce	           0xfb600	                   movzx eax, byte [rax]	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x40027d1	            0x3c9b	                            cmp al, 0x9b	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x40027d3	            0x7519	                           jne 0x40027ee	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x40027d5	        0xc645f0fd	            mov byte [rbp - 0x10], 0xfd 	      1726	ui.c	FUNCTION_51	FOR_1	IF_1
0x40027d9	        0xc645f151	              mov byte [rbp - 0xf], 0x51	      1727	ui.c	FUNCTION_51	FOR_1	IF_1
0x40027dd	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x40027e1	      0xbe02000000	                              mov esi, 2	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x40027e6	          0x4889c7	                            mov rdi, rax	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x40027e9	      0xe800000000	                          call 0x40027ee	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x40027ee	        0x8345ec01	               add dword [rbp - 0x14], 1	      1720	ui.c	FUNCTION_51	FOR_1
0x40027f2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1720	ui.c	FUNCTION_51	FOR_1
0x40027f5	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1720	ui.c	FUNCTION_51	FOR_1
0x40027f8	            0x7cad	                            jl 0x40027a7	      1720	ui.c	FUNCTION_51	FOR_1
0x40027fa	              0x90	                                     nop	      1731	ui.c	FUNCTION_51
0x40027fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1731	ui.c	FUNCTION_51
0x40027ff	    0x644833042528	                xor rax, qword fs:[0x28]	      1731	ui.c	FUNCTION_51
0x4002808	            0x7405	                            je 0x400280f	      1731	ui.c	FUNCTION_51
0x400280a	      0xe800000000	                          call 0x400280f	      1731	ui.c	FUNCTION_51
0x400280f	              0xc9	                                   leave	      1731	ui.c	FUNCTION_51
0x4002810	              0xc3	                                     ret	      1731	ui.c	FUNCTION_51
clip_isautosel_star	ELSE,0:FOR,0:functions,0:CALL,1:DO,0:WHILE,0:SWITCH,0:IF,0	16
0x4000cfd	              0x55	                                push rbp	       688	ui.c	FUNCTION_23
0x4000cfe	          0x4889e5	                            mov rbp, rsp	       688	ui.c	FUNCTION_23
0x4000d01	    0x8b0500000000	            mov eax, dword [0x04000d07] 	       691	ui.c	FUNCTION_23	CALL_1
0x4000d07	            0x85c0	                           test eax, eax	       691	ui.c	FUNCTION_23	CALL_1
0x4000d09	            0x741f	                            je 0x4000d2a	       691	ui.c	FUNCTION_23	CALL_1
0x4000d0b	    0x488b05000000	            mov rax, qword [0x04000d12] 	       691	ui.c	FUNCTION_23	CALL_1
0x4000d12	      0xbe61000000	                           mov esi, 0x61	       691	ui.c	FUNCTION_23	CALL_1
0x4000d17	          0x4889c7	                            mov rdi, rax	       691	ui.c	FUNCTION_23	CALL_1
0x4000d1a	      0xe800000000	                          call 0x4000d1f	       691	ui.c	FUNCTION_23	CALL_1
0x4000d1f	          0x4885c0	                           test rax, rax	       691	ui.c	FUNCTION_23	CALL_1
0x4000d22	           0xf95c0	                                setne al	       691	ui.c	FUNCTION_23	CALL_1
0x4000d25	           0xfb6c0	                           movzx eax, al	       691	ui.c	FUNCTION_23	CALL_1
0x4000d28	            0xeb06	                           jmp 0x4000d30	       689	ui.c	FUNCTION_23
0x4000d2a	    0x8b0500000000	            mov eax, dword [0x04000d30] 	       691	ui.c	FUNCTION_23	CALL_1
0x4000d30	              0x5d	                                 pop rbp	       694	ui.c	FUNCTION_23
0x4000d31	              0xc3	                                     ret	       694	ui.c	FUNCTION_23
ui_write	ELSE,0:FOR,0:functions,0:CALL,5:DO,0:WHILE,0:SWITCH,0:IF,6	63
0x4000040	              0x55	                                push rbp	        29	ui.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        29	ui.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	        29	ui.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	        29	ui.c	FUNCTION_1
0x400004c	          0x8975e4	             mov dword [rbp - 0x1c], esi	        29	ui.c	FUNCTION_1
0x400004f	    0x8b0500000000	            mov eax, dword [0x04000055] 	        31	ui.c	FUNCTION_1	IF_1
0x4000055	            0x85c0	                           test eax, eax	        31	ui.c	FUNCTION_1	IF_1
0x4000057	            0x744e	                            je 0x40000a7	        31	ui.c	FUNCTION_1	IF_1
0x4000059	    0x8b0500000000	            mov eax, dword [0x0400005f] 	        31	ui.c	FUNCTION_1	IF_1
0x400005f	            0x85c0	                           test eax, eax	        31	ui.c	FUNCTION_1	IF_1
0x4000061	            0x7544	                           jne 0x40000a7	        31	ui.c	FUNCTION_1	IF_1
0x4000063	    0x8b0500000000	            mov eax, dword [0x04000069] 	        31	ui.c	FUNCTION_1	IF_1
0x4000069	            0x85c0	                           test eax, eax	        31	ui.c	FUNCTION_1	IF_1
0x400006b	            0x753a	                           jne 0x40000a7	        31	ui.c	FUNCTION_1	IF_1
0x400006d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x4000070	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x4000074	            0x89d6	                            mov esi, edx	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x4000076	          0x4889c7	                            mov rdi, rax	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x4000079	      0xe800000000	                          call 0x400007e	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x400007e	    0x488b05000000	            mov rax, qword [0x04000085] 	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x4000085	          0x4885c0	                           test rax, rax	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x4000088	     0xf8492000000	                            je 0x4000120	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x400008e	    0x8b1500000000	            mov edx, dword [0x04000094] 	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x4000094	    0x488b05000000	            mov rax, qword [0x0400009b] 	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x400009b	            0x89d6	                            mov esi, edx	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x400009d	          0x4889c7	                            mov rdi, rax	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x40000a0	      0xe800000000	                          call 0x40000a5	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x40000a5	            0xeb79	                           jmp 0x4000120	        36	ui.c	FUNCTION_1	IF_1
0x40000a7	    0x8b0500000000	            mov eax, dword [0x040000ad] 	        41	ui.c	FUNCTION_1	IF_3
0x40000ad	            0x85c0	                           test eax, eax	        41	ui.c	FUNCTION_1	IF_3
0x40000af	            0x740c	                            je 0x40000bd	        41	ui.c	FUNCTION_1	IF_3
0x40000b1	    0x488b05000000	            mov rax, qword [0x040000b8] 	        41	ui.c	FUNCTION_1	IF_3
0x40000b8	          0x4885c0	                           test rax, rax	        41	ui.c	FUNCTION_1	IF_3
0x40000bb	            0x7464	                            je 0x4000121	        41	ui.c	FUNCTION_1	IF_3
0x40000bd	    0x48c745f80000	                  mov qword [rbp - 8], 0	        44	ui.c	FUNCTION_1	IF_3
0x40000c5	    0x8b0500000000	            mov eax, dword [0x040000cb] 	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x40000cb	            0x85c0	                           test eax, eax	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x40000cd	            0x7428	                            je 0x40000f7	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x40000cf	        0x488d55e4	                   lea rdx, [rbp - 0x1c]	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000d7	          0x4889c6	                            mov rsi, rax	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000da	      0xbf00000000	                              mov edi, 0	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000df	      0xe800000000	                          call 0x40000e4	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000e4	        0x488945f8	                mov qword [rbp - 8], rax	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000e8	      0x48837df800	                  cmp qword [rbp - 8], 0	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x40000ed	            0x7408	                            je 0x40000f7	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x40000ef	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x40000f3	        0x488945e8	             mov qword [rbp - 0x18], rax	        51	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x40000f7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x40000fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x40000fe	            0x89d6	                            mov esi, edx	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x4000100	          0x4889c7	                            mov rdi, rax	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x4000103	      0xe800000000	                          call 0x4000108	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x4000108	    0x8b0500000000	            mov eax, dword [0x0400010e] 	        58	ui.c	FUNCTION_1	IF_3	IF_6
0x400010e	            0x85c0	                           test eax, eax	        58	ui.c	FUNCTION_1	IF_3	IF_6
0x4000110	            0x740f	                            je 0x4000121	        58	ui.c	FUNCTION_1	IF_3	IF_6
0x4000112	        0x488b45f8	                mov rax, qword [rbp - 8]	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0x4000116	          0x4889c7	                            mov rdi, rax	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0x4000119	      0xe800000000	                          call 0x400011e	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0x400011e	            0xeb01	                           jmp 0x4000121	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0x4000120	              0x90	                                     nop	        36	ui.c	FUNCTION_1	IF_1
0x4000121	              0xc9	                                   leave	        63	ui.c	FUNCTION_1
0x4000122	              0xc3	                                     ret	        63	ui.c	FUNCTION_1
ui_breakcheck	ELSE,0:FOR,0:functions,0:CALL,1:DO,0:WHILE,0:SWITCH,0:IF,0	7
0x40006d4	              0x55	                                push rbp	       395	ui.c	FUNCTION_12
0x40006d5	          0x4889e5	                            mov rbp, rsp	       395	ui.c	FUNCTION_12
0x40006d8	      0xbf00000000	                              mov edi, 0	       396	ui.c	FUNCTION_12	CALL_1
0x40006dd	      0xe800000000	                          call 0x40006e2	       396	ui.c	FUNCTION_12	CALL_1
0x40006e2	              0x90	                                     nop	       397	ui.c	FUNCTION_12
0x40006e3	              0x5d	                                 pop rbp	       397	ui.c	FUNCTION_12
0x40006e4	              0xc3	                                     ret	       397	ui.c	FUNCTION_12
ui_delay	ELSE,1:FOR,0:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0:IF,1	24
0x40005af	              0x55	                                push rbp	       285	ui.c	FUNCTION_6
0x40005b0	          0x4889e5	                            mov rbp, rsp	       285	ui.c	FUNCTION_6
0x40005b3	        0x4883ec10	                           sub rsp, 0x10	       285	ui.c	FUNCTION_6
0x40005b7	        0x48897df8	                mov qword [rbp - 8], rdi	       285	ui.c	FUNCTION_6
0x40005bb	          0x8975f4	              mov dword [rbp - 0xc], esi	       285	ui.c	FUNCTION_6
0x40005be	    0x8b0500000000	            mov eax, dword [0x040005c4] 	       287	ui.c	FUNCTION_6	IF_1
0x40005c4	            0x85c0	                           test eax, eax	       287	ui.c	FUNCTION_6	IF_1
0x40005c6	            0x741c	                            je 0x40005e4	       287	ui.c	FUNCTION_6	IF_1
0x40005c8	        0x837df400	                cmp dword [rbp - 0xc], 0	       287	ui.c	FUNCTION_6	IF_1
0x40005cc	            0x7516	                           jne 0x40005e4	       287	ui.c	FUNCTION_6	IF_1
0x40005ce	    0x8b1500000000	            mov edx, dword [0x040005d4] 	       288	ui.c	FUNCTION_6	CALL_1
0x40005d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       288	ui.c	FUNCTION_6	CALL_1
0x40005d8	            0x89d6	                            mov esi, edx	       288	ui.c	FUNCTION_6	CALL_1
0x40005da	          0x4889c7	                            mov rdi, rax	       288	ui.c	FUNCTION_6	CALL_1
0x40005dd	      0xe800000000	                          call 0x40005e2	       288	ui.c	FUNCTION_6	CALL_1
0x40005e2	            0xeb11	                           jmp 0x40005f5	       288	ui.c	FUNCTION_6	CALL_1
0x40005e4	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       291	ui.c	FUNCTION_6	CALL_2
0x40005e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       291	ui.c	FUNCTION_6	CALL_2
0x40005eb	            0x89d6	                            mov esi, edx	       291	ui.c	FUNCTION_6	CALL_2
0x40005ed	          0x4889c7	                            mov rdi, rax	       291	ui.c	FUNCTION_6	CALL_2
0x40005f0	      0xe800000000	                          call 0x40005f5	       291	ui.c	FUNCTION_6	CALL_2
0x40005f5	              0x90	                                     nop	       292	ui.c	FUNCTION_6
0x40005f6	              0xc9	                                   leave	       292	ui.c	FUNCTION_6
0x40005f7	              0xc3	                                     ret	       292	ui.c	FUNCTION_6
clip_invert_rectangle	ELSE,1:FOR,0:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0:IF,1	29
0x4001aec	              0x55	                                push rbp	      1190	ui.c	FUNCTION_34
0x4001aed	          0x4889e5	                            mov rbp, rsp	      1190	ui.c	FUNCTION_34
0x4001af0	        0x4883ec20	                           sub rsp, 0x20	      1190	ui.c	FUNCTION_34
0x4001af4	          0x897dfc	                mov dword [rbp - 4], edi	      1190	ui.c	FUNCTION_34
0x4001af7	          0x8975f8	                mov dword [rbp - 8], esi	      1190	ui.c	FUNCTION_34
0x4001afa	          0x8955f4	              mov dword [rbp - 0xc], edx	      1190	ui.c	FUNCTION_34
0x4001afd	          0x894df0	             mov dword [rbp - 0x10], ecx	      1190	ui.c	FUNCTION_34
0x4001b00	        0x448945ec	             mov dword [rbp - 0x14], r8d	      1190	ui.c	FUNCTION_34
0x4001b04	    0x8b0500000000	            mov eax, dword [0x04001b0a] 	      1192	ui.c	FUNCTION_34	IF_1
0x4001b0a	            0x85c0	                           test eax, eax	      1192	ui.c	FUNCTION_34	IF_1
0x4001b0c	            0x7415	                            je 0x4001b23	      1192	ui.c	FUNCTION_34	IF_1
0x4001b0e	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      1193	ui.c	FUNCTION_34	CALL_1
0x4001b11	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1193	ui.c	FUNCTION_34	CALL_1
0x4001b14	          0x8b75f8	                mov esi, dword [rbp - 8]	      1193	ui.c	FUNCTION_34	CALL_1
0x4001b17	          0x8b45fc	                mov eax, dword [rbp - 4]	      1193	ui.c	FUNCTION_34	CALL_1
0x4001b1a	            0x89c7	                            mov edi, eax	      1193	ui.c	FUNCTION_34	CALL_1
0x4001b1c	      0xe800000000	                          call 0x4001b21	      1193	ui.c	FUNCTION_34	CALL_1
0x4001b21	            0xeb19	                           jmp 0x4001b3c	      1197	ui.c	FUNCTION_34
0x4001b23	          0x8b7dec	             mov edi, dword [rbp - 0x14]	      1196	ui.c	FUNCTION_34	CALL_2
0x4001b26	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      1196	ui.c	FUNCTION_34	CALL_2
0x4001b29	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1196	ui.c	FUNCTION_34	CALL_2
0x4001b2c	          0x8b75f8	                mov esi, dword [rbp - 8]	      1196	ui.c	FUNCTION_34	CALL_2
0x4001b2f	          0x8b45fc	                mov eax, dword [rbp - 4]	      1196	ui.c	FUNCTION_34	CALL_2
0x4001b32	          0x4189f8	                            mov r8d, edi	      1196	ui.c	FUNCTION_34	CALL_2
0x4001b35	            0x89c7	                            mov edi, eax	      1196	ui.c	FUNCTION_34	CALL_2
0x4001b37	      0xe800000000	                          call 0x4001b3c	      1196	ui.c	FUNCTION_34	CALL_2
0x4001b3c	              0x90	                                     nop	      1197	ui.c	FUNCTION_34
0x4001b3d	              0xc9	                                   leave	      1197	ui.c	FUNCTION_34
0x4001b3e	              0xc3	                                     ret	      1197	ui.c	FUNCTION_34
clip_gen_request_selection	ELSE,1:FOR,0:functions,0:CALL,3:DO,0:WHILE,0:SWITCH,0:IF,1	17
0x40025a1	              0x55	                                push rbp	      1548	ui.c	FUNCTION_42
0x40025a2	          0x4889e5	                            mov rbp, rsp	      1548	ui.c	FUNCTION_42
0x40025a5	        0x4883ec10	                           sub rsp, 0x10	      1548	ui.c	FUNCTION_42
0x40025a9	        0x48897df8	                mov qword [rbp - 8], rdi	      1548	ui.c	FUNCTION_42
0x40025ad	    0x8b0500000000	            mov eax, dword [0x040025b3] 	      1551	ui.c	FUNCTION_42	IF_1
0x40025b3	            0x85c0	                           test eax, eax	      1551	ui.c	FUNCTION_42	IF_1
0x40025b5	            0x740e	                            je 0x40025c5	      1551	ui.c	FUNCTION_42	IF_1
0x40025b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1552	ui.c	FUNCTION_42	CALL_1
0x40025bb	          0x4889c7	                            mov rdi, rax	      1552	ui.c	FUNCTION_42	CALL_1
0x40025be	      0xe800000000	                          call 0x40025c3	      1552	ui.c	FUNCTION_42	CALL_1
0x40025c3	            0xeb0c	                           jmp 0x40025d1	      1559	ui.c	FUNCTION_42
0x40025c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1555	ui.c	FUNCTION_42	CALL_2
0x40025c9	          0x4889c7	                            mov rdi, rax	      1555	ui.c	FUNCTION_42	CALL_2
0x40025cc	      0xe800000000	                          call 0x40025d1	      1555	ui.c	FUNCTION_42	CALL_2
0x40025d1	              0x90	                                     nop	      1559	ui.c	FUNCTION_42
0x40025d2	              0xc9	                                   leave	      1559	ui.c	FUNCTION_42
0x40025d3	              0xc3	                                     ret	      1559	ui.c	FUNCTION_42
clip_x11_own_selection	ELSE,1:FOR,0:functions,0:CALL,8:DO,0:WHILE,0:SWITCH,0:IF,3	65
0x4003c6c	              0x55	                                push rbp	      2514	ui.c	FUNCTION_71
0x4003c6d	          0x4889e5	                            mov rbp, rsp	      2514	ui.c	FUNCTION_71
0x4003c70	            0x4155	                                push r13	      2514	ui.c	FUNCTION_71
0x4003c72	            0x4154	                                push r12	      2514	ui.c	FUNCTION_71
0x4003c74	              0x53	                                push rbx	      2514	ui.c	FUNCTION_71
0x4003c75	        0x4883ec18	                           sub rsp, 0x18	      2514	ui.c	FUNCTION_71
0x4003c79	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2514	ui.c	FUNCTION_71
0x4003c7d	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2514	ui.c	FUNCTION_71
0x4003c81	    0x8b0500000000	            mov eax, dword [0x04003c87] 	      2520	ui.c	FUNCTION_71	IF_1
0x4003c87	            0x85c0	                           test eax, eax	      2520	ui.c	FUNCTION_71	IF_1
0x4003c89	            0x7447	                            je 0x4003cd2	      2520	ui.c	FUNCTION_71	IF_1
0x4003c8b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003c8f	          0x4889c7	                            mov rdi, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003c92	      0xe800000000	                          call 0x4003c97	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003c97	          0x4889c7	                            mov rdi, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003c9a	      0xe800000000	                          call 0x4003c9f	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003c9f	          0x4889c2	                            mov rdx, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003ca2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003ca6	        0x488b7050	            mov rsi, qword [rax + 0x50] 	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003caa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003cae	    0x41b900000000	                              mov r9d, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003cb4	    0x41b800000000	                              mov r8d, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003cba	      0xb900000000	                              mov ecx, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003cbf	          0x4889c7	                            mov rdi, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003cc2	      0xe800000000	                          call 0x4003cc7	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003cc7	            0x84c0	                             test al, al	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003cc9	            0x7561	                           jne 0x4003d2c	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4003ccb	      0xb800000000	                              mov eax, 0	      2526	ui.c	FUNCTION_71	IF_1	IF_2
0x4003cd0	            0xeb73	                           jmp 0x4003d45	      2526	ui.c	FUNCTION_71	IF_1	IF_2
0x4003cd2	    0x4c8b25000000	            mov r12, qword [0x04003cd9] 	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003cd9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003cdd	        0x488b5850	            mov rbx, qword [rax + 0x50] 	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003ce1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003ce5	          0x4889c7	                            mov rdi, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003ce8	      0xe800000000	                          call 0x4003ced	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003ced	          0x4989c5	                            mov r13, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003cf0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003cf4	          0x4889c7	                            mov rdi, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003cf7	      0xe800000000	                          call 0x4003cfc	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003cfc	            0x6a00	                                  push 0	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003cfe	            0x6a00	                                  push 0	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003d00	    0x41b902000000	                              mov r9d, 2	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003d06	    0x41b820000000	                           mov r8d, 0x20	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003d0c	          0x4c89e1	                            mov rcx, r12	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003d0f	          0x4889da	                            mov rdx, rbx	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003d12	          0x4c89ee	                            mov rsi, r13	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003d15	          0x4889c7	                            mov rdi, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003d18	      0xe800000000	                          call 0x4003d1d	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003d1d	        0x4883c410	                           add rsp, 0x10	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003d21	            0x85c0	                           test eax, eax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003d23	            0x7507	                           jne 0x4003d2c	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4003d25	      0xb800000000	                              mov eax, 0	      2533	ui.c	FUNCTION_71	ELSE_1	IF_3
0x4003d2a	            0xeb19	                           jmp 0x4003d45	      2533	ui.c	FUNCTION_71	ELSE_1	IF_3
0x4003d2c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2536	ui.c	FUNCTION_71	CALL_8
0x4003d30	          0x4889c7	                            mov rdi, rax	      2536	ui.c	FUNCTION_71	CALL_8
0x4003d33	      0xe800000000	                          call 0x4003d38	      2536	ui.c	FUNCTION_71	CALL_8
0x4003d38	          0x4889c7	                            mov rdi, rax	      2536	ui.c	FUNCTION_71	CALL_8
0x4003d3b	      0xe800000000	                          call 0x4003d40	      2536	ui.c	FUNCTION_71	CALL_8
0x4003d40	      0xb801000000	                              mov eax, 1	      2537	ui.c	FUNCTION_71
0x4003d45	        0x488d65e8	                   lea rsp, [rbp - 0x18]	      2538	ui.c	FUNCTION_71
0x4003d49	              0x5b	                                 pop rbx	      2538	ui.c	FUNCTION_71
0x4003d4a	            0x415c	                                 pop r12	      2538	ui.c	FUNCTION_71
0x4003d4c	            0x415d	                                 pop r13	      2538	ui.c	FUNCTION_71
0x4003d4e	              0x5d	                                 pop rbp	      2538	ui.c	FUNCTION_71
0x4003d4f	              0xc3	                                     ret	      2538	ui.c	FUNCTION_71
clip_modeless	ELSE,3:FOR,0:functions,0:CALL,5:DO,0:WHILE,0:SWITCH,0:IF,5	77
0x4000d67	              0x55	                                push rbp	       734	ui.c	FUNCTION_25
0x4000d68	          0x4889e5	                            mov rbp, rsp	       734	ui.c	FUNCTION_25
0x4000d6b	        0x4883ec20	                           sub rsp, 0x20	       734	ui.c	FUNCTION_25
0x4000d6f	          0x897dec	             mov dword [rbp - 0x14], edi	       734	ui.c	FUNCTION_25
0x4000d72	          0x8975e8	             mov dword [rbp - 0x18], esi	       734	ui.c	FUNCTION_25
0x4000d75	          0x8955e4	             mov dword [rbp - 0x1c], edx	       734	ui.c	FUNCTION_25
0x4000d78	     0xfb705000000	           movzx eax, word [0x04000d7f] 	       737	ui.c	FUNCTION_25
0x4000d7f	          0x6685c0	                             test ax, ax	       740	ui.c	FUNCTION_25
0x4000d82	            0x740d	                            je 0x4000d91	       740	ui.c	FUNCTION_25
0x4000d84	     0xfb705000000	           movzx eax, word [0x04000d8b] 	       738	ui.c	FUNCTION_25
0x4000d8b	        0x6683f802	                               cmp ax, 2	       738	ui.c	FUNCTION_25
0x4000d8f	            0x750d	                           jne 0x4000d9e	       738	ui.c	FUNCTION_25
0x4000d91	    0x8b0500000000	            mov eax, dword [0x04000d97] 	       739	ui.c	FUNCTION_25
0x4000d97	          0x83e020	                           and eax, 0x20	       739	ui.c	FUNCTION_25
0x4000d9a	            0x85c0	                           test eax, eax	       739	ui.c	FUNCTION_25
0x4000d9c	            0x751a	                           jne 0x4000db8	       739	ui.c	FUNCTION_25
0x4000d9e	     0xfb705000000	           movzx eax, word [0x04000da5] 	       740	ui.c	FUNCTION_25
0x4000da5	        0x6683f801	                               cmp ax, 1	       740	ui.c	FUNCTION_25
0x4000da9	            0x7514	                           jne 0x4000dbf	       740	ui.c	FUNCTION_25
0x4000dab	    0x8b0500000000	            mov eax, dword [0x04000db1] 	       741	ui.c	FUNCTION_25
0x4000db1	          0x83e040	                           and eax, 0x40	       741	ui.c	FUNCTION_25
0x4000db4	            0x85c0	                           test eax, eax	       741	ui.c	FUNCTION_25
0x4000db6	            0x7407	                            je 0x4000dbf	       741	ui.c	FUNCTION_25
0x4000db8	      0xb801000000	                              mov eax, 1	       740	ui.c	FUNCTION_25
0x4000dbd	            0xeb05	                           jmp 0x4000dc4	       740	ui.c	FUNCTION_25
0x4000dbf	      0xb800000000	                              mov eax, 0	       740	ui.c	FUNCTION_25
0x4000dc4	          0x8945fc	                mov dword [rbp - 4], eax	       737	ui.c	FUNCTION_25
0x4000dc7	        0x837de800	               cmp dword [rbp - 0x18], 0	       742	ui.c	FUNCTION_25	IF_1
0x4000dcb	            0x7447	                            je 0x4000e14	       742	ui.c	FUNCTION_25	IF_1
0x4000dcd	        0x837dec02	               cmp dword [rbp - 0x14], 2	       742	ui.c	FUNCTION_25	IF_1
0x4000dd1	            0x7541	                           jne 0x4000e14	       742	ui.c	FUNCTION_25	IF_1
0x4000dd3	     0xfb705000000	           movzx eax, word [0x04000dda] 	       746	ui.c	FUNCTION_25	IF_1	IF_2
0x4000dda	          0x6685c0	                             test ax, ax	       746	ui.c	FUNCTION_25	IF_1	IF_2
0x4000ddd	            0x751a	                           jne 0x4000df9	       746	ui.c	FUNCTION_25	IF_1	IF_2
0x4000ddf	    0x8b0d00000000	            mov ecx, dword [0x04000de5] 	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4000de5	    0x8b0500000000	            mov eax, dword [0x04000deb] 	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4000deb	      0xba00000000	                              mov edx, 0	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4000df0	            0x89ce	                            mov esi, ecx	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4000df2	            0x89c7	                            mov edi, eax	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4000df4	      0xe800000000	                          call 0x4000df9	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4000df9	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x4000dfc	    0x8b1500000000	            mov edx, dword [0x04000e02] 	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x4000e02	    0x8b3500000000	            mov esi, dword [0x04000e08] 	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x4000e08	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x4000e0b	            0x89c7	                            mov edi, eax	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x4000e0d	      0xe800000000	                          call 0x4000e12	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x4000e12	            0xeb6a	                           jmp 0x4000e7e	       761	ui.c	FUNCTION_25
0x4000e14	        0x837de800	               cmp dword [rbp - 0x18], 0	       750	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4000e18	            0x741a	                            je 0x4000e34	       750	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4000e1a	    0x8b0d00000000	            mov ecx, dword [0x04000e20] 	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4000e20	    0x8b0500000000	            mov eax, dword [0x04000e26] 	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4000e26	          0x8b55fc	                mov edx, dword [rbp - 4]	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4000e29	            0x89ce	                            mov esi, ecx	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4000e2b	            0x89c7	                            mov edi, eax	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4000e2d	      0xe800000000	                          call 0x4000e32	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4000e32	            0xeb4a	                           jmp 0x4000e7e	       761	ui.c	FUNCTION_25
0x4000e34	        0x837de400	               cmp dword [rbp - 0x1c], 0	       752	ui.c	FUNCTION_25	ELSE_2	IF_4
0x4000e38	            0x7427	                            je 0x4000e61	       752	ui.c	FUNCTION_25	ELSE_2	IF_4
0x4000e3a	     0xfb705000000	           movzx eax, word [0x04000e41] 	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0x4000e41	          0x6685c0	                             test ax, ax	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0x4000e44	            0x7438	                            je 0x4000e7e	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0x4000e46	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4000e49	    0x8b1500000000	            mov edx, dword [0x04000e4f] 	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4000e4f	    0x8b3500000000	            mov esi, dword [0x04000e55] 	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4000e55	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4000e58	            0x89c7	                            mov edi, eax	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4000e5a	      0xe800000000	                          call 0x4000e5f	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4000e5f	            0xeb1d	                           jmp 0x4000e7e	       761	ui.c	FUNCTION_25
0x4000e61	    0x8b1500000000	            mov edx, dword [0x04000e67] 	       760	ui.c	FUNCTION_25	CALL_5
0x4000e67	    0x8b0500000000	            mov eax, dword [0x04000e6d] 	       760	ui.c	FUNCTION_25	CALL_5
0x4000e6d	      0xb900000000	                              mov ecx, 0	       760	ui.c	FUNCTION_25	CALL_5
0x4000e72	            0x89c6	                            mov esi, eax	       760	ui.c	FUNCTION_25	CALL_5
0x4000e74	      0xbf03000000	                              mov edi, 3	       760	ui.c	FUNCTION_25	CALL_5
0x4000e79	      0xe800000000	                          call 0x4000e7e	       760	ui.c	FUNCTION_25	CALL_5
0x4000e7e	              0x90	                                     nop	       761	ui.c	FUNCTION_25
0x4000e7f	              0xc9	                                   leave	       761	ui.c	FUNCTION_25
0x4000e80	              0xc3	                                     ret	       761	ui.c	FUNCTION_25
add_to_input_buf	ELSE,0:FOR,0:functions,0:CALL,2:DO,0:WHILE,1:SWITCH,0:IF,3	28
0x4002728	              0x55	                                push rbp	      1697	ui.c	FUNCTION_50
0x4002729	          0x4889e5	                            mov rbp, rsp	      1697	ui.c	FUNCTION_50
0x400272c	        0x48897df8	                mov qword [rbp - 8], rdi	      1697	ui.c	FUNCTION_50
0x4002730	          0x8975f4	              mov dword [rbp - 0xc], esi	      1697	ui.c	FUNCTION_50
0x4002733	    0x8b1500000000	            mov edx, dword [0x04002739] 	      1698	ui.c	FUNCTION_50	IF_1
0x4002739	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1698	ui.c	FUNCTION_50	IF_1
0x400273c	             0x1d0	                            add eax, edx	      1698	ui.c	FUNCTION_50	IF_1
0x400273e	      0x3d06100000	                         cmp eax, 0x1006	      1698	ui.c	FUNCTION_50	IF_1
0x4002743	            0x7f38	                            jg 0x400277d	      1698	ui.c	FUNCTION_50	IF_1
0x4002745	            0xeb27	                           jmp 0x400276e	      1707	ui.c	FUNCTION_50	WHILE_1
0x4002747	    0x8b1500000000	            mov edx, dword [0x0400274d] 	      1708	ui.c	FUNCTION_50	WHILE_1
0x400274d	          0x8d4201	                      lea eax, [rdx + 1]	      1708	ui.c	FUNCTION_50	WHILE_1
0x4002750	    0x890500000000	            mov dword [0x04002756], eax 	      1708	ui.c	FUNCTION_50	WHILE_1
0x4002756	        0x488b45f8	                mov rax, qword [rbp - 8]	      1708	ui.c	FUNCTION_50	WHILE_1
0x400275a	        0x488d4801	                      lea rcx, [rax + 1]	      1708	ui.c	FUNCTION_50	WHILE_1
0x400275e	        0x48894df8	                mov qword [rbp - 8], rcx	      1708	ui.c	FUNCTION_50	WHILE_1
0x4002762	           0xfb608	                   movzx ecx, byte [rax]	      1708	ui.c	FUNCTION_50	WHILE_1
0x4002765	          0x4863c2	                         movsxd rax, edx	      1708	ui.c	FUNCTION_50	WHILE_1
0x4002768	    0x888800000000	                      mov byte [rax], cl	      1708	ui.c	FUNCTION_50	WHILE_1
0x400276e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1707	ui.c	FUNCTION_50	WHILE_1
0x4002771	          0x8d50ff	                      lea edx, [rax - 1]	      1707	ui.c	FUNCTION_50	WHILE_1
0x4002774	          0x8955f4	              mov dword [rbp - 0xc], edx	      1707	ui.c	FUNCTION_50	WHILE_1
0x4002777	            0x85c0	                           test eax, eax	      1707	ui.c	FUNCTION_50	WHILE_1
0x4002779	            0x75cc	                           jne 0x4002747	      1707	ui.c	FUNCTION_50	WHILE_1
0x400277b	            0xeb01	                           jmp 0x400277e	      1707	ui.c	FUNCTION_50	WHILE_1
0x400277d	              0x90	                                     nop	      1699	ui.c	FUNCTION_50	IF_1
0x400277e	              0x5d	                                 pop rbp	      1709	ui.c	FUNCTION_50
0x400277f	              0xc3	                                     ret	      1709	ui.c	FUNCTION_50
read_error_exit	ELSE,0:FOR,0:functions,0:CALL,4:DO,0:WHILE,0:SWITCH,0:IF,1	18
0x4002bf1	              0x55	                                push rbp	      1948	ui.c	FUNCTION_56
0x4002bf2	          0x4889e5	                            mov rbp, rsp	      1948	ui.c	FUNCTION_56
0x4002bf5	    0x8b0500000000	            mov eax, dword [0x04002bfb] 	      1949	ui.c	FUNCTION_56	IF_1
0x4002bfb	            0x85c0	                           test eax, eax	      1949	ui.c	FUNCTION_56	IF_1
0x4002bfd	            0x740a	                            je 0x4002c09	      1949	ui.c	FUNCTION_56	IF_1
0x4002bff	      0xbf00000000	                              mov edi, 0	      1950	ui.c	FUNCTION_56	CALL_1
0x4002c04	      0xe800000000	                          call 0x4002c09	      1950	ui.c	FUNCTION_56	CALL_1
0x4002c09	      0xbf00000000	                              mov edi, 0	      1951	ui.c	FUNCTION_56	CALL_3
0x4002c0e	      0xe800000000	                          call 0x4002c13	      1951	ui.c	FUNCTION_56	CALL_3
0x4002c13	          0x4889c2	                            mov rdx, rax	      1951	ui.c	FUNCTION_56	CALL_3
0x4002c16	    0x488b05000000	            mov rax, qword [0x04002c1d] 	      1951	ui.c	FUNCTION_56	CALL_3
0x4002c1d	          0x4889d6	                            mov rsi, rdx	      1951	ui.c	FUNCTION_56	CALL_3
0x4002c20	          0x4889c7	                            mov rdi, rax	      1951	ui.c	FUNCTION_56	CALL_3
0x4002c23	      0xe800000000	                          call 0x4002c28	      1951	ui.c	FUNCTION_56	CALL_3
0x4002c28	      0xe800000000	                          call 0x4002c2d	      1952	ui.c	FUNCTION_56	CALL_4
0x4002c2d	              0x90	                                     nop	      1953	ui.c	FUNCTION_56
0x4002c2e	              0x5d	                                 pop rbp	      1953	ui.c	FUNCTION_56
0x4002c2f	              0xc3	                                     ret	      1953	ui.c	FUNCTION_56
ui_focus_change	ELSE,2:FOR,0:functions,0:CALL,12:DO,0:WHILE,0:SWITCH,0:IF,8	94
0x400511c	              0x55	                                push rbp	      3287	ui.c	FUNCTION_80
0x400511d	          0x4889e5	                            mov rbp, rsp	      3287	ui.c	FUNCTION_80
0x4005120	              0x53	                                push rbx	      3287	ui.c	FUNCTION_80
0x4005121	        0x4883ec28	                           sub rsp, 0x28	      3287	ui.c	FUNCTION_80
0x4005125	          0x897ddc	             mov dword [rbp - 0x24], edi	      3287	ui.c	FUNCTION_80
0x4005128	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3289	ui.c	FUNCTION_80
0x400512f	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4005133	            0x743b	                            je 0x4005170	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4005135	    0x488b05000000	            mov rax, qword [0x0400513c] 	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x400513c	        0x488d5802	                      lea rbx, [rax + 2]	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4005140	      0xbf00000000	                              mov edi, 0	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4005145	      0xe800000000	                          call 0x400514a	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x400514a	          0x4839c3	                            cmp rbx, rax	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x400514d	            0x7d21	                           jge 0x4005170	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x400514f	    0x8b0500000000	            mov eax, dword [0x04005155] 	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x4005155	            0x89c7	                            mov edi, eax	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x4005157	      0xe800000000	                          call 0x400515c	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x400515c	          0x8945ec	             mov dword [rbp - 0x14], eax	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x400515f	      0xbf00000000	                              mov edi, 0	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4005164	      0xe800000000	                          call 0x4005169	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4005169	    0x488905000000	            mov qword [0x04005170], rax 	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4005170	    0x488b05000000	            mov rax, qword [0x04005177] 	      3309	ui.c	FUNCTION_80	CALL_4
0x4005177	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3309	ui.c	FUNCTION_80	CALL_4
0x400517b	            0x7407	                            je 0x4005184	      3309	ui.c	FUNCTION_80	CALL_4
0x400517d	      0xbf34000000	                           mov edi, 0x34	      3309	ui.c	FUNCTION_80	CALL_4
0x4005182	            0xeb05	                           jmp 0x4005189	      3309	ui.c	FUNCTION_80	CALL_4
0x4005184	      0xbf35000000	                           mov edi, 0x35	      3309	ui.c	FUNCTION_80	CALL_4
0x4005189	          0x4989c0	                             mov r8, rax	      3309	ui.c	FUNCTION_80	CALL_4
0x400518c	      0xb900000000	                              mov ecx, 0	      3309	ui.c	FUNCTION_80	CALL_4
0x4005191	      0xba00000000	                              mov edx, 0	      3309	ui.c	FUNCTION_80	CALL_4
0x4005196	      0xbe00000000	                              mov esi, 0	      3309	ui.c	FUNCTION_80	CALL_4
0x400519b	      0xe800000000	                          call 0x40051a0	      3309	ui.c	FUNCTION_80	CALL_4
0x40051a0	           0x945ec	              or dword [rbp - 0x14], eax	      3309	ui.c	FUNCTION_80	CALL_4
0x40051a3	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3312	ui.c	FUNCTION_80	IF_2
0x40051a7	     0xf84ce000000	                            je 0x400527b	      3312	ui.c	FUNCTION_80	IF_2
0x40051ad	    0xc70500000000	               mov dword [0x040051b7], 0	      3316	ui.c	FUNCTION_80	IF_2
0x40051b7	    0x8b0500000000	            mov eax, dword [0x040051bd] 	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x40051bd	          0x83e008	                              and eax, 8	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x40051c0	            0x85c0	                           test eax, eax	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x40051c2	            0x740a	                            je 0x40051ce	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x40051c4	      0xe800000000	                          call 0x40051c9	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x40051c9	      0xe985000000	                           jmp 0x4005253	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x40051ce	    0x8b0500000000	            mov eax, dword [0x040051d4] 	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40051d4	      0x3d01020000	                          cmp eax, 0x201	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40051d9	            0x743e	                            je 0x4005219	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40051db	    0x8b0500000000	            mov eax, dword [0x040051e1] 	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40051e1	      0x3d00040000	                          cmp eax, 0x400	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40051e6	            0x7431	                            je 0x4005219	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40051e8	    0x8b0500000000	            mov eax, dword [0x040051ee] 	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40051ee	      0x3d00030000	                          cmp eax, 0x300	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40051f3	            0x7424	                            je 0x4005219	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40051f5	    0x8b0500000000	            mov eax, dword [0x040051fb] 	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40051fb	      0x3d00060000	                          cmp eax, 0x600	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4005200	            0x7417	                            je 0x4005219	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4005202	    0x8b0500000000	            mov eax, dword [0x04005208] 	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4005208	      0x3d00080000	                          cmp eax, 0x800	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400520d	            0x740a	                            je 0x4005219	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400520f	    0x8b0500000000	            mov eax, dword [0x04005215] 	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4005215	            0x85c0	                           test eax, eax	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4005217	            0x7407	                            je 0x4005220	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4005219	      0xe800000000	                          call 0x400521e	      3322	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400521e	            0xeb33	                           jmp 0x4005253	      3322	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4005220	    0x8b0500000000	            mov eax, dword [0x04005226] 	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x4005226	          0x83e001	                              and eax, 1	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x4005229	            0x85c0	                           test eax, eax	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x400522b	            0x750d	                           jne 0x400523a	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x400522d	    0x8b0500000000	            mov eax, dword [0x04005233] 	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x4005233	          0x83e010	                           and eax, 0x10	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x4005236	            0x85c0	                           test eax, eax	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x4005238	            0x7419	                            je 0x4005253	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x400523a	    0x8b0500000000	            mov eax, dword [0x04005240] 	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x4005240	            0x85c0	                           test eax, eax	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x4005242	            0x740a	                            je 0x400524e	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x4005244	      0xbf00000000	                              mov edi, 0	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
0x4005249	      0xe800000000	                          call 0x400524e	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
0x400524e	      0xe800000000	                          call 0x4005253	      3327	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_8
0x4005253	      0xe800000000	                          call 0x4005258	      3329	ui.c	FUNCTION_80	IF_2	CALL_9
0x4005258	      0xbe01000000	                              mov esi, 1	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x400525d	      0xbf00000000	                              mov edi, 0	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x4005262	      0xe800000000	                          call 0x4005267	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x4005267	    0x8b0500000000	            mov eax, dword [0x0400526d] 	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x400526d	            0x85c0	                           test eax, eax	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x400526f	            0x740a	                            je 0x400527b	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x4005271	      0xbf00000000	                              mov edi, 0	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x4005276	      0xe800000000	                          call 0x400527b	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x400527b	    0x8b0500000000	            mov eax, dword [0x04005281] 	      3338	ui.c	FUNCTION_80	IF_8
0x4005281	            0x85c0	                           test eax, eax	      3338	ui.c	FUNCTION_80	IF_8
0x4005283	            0x7405	                            je 0x400528a	      3338	ui.c	FUNCTION_80	IF_8
0x4005285	      0xe800000000	                          call 0x400528a	      3339	ui.c	FUNCTION_80	CALL_12
0x400528a	              0x90	                                     nop	      3341	ui.c	FUNCTION_80
0x400528b	        0x4883c428	                           add rsp, 0x28	      3341	ui.c	FUNCTION_80
0x400528f	              0x5b	                                 pop rbx	      3341	ui.c	FUNCTION_80
0x4005290	              0x5d	                                 pop rbp	      3341	ui.c	FUNCTION_80
0x4005291	              0xc3	                                     ret	      3341	ui.c	FUNCTION_80
clip_x11_lose_ownership_cb	ELSE,1:FOR,0:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0:IF,1	18
0x4003bdc	              0x55	                                push rbp	      2492	ui.c	FUNCTION_68
0x4003bdd	          0x4889e5	                            mov rbp, rsp	      2492	ui.c	FUNCTION_68
0x4003be0	        0x4883ec10	                           sub rsp, 0x10	      2492	ui.c	FUNCTION_68
0x4003be4	        0x48897df8	                mov qword [rbp - 8], rdi	      2492	ui.c	FUNCTION_68
0x4003be8	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2492	ui.c	FUNCTION_68
0x4003bec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2493	ui.c	FUNCTION_68	IF_1
0x4003bf0	          0x488b10	                    mov rdx, qword [rax]	      2493	ui.c	FUNCTION_68	IF_1
0x4003bf3	    0x488b05000000	            mov rax, qword [0x04003bfa] 	      2493	ui.c	FUNCTION_68	IF_1
0x4003bfa	          0x4839c2	                            cmp rdx, rax	      2493	ui.c	FUNCTION_68	IF_1
0x4003bfd	            0x750c	                           jne 0x4003c0b	      2493	ui.c	FUNCTION_68	IF_1
0x4003bff	      0xbf00000000	                              mov edi, 0	      2494	ui.c	FUNCTION_68	CALL_1
0x4003c04	      0xe800000000	                          call 0x4003c09	      2494	ui.c	FUNCTION_68	CALL_1
0x4003c09	            0xeb0a	                           jmp 0x4003c15	      2497	ui.c	FUNCTION_68
0x4003c0b	      0xbf00000000	                              mov edi, 0	      2496	ui.c	FUNCTION_68	CALL_2
0x4003c10	      0xe800000000	                          call 0x4003c15	      2496	ui.c	FUNCTION_68	CALL_2
0x4003c15	              0x90	                                     nop	      2497	ui.c	FUNCTION_68
0x4003c16	              0xc9	                                   leave	      2497	ui.c	FUNCTION_68
0x4003c17	              0xc3	                                     ret	      2497	ui.c	FUNCTION_68
end_global_changes	ELSE,0:FOR,0:functions,0:CALL,4:DO,0:WHILE,0:SWITCH,0:IF,5	39
0x4000c2a	              0x55	                                push rbp	       642	ui.c	FUNCTION_21
0x4000c2b	          0x4889e5	                            mov rbp, rsp	       642	ui.c	FUNCTION_21
0x4000c2e	    0x8b0500000000	            mov eax, dword [0x04000c34] 	       643	ui.c	FUNCTION_21	IF_1
0x4000c34	          0x83e801	                              sub eax, 1	       643	ui.c	FUNCTION_21	IF_1
0x4000c37	    0x890500000000	            mov dword [0x04000c3d], eax 	       643	ui.c	FUNCTION_21	IF_1
0x4000c3d	    0x8b0500000000	            mov eax, dword [0x04000c43] 	       643	ui.c	FUNCTION_21	IF_1
0x4000c43	            0x85c0	                           test eax, eax	       643	ui.c	FUNCTION_21	IF_1
0x4000c45	     0xf8f82000000	                            jg 0x4000ccd	       643	ui.c	FUNCTION_21	IF_1
0x4000c4b	    0x8b0500000000	            mov eax, dword [0x04000c51] 	       646	ui.c	FUNCTION_21	IF_2
0x4000c51	            0x85c0	                           test eax, eax	       646	ui.c	FUNCTION_21	IF_2
0x4000c53	            0x756c	                           jne 0x4000cc1	       646	ui.c	FUNCTION_21	IF_2
0x4000c55	    0xc70500000000	               mov dword [0x04000c5f], 1	       648	ui.c	FUNCTION_21	IF_2
0x4000c5f	    0x8b0500000000	            mov eax, dword [0x04000c65] 	       649	ui.c	FUNCTION_21	IF_2
0x4000c65	    0x890500000000	            mov dword [0x04000c6b], eax 	       649	ui.c	FUNCTION_21	IF_2
0x4000c6b	    0xc70500000000	               mov dword [0x04000c75], 0	       650	ui.c	FUNCTION_21	IF_2
0x4000c75	    0x8b0500000000	            mov eax, dword [0x04000c7b] 	       651	ui.c	FUNCTION_21	IF_2	IF_3
0x4000c7b	            0x85c0	                           test eax, eax	       651	ui.c	FUNCTION_21	IF_2	IF_3
0x4000c7d	            0x7442	                            je 0x4000cc1	       651	ui.c	FUNCTION_21	IF_2	IF_3
0x4000c7f	    0x8b0500000000	            mov eax, dword [0x04000c85] 	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4000c85	          0x83e001	                              and eax, 1	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4000c88	            0x85c0	                           test eax, eax	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4000c8a	            0x7414	                            je 0x4000ca0	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4000c8c	      0xbf00000000	                              mov edi, 0	       657	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_1
0x4000c91	      0xe800000000	                          call 0x4000c96	       657	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_1
0x4000c96	      0xbf00000000	                              mov edi, 0	       658	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_2
0x4000c9b	      0xe800000000	                          call 0x4000ca0	       658	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_2
0x4000ca0	    0x8b0500000000	            mov eax, dword [0x04000ca6] 	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0x4000ca6	          0x83e002	                              and eax, 2	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0x4000ca9	            0x85c0	                           test eax, eax	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0x4000cab	            0x7414	                            je 0x4000cc1	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0x4000cad	      0xbf00000000	                              mov edi, 0	       662	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_3
0x4000cb2	      0xe800000000	                          call 0x4000cb7	       662	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_3
0x4000cb7	      0xbf00000000	                              mov edi, 0	       663	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_4
0x4000cbc	      0xe800000000	                          call 0x4000cc1	       663	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_4
0x4000cc1	    0xc70500000000	               mov dword [0x04000ccb], 0	       667	ui.c	FUNCTION_21
0x4000ccb	            0xeb01	                           jmp 0x4000cce	       667	ui.c	FUNCTION_21
0x4000ccd	              0x90	                                     nop	       645	ui.c	FUNCTION_21	IF_1
0x4000cce	              0x5d	                                 pop rbp	       668	ui.c	FUNCTION_21
0x4000ccf	              0xc3	                                     ret	       668	ui.c	FUNCTION_21
ui_get_shellsize	ELSE,1:FOR,0:functions,0:CALL,5:DO,0:WHILE,0:SWITCH,0:IF,2	25
0x4000614	              0x55	                                push rbp	       337	ui.c	FUNCTION_9
0x4000615	          0x4889e5	                            mov rbp, rsp	       337	ui.c	FUNCTION_9
0x4000618	        0x4883ec10	                           sub rsp, 0x10	       337	ui.c	FUNCTION_9
0x400061c	    0x8b0500000000	            mov eax, dword [0x04000622] 	       341	ui.c	FUNCTION_9	IF_1
0x4000622	            0x85c0	                           test eax, eax	       341	ui.c	FUNCTION_9	IF_1
0x4000624	            0x740a	                            je 0x4000630	       341	ui.c	FUNCTION_9	IF_1
0x4000626	      0xe800000000	                          call 0x400062b	       342	ui.c	FUNCTION_9	CALL_1
0x400062b	          0x8945fc	                mov dword [rbp - 4], eax	       342	ui.c	FUNCTION_9	CALL_1
0x400062e	            0xeb08	                           jmp 0x4000638	       342	ui.c	FUNCTION_9	CALL_1
0x4000630	      0xe800000000	                          call 0x4000635	       345	ui.c	FUNCTION_9	CALL_2
0x4000635	          0x8945fc	                mov dword [rbp - 4], eax	       345	ui.c	FUNCTION_9	CALL_2
0x4000638	      0xe800000000	                          call 0x400063d	       347	ui.c	FUNCTION_9	CALL_3
0x400063d	        0x837dfc01	                  cmp dword [rbp - 4], 1	       350	ui.c	FUNCTION_9	IF_2
0x4000641	            0x7528	                           jne 0x400066b	       350	ui.c	FUNCTION_9	IF_2
0x4000643	    0x488b05000000	            mov rax, qword [0x0400064a] 	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x400064a	          0x4889c6	                            mov rsi, rax	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x400064d	      0xbf00000000	                              mov edi, 0	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x4000652	      0xe800000000	                          call 0x4000657	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x4000657	    0x488b05000000	            mov rax, qword [0x0400065e] 	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x400065e	          0x4889c6	                            mov rsi, rax	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x4000661	      0xbf00000000	                              mov edi, 0	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x4000666	      0xe800000000	                          call 0x400066b	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x400066b	          0x8b45fc	                mov eax, dword [rbp - 4]	       355	ui.c	FUNCTION_9
0x400066e	              0xc9	                                   leave	       356	ui.c	FUNCTION_9
0x400066f	              0xc3	                                     ret	       356	ui.c	FUNCTION_9
vim_used_in_input_buf	ELSE,0:FOR,0:functions,0:CALL,0:DO,0:WHILE,0:SWITCH,0:IF,0	5
0x4002631	              0x55	                                push rbp	      1641	ui.c	FUNCTION_47
0x4002632	          0x4889e5	                            mov rbp, rsp	      1641	ui.c	FUNCTION_47
0x4002635	    0x8b0500000000	            mov eax, dword [0x0400263b] 	      1642	ui.c	FUNCTION_47
0x400263b	              0x5d	                                 pop rbp	      1643	ui.c	FUNCTION_47
0x400263c	              0xc3	                                     ret	      1643	ui.c	FUNCTION_47
