setpenattr_bool	ELSE,0:WHILE,0:SWITCH,0:CALL,1:DO,0:FOR,0:functions,0:IF,0	25
0x40003c6	              0x55	                                push rbp	       123	pen.c	FUNCTION_5
0x40003c7	          0x4889e5	                            mov rbp, rsp	       123	pen.c	FUNCTION_5
0x40003ca	        0x4883ec20	                           sub rsp, 0x20	       123	pen.c	FUNCTION_5
0x40003ce	        0x48897de8	             mov qword [rbp - 0x18], rdi	       123	pen.c	FUNCTION_5
0x40003d2	          0x8975e4	             mov dword [rbp - 0x1c], esi	       123	pen.c	FUNCTION_5
0x40003d5	          0x8955e0	             mov dword [rbp - 0x20], edx	       123	pen.c	FUNCTION_5
0x40003d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       123	pen.c	FUNCTION_5
0x40003e1	        0x488945f8	                mov qword [rbp - 8], rax	       123	pen.c	FUNCTION_5
0x40003e5	            0x31c0	                            xor eax, eax	       123	pen.c	FUNCTION_5
0x40003e7	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       125	pen.c	FUNCTION_5
0x40003ea	          0x8945f0	             mov dword [rbp - 0x10], eax	       125	pen.c	FUNCTION_5
0x40003ed	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       126	pen.c	FUNCTION_5	CALL_1
0x40003f1	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       126	pen.c	FUNCTION_5	CALL_1
0x40003f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       126	pen.c	FUNCTION_5	CALL_1
0x40003f8	          0x4889d1	                            mov rcx, rdx	       126	pen.c	FUNCTION_5	CALL_1
0x40003fb	      0xba01000000	                              mov edx, 1	       126	pen.c	FUNCTION_5	CALL_1
0x4000400	          0x4889c7	                            mov rdi, rax	       126	pen.c	FUNCTION_5	CALL_1
0x4000403	      0xe868ffffff	                     call sym.setpenattr	       126	pen.c	FUNCTION_5	CALL_1
0x4000408	              0x90	                                     nop	       127	pen.c	FUNCTION_5
0x4000409	        0x488b45f8	                mov rax, qword [rbp - 8]	       127	pen.c	FUNCTION_5
0x400040d	    0x644833042528	                xor rax, qword fs:[0x28]	       127	pen.c	FUNCTION_5
0x4000416	            0x7405	                            je 0x400041d	       127	pen.c	FUNCTION_5
0x4000418	      0xe800000000	                          call 0x400041d	       127	pen.c	FUNCTION_5
0x400041d	              0xc9	                                   leave	       127	pen.c	FUNCTION_5
0x400041e	              0xc3	                                     ret	       127	pen.c	FUNCTION_5
vterm_state_set_default_colors	ELSE,0:WHILE,0:SWITCH,0:CALL,0:DO,0:FOR,0:functions,0:IF,0	16
0x400099c	              0x55	                                push rbp	       214	pen.c	FUNCTION_14
0x400099d	          0x4889e5	                            mov rbp, rsp	       214	pen.c	FUNCTION_14
0x40009a0	        0x48897df8	                mov qword [rbp - 8], rdi	       214	pen.c	FUNCTION_14
0x40009a4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       214	pen.c	FUNCTION_14
0x40009a8	        0x488955e8	             mov qword [rbp - 0x18], rdx	       214	pen.c	FUNCTION_14
0x40009ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       215	pen.c	FUNCTION_14
0x40009b0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       215	pen.c	FUNCTION_14
0x40009b4	            0x8b12	                    mov edx, dword [rdx]	       215	pen.c	FUNCTION_14
0x40009b6	    0x899028010000	            mov dword [rax + 0x128], edx	       215	pen.c	FUNCTION_14
0x40009bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	pen.c	FUNCTION_14
0x40009c0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       216	pen.c	FUNCTION_14
0x40009c4	            0x8b12	                    mov edx, dword [rdx]	       216	pen.c	FUNCTION_14
0x40009c6	    0x89902c010000	            mov dword [rax + 0x12c], edx	       216	pen.c	FUNCTION_14
0x40009cc	              0x90	                                     nop	       217	pen.c	FUNCTION_14
0x40009cd	              0x5d	                                 pop rbp	       217	pen.c	FUNCTION_14
0x40009ce	              0xc3	                                     ret	       217	pen.c	FUNCTION_14
vterm_state_getpen	ELSE,6:WHILE,0:SWITCH,0:CALL,0:DO,0:FOR,0:functions,0:IF,18	434
0x4001299	              0x55	                                push rbp	       398	pen.c	FUNCTION_18
0x400129a	          0x4889e5	                            mov rbp, rsp	       398	pen.c	FUNCTION_18
0x400129d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       398	pen.c	FUNCTION_18
0x40012a1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       398	pen.c	FUNCTION_18
0x40012a5	          0x8955dc	             mov dword [rbp - 0x24], edx	       398	pen.c	FUNCTION_18
0x40012a8	    0xc745fc000000	                  mov dword [rbp - 4], 0	       399	pen.c	FUNCTION_18
0x40012af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       401	pen.c	FUNCTION_18	IF_1
0x40012b3	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       401	pen.c	FUNCTION_18	IF_1
0x40012ba	          0x83e001	                              and eax, 1	       401	pen.c	FUNCTION_18	IF_1
0x40012bd	            0x84c0	                             test al, al	       401	pen.c	FUNCTION_18	IF_1
0x40012bf	            0x7421	                            je 0x40012e2	       401	pen.c	FUNCTION_18	IF_1
0x40012c1	          0x8b45fc	                mov eax, dword [rbp - 4]	       402	pen.c	FUNCTION_18	IF_1
0x40012c4	          0x8d5001	                      lea edx, [rax + 1]	       402	pen.c	FUNCTION_18	IF_1
0x40012c7	          0x8955fc	                mov dword [rbp - 4], edx	       402	pen.c	FUNCTION_18	IF_1
0x40012ca	            0x4898	                                    cdqe	       402	pen.c	FUNCTION_18	IF_1
0x40012cc	    0x488d14c50000	                        lea rdx, [rax*8]	       402	pen.c	FUNCTION_18	IF_1
0x40012d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       402	pen.c	FUNCTION_18	IF_1
0x40012d8	          0x4801d0	                            add rax, rdx	       402	pen.c	FUNCTION_18	IF_1
0x40012db	    0x48c700010000	                      mov qword [rax], 1	       402	pen.c	FUNCTION_18	IF_1
0x40012e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       404	pen.c	FUNCTION_18	IF_2
0x40012e6	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       404	pen.c	FUNCTION_18	IF_2
0x40012ed	          0x83e008	                              and eax, 8	       404	pen.c	FUNCTION_18	IF_2
0x40012f0	            0x84c0	                             test al, al	       404	pen.c	FUNCTION_18	IF_2
0x40012f2	            0x7421	                            je 0x4001315	       404	pen.c	FUNCTION_18	IF_2
0x40012f4	          0x8b45fc	                mov eax, dword [rbp - 4]	       405	pen.c	FUNCTION_18	IF_2
0x40012f7	          0x8d5001	                      lea edx, [rax + 1]	       405	pen.c	FUNCTION_18	IF_2
0x40012fa	          0x8955fc	                mov dword [rbp - 4], edx	       405	pen.c	FUNCTION_18	IF_2
0x40012fd	            0x4898	                                    cdqe	       405	pen.c	FUNCTION_18	IF_2
0x40012ff	    0x488d14c50000	                        lea rdx, [rax*8]	       405	pen.c	FUNCTION_18	IF_2
0x4001307	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       405	pen.c	FUNCTION_18	IF_2
0x400130b	          0x4801d0	                            add rax, rdx	       405	pen.c	FUNCTION_18	IF_2
0x400130e	    0x48c700030000	                      mov qword [rax], 3	       405	pen.c	FUNCTION_18	IF_2
0x4001315	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	pen.c	FUNCTION_18	IF_3
0x4001319	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       407	pen.c	FUNCTION_18	IF_3
0x4001320	          0x83e006	                              and eax, 6	       407	pen.c	FUNCTION_18	IF_3
0x4001323	            0x3c02	                               cmp al, 2	       407	pen.c	FUNCTION_18	IF_3
0x4001325	            0x7521	                           jne 0x4001348	       407	pen.c	FUNCTION_18	IF_3
0x4001327	          0x8b45fc	                mov eax, dword [rbp - 4]	       408	pen.c	FUNCTION_18	IF_3
0x400132a	          0x8d5001	                      lea edx, [rax + 1]	       408	pen.c	FUNCTION_18	IF_3
0x400132d	          0x8955fc	                mov dword [rbp - 4], edx	       408	pen.c	FUNCTION_18	IF_3
0x4001330	            0x4898	                                    cdqe	       408	pen.c	FUNCTION_18	IF_3
0x4001332	    0x488d14c50000	                        lea rdx, [rax*8]	       408	pen.c	FUNCTION_18	IF_3
0x400133a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       408	pen.c	FUNCTION_18	IF_3
0x400133e	          0x4801d0	                            add rax, rdx	       408	pen.c	FUNCTION_18	IF_3
0x4001341	    0x48c700040000	                      mov qword [rax], 4	       408	pen.c	FUNCTION_18	IF_3
0x4001348	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       410	pen.c	FUNCTION_18	IF_4
0x400134c	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       410	pen.c	FUNCTION_18	IF_4
0x4001353	          0x83e010	                           and eax, 0x10	       410	pen.c	FUNCTION_18	IF_4
0x4001356	            0x84c0	                             test al, al	       410	pen.c	FUNCTION_18	IF_4
0x4001358	            0x7421	                            je 0x400137b	       410	pen.c	FUNCTION_18	IF_4
0x400135a	          0x8b45fc	                mov eax, dword [rbp - 4]	       411	pen.c	FUNCTION_18	IF_4
0x400135d	          0x8d5001	                      lea edx, [rax + 1]	       411	pen.c	FUNCTION_18	IF_4
0x4001360	          0x8955fc	                mov dword [rbp - 4], edx	       411	pen.c	FUNCTION_18	IF_4
0x4001363	            0x4898	                                    cdqe	       411	pen.c	FUNCTION_18	IF_4
0x4001365	    0x488d14c50000	                        lea rdx, [rax*8]	       411	pen.c	FUNCTION_18	IF_4
0x400136d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       411	pen.c	FUNCTION_18	IF_4
0x4001371	          0x4801d0	                            add rax, rdx	       411	pen.c	FUNCTION_18	IF_4
0x4001374	    0x48c700050000	                      mov qword [rax], 5	       411	pen.c	FUNCTION_18	IF_4
0x400137b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	pen.c	FUNCTION_18	IF_5
0x400137f	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       413	pen.c	FUNCTION_18	IF_5
0x4001386	          0x83e020	                           and eax, 0x20	       413	pen.c	FUNCTION_18	IF_5
0x4001389	            0x84c0	                             test al, al	       413	pen.c	FUNCTION_18	IF_5
0x400138b	            0x7421	                            je 0x40013ae	       413	pen.c	FUNCTION_18	IF_5
0x400138d	          0x8b45fc	                mov eax, dword [rbp - 4]	       414	pen.c	FUNCTION_18	IF_5
0x4001390	          0x8d5001	                      lea edx, [rax + 1]	       414	pen.c	FUNCTION_18	IF_5
0x4001393	          0x8955fc	                mov dword [rbp - 4], edx	       414	pen.c	FUNCTION_18	IF_5
0x4001396	            0x4898	                                    cdqe	       414	pen.c	FUNCTION_18	IF_5
0x4001398	    0x488d14c50000	                        lea rdx, [rax*8]	       414	pen.c	FUNCTION_18	IF_5
0x40013a0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       414	pen.c	FUNCTION_18	IF_5
0x40013a4	          0x4801d0	                            add rax, rdx	       414	pen.c	FUNCTION_18	IF_5
0x40013a7	    0x48c700070000	                      mov qword [rax], 7	       414	pen.c	FUNCTION_18	IF_5
0x40013ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       416	pen.c	FUNCTION_18	IF_6
0x40013b2	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       416	pen.c	FUNCTION_18	IF_6
0x40013b9	          0x83e040	                           and eax, 0x40	       416	pen.c	FUNCTION_18	IF_6
0x40013bc	            0x84c0	                             test al, al	       416	pen.c	FUNCTION_18	IF_6
0x40013be	            0x7421	                            je 0x40013e1	       416	pen.c	FUNCTION_18	IF_6
0x40013c0	          0x8b45fc	                mov eax, dword [rbp - 4]	       417	pen.c	FUNCTION_18	IF_6
0x40013c3	          0x8d5001	                      lea edx, [rax + 1]	       417	pen.c	FUNCTION_18	IF_6
0x40013c6	          0x8955fc	                mov dword [rbp - 4], edx	       417	pen.c	FUNCTION_18	IF_6
0x40013c9	            0x4898	                                    cdqe	       417	pen.c	FUNCTION_18	IF_6
0x40013cb	    0x488d14c50000	                        lea rdx, [rax*8]	       417	pen.c	FUNCTION_18	IF_6
0x40013d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       417	pen.c	FUNCTION_18	IF_6
0x40013d7	          0x4801d0	                            add rax, rdx	       417	pen.c	FUNCTION_18	IF_6
0x40013da	    0x48c700090000	                      mov qword [rax], 9	       417	pen.c	FUNCTION_18	IF_6
0x40013e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       419	pen.c	FUNCTION_18	IF_7
0x40013e5	     0xfb780240100	          movzx eax, word [rax + 0x124] 	       419	pen.c	FUNCTION_18	IF_7
0x40013ec	        0x66258007	                           and ax, 0x780	       419	pen.c	FUNCTION_18	IF_7
0x40013f0	          0x6685c0	                             test ax, ax	       419	pen.c	FUNCTION_18	IF_7
0x40013f3	            0x7437	                            je 0x400142c	       419	pen.c	FUNCTION_18	IF_7
0x40013f5	          0x8b45fc	                mov eax, dword [rbp - 4]	       420	pen.c	FUNCTION_18	IF_7
0x40013f8	          0x8d5001	                      lea edx, [rax + 1]	       420	pen.c	FUNCTION_18	IF_7
0x40013fb	          0x8955fc	                mov dword [rbp - 4], edx	       420	pen.c	FUNCTION_18	IF_7
0x40013fe	            0x4898	                                    cdqe	       420	pen.c	FUNCTION_18	IF_7
0x4001400	    0x488d14c50000	                        lea rdx, [rax*8]	       420	pen.c	FUNCTION_18	IF_7
0x4001408	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       420	pen.c	FUNCTION_18	IF_7
0x400140c	          0x4801c2	                            add rdx, rax	       420	pen.c	FUNCTION_18	IF_7
0x400140f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       420	pen.c	FUNCTION_18	IF_7
0x4001413	     0xfb780240100	          movzx eax, word [rax + 0x124] 	       420	pen.c	FUNCTION_18	IF_7
0x400141a	        0x66c1e807	                               shr ax, 7	       420	pen.c	FUNCTION_18	IF_7
0x400141e	          0x83e00f	                            and eax, 0xf	       420	pen.c	FUNCTION_18	IF_7
0x4001421	           0xfb6c0	                           movzx eax, al	       420	pen.c	FUNCTION_18	IF_7
0x4001424	          0x83c00a	                            add eax, 0xa	       420	pen.c	FUNCTION_18	IF_7
0x4001427	            0x4898	                                    cdqe	       420	pen.c	FUNCTION_18	IF_7
0x4001429	          0x488902	                    mov qword [rdx], rax	       420	pen.c	FUNCTION_18	IF_7
0x400142c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       422	pen.c	FUNCTION_18	IF_8
0x4001430	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       422	pen.c	FUNCTION_18	IF_8
0x4001437	          0x83e006	                              and eax, 6	       422	pen.c	FUNCTION_18	IF_8
0x400143a	            0x3c04	                               cmp al, 4	       422	pen.c	FUNCTION_18	IF_8
0x400143c	            0x7521	                           jne 0x400145f	       422	pen.c	FUNCTION_18	IF_8
0x400143e	          0x8b45fc	                mov eax, dword [rbp - 4]	       423	pen.c	FUNCTION_18	IF_8
0x4001441	          0x8d5001	                      lea edx, [rax + 1]	       423	pen.c	FUNCTION_18	IF_8
0x4001444	          0x8955fc	                mov dword [rbp - 4], edx	       423	pen.c	FUNCTION_18	IF_8
0x4001447	            0x4898	                                    cdqe	       423	pen.c	FUNCTION_18	IF_8
0x4001449	    0x488d14c50000	                        lea rdx, [rax*8]	       423	pen.c	FUNCTION_18	IF_8
0x4001451	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       423	pen.c	FUNCTION_18	IF_8
0x4001455	          0x4801d0	                            add rax, rdx	       423	pen.c	FUNCTION_18	IF_8
0x4001458	    0x48c700150000	                   mov qword [rax], 0x15	       423	pen.c	FUNCTION_18	IF_8
0x400145f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       425	pen.c	FUNCTION_18	IF_9
0x4001463	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       425	pen.c	FUNCTION_18	IF_9
0x4001469	            0x85c0	                           test eax, eax	       425	pen.c	FUNCTION_18	IF_9
0x400146b	            0x7840	                            js 0x40014ad	       425	pen.c	FUNCTION_18	IF_9
0x400146d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       425	pen.c	FUNCTION_18	IF_9
0x4001471	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       425	pen.c	FUNCTION_18	IF_9
0x4001477	          0x83f807	                              cmp eax, 7	       425	pen.c	FUNCTION_18	IF_9
0x400147a	            0x7f31	                            jg 0x40014ad	       425	pen.c	FUNCTION_18	IF_9
0x400147c	          0x8b45fc	                mov eax, dword [rbp - 4]	       426	pen.c	FUNCTION_18	IF_9
0x400147f	          0x8d5001	                      lea edx, [rax + 1]	       426	pen.c	FUNCTION_18	IF_9
0x4001482	          0x8955fc	                mov dword [rbp - 4], edx	       426	pen.c	FUNCTION_18	IF_9
0x4001485	            0x4898	                                    cdqe	       426	pen.c	FUNCTION_18	IF_9
0x4001487	    0x488d14c50000	                        lea rdx, [rax*8]	       426	pen.c	FUNCTION_18	IF_9
0x400148f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       426	pen.c	FUNCTION_18	IF_9
0x4001493	          0x4801c2	                            add rdx, rax	       426	pen.c	FUNCTION_18	IF_9
0x4001496	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       426	pen.c	FUNCTION_18	IF_9
0x400149a	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       426	pen.c	FUNCTION_18	IF_9
0x40014a0	          0x83c01e	                           add eax, 0x1e	       426	pen.c	FUNCTION_18	IF_9
0x40014a3	            0x4898	                                    cdqe	       426	pen.c	FUNCTION_18	IF_9
0x40014a5	          0x488902	                    mov qword [rdx], rax	       426	pen.c	FUNCTION_18	IF_9
0x40014a8	      0xe91d020000	                           jmp 0x40016ca	       426	pen.c	FUNCTION_18	IF_9
0x40014ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014b1	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014b7	          0x83f807	                              cmp eax, 7	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014ba	            0x7e40	                           jle 0x40014fc	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014c0	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014c6	          0x83f80f	                            cmp eax, 0xf	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014c9	            0x7f31	                            jg 0x40014fc	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014cb	          0x8b45fc	                mov eax, dword [rbp - 4]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014ce	          0x8d5001	                      lea edx, [rax + 1]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014d1	          0x8955fc	                mov dword [rbp - 4], edx	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014d4	            0x4898	                                    cdqe	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014d6	    0x488d14c50000	                        lea rdx, [rax*8]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014e2	          0x4801c2	                            add rdx, rax	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014e9	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014ef	          0x83c052	                           add eax, 0x52	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014f2	            0x4898	                                    cdqe	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014f4	          0x488902	                    mov qword [rdx], rax	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014f7	      0xe9ce010000	                           jmp 0x40016ca	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x40014fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001500	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001506	          0x83f80f	                            cmp eax, 0xf	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001509	     0xf8e83000000	                           jle 0x4001592	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400150f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001513	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001519	      0x3dff000000	                           cmp eax, 0xff	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400151e	            0x7f72	                            jg 0x4001592	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001520	          0x8b45fc	                mov eax, dword [rbp - 4]	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001523	          0x8d5001	                      lea edx, [rax + 1]	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001526	          0x8955fc	                mov dword [rbp - 4], edx	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001529	            0x4898	                                    cdqe	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400152b	    0x488d14c50000	                        lea rdx, [rax*8]	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001533	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001537	          0x4801d0	                            add rax, rdx	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400153a	      0xb926000080	                     mov ecx, 0x80000026	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400153f	          0x488908	                    mov qword [rax], rcx	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001542	          0x8b45fc	                mov eax, dword [rbp - 4]	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001545	          0x8d5001	                      lea edx, [rax + 1]	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001548	          0x8955fc	                mov dword [rbp - 4], edx	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400154b	            0x4898	                                    cdqe	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400154d	    0x488d14c50000	                        lea rdx, [rax*8]	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001555	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001559	          0x4801d0	                            add rax, rdx	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400155c	      0xbe05000080	                     mov esi, 0x80000005	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001561	          0x488930	                    mov qword [rax], rsi	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001564	          0x8b45fc	                mov eax, dword [rbp - 4]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001567	          0x8d5001	                      lea edx, [rax + 1]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400156a	          0x8955fc	                mov dword [rbp - 4], edx	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400156d	            0x4898	                                    cdqe	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400156f	    0x488d14c50000	                        lea rdx, [rax*8]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001577	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400157b	          0x4801c2	                            add rdx, rax	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400157e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001582	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001588	            0x4898	                                    cdqe	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400158a	          0x488902	                    mov qword [rdx], rax	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400158d	      0xe938010000	                           jmp 0x40016ca	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001592	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x4001596	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x400159c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x400159f	     0xf8525010000	                           jne 0x40016ca	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x40015a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015a9	     0xfb6901c0100	          movzx edx, byte [rax + 0x11c] 	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015b4	     0xfb680280100	          movzx eax, byte [rax + 0x128] 	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015bb	            0x38c2	                              cmp dl, al	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015bd	            0x7538	                           jne 0x40015f7	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015c3	     0xfb6901d0100	          movzx edx, byte [rax + 0x11d] 	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015ce	     0xfb680290100	          movzx eax, byte [rax + 0x129] 	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015d5	            0x38c2	                              cmp dl, al	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015d7	            0x751e	                           jne 0x40015f7	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       438	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015dd	     0xfb6901e0100	          movzx edx, byte [rax + 0x11e] 	       438	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       438	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015e8	     0xfb6802a0100	          movzx eax, byte [rax + 0x12a] 	       438	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015ef	            0x38c2	                              cmp dl, al	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015f1	     0xf84d3000000	                            je 0x40016ca	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015f7	          0x8b45fc	                mov eax, dword [rbp - 4]	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015fa	          0x8d5001	                      lea edx, [rax + 1]	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40015fd	          0x8955fc	                mov dword [rbp - 4], edx	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001600	            0x4898	                                    cdqe	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001602	    0x488d14c50000	                        lea rdx, [rax*8]	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400160a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400160e	          0x4801d0	                            add rax, rdx	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001611	      0xbf26000080	                     mov edi, 0x80000026	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001616	          0x488938	                    mov qword [rax], rdi	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001619	          0x8b45fc	                mov eax, dword [rbp - 4]	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400161c	          0x8d5001	                      lea edx, [rax + 1]	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400161f	          0x8955fc	                mov dword [rbp - 4], edx	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001622	            0x4898	                                    cdqe	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001624	    0x488d14c50000	                        lea rdx, [rax*8]	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400162c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001630	          0x4801d0	                            add rax, rdx	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001633	      0xb902000080	                     mov ecx, 0x80000002	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001638	          0x488908	                    mov qword [rax], rcx	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400163b	          0x8b45fc	                mov eax, dword [rbp - 4]	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400163e	          0x8d5001	                      lea edx, [rax + 1]	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001641	          0x8955fc	                mov dword [rbp - 4], edx	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001644	            0x4898	                                    cdqe	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001646	    0x488d14c50000	                        lea rdx, [rax*8]	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400164e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001652	          0x4801c2	                            add rdx, rax	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001655	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001659	     0xfb6801c0100	          movzx eax, byte [rax + 0x11c] 	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001660	           0xfb6c0	                           movzx eax, al	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001663	       0xd00000080	                      or eax, 0x80000000	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001668	            0x89c0	                            mov eax, eax	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400166a	          0x488902	                    mov qword [rdx], rax	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400166d	          0x8b45fc	                mov eax, dword [rbp - 4]	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001670	          0x8d5001	                      lea edx, [rax + 1]	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001673	          0x8955fc	                mov dword [rbp - 4], edx	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001676	            0x4898	                                    cdqe	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001678	    0x488d14c50000	                        lea rdx, [rax*8]	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001680	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001684	          0x4801c2	                            add rdx, rax	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001687	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400168b	     0xfb6801d0100	          movzx eax, byte [rax + 0x11d] 	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001692	           0xfb6c0	                           movzx eax, al	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001695	       0xd00000080	                      or eax, 0x80000000	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400169a	            0x89c0	                            mov eax, eax	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400169c	          0x488902	                    mov qword [rdx], rax	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400169f	          0x8b45fc	                mov eax, dword [rbp - 4]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40016a2	          0x8d5001	                      lea edx, [rax + 1]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40016a5	          0x8955fc	                mov dword [rbp - 4], edx	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40016a8	            0x4898	                                    cdqe	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40016aa	    0x488d14c50000	                        lea rdx, [rax*8]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40016b2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40016b6	          0x4801c2	                            add rdx, rax	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40016b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40016bd	     0xfb6801e0100	          movzx eax, byte [rax + 0x11e] 	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40016c4	           0xfb6c0	                           movzx eax, al	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40016c7	          0x488902	                    mov qword [rdx], rax	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x40016ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	pen.c	FUNCTION_18	IF_14
0x40016ce	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       447	pen.c	FUNCTION_18	IF_14
0x40016d4	            0x85c0	                           test eax, eax	       447	pen.c	FUNCTION_18	IF_14
0x40016d6	            0x7840	                            js 0x4001718	       447	pen.c	FUNCTION_18	IF_14
0x40016d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	pen.c	FUNCTION_18	IF_14
0x40016dc	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       447	pen.c	FUNCTION_18	IF_14
0x40016e2	          0x83f807	                              cmp eax, 7	       447	pen.c	FUNCTION_18	IF_14
0x40016e5	            0x7f31	                            jg 0x4001718	       447	pen.c	FUNCTION_18	IF_14
0x40016e7	          0x8b45fc	                mov eax, dword [rbp - 4]	       448	pen.c	FUNCTION_18	IF_14
0x40016ea	          0x8d5001	                      lea edx, [rax + 1]	       448	pen.c	FUNCTION_18	IF_14
0x40016ed	          0x8955fc	                mov dword [rbp - 4], edx	       448	pen.c	FUNCTION_18	IF_14
0x40016f0	            0x4898	                                    cdqe	       448	pen.c	FUNCTION_18	IF_14
0x40016f2	    0x488d14c50000	                        lea rdx, [rax*8]	       448	pen.c	FUNCTION_18	IF_14
0x40016fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       448	pen.c	FUNCTION_18	IF_14
0x40016fe	          0x4801c2	                            add rdx, rax	       448	pen.c	FUNCTION_18	IF_14
0x4001701	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	pen.c	FUNCTION_18	IF_14
0x4001705	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       448	pen.c	FUNCTION_18	IF_14
0x400170b	          0x83c028	                           add eax, 0x28	       448	pen.c	FUNCTION_18	IF_14
0x400170e	            0x4898	                                    cdqe	       448	pen.c	FUNCTION_18	IF_14
0x4001710	          0x488902	                    mov qword [rdx], rax	       448	pen.c	FUNCTION_18	IF_14
0x4001713	      0xe91d020000	                           jmp 0x4001935	       448	pen.c	FUNCTION_18	IF_14
0x4001718	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x400171c	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001722	          0x83f807	                              cmp eax, 7	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001725	            0x7e40	                           jle 0x4001767	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001727	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x400172b	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001731	          0x83f80f	                            cmp eax, 0xf	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001734	            0x7f31	                            jg 0x4001767	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001736	          0x8b45fc	                mov eax, dword [rbp - 4]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001739	          0x8d5001	                      lea edx, [rax + 1]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x400173c	          0x8955fc	                mov dword [rbp - 4], edx	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x400173f	            0x4898	                                    cdqe	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001741	    0x488d14c50000	                        lea rdx, [rax*8]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001749	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x400174d	          0x4801c2	                            add rdx, rax	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001750	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001754	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x400175a	          0x83c05c	                           add eax, 0x5c	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x400175d	            0x4898	                                    cdqe	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x400175f	          0x488902	                    mov qword [rdx], rax	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001762	      0xe9ce010000	                           jmp 0x4001935	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001767	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400176b	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001771	          0x83f80f	                            cmp eax, 0xf	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001774	     0xf8e83000000	                           jle 0x40017fd	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400177a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400177e	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001784	      0x3dff000000	                           cmp eax, 0xff	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001789	            0x7f72	                            jg 0x40017fd	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400178b	          0x8b45fc	                mov eax, dword [rbp - 4]	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400178e	          0x8d5001	                      lea edx, [rax + 1]	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001791	          0x8955fc	                mov dword [rbp - 4], edx	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001794	            0x4898	                                    cdqe	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001796	    0x488d14c50000	                        lea rdx, [rax*8]	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400179e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017a2	          0x4801d0	                            add rax, rdx	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017a5	      0xbe30000080	                     mov esi, 0x80000030	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017aa	          0x488930	                    mov qword [rax], rsi	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017ad	          0x8b45fc	                mov eax, dword [rbp - 4]	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017b0	          0x8d5001	                      lea edx, [rax + 1]	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017b3	          0x8955fc	                mov dword [rbp - 4], edx	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017b6	            0x4898	                                    cdqe	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017b8	    0x488d14c50000	                        lea rdx, [rax*8]	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017c0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017c4	          0x4801d0	                            add rax, rdx	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017c7	      0xbf05000080	                     mov edi, 0x80000005	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017cc	          0x488938	                    mov qword [rax], rdi	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017cf	          0x8b45fc	                mov eax, dword [rbp - 4]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017d2	          0x8d5001	                      lea edx, [rax + 1]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017d5	          0x8955fc	                mov dword [rbp - 4], edx	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017d8	            0x4898	                                    cdqe	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017da	    0x488d14c50000	                        lea rdx, [rax*8]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017e6	          0x4801c2	                            add rdx, rax	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017ed	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017f3	            0x4898	                                    cdqe	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017f5	          0x488902	                    mov qword [rdx], rax	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017f8	      0xe938010000	                           jmp 0x4001935	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40017fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x4001801	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x4001807	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x400180a	     0xf8525010000	                           jne 0x4001935	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x4001810	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001814	     0xfb690200100	          movzx edx, byte [rax + 0x120] 	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400181b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400181f	     0xfb6802c0100	          movzx eax, byte [rax + 0x12c] 	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001826	            0x38c2	                              cmp dl, al	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001828	            0x7538	                           jne 0x4001862	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400182a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400182e	     0xfb690210100	          movzx edx, byte [rax + 0x121] 	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001835	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001839	     0xfb6802d0100	          movzx eax, byte [rax + 0x12d] 	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001840	            0x38c2	                              cmp dl, al	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001842	            0x751e	                           jne 0x4001862	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001844	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       460	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001848	     0xfb690220100	          movzx edx, byte [rax + 0x122] 	       460	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400184f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       460	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001853	     0xfb6802e0100	          movzx eax, byte [rax + 0x12e] 	       460	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400185a	            0x38c2	                              cmp dl, al	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400185c	     0xf84d3000000	                            je 0x4001935	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001862	          0x8b45fc	                mov eax, dword [rbp - 4]	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001865	          0x8d5001	                      lea edx, [rax + 1]	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001868	          0x8955fc	                mov dword [rbp - 4], edx	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400186b	            0x4898	                                    cdqe	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400186d	    0x488d14c50000	                        lea rdx, [rax*8]	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001875	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001879	          0x4801d0	                            add rax, rdx	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400187c	      0xb930000080	                     mov ecx, 0x80000030	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001881	          0x488908	                    mov qword [rax], rcx	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001884	          0x8b45fc	                mov eax, dword [rbp - 4]	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001887	          0x8d5001	                      lea edx, [rax + 1]	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400188a	          0x8955fc	                mov dword [rbp - 4], edx	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400188d	            0x4898	                                    cdqe	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400188f	    0x488d14c50000	                        lea rdx, [rax*8]	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001897	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400189b	          0x4801d0	                            add rax, rdx	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400189e	      0xbe02000080	                     mov esi, 0x80000002	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018a3	          0x488930	                    mov qword [rax], rsi	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018a6	          0x8b45fc	                mov eax, dword [rbp - 4]	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018a9	          0x8d5001	                      lea edx, [rax + 1]	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018ac	          0x8955fc	                mov dword [rbp - 4], edx	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018af	            0x4898	                                    cdqe	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018b1	    0x488d14c50000	                        lea rdx, [rax*8]	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018b9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018bd	          0x4801c2	                            add rdx, rax	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018c4	     0xfb680200100	          movzx eax, byte [rax + 0x120] 	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018cb	           0xfb6c0	                           movzx eax, al	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018ce	       0xd00000080	                      or eax, 0x80000000	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018d3	            0x89c0	                            mov eax, eax	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018d5	          0x488902	                    mov qword [rdx], rax	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018d8	          0x8b45fc	                mov eax, dword [rbp - 4]	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018db	          0x8d5001	                      lea edx, [rax + 1]	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018de	          0x8955fc	                mov dword [rbp - 4], edx	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018e1	            0x4898	                                    cdqe	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018e3	    0x488d14c50000	                        lea rdx, [rax*8]	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018eb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018ef	          0x4801c2	                            add rdx, rax	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018f6	     0xfb680210100	          movzx eax, byte [rax + 0x121] 	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40018fd	           0xfb6c0	                           movzx eax, al	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001900	       0xd00000080	                      or eax, 0x80000000	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001905	            0x89c0	                            mov eax, eax	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001907	          0x488902	                    mov qword [rdx], rax	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400190a	          0x8b45fc	                mov eax, dword [rbp - 4]	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400190d	          0x8d5001	                      lea edx, [rax + 1]	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001910	          0x8955fc	                mov dword [rbp - 4], edx	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001913	            0x4898	                                    cdqe	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001915	    0x488d14c50000	                        lea rdx, [rax*8]	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400191d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001921	          0x4801c2	                            add rdx, rax	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001924	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001928	     0xfb680220100	          movzx eax, byte [rax + 0x122] 	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400192f	           0xfb6c0	                           movzx eax, al	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001932	          0x488902	                    mov qword [rdx], rax	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001935	          0x8b45fc	                mov eax, dword [rbp - 4]	       469	pen.c	FUNCTION_18
0x4001938	              0x5d	                                 pop rbp	       470	pen.c	FUNCTION_18
0x4001939	              0xc3	                                     ret	       470	pen.c	FUNCTION_18
vterm_state_savepen	ELSE,1:WHILE,0:SWITCH,0:CALL,9:DO,0:FOR,0:functions,0:IF,1	97
0x40007a3	              0x55	                                push rbp	       183	pen.c	FUNCTION_11
0x40007a4	          0x4889e5	                            mov rbp, rsp	       183	pen.c	FUNCTION_11
0x40007a7	        0x4883ec10	                           sub rsp, 0x10	       183	pen.c	FUNCTION_11
0x40007ab	        0x48897df8	                mov qword [rbp - 8], rdi	       183	pen.c	FUNCTION_11
0x40007af	          0x8975f4	              mov dword [rbp - 0xc], esi	       183	pen.c	FUNCTION_11
0x40007b2	        0x837df400	                cmp dword [rbp - 0xc], 0	       184	pen.c	FUNCTION_11	IF_1
0x40007b6	            0x7427	                            je 0x40007df	       184	pen.c	FUNCTION_11	IF_1
0x40007b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	pen.c	FUNCTION_11	IF_1
0x40007bc	        0x488b55f8	                mov rdx, qword [rbp - 8]	       185	pen.c	FUNCTION_11	IF_1
0x40007c0	    0x488b8a1c0100	           mov rcx, qword [rdx + 0x11c] 	       185	pen.c	FUNCTION_11	IF_1
0x40007c7	    0x488988880100	            mov qword [rax + 0x188], rcx	       185	pen.c	FUNCTION_11	IF_1
0x40007ce	    0x8b9224010000	           mov edx, dword [rdx + 0x124] 	       185	pen.c	FUNCTION_11	IF_1
0x40007d4	    0x899090010000	            mov dword [rax + 0x190], edx	       185	pen.c	FUNCTION_11	IF_1
0x40007da	      0xe958010000	                           jmp 0x4000937	       200	pen.c	FUNCTION_11
0x40007df	        0x488b45f8	                mov rax, qword [rbp - 8]	       188	pen.c	FUNCTION_11	ELSE_1
0x40007e3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       188	pen.c	FUNCTION_11	ELSE_1
0x40007e7	    0x488b8a880100	           mov rcx, qword [rdx + 0x188] 	       188	pen.c	FUNCTION_11	ELSE_1
0x40007ee	    0x4889881c0100	            mov qword [rax + 0x11c], rcx	       188	pen.c	FUNCTION_11	ELSE_1
0x40007f5	    0x8b9290010000	           mov edx, dword [rdx + 0x190] 	       188	pen.c	FUNCTION_11	ELSE_1
0x40007fb	    0x899024010000	            mov dword [rax + 0x124], edx	       188	pen.c	FUNCTION_11	ELSE_1
0x4000801	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x4000805	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x400080c	          0x83e001	                              and eax, 1	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x400080f	           0xfb6d0	                           movzx edx, al	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x4000812	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x4000816	      0xbe01000000	                              mov esi, 1	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x400081b	          0x4889c7	                            mov rdi, rax	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x400081e	      0xe8a3fbffff	                call sym.setpenattr_bool	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x4000823	        0x488b45f8	                mov rax, qword [rbp - 8]	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000827	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x400082e	            0xd0e8	                               shr al, 1	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000830	          0x83e003	                              and eax, 3	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000833	           0xfb6d0	                           movzx edx, al	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000836	        0x488b45f8	                mov rax, qword [rbp - 8]	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x400083a	      0xbe02000000	                              mov esi, 2	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x400083f	          0x4889c7	                            mov rdi, rax	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000842	      0xe8d8fbffff	                 call sym.setpenattr_int	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000847	        0x488b45f8	                mov rax, qword [rbp - 8]	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x400084b	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000852	          0xc0e803	                               shr al, 3	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000855	          0x83e001	                              and eax, 1	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000858	           0xfb6d0	                           movzx edx, al	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x400085b	        0x488b45f8	                mov rax, qword [rbp - 8]	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x400085f	      0xbe03000000	                              mov esi, 3	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000864	          0x4889c7	                            mov rdi, rax	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000867	      0xe85afbffff	                call sym.setpenattr_bool	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x400086c	        0x488b45f8	                mov rax, qword [rbp - 8]	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x4000870	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x4000877	          0xc0e804	                               shr al, 4	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x400087a	          0x83e001	                              and eax, 1	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x400087d	           0xfb6d0	                           movzx edx, al	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x4000880	        0x488b45f8	                mov rax, qword [rbp - 8]	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x4000884	      0xbe04000000	                              mov esi, 4	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x4000889	          0x4889c7	                            mov rdi, rax	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x400088c	      0xe835fbffff	                call sym.setpenattr_bool	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x4000891	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x4000895	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x400089c	          0xc0e805	                               shr al, 5	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x400089f	          0x83e001	                              and eax, 1	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40008a2	           0xfb6d0	                           movzx edx, al	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40008a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40008a9	      0xbe05000000	                              mov esi, 5	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40008ae	          0x4889c7	                            mov rdi, rax	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40008b1	      0xe810fbffff	                call sym.setpenattr_bool	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40008b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008ba	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008c1	          0xc0e806	                               shr al, 6	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008c4	          0x83e001	                              and eax, 1	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008c7	           0xfb6d0	                           movzx edx, al	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008ce	      0xbe06000000	                              mov esi, 6	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008d3	          0x4889c7	                            mov rdi, rax	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008d6	      0xe8ebfaffff	                call sym.setpenattr_bool	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008db	        0x488b45f8	                mov rax, qword [rbp - 8]	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40008df	     0xfb780240100	          movzx eax, word [rax + 0x124] 	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40008e6	        0x66c1e807	                               shr ax, 7	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40008ea	          0x83e00f	                            and eax, 0xf	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40008ed	           0xfb6d0	                           movzx edx, al	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40008f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40008f4	      0xbe07000000	                              mov esi, 7	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40008f9	          0x4889c7	                            mov rdi, rax	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40008fc	      0xe81efbffff	                 call sym.setpenattr_int	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x4000901	        0x488b45f8	                mov rax, qword [rbp - 8]	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x4000905	    0x8b901c010000	           mov edx, dword [rax + 0x11c] 	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x400090b	        0x488b45f8	                mov rax, qword [rbp - 8]	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x400090f	      0xbe08000000	                              mov esi, 8	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x4000914	          0x4889c7	                            mov rdi, rax	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x4000917	      0xe85cfbffff	                 call sym.setpenattr_col	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x400091c	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x4000920	    0x8b9020010000	           mov edx, dword [rax + 0x120] 	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x4000926	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x400092a	      0xbe09000000	                              mov esi, 9	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x400092f	          0x4889c7	                            mov rdi, rax	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x4000932	      0xe841fbffff	                 call sym.setpenattr_col	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x4000937	              0x90	                                     nop	       200	pen.c	FUNCTION_11
0x4000938	              0xc9	                                   leave	       200	pen.c	FUNCTION_11
0x4000939	              0xc3	                                     ret	       200	pen.c	FUNCTION_11
vterm_state_newpen	ELSE,0:WHILE,0:SWITCH,0:CALL,0:DO,0:FOR,1:functions,0:IF,0	43
0x4000535	              0x55	                                push rbp	       153	pen.c	FUNCTION_9
0x4000536	          0x4889e5	                            mov rbp, rsp	       153	pen.c	FUNCTION_9
0x4000539	        0x48897de8	             mov qword [rbp - 0x18], rdi	       153	pen.c	FUNCTION_9
0x400053d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	pen.c	FUNCTION_9
0x4000541	    0xc6802a010000	           mov byte [rax + 0x12a], 0xf0 	       157	pen.c	FUNCTION_9
0x4000548	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	pen.c	FUNCTION_9
0x400054c	     0xfb6902a0100	          movzx edx, byte [rax + 0x12a] 	       157	pen.c	FUNCTION_9
0x4000553	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	pen.c	FUNCTION_9
0x4000557	    0x889029010000	              mov byte [rax + 0x129], dl	       157	pen.c	FUNCTION_9
0x400055d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	pen.c	FUNCTION_9
0x4000561	     0xfb690290100	          movzx edx, byte [rax + 0x129] 	       157	pen.c	FUNCTION_9
0x4000568	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	pen.c	FUNCTION_9
0x400056c	    0x889028010000	              mov byte [rax + 0x128], dl	       157	pen.c	FUNCTION_9
0x4000572	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       158	pen.c	FUNCTION_9
0x4000576	    0xc6802b010000	               mov byte [rax + 0x12b], 0	       158	pen.c	FUNCTION_9
0x400057d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	pen.c	FUNCTION_9
0x4000581	    0xc6802e010000	               mov byte [rax + 0x12e], 0	       159	pen.c	FUNCTION_9
0x4000588	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	pen.c	FUNCTION_9
0x400058c	     0xfb6902e0100	          movzx edx, byte [rax + 0x12e] 	       159	pen.c	FUNCTION_9
0x4000593	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	pen.c	FUNCTION_9
0x4000597	    0x88902d010000	              mov byte [rax + 0x12d], dl	       159	pen.c	FUNCTION_9
0x400059d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	pen.c	FUNCTION_9
0x40005a1	     0xfb6902d0100	          movzx edx, byte [rax + 0x12d] 	       159	pen.c	FUNCTION_9
0x40005a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	pen.c	FUNCTION_9
0x40005ac	    0x88902c010000	              mov byte [rax + 0x12c], dl	       159	pen.c	FUNCTION_9
0x40005b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	pen.c	FUNCTION_9
0x40005b6	    0xc6802f010000	               mov byte [rax + 0x12f], 0	       160	pen.c	FUNCTION_9
0x40005bd	    0xc745fc000000	                  mov dword [rbp - 4], 0	       162	pen.c	FUNCTION_9	FOR_1
0x40005c4	            0xeb22	                           jmp 0x40005e8	       162	pen.c	FUNCTION_9	FOR_1
0x40005c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	pen.c	FUNCTION_9	FOR_1
0x40005ca	          0x8b55fc	                mov edx, dword [rbp - 4]	       163	pen.c	FUNCTION_9	FOR_1
0x40005cd	          0x4863d2	                         movsxd rdx, edx	       163	pen.c	FUNCTION_9	FOR_1
0x40005d0	        0x488d4a4c	                   lea rcx, [rdx + 0x4c]	       163	pen.c	FUNCTION_9	FOR_1
0x40005d4	          0x8b55fc	                mov edx, dword [rbp - 4]	       163	pen.c	FUNCTION_9	FOR_1
0x40005d7	          0x4863d2	                         movsxd rdx, edx	       163	pen.c	FUNCTION_9	FOR_1
0x40005da	    0x8b1495000000	                  mov edx, dword [rdx*4]	       163	pen.c	FUNCTION_9	FOR_1
0x40005e1	          0x891488	            mov dword [rax + rcx*4], edx	       163	pen.c	FUNCTION_9	FOR_1
0x40005e4	        0x8345fc01	                  add dword [rbp - 4], 1	       162	pen.c	FUNCTION_9	FOR_1
0x40005e8	        0x837dfc0f	                cmp dword [rbp - 4], 0xf	       162	pen.c	FUNCTION_9	FOR_1
0x40005ec	            0x7ed8	                           jle 0x40005c6	       162	pen.c	FUNCTION_9	FOR_1
0x40005ee	              0x90	                                     nop	       164	pen.c	FUNCTION_9
0x40005ef	              0x5d	                                 pop rbp	       164	pen.c	FUNCTION_9
0x40005f0	              0xc3	                                     ret	       164	pen.c	FUNCTION_9
setpenattr_col	ELSE,0:WHILE,0:SWITCH,0:CALL,1:DO,0:FOR,0:functions,0:IF,0	25
0x4000478	              0x55	                                push rbp	       137	pen.c	FUNCTION_7
0x4000479	          0x4889e5	                            mov rbp, rsp	       137	pen.c	FUNCTION_7
0x400047c	        0x4883ec20	                           sub rsp, 0x20	       137	pen.c	FUNCTION_7
0x4000480	        0x48897de8	             mov qword [rbp - 0x18], rdi	       137	pen.c	FUNCTION_7
0x4000484	          0x8975e4	             mov dword [rbp - 0x1c], esi	       137	pen.c	FUNCTION_7
0x4000487	          0x8955e0	             mov dword [rbp - 0x20], edx	       137	pen.c	FUNCTION_7
0x400048a	    0x64488b042528	                mov rax, qword fs:[0x28]	       137	pen.c	FUNCTION_7
0x4000493	        0x488945f8	                mov qword [rbp - 8], rax	       137	pen.c	FUNCTION_7
0x4000497	            0x31c0	                            xor eax, eax	       137	pen.c	FUNCTION_7
0x4000499	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       139	pen.c	FUNCTION_7
0x400049c	          0x8945f0	             mov dword [rbp - 0x10], eax	       139	pen.c	FUNCTION_7
0x400049f	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       140	pen.c	FUNCTION_7	CALL_1
0x40004a3	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       140	pen.c	FUNCTION_7	CALL_1
0x40004a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	pen.c	FUNCTION_7	CALL_1
0x40004aa	          0x4889d1	                            mov rcx, rdx	       140	pen.c	FUNCTION_7	CALL_1
0x40004ad	      0xba04000000	                              mov edx, 4	       140	pen.c	FUNCTION_7	CALL_1
0x40004b2	          0x4889c7	                            mov rdi, rax	       140	pen.c	FUNCTION_7	CALL_1
0x40004b5	      0xe8b6feffff	                     call sym.setpenattr	       140	pen.c	FUNCTION_7	CALL_1
0x40004ba	              0x90	                                     nop	       141	pen.c	FUNCTION_7
0x40004bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	pen.c	FUNCTION_7
0x40004bf	    0x644833042528	                xor rax, qword fs:[0x28]	       141	pen.c	FUNCTION_7
0x40004c8	            0x7405	                            je 0x40004cf	       141	pen.c	FUNCTION_7
0x40004ca	      0xe800000000	                          call 0x40004cf	       141	pen.c	FUNCTION_7
0x40004cf	              0xc9	                                   leave	       141	pen.c	FUNCTION_7
0x40004d0	              0xc3	                                     ret	       141	pen.c	FUNCTION_7
vterm_state_set_palette_color	ELSE,0:WHILE,0:SWITCH,0:CALL,0:DO,0:FOR,0:functions,0:IF,1	26
0x40009cf	              0x55	                                push rbp	       220	pen.c	FUNCTION_15
0x40009d0	          0x4889e5	                            mov rbp, rsp	       220	pen.c	FUNCTION_15
0x40009d3	        0x48897df8	                mov qword [rbp - 8], rdi	       220	pen.c	FUNCTION_15
0x40009d7	          0x8975f4	              mov dword [rbp - 0xc], esi	       220	pen.c	FUNCTION_15
0x40009da	        0x488955e8	             mov qword [rbp - 0x18], rdx	       220	pen.c	FUNCTION_15
0x40009de	        0x837df400	                cmp dword [rbp - 0xc], 0	       221	pen.c	FUNCTION_15	IF_1
0x40009e2	            0x7835	                            js 0x4000a19	       221	pen.c	FUNCTION_15	IF_1
0x40009e4	        0x837df40f	              cmp dword [rbp - 0xc], 0xf	       221	pen.c	FUNCTION_15	IF_1
0x40009e8	            0x7f2f	                            jg 0x4000a19	       221	pen.c	FUNCTION_15	IF_1
0x40009ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	pen.c	FUNCTION_15	IF_1
0x40009ee	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       223	pen.c	FUNCTION_15	IF_1
0x40009f1	          0x4863d2	                         movsxd rdx, edx	       223	pen.c	FUNCTION_15	IF_1
0x40009f4	        0x488d4a4c	                   lea rcx, [rdx + 0x4c]	       223	pen.c	FUNCTION_15	IF_1
0x40009f8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       223	pen.c	FUNCTION_15	IF_1
0x40009fc	            0x8b12	                    mov edx, dword [rdx]	       223	pen.c	FUNCTION_15	IF_1
0x40009fe	          0x891488	            mov dword [rax + rcx*4], edx	       223	pen.c	FUNCTION_15	IF_1
0x4000a01	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       224	pen.c	FUNCTION_15	IF_1
0x4000a04	          0x8d4801	                      lea ecx, [rax + 1]	       224	pen.c	FUNCTION_15	IF_1
0x4000a07	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	pen.c	FUNCTION_15	IF_1
0x4000a0b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       224	pen.c	FUNCTION_15	IF_1
0x4000a0e	          0x4863d2	                         movsxd rdx, edx	       224	pen.c	FUNCTION_15	IF_1
0x4000a11	        0x4883c24c	                           add rdx, 0x4c	       224	pen.c	FUNCTION_15	IF_1
0x4000a15	        0x884c9003	          mov byte [rax + rdx*4 + 3], cl	       224	pen.c	FUNCTION_15	IF_1
0x4000a19	              0x90	                                     nop	       226	pen.c	FUNCTION_15
0x4000a1a	              0x5d	                                 pop rbp	       226	pen.c	FUNCTION_15
0x4000a1b	              0xc3	                                     ret	       226	pen.c	FUNCTION_15
lookup_colour	ELSE,0:WHILE,0:SWITCH,1:CALL,7:DO,0:FOR,0:functions,0:IF,2	81
0x4000255	              0x55	                                push rbp	        80	pen.c	FUNCTION_3
0x4000256	          0x4889e5	                            mov rbp, rsp	        80	pen.c	FUNCTION_3
0x4000259	        0x4883ec28	                           sub rsp, 0x28	        80	pen.c	FUNCTION_3
0x400025d	        0x48897df8	                mov qword [rbp - 8], rdi	        80	pen.c	FUNCTION_3
0x4000261	          0x8975f4	              mov dword [rbp - 0xc], esi	        80	pen.c	FUNCTION_3
0x4000264	        0x488955e8	             mov qword [rbp - 0x18], rdx	        80	pen.c	FUNCTION_3
0x4000268	          0x894df0	             mov dword [rbp - 0x10], ecx	        80	pen.c	FUNCTION_3
0x400026b	        0x4c8945e0	              mov qword [rbp - 0x20], r8	        80	pen.c	FUNCTION_3
0x400026f	        0x4c894dd8	              mov qword [rbp - 0x28], r9	        80	pen.c	FUNCTION_3
0x4000273	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        81	pen.c	FUNCTION_3	SWITCH_1
0x4000276	          0x83f802	                              cmp eax, 2	        81	pen.c	FUNCTION_3	SWITCH_1
0x4000279	            0x740a	                            je 0x4000285	        81	pen.c	FUNCTION_3	SWITCH_1
0x400027b	          0x83f805	                              cmp eax, 5	        81	pen.c	FUNCTION_3	SWITCH_1
0x400027e	            0x745c	                            je 0x40002dc	        81	pen.c	FUNCTION_3	SWITCH_1
0x4000280	      0xe9e4000000	                           jmp 0x4000369	        81	pen.c	FUNCTION_3	SWITCH_1
0x4000285	        0x837df002	               cmp dword [rbp - 0x10], 2	        83	pen.c	FUNCTION_3	SWITCH_1	IF_1
0x4000289	            0x7f08	                            jg 0x4000293	        83	pen.c	FUNCTION_3	SWITCH_1	IF_1
0x400028b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        84	pen.c	FUNCTION_3	SWITCH_1	IF_1
0x400028e	      0xe9db000000	                           jmp 0x400036e	        84	pen.c	FUNCTION_3	SWITCH_1	IF_1
0x4000293	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x4000297	          0x488b00	                    mov rax, qword [rax]	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x400029a	            0x89c2	                            mov edx, eax	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x400029c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x40002a0	            0x8810	                      mov byte [rax], dl	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x40002a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x40002a6	        0x4883c008	                              add rax, 8	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x40002aa	          0x488b00	                    mov rax, qword [rax]	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x40002ad	            0x89c2	                            mov edx, eax	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x40002af	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x40002b3	          0x885001	                  mov byte [rax + 1], dl	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x40002b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x40002ba	        0x4883c010	                           add rax, 0x10	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x40002be	          0x488b00	                    mov rax, qword [rax]	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x40002c1	            0x89c2	                            mov edx, eax	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x40002c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x40002c7	          0x885002	                  mov byte [rax + 2], dl	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x40002ca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        89	pen.c	FUNCTION_3	SWITCH_1
0x40002ce	        0xc64003ff	                mov byte [rax + 3], 0xff	        89	pen.c	FUNCTION_3	SWITCH_1
0x40002d2	      0xb803000000	                              mov eax, 3	        91	pen.c	FUNCTION_3	SWITCH_1
0x40002d7	      0xe992000000	                           jmp 0x400036e	        91	pen.c	FUNCTION_3	SWITCH_1
0x40002dc	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        94	pen.c	FUNCTION_3	SWITCH_1	IF_2
0x40002e1	            0x742f	                            je 0x4000312	        94	pen.c	FUNCTION_3	SWITCH_1	IF_2
0x40002e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x40002e7	          0x488b00	                    mov rax, qword [rax]	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x40002ea	      0x25ffffff7f	                     and eax, 0x7fffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x40002ef	    0x483dffffff3f	                     cmp rax, 0x3fffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x40002f5	            0x7410	                            je 0x4000307	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x40002f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x40002fb	          0x488b00	                    mov rax, qword [rax]	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x40002fe	      0x25ffffff7f	                     and eax, 0x7fffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000303	            0x89c2	                            mov edx, eax	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000305	            0xeb05	                           jmp 0x400030c	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000307	      0xbaffffffff	                     mov edx, 0xffffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x400030c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000310	            0x8910	                    mov dword [rax], edx	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000312	        0x837df000	               cmp dword [rbp - 0x10], 0	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000316	            0x742b	                            je 0x4000343	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000318	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x400031c	          0x488b00	                    mov rax, qword [rax]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x400031f	      0x25ffffff7f	                     and eax, 0x7fffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000324	    0x483dffffff3f	                     cmp rax, 0x3fffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x400032a	            0x740e	                            je 0x400033a	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x400032c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000330	          0x488b00	                    mov rax, qword [rax]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000333	      0x25ffffff7f	                     and eax, 0x7fffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000338	            0xeb10	                           jmp 0x400034a	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x400033a	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000341	            0xeb07	                           jmp 0x400034a	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000343	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x400034a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x400034e	        0x488b4df8	                mov rcx, qword [rbp - 8]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000352	          0x4889c6	                            mov rsi, rax	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000355	          0x4889cf	                            mov rdi, rcx	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000358	      0xe824fdffff	          call sym.lookup_colour_palette	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x400035d	        0x837df000	               cmp dword [rbp - 0x10], 0	        99	pen.c	FUNCTION_3	SWITCH_1
0x4000361	           0xf95c0	                                setne al	        99	pen.c	FUNCTION_3	SWITCH_1
0x4000364	           0xfb6c0	                           movzx eax, al	        99	pen.c	FUNCTION_3	SWITCH_1
0x4000367	            0xeb05	                           jmp 0x400036e	        99	pen.c	FUNCTION_3	SWITCH_1
0x4000369	      0xb800000000	                              mov eax, 0	       103	pen.c	FUNCTION_3	SWITCH_1
0x400036e	              0xc9	                                   leave	       105	pen.c	FUNCTION_3
0x400036f	              0xc3	                                     ret	       105	pen.c	FUNCTION_3
vterm_state_get_default_colors	ELSE,0:WHILE,0:SWITCH,0:CALL,0:DO,0:FOR,0:functions,0:IF,0	16
0x400093a	              0x55	                                push rbp	       203	pen.c	FUNCTION_12
0x400093b	          0x4889e5	                            mov rbp, rsp	       203	pen.c	FUNCTION_12
0x400093e	        0x48897df8	                mov qword [rbp - 8], rdi	       203	pen.c	FUNCTION_12
0x4000942	        0x488975f0	             mov qword [rbp - 0x10], rsi	       203	pen.c	FUNCTION_12
0x4000946	        0x488955e8	             mov qword [rbp - 0x18], rdx	       203	pen.c	FUNCTION_12
0x400094a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       204	pen.c	FUNCTION_12
0x400094e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       204	pen.c	FUNCTION_12
0x4000952	    0x8b9228010000	           mov edx, dword [rdx + 0x128] 	       204	pen.c	FUNCTION_12
0x4000958	            0x8910	                    mov dword [rax], edx	       204	pen.c	FUNCTION_12
0x400095a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       205	pen.c	FUNCTION_12
0x400095e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       205	pen.c	FUNCTION_12
0x4000962	    0x8b922c010000	           mov edx, dword [rdx + 0x12c] 	       205	pen.c	FUNCTION_12
0x4000968	            0x8910	                    mov dword [rax], edx	       205	pen.c	FUNCTION_12
0x400096a	              0x90	                                     nop	       206	pen.c	FUNCTION_12
0x400096b	              0x5d	                                 pop rbp	       206	pen.c	FUNCTION_12
0x400096c	              0xc3	                                     ret	       206	pen.c	FUNCTION_12
vterm_state_get_palette_color	ELSE,0:WHILE,0:SWITCH,0:CALL,1:DO,0:FOR,0:functions,0:IF,0	16
0x400096d	              0x55	                                push rbp	       209	pen.c	FUNCTION_13
0x400096e	          0x4889e5	                            mov rbp, rsp	       209	pen.c	FUNCTION_13
0x4000971	        0x4883ec18	                           sub rsp, 0x18	       209	pen.c	FUNCTION_13
0x4000975	        0x48897df8	                mov qword [rbp - 8], rdi	       209	pen.c	FUNCTION_13
0x4000979	          0x8975f4	              mov dword [rbp - 0xc], esi	       209	pen.c	FUNCTION_13
0x400097c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       209	pen.c	FUNCTION_13
0x4000980	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       210	pen.c	FUNCTION_13	CALL_1
0x4000983	          0x4863c8	                         movsxd rcx, eax	       210	pen.c	FUNCTION_13	CALL_1
0x4000986	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       210	pen.c	FUNCTION_13	CALL_1
0x400098a	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	pen.c	FUNCTION_13	CALL_1
0x400098e	          0x4889ce	                            mov rsi, rcx	       210	pen.c	FUNCTION_13	CALL_1
0x4000991	          0x4889c7	                            mov rdi, rax	       210	pen.c	FUNCTION_13	CALL_1
0x4000994	      0xe8e8f6ffff	          call sym.lookup_colour_palette	       210	pen.c	FUNCTION_13	CALL_1
0x4000999	              0x90	                                     nop	       211	pen.c	FUNCTION_13
0x400099a	              0xc9	                                   leave	       211	pen.c	FUNCTION_13
0x400099b	              0xc3	                                     ret	       211	pen.c	FUNCTION_13
vterm_state_setpen	ELSE,0:WHILE,2:SWITCH,1:CALL,36:DO,0:FOR,0:functions,0:IF,5	502
0x4000a37	              0x55	                                push rbp	       234	pen.c	FUNCTION_17
0x4000a38	          0x4889e5	                            mov rbp, rsp	       234	pen.c	FUNCTION_17
0x4000a3b	        0x4883ec40	                           sub rsp, 0x40	       234	pen.c	FUNCTION_17
0x4000a3f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       234	pen.c	FUNCTION_17
0x4000a43	        0x488975d0	             mov qword [rbp - 0x30], rsi	       234	pen.c	FUNCTION_17
0x4000a47	          0x8955cc	             mov dword [rbp - 0x34], edx	       234	pen.c	FUNCTION_17
0x4000a4a	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       237	pen.c	FUNCTION_17
0x4000a51	      0xe92f080000	                           jmp 0x4001285	       240	pen.c	FUNCTION_17	WHILE_1
0x4000a56	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       243	pen.c	FUNCTION_17	WHILE_1
0x4000a5d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a60	            0x4898	                                    cdqe	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a62	    0x488d14c50000	                        lea rdx, [rax*8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a6a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a6e	          0x4801d0	                            add rax, rdx	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a71	          0x488b00	                    mov rax, qword [rax]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a74	      0x25ffffff7f	                     and eax, 0x7fffffff	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a79	        0x488945f8	                mov qword [rbp - 8], rax	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a7d	        0x488b45f8	                mov rax, qword [rbp - 8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a81	        0x4883f81b	                           cmp rax, 0x1b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a85	     0xf8441040000	                            je 0x4000ecc	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a8b	        0x4883f81b	                           cmp rax, 0x1b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a8f	     0xf8fa7000000	                            jg 0x4000b3c	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a95	        0x4883f809	                              cmp rax, 9	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a99	     0xf84a2020000	                            je 0x4000d41	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000a9f	        0x4883f809	                              cmp rax, 9	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000aa3	            0x7f4b	                            jg 0x4000af0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000aa5	        0x4883f803	                              cmp rax, 3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000aa9	     0xf84d3010000	                            je 0x4000c82	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000aaf	        0x4883f803	                              cmp rax, 3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ab3	            0x7f18	                            jg 0x4000acd	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ab5	          0x4885c0	                           test rax, rax	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ab8	     0xf840f010000	                            je 0x4000bcd	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000abe	        0x4883f801	                              cmp rax, 1	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ac2	     0xf8416010000	                            je 0x4000bde	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ac8	      0xe985070000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000acd	        0x4883f805	                              cmp rax, 5	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ad1	     0xf840c020000	                            je 0x4000ce3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ad7	        0x4883f805	                              cmp rax, 5	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000adb	     0xf8cd0010000	                            jl 0x4000cb1	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ae1	        0x4883f807	                              cmp rax, 7	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ae5	     0xf8427020000	                            je 0x4000d12	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000aeb	      0xe962070000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000af0	        0x4883f816	                           cmp rax, 0x16	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000af4	     0xf8416030000	                            je 0x4000e10	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000afa	        0x4883f816	                           cmp rax, 0x16	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000afe	            0x7f19	                            jg 0x4000b19	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b00	        0x4883f813	                           cmp rax, 0x13	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b04	     0xf8e66020000	                           jle 0x4000d70	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b0a	        0x4883f815	                           cmp rax, 0x15	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b0e	     0xf84ca020000	                            je 0x4000dde	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b14	      0xe939070000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b19	        0x4883f818	                           cmp rax, 0x18	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b1d	     0xf844b030000	                            je 0x4000e6e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b23	        0x4883f818	                           cmp rax, 0x18	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b27	     0xf8c12030000	                            jl 0x4000e3f	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b2d	        0x4883f819	                           cmp rax, 0x19	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b31	     0xf8466030000	                            je 0x4000e9d	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b37	      0xe916070000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b3c	        0x4883f82f	                           cmp rax, 0x2f	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b40	            0x7f42	                            jg 0x4000b84	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b42	        0x4883f828	                           cmp rax, 0x28	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b46	     0xf8d3c050000	                           jge 0x4001088	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b4c	        0x4883f825	                           cmp rax, 0x25	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b50	            0x7f19	                            jg 0x4000b6b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b52	        0x4883f81e	                           cmp rax, 0x1e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b56	     0xf8dce030000	                           jge 0x4000f2a	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b5c	        0x4883f81d	                           cmp rax, 0x1d	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b60	     0xf8495030000	                            je 0x4000efb	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b66	      0xe9e7060000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b6b	        0x4883f826	                           cmp rax, 0x26	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b6f	     0xf8424040000	                            je 0x4000f99	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b75	        0x4883f827	                           cmp rax, 0x27	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b79	     0xf84c7040000	                            je 0x4001046	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b7f	      0xe9ce060000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b84	        0x4883f861	                           cmp rax, 0x61	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b88	            0x7f23	                            jg 0x4000bad	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b8a	        0x4883f85a	                           cmp rax, 0x5a	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b8e	     0xf8d2e060000	                           jge 0x40011c2	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b94	        0x4883f830	                           cmp rax, 0x30	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b98	     0xf8435050000	                            je 0x40010d3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000b9e	        0x4883f831	                           cmp rax, 0x31	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ba2	     0xf84d8050000	                            je 0x4001180	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ba8	      0xe9a5060000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bad	        0x4883f864	                           cmp rax, 0x64	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bb1	     0xf8c9b060000	                            jl 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bb7	        0x4883f86b	                           cmp rax, 0x6b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bbb	     0xf8e49060000	                           jle 0x400120a	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bc1	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bc7	     0xf8585060000	                           jne 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bcd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4000bd1	          0x4889c7	                            mov rdi, rax	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4000bd4	      0xe800000000	                          call 0x4000bd9	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4000bd9	      0xe97f060000	                           jmp 0x400125d	       250	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000bde	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       253	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000be2	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       253	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000be9	          0x83ca01	                               or edx, 1	       253	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000bec	    0x889024010000	              mov byte [rax + 0x124], dl	       253	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000bf2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000bf6	      0xba01000000	                              mov edx, 1	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000bfb	      0xbe01000000	                              mov esi, 1	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000c00	          0x4889c7	                            mov rdi, rax	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000c03	      0xe8bef7ffff	                call sym.setpenattr_bool	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000c08	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c0c	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c12	            0x85c0	                           test eax, eax	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c14	     0xf8842060000	                            js 0x400125c	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c1a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c1e	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c24	          0x83f807	                              cmp eax, 7	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c27	     0xf8f2f060000	                            jg 0x400125c	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c31	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c37	            0x85c0	                           test eax, eax	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c39	     0xf841d060000	                            je 0x400125c	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c3f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c43	    0x8b9070010000	           mov edx, dword [rax + 0x170] 	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c4d	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c54	          0x83e001	                              and eax, 1	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c57	            0x84c0	                             test al, al	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c59	            0x7407	                            je 0x4000c62	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c5b	      0xb808000000	                              mov eax, 8	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c60	            0xeb05	                           jmp 0x4000c67	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c62	      0xb800000000	                              mov eax, 0	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c67	             0x1d0	                            add eax, edx	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c69	          0x4863d0	                         movsxd rdx, eax	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c6c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c70	      0xbe08000000	                              mov esi, 8	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c75	          0x4889c7	                            mov rdi, rax	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c78	      0xe854f8ffff	               call sym.set_pen_col_ansi	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000c7d	      0xe9da050000	                           jmp 0x400125c	       257	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       260	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c86	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       260	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c8d	          0x83ca08	                               or edx, 8	       260	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c90	    0x889024010000	              mov byte [rax + 0x124], dl	       260	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c96	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0x4000c9a	      0xba01000000	                              mov edx, 1	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0x4000c9f	      0xbe03000000	                              mov esi, 3	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0x4000ca4	          0x4889c7	                            mov rdi, rax	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0x4000ca7	      0xe81af7ffff	                call sym.setpenattr_bool	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0x4000cac	      0xe9ac050000	                           jmp 0x400125d	       262	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000cb1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000cb5	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000cbc	          0x83e2f9	                     and edx, 0xfffffff9	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000cbf	          0x83ca02	                               or edx, 2	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000cc2	    0x889024010000	              mov byte [rax + 0x124], dl	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000cc8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0x4000ccc	      0xba01000000	                              mov edx, 1	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0x4000cd1	      0xbe02000000	                              mov esi, 2	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0x4000cd6	          0x4889c7	                            mov rdi, rax	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0x4000cd9	      0xe841f7ffff	                 call sym.setpenattr_int	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0x4000cde	      0xe97a050000	                           jmp 0x400125d	       267	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ce3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       270	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ce7	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       270	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000cee	          0x83ca10	                            or edx, 0x10	       270	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000cf1	    0x889024010000	              mov byte [rax + 0x124], dl	       270	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000cf7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0x4000cfb	      0xba01000000	                              mov edx, 1	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0x4000d00	      0xbe04000000	                              mov esi, 4	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0x4000d05	          0x4889c7	                            mov rdi, rax	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0x4000d08	      0xe8b9f6ffff	                call sym.setpenattr_bool	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0x4000d0d	      0xe94b050000	                           jmp 0x400125d	       272	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d12	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       275	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d16	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       275	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d1d	          0x83ca20	                            or edx, 0x20	       275	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d20	    0x889024010000	              mov byte [rax + 0x124], dl	       275	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0x4000d2a	      0xba01000000	                              mov edx, 1	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0x4000d2f	      0xbe05000000	                              mov esi, 5	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0x4000d34	          0x4889c7	                            mov rdi, rax	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0x4000d37	      0xe88af6ffff	                call sym.setpenattr_bool	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0x4000d3c	      0xe91c050000	                           jmp 0x400125d	       277	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d41	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       280	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d45	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       280	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d4c	          0x83ca40	                            or edx, 0x40	       280	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d4f	    0x889024010000	              mov byte [rax + 0x124], dl	       280	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0x4000d59	      0xba01000000	                              mov edx, 1	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0x4000d5e	      0xbe06000000	                              mov esi, 6	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0x4000d63	          0x4889c7	                            mov rdi, rax	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0x4000d66	      0xe85bf6ffff	                call sym.setpenattr_bool	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0x4000d6b	      0xe9ed040000	                           jmp 0x400125d	       282	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d70	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d73	            0x4898	                                    cdqe	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d75	    0x488d14c50000	                        lea rdx, [rax*8]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d7d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d81	          0x4801d0	                            add rax, rdx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d84	          0x488b00	                    mov rax, qword [rax]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d87	          0x83e80a	                            sub eax, 0xa	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d8a	          0x83e00f	                            and eax, 0xf	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d8d	            0x89c2	                            mov edx, eax	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d8f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d93	           0xfb6d2	                           movzx edx, dl	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d96	          0x83e20f	                            and edx, 0xf	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d99	            0x89d1	                            mov ecx, edx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d9b	          0xc1e107	                              shl ecx, 7	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000d9e	     0xfb790240100	          movzx edx, word [rax + 0x124] 	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000da5	      0x6681e27ff8	                          and dx, 0xf87f	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000daa	             0x9ca	                             or edx, ecx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000dac	    0x668990240100	              mov word [rax + 0x124], dx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000db3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x4000db7	     0xfb780240100	          movzx eax, word [rax + 0x124] 	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x4000dbe	        0x66c1e807	                               shr ax, 7	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x4000dc2	          0x83e00f	                            and eax, 0xf	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x4000dc5	           0xfb6d0	                           movzx edx, al	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x4000dc8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x4000dcc	      0xbe07000000	                              mov esi, 7	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x4000dd1	          0x4889c7	                            mov rdi, rax	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x4000dd4	      0xe846f6ffff	                 call sym.setpenattr_int	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x4000dd9	      0xe97f040000	                           jmp 0x400125d	       288	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000dde	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000de2	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000de9	          0x83e2f9	                     and edx, 0xfffffff9	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000dec	          0x83ca04	                               or edx, 4	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000def	    0x889024010000	              mov byte [rax + 0x124], dl	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000df5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0x4000df9	      0xba02000000	                              mov edx, 2	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0x4000dfe	      0xbe02000000	                              mov esi, 2	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0x4000e03	          0x4889c7	                            mov rdi, rax	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0x4000e06	      0xe814f6ffff	                 call sym.setpenattr_int	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0x4000e0b	      0xe94d040000	                           jmp 0x400125d	       293	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e10	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       296	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e14	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       296	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e1b	          0x83e2fe	                     and edx, 0xfffffffe	       296	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e1e	    0x889024010000	              mov byte [rax + 0x124], dl	       296	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e24	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0x4000e28	      0xba00000000	                              mov edx, 0	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0x4000e2d	      0xbe01000000	                              mov esi, 1	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0x4000e32	          0x4889c7	                            mov rdi, rax	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0x4000e35	      0xe88cf5ffff	                call sym.setpenattr_bool	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0x4000e3a	      0xe91e040000	                           jmp 0x400125d	       298	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e3f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       301	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e43	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       301	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e4a	          0x83e2f7	                     and edx, 0xfffffff7	       301	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e4d	    0x889024010000	              mov byte [rax + 0x124], dl	       301	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e53	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0x4000e57	      0xba00000000	                              mov edx, 0	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0x4000e5c	      0xbe03000000	                              mov esi, 3	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0x4000e61	          0x4889c7	                            mov rdi, rax	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0x4000e64	      0xe85df5ffff	                call sym.setpenattr_bool	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0x4000e69	      0xe9ef030000	                           jmp 0x400125d	       303	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e6e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       306	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e72	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       306	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e79	          0x83e2f9	                     and edx, 0xfffffff9	       306	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e7c	    0x889024010000	              mov byte [rax + 0x124], dl	       306	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0x4000e86	      0xba00000000	                              mov edx, 0	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0x4000e8b	      0xbe02000000	                              mov esi, 2	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0x4000e90	          0x4889c7	                            mov rdi, rax	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0x4000e93	      0xe887f5ffff	                 call sym.setpenattr_int	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0x4000e98	      0xe9c0030000	                           jmp 0x400125d	       308	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e9d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       311	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ea1	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       311	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ea8	          0x83e2ef	                     and edx, 0xffffffef	       311	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000eab	    0x889024010000	              mov byte [rax + 0x124], dl	       311	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000eb1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0x4000eb5	      0xba00000000	                              mov edx, 0	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0x4000eba	      0xbe04000000	                              mov esi, 4	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0x4000ebf	          0x4889c7	                            mov rdi, rax	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0x4000ec2	      0xe8fff4ffff	                call sym.setpenattr_bool	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0x4000ec7	      0xe991030000	                           jmp 0x400125d	       313	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ecc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       316	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ed0	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       316	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ed7	          0x83e2df	                     and edx, 0xffffffdf	       316	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000eda	    0x889024010000	              mov byte [rax + 0x124], dl	       316	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ee0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0x4000ee4	      0xba00000000	                              mov edx, 0	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0x4000ee9	      0xbe05000000	                              mov esi, 5	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0x4000eee	          0x4889c7	                            mov rdi, rax	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0x4000ef1	      0xe8d0f4ffff	                call sym.setpenattr_bool	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0x4000ef6	      0xe962030000	                           jmp 0x400125d	       318	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000efb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       321	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000eff	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       321	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f06	          0x83e2bf	                     and edx, 0xffffffbf	       321	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f09	    0x889024010000	              mov byte [rax + 0x124], dl	       321	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f0f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0x4000f13	      0xba00000000	                              mov edx, 0	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0x4000f18	      0xbe06000000	                              mov esi, 6	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0x4000f1d	          0x4889c7	                            mov rdi, rax	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0x4000f20	      0xe8a1f4ffff	                call sym.setpenattr_bool	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0x4000f25	      0xe933030000	                           jmp 0x400125d	       323	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f2a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x4000f2d	            0x4898	                                    cdqe	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x4000f2f	    0x488d14c50000	                        lea rdx, [rax*8]	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x4000f37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x4000f3b	          0x4801d0	                            add rax, rdx	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x4000f3e	          0x488b00	                    mov rax, qword [rax]	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x4000f41	      0x25ffffff7f	                     and eax, 0x7fffffff	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x4000f46	          0x83e81e	                           sub eax, 0x1e	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x4000f49	          0x8945f0	             mov dword [rbp - 0x10], eax	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x4000f4c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       328	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f50	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       328	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f53	    0x899070010000	            mov dword [rax + 0x170], edx	       328	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f59	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4000f5d	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4000f64	          0x83e001	                              and eax, 1	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4000f67	            0x84c0	                             test al, al	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4000f69	            0x7412	                            je 0x4000f7d	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4000f6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4000f6f	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4000f75	            0x85c0	                           test eax, eax	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4000f77	            0x7404	                            je 0x4000f7d	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4000f79	        0x8345f008	               add dword [rbp - 0x10], 8	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4000f7d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0x4000f80	          0x4863d0	                         movsxd rdx, eax	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0x4000f83	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0x4000f87	      0xbe08000000	                              mov esi, 8	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0x4000f8c	          0x4889c7	                            mov rdi, rax	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0x4000f8f	      0xe83df5ffff	               call sym.set_pen_col_ansi	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0x4000f94	      0xe9c4020000	                           jmp 0x400125d	       332	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f99	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       335	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f9d	    0xc78070010000	    mov dword [rax + 0x170], 0xffffffff 	       335	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000fa7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x4000faa	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x4000fad	            0x85c0	                           test eax, eax	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x4000faf	     0xf8ede020000	                           jle 0x4001293	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x4000fb5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fb9	    0x4c8d80700100	                   lea r8, [rax + 0x170]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fc0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fc4	    0x488db81c0100	                  lea rdi, [rax + 0x11c]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fcb	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fce	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fd1	          0x8d48fe	                      lea ecx, [rax - 2]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fd4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fd7	            0x4898	                                    cdqe	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fd9	        0x4883c002	                              add rax, 2	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fdd	    0x488d14c50000	                        lea rdx, [rax*8]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fe5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fe9	          0x4801c2	                            add rdx, rax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fec	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000fef	            0x4898	                                    cdqe	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000ff1	        0x4883c001	                              add rax, 1	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000ff5	    0x488d34c50000	                        lea rsi, [rax*8]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000ffd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001001	          0x4801f0	                            add rax, rsi	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001004	          0x488b00	                    mov rax, qword [rax]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001007	      0x25ffffff7f	                     and eax, 0x7fffffff	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x400100c	            0x89c6	                            mov esi, eax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x400100e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001012	          0x4d89c1	                              mov r9, r8	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001015	          0x4989f8	                             mov r8, rdi	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001018	          0x4889c7	                            mov rdi, rax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x400101b	      0xe835f2ffff	                  call sym.lookup_colour	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001020	          0x83c001	                              add eax, 1	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001023	           0x145ec	             add dword [rbp - 0x14], eax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001026	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0x400102a	    0x8b901c010000	           mov edx, dword [rax + 0x11c] 	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0x4001030	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0x4001034	      0xbe08000000	                              mov esi, 8	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0x4001039	          0x4889c7	                            mov rdi, rax	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0x400103c	      0xe837f4ffff	                 call sym.setpenattr_col	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0x4001041	      0xe917020000	                           jmp 0x400125d	       340	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001046	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       343	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400104a	    0xc78070010000	    mov dword [rax + 0x170], 0xffffffff 	       343	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001054	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001058	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400105c	    0x8b9228010000	           mov edx, dword [rdx + 0x128] 	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001062	    0x89901c010000	            mov dword [rax + 0x11c], edx	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001068	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x400106c	    0x8b901c010000	           mov edx, dword [rax + 0x11c] 	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x4001072	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x4001076	      0xbe08000000	                              mov esi, 8	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x400107b	          0x4889c7	                            mov rdi, rax	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x400107e	      0xe8f5f3ffff	                 call sym.setpenattr_col	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x4001083	      0xe9d5010000	                           jmp 0x400125d	       346	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001088	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x400108b	            0x4898	                                    cdqe	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x400108d	    0x488d14c50000	                        lea rdx, [rax*8]	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x4001095	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x4001099	          0x4801d0	                            add rax, rdx	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x400109c	          0x488b00	                    mov rax, qword [rax]	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x400109f	      0x25ffffff7f	                     and eax, 0x7fffffff	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x40010a4	          0x83e828	                           sub eax, 0x28	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x40010a7	          0x8945f0	             mov dword [rbp - 0x10], eax	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x40010aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       351	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010ae	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       351	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010b1	    0x899074010000	            mov dword [rax + 0x174], edx	       351	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010b7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x40010ba	          0x4863d0	                         movsxd rdx, eax	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x40010bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x40010c1	      0xbe09000000	                              mov esi, 9	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x40010c6	          0x4889c7	                            mov rdi, rax	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x40010c9	      0xe803f4ffff	               call sym.set_pen_col_ansi	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x40010ce	      0xe98a010000	                           jmp 0x400125d	       353	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       356	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010d7	    0xc78074010000	    mov dword [rax + 0x174], 0xffffffff 	       356	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010e1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x40010e4	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x40010e7	            0x85c0	                           test eax, eax	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x40010e9	     0xf8ea7010000	                           jle 0x4001296	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x40010ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x40010f3	    0x4c8d80740100	                   lea r8, [rax + 0x174]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x40010fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x40010fe	    0x488db8200100	                  lea rdi, [rax + 0x120]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001105	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001108	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400110b	          0x8d48fe	                      lea ecx, [rax - 2]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400110e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001111	            0x4898	                                    cdqe	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001113	        0x4883c002	                              add rax, 2	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001117	    0x488d14c50000	                        lea rdx, [rax*8]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400111f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001123	          0x4801c2	                            add rdx, rax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001126	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001129	            0x4898	                                    cdqe	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400112b	        0x4883c001	                              add rax, 1	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400112f	    0x488d34c50000	                        lea rsi, [rax*8]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001137	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400113b	          0x4801f0	                            add rax, rsi	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400113e	          0x488b00	                    mov rax, qword [rax]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001141	      0x25ffffff7f	                     and eax, 0x7fffffff	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001146	            0x89c6	                            mov esi, eax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001148	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400114c	          0x4d89c1	                              mov r9, r8	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400114f	          0x4989f8	                             mov r8, rdi	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001152	          0x4889c7	                            mov rdi, rax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001155	      0xe8fbf0ffff	                  call sym.lookup_colour	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400115a	          0x83c001	                              add eax, 1	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400115d	           0x145ec	             add dword [rbp - 0x14], eax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001160	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x4001164	    0x8b9020010000	           mov edx, dword [rax + 0x120] 	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x400116a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x400116e	      0xbe09000000	                              mov esi, 9	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x4001173	          0x4889c7	                            mov rdi, rax	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x4001176	      0xe8fdf2ffff	                 call sym.setpenattr_col	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x400117b	      0xe9dd000000	                           jmp 0x400125d	       361	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001180	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       364	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001184	    0xc78074010000	    mov dword [rax + 0x174], 0xffffffff 	       364	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400118e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001192	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001196	    0x8b922c010000	           mov edx, dword [rdx + 0x12c] 	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400119c	    0x899020010000	            mov dword [rax + 0x120], edx	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40011a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x40011a6	    0x8b9020010000	           mov edx, dword [rax + 0x120] 	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x40011ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x40011b0	      0xbe09000000	                              mov esi, 9	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x40011b5	          0x4889c7	                            mov rdi, rax	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x40011b8	      0xe8bbf2ffff	                 call sym.setpenattr_col	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x40011bd	      0xe99b000000	                           jmp 0x400125d	       367	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40011c2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x40011c5	            0x4898	                                    cdqe	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x40011c7	    0x488d14c50000	                        lea rdx, [rax*8]	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x40011cf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x40011d3	          0x4801d0	                            add rax, rdx	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x40011d6	          0x488b00	                    mov rax, qword [rax]	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x40011d9	      0x25ffffff7f	                     and eax, 0x7fffffff	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x40011de	          0x83e852	                           sub eax, 0x52	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x40011e1	          0x8945f0	             mov dword [rbp - 0x10], eax	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x40011e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       372	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40011e8	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       372	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40011eb	    0x899070010000	            mov dword [rax + 0x170], edx	       372	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40011f1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x40011f4	          0x4863d0	                         movsxd rdx, eax	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x40011f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x40011fb	      0xbe08000000	                              mov esi, 8	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x4001200	          0x4889c7	                            mov rdi, rax	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x4001203	      0xe8c9f2ffff	               call sym.set_pen_col_ansi	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x4001208	            0xeb53	                           jmp 0x400125d	       374	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400120a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x400120d	            0x4898	                                    cdqe	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x400120f	    0x488d14c50000	                        lea rdx, [rax*8]	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x4001217	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x400121b	          0x4801d0	                            add rax, rdx	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x400121e	          0x488b00	                    mov rax, qword [rax]	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x4001221	      0x25ffffff7f	                     and eax, 0x7fffffff	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x4001226	          0x83e85c	                           sub eax, 0x5c	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x4001229	          0x8945f0	             mov dword [rbp - 0x10], eax	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x400122c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       379	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001230	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       379	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001233	    0x899074010000	            mov dword [rax + 0x174], edx	       379	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001239	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x400123c	          0x4863d0	                         movsxd rdx, eax	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x400123f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4001243	      0xbe09000000	                              mov esi, 9	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4001248	          0x4889c7	                            mov rdi, rax	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x400124b	      0xe881f2ffff	               call sym.set_pen_col_ansi	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4001250	            0xeb0b	                           jmp 0x400125d	       381	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001252	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       384	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001259	              0x90	                                     nop	       385	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400125a	            0xeb01	                           jmp 0x400125d	       385	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400125c	              0x90	                                     nop	       257	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400125d	              0x90	                                     nop	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x400125e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4001261	          0x8d5001	                      lea edx, [rax + 1]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4001264	          0x8955ec	             mov dword [rbp - 0x14], edx	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4001267	            0x4898	                                    cdqe	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4001269	    0x488d14c50000	                        lea rdx, [rax*8]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4001271	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4001275	          0x4801d0	                            add rax, rdx	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4001278	          0x488b00	                    mov rax, qword [rax]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x400127b	      0x2500000080	                     and eax, 0x80000000	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4001280	          0x4885c0	                           test rax, rax	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4001283	            0x75d9	                           jne 0x400125e	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4001285	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       240	pen.c	FUNCTION_17	WHILE_1
0x4001288	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       240	pen.c	FUNCTION_17	WHILE_1
0x400128b	     0xf8cc5f7ffff	                            jl 0x4000a56	       240	pen.c	FUNCTION_17	WHILE_1
0x4001291	            0xeb04	                           jmp 0x4001297	       240	pen.c	FUNCTION_17	WHILE_1
0x4001293	              0x90	                                     nop	       337	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x4001294	            0xeb01	                           jmp 0x4001297	       337	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x4001296	              0x90	                                     nop	       358	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x4001297	              0xc9	                                   leave	       395	pen.c	FUNCTION_17
0x4001298	              0xc3	                                     ret	       395	pen.c	FUNCTION_17
vterm_state_set_bold_highbright	ELSE,0:WHILE,0:SWITCH,0:CALL,0:DO,0:FOR,0:functions,0:IF,0	10
0x4000a1c	              0x55	                                push rbp	       229	pen.c	FUNCTION_16
0x4000a1d	          0x4889e5	                            mov rbp, rsp	       229	pen.c	FUNCTION_16
0x4000a20	        0x48897df8	                mov qword [rbp - 8], rdi	       229	pen.c	FUNCTION_16
0x4000a24	          0x8975f4	              mov dword [rbp - 0xc], esi	       229	pen.c	FUNCTION_16
0x4000a27	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	pen.c	FUNCTION_16
0x4000a2b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       230	pen.c	FUNCTION_16
0x4000a2e	    0x899078010000	            mov dword [rax + 0x178], edx	       230	pen.c	FUNCTION_16
0x4000a34	              0x90	                                     nop	       231	pen.c	FUNCTION_16
0x4000a35	              0x5d	                                 pop rbp	       231	pen.c	FUNCTION_16
0x4000a36	              0xc3	                                     ret	       231	pen.c	FUNCTION_16
setpenattr_int	ELSE,0:WHILE,0:SWITCH,0:CALL,1:DO,0:FOR,0:functions,0:IF,0	25
0x400041f	              0x55	                                push rbp	       130	pen.c	FUNCTION_6
0x4000420	          0x4889e5	                            mov rbp, rsp	       130	pen.c	FUNCTION_6
0x4000423	        0x4883ec20	                           sub rsp, 0x20	       130	pen.c	FUNCTION_6
0x4000427	        0x48897de8	             mov qword [rbp - 0x18], rdi	       130	pen.c	FUNCTION_6
0x400042b	          0x8975e4	             mov dword [rbp - 0x1c], esi	       130	pen.c	FUNCTION_6
0x400042e	          0x8955e0	             mov dword [rbp - 0x20], edx	       130	pen.c	FUNCTION_6
0x4000431	    0x64488b042528	                mov rax, qword fs:[0x28]	       130	pen.c	FUNCTION_6
0x400043a	        0x488945f8	                mov qword [rbp - 8], rax	       130	pen.c	FUNCTION_6
0x400043e	            0x31c0	                            xor eax, eax	       130	pen.c	FUNCTION_6
0x4000440	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       132	pen.c	FUNCTION_6
0x4000443	          0x8945f0	             mov dword [rbp - 0x10], eax	       132	pen.c	FUNCTION_6
0x4000446	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       133	pen.c	FUNCTION_6	CALL_1
0x400044a	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       133	pen.c	FUNCTION_6	CALL_1
0x400044d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       133	pen.c	FUNCTION_6	CALL_1
0x4000451	          0x4889d1	                            mov rcx, rdx	       133	pen.c	FUNCTION_6	CALL_1
0x4000454	      0xba02000000	                              mov edx, 2	       133	pen.c	FUNCTION_6	CALL_1
0x4000459	          0x4889c7	                            mov rdi, rax	       133	pen.c	FUNCTION_6	CALL_1
0x400045c	      0xe80fffffff	                     call sym.setpenattr	       133	pen.c	FUNCTION_6	CALL_1
0x4000461	              0x90	                                     nop	       134	pen.c	FUNCTION_6
0x4000462	        0x488b45f8	                mov rax, qword [rbp - 8]	       134	pen.c	FUNCTION_6
0x4000466	    0x644833042528	                xor rax, qword fs:[0x28]	       134	pen.c	FUNCTION_6
0x400046f	            0x7405	                            je 0x4000476	       134	pen.c	FUNCTION_6
0x4000471	      0xe800000000	                          call 0x4000476	       134	pen.c	FUNCTION_6
0x4000476	              0xc9	                                   leave	       134	pen.c	FUNCTION_6
0x4000477	              0xc3	                                     ret	       134	pen.c	FUNCTION_6
setpenattr	ELSE,0:WHILE,0:SWITCH,0:CALL,3:DO,0:FOR,0:functions,0:IF,2	28
0x4000370	              0x55	                                push rbp	       110	pen.c	FUNCTION_4
0x4000371	          0x4889e5	                            mov rbp, rsp	       110	pen.c	FUNCTION_4
0x4000374	        0x4883ec20	                           sub rsp, 0x20	       110	pen.c	FUNCTION_4
0x4000378	        0x48897df8	                mov qword [rbp - 8], rdi	       110	pen.c	FUNCTION_4
0x400037c	          0x8975f4	              mov dword [rbp - 0xc], esi	       110	pen.c	FUNCTION_4
0x400037f	          0x8955f0	             mov dword [rbp - 0x10], edx	       110	pen.c	FUNCTION_4
0x4000382	        0x48894de8	             mov qword [rbp - 0x18], rcx	       110	pen.c	FUNCTION_4
0x4000386	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	pen.c	FUNCTION_4	IF_2
0x400038a	        0x488b4008	                mov rax, qword [rax + 8]	       118	pen.c	FUNCTION_4	IF_2
0x400038e	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000391	            0x7430	                            je 0x40003c3	       118	pen.c	FUNCTION_4	IF_2
0x4000393	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	pen.c	FUNCTION_4	IF_2
0x4000397	        0x488b4008	                mov rax, qword [rax + 8]	       118	pen.c	FUNCTION_4	IF_2
0x400039b	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400039f	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40003a2	            0x741f	                            je 0x40003c3	       118	pen.c	FUNCTION_4	IF_2
0x40003a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	pen.c	FUNCTION_4	IF_2
0x40003a8	        0x488b4008	                mov rax, qword [rax + 8]	       119	pen.c	FUNCTION_4	IF_2
0x40003ac	        0x488b4030	            mov rax, qword [rax + 0x30] 	       119	pen.c	FUNCTION_4	IF_2
0x40003b0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       119	pen.c	FUNCTION_4	IF_2
0x40003b4	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40003b8	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       119	pen.c	FUNCTION_4	IF_2
0x40003bc	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       119	pen.c	FUNCTION_4	IF_2
0x40003bf	            0x89cf	                            mov edi, ecx	       119	pen.c	FUNCTION_4	IF_2
0x40003c1	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x40003c3	              0x90	                                     nop	       120	pen.c	FUNCTION_4
0x40003c4	              0xc9	                                   leave	       120	pen.c	FUNCTION_4
0x40003c5	              0xc3	                                     ret	       120	pen.c	FUNCTION_4
lookup_colour_palette	ELSE,2:WHILE,0:SWITCH,0:CALL,1:DO,0:FOR,0:functions,0:IF,3	119
0x4000081	              0x55	                                push rbp	        48	pen.c	FUNCTION_2
0x4000082	          0x4889e5	                            mov rbp, rsp	        48	pen.c	FUNCTION_2
0x4000085	        0x4883ec18	                           sub rsp, 0x18	        48	pen.c	FUNCTION_2
0x4000089	        0x48897df8	                mov qword [rbp - 8], rdi	        48	pen.c	FUNCTION_2
0x400008d	        0x488975f0	             mov qword [rbp - 0x10], rsi	        48	pen.c	FUNCTION_2
0x4000091	        0x488955e8	             mov qword [rbp - 0x18], rdx	        48	pen.c	FUNCTION_2
0x4000095	      0x48837df000	               cmp qword [rbp - 0x10], 0	        49	pen.c	FUNCTION_2	IF_1
0x400009a	            0x7823	                            js 0x40000bf	        49	pen.c	FUNCTION_2	IF_1
0x400009c	      0x48837df00f	            cmp qword [rbp - 0x10], 0xf 	        49	pen.c	FUNCTION_2	IF_1
0x40000a1	            0x7f1c	                            jg 0x40000bf	        49	pen.c	FUNCTION_2	IF_1
0x40000a3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x40000a7	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x40000ab	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x40000af	          0x4889ce	                            mov rsi, rcx	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x40000b2	          0x4889c7	                            mov rdi, rax	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x40000b5	      0xe886ffffff	             call sym.lookup_colour_ansi	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x40000ba	      0xe994010000	                           jmp 0x4000253	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x40000bf	      0x48837df00f	            cmp qword [rbp - 0x10], 0xf 	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000c4	     0xf8e1e010000	                           jle 0x40001e8	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000ca	    0x48817df0e700	           cmp qword [rbp - 0x10], 0xe7 	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000d2	     0xf8f10010000	                            jg 0x40001e8	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000d8	      0x48836df010	            sub qword [rbp - 0x10], 0x10	        55	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000dd	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000e1	    0x48baabaaaaaa	          movabs rdx, 0x2aaaaaaaaaaaaaab	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000eb	          0x4889c8	                            mov rax, rcx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000ee	          0x48f7ea	                                imul rdx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000f1	          0x4889c8	                            mov rax, rcx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000f4	        0x48c1f83f	                           sar rax, 0x3f	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000f8	          0x4829c2	                            sub rdx, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000fb	          0x4889d0	                            mov rax, rdx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000fe	          0x4801c0	                            add rax, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000101	          0x4801d0	                            add rax, rdx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000104	          0x4801c0	                            add rax, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000107	          0x4829c1	                            sub rcx, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400010a	          0x4889ca	                            mov rdx, rcx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400010d	    0x8b0495000000	                  mov eax, dword [rdx*4]	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000114	            0x89c2	                            mov edx, eax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000116	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400011a	          0x885002	                  mov byte [rax + 2], dl	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400011d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000121	    0x48baabaaaaaa	          movabs rdx, 0x2aaaaaaaaaaaaaab	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400012b	          0x4889c8	                            mov rax, rcx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400012e	          0x48f7ea	                                imul rdx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000131	          0x4889c8	                            mov rax, rcx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000134	        0x48c1f83f	                           sar rax, 0x3f	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000138	          0x4889d1	                            mov rcx, rdx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400013b	          0x4829c1	                            sub rcx, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400013e	    0x48baabaaaaaa	          movabs rdx, 0x2aaaaaaaaaaaaaab	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000148	          0x4889c8	                            mov rax, rcx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400014b	          0x48f7ea	                                imul rdx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400014e	          0x4889c8	                            mov rax, rcx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000151	        0x48c1f83f	                           sar rax, 0x3f	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000155	          0x4829c2	                            sub rdx, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000158	          0x4889d0	                            mov rax, rdx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400015b	          0x4801c0	                            add rax, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400015e	          0x4801d0	                            add rax, rdx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000161	          0x4801c0	                            add rax, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000164	          0x4829c1	                            sub rcx, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000167	          0x4889ca	                            mov rdx, rcx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400016a	    0x8b0495000000	                  mov eax, dword [rdx*4]	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000171	            0x89c2	                            mov edx, eax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000173	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000177	          0x885001	                  mov byte [rax + 1], dl	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400017a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400017e	    0x48ba398ee338	           movabs rdx, 0xe38e38e38e38e39	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000188	          0x4889c8	                            mov rax, rcx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400018b	          0x48f7ea	                                imul rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400018e	          0x48d1fa	                              sar rdx, 1	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000191	          0x4889c8	                            mov rax, rcx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000194	        0x48c1f83f	                           sar rax, 0x3f	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000198	          0x4889d1	                            mov rcx, rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400019b	          0x4829c1	                            sub rcx, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400019e	    0x48baabaaaaaa	          movabs rdx, 0x2aaaaaaaaaaaaaab	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001a8	          0x4889c8	                            mov rax, rcx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001ab	          0x48f7ea	                                imul rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001ae	          0x4889c8	                            mov rax, rcx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001b1	        0x48c1f83f	                           sar rax, 0x3f	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001b5	          0x4829c2	                            sub rdx, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001b8	          0x4889d0	                            mov rax, rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001bb	          0x4801c0	                            add rax, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001be	          0x4801d0	                            add rax, rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001c1	          0x4801c0	                            add rax, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001c4	          0x4829c1	                            sub rcx, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001c7	          0x4889ca	                            mov rdx, rcx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001ca	    0x8b0495000000	                  mov eax, dword [rdx*4]	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001d1	            0x89c2	                            mov edx, eax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001d7	            0x8810	                      mov byte [rax], dl	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001dd	        0xc64003ff	                mov byte [rax + 3], 0xff	        60	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001e1	      0xb801000000	                              mov eax, 1	        62	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001e6	            0xeb6b	                           jmp 0x4000253	        62	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40001e8	    0x48817df0e700	           cmp qword [rbp - 0x10], 0xe7 	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x40001f0	            0x7e5c	                           jle 0x400024e	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x40001f2	    0x48817df0ff00	           cmp qword [rbp - 0x10], 0xff 	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x40001fa	            0x7f52	                            jg 0x400024e	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x40001fc	    0x48816df0e800	            sub qword [rbp - 0x10], 0xe8	        66	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000204	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000208	    0x8b0485000000	                  mov eax, dword [rax*4]	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x400020f	            0x89c2	                            mov edx, eax	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000211	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000215	          0x885002	                  mov byte [rax + 2], dl	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000218	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x400021c	    0x8b0485000000	                  mov eax, dword [rax*4]	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000223	            0x89c2	                            mov edx, eax	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000225	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000229	          0x885001	                  mov byte [rax + 1], dl	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x400022c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000230	    0x8b0485000000	                  mov eax, dword [rax*4]	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000237	            0x89c2	                            mov edx, eax	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000239	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x400023d	            0x8810	                      mov byte [rax], dl	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x400023f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000243	        0xc64003ff	                mov byte [rax + 3], 0xff	        71	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000247	      0xb801000000	                              mov eax, 1	        73	pen.c	FUNCTION_2	ELSE_2	IF_3
0x400024c	            0xeb05	                           jmp 0x4000253	        73	pen.c	FUNCTION_2	ELSE_2	IF_3
0x400024e	      0xb800000000	                              mov eax, 0	        76	pen.c	FUNCTION_2
0x4000253	              0xc9	                                   leave	        77	pen.c	FUNCTION_2
0x4000254	              0xc3	                                     ret	        77	pen.c	FUNCTION_2
lookup_colour_ansi	ELSE,0:WHILE,0:SWITCH,0:CALL,0:DO,0:FOR,0:functions,0:IF,1	20
0x4000040	              0x55	                                push rbp	        38	pen.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        38	pen.c	FUNCTION_1
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	        38	pen.c	FUNCTION_1
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	        38	pen.c	FUNCTION_1
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	        38	pen.c	FUNCTION_1
0x4000050	      0x48837df000	               cmp qword [rbp - 0x10], 0	        39	pen.c	FUNCTION_1	IF_1
0x4000055	            0x7823	                            js 0x400007a	        39	pen.c	FUNCTION_1	IF_1
0x4000057	      0x48837df00f	            cmp qword [rbp - 0x10], 0xf 	        39	pen.c	FUNCTION_1	IF_1
0x400005c	            0x7f1c	                            jg 0x400007a	        39	pen.c	FUNCTION_1	IF_1
0x400005e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	pen.c	FUNCTION_1	IF_1
0x4000062	        0x488b55f8	                mov rdx, qword [rbp - 8]	        40	pen.c	FUNCTION_1	IF_1
0x4000066	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        40	pen.c	FUNCTION_1	IF_1
0x400006a	        0x4883c14c	                           add rcx, 0x4c	        40	pen.c	FUNCTION_1	IF_1
0x400006e	          0x8b148a	            mov edx, dword [rdx + rcx*4]	        40	pen.c	FUNCTION_1	IF_1
0x4000071	            0x8910	                    mov dword [rax], edx	        40	pen.c	FUNCTION_1	IF_1
0x4000073	      0xb801000000	                              mov eax, 1	        41	pen.c	FUNCTION_1	IF_1
0x4000078	            0xeb05	                           jmp 0x400007f	        41	pen.c	FUNCTION_1	IF_1
0x400007a	      0xb800000000	                              mov eax, 0	        44	pen.c	FUNCTION_1
0x400007f	              0x5d	                                 pop rbp	        45	pen.c	FUNCTION_1
0x4000080	              0xc3	                                     ret	        45	pen.c	FUNCTION_1
set_pen_col_ansi	ELSE,0:WHILE,0:SWITCH,0:CALL,2:DO,0:FOR,0:functions,0:IF,0	30
0x40004d1	              0x55	                                push rbp	       144	pen.c	FUNCTION_8
0x40004d2	          0x4889e5	                            mov rbp, rsp	       144	pen.c	FUNCTION_8
0x40004d5	        0x4883ec30	                           sub rsp, 0x30	       144	pen.c	FUNCTION_8
0x40004d9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       144	pen.c	FUNCTION_8
0x40004dd	          0x8975e4	             mov dword [rbp - 0x1c], esi	       144	pen.c	FUNCTION_8
0x40004e0	        0x488955d8	             mov qword [rbp - 0x28], rdx	       144	pen.c	FUNCTION_8
0x40004e4	        0x837de409	               cmp dword [rbp - 0x1c], 9	       145	pen.c	FUNCTION_8
0x40004e8	            0x750c	                           jne 0x40004f6	       145	pen.c	FUNCTION_8
0x40004ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	pen.c	FUNCTION_8
0x40004ee	    0x480520010000	                          add rax, 0x120	       145	pen.c	FUNCTION_8
0x40004f4	            0xeb0a	                           jmp 0x4000500	       145	pen.c	FUNCTION_8
0x40004f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	pen.c	FUNCTION_8
0x40004fa	    0x48051c010000	                          add rax, 0x11c	       145	pen.c	FUNCTION_8
0x4000500	        0x488945f8	                mov qword [rbp - 8], rax	       145	pen.c	FUNCTION_8
0x4000504	        0x488b55f8	                mov rdx, qword [rbp - 8]	       147	pen.c	FUNCTION_8	CALL_1
0x4000508	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       147	pen.c	FUNCTION_8	CALL_1
0x400050c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	pen.c	FUNCTION_8	CALL_1
0x4000510	          0x4889ce	                            mov rsi, rcx	       147	pen.c	FUNCTION_8	CALL_1
0x4000513	          0x4889c7	                            mov rdi, rax	       147	pen.c	FUNCTION_8	CALL_1
0x4000516	      0xe825fbffff	             call sym.lookup_colour_ansi	       147	pen.c	FUNCTION_8	CALL_1
0x400051b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       149	pen.c	FUNCTION_8	CALL_2
0x400051f	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       149	pen.c	FUNCTION_8	CALL_2
0x4000522	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	pen.c	FUNCTION_8	CALL_2
0x4000526	            0x8b12	                    mov edx, dword [rdx]	       149	pen.c	FUNCTION_8	CALL_2
0x4000528	            0x89ce	                            mov esi, ecx	       149	pen.c	FUNCTION_8	CALL_2
0x400052a	          0x4889c7	                            mov rdi, rax	       149	pen.c	FUNCTION_8	CALL_2
0x400052d	      0xe846ffffff	                 call sym.setpenattr_col	       149	pen.c	FUNCTION_8	CALL_2
0x4000532	              0x90	                                     nop	       150	pen.c	FUNCTION_8
0x4000533	              0xc9	                                   leave	       150	pen.c	FUNCTION_8
0x4000534	              0xc3	                                     ret	       150	pen.c	FUNCTION_8
vterm_state_resetpen	ELSE,0:WHILE,0:SWITCH,0:CALL,9:DO,0:FOR,0:functions,0:IF,0	94
0x40005f1	              0x55	                                push rbp	       167	pen.c	FUNCTION_10
0x40005f2	          0x4889e5	                            mov rbp, rsp	       167	pen.c	FUNCTION_10
0x40005f5	        0x4883ec10	                           sub rsp, 0x10	       167	pen.c	FUNCTION_10
0x40005f9	        0x48897df8	                mov qword [rbp - 8], rdi	       167	pen.c	FUNCTION_10
0x40005fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       168	pen.c	FUNCTION_10	CALL_1
0x4000601	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       168	pen.c	FUNCTION_10	CALL_1
0x4000608	          0x83e2fe	                     and edx, 0xfffffffe	       168	pen.c	FUNCTION_10	CALL_1
0x400060b	    0x889024010000	              mov byte [rax + 0x124], dl	       168	pen.c	FUNCTION_10	CALL_1
0x4000611	        0x488b45f8	                mov rax, qword [rbp - 8]	       168	pen.c	FUNCTION_10	CALL_1
0x4000615	      0xba00000000	                              mov edx, 0	       168	pen.c	FUNCTION_10	CALL_1
0x400061a	      0xbe01000000	                              mov esi, 1	       168	pen.c	FUNCTION_10	CALL_1
0x400061f	          0x4889c7	                            mov rdi, rax	       168	pen.c	FUNCTION_10	CALL_1
0x4000622	      0xe89ffdffff	                call sym.setpenattr_bool	       168	pen.c	FUNCTION_10	CALL_1
0x4000627	        0x488b45f8	                mov rax, qword [rbp - 8]	       169	pen.c	FUNCTION_10	CALL_2
0x400062b	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       169	pen.c	FUNCTION_10	CALL_2
0x4000632	          0x83e2f9	                     and edx, 0xfffffff9	       169	pen.c	FUNCTION_10	CALL_2
0x4000635	    0x889024010000	              mov byte [rax + 0x124], dl	       169	pen.c	FUNCTION_10	CALL_2
0x400063b	        0x488b45f8	                mov rax, qword [rbp - 8]	       169	pen.c	FUNCTION_10	CALL_2
0x400063f	      0xba00000000	                              mov edx, 0	       169	pen.c	FUNCTION_10	CALL_2
0x4000644	      0xbe02000000	                              mov esi, 2	       169	pen.c	FUNCTION_10	CALL_2
0x4000649	          0x4889c7	                            mov rdi, rax	       169	pen.c	FUNCTION_10	CALL_2
0x400064c	      0xe8cefdffff	                 call sym.setpenattr_int	       169	pen.c	FUNCTION_10	CALL_2
0x4000651	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	pen.c	FUNCTION_10	CALL_3
0x4000655	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       170	pen.c	FUNCTION_10	CALL_3
0x400065c	          0x83e2f7	                     and edx, 0xfffffff7	       170	pen.c	FUNCTION_10	CALL_3
0x400065f	    0x889024010000	              mov byte [rax + 0x124], dl	       170	pen.c	FUNCTION_10	CALL_3
0x4000665	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	pen.c	FUNCTION_10	CALL_3
0x4000669	      0xba00000000	                              mov edx, 0	       170	pen.c	FUNCTION_10	CALL_3
0x400066e	      0xbe03000000	                              mov esi, 3	       170	pen.c	FUNCTION_10	CALL_3
0x4000673	          0x4889c7	                            mov rdi, rax	       170	pen.c	FUNCTION_10	CALL_3
0x4000676	      0xe84bfdffff	                call sym.setpenattr_bool	       170	pen.c	FUNCTION_10	CALL_3
0x400067b	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	pen.c	FUNCTION_10	CALL_4
0x400067f	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       171	pen.c	FUNCTION_10	CALL_4
0x4000686	          0x83e2ef	                     and edx, 0xffffffef	       171	pen.c	FUNCTION_10	CALL_4
0x4000689	    0x889024010000	              mov byte [rax + 0x124], dl	       171	pen.c	FUNCTION_10	CALL_4
0x400068f	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	pen.c	FUNCTION_10	CALL_4
0x4000693	      0xba00000000	                              mov edx, 0	       171	pen.c	FUNCTION_10	CALL_4
0x4000698	      0xbe04000000	                              mov esi, 4	       171	pen.c	FUNCTION_10	CALL_4
0x400069d	          0x4889c7	                            mov rdi, rax	       171	pen.c	FUNCTION_10	CALL_4
0x40006a0	      0xe821fdffff	                call sym.setpenattr_bool	       171	pen.c	FUNCTION_10	CALL_4
0x40006a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	pen.c	FUNCTION_10	CALL_5
0x40006a9	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       172	pen.c	FUNCTION_10	CALL_5
0x40006b0	          0x83e2df	                     and edx, 0xffffffdf	       172	pen.c	FUNCTION_10	CALL_5
0x40006b3	    0x889024010000	              mov byte [rax + 0x124], dl	       172	pen.c	FUNCTION_10	CALL_5
0x40006b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	pen.c	FUNCTION_10	CALL_5
0x40006bd	      0xba00000000	                              mov edx, 0	       172	pen.c	FUNCTION_10	CALL_5
0x40006c2	      0xbe05000000	                              mov esi, 5	       172	pen.c	FUNCTION_10	CALL_5
0x40006c7	          0x4889c7	                            mov rdi, rax	       172	pen.c	FUNCTION_10	CALL_5
0x40006ca	      0xe8f7fcffff	                call sym.setpenattr_bool	       172	pen.c	FUNCTION_10	CALL_5
0x40006cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	pen.c	FUNCTION_10	CALL_6
0x40006d3	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       173	pen.c	FUNCTION_10	CALL_6
0x40006da	          0x83e2bf	                     and edx, 0xffffffbf	       173	pen.c	FUNCTION_10	CALL_6
0x40006dd	    0x889024010000	              mov byte [rax + 0x124], dl	       173	pen.c	FUNCTION_10	CALL_6
0x40006e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	pen.c	FUNCTION_10	CALL_6
0x40006e7	      0xba00000000	                              mov edx, 0	       173	pen.c	FUNCTION_10	CALL_6
0x40006ec	      0xbe06000000	                              mov esi, 6	       173	pen.c	FUNCTION_10	CALL_6
0x40006f1	          0x4889c7	                            mov rdi, rax	       173	pen.c	FUNCTION_10	CALL_6
0x40006f4	      0xe8cdfcffff	                call sym.setpenattr_bool	       173	pen.c	FUNCTION_10	CALL_6
0x40006f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	pen.c	FUNCTION_10	CALL_7
0x40006fd	     0xfb790240100	          movzx edx, word [rax + 0x124] 	       174	pen.c	FUNCTION_10	CALL_7
0x4000704	      0x6681e27ff8	                          and dx, 0xf87f	       174	pen.c	FUNCTION_10	CALL_7
0x4000709	    0x668990240100	              mov word [rax + 0x124], dx	       174	pen.c	FUNCTION_10	CALL_7
0x4000710	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	pen.c	FUNCTION_10	CALL_7
0x4000714	      0xba00000000	                              mov edx, 0	       174	pen.c	FUNCTION_10	CALL_7
0x4000719	      0xbe07000000	                              mov esi, 7	       174	pen.c	FUNCTION_10	CALL_7
0x400071e	          0x4889c7	                            mov rdi, rax	       174	pen.c	FUNCTION_10	CALL_7
0x4000721	      0xe8f9fcffff	                 call sym.setpenattr_int	       174	pen.c	FUNCTION_10	CALL_7
0x4000726	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	pen.c	FUNCTION_10
0x400072a	    0xc78070010000	    mov dword [rax + 0x170], 0xffffffff 	       176	pen.c	FUNCTION_10
0x4000734	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	pen.c	FUNCTION_10
0x4000738	    0xc78074010000	    mov dword [rax + 0x174], 0xffffffff 	       177	pen.c	FUNCTION_10
0x4000742	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	pen.c	FUNCTION_10	CALL_8
0x4000746	        0x488b55f8	                mov rdx, qword [rbp - 8]	       178	pen.c	FUNCTION_10	CALL_8
0x400074a	    0x8b9228010000	           mov edx, dword [rdx + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000750	    0x89901c010000	            mov dword [rax + 0x11c], edx	       178	pen.c	FUNCTION_10	CALL_8
0x4000756	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	pen.c	FUNCTION_10	CALL_8
0x400075a	    0x8b9028010000	           mov edx, dword [rax + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000760	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	pen.c	FUNCTION_10	CALL_8
0x4000764	      0xbe08000000	                              mov esi, 8	       178	pen.c	FUNCTION_10	CALL_8
0x4000769	          0x4889c7	                            mov rdi, rax	       178	pen.c	FUNCTION_10	CALL_8
0x400076c	      0xe807fdffff	                 call sym.setpenattr_col	       178	pen.c	FUNCTION_10	CALL_8
0x4000771	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	pen.c	FUNCTION_10	CALL_9
0x4000775	        0x488b55f8	                mov rdx, qword [rbp - 8]	       179	pen.c	FUNCTION_10	CALL_9
0x4000779	    0x8b922c010000	           mov edx, dword [rdx + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x400077f	    0x899020010000	            mov dword [rax + 0x120], edx	       179	pen.c	FUNCTION_10	CALL_9
0x4000785	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	pen.c	FUNCTION_10	CALL_9
0x4000789	    0x8b902c010000	           mov edx, dword [rax + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x400078f	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	pen.c	FUNCTION_10	CALL_9
0x4000793	      0xbe09000000	                              mov esi, 9	       179	pen.c	FUNCTION_10	CALL_9
0x4000798	          0x4889c7	                            mov rdi, rax	       179	pen.c	FUNCTION_10	CALL_9
0x400079b	      0xe8d8fcffff	                 call sym.setpenattr_col	       179	pen.c	FUNCTION_10	CALL_9
0x40007a0	              0x90	                                     nop	       180	pen.c	FUNCTION_10
0x40007a1	              0xc9	                                   leave	       180	pen.c	FUNCTION_10
0x40007a2	              0xc3	                                     ret	       180	pen.c	FUNCTION_10
vterm_state_get_penattr	ELSE,0:WHILE,0:SWITCH,1:CALL,0:DO,0:FOR,0:functions,0:IF,0	89
0x400193a	              0x55	                                push rbp	       473	pen.c	FUNCTION_19
0x400193b	          0x4889e5	                            mov rbp, rsp	       473	pen.c	FUNCTION_19
0x400193e	        0x48897df8	                mov qword [rbp - 8], rdi	       473	pen.c	FUNCTION_19
0x4001942	          0x8975f4	              mov dword [rbp - 0xc], esi	       473	pen.c	FUNCTION_19
0x4001945	        0x488955e8	             mov qword [rbp - 0x18], rdx	       473	pen.c	FUNCTION_19
0x4001949	        0x837df40a	              cmp dword [rbp - 0xc], 0xa	       474	pen.c	FUNCTION_19	SWITCH_1
0x400194d	     0xf8732010000	                            ja 0x4001a85	       474	pen.c	FUNCTION_19	SWITCH_1
0x4001953	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       474	pen.c	FUNCTION_19	SWITCH_1
0x4001956	    0x488b04c50000	                  mov rax, qword [rax*8]	       474	pen.c	FUNCTION_19	SWITCH_1
0x400195e	            0xffe0	                                 jmp rax	       474	pen.c	FUNCTION_19	SWITCH_1
0x4001960	        0x488b45f8	                mov rax, qword [rbp - 8]	       476	pen.c	FUNCTION_19	SWITCH_1
0x4001964	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       476	pen.c	FUNCTION_19	SWITCH_1
0x400196b	          0x83e001	                              and eax, 1	       476	pen.c	FUNCTION_19	SWITCH_1
0x400196e	           0xfb6d0	                           movzx edx, al	       476	pen.c	FUNCTION_19	SWITCH_1
0x4001971	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       476	pen.c	FUNCTION_19	SWITCH_1
0x4001975	            0x8910	                    mov dword [rax], edx	       476	pen.c	FUNCTION_19	SWITCH_1
0x4001977	      0xb801000000	                              mov eax, 1	       477	pen.c	FUNCTION_19	SWITCH_1
0x400197c	      0xe909010000	                           jmp 0x4001a8a	       477	pen.c	FUNCTION_19	SWITCH_1
0x4001981	        0x488b45f8	                mov rax, qword [rbp - 8]	       480	pen.c	FUNCTION_19	SWITCH_1
0x4001985	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       480	pen.c	FUNCTION_19	SWITCH_1
0x400198c	            0xd0e8	                               shr al, 1	       480	pen.c	FUNCTION_19	SWITCH_1
0x400198e	          0x83e003	                              and eax, 3	       480	pen.c	FUNCTION_19	SWITCH_1
0x4001991	           0xfb6d0	                           movzx edx, al	       480	pen.c	FUNCTION_19	SWITCH_1
0x4001994	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       480	pen.c	FUNCTION_19	SWITCH_1
0x4001998	            0x8910	                    mov dword [rax], edx	       480	pen.c	FUNCTION_19	SWITCH_1
0x400199a	      0xb801000000	                              mov eax, 1	       481	pen.c	FUNCTION_19	SWITCH_1
0x400199f	      0xe9e6000000	                           jmp 0x4001a8a	       481	pen.c	FUNCTION_19	SWITCH_1
0x40019a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       484	pen.c	FUNCTION_19	SWITCH_1
0x40019a8	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       484	pen.c	FUNCTION_19	SWITCH_1
0x40019af	          0xc0e803	                               shr al, 3	       484	pen.c	FUNCTION_19	SWITCH_1
0x40019b2	          0x83e001	                              and eax, 1	       484	pen.c	FUNCTION_19	SWITCH_1
0x40019b5	           0xfb6d0	                           movzx edx, al	       484	pen.c	FUNCTION_19	SWITCH_1
0x40019b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       484	pen.c	FUNCTION_19	SWITCH_1
0x40019bc	            0x8910	                    mov dword [rax], edx	       484	pen.c	FUNCTION_19	SWITCH_1
0x40019be	      0xb801000000	                              mov eax, 1	       485	pen.c	FUNCTION_19	SWITCH_1
0x40019c3	      0xe9c2000000	                           jmp 0x4001a8a	       485	pen.c	FUNCTION_19	SWITCH_1
0x40019c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	pen.c	FUNCTION_19	SWITCH_1
0x40019cc	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       488	pen.c	FUNCTION_19	SWITCH_1
0x40019d3	          0xc0e804	                               shr al, 4	       488	pen.c	FUNCTION_19	SWITCH_1
0x40019d6	          0x83e001	                              and eax, 1	       488	pen.c	FUNCTION_19	SWITCH_1
0x40019d9	           0xfb6d0	                           movzx edx, al	       488	pen.c	FUNCTION_19	SWITCH_1
0x40019dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       488	pen.c	FUNCTION_19	SWITCH_1
0x40019e0	            0x8910	                    mov dword [rax], edx	       488	pen.c	FUNCTION_19	SWITCH_1
0x40019e2	      0xb801000000	                              mov eax, 1	       489	pen.c	FUNCTION_19	SWITCH_1
0x40019e7	      0xe99e000000	                           jmp 0x4001a8a	       489	pen.c	FUNCTION_19	SWITCH_1
0x40019ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       492	pen.c	FUNCTION_19	SWITCH_1
0x40019f0	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       492	pen.c	FUNCTION_19	SWITCH_1
0x40019f7	          0xc0e805	                               shr al, 5	       492	pen.c	FUNCTION_19	SWITCH_1
0x40019fa	          0x83e001	                              and eax, 1	       492	pen.c	FUNCTION_19	SWITCH_1
0x40019fd	           0xfb6d0	                           movzx edx, al	       492	pen.c	FUNCTION_19	SWITCH_1
0x4001a00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       492	pen.c	FUNCTION_19	SWITCH_1
0x4001a04	            0x8910	                    mov dword [rax], edx	       492	pen.c	FUNCTION_19	SWITCH_1
0x4001a06	      0xb801000000	                              mov eax, 1	       493	pen.c	FUNCTION_19	SWITCH_1
0x4001a0b	            0xeb7d	                           jmp 0x4001a8a	       493	pen.c	FUNCTION_19	SWITCH_1
0x4001a0d	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	pen.c	FUNCTION_19	SWITCH_1
0x4001a11	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       496	pen.c	FUNCTION_19	SWITCH_1
0x4001a18	          0xc0e806	                               shr al, 6	       496	pen.c	FUNCTION_19	SWITCH_1
0x4001a1b	          0x83e001	                              and eax, 1	       496	pen.c	FUNCTION_19	SWITCH_1
0x4001a1e	           0xfb6d0	                           movzx edx, al	       496	pen.c	FUNCTION_19	SWITCH_1
0x4001a21	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       496	pen.c	FUNCTION_19	SWITCH_1
0x4001a25	            0x8910	                    mov dword [rax], edx	       496	pen.c	FUNCTION_19	SWITCH_1
0x4001a27	      0xb801000000	                              mov eax, 1	       497	pen.c	FUNCTION_19	SWITCH_1
0x4001a2c	            0xeb5c	                           jmp 0x4001a8a	       497	pen.c	FUNCTION_19	SWITCH_1
0x4001a2e	        0x488b45f8	                mov rax, qword [rbp - 8]	       500	pen.c	FUNCTION_19	SWITCH_1
0x4001a32	     0xfb780240100	          movzx eax, word [rax + 0x124] 	       500	pen.c	FUNCTION_19	SWITCH_1
0x4001a39	        0x66c1e807	                               shr ax, 7	       500	pen.c	FUNCTION_19	SWITCH_1
0x4001a3d	          0x83e00f	                            and eax, 0xf	       500	pen.c	FUNCTION_19	SWITCH_1
0x4001a40	           0xfb6d0	                           movzx edx, al	       500	pen.c	FUNCTION_19	SWITCH_1
0x4001a43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	pen.c	FUNCTION_19	SWITCH_1
0x4001a47	            0x8910	                    mov dword [rax], edx	       500	pen.c	FUNCTION_19	SWITCH_1
0x4001a49	      0xb801000000	                              mov eax, 1	       501	pen.c	FUNCTION_19	SWITCH_1
0x4001a4e	            0xeb3a	                           jmp 0x4001a8a	       501	pen.c	FUNCTION_19	SWITCH_1
0x4001a50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	pen.c	FUNCTION_19	SWITCH_1
0x4001a54	        0x488b55f8	                mov rdx, qword [rbp - 8]	       504	pen.c	FUNCTION_19	SWITCH_1
0x4001a58	    0x8b921c010000	           mov edx, dword [rdx + 0x11c] 	       504	pen.c	FUNCTION_19	SWITCH_1
0x4001a5e	            0x8910	                    mov dword [rax], edx	       504	pen.c	FUNCTION_19	SWITCH_1
0x4001a60	      0xb801000000	                              mov eax, 1	       505	pen.c	FUNCTION_19	SWITCH_1
0x4001a65	            0xeb23	                           jmp 0x4001a8a	       505	pen.c	FUNCTION_19	SWITCH_1
0x4001a67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       508	pen.c	FUNCTION_19	SWITCH_1
0x4001a6b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       508	pen.c	FUNCTION_19	SWITCH_1
0x4001a6f	    0x8b9220010000	           mov edx, dword [rdx + 0x120] 	       508	pen.c	FUNCTION_19	SWITCH_1
0x4001a75	            0x8910	                    mov dword [rax], edx	       508	pen.c	FUNCTION_19	SWITCH_1
0x4001a77	      0xb801000000	                              mov eax, 1	       509	pen.c	FUNCTION_19	SWITCH_1
0x4001a7c	            0xeb0c	                           jmp 0x4001a8a	       509	pen.c	FUNCTION_19	SWITCH_1
0x4001a7e	      0xb800000000	                              mov eax, 0	       512	pen.c	FUNCTION_19	SWITCH_1
0x4001a83	            0xeb05	                           jmp 0x4001a8a	       512	pen.c	FUNCTION_19	SWITCH_1
0x4001a85	      0xb800000000	                              mov eax, 0	       515	pen.c	FUNCTION_19
0x4001a8a	              0x5d	                                 pop rbp	       516	pen.c	FUNCTION_19
0x4001a8b	              0xc3	                                     ret	       516	pen.c	FUNCTION_19
