setpenattr	FOR,0:CALL,3:WHILE,0:SWITCH,0:IF,2:ELSE,0:DO,0:functions,0	14
0x40001d9	          0x4889f8	                            mov rax, rdi	       110	pen.c	FUNCTION_4
0x40001dc	        0x488b5708	                mov rdx, qword [rdi + 8]	       118	pen.c	FUNCTION_4	IF_2
0x40001e0	          0x4885d2	                           test rdx, rdx	       118	pen.c	FUNCTION_4	IF_2
0x40001e3	            0x741d	                            je 0x4000202	       118	pen.c	FUNCTION_4	IF_2
0x40001e5	            0x89f7	                            mov edi, esi	       118	pen.c	FUNCTION_4	IF_2
0x40001e7	        0x4c8b4230	              mov r8, qword [rdx + 0x30]	       118	pen.c	FUNCTION_4	IF_2
0x40001eb	          0x4d85c0	                             test r8, r8	       118	pen.c	FUNCTION_4	IF_2
0x40001ee	            0x7412	                            je 0x4000202	       118	pen.c	FUNCTION_4	IF_2
0x40001f0	        0x4883ec08	                              sub rsp, 8	       110	pen.c	FUNCTION_4
0x40001f4	          0x4889ce	                            mov rsi, rcx	       110	pen.c	FUNCTION_4
0x40001f7	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40001fb	          0x41ffd0	                                 call r8	       119	pen.c	FUNCTION_4	IF_2
0x40001fe	        0x4883c408	                              add rsp, 8	       120	pen.c	FUNCTION_4
0x4000202	            0xf3c3	                                     ret	       120	pen.c	FUNCTION_4
setpenattr_bool	FOR,0:CALL,1:WHILE,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	14
0x4000204	        0x4883ec18	                           sub rsp, 0x18	       123	pen.c	FUNCTION_5
0x4000208	    0x64488b042528	                mov rax, qword fs:[0x28]	       123	pen.c	FUNCTION_5
0x4000211	      0x4889442408	                mov qword [rsp + 8], rax	       123	pen.c	FUNCTION_5
0x4000216	            0x31c0	                            xor eax, eax	       123	pen.c	FUNCTION_5
0x4000218	          0x891424	                    mov dword [rsp], edx	       125	pen.c	FUNCTION_5
0x400021b	          0x4889e1	                            mov rcx, rsp	       126	pen.c	FUNCTION_5	CALL_1
0x400021e	      0xba01000000	                              mov edx, 1	       126	pen.c	FUNCTION_5	CALL_1
0x4000223	      0xe8b1ffffff	                     call sym.setpenattr	       126	pen.c	FUNCTION_5	CALL_1
0x4000228	      0x488b442408	                mov rax, qword [rsp + 8]	       127	pen.c	FUNCTION_5
0x400022d	    0x644833042528	                xor rax, qword fs:[0x28]	       127	pen.c	FUNCTION_5
0x4000236	            0x7405	                            je 0x400023d	       127	pen.c	FUNCTION_5
0x4000238	      0xe800000000	                          call 0x400023d	       127	pen.c	FUNCTION_5
0x400023d	        0x4883c418	                           add rsp, 0x18	       127	pen.c	FUNCTION_5
0x4000241	              0xc3	                                     ret	       127	pen.c	FUNCTION_5
vterm_state_resetpen	FOR,0:CALL,9:WHILE,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	50
0x4000348	              0x53	                                push rbx	       167	pen.c	FUNCTION_10
0x4000349	          0x4889fb	                            mov rbx, rdi	       167	pen.c	FUNCTION_10
0x400034c	    0x80a724010000	            and byte [rdi + 0x124], 0xfe	       168	pen.c	FUNCTION_10	CALL_1
0x4000353	      0xba00000000	                              mov edx, 0	       168	pen.c	FUNCTION_10	CALL_1
0x4000358	      0xbe01000000	                              mov esi, 1	       168	pen.c	FUNCTION_10	CALL_1
0x400035d	      0xe8a2feffff	                call sym.setpenattr_bool	       168	pen.c	FUNCTION_10	CALL_1
0x4000362	    0x80a324010000	            and byte [rbx + 0x124], 0xf9	       169	pen.c	FUNCTION_10	CALL_2
0x4000369	      0xba00000000	                              mov edx, 0	       169	pen.c	FUNCTION_10	CALL_2
0x400036e	      0xbe02000000	                              mov esi, 2	       169	pen.c	FUNCTION_10	CALL_2
0x4000373	          0x4889df	                            mov rdi, rbx	       169	pen.c	FUNCTION_10	CALL_2
0x4000376	      0xe8c7feffff	                 call sym.setpenattr_int	       169	pen.c	FUNCTION_10	CALL_2
0x400037b	    0x80a324010000	            and byte [rbx + 0x124], 0xf7	       170	pen.c	FUNCTION_10	CALL_3
0x4000382	      0xba00000000	                              mov edx, 0	       170	pen.c	FUNCTION_10	CALL_3
0x4000387	      0xbe03000000	                              mov esi, 3	       170	pen.c	FUNCTION_10	CALL_3
0x400038c	          0x4889df	                            mov rdi, rbx	       170	pen.c	FUNCTION_10	CALL_3
0x400038f	      0xe870feffff	                call sym.setpenattr_bool	       170	pen.c	FUNCTION_10	CALL_3
0x4000394	    0x80a324010000	            and byte [rbx + 0x124], 0xef	       171	pen.c	FUNCTION_10	CALL_4
0x400039b	      0xba00000000	                              mov edx, 0	       171	pen.c	FUNCTION_10	CALL_4
0x40003a0	      0xbe04000000	                              mov esi, 4	       171	pen.c	FUNCTION_10	CALL_4
0x40003a5	          0x4889df	                            mov rdi, rbx	       171	pen.c	FUNCTION_10	CALL_4
0x40003a8	      0xe857feffff	                call sym.setpenattr_bool	       171	pen.c	FUNCTION_10	CALL_4
0x40003ad	    0x80a324010000	            and byte [rbx + 0x124], 0xdf	       172	pen.c	FUNCTION_10	CALL_5
0x40003b4	      0xba00000000	                              mov edx, 0	       172	pen.c	FUNCTION_10	CALL_5
0x40003b9	      0xbe05000000	                              mov esi, 5	       172	pen.c	FUNCTION_10	CALL_5
0x40003be	          0x4889df	                            mov rdi, rbx	       172	pen.c	FUNCTION_10	CALL_5
0x40003c1	      0xe83efeffff	                call sym.setpenattr_bool	       172	pen.c	FUNCTION_10	CALL_5
0x40003c6	    0x80a324010000	            and byte [rbx + 0x124], 0xbf	       173	pen.c	FUNCTION_10	CALL_6
0x40003cd	      0xba00000000	                              mov edx, 0	       173	pen.c	FUNCTION_10	CALL_6
0x40003d2	      0xbe06000000	                              mov esi, 6	       173	pen.c	FUNCTION_10	CALL_6
0x40003d7	          0x4889df	                            mov rdi, rbx	       173	pen.c	FUNCTION_10	CALL_6
0x40003da	      0xe825feffff	                call sym.setpenattr_bool	       173	pen.c	FUNCTION_10	CALL_6
0x40003df	    0x6681a3240100	          and word [rbx + 0x124], 0xf87f	       174	pen.c	FUNCTION_10	CALL_7
0x40003e8	      0xba00000000	                              mov edx, 0	       174	pen.c	FUNCTION_10	CALL_7
0x40003ed	      0xbe07000000	                              mov esi, 7	       174	pen.c	FUNCTION_10	CALL_7
0x40003f2	          0x4889df	                            mov rdi, rbx	       174	pen.c	FUNCTION_10	CALL_7
0x40003f5	      0xe848feffff	                 call sym.setpenattr_int	       174	pen.c	FUNCTION_10	CALL_7
0x40003fa	    0xc78370010000	    mov dword [rbx + 0x170], 0xffffffff 	       176	pen.c	FUNCTION_10
0x4000404	    0xc78374010000	    mov dword [rbx + 0x174], 0xffffffff 	       177	pen.c	FUNCTION_10
0x400040e	    0x8b9328010000	           mov edx, dword [rbx + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000414	    0x89931c010000	            mov dword [rbx + 0x11c], edx	       178	pen.c	FUNCTION_10	CALL_8
0x400041a	      0xbe08000000	                              mov esi, 8	       178	pen.c	FUNCTION_10	CALL_8
0x400041f	          0x4889df	                            mov rdi, rbx	       178	pen.c	FUNCTION_10	CALL_8
0x4000422	      0xe859feffff	                 call sym.setpenattr_col	       178	pen.c	FUNCTION_10	CALL_8
0x4000427	    0x8b932c010000	           mov edx, dword [rbx + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x400042d	    0x899320010000	            mov dword [rbx + 0x120], edx	       179	pen.c	FUNCTION_10	CALL_9
0x4000433	      0xbe09000000	                              mov esi, 9	       179	pen.c	FUNCTION_10	CALL_9
0x4000438	          0x4889df	                            mov rdi, rbx	       179	pen.c	FUNCTION_10	CALL_9
0x400043b	      0xe840feffff	                 call sym.setpenattr_col	       179	pen.c	FUNCTION_10	CALL_9
0x4000440	              0x5b	                                 pop rbx	       180	pen.c	FUNCTION_10
0x4000441	              0xc3	                                     ret	       180	pen.c	FUNCTION_10
lookup_colour_palette	FOR,0:CALL,1:WHILE,0:SWITCH,0:IF,3:ELSE,2:DO,0:functions,0	63
0x4000040	          0x4889d1	                            mov rcx, rdx	        48	pen.c	FUNCTION_2
0x4000043	        0x4883fe0f	                            cmp rsi, 0xf	        49	pen.c	FUNCTION_2	IF_1
0x4000047	            0x770f	                            ja 0x4000058	        49	pen.c	FUNCTION_2	IF_1
0x4000049	    0x8b84b7300100	   mov eax, dword [rdi + rsi*4 + 0x130] 	        40	pen.c	FUNCTION_1	IF_1
0x4000050	            0x8902	                    mov dword [rdx], eax	        40	pen.c	FUNCTION_1	IF_1
0x4000052	      0xb801000000	                              mov eax, 1	        41	pen.c	FUNCTION_1	IF_1
0x4000057	              0xc3	                                     ret	        41	pen.c	FUNCTION_1	IF_1
0x4000058	        0x488d46f0	                   lea rax, [rsi - 0x10]	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400005c	    0x483dd7000000	                           cmp rax, 0xd7	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000062	     0xf879e000000	                            ja 0x4000106	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000068	          0x4889c6	                            mov rsi, rax	        55	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400006b	    0x49b8abaaaaaa	           movabs r8, 0x2aaaaaaaaaaaaaab	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000075	          0x49f7e8	                                 imul r8	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000078	          0x4989f1	                             mov r9, rsi	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400007b	        0x49c1f93f	                            sar r9, 0x3f	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400007f	          0x4889d7	                            mov rdi, rdx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000082	          0x4c29cf	                             sub rdi, r9	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000085	        0x488d047f	                  lea rax, [rdi + rdi*2]	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000089	          0x4801c0	                            add rax, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400008c	          0x4889f2	                            mov rdx, rsi	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400008f	          0x4829c2	                            sub rdx, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000092	    0x8b0495000000	                  mov eax, dword [rdx*4]	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000099	          0x884102	                  mov byte [rcx + 2], al	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400009c	          0x4889f8	                            mov rax, rdi	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x400009f	          0x49f7e8	                                 imul r8	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000a2	          0x4889f8	                            mov rax, rdi	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000a5	        0x48c1f83f	                           sar rax, 0x3f	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000a9	          0x4829c2	                            sub rdx, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000ac	        0x488d0452	                  lea rax, [rdx + rdx*2]	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000b0	          0x4801c0	                            add rax, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000b3	          0x4829c7	                            sub rdi, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000b6	    0x8b04bd000000	                  mov eax, dword [rdi*4]	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000bd	          0x884101	                  mov byte [rcx + 1], al	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000c0	    0x48ba398ee338	           movabs rdx, 0xe38e38e38e38e39	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000ca	          0x4889f0	                            mov rax, rsi	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000cd	          0x48f7ea	                                imul rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000d0	          0x48d1fa	                              sar rdx, 1	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000d3	          0x4889d6	                            mov rsi, rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000d6	          0x4c29ce	                             sub rsi, r9	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000d9	          0x4889f0	                            mov rax, rsi	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000dc	          0x49f7e8	                                 imul r8	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000df	          0x4889f0	                            mov rax, rsi	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000e2	        0x48c1f83f	                           sar rax, 0x3f	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000e6	          0x4829c2	                            sub rdx, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000e9	        0x488d0452	                  lea rax, [rdx + rdx*2]	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000ed	          0x4801c0	                            add rax, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000f0	          0x4829c6	                            sub rsi, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000f3	    0x8b04b5000000	                  mov eax, dword [rsi*4]	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000fa	            0x8801	                      mov byte [rcx], al	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x40000fc	        0xc64103ff	                mov byte [rcx + 3], 0xff	        60	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000100	      0xb801000000	                              mov eax, 1	        62	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000105	              0xc3	                                     ret	        62	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000106	    0x488d9618ffff	                   lea rdx, [rsi - 0xe8]	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x400010d	      0xb800000000	                              mov eax, 0	        76	pen.c	FUNCTION_2
0x4000112	        0x4883fa17	                           cmp rdx, 0x17	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000116	            0x7718	                            ja 0x4000130	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000118	    0x8b04b5000000	                  mov eax, dword [rsi*4]	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x400011f	          0x884102	                  mov byte [rcx + 2], al	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000122	          0x884101	                  mov byte [rcx + 1], al	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000125	            0x8801	                      mov byte [rcx], al	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000127	        0xc64103ff	                mov byte [rcx + 3], 0xff	        71	pen.c	FUNCTION_2	ELSE_2	IF_3
0x400012b	      0xb801000000	                              mov eax, 1	        73	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000130	            0xf3c3	                                     ret	        77	pen.c	FUNCTION_2
vterm_state_setpen	FOR,0:CALL,36:WHILE,2:SWITCH,1:IF,5:ELSE,0:DO,0:functions,0	338
0x40005a3	            0x85d2	                           test edx, edx	       240	pen.c	FUNCTION_17	WHILE_1
0x40005a5	     0xf8ee0050000	                           jle 0x4000b8b	       240	pen.c	FUNCTION_17	WHILE_1
0x40005ab	            0x4157	                                push r15	       234	pen.c	FUNCTION_17
0x40005ad	            0x4156	                                push r14	       234	pen.c	FUNCTION_17
0x40005af	            0x4155	                                push r13	       234	pen.c	FUNCTION_17
0x40005b1	            0x4154	                                push r12	       234	pen.c	FUNCTION_17
0x40005b3	              0x55	                                push rbp	       234	pen.c	FUNCTION_17
0x40005b4	              0x53	                                push rbx	       234	pen.c	FUNCTION_17
0x40005b5	        0x4883ec28	                           sub rsp, 0x28	       234	pen.c	FUNCTION_17
0x40005b9	          0x4189d6	                           mov r14d, edx	       234	pen.c	FUNCTION_17
0x40005bc	          0x4989f4	                            mov r12, rsi	       234	pen.c	FUNCTION_17
0x40005bf	          0x4989fd	                            mov r13, rdi	       234	pen.c	FUNCTION_17
0x40005c2	      0xbd00000000	                              mov ebp, 0	       240	pen.c	FUNCTION_17	WHILE_1
0x40005c7	    0x4c8dbf740100	                  lea r15, [rdi + 0x174]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x40005ce	    0x488d87200100	                  lea rax, [rdi + 0x120]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x40005d5	      0x4889442408	                mov qword [rsp + 8], rax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x40005da	    0x488d87700100	                  lea rax, [rdi + 0x170]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40005e1	      0x4889442410	             mov qword [rsp + 0x10], rax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40005e6	    0x488d871c0100	                  lea rax, [rdi + 0x11c]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40005ed	      0x4889442418	             mov qword [rsp + 0x18], rax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40005f2	          0x4863c5	                         movsxd rax, ebp	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40005f5	    0x488d34c50000	                        lea rsi, [rax*8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40005fd	        0x498b14c4	            mov rdx, qword [r12 + rax*8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000601	          0x4889d0	                            mov rax, rdx	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000604	      0x25ffffff7f	                     and eax, 0x7fffffff	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000609	        0x4883f81b	                           cmp rax, 0x1b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400060d	     0xf845d030000	                            je 0x4000970	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000613	        0x4883f81b	                           cmp rax, 0x1b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000617	     0xf8fa7000000	                            jg 0x40006c4	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400061d	        0x4883f809	                              cmp rax, 9	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000621	     0xf843a020000	                            je 0x4000861	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000627	        0x4883f809	                              cmp rax, 9	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400062b	            0x7f4b	                            jg 0x4000678	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400062d	        0x4883f803	                              cmp rax, 3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000631	     0xf8492010000	                            je 0x40007c9	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000637	        0x4883f803	                              cmp rax, 3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400063b	            0x7f18	                            jg 0x4000655	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400063d	          0x4885c0	                           test rax, rax	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000640	     0xf840f010000	                            je 0x4000755	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000646	        0x4883f801	                              cmp rax, 1	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400064a	     0xf8414010000	                            je 0x4000764	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000650	      0xe995010000	                           jmp 0x40007ea	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000655	        0x4883f805	                              cmp rax, 5	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000659	     0xf84c0010000	                            je 0x400081f	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400065f	        0x4883f805	                              cmp rax, 5	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000663	     0xf8c88010000	                            jl 0x40007f1	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000669	        0x4883f807	                              cmp rax, 7	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400066d	     0xf84cd010000	                            je 0x4000840	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000673	      0xe972010000	                           jmp 0x40007ea	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000678	        0x4883f816	                           cmp rax, 0x16	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400067c	     0xf846a020000	                            je 0x40008ec	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000682	        0x4883f816	                           cmp rax, 0x16	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000686	            0x7f19	                            jg 0x40006a1	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000688	        0x4883f813	                           cmp rax, 0x13	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400068c	     0xf8ef0010000	                           jle 0x4000882	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000692	        0x4883f815	                           cmp rax, 0x15	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000696	     0xf8422020000	                            je 0x40008be	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400069c	      0xe949010000	                           jmp 0x40007ea	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006a1	        0x4883f818	                           cmp rax, 0x18	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006a5	     0xf8483020000	                            je 0x400092e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006ab	        0x4883f818	                           cmp rax, 0x18	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006af	     0xf8c58020000	                            jl 0x400090d	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006b5	        0x4883f819	                           cmp rax, 0x19	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006b9	     0xf8490020000	                            je 0x400094f	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006bf	      0xe926010000	                           jmp 0x40007ea	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006c4	        0x4883f82f	                           cmp rax, 0x2f	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006c8	            0x7f42	                            jg 0x400070c	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006ca	        0x4883f828	                           cmp rax, 0x28	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006ce	     0xf8da4030000	                           jge 0x4000a78	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006d4	        0x4883f825	                           cmp rax, 0x25	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006d8	            0x7f19	                            jg 0x40006f3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006da	        0x4883f81e	                           cmp rax, 0x1e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006de	     0xf8dce020000	                           jge 0x40009b2	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006e4	        0x4883f81d	                           cmp rax, 0x1d	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006e8	     0xf84a3020000	                            je 0x4000991	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006ee	      0xe9f7000000	                           jmp 0x40007ea	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006f3	        0x4883f826	                           cmp rax, 0x26	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006f7	     0xf84f4020000	                            je 0x40009f1	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40006fd	        0x4883f827	                           cmp rax, 0x27	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000701	     0xf8444030000	                            je 0x4000a4b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000707	      0xe9de000000	                           jmp 0x40007ea	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400070c	        0x4883f861	                           cmp rax, 0x61	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000710	            0x7f23	                            jg 0x4000735	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000712	        0x4883f85a	                           cmp rax, 0x5a	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000716	     0xf8d02040000	                           jge 0x4000b1e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400071c	        0x4883f830	                           cmp rax, 0x30	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000720	     0xf8479030000	                            je 0x4000a9f	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000726	        0x4883f831	                           cmp rax, 0x31	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400072a	     0xf84c4030000	                            je 0x4000af4	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000730	      0xe9b5000000	                           jmp 0x40007ea	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000735	        0x4883f864	                           cmp rax, 0x64	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000739	     0xf8cab000000	                            jl 0x40007ea	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400073f	        0x4883f86b	                           cmp rax, 0x6b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000743	     0xf8ef9030000	                           jle 0x4000b42	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000749	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400074f	     0xf8595000000	                           jne 0x40007ea	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000755	          0x4c89ef	                            mov rdi, r13	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4000758	      0xe800000000	                          call 0x400075d	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x400075d	            0x89eb	                            mov ebx, ebp	       250	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400075f	      0xe900040000	                           jmp 0x4000b64	       250	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000764	    0x41808d240100	                or byte [r13 + 0x124], 1	       253	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400076c	      0xba01000000	                              mov edx, 1	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000771	      0xbe01000000	                              mov esi, 1	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000776	          0x4c89ef	                            mov rdi, r13	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000779	      0xe886faffff	                call sym.setpenattr_bool	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x400077e	    0x418b85700100	           mov eax, dword [r13 + 0x170] 	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000785	            0x89eb	                            mov ebx, ebp	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000787	          0x83f807	                              cmp eax, 7	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x400078a	     0xf87d4030000	                            ja 0x4000b64	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000790	    0x4183bd780100	              cmp dword [r13 + 0x178], 0	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000798	     0xf84c6030000	                            je 0x4000b64	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x400079e	    0x410fb6952401	          movzx edx, byte [r13 + 0x124] 	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x40007a6	          0x83e201	                              and edx, 1	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x40007a9	          0xc1e21f	                           shl edx, 0x1f	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x40007ac	          0xc1fa1f	                           sar edx, 0x1f	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x40007af	          0x83e208	                              and edx, 8	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x40007b2	             0x1d0	                            add eax, edx	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x40007b4	          0x4863d0	                         movsxd rdx, eax	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x40007b7	      0xbe08000000	                              mov esi, 8	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x40007bc	          0x4c89ef	                            mov rdi, r13	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x40007bf	      0xe8fafaffff	               call sym.set_pen_col_ansi	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x40007c4	      0xe99b030000	                           jmp 0x4000b64	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x40007c9	    0x41808d240100	                or byte [r13 + 0x124], 8	       260	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40007d1	      0xba01000000	                              mov edx, 1	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0x40007d6	      0xbe03000000	                              mov esi, 3	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0x40007db	          0x4c89ef	                            mov rdi, r13	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0x40007de	      0xe821faffff	                call sym.setpenattr_bool	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0x40007e3	            0x89eb	                            mov ebx, ebp	       262	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40007e5	      0xe97a030000	                           jmp 0x4000b64	       262	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40007ea	            0x89eb	                            mov ebx, ebp	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40007ec	      0xe973030000	                           jmp 0x4000b64	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x40007f1	    0x410fb6852401	          movzx eax, byte [r13 + 0x124] 	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40007f9	          0x83e0f9	                     and eax, 0xfffffff9	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40007fc	          0x83c802	                               or eax, 2	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40007ff	    0x418885240100	              mov byte [r13 + 0x124], al	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000806	      0xba01000000	                              mov edx, 1	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0x400080b	      0xbe02000000	                              mov esi, 2	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0x4000810	          0x4c89ef	                            mov rdi, r13	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0x4000813	      0xe82afaffff	                 call sym.setpenattr_int	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0x4000818	            0x89eb	                            mov ebx, ebp	       267	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400081a	      0xe945030000	                           jmp 0x4000b64	       267	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400081f	    0x41808d240100	             or byte [r13 + 0x124], 0x10	       270	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000827	      0xba01000000	                              mov edx, 1	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0x400082c	      0xbe04000000	                              mov esi, 4	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0x4000831	          0x4c89ef	                            mov rdi, r13	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0x4000834	      0xe8cbf9ffff	                call sym.setpenattr_bool	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0x4000839	            0x89eb	                            mov ebx, ebp	       272	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400083b	      0xe924030000	                           jmp 0x4000b64	       272	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000840	    0x41808d240100	             or byte [r13 + 0x124], 0x20	       275	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000848	      0xba01000000	                              mov edx, 1	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0x400084d	      0xbe05000000	                              mov esi, 5	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0x4000852	          0x4c89ef	                            mov rdi, r13	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0x4000855	      0xe8aaf9ffff	                call sym.setpenattr_bool	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0x400085a	            0x89eb	                            mov ebx, ebp	       277	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400085c	      0xe903030000	                           jmp 0x4000b64	       277	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000861	    0x41808d240100	            or byte [r13 + 0x124], 0x40 	       280	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000869	      0xba01000000	                              mov edx, 1	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0x400086e	      0xbe06000000	                              mov esi, 6	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0x4000873	          0x4c89ef	                            mov rdi, r13	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0x4000876	      0xe889f9ffff	                call sym.setpenattr_bool	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0x400087b	            0x89eb	                            mov ebx, ebp	       282	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400087d	      0xe9e2020000	                           jmp 0x4000b64	       282	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000882	          0x83ea0a	                            sub edx, 0xa	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000885	          0x83e20f	                            and edx, 0xf	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000888	            0x89d0	                            mov eax, edx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x400088a	          0x83e00f	                            and eax, 0xf	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x400088d	          0xc1e007	                              shl eax, 7	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000890	    0x410fb78d2401	          movzx ecx, word [r13 + 0x124] 	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4000898	      0x6681e17ff8	                          and cx, 0xf87f	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x400089d	             0x9c8	                             or eax, ecx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x400089f	    0x664189852401	              mov word [r13 + 0x124], ax	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x40008a7	           0xfb6d2	                           movzx edx, dl	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x40008aa	      0xbe07000000	                              mov esi, 7	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x40008af	          0x4c89ef	                            mov rdi, r13	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x40008b2	      0xe88bf9ffff	                 call sym.setpenattr_int	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0x40008b7	            0x89eb	                            mov ebx, ebp	       288	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40008b9	      0xe9a6020000	                           jmp 0x4000b64	       288	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40008be	    0x410fb6852401	          movzx eax, byte [r13 + 0x124] 	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40008c6	          0x83e0f9	                     and eax, 0xfffffff9	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40008c9	          0x83c804	                               or eax, 4	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40008cc	    0x418885240100	              mov byte [r13 + 0x124], al	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40008d3	      0xba02000000	                              mov edx, 2	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0x40008d8	      0xbe02000000	                              mov esi, 2	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0x40008dd	          0x4c89ef	                            mov rdi, r13	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0x40008e0	      0xe85df9ffff	                 call sym.setpenattr_int	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0x40008e5	            0x89eb	                            mov ebx, ebp	       293	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40008e7	      0xe978020000	                           jmp 0x4000b64	       293	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40008ec	    0x4180a5240100	            and byte [r13 + 0x124], 0xfe	       296	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40008f4	      0xba00000000	                              mov edx, 0	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0x40008f9	      0xbe01000000	                              mov esi, 1	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0x40008fe	          0x4c89ef	                            mov rdi, r13	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0x4000901	      0xe8fef8ffff	                call sym.setpenattr_bool	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0x4000906	            0x89eb	                            mov ebx, ebp	       298	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000908	      0xe957020000	                           jmp 0x4000b64	       298	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400090d	    0x4180a5240100	            and byte [r13 + 0x124], 0xf7	       301	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000915	      0xba00000000	                              mov edx, 0	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0x400091a	      0xbe03000000	                              mov esi, 3	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0x400091f	          0x4c89ef	                            mov rdi, r13	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0x4000922	      0xe8ddf8ffff	                call sym.setpenattr_bool	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0x4000927	            0x89eb	                            mov ebx, ebp	       303	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000929	      0xe936020000	                           jmp 0x4000b64	       303	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400092e	    0x4180a5240100	            and byte [r13 + 0x124], 0xf9	       306	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000936	      0xba00000000	                              mov edx, 0	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0x400093b	      0xbe02000000	                              mov esi, 2	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0x4000940	          0x4c89ef	                            mov rdi, r13	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0x4000943	      0xe8faf8ffff	                 call sym.setpenattr_int	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0x4000948	            0x89eb	                            mov ebx, ebp	       308	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400094a	      0xe915020000	                           jmp 0x4000b64	       308	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400094f	    0x4180a5240100	            and byte [r13 + 0x124], 0xef	       311	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000957	      0xba00000000	                              mov edx, 0	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0x400095c	      0xbe04000000	                              mov esi, 4	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0x4000961	          0x4c89ef	                            mov rdi, r13	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0x4000964	      0xe89bf8ffff	                call sym.setpenattr_bool	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0x4000969	            0x89eb	                            mov ebx, ebp	       313	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400096b	      0xe9f4010000	                           jmp 0x4000b64	       313	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000970	    0x4180a5240100	            and byte [r13 + 0x124], 0xdf	       316	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000978	      0xba00000000	                              mov edx, 0	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0x400097d	      0xbe05000000	                              mov esi, 5	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0x4000982	          0x4c89ef	                            mov rdi, r13	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0x4000985	      0xe87af8ffff	                call sym.setpenattr_bool	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0x400098a	            0x89eb	                            mov ebx, ebp	       318	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400098c	      0xe9d3010000	                           jmp 0x4000b64	       318	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000991	    0x4180a5240100	            and byte [r13 + 0x124], 0xbf	       321	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000999	      0xba00000000	                              mov edx, 0	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0x400099e	      0xbe06000000	                              mov esi, 6	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0x40009a3	          0x4c89ef	                            mov rdi, r13	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0x40009a6	      0xe859f8ffff	                call sym.setpenattr_bool	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0x40009ab	            0x89eb	                            mov ebx, ebp	       323	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40009ad	      0xe9b2010000	                           jmp 0x4000b64	       323	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40009b2	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x40009b8	          0x8d42e2	                   lea eax, [rdx - 0x1e]	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x40009bb	    0x418985700100	            mov dword [r13 + 0x170], eax	       328	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40009c2	    0x41f685240100	              test byte [r13 + 0x124], 1	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x40009ca	            0x740e	                            je 0x40009da	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x40009cc	          0x8d5008	                      lea edx, [rax + 8]	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x40009cf	    0x4183bd780100	              cmp dword [r13 + 0x178], 0	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x40009d7	           0xf45c2	                         cmovne eax, edx	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x40009da	          0x4863d0	                         movsxd rdx, eax	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0x40009dd	      0xbe08000000	                              mov esi, 8	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0x40009e2	          0x4c89ef	                            mov rdi, r13	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0x40009e5	      0xe8d4f8ffff	               call sym.set_pen_col_ansi	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0x40009ea	            0x89eb	                            mov ebx, ebp	       332	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40009ec	      0xe973010000	                           jmp 0x4000b64	       332	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40009f1	    0x41c785700100	    mov dword [r13 + 0x170], 0xffffffff 	       335	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40009fc	          0x4489f0	                           mov eax, r14d	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x40009ff	            0x29e8	                            sub eax, ebp	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x4000a01	            0x85c0	                           test eax, eax	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x4000a03	     0xf8e74010000	                           jle 0x4000b7d	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x4000a09	          0x8d48fe	                      lea ecx, [rax - 2]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000a0c	      0x498d543410	            lea rdx, [r12 + rsi + 0x10] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000a11	      0x498b743408	         mov rsi, qword [r12 + rsi + 8] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000a16	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000a1c	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000a21	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000a26	          0x4c89ef	                            mov rdi, r13	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000a29	      0xe804f7ffff	                  call sym.lookup_colour	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000a2e	        0x8d5c0501	                lea ebx, [rbp + rax + 1]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000a32	    0x418b951c0100	           mov edx, dword [r13 + 0x11c] 	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0x4000a39	      0xbe08000000	                              mov esi, 8	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0x4000a3e	          0x4c89ef	                            mov rdi, r13	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0x4000a41	      0xe83af8ffff	                 call sym.setpenattr_col	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0x4000a46	      0xe919010000	                           jmp 0x4000b64	       340	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000a4b	    0x41c785700100	    mov dword [r13 + 0x170], 0xffffffff 	       343	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000a56	    0x418b95280100	           mov edx, dword [r13 + 0x128] 	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000a5d	    0x4189951c0100	            mov dword [r13 + 0x11c], edx	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000a64	      0xbe08000000	                              mov esi, 8	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x4000a69	          0x4c89ef	                            mov rdi, r13	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x4000a6c	      0xe80ff8ffff	                 call sym.setpenattr_col	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x4000a71	            0x89eb	                            mov ebx, ebp	       346	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000a73	      0xe9ec000000	                           jmp 0x4000b64	       346	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000a78	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x4000a7e	          0x8d42d8	                   lea eax, [rdx - 0x28]	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x4000a81	    0x418985740100	            mov dword [r13 + 0x174], eax	       351	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000a88	          0x4863d0	                         movsxd rdx, eax	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x4000a8b	      0xbe09000000	                              mov esi, 9	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x4000a90	          0x4c89ef	                            mov rdi, r13	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x4000a93	      0xe826f8ffff	               call sym.set_pen_col_ansi	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x4000a98	            0x89eb	                            mov ebx, ebp	       353	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000a9a	      0xe9c5000000	                           jmp 0x4000b64	       353	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000a9f	    0x41c785740100	    mov dword [r13 + 0x174], 0xffffffff 	       356	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000aaa	          0x4489f0	                           mov eax, r14d	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x4000aad	            0x29e8	                            sub eax, ebp	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x4000aaf	            0x85c0	                           test eax, eax	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x4000ab1	     0xf8ec6000000	                           jle 0x4000b7d	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x4000ab7	          0x8d48fe	                      lea ecx, [rax - 2]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000aba	      0x498d543410	            lea rdx, [r12 + rsi + 0x10] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000abf	      0x498b743408	         mov rsi, qword [r12 + rsi + 8] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000ac4	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000aca	          0x4d89f9	                             mov r9, r15	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000acd	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000ad2	          0x4c89ef	                            mov rdi, r13	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000ad5	      0xe858f6ffff	                  call sym.lookup_colour	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000ada	        0x8d5c2801	                lea ebx, [rax + rbp + 1]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000ade	    0x418b95200100	           mov edx, dword [r13 + 0x120] 	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x4000ae5	      0xbe09000000	                              mov esi, 9	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x4000aea	          0x4c89ef	                            mov rdi, r13	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x4000aed	      0xe88ef7ffff	                 call sym.setpenattr_col	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x4000af2	            0xeb70	                           jmp 0x4000b64	       361	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000af4	    0x41c785740100	    mov dword [r13 + 0x174], 0xffffffff 	       364	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000aff	    0x418b952c0100	           mov edx, dword [r13 + 0x12c] 	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000b06	    0x418995200100	            mov dword [r13 + 0x120], edx	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000b0d	      0xbe09000000	                              mov esi, 9	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x4000b12	          0x4c89ef	                            mov rdi, r13	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x4000b15	      0xe866f7ffff	                 call sym.setpenattr_col	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x4000b1a	            0x89eb	                            mov ebx, ebp	       367	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000b1c	            0xeb46	                           jmp 0x4000b64	       367	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000b1e	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x4000b24	          0x8d42ae	                   lea eax, [rdx - 0x52]	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x4000b27	    0x418985700100	            mov dword [r13 + 0x170], eax	       372	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000b2e	          0x4863d0	                         movsxd rdx, eax	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x4000b31	      0xbe08000000	                              mov esi, 8	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x4000b36	          0x4c89ef	                            mov rdi, r13	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x4000b39	      0xe880f7ffff	               call sym.set_pen_col_ansi	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x4000b3e	            0x89eb	                            mov ebx, ebp	       374	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000b40	            0xeb22	                           jmp 0x4000b64	       374	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000b42	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x4000b48	          0x8d42a4	                   lea eax, [rdx - 0x5c]	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x4000b4b	    0x418985740100	            mov dword [r13 + 0x174], eax	       379	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000b52	          0x4863d0	                         movsxd rdx, eax	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4000b55	      0xbe09000000	                              mov esi, 9	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4000b5a	          0x4c89ef	                            mov rdi, r13	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4000b5d	      0xe85cf7ffff	               call sym.set_pen_col_ansi	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4000b62	            0x89eb	                            mov ebx, ebp	       381	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000b64	          0x8d6b01	                      lea ebp, [rbx + 1]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000b67	          0x4863c3	                         movsxd rax, ebx	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000b6a	            0x89eb	                            mov ebx, ebp	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000b6c	    0x41f644c40380	      test byte [r12 + rax*8 + 3], 0x80 	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000b72	            0x75f0	                           jne 0x4000b64	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000b74	          0x4139ee	                           cmp r14d, ebp	       240	pen.c	FUNCTION_17	WHILE_1
0x4000b77	     0xf8f75faffff	                            jg 0x40005f2	       240	pen.c	FUNCTION_17	WHILE_1
0x4000b7d	        0x4883c428	                           add rsp, 0x28	       395	pen.c	FUNCTION_17
0x4000b81	              0x5b	                                 pop rbx	       395	pen.c	FUNCTION_17
0x4000b82	              0x5d	                                 pop rbp	       395	pen.c	FUNCTION_17
0x4000b83	            0x415c	                                 pop r12	       395	pen.c	FUNCTION_17
0x4000b85	            0x415d	                                 pop r13	       395	pen.c	FUNCTION_17
0x4000b87	            0x415e	                                 pop r14	       395	pen.c	FUNCTION_17
0x4000b89	            0x415f	                                 pop r15	       395	pen.c	FUNCTION_17
0x4000b8b	            0xf3c3	                                     ret	       395	pen.c	FUNCTION_17
vterm_state_get_default_colors	FOR,0:CALL,0:WHILE,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	5
0x4000550	    0x8b8728010000	           mov eax, dword [rdi + 0x128] 	       204	pen.c	FUNCTION_12
0x4000556	            0x8906	                    mov dword [rsi], eax	       204	pen.c	FUNCTION_12
0x4000558	    0x8b872c010000	           mov eax, dword [rdi + 0x12c] 	       205	pen.c	FUNCTION_12
0x400055e	            0x8902	                    mov dword [rdx], eax	       205	pen.c	FUNCTION_12
0x4000560	              0xc3	                                     ret	       205	pen.c	FUNCTION_12
set_pen_col_ansi	FOR,0:CALL,2:WHILE,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	13
0x40002be	        0x4883ec08	                              sub rsp, 8	       144	pen.c	FUNCTION_8
0x40002c2	    0x488d8f200100	                  lea rcx, [rdi + 0x120]	       145	pen.c	FUNCTION_8
0x40002c9	    0x488d871c0100	                  lea rax, [rdi + 0x11c]	       145	pen.c	FUNCTION_8
0x40002d0	          0x83fe09	                              cmp esi, 9	       145	pen.c	FUNCTION_8
0x40002d3	        0x480f44c1	                          cmove rax, rcx	       145	pen.c	FUNCTION_8
0x40002d7	        0x4883fa0f	                            cmp rdx, 0xf	        39	pen.c	FUNCTION_1	IF_1
0x40002db	            0x7709	                            ja 0x40002e6	        39	pen.c	FUNCTION_1	IF_1
0x40002dd	    0x8b9497300100	   mov edx, dword [rdi + rdx*4 + 0x130] 	        40	pen.c	FUNCTION_1	IF_1
0x40002e4	            0x8910	                    mov dword [rax], edx	        40	pen.c	FUNCTION_1	IF_1
0x40002e6	            0x8b10	                    mov edx, dword [rax]	       149	pen.c	FUNCTION_8	CALL_2
0x40002e8	      0xe893ffffff	                 call sym.setpenattr_col	       149	pen.c	FUNCTION_8	CALL_2
0x40002ed	        0x4883c408	                              add rsp, 8	       150	pen.c	FUNCTION_8
0x40002f1	              0xc3	                                     ret	       150	pen.c	FUNCTION_8
vterm_state_get_penattr	FOR,0:CALL,0:WHILE,0:SWITCH,1:IF,0:ELSE,0:DO,0:functions,0	55
0x4000e3f	          0x83fe09	                              cmp esi, 9	       474	pen.c	FUNCTION_19	SWITCH_1
0x4000e42	     0xf87b5000000	                            ja 0x4000efd	       474	pen.c	FUNCTION_19	SWITCH_1
0x4000e48	            0x89f6	                            mov esi, esi	       474	pen.c	FUNCTION_19	SWITCH_1
0x4000e4a	    0xff24f5000000	                       jmp qword [rsi*8]	       474	pen.c	FUNCTION_19	SWITCH_1
0x4000e51	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       476	pen.c	FUNCTION_19	SWITCH_1
0x4000e58	          0x83e001	                              and eax, 1	       476	pen.c	FUNCTION_19	SWITCH_1
0x4000e5b	            0x8902	                    mov dword [rdx], eax	       476	pen.c	FUNCTION_19	SWITCH_1
0x4000e5d	      0xb801000000	                              mov eax, 1	       477	pen.c	FUNCTION_19	SWITCH_1
0x4000e62	              0xc3	                                     ret	       477	pen.c	FUNCTION_19	SWITCH_1
0x4000e63	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       480	pen.c	FUNCTION_19	SWITCH_1
0x4000e6a	            0xd0e8	                               shr al, 1	       480	pen.c	FUNCTION_19	SWITCH_1
0x4000e6c	          0x83e003	                              and eax, 3	       480	pen.c	FUNCTION_19	SWITCH_1
0x4000e6f	            0x8902	                    mov dword [rdx], eax	       480	pen.c	FUNCTION_19	SWITCH_1
0x4000e71	      0xb801000000	                              mov eax, 1	       481	pen.c	FUNCTION_19	SWITCH_1
0x4000e76	              0xc3	                                     ret	       481	pen.c	FUNCTION_19	SWITCH_1
0x4000e77	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       484	pen.c	FUNCTION_19	SWITCH_1
0x4000e7e	          0xc0e803	                               shr al, 3	       484	pen.c	FUNCTION_19	SWITCH_1
0x4000e81	          0x83e001	                              and eax, 1	       484	pen.c	FUNCTION_19	SWITCH_1
0x4000e84	            0x8902	                    mov dword [rdx], eax	       484	pen.c	FUNCTION_19	SWITCH_1
0x4000e86	      0xb801000000	                              mov eax, 1	       485	pen.c	FUNCTION_19	SWITCH_1
0x4000e8b	              0xc3	                                     ret	       485	pen.c	FUNCTION_19	SWITCH_1
0x4000e8c	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       488	pen.c	FUNCTION_19	SWITCH_1
0x4000e93	          0xc0e804	                               shr al, 4	       488	pen.c	FUNCTION_19	SWITCH_1
0x4000e96	          0x83e001	                              and eax, 1	       488	pen.c	FUNCTION_19	SWITCH_1
0x4000e99	            0x8902	                    mov dword [rdx], eax	       488	pen.c	FUNCTION_19	SWITCH_1
0x4000e9b	      0xb801000000	                              mov eax, 1	       489	pen.c	FUNCTION_19	SWITCH_1
0x4000ea0	              0xc3	                                     ret	       489	pen.c	FUNCTION_19	SWITCH_1
0x4000ea1	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       492	pen.c	FUNCTION_19	SWITCH_1
0x4000ea8	          0xc0e805	                               shr al, 5	       492	pen.c	FUNCTION_19	SWITCH_1
0x4000eab	          0x83e001	                              and eax, 1	       492	pen.c	FUNCTION_19	SWITCH_1
0x4000eae	            0x8902	                    mov dword [rdx], eax	       492	pen.c	FUNCTION_19	SWITCH_1
0x4000eb0	      0xb801000000	                              mov eax, 1	       493	pen.c	FUNCTION_19	SWITCH_1
0x4000eb5	              0xc3	                                     ret	       493	pen.c	FUNCTION_19	SWITCH_1
0x4000eb6	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       496	pen.c	FUNCTION_19	SWITCH_1
0x4000ebd	          0xc0e806	                               shr al, 6	       496	pen.c	FUNCTION_19	SWITCH_1
0x4000ec0	          0x83e001	                              and eax, 1	       496	pen.c	FUNCTION_19	SWITCH_1
0x4000ec3	            0x8902	                    mov dword [rdx], eax	       496	pen.c	FUNCTION_19	SWITCH_1
0x4000ec5	      0xb801000000	                              mov eax, 1	       497	pen.c	FUNCTION_19	SWITCH_1
0x4000eca	              0xc3	                                     ret	       497	pen.c	FUNCTION_19	SWITCH_1
0x4000ecb	     0xfb787240100	          movzx eax, word [rdi + 0x124] 	       500	pen.c	FUNCTION_19	SWITCH_1
0x4000ed2	        0x66c1e807	                               shr ax, 7	       500	pen.c	FUNCTION_19	SWITCH_1
0x4000ed6	          0x83e00f	                            and eax, 0xf	       500	pen.c	FUNCTION_19	SWITCH_1
0x4000ed9	            0x8902	                    mov dword [rdx], eax	       500	pen.c	FUNCTION_19	SWITCH_1
0x4000edb	      0xb801000000	                              mov eax, 1	       501	pen.c	FUNCTION_19	SWITCH_1
0x4000ee0	              0xc3	                                     ret	       501	pen.c	FUNCTION_19	SWITCH_1
0x4000ee1	    0x8b871c010000	           mov eax, dword [rdi + 0x11c] 	       504	pen.c	FUNCTION_19	SWITCH_1
0x4000ee7	            0x8902	                    mov dword [rdx], eax	       504	pen.c	FUNCTION_19	SWITCH_1
0x4000ee9	      0xb801000000	                              mov eax, 1	       505	pen.c	FUNCTION_19	SWITCH_1
0x4000eee	              0xc3	                                     ret	       505	pen.c	FUNCTION_19	SWITCH_1
0x4000eef	    0x8b8720010000	           mov eax, dword [rdi + 0x120] 	       508	pen.c	FUNCTION_19	SWITCH_1
0x4000ef5	            0x8902	                    mov dword [rdx], eax	       508	pen.c	FUNCTION_19	SWITCH_1
0x4000ef7	      0xb801000000	                              mov eax, 1	       509	pen.c	FUNCTION_19	SWITCH_1
0x4000efc	              0xc3	                                     ret	       509	pen.c	FUNCTION_19	SWITCH_1
0x4000efd	      0xb800000000	                              mov eax, 0	       512	pen.c	FUNCTION_19	SWITCH_1
0x4000f02	              0xc3	                                     ret	       516	pen.c	FUNCTION_19
vterm_state_set_default_colors	FOR,0:CALL,0:WHILE,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	5
0x400056b	            0x8b06	                    mov eax, dword [rsi]	       215	pen.c	FUNCTION_14
0x400056d	    0x898728010000	            mov dword [rdi + 0x128], eax	       215	pen.c	FUNCTION_14
0x4000573	            0x8b02	                    mov eax, dword [rdx]	       216	pen.c	FUNCTION_14
0x4000575	    0x89872c010000	            mov dword [rdi + 0x12c], eax	       216	pen.c	FUNCTION_14
0x400057b	              0xc3	                                     ret	       216	pen.c	FUNCTION_14
vterm_state_savepen	FOR,0:CALL,9:WHILE,0:SWITCH,0:IF,1:ELSE,1:DO,0:functions,0	62
0x4000442	            0x85f6	                           test esi, esi	       184	pen.c	FUNCTION_11	IF_1
0x4000444	            0x741b	                            je 0x4000461	       184	pen.c	FUNCTION_11	IF_1
0x4000446	    0x488b871c0100	           mov rax, qword [rdi + 0x11c] 	       185	pen.c	FUNCTION_11	IF_1
0x400044d	    0x488987880100	            mov qword [rdi + 0x188], rax	       185	pen.c	FUNCTION_11	IF_1
0x4000454	    0x8b8724010000	           mov eax, dword [rdi + 0x124] 	       185	pen.c	FUNCTION_11	IF_1
0x400045a	    0x898790010000	            mov dword [rdi + 0x190], eax	       185	pen.c	FUNCTION_11	IF_1
0x4000460	              0xc3	                                     ret	       185	pen.c	FUNCTION_11	IF_1
0x4000461	              0x53	                                push rbx	       183	pen.c	FUNCTION_11
0x4000462	          0x4889fb	                            mov rbx, rdi	       183	pen.c	FUNCTION_11
0x4000465	    0x488b87880100	           mov rax, qword [rdi + 0x188] 	       188	pen.c	FUNCTION_11	ELSE_1
0x400046c	    0x4889871c0100	            mov qword [rdi + 0x11c], rax	       188	pen.c	FUNCTION_11	ELSE_1
0x4000473	    0x8b9790010000	           mov edx, dword [rdi + 0x190] 	       188	pen.c	FUNCTION_11	ELSE_1
0x4000479	    0x899724010000	            mov dword [rdi + 0x124], edx	       188	pen.c	FUNCTION_11	ELSE_1
0x400047f	          0x83e201	                              and edx, 1	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x4000482	      0xbe01000000	                              mov esi, 1	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x4000487	      0xe878fdffff	                call sym.setpenattr_bool	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x400048c	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000493	            0xd0ea	                               shr dl, 1	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000495	          0x83e203	                              and edx, 3	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000498	      0xbe02000000	                              mov esi, 2	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x400049d	          0x4889df	                            mov rdi, rbx	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x40004a0	      0xe89dfdffff	                 call sym.setpenattr_int	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x40004a5	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x40004ac	          0xc0ea03	                               shr dl, 3	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x40004af	          0x83e201	                              and edx, 1	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x40004b2	      0xbe03000000	                              mov esi, 3	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x40004b7	          0x4889df	                            mov rdi, rbx	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x40004ba	      0xe845fdffff	                call sym.setpenattr_bool	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x40004bf	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40004c6	          0xc0ea04	                               shr dl, 4	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40004c9	          0x83e201	                              and edx, 1	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40004cc	      0xbe04000000	                              mov esi, 4	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40004d1	          0x4889df	                            mov rdi, rbx	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40004d4	      0xe82bfdffff	                call sym.setpenattr_bool	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40004d9	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40004e0	          0xc0ea05	                               shr dl, 5	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40004e3	          0x83e201	                              and edx, 1	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40004e6	      0xbe05000000	                              mov esi, 5	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40004eb	          0x4889df	                            mov rdi, rbx	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40004ee	      0xe811fdffff	                call sym.setpenattr_bool	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40004f3	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40004fa	          0xc0ea06	                               shr dl, 6	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40004fd	          0x83e201	                              and edx, 1	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x4000500	      0xbe06000000	                              mov esi, 6	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x4000505	          0x4889df	                            mov rdi, rbx	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x4000508	      0xe8f7fcffff	                call sym.setpenattr_bool	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x400050d	     0xfb793240100	          movzx edx, word [rbx + 0x124] 	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x4000514	        0x66c1ea07	                               shr dx, 7	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x4000518	          0x83e20f	                            and edx, 0xf	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x400051b	      0xbe07000000	                              mov esi, 7	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x4000520	          0x4889df	                            mov rdi, rbx	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x4000523	      0xe81afdffff	                 call sym.setpenattr_int	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x4000528	    0x8b931c010000	           mov edx, dword [rbx + 0x11c] 	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x400052e	      0xbe08000000	                              mov esi, 8	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x4000533	          0x4889df	                            mov rdi, rbx	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x4000536	      0xe845fdffff	                 call sym.setpenattr_col	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x400053b	    0x8b9320010000	           mov edx, dword [rbx + 0x120] 	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x4000541	      0xbe09000000	                              mov esi, 9	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x4000546	          0x4889df	                            mov rdi, rbx	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x4000549	      0xe832fdffff	                 call sym.setpenattr_col	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x400054e	              0x5b	                                 pop rbx	       200	pen.c	FUNCTION_11
0x400054f	              0xc3	                                     ret	       200	pen.c	FUNCTION_11
vterm_state_get_palette_color	FOR,0:CALL,1:WHILE,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	3
0x4000561	          0x4863f6	                         movsxd rsi, esi	       210	pen.c	FUNCTION_13	CALL_1
0x4000564	      0xe8d7faffff	          call sym.lookup_colour_palette	       210	pen.c	FUNCTION_13	CALL_1
0x4000569	            0xf3c3	                                     ret	       210	pen.c	FUNCTION_13	CALL_1
vterm_state_set_bold_highbright	FOR,0:CALL,0:WHILE,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	2
0x400059c	    0x89b778010000	            mov dword [rdi + 0x178], esi	       230	pen.c	FUNCTION_16
0x40005a2	              0xc3	                                     ret	       230	pen.c	FUNCTION_16
vterm_state_getpen	FOR,0:CALL,0:WHILE,0:SWITCH,0:IF,18:ELSE,6:DO,0:functions,0	165
0x4000b8d	      0xb800000000	                              mov eax, 0	       399	pen.c	FUNCTION_18
0x4000b92	    0xf68724010000	              test byte [rdi + 0x124], 1	       401	pen.c	FUNCTION_18	IF_1
0x4000b99	            0x740c	                            je 0x4000ba7	       401	pen.c	FUNCTION_18	IF_1
0x4000b9b	    0x48c706010000	                      mov qword [rsi], 1	       402	pen.c	FUNCTION_18	IF_1
0x4000ba2	      0xb801000000	                              mov eax, 1	       402	pen.c	FUNCTION_18	IF_1
0x4000ba7	    0xf68724010000	              test byte [rdi + 0x124], 8	       404	pen.c	FUNCTION_18	IF_2
0x4000bae	            0x740e	                            je 0x4000bbe	       404	pen.c	FUNCTION_18	IF_2
0x4000bb0	          0x4863d0	                         movsxd rdx, eax	       405	pen.c	FUNCTION_18	IF_2
0x4000bb3	    0x48c704d60300	              mov qword [rsi + rdx*8], 3	       405	pen.c	FUNCTION_18	IF_2
0x4000bbb	          0x8d4001	                      lea eax, [rax + 1]	       405	pen.c	FUNCTION_18	IF_2
0x4000bbe	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       407	pen.c	FUNCTION_18	IF_3
0x4000bc5	          0x83e206	                              and edx, 6	       407	pen.c	FUNCTION_18	IF_3
0x4000bc8	          0x80fa02	                               cmp dl, 2	       407	pen.c	FUNCTION_18	IF_3
0x4000bcb	            0x750e	                           jne 0x4000bdb	       407	pen.c	FUNCTION_18	IF_3
0x4000bcd	          0x4863d0	                         movsxd rdx, eax	       408	pen.c	FUNCTION_18	IF_3
0x4000bd0	    0x48c704d60400	              mov qword [rsi + rdx*8], 4	       408	pen.c	FUNCTION_18	IF_3
0x4000bd8	          0x8d4001	                      lea eax, [rax + 1]	       408	pen.c	FUNCTION_18	IF_3
0x4000bdb	    0xf68724010000	          test byte [rdi + 0x124], 0x10 	       410	pen.c	FUNCTION_18	IF_4
0x4000be2	            0x740e	                            je 0x4000bf2	       410	pen.c	FUNCTION_18	IF_4
0x4000be4	          0x4863d0	                         movsxd rdx, eax	       411	pen.c	FUNCTION_18	IF_4
0x4000be7	    0x48c704d60500	              mov qword [rsi + rdx*8], 5	       411	pen.c	FUNCTION_18	IF_4
0x4000bef	          0x8d4001	                      lea eax, [rax + 1]	       411	pen.c	FUNCTION_18	IF_4
0x4000bf2	    0xf68724010000	          test byte [rdi + 0x124], 0x20 	       413	pen.c	FUNCTION_18	IF_5
0x4000bf9	            0x740e	                            je 0x4000c09	       413	pen.c	FUNCTION_18	IF_5
0x4000bfb	          0x4863d0	                         movsxd rdx, eax	       414	pen.c	FUNCTION_18	IF_5
0x4000bfe	    0x48c704d60700	              mov qword [rsi + rdx*8], 7	       414	pen.c	FUNCTION_18	IF_5
0x4000c06	          0x8d4001	                      lea eax, [rax + 1]	       414	pen.c	FUNCTION_18	IF_5
0x4000c09	    0xf68724010000	          test byte [rdi + 0x124], 0x40 	       416	pen.c	FUNCTION_18	IF_6
0x4000c10	            0x740e	                            je 0x4000c20	       416	pen.c	FUNCTION_18	IF_6
0x4000c12	          0x4863d0	                         movsxd rdx, eax	       417	pen.c	FUNCTION_18	IF_6
0x4000c15	    0x48c704d60900	              mov qword [rsi + rdx*8], 9	       417	pen.c	FUNCTION_18	IF_6
0x4000c1d	          0x8d4001	                      lea eax, [rax + 1]	       417	pen.c	FUNCTION_18	IF_6
0x4000c20	    0x66f787240100	         test word [rdi + 0x124], 0x780 	       419	pen.c	FUNCTION_18	IF_7
0x4000c29	            0x741c	                            je 0x4000c47	       419	pen.c	FUNCTION_18	IF_7
0x4000c2b	          0x4863c8	                         movsxd rcx, eax	       420	pen.c	FUNCTION_18	IF_7
0x4000c2e	     0xfb797240100	          movzx edx, word [rdi + 0x124] 	       420	pen.c	FUNCTION_18	IF_7
0x4000c35	        0x66c1ea07	                               shr dx, 7	       420	pen.c	FUNCTION_18	IF_7
0x4000c39	          0x83e20f	                            and edx, 0xf	       420	pen.c	FUNCTION_18	IF_7
0x4000c3c	        0x488d520a	                    lea rdx, [rdx + 0xa]	       420	pen.c	FUNCTION_18	IF_7
0x4000c40	        0x488914ce	            mov qword [rsi + rcx*8], rdx	       420	pen.c	FUNCTION_18	IF_7
0x4000c44	          0x8d4001	                      lea eax, [rax + 1]	       420	pen.c	FUNCTION_18	IF_7
0x4000c47	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       422	pen.c	FUNCTION_18	IF_8
0x4000c4e	          0x83e206	                              and edx, 6	       422	pen.c	FUNCTION_18	IF_8
0x4000c51	          0x80fa04	                               cmp dl, 4	       422	pen.c	FUNCTION_18	IF_8
0x4000c54	            0x750e	                           jne 0x4000c64	       422	pen.c	FUNCTION_18	IF_8
0x4000c56	          0x4863d0	                         movsxd rdx, eax	       423	pen.c	FUNCTION_18	IF_8
0x4000c59	    0x48c704d61500	          mov qword [rsi + rdx*8], 0x15 	       423	pen.c	FUNCTION_18	IF_8
0x4000c61	          0x8d4001	                      lea eax, [rax + 1]	       423	pen.c	FUNCTION_18	IF_8
0x4000c64	    0x8b9770010000	           mov edx, dword [rdi + 0x170] 	       425	pen.c	FUNCTION_18	IF_9
0x4000c6a	          0x83fa07	                              cmp edx, 7	       425	pen.c	FUNCTION_18	IF_9
0x4000c6d	            0x7714	                            ja 0x4000c83	       425	pen.c	FUNCTION_18	IF_9
0x4000c6f	          0x8d4801	                      lea ecx, [rax + 1]	       426	pen.c	FUNCTION_18	IF_9
0x4000c72	            0x4898	                                    cdqe	       426	pen.c	FUNCTION_18	IF_9
0x4000c74	          0x83c21e	                           add edx, 0x1e	       426	pen.c	FUNCTION_18	IF_9
0x4000c77	          0x4863d2	                         movsxd rdx, edx	       426	pen.c	FUNCTION_18	IF_9
0x4000c7a	        0x488914c6	            mov qword [rsi + rax*8], rdx	       426	pen.c	FUNCTION_18	IF_9
0x4000c7e	      0xe9d3000000	                           jmp 0x4000d56	       426	pen.c	FUNCTION_18	IF_9
0x4000c83	          0x8d4af8	                      lea ecx, [rdx - 8]	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4000c86	          0x83f907	                              cmp ecx, 7	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4000c89	            0x7714	                            ja 0x4000c9f	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4000c8b	          0x8d4801	                      lea ecx, [rax + 1]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4000c8e	            0x4898	                                    cdqe	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4000c90	          0x83c252	                           add edx, 0x52	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4000c93	          0x4863d2	                         movsxd rdx, edx	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4000c96	        0x488914c6	            mov qword [rsi + rax*8], rdx	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4000c9a	      0xe9b7000000	                           jmp 0x4000d56	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4000c9f	          0x8d4af0	                   lea ecx, [rdx - 0x10]	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000ca2	    0x81f9ef000000	                           cmp ecx, 0xef	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000ca8	            0x7730	                            ja 0x4000cda	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000caa	          0x4863c8	                         movsxd rcx, eax	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000cad	    0x488d14cd0000	                        lea rdx, [rcx*8]	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000cb5	    0x41ba26000080	                    mov r10d, 0x80000026	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000cbb	        0x4c8914ce	            mov qword [rsi + rcx*8], r10	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000cbf	      0xb905000080	                     mov ecx, 0x80000005	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000cc4	      0x48894c1608	          mov qword [rsi + rdx + 8], rcx	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000cc9	          0x8d4803	                      lea ecx, [rax + 3]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000ccc	    0x486387700100	        movsxd rax, dword [rdi + 0x170] 	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000cd3	      0x4889441610	       mov qword [rsi + rdx + 0x10], rax	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000cd8	            0xeb7c	                           jmp 0x4000d56	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000cda	            0x89c1	                            mov ecx, eax	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4000cdc	          0x83faff	             cmp edx, 0xffffffffffffffff	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x4000cdf	            0x7575	                           jne 0x4000d56	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x4000ce1	    0x448b871c0100	           mov r8d, dword [rdi + 0x11c] 	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000ce8	    0x4181e0ffffff	                       and r8d, 0xffffff	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000cef	    0x8b9728010000	           mov edx, dword [rdi + 0x128] 	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000cf5	    0x81e2ffffff00	                       and edx, 0xffffff	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000cfb	          0x4139d0	                            cmp r8d, edx	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000cfe	            0x7456	                            je 0x4000d56	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d00	          0x4863c8	                         movsxd rcx, eax	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d03	    0x488d14cd0000	                        lea rdx, [rcx*8]	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d0b	    0x41bb26000080	                    mov r11d, 0x80000026	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d11	        0x4c891cce	            mov qword [rsi + rcx*8], r11	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d15	      0xb902000080	                     mov ecx, 0x80000002	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d1a	      0x48894c1608	          mov qword [rsi + rdx + 8], rcx	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d1f	     0xfb68f1c0100	          movzx ecx, byte [rdi + 0x11c] 	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d26	    0x81c900000080	                      or ecx, 0x80000000	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d2c	            0x89c9	                            mov ecx, ecx	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d2e	      0x48894c1610	       mov qword [rsi + rdx + 0x10], rcx	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d33	     0xfb68f1d0100	          movzx ecx, byte [rdi + 0x11d] 	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d3a	    0x81c900000080	                      or ecx, 0x80000000	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d40	            0x89c9	                            mov ecx, ecx	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d42	      0x48894c1618	       mov qword [rsi + rdx + 0x18], rcx	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d47	          0x8d4805	                      lea ecx, [rax + 5]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d4a	     0xfb6871e0100	          movzx eax, byte [rdi + 0x11e] 	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d51	      0x4889441620	       mov qword [rsi + rdx + 0x20], rax	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4000d56	    0x8b9774010000	           mov edx, dword [rdi + 0x174] 	       447	pen.c	FUNCTION_18	IF_14
0x4000d5c	          0x83fa07	                              cmp edx, 7	       447	pen.c	FUNCTION_18	IF_14
0x4000d5f	            0x7711	                            ja 0x4000d72	       447	pen.c	FUNCTION_18	IF_14
0x4000d61	          0x8d4101	                      lea eax, [rcx + 1]	       448	pen.c	FUNCTION_18	IF_14
0x4000d64	          0x4863c9	                         movsxd rcx, ecx	       448	pen.c	FUNCTION_18	IF_14
0x4000d67	          0x83c228	                           add edx, 0x28	       448	pen.c	FUNCTION_18	IF_14
0x4000d6a	          0x4863d2	                         movsxd rdx, edx	       448	pen.c	FUNCTION_18	IF_14
0x4000d6d	        0x488914ce	            mov qword [rsi + rcx*8], rdx	       448	pen.c	FUNCTION_18	IF_14
0x4000d71	              0xc3	                                     ret	       448	pen.c	FUNCTION_18	IF_14
0x4000d72	          0x8d42f8	                      lea eax, [rdx - 8]	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4000d75	          0x83f807	                              cmp eax, 7	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4000d78	            0x7711	                            ja 0x4000d8b	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4000d7a	          0x8d4101	                      lea eax, [rcx + 1]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4000d7d	          0x4863c9	                         movsxd rcx, ecx	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4000d80	          0x83c25c	                           add edx, 0x5c	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4000d83	          0x4863d2	                         movsxd rdx, edx	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4000d86	        0x488914ce	            mov qword [rsi + rcx*8], rdx	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4000d8a	              0xc3	                                     ret	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4000d8b	          0x8d42f0	                   lea eax, [rdx - 0x10]	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000d8e	      0x3def000000	                           cmp eax, 0xef	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000d93	            0x772f	                            ja 0x4000dc4	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000d95	          0x4863c1	                         movsxd rax, ecx	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000d98	    0x488d14c50000	                        lea rdx, [rax*8]	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000da0	    0x41b930000080	                     mov r9d, 0x80000030	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000da6	        0x4c890cc6	             mov qword [rsi + rax*8], r9	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000daa	      0xb805000080	                     mov eax, 0x80000005	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000daf	      0x4889441608	          mov qword [rsi + rdx + 8], rax	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000db4	          0x8d4103	                      lea eax, [rcx + 3]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000db7	    0x48638f740100	        movsxd rcx, dword [rdi + 0x174] 	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000dbe	      0x48894c1610	       mov qword [rsi + rdx + 0x10], rcx	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000dc3	              0xc3	                                     ret	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000dc4	            0x89c8	                            mov eax, ecx	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4000dc6	          0x83faff	             cmp edx, 0xffffffffffffffff	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x4000dc9	            0x7572	                           jne 0x4000e3d	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x4000dcb	    0x8b9720010000	           mov edx, dword [rdi + 0x120] 	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000dd1	    0x81e2ffffff00	                       and edx, 0xffffff	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000dd7	    0x8b872c010000	           mov eax, dword [rdi + 0x12c] 	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000ddd	      0x25ffffff00	                       and eax, 0xffffff	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000de2	            0x39c2	                            cmp edx, eax	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000de4	            0x7455	                            je 0x4000e3b	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000de6	          0x4863c1	                         movsxd rax, ecx	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000de9	    0x488d14c50000	                        lea rdx, [rax*8]	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000df1	    0x41bb30000080	                    mov r11d, 0x80000030	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000df7	        0x4c891cc6	            mov qword [rsi + rax*8], r11	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000dfb	      0xb802000080	                     mov eax, 0x80000002	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e00	      0x4889441608	          mov qword [rsi + rdx + 8], rax	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e05	     0xfb687200100	          movzx eax, byte [rdi + 0x120] 	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e0c	       0xd00000080	                      or eax, 0x80000000	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e11	            0x89c0	                            mov eax, eax	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e13	      0x4889441610	       mov qword [rsi + rdx + 0x10], rax	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e18	     0xfb687210100	          movzx eax, byte [rdi + 0x121] 	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e1f	       0xd00000080	                      or eax, 0x80000000	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e24	            0x89c0	                            mov eax, eax	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e26	      0x4889441618	       mov qword [rsi + rdx + 0x18], rax	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e2b	          0x8d4105	                      lea eax, [rcx + 5]	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e2e	     0xfb68f220100	          movzx ecx, byte [rdi + 0x122] 	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e35	      0x48894c1620	       mov qword [rsi + rdx + 0x20], rcx	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e3a	              0xc3	                                     ret	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e3b	            0x89c8	                            mov eax, ecx	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4000e3d	            0xf3c3	                                     ret	       470	pen.c	FUNCTION_18
vterm_state_newpen	FOR,1:CALL,0:WHILE,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	15
0x40002f2	    0xc6872a010000	           mov byte [rdi + 0x12a], 0xf0 	       157	pen.c	FUNCTION_9
0x40002f9	    0xc68729010000	           mov byte [rdi + 0x129], 0xf0 	       157	pen.c	FUNCTION_9
0x4000300	    0xc68728010000	           mov byte [rdi + 0x128], 0xf0 	       157	pen.c	FUNCTION_9
0x4000307	    0xc6872b010000	               mov byte [rdi + 0x12b], 0	       158	pen.c	FUNCTION_9
0x400030e	    0xc6872e010000	               mov byte [rdi + 0x12e], 0	       159	pen.c	FUNCTION_9
0x4000315	    0xc6872d010000	               mov byte [rdi + 0x12d], 0	       159	pen.c	FUNCTION_9
0x400031c	    0xc6872c010000	               mov byte [rdi + 0x12c], 0	       159	pen.c	FUNCTION_9
0x4000323	    0xc6872f010000	               mov byte [rdi + 0x12f], 0	       160	pen.c	FUNCTION_9
0x400032a	      0xb800000000	                              mov eax, 0	       160	pen.c	FUNCTION_9
0x400032f	    0x8b9000000000	                    mov edx, dword [rax]	       163	pen.c	FUNCTION_9	FOR_1
0x4000335	    0x899407300100	      mov dword [rdi + rax + 0x130], edx	       163	pen.c	FUNCTION_9	FOR_1
0x400033c	        0x4883c004	                              add rax, 4	       163	pen.c	FUNCTION_9	FOR_1
0x4000340	        0x4883f840	                           cmp rax, 0x40	       162	pen.c	FUNCTION_9	FOR_1
0x4000344	            0x75e9	                           jne 0x400032f	       162	pen.c	FUNCTION_9	FOR_1
0x4000346	            0xf3c3	                                     ret	       164	pen.c	FUNCTION_9
lookup_colour	FOR,0:CALL,7:WHILE,0:SWITCH,1:IF,2:ELSE,0:DO,0:functions,0	47
0x4000132	          0x83fe02	                              cmp esi, 2	        81	pen.c	FUNCTION_3	SWITCH_1
0x4000135	            0x740a	                            je 0x4000141	        81	pen.c	FUNCTION_3	SWITCH_1
0x4000137	          0x83fe05	                              cmp esi, 5	        81	pen.c	FUNCTION_3	SWITCH_1
0x400013a	            0x7431	                            je 0x400016d	        81	pen.c	FUNCTION_3	SWITCH_1
0x400013c	      0xe98f000000	                           jmp 0x40001d0	        81	pen.c	FUNCTION_3	SWITCH_1
0x4000141	            0x89c8	                            mov eax, ecx	        84	pen.c	FUNCTION_3	SWITCH_1	IF_1
0x4000143	          0x83f902	                              cmp ecx, 2	        83	pen.c	FUNCTION_3	SWITCH_1	IF_1
0x4000146	     0xf8e8b000000	                           jle 0x40001d7	        83	pen.c	FUNCTION_3	SWITCH_1	IF_1
0x400014c	          0x488b02	                    mov rax, qword [rdx]	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x400014f	          0x418800	                       mov byte [r8], al	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x4000152	        0x488b4208	                mov rax, qword [rdx + 8]	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000156	        0x41884001	                   mov byte [r8 + 1], al	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x400015a	        0x488b4210	            mov rax, qword [rdx + 0x10] 	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x400015e	        0x41884002	                   mov byte [r8 + 2], al	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x4000162	      0x41c64003ff	                 mov byte [r8 + 3], 0xff	        89	pen.c	FUNCTION_3	SWITCH_1
0x4000167	      0xb803000000	                              mov eax, 3	        91	pen.c	FUNCTION_3	SWITCH_1
0x400016c	              0xc3	                                     ret	        91	pen.c	FUNCTION_3	SWITCH_1
0x400016d	              0x53	                                push rbx	        80	pen.c	FUNCTION_3
0x400016e	          0x4d85c9	                             test r9, r9	        94	pen.c	FUNCTION_3	SWITCH_1	IF_2
0x4000171	            0x7423	                            je 0x4000196	        94	pen.c	FUNCTION_3	SWITCH_1	IF_2
0x4000173	          0x488b02	                    mov rax, qword [rdx]	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000176	          0x4889c6	                            mov rsi, rax	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000179	    0x81e6ffffff7f	                     and esi, 0x7fffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x400017f	      0x25ffffff7f	                     and eax, 0x7fffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000184	    0x4881feffffff	                     cmp rsi, 0x3fffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x400018b	      0xbeffffffff	                     mov esi, 0xffffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000190	           0xf44c6	                          cmove eax, esi	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000193	          0x418901	                     mov dword [r9], eax	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000196	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x400019d	            0x85c9	                           test ecx, ecx	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x400019f	            0x741b	                            je 0x40001bc	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x40001a1	          0x488b32	                    mov rsi, qword [rdx]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x40001a4	    0x81e6ffffff7f	                     and esi, 0x7fffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x40001aa	    0x4881feffffff	                     cmp rsi, 0x3fffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x40001b1	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x40001b8	        0x480f44f0	                          cmove rsi, rax	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x40001bc	          0x4c89c2	                             mov rdx, r8	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x40001bf	            0x89cb	                            mov ebx, ecx	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x40001c1	      0xe87afeffff	          call sym.lookup_colour_palette	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x40001c6	            0x85db	                           test ebx, ebx	        99	pen.c	FUNCTION_3	SWITCH_1
0x40001c8	           0xf95c0	                                setne al	        99	pen.c	FUNCTION_3	SWITCH_1
0x40001cb	           0xfb6c0	                           movzx eax, al	        99	pen.c	FUNCTION_3	SWITCH_1
0x40001ce	            0xeb06	                           jmp 0x40001d6	        99	pen.c	FUNCTION_3	SWITCH_1
0x40001d0	      0xb800000000	                              mov eax, 0	       103	pen.c	FUNCTION_3	SWITCH_1
0x40001d5	              0xc3	                                     ret	       103	pen.c	FUNCTION_3	SWITCH_1
0x40001d6	              0x5b	                                 pop rbx	       105	pen.c	FUNCTION_3
0x40001d7	            0xf3c3	                                     ret	       105	pen.c	FUNCTION_3
vterm_state_set_palette_color	FOR,0:CALL,0:WHILE,0:SWITCH,0:IF,1:ELSE,0:DO,0:functions,0	9
0x400057c	          0x83fe0f	                            cmp esi, 0xf	       221	pen.c	FUNCTION_15	IF_1
0x400057f	            0x7719	                            ja 0x400059a	       221	pen.c	FUNCTION_15	IF_1
0x4000581	          0x4863c6	                         movsxd rax, esi	       221	pen.c	FUNCTION_15	IF_1
0x4000584	        0x488d0487	                  lea rax, [rdi + rax*4]	       221	pen.c	FUNCTION_15	IF_1
0x4000588	            0x8b12	                    mov edx, dword [rdx]	       223	pen.c	FUNCTION_15	IF_1
0x400058a	    0x899030010000	            mov dword [rax + 0x130], edx	       223	pen.c	FUNCTION_15	IF_1
0x4000590	          0x83c601	                              add esi, 1	       224	pen.c	FUNCTION_15	IF_1
0x4000593	    0x4088b0330100	             mov byte [rax + 0x133], sil	       224	pen.c	FUNCTION_15	IF_1
0x400059a	            0xf3c3	                                     ret	       224	pen.c	FUNCTION_15	IF_1
setpenattr_int	FOR,0:CALL,1:WHILE,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	14
0x4000242	        0x4883ec18	                           sub rsp, 0x18	       130	pen.c	FUNCTION_6
0x4000246	    0x64488b042528	                mov rax, qword fs:[0x28]	       130	pen.c	FUNCTION_6
0x400024f	      0x4889442408	                mov qword [rsp + 8], rax	       130	pen.c	FUNCTION_6
0x4000254	            0x31c0	                            xor eax, eax	       130	pen.c	FUNCTION_6
0x4000256	          0x891424	                    mov dword [rsp], edx	       132	pen.c	FUNCTION_6
0x4000259	          0x4889e1	                            mov rcx, rsp	       133	pen.c	FUNCTION_6	CALL_1
0x400025c	      0xba02000000	                              mov edx, 2	       133	pen.c	FUNCTION_6	CALL_1
0x4000261	      0xe873ffffff	                     call sym.setpenattr	       133	pen.c	FUNCTION_6	CALL_1
0x4000266	      0x488b442408	                mov rax, qword [rsp + 8]	       134	pen.c	FUNCTION_6
0x400026b	    0x644833042528	                xor rax, qword fs:[0x28]	       134	pen.c	FUNCTION_6
0x4000274	            0x7405	                            je 0x400027b	       134	pen.c	FUNCTION_6
0x4000276	      0xe800000000	                          call 0x400027b	       134	pen.c	FUNCTION_6
0x400027b	        0x4883c418	                           add rsp, 0x18	       134	pen.c	FUNCTION_6
0x400027f	              0xc3	                                     ret	       134	pen.c	FUNCTION_6
setpenattr_col	FOR,0:CALL,1:WHILE,0:SWITCH,0:IF,0:ELSE,0:DO,0:functions,0	14
0x4000280	        0x4883ec18	                           sub rsp, 0x18	       137	pen.c	FUNCTION_7
0x4000284	    0x64488b042528	                mov rax, qword fs:[0x28]	       137	pen.c	FUNCTION_7
0x400028d	      0x4889442408	                mov qword [rsp + 8], rax	       137	pen.c	FUNCTION_7
0x4000292	            0x31c0	                            xor eax, eax	       137	pen.c	FUNCTION_7
0x4000294	          0x891424	                    mov dword [rsp], edx	       139	pen.c	FUNCTION_7
0x4000297	          0x4889e1	                            mov rcx, rsp	       140	pen.c	FUNCTION_7	CALL_1
0x400029a	      0xba04000000	                              mov edx, 4	       140	pen.c	FUNCTION_7	CALL_1
0x400029f	      0xe835ffffff	                     call sym.setpenattr	       140	pen.c	FUNCTION_7	CALL_1
0x40002a4	      0x488b442408	                mov rax, qword [rsp + 8]	       141	pen.c	FUNCTION_7
0x40002a9	    0x644833042528	                xor rax, qword fs:[0x28]	       141	pen.c	FUNCTION_7
0x40002b2	            0x7405	                            je 0x40002b9	       141	pen.c	FUNCTION_7
0x40002b4	      0xe800000000	                          call 0x40002b9	       141	pen.c	FUNCTION_7
0x40002b9	        0x4883c418	                           add rsp, 0x18	       141	pen.c	FUNCTION_7
0x40002bd	              0xc3	                                     ret	       141	pen.c	FUNCTION_7
